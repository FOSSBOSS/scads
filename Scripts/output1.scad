// Generated by img2scad.py
union() {
  translate([0, 0, 0])
    cube([1, 1, 1.33]);
  translate([1, 0, 0])
    cube([1, 1, 1.33]);
  translate([2, 0, 0])
    cube([1, 1, 1.33]);
  translate([3, 0, 0])
    cube([1, 1, 1.37]);
  translate([4, 0, 0])
    cube([1, 1, 1.33]);
  translate([5, 0, 0])
    cube([1, 1, 1.33]);
  translate([6, 0, 0])
    cube([1, 1, 1.33]);
  translate([7, 0, 0])
    cube([1, 1, 1.33]);
  translate([8, 0, 0])
    cube([1, 1, 1.33]);
  translate([9, 0, 0])
    cube([1, 1, 1.33]);
  translate([10, 0, 0])
    cube([1, 1, 1.33]);
  translate([11, 0, 0])
    cube([1, 1, 1.33]);
  translate([12, 0, 0])
    cube([1, 1, 1.33]);
  translate([13, 0, 0])
    cube([1, 1, 1.33]);
  translate([14, 0, 0])
    cube([1, 1, 1.33]);
  translate([15, 0, 0])
    cube([1, 1, 1.33]);
  translate([16, 0, 0])
    cube([1, 1, 1.33]);
  translate([17, 0, 0])
    cube([1, 1, 1.33]);
  translate([18, 0, 0])
    cube([1, 1, 1.33]);
  translate([19, 0, 0])
    cube([1, 1, 1.33]);
  translate([20, 0, 0])
    cube([1, 1, 1.33]);
  translate([21, 0, 0])
    cube([1, 1, 1.33]);
  translate([22, 0, 0])
    cube([1, 1, 1.33]);
  translate([23, 0, 0])
    cube([1, 1, 1.33]);
  translate([24, 0, 0])
    cube([1, 1, 1.33]);
  translate([25, 0, 0])
    cube([1, 1, 1.33]);
  translate([26, 0, 0])
    cube([1, 1, 1.33]);
  translate([27, 0, 0])
    cube([1, 1, 1.33]);
  translate([28, 0, 0])
    cube([1, 1, 1.33]);
  translate([29, 0, 0])
    cube([1, 1, 1.33]);
  translate([30, 0, 0])
    cube([1, 1, 1.33]);
  translate([31, 0, 0])
    cube([1, 1, 1.33]);
  translate([32, 0, 0])
    cube([1, 1, 1.33]);
  translate([33, 0, 0])
    cube([1, 1, 1.33]);
  translate([34, 0, 0])
    cube([1, 1, 1.33]);
  translate([35, 0, 0])
    cube([1, 1, 1.33]);
  translate([36, 0, 0])
    cube([1, 1, 1.33]);
  translate([37, 0, 0])
    cube([1, 1, 1.33]);
  translate([38, 0, 0])
    cube([1, 1, 1.33]);
  translate([39, 0, 0])
    cube([1, 1, 1.33]);
  translate([40, 0, 0])
    cube([1, 1, 1.33]);
  translate([41, 0, 0])
    cube([1, 1, 1.33]);
  translate([42, 0, 0])
    cube([1, 1, 1.33]);
  translate([43, 0, 0])
    cube([1, 1, 1.33]);
  translate([44, 0, 0])
    cube([1, 1, 1.33]);
  translate([45, 0, 0])
    cube([1, 1, 1.33]);
  translate([46, 0, 0])
    cube([1, 1, 1.33]);
  translate([47, 0, 0])
    cube([1, 1, 1.33]);
  translate([48, 0, 0])
    cube([1, 1, 1.33]);
  translate([49, 0, 0])
    cube([1, 1, 1.33]);
  translate([50, 0, 0])
    cube([1, 1, 1.33]);
  translate([51, 0, 0])
    cube([1, 1, 1.33]);
  translate([52, 0, 0])
    cube([1, 1, 1.25]);
  translate([53, 0, 0])
    cube([1, 1, 1.33]);
  translate([54, 0, 0])
    cube([1, 1, 1.29]);
  translate([55, 0, 0])
    cube([1, 1, 1.33]);
  translate([56, 0, 0])
    cube([1, 1, 1.29]);
  translate([57, 0, 0])
    cube([1, 1, 1.33]);
  translate([58, 0, 0])
    cube([1, 1, 1.33]);
  translate([59, 0, 0])
    cube([1, 1, 1.29]);
  translate([60, 0, 0])
    cube([1, 1, 1.33]);
  translate([61, 0, 0])
    cube([1, 1, 1.29]);
  translate([62, 0, 0])
    cube([1, 1, 1.33]);
  translate([63, 0, 0])
    cube([1, 1, 1.33]);
  translate([64, 0, 0])
    cube([1, 1, 1.29]);
  translate([65, 0, 0])
    cube([1, 1, 1.29]);
  translate([66, 0, 0])
    cube([1, 1, 1.29]);
  translate([67, 0, 0])
    cube([1, 1, 1.29]);
  translate([68, 0, 0])
    cube([1, 1, 1.29]);
  translate([69, 0, 0])
    cube([1, 1, 1.29]);
  translate([70, 0, 0])
    cube([1, 1, 1.29]);
  translate([71, 0, 0])
    cube([1, 1, 1.29]);
  translate([72, 0, 0])
    cube([1, 1, 1.29]);
  translate([73, 0, 0])
    cube([1, 1, 1.29]);
  translate([74, 0, 0])
    cube([1, 1, 1.29]);
  translate([75, 0, 0])
    cube([1, 1, 1.29]);
  translate([76, 0, 0])
    cube([1, 1, 1.29]);
  translate([77, 0, 0])
    cube([1, 1, 1.29]);
  translate([78, 0, 0])
    cube([1, 1, 1.29]);
  translate([79, 0, 0])
    cube([1, 1, 1.29]);
  translate([80, 0, 0])
    cube([1, 1, 1.29]);
  translate([81, 0, 0])
    cube([1, 1, 1.29]);
  translate([82, 0, 0])
    cube([1, 1, 1.29]);
  translate([83, 0, 0])
    cube([1, 1, 1.29]);
  translate([84, 0, 0])
    cube([1, 1, 1.29]);
  translate([85, 0, 0])
    cube([1, 1, 1.29]);
  translate([86, 0, 0])
    cube([1, 1, 1.29]);
  translate([87, 0, 0])
    cube([1, 1, 1.29]);
  translate([88, 0, 0])
    cube([1, 1, 1.29]);
  translate([89, 0, 0])
    cube([1, 1, 1.25]);
  translate([90, 0, 0])
    cube([1, 1, 1.25]);
  translate([91, 0, 0])
    cube([1, 1, 1.29]);
  translate([92, 0, 0])
    cube([1, 1, 1.29]);
  translate([93, 0, 0])
    cube([1, 1, 1.29]);
  translate([94, 0, 0])
    cube([1, 1, 1.25]);
  translate([95, 0, 0])
    cube([1, 1, 1.25]);
  translate([96, 0, 0])
    cube([1, 1, 1.25]);
  translate([97, 0, 0])
    cube([1, 1, 1.25]);
  translate([98, 0, 0])
    cube([1, 1, 1.25]);
  translate([99, 0, 0])
    cube([1, 1, 1.25]);
  translate([100, 0, 0])
    cube([1, 1, 1.25]);
  translate([101, 0, 0])
    cube([1, 1, 1.25]);
  translate([102, 0, 0])
    cube([1, 1, 1.25]);
  translate([103, 0, 0])
    cube([1, 1, 1.25]);
  translate([104, 0, 0])
    cube([1, 1, 1.25]);
  translate([105, 0, 0])
    cube([1, 1, 1.25]);
  translate([106, 0, 0])
    cube([1, 1, 1.25]);
  translate([107, 0, 0])
    cube([1, 1, 1.25]);
  translate([108, 0, 0])
    cube([1, 1, 1.25]);
  translate([109, 0, 0])
    cube([1, 1, 1.25]);
  translate([110, 0, 0])
    cube([1, 1, 1.25]);
  translate([111, 0, 0])
    cube([1, 1, 1.25]);
  translate([112, 0, 0])
    cube([1, 1, 1.25]);
  translate([113, 0, 0])
    cube([1, 1, 1.25]);
  translate([114, 0, 0])
    cube([1, 1, 1.25]);
  translate([115, 0, 0])
    cube([1, 1, 1.25]);
  translate([116, 0, 0])
    cube([1, 1, 1.25]);
  translate([117, 0, 0])
    cube([1, 1, 1.25]);
  translate([118, 0, 0])
    cube([1, 1, 1.25]);
  translate([119, 0, 0])
    cube([1, 1, 1.25]);
  translate([120, 0, 0])
    cube([1, 1, 1.25]);
  translate([121, 0, 0])
    cube([1, 1, 1.25]);
  translate([122, 0, 0])
    cube([1, 1, 1.25]);
  translate([123, 0, 0])
    cube([1, 1, 1.25]);
  translate([124, 0, 0])
    cube([1, 1, 1.25]);
  translate([125, 0, 0])
    cube([1, 1, 1.25]);
  translate([126, 0, 0])
    cube([1, 1, 1.25]);
  translate([127, 0, 0])
    cube([1, 1, 1.25]);
  translate([128, 0, 0])
    cube([1, 1, 1.25]);
  translate([129, 0, 0])
    cube([1, 1, 1.25]);
  translate([130, 0, 0])
    cube([1, 1, 1.25]);
  translate([131, 0, 0])
    cube([1, 1, 1.25]);
  translate([132, 0, 0])
    cube([1, 1, 1.25]);
  translate([133, 0, 0])
    cube([1, 1, 1.25]);
  translate([134, 0, 0])
    cube([1, 1, 1.25]);
  translate([135, 0, 0])
    cube([1, 1, 1.25]);
  translate([136, 0, 0])
    cube([1, 1, 1.25]);
  translate([137, 0, 0])
    cube([1, 1, 1.25]);
  translate([138, 0, 0])
    cube([1, 1, 1.25]);
  translate([139, 0, 0])
    cube([1, 1, 1.25]);
  translate([140, 0, 0])
    cube([1, 1, 1.25]);
  translate([141, 0, 0])
    cube([1, 1, 1.25]);
  translate([142, 0, 0])
    cube([1, 1, 1.25]);
  translate([143, 0, 0])
    cube([1, 1, 1.25]);
  translate([144, 0, 0])
    cube([1, 1, 1.25]);
  translate([145, 0, 0])
    cube([1, 1, 1.25]);
  translate([146, 0, 0])
    cube([1, 1, 1.25]);
  translate([147, 0, 0])
    cube([1, 1, 1.25]);
  translate([148, 0, 0])
    cube([1, 1, 1.25]);
  translate([149, 0, 0])
    cube([1, 1, 1.25]);
  translate([150, 0, 0])
    cube([1, 1, 1.25]);
  translate([151, 0, 0])
    cube([1, 1, 1.25]);
  translate([152, 0, 0])
    cube([1, 1, 1.25]);
  translate([153, 0, 0])
    cube([1, 1, 1.25]);
  translate([154, 0, 0])
    cube([1, 1, 1.25]);
  translate([155, 0, 0])
    cube([1, 1, 1.25]);
  translate([156, 0, 0])
    cube([1, 1, 1.25]);
  translate([157, 0, 0])
    cube([1, 1, 1.25]);
  translate([158, 0, 0])
    cube([1, 1, 1.25]);
  translate([159, 0, 0])
    cube([1, 1, 1.25]);
  translate([160, 0, 0])
    cube([1, 1, 1.25]);
  translate([161, 0, 0])
    cube([1, 1, 1.25]);
  translate([162, 0, 0])
    cube([1, 1, 1.25]);
  translate([163, 0, 0])
    cube([1, 1, 1.25]);
  translate([164, 0, 0])
    cube([1, 1, 1.25]);
  translate([165, 0, 0])
    cube([1, 1, 1.25]);
  translate([166, 0, 0])
    cube([1, 1, 1.25]);
  translate([167, 0, 0])
    cube([1, 1, 1.25]);
  translate([168, 0, 0])
    cube([1, 1, 1.25]);
  translate([169, 0, 0])
    cube([1, 1, 1.25]);
  translate([170, 0, 0])
    cube([1, 1, 1.25]);
  translate([171, 0, 0])
    cube([1, 1, 1.25]);
  translate([172, 0, 0])
    cube([1, 1, 1.25]);
  translate([173, 0, 0])
    cube([1, 1, 1.25]);
  translate([174, 0, 0])
    cube([1, 1, 1.25]);
  translate([175, 0, 0])
    cube([1, 1, 1.25]);
  translate([176, 0, 0])
    cube([1, 1, 1.25]);
  translate([177, 0, 0])
    cube([1, 1, 1.25]);
  translate([178, 0, 0])
    cube([1, 1, 1.25]);
  translate([179, 0, 0])
    cube([1, 1, 1.25]);
  translate([180, 0, 0])
    cube([1, 1, 1.25]);
  translate([181, 0, 0])
    cube([1, 1, 1.25]);
  translate([182, 0, 0])
    cube([1, 1, 1.25]);
  translate([183, 0, 0])
    cube([1, 1, 1.25]);
  translate([184, 0, 0])
    cube([1, 1, 1.25]);
  translate([185, 0, 0])
    cube([1, 1, 1.25]);
  translate([186, 0, 0])
    cube([1, 1, 1.25]);
  translate([187, 0, 0])
    cube([1, 1, 1.25]);
  translate([188, 0, 0])
    cube([1, 1, 1.25]);
  translate([189, 0, 0])
    cube([1, 1, 1.25]);
  translate([190, 0, 0])
    cube([1, 1, 1.25]);
  translate([191, 0, 0])
    cube([1, 1, 1.25]);
  translate([192, 0, 0])
    cube([1, 1, 1.25]);
  translate([193, 0, 0])
    cube([1, 1, 1.25]);
  translate([194, 0, 0])
    cube([1, 1, 1.25]);
  translate([195, 0, 0])
    cube([1, 1, 1.25]);
  translate([196, 0, 0])
    cube([1, 1, 1.25]);
  translate([197, 0, 0])
    cube([1, 1, 1.25]);
  translate([198, 0, 0])
    cube([1, 1, 1.25]);
  translate([199, 0, 0])
    cube([1, 1, 1.25]);
  translate([200, 0, 0])
    cube([1, 1, 1.25]);
  translate([201, 0, 0])
    cube([1, 1, 1.25]);
  translate([202, 0, 0])
    cube([1, 1, 1.25]);
  translate([203, 0, 0])
    cube([1, 1, 1.25]);
  translate([204, 0, 0])
    cube([1, 1, 1.25]);
  translate([205, 0, 0])
    cube([1, 1, 1.25]);
  translate([206, 0, 0])
    cube([1, 1, 1.25]);
  translate([207, 0, 0])
    cube([1, 1, 1.25]);
  translate([208, 0, 0])
    cube([1, 1, 1.25]);
  translate([209, 0, 0])
    cube([1, 1, 1.25]);
  translate([210, 0, 0])
    cube([1, 1, 1.25]);
  translate([211, 0, 0])
    cube([1, 1, 1.25]);
  translate([212, 0, 0])
    cube([1, 1, 1.25]);
  translate([213, 0, 0])
    cube([1, 1, 1.25]);
  translate([214, 0, 0])
    cube([1, 1, 1.25]);
  translate([215, 0, 0])
    cube([1, 1, 1.25]);
  translate([216, 0, 0])
    cube([1, 1, 1.25]);
  translate([217, 0, 0])
    cube([1, 1, 1.25]);
  translate([218, 0, 0])
    cube([1, 1, 1.25]);
  translate([219, 0, 0])
    cube([1, 1, 1.25]);
  translate([220, 0, 0])
    cube([1, 1, 1.25]);
  translate([221, 0, 0])
    cube([1, 1, 1.25]);
  translate([222, 0, 0])
    cube([1, 1, 1.25]);
  translate([223, 0, 0])
    cube([1, 1, 1.25]);
  translate([224, 0, 0])
    cube([1, 1, 1.25]);
  translate([225, 0, 0])
    cube([1, 1, 1.25]);
  translate([226, 0, 0])
    cube([1, 1, 1.25]);
  translate([227, 0, 0])
    cube([1, 1, 1.25]);
  translate([228, 0, 0])
    cube([1, 1, 1.25]);
  translate([229, 0, 0])
    cube([1, 1, 1.25]);
  translate([230, 0, 0])
    cube([1, 1, 1.25]);
  translate([231, 0, 0])
    cube([1, 1, 1.25]);
  translate([232, 0, 0])
    cube([1, 1, 1.25]);
  translate([233, 0, 0])
    cube([1, 1, 1.25]);
  translate([234, 0, 0])
    cube([1, 1, 1.25]);
  translate([235, 0, 0])
    cube([1, 1, 1.25]);
  translate([236, 0, 0])
    cube([1, 1, 1.25]);
  translate([237, 0, 0])
    cube([1, 1, 1.25]);
  translate([238, 0, 0])
    cube([1, 1, 1.25]);
  translate([239, 0, 0])
    cube([1, 1, 1.25]);
  translate([240, 0, 0])
    cube([1, 1, 1.25]);
  translate([241, 0, 0])
    cube([1, 1, 1.25]);
  translate([242, 0, 0])
    cube([1, 1, 1.25]);
  translate([243, 0, 0])
    cube([1, 1, 1.25]);
  translate([244, 0, 0])
    cube([1, 1, 1.25]);
  translate([245, 0, 0])
    cube([1, 1, 1.25]);
  translate([246, 0, 0])
    cube([1, 1, 1.25]);
  translate([0, 1, 0])
    cube([1, 1, 1.33]);
  translate([1, 1, 0])
    cube([1, 1, 1.33]);
  translate([2, 1, 0])
    cube([1, 1, 1.33]);
  translate([3, 1, 0])
    cube([1, 1, 1.33]);
  translate([4, 1, 0])
    cube([1, 1, 1.33]);
  translate([5, 1, 0])
    cube([1, 1, 1.33]);
  translate([6, 1, 0])
    cube([1, 1, 1.33]);
  translate([7, 1, 0])
    cube([1, 1, 1.33]);
  translate([8, 1, 0])
    cube([1, 1, 1.33]);
  translate([9, 1, 0])
    cube([1, 1, 1.33]);
  translate([10, 1, 0])
    cube([1, 1, 1.33]);
  translate([11, 1, 0])
    cube([1, 1, 1.33]);
  translate([12, 1, 0])
    cube([1, 1, 1.33]);
  translate([13, 1, 0])
    cube([1, 1, 1.33]);
  translate([14, 1, 0])
    cube([1, 1, 1.33]);
  translate([15, 1, 0])
    cube([1, 1, 1.33]);
  translate([16, 1, 0])
    cube([1, 1, 1.33]);
  translate([17, 1, 0])
    cube([1, 1, 1.33]);
  translate([18, 1, 0])
    cube([1, 1, 1.33]);
  translate([19, 1, 0])
    cube([1, 1, 1.33]);
  translate([20, 1, 0])
    cube([1, 1, 1.33]);
  translate([21, 1, 0])
    cube([1, 1, 1.33]);
  translate([22, 1, 0])
    cube([1, 1, 1.33]);
  translate([23, 1, 0])
    cube([1, 1, 1.33]);
  translate([24, 1, 0])
    cube([1, 1, 1.33]);
  translate([25, 1, 0])
    cube([1, 1, 1.33]);
  translate([26, 1, 0])
    cube([1, 1, 1.33]);
  translate([27, 1, 0])
    cube([1, 1, 1.33]);
  translate([28, 1, 0])
    cube([1, 1, 1.33]);
  translate([29, 1, 0])
    cube([1, 1, 1.33]);
  translate([30, 1, 0])
    cube([1, 1, 1.33]);
  translate([31, 1, 0])
    cube([1, 1, 1.33]);
  translate([32, 1, 0])
    cube([1, 1, 1.33]);
  translate([33, 1, 0])
    cube([1, 1, 1.33]);
  translate([34, 1, 0])
    cube([1, 1, 1.33]);
  translate([35, 1, 0])
    cube([1, 1, 1.33]);
  translate([36, 1, 0])
    cube([1, 1, 1.33]);
  translate([37, 1, 0])
    cube([1, 1, 1.33]);
  translate([38, 1, 0])
    cube([1, 1, 1.33]);
  translate([39, 1, 0])
    cube([1, 1, 1.33]);
  translate([40, 1, 0])
    cube([1, 1, 1.33]);
  translate([41, 1, 0])
    cube([1, 1, 1.33]);
  translate([42, 1, 0])
    cube([1, 1, 1.33]);
  translate([43, 1, 0])
    cube([1, 1, 1.33]);
  translate([44, 1, 0])
    cube([1, 1, 1.33]);
  translate([45, 1, 0])
    cube([1, 1, 1.33]);
  translate([46, 1, 0])
    cube([1, 1, 1.33]);
  translate([47, 1, 0])
    cube([1, 1, 1.33]);
  translate([48, 1, 0])
    cube([1, 1, 1.29]);
  translate([49, 1, 0])
    cube([1, 1, 1.33]);
  translate([50, 1, 0])
    cube([1, 1, 1.33]);
  translate([51, 1, 0])
    cube([1, 1, 1.33]);
  translate([52, 1, 0])
    cube([1, 1, 1.25]);
  translate([53, 1, 0])
    cube([1, 1, 1.33]);
  translate([54, 1, 0])
    cube([1, 1, 1.29]);
  translate([55, 1, 0])
    cube([1, 1, 1.33]);
  translate([56, 1, 0])
    cube([1, 1, 1.29]);
  translate([57, 1, 0])
    cube([1, 1, 1.33]);
  translate([58, 1, 0])
    cube([1, 1, 1.33]);
  translate([59, 1, 0])
    cube([1, 1, 1.29]);
  translate([60, 1, 0])
    cube([1, 1, 1.25]);
  translate([61, 1, 0])
    cube([1, 1, 1.33]);
  translate([62, 1, 0])
    cube([1, 1, 1.33]);
  translate([63, 1, 0])
    cube([1, 1, 1.33]);
  translate([64, 1, 0])
    cube([1, 1, 1.29]);
  translate([65, 1, 0])
    cube([1, 1, 1.29]);
  translate([66, 1, 0])
    cube([1, 1, 1.29]);
  translate([67, 1, 0])
    cube([1, 1, 1.29]);
  translate([68, 1, 0])
    cube([1, 1, 1.33]);
  translate([69, 1, 0])
    cube([1, 1, 1.33]);
  translate([70, 1, 0])
    cube([1, 1, 1.29]);
  translate([71, 1, 0])
    cube([1, 1, 1.29]);
  translate([72, 1, 0])
    cube([1, 1, 1.29]);
  translate([73, 1, 0])
    cube([1, 1, 1.29]);
  translate([74, 1, 0])
    cube([1, 1, 1.29]);
  translate([75, 1, 0])
    cube([1, 1, 1.29]);
  translate([76, 1, 0])
    cube([1, 1, 1.29]);
  translate([77, 1, 0])
    cube([1, 1, 1.29]);
  translate([78, 1, 0])
    cube([1, 1, 1.29]);
  translate([79, 1, 0])
    cube([1, 1, 1.29]);
  translate([80, 1, 0])
    cube([1, 1, 1.29]);
  translate([81, 1, 0])
    cube([1, 1, 1.29]);
  translate([82, 1, 0])
    cube([1, 1, 1.29]);
  translate([83, 1, 0])
    cube([1, 1, 1.29]);
  translate([84, 1, 0])
    cube([1, 1, 1.29]);
  translate([85, 1, 0])
    cube([1, 1, 1.29]);
  translate([86, 1, 0])
    cube([1, 1, 1.29]);
  translate([87, 1, 0])
    cube([1, 1, 1.29]);
  translate([88, 1, 0])
    cube([1, 1, 1.29]);
  translate([89, 1, 0])
    cube([1, 1, 1.29]);
  translate([90, 1, 0])
    cube([1, 1, 1.29]);
  translate([91, 1, 0])
    cube([1, 1, 1.29]);
  translate([92, 1, 0])
    cube([1, 1, 1.29]);
  translate([93, 1, 0])
    cube([1, 1, 1.29]);
  translate([94, 1, 0])
    cube([1, 1, 1.25]);
  translate([95, 1, 0])
    cube([1, 1, 1.25]);
  translate([96, 1, 0])
    cube([1, 1, 1.25]);
  translate([97, 1, 0])
    cube([1, 1, 1.25]);
  translate([98, 1, 0])
    cube([1, 1, 1.25]);
  translate([99, 1, 0])
    cube([1, 1, 1.25]);
  translate([100, 1, 0])
    cube([1, 1, 1.25]);
  translate([101, 1, 0])
    cube([1, 1, 1.25]);
  translate([102, 1, 0])
    cube([1, 1, 1.25]);
  translate([103, 1, 0])
    cube([1, 1, 1.25]);
  translate([104, 1, 0])
    cube([1, 1, 1.25]);
  translate([105, 1, 0])
    cube([1, 1, 1.25]);
  translate([106, 1, 0])
    cube([1, 1, 1.25]);
  translate([107, 1, 0])
    cube([1, 1, 1.25]);
  translate([108, 1, 0])
    cube([1, 1, 1.25]);
  translate([109, 1, 0])
    cube([1, 1, 1.25]);
  translate([110, 1, 0])
    cube([1, 1, 1.25]);
  translate([111, 1, 0])
    cube([1, 1, 1.25]);
  translate([112, 1, 0])
    cube([1, 1, 1.25]);
  translate([113, 1, 0])
    cube([1, 1, 1.25]);
  translate([114, 1, 0])
    cube([1, 1, 1.25]);
  translate([115, 1, 0])
    cube([1, 1, 1.25]);
  translate([116, 1, 0])
    cube([1, 1, 1.25]);
  translate([117, 1, 0])
    cube([1, 1, 1.25]);
  translate([118, 1, 0])
    cube([1, 1, 1.25]);
  translate([119, 1, 0])
    cube([1, 1, 1.25]);
  translate([120, 1, 0])
    cube([1, 1, 1.25]);
  translate([121, 1, 0])
    cube([1, 1, 1.25]);
  translate([122, 1, 0])
    cube([1, 1, 1.25]);
  translate([123, 1, 0])
    cube([1, 1, 1.25]);
  translate([124, 1, 0])
    cube([1, 1, 1.25]);
  translate([125, 1, 0])
    cube([1, 1, 1.25]);
  translate([126, 1, 0])
    cube([1, 1, 1.25]);
  translate([127, 1, 0])
    cube([1, 1, 1.25]);
  translate([128, 1, 0])
    cube([1, 1, 1.25]);
  translate([129, 1, 0])
    cube([1, 1, 1.25]);
  translate([130, 1, 0])
    cube([1, 1, 1.25]);
  translate([131, 1, 0])
    cube([1, 1, 1.25]);
  translate([132, 1, 0])
    cube([1, 1, 1.25]);
  translate([133, 1, 0])
    cube([1, 1, 1.25]);
  translate([134, 1, 0])
    cube([1, 1, 1.25]);
  translate([135, 1, 0])
    cube([1, 1, 1.25]);
  translate([136, 1, 0])
    cube([1, 1, 1.25]);
  translate([137, 1, 0])
    cube([1, 1, 1.25]);
  translate([138, 1, 0])
    cube([1, 1, 1.25]);
  translate([139, 1, 0])
    cube([1, 1, 1.25]);
  translate([140, 1, 0])
    cube([1, 1, 1.25]);
  translate([141, 1, 0])
    cube([1, 1, 1.25]);
  translate([142, 1, 0])
    cube([1, 1, 1.25]);
  translate([143, 1, 0])
    cube([1, 1, 1.25]);
  translate([144, 1, 0])
    cube([1, 1, 1.25]);
  translate([145, 1, 0])
    cube([1, 1, 1.25]);
  translate([146, 1, 0])
    cube([1, 1, 1.25]);
  translate([147, 1, 0])
    cube([1, 1, 1.25]);
  translate([148, 1, 0])
    cube([1, 1, 1.25]);
  translate([149, 1, 0])
    cube([1, 1, 1.25]);
  translate([150, 1, 0])
    cube([1, 1, 1.25]);
  translate([151, 1, 0])
    cube([1, 1, 1.25]);
  translate([152, 1, 0])
    cube([1, 1, 1.25]);
  translate([153, 1, 0])
    cube([1, 1, 1.25]);
  translate([154, 1, 0])
    cube([1, 1, 1.25]);
  translate([155, 1, 0])
    cube([1, 1, 1.25]);
  translate([156, 1, 0])
    cube([1, 1, 1.25]);
  translate([157, 1, 0])
    cube([1, 1, 1.25]);
  translate([158, 1, 0])
    cube([1, 1, 1.25]);
  translate([159, 1, 0])
    cube([1, 1, 1.25]);
  translate([160, 1, 0])
    cube([1, 1, 1.25]);
  translate([161, 1, 0])
    cube([1, 1, 1.25]);
  translate([162, 1, 0])
    cube([1, 1, 1.25]);
  translate([163, 1, 0])
    cube([1, 1, 1.25]);
  translate([164, 1, 0])
    cube([1, 1, 1.25]);
  translate([165, 1, 0])
    cube([1, 1, 1.25]);
  translate([166, 1, 0])
    cube([1, 1, 1.25]);
  translate([167, 1, 0])
    cube([1, 1, 1.25]);
  translate([168, 1, 0])
    cube([1, 1, 1.25]);
  translate([169, 1, 0])
    cube([1, 1, 1.25]);
  translate([170, 1, 0])
    cube([1, 1, 1.25]);
  translate([171, 1, 0])
    cube([1, 1, 1.25]);
  translate([172, 1, 0])
    cube([1, 1, 1.25]);
  translate([173, 1, 0])
    cube([1, 1, 1.25]);
  translate([174, 1, 0])
    cube([1, 1, 1.25]);
  translate([175, 1, 0])
    cube([1, 1, 1.25]);
  translate([176, 1, 0])
    cube([1, 1, 1.25]);
  translate([177, 1, 0])
    cube([1, 1, 1.25]);
  translate([178, 1, 0])
    cube([1, 1, 1.25]);
  translate([179, 1, 0])
    cube([1, 1, 1.25]);
  translate([180, 1, 0])
    cube([1, 1, 1.25]);
  translate([181, 1, 0])
    cube([1, 1, 1.25]);
  translate([182, 1, 0])
    cube([1, 1, 1.25]);
  translate([183, 1, 0])
    cube([1, 1, 1.25]);
  translate([184, 1, 0])
    cube([1, 1, 1.25]);
  translate([185, 1, 0])
    cube([1, 1, 1.25]);
  translate([186, 1, 0])
    cube([1, 1, 1.25]);
  translate([187, 1, 0])
    cube([1, 1, 1.25]);
  translate([188, 1, 0])
    cube([1, 1, 1.25]);
  translate([189, 1, 0])
    cube([1, 1, 1.25]);
  translate([190, 1, 0])
    cube([1, 1, 1.25]);
  translate([191, 1, 0])
    cube([1, 1, 1.25]);
  translate([192, 1, 0])
    cube([1, 1, 1.25]);
  translate([193, 1, 0])
    cube([1, 1, 1.25]);
  translate([194, 1, 0])
    cube([1, 1, 1.25]);
  translate([195, 1, 0])
    cube([1, 1, 1.25]);
  translate([196, 1, 0])
    cube([1, 1, 1.25]);
  translate([197, 1, 0])
    cube([1, 1, 1.25]);
  translate([198, 1, 0])
    cube([1, 1, 1.25]);
  translate([199, 1, 0])
    cube([1, 1, 1.25]);
  translate([200, 1, 0])
    cube([1, 1, 1.25]);
  translate([201, 1, 0])
    cube([1, 1, 1.25]);
  translate([202, 1, 0])
    cube([1, 1, 1.25]);
  translate([203, 1, 0])
    cube([1, 1, 1.25]);
  translate([204, 1, 0])
    cube([1, 1, 1.25]);
  translate([205, 1, 0])
    cube([1, 1, 1.25]);
  translate([206, 1, 0])
    cube([1, 1, 1.25]);
  translate([207, 1, 0])
    cube([1, 1, 1.25]);
  translate([208, 1, 0])
    cube([1, 1, 1.25]);
  translate([209, 1, 0])
    cube([1, 1, 1.25]);
  translate([210, 1, 0])
    cube([1, 1, 1.25]);
  translate([211, 1, 0])
    cube([1, 1, 1.25]);
  translate([212, 1, 0])
    cube([1, 1, 1.25]);
  translate([213, 1, 0])
    cube([1, 1, 1.25]);
  translate([214, 1, 0])
    cube([1, 1, 1.25]);
  translate([215, 1, 0])
    cube([1, 1, 1.25]);
  translate([216, 1, 0])
    cube([1, 1, 1.25]);
  translate([217, 1, 0])
    cube([1, 1, 1.25]);
  translate([218, 1, 0])
    cube([1, 1, 1.25]);
  translate([219, 1, 0])
    cube([1, 1, 1.25]);
  translate([220, 1, 0])
    cube([1, 1, 1.25]);
  translate([221, 1, 0])
    cube([1, 1, 1.25]);
  translate([222, 1, 0])
    cube([1, 1, 1.25]);
  translate([223, 1, 0])
    cube([1, 1, 1.25]);
  translate([224, 1, 0])
    cube([1, 1, 1.25]);
  translate([225, 1, 0])
    cube([1, 1, 1.25]);
  translate([226, 1, 0])
    cube([1, 1, 1.25]);
  translate([227, 1, 0])
    cube([1, 1, 1.25]);
  translate([228, 1, 0])
    cube([1, 1, 1.25]);
  translate([229, 1, 0])
    cube([1, 1, 1.25]);
  translate([230, 1, 0])
    cube([1, 1, 1.25]);
  translate([231, 1, 0])
    cube([1, 1, 1.25]);
  translate([232, 1, 0])
    cube([1, 1, 1.25]);
  translate([233, 1, 0])
    cube([1, 1, 1.25]);
  translate([234, 1, 0])
    cube([1, 1, 1.25]);
  translate([235, 1, 0])
    cube([1, 1, 1.25]);
  translate([236, 1, 0])
    cube([1, 1, 1.25]);
  translate([237, 1, 0])
    cube([1, 1, 1.25]);
  translate([238, 1, 0])
    cube([1, 1, 1.25]);
  translate([239, 1, 0])
    cube([1, 1, 1.25]);
  translate([240, 1, 0])
    cube([1, 1, 1.25]);
  translate([241, 1, 0])
    cube([1, 1, 1.25]);
  translate([242, 1, 0])
    cube([1, 1, 1.25]);
  translate([243, 1, 0])
    cube([1, 1, 1.25]);
  translate([244, 1, 0])
    cube([1, 1, 1.25]);
  translate([245, 1, 0])
    cube([1, 1, 1.25]);
  translate([246, 1, 0])
    cube([1, 1, 1.25]);
  translate([0, 2, 0])
    cube([1, 1, 1.33]);
  translate([1, 2, 0])
    cube([1, 1, 1.33]);
  translate([2, 2, 0])
    cube([1, 1, 1.33]);
  translate([3, 2, 0])
    cube([1, 1, 1.33]);
  translate([4, 2, 0])
    cube([1, 1, 1.33]);
  translate([5, 2, 0])
    cube([1, 1, 1.33]);
  translate([6, 2, 0])
    cube([1, 1, 1.33]);
  translate([7, 2, 0])
    cube([1, 1, 1.33]);
  translate([8, 2, 0])
    cube([1, 1, 1.33]);
  translate([9, 2, 0])
    cube([1, 1, 1.33]);
  translate([10, 2, 0])
    cube([1, 1, 1.33]);
  translate([11, 2, 0])
    cube([1, 1, 1.33]);
  translate([12, 2, 0])
    cube([1, 1, 1.33]);
  translate([13, 2, 0])
    cube([1, 1, 1.33]);
  translate([14, 2, 0])
    cube([1, 1, 1.33]);
  translate([15, 2, 0])
    cube([1, 1, 1.33]);
  translate([16, 2, 0])
    cube([1, 1, 1.33]);
  translate([17, 2, 0])
    cube([1, 1, 1.33]);
  translate([18, 2, 0])
    cube([1, 1, 1.33]);
  translate([19, 2, 0])
    cube([1, 1, 1.33]);
  translate([20, 2, 0])
    cube([1, 1, 1.33]);
  translate([21, 2, 0])
    cube([1, 1, 1.33]);
  translate([22, 2, 0])
    cube([1, 1, 1.33]);
  translate([23, 2, 0])
    cube([1, 1, 1.33]);
  translate([24, 2, 0])
    cube([1, 1, 1.33]);
  translate([25, 2, 0])
    cube([1, 1, 1.33]);
  translate([26, 2, 0])
    cube([1, 1, 1.33]);
  translate([27, 2, 0])
    cube([1, 1, 1.33]);
  translate([28, 2, 0])
    cube([1, 1, 1.33]);
  translate([29, 2, 0])
    cube([1, 1, 1.33]);
  translate([30, 2, 0])
    cube([1, 1, 1.33]);
  translate([31, 2, 0])
    cube([1, 1, 1.33]);
  translate([32, 2, 0])
    cube([1, 1, 1.33]);
  translate([33, 2, 0])
    cube([1, 1, 1.33]);
  translate([34, 2, 0])
    cube([1, 1, 1.33]);
  translate([35, 2, 0])
    cube([1, 1, 1.33]);
  translate([36, 2, 0])
    cube([1, 1, 1.33]);
  translate([37, 2, 0])
    cube([1, 1, 1.33]);
  translate([38, 2, 0])
    cube([1, 1, 1.33]);
  translate([39, 2, 0])
    cube([1, 1, 1.33]);
  translate([40, 2, 0])
    cube([1, 1, 1.33]);
  translate([41, 2, 0])
    cube([1, 1, 1.33]);
  translate([42, 2, 0])
    cube([1, 1, 1.33]);
  translate([43, 2, 0])
    cube([1, 1, 1.33]);
  translate([44, 2, 0])
    cube([1, 1, 1.33]);
  translate([45, 2, 0])
    cube([1, 1, 1.33]);
  translate([46, 2, 0])
    cube([1, 1, 1.33]);
  translate([47, 2, 0])
    cube([1, 1, 1.33]);
  translate([48, 2, 0])
    cube([1, 1, 1.33]);
  translate([49, 2, 0])
    cube([1, 1, 1.33]);
  translate([50, 2, 0])
    cube([1, 1, 1.33]);
  translate([51, 2, 0])
    cube([1, 1, 1.33]);
  translate([52, 2, 0])
    cube([1, 1, 1.29]);
  translate([53, 2, 0])
    cube([1, 1, 1.33]);
  translate([54, 2, 0])
    cube([1, 1, 1.29]);
  translate([55, 2, 0])
    cube([1, 1, 1.33]);
  translate([56, 2, 0])
    cube([1, 1, 1.33]);
  translate([57, 2, 0])
    cube([1, 1, 1.29]);
  translate([58, 2, 0])
    cube([1, 1, 1.29]);
  translate([59, 2, 0])
    cube([1, 1, 1.29]);
  translate([60, 2, 0])
    cube([1, 1, 1.25]);
  translate([61, 2, 0])
    cube([1, 1, 1.29]);
  translate([62, 2, 0])
    cube([1, 1, 1.29]);
  translate([63, 2, 0])
    cube([1, 1, 1.29]);
  translate([64, 2, 0])
    cube([1, 1, 1.29]);
  translate([65, 2, 0])
    cube([1, 1, 1.29]);
  translate([66, 2, 0])
    cube([1, 1, 1.33]);
  translate([67, 2, 0])
    cube([1, 1, 1.29]);
  translate([68, 2, 0])
    cube([1, 1, 1.29]);
  translate([69, 2, 0])
    cube([1, 1, 1.29]);
  translate([70, 2, 0])
    cube([1, 1, 1.29]);
  translate([71, 2, 0])
    cube([1, 1, 1.29]);
  translate([72, 2, 0])
    cube([1, 1, 1.29]);
  translate([73, 2, 0])
    cube([1, 1, 1.29]);
  translate([74, 2, 0])
    cube([1, 1, 1.29]);
  translate([75, 2, 0])
    cube([1, 1, 1.29]);
  translate([76, 2, 0])
    cube([1, 1, 1.29]);
  translate([77, 2, 0])
    cube([1, 1, 1.29]);
  translate([78, 2, 0])
    cube([1, 1, 1.29]);
  translate([79, 2, 0])
    cube([1, 1, 1.29]);
  translate([80, 2, 0])
    cube([1, 1, 1.29]);
  translate([81, 2, 0])
    cube([1, 1, 1.29]);
  translate([82, 2, 0])
    cube([1, 1, 1.29]);
  translate([83, 2, 0])
    cube([1, 1, 1.29]);
  translate([84, 2, 0])
    cube([1, 1, 1.29]);
  translate([85, 2, 0])
    cube([1, 1, 1.29]);
  translate([86, 2, 0])
    cube([1, 1, 1.29]);
  translate([87, 2, 0])
    cube([1, 1, 1.29]);
  translate([88, 2, 0])
    cube([1, 1, 1.29]);
  translate([89, 2, 0])
    cube([1, 1, 1.29]);
  translate([90, 2, 0])
    cube([1, 1, 1.29]);
  translate([91, 2, 0])
    cube([1, 1, 1.25]);
  translate([92, 2, 0])
    cube([1, 1, 1.25]);
  translate([93, 2, 0])
    cube([1, 1, 1.25]);
  translate([94, 2, 0])
    cube([1, 1, 1.25]);
  translate([95, 2, 0])
    cube([1, 1, 1.29]);
  translate([96, 2, 0])
    cube([1, 1, 1.25]);
  translate([97, 2, 0])
    cube([1, 1, 1.25]);
  translate([98, 2, 0])
    cube([1, 1, 1.25]);
  translate([99, 2, 0])
    cube([1, 1, 1.29]);
  translate([100, 2, 0])
    cube([1, 1, 1.25]);
  translate([101, 2, 0])
    cube([1, 1, 1.25]);
  translate([102, 2, 0])
    cube([1, 1, 1.25]);
  translate([103, 2, 0])
    cube([1, 1, 1.25]);
  translate([104, 2, 0])
    cube([1, 1, 1.25]);
  translate([105, 2, 0])
    cube([1, 1, 1.25]);
  translate([106, 2, 0])
    cube([1, 1, 1.25]);
  translate([107, 2, 0])
    cube([1, 1, 1.25]);
  translate([108, 2, 0])
    cube([1, 1, 1.25]);
  translate([109, 2, 0])
    cube([1, 1, 1.25]);
  translate([110, 2, 0])
    cube([1, 1, 1.25]);
  translate([111, 2, 0])
    cube([1, 1, 1.25]);
  translate([112, 2, 0])
    cube([1, 1, 1.25]);
  translate([113, 2, 0])
    cube([1, 1, 1.25]);
  translate([114, 2, 0])
    cube([1, 1, 1.25]);
  translate([115, 2, 0])
    cube([1, 1, 1.25]);
  translate([116, 2, 0])
    cube([1, 1, 1.25]);
  translate([117, 2, 0])
    cube([1, 1, 1.25]);
  translate([118, 2, 0])
    cube([1, 1, 1.25]);
  translate([119, 2, 0])
    cube([1, 1, 1.25]);
  translate([120, 2, 0])
    cube([1, 1, 1.25]);
  translate([121, 2, 0])
    cube([1, 1, 1.25]);
  translate([122, 2, 0])
    cube([1, 1, 1.25]);
  translate([123, 2, 0])
    cube([1, 1, 1.25]);
  translate([124, 2, 0])
    cube([1, 1, 1.25]);
  translate([125, 2, 0])
    cube([1, 1, 1.25]);
  translate([126, 2, 0])
    cube([1, 1, 1.25]);
  translate([127, 2, 0])
    cube([1, 1, 1.25]);
  translate([128, 2, 0])
    cube([1, 1, 1.25]);
  translate([129, 2, 0])
    cube([1, 1, 1.25]);
  translate([130, 2, 0])
    cube([1, 1, 1.25]);
  translate([131, 2, 0])
    cube([1, 1, 1.25]);
  translate([132, 2, 0])
    cube([1, 1, 1.25]);
  translate([133, 2, 0])
    cube([1, 1, 1.25]);
  translate([134, 2, 0])
    cube([1, 1, 1.25]);
  translate([135, 2, 0])
    cube([1, 1, 1.25]);
  translate([136, 2, 0])
    cube([1, 1, 1.25]);
  translate([137, 2, 0])
    cube([1, 1, 1.25]);
  translate([138, 2, 0])
    cube([1, 1, 1.25]);
  translate([139, 2, 0])
    cube([1, 1, 1.25]);
  translate([140, 2, 0])
    cube([1, 1, 1.25]);
  translate([141, 2, 0])
    cube([1, 1, 1.25]);
  translate([142, 2, 0])
    cube([1, 1, 1.25]);
  translate([143, 2, 0])
    cube([1, 1, 1.25]);
  translate([144, 2, 0])
    cube([1, 1, 1.25]);
  translate([145, 2, 0])
    cube([1, 1, 1.25]);
  translate([146, 2, 0])
    cube([1, 1, 1.25]);
  translate([147, 2, 0])
    cube([1, 1, 1.25]);
  translate([148, 2, 0])
    cube([1, 1, 1.25]);
  translate([149, 2, 0])
    cube([1, 1, 1.25]);
  translate([150, 2, 0])
    cube([1, 1, 1.25]);
  translate([151, 2, 0])
    cube([1, 1, 1.25]);
  translate([152, 2, 0])
    cube([1, 1, 1.25]);
  translate([153, 2, 0])
    cube([1, 1, 1.25]);
  translate([154, 2, 0])
    cube([1, 1, 1.25]);
  translate([155, 2, 0])
    cube([1, 1, 1.25]);
  translate([156, 2, 0])
    cube([1, 1, 1.25]);
  translate([157, 2, 0])
    cube([1, 1, 1.25]);
  translate([158, 2, 0])
    cube([1, 1, 1.25]);
  translate([159, 2, 0])
    cube([1, 1, 1.25]);
  translate([160, 2, 0])
    cube([1, 1, 1.25]);
  translate([161, 2, 0])
    cube([1, 1, 1.25]);
  translate([162, 2, 0])
    cube([1, 1, 1.25]);
  translate([163, 2, 0])
    cube([1, 1, 1.25]);
  translate([164, 2, 0])
    cube([1, 1, 1.25]);
  translate([165, 2, 0])
    cube([1, 1, 1.25]);
  translate([166, 2, 0])
    cube([1, 1, 1.25]);
  translate([167, 2, 0])
    cube([1, 1, 1.25]);
  translate([168, 2, 0])
    cube([1, 1, 1.25]);
  translate([169, 2, 0])
    cube([1, 1, 1.25]);
  translate([170, 2, 0])
    cube([1, 1, 1.25]);
  translate([171, 2, 0])
    cube([1, 1, 1.25]);
  translate([172, 2, 0])
    cube([1, 1, 1.25]);
  translate([173, 2, 0])
    cube([1, 1, 1.25]);
  translate([174, 2, 0])
    cube([1, 1, 1.25]);
  translate([175, 2, 0])
    cube([1, 1, 1.25]);
  translate([176, 2, 0])
    cube([1, 1, 1.25]);
  translate([177, 2, 0])
    cube([1, 1, 1.25]);
  translate([178, 2, 0])
    cube([1, 1, 1.25]);
  translate([179, 2, 0])
    cube([1, 1, 1.25]);
  translate([180, 2, 0])
    cube([1, 1, 1.25]);
  translate([181, 2, 0])
    cube([1, 1, 1.25]);
  translate([182, 2, 0])
    cube([1, 1, 1.25]);
  translate([183, 2, 0])
    cube([1, 1, 1.25]);
  translate([184, 2, 0])
    cube([1, 1, 1.25]);
  translate([185, 2, 0])
    cube([1, 1, 1.25]);
  translate([186, 2, 0])
    cube([1, 1, 1.25]);
  translate([187, 2, 0])
    cube([1, 1, 1.25]);
  translate([188, 2, 0])
    cube([1, 1, 1.25]);
  translate([189, 2, 0])
    cube([1, 1, 1.25]);
  translate([190, 2, 0])
    cube([1, 1, 1.25]);
  translate([191, 2, 0])
    cube([1, 1, 1.25]);
  translate([192, 2, 0])
    cube([1, 1, 1.25]);
  translate([193, 2, 0])
    cube([1, 1, 1.25]);
  translate([194, 2, 0])
    cube([1, 1, 1.25]);
  translate([195, 2, 0])
    cube([1, 1, 1.25]);
  translate([196, 2, 0])
    cube([1, 1, 1.25]);
  translate([197, 2, 0])
    cube([1, 1, 1.25]);
  translate([198, 2, 0])
    cube([1, 1, 1.25]);
  translate([199, 2, 0])
    cube([1, 1, 1.25]);
  translate([200, 2, 0])
    cube([1, 1, 1.25]);
  translate([201, 2, 0])
    cube([1, 1, 1.25]);
  translate([202, 2, 0])
    cube([1, 1, 1.25]);
  translate([203, 2, 0])
    cube([1, 1, 1.25]);
  translate([204, 2, 0])
    cube([1, 1, 1.25]);
  translate([205, 2, 0])
    cube([1, 1, 1.25]);
  translate([206, 2, 0])
    cube([1, 1, 1.25]);
  translate([207, 2, 0])
    cube([1, 1, 1.25]);
  translate([208, 2, 0])
    cube([1, 1, 1.25]);
  translate([209, 2, 0])
    cube([1, 1, 1.25]);
  translate([210, 2, 0])
    cube([1, 1, 1.25]);
  translate([211, 2, 0])
    cube([1, 1, 1.25]);
  translate([212, 2, 0])
    cube([1, 1, 1.25]);
  translate([213, 2, 0])
    cube([1, 1, 1.25]);
  translate([214, 2, 0])
    cube([1, 1, 1.25]);
  translate([215, 2, 0])
    cube([1, 1, 1.25]);
  translate([216, 2, 0])
    cube([1, 1, 1.25]);
  translate([217, 2, 0])
    cube([1, 1, 1.25]);
  translate([218, 2, 0])
    cube([1, 1, 1.25]);
  translate([219, 2, 0])
    cube([1, 1, 1.25]);
  translate([220, 2, 0])
    cube([1, 1, 1.25]);
  translate([221, 2, 0])
    cube([1, 1, 1.25]);
  translate([222, 2, 0])
    cube([1, 1, 1.25]);
  translate([223, 2, 0])
    cube([1, 1, 1.25]);
  translate([224, 2, 0])
    cube([1, 1, 1.25]);
  translate([225, 2, 0])
    cube([1, 1, 1.25]);
  translate([226, 2, 0])
    cube([1, 1, 1.25]);
  translate([227, 2, 0])
    cube([1, 1, 1.25]);
  translate([228, 2, 0])
    cube([1, 1, 1.25]);
  translate([229, 2, 0])
    cube([1, 1, 1.25]);
  translate([230, 2, 0])
    cube([1, 1, 1.25]);
  translate([231, 2, 0])
    cube([1, 1, 1.25]);
  translate([232, 2, 0])
    cube([1, 1, 1.25]);
  translate([233, 2, 0])
    cube([1, 1, 1.25]);
  translate([234, 2, 0])
    cube([1, 1, 1.25]);
  translate([235, 2, 0])
    cube([1, 1, 1.25]);
  translate([236, 2, 0])
    cube([1, 1, 1.25]);
  translate([237, 2, 0])
    cube([1, 1, 1.25]);
  translate([238, 2, 0])
    cube([1, 1, 1.25]);
  translate([239, 2, 0])
    cube([1, 1, 1.25]);
  translate([240, 2, 0])
    cube([1, 1, 1.25]);
  translate([241, 2, 0])
    cube([1, 1, 1.25]);
  translate([242, 2, 0])
    cube([1, 1, 1.25]);
  translate([243, 2, 0])
    cube([1, 1, 1.25]);
  translate([244, 2, 0])
    cube([1, 1, 1.25]);
  translate([245, 2, 0])
    cube([1, 1, 1.25]);
  translate([246, 2, 0])
    cube([1, 1, 1.25]);
  translate([0, 3, 0])
    cube([1, 1, 1.33]);
  translate([1, 3, 0])
    cube([1, 1, 1.33]);
  translate([2, 3, 0])
    cube([1, 1, 1.33]);
  translate([3, 3, 0])
    cube([1, 1, 1.33]);
  translate([4, 3, 0])
    cube([1, 1, 1.33]);
  translate([5, 3, 0])
    cube([1, 1, 1.33]);
  translate([6, 3, 0])
    cube([1, 1, 1.33]);
  translate([7, 3, 0])
    cube([1, 1, 1.33]);
  translate([8, 3, 0])
    cube([1, 1, 1.33]);
  translate([9, 3, 0])
    cube([1, 1, 1.33]);
  translate([10, 3, 0])
    cube([1, 1, 1.33]);
  translate([11, 3, 0])
    cube([1, 1, 1.33]);
  translate([12, 3, 0])
    cube([1, 1, 1.33]);
  translate([13, 3, 0])
    cube([1, 1, 1.33]);
  translate([14, 3, 0])
    cube([1, 1, 1.33]);
  translate([15, 3, 0])
    cube([1, 1, 1.33]);
  translate([16, 3, 0])
    cube([1, 1, 1.33]);
  translate([17, 3, 0])
    cube([1, 1, 1.33]);
  translate([18, 3, 0])
    cube([1, 1, 1.33]);
  translate([19, 3, 0])
    cube([1, 1, 1.33]);
  translate([20, 3, 0])
    cube([1, 1, 1.33]);
  translate([21, 3, 0])
    cube([1, 1, 1.33]);
  translate([22, 3, 0])
    cube([1, 1, 1.33]);
  translate([23, 3, 0])
    cube([1, 1, 1.33]);
  translate([24, 3, 0])
    cube([1, 1, 1.33]);
  translate([25, 3, 0])
    cube([1, 1, 1.33]);
  translate([26, 3, 0])
    cube([1, 1, 1.33]);
  translate([27, 3, 0])
    cube([1, 1, 1.33]);
  translate([28, 3, 0])
    cube([1, 1, 1.33]);
  translate([29, 3, 0])
    cube([1, 1, 1.33]);
  translate([30, 3, 0])
    cube([1, 1, 1.33]);
  translate([31, 3, 0])
    cube([1, 1, 1.33]);
  translate([32, 3, 0])
    cube([1, 1, 1.33]);
  translate([33, 3, 0])
    cube([1, 1, 1.33]);
  translate([34, 3, 0])
    cube([1, 1, 1.33]);
  translate([35, 3, 0])
    cube([1, 1, 1.33]);
  translate([36, 3, 0])
    cube([1, 1, 1.33]);
  translate([37, 3, 0])
    cube([1, 1, 1.33]);
  translate([38, 3, 0])
    cube([1, 1, 1.33]);
  translate([39, 3, 0])
    cube([1, 1, 1.33]);
  translate([40, 3, 0])
    cube([1, 1, 1.33]);
  translate([41, 3, 0])
    cube([1, 1, 1.33]);
  translate([42, 3, 0])
    cube([1, 1, 1.33]);
  translate([43, 3, 0])
    cube([1, 1, 1.33]);
  translate([44, 3, 0])
    cube([1, 1, 1.33]);
  translate([45, 3, 0])
    cube([1, 1, 1.33]);
  translate([46, 3, 0])
    cube([1, 1, 1.33]);
  translate([47, 3, 0])
    cube([1, 1, 1.33]);
  translate([48, 3, 0])
    cube([1, 1, 1.33]);
  translate([49, 3, 0])
    cube([1, 1, 1.33]);
  translate([50, 3, 0])
    cube([1, 1, 1.33]);
  translate([51, 3, 0])
    cube([1, 1, 1.33]);
  translate([52, 3, 0])
    cube([1, 1, 1.29]);
  translate([53, 3, 0])
    cube([1, 1, 1.33]);
  translate([54, 3, 0])
    cube([1, 1, 1.33]);
  translate([55, 3, 0])
    cube([1, 1, 1.37]);
  translate([56, 3, 0])
    cube([1, 1, 1.33]);
  translate([57, 3, 0])
    cube([1, 1, 1.29]);
  translate([58, 3, 0])
    cube([1, 1, 1.29]);
  translate([59, 3, 0])
    cube([1, 1, 1.29]);
  translate([60, 3, 0])
    cube([1, 1, 1.29]);
  translate([61, 3, 0])
    cube([1, 1, 1.33]);
  translate([62, 3, 0])
    cube([1, 1, 1.29]);
  translate([63, 3, 0])
    cube([1, 1, 1.29]);
  translate([64, 3, 0])
    cube([1, 1, 1.29]);
  translate([65, 3, 0])
    cube([1, 1, 1.29]);
  translate([66, 3, 0])
    cube([1, 1, 1.33]);
  translate([67, 3, 0])
    cube([1, 1, 1.29]);
  translate([68, 3, 0])
    cube([1, 1, 1.29]);
  translate([69, 3, 0])
    cube([1, 1, 1.29]);
  translate([70, 3, 0])
    cube([1, 1, 1.29]);
  translate([71, 3, 0])
    cube([1, 1, 1.29]);
  translate([72, 3, 0])
    cube([1, 1, 1.29]);
  translate([73, 3, 0])
    cube([1, 1, 1.29]);
  translate([74, 3, 0])
    cube([1, 1, 1.29]);
  translate([75, 3, 0])
    cube([1, 1, 1.29]);
  translate([76, 3, 0])
    cube([1, 1, 1.29]);
  translate([77, 3, 0])
    cube([1, 1, 1.29]);
  translate([78, 3, 0])
    cube([1, 1, 1.29]);
  translate([79, 3, 0])
    cube([1, 1, 1.29]);
  translate([80, 3, 0])
    cube([1, 1, 1.29]);
  translate([81, 3, 0])
    cube([1, 1, 1.29]);
  translate([82, 3, 0])
    cube([1, 1, 1.29]);
  translate([83, 3, 0])
    cube([1, 1, 1.29]);
  translate([84, 3, 0])
    cube([1, 1, 1.29]);
  translate([85, 3, 0])
    cube([1, 1, 1.29]);
  translate([86, 3, 0])
    cube([1, 1, 1.29]);
  translate([87, 3, 0])
    cube([1, 1, 1.29]);
  translate([88, 3, 0])
    cube([1, 1, 1.29]);
  translate([89, 3, 0])
    cube([1, 1, 1.29]);
  translate([90, 3, 0])
    cube([1, 1, 1.29]);
  translate([91, 3, 0])
    cube([1, 1, 1.33]);
  translate([92, 3, 0])
    cube([1, 1, 1.25]);
  translate([93, 3, 0])
    cube([1, 1, 1.25]);
  translate([94, 3, 0])
    cube([1, 1, 1.25]);
  translate([95, 3, 0])
    cube([1, 1, 1.29]);
  translate([96, 3, 0])
    cube([1, 1, 1.25]);
  translate([97, 3, 0])
    cube([1, 1, 1.25]);
  translate([98, 3, 0])
    cube([1, 1, 1.25]);
  translate([99, 3, 0])
    cube([1, 1, 1.29]);
  translate([100, 3, 0])
    cube([1, 1, 1.25]);
  translate([101, 3, 0])
    cube([1, 1, 1.25]);
  translate([102, 3, 0])
    cube([1, 1, 1.25]);
  translate([103, 3, 0])
    cube([1, 1, 1.25]);
  translate([104, 3, 0])
    cube([1, 1, 1.25]);
  translate([105, 3, 0])
    cube([1, 1, 1.25]);
  translate([106, 3, 0])
    cube([1, 1, 1.25]);
  translate([107, 3, 0])
    cube([1, 1, 1.25]);
  translate([108, 3, 0])
    cube([1, 1, 1.25]);
  translate([109, 3, 0])
    cube([1, 1, 1.25]);
  translate([110, 3, 0])
    cube([1, 1, 1.25]);
  translate([111, 3, 0])
    cube([1, 1, 1.25]);
  translate([112, 3, 0])
    cube([1, 1, 1.25]);
  translate([113, 3, 0])
    cube([1, 1, 1.25]);
  translate([114, 3, 0])
    cube([1, 1, 1.25]);
  translate([115, 3, 0])
    cube([1, 1, 1.25]);
  translate([116, 3, 0])
    cube([1, 1, 1.25]);
  translate([117, 3, 0])
    cube([1, 1, 1.25]);
  translate([118, 3, 0])
    cube([1, 1, 1.25]);
  translate([119, 3, 0])
    cube([1, 1, 1.25]);
  translate([120, 3, 0])
    cube([1, 1, 1.25]);
  translate([121, 3, 0])
    cube([1, 1, 1.25]);
  translate([122, 3, 0])
    cube([1, 1, 1.25]);
  translate([123, 3, 0])
    cube([1, 1, 1.25]);
  translate([124, 3, 0])
    cube([1, 1, 1.25]);
  translate([125, 3, 0])
    cube([1, 1, 1.25]);
  translate([126, 3, 0])
    cube([1, 1, 1.25]);
  translate([127, 3, 0])
    cube([1, 1, 1.25]);
  translate([128, 3, 0])
    cube([1, 1, 1.25]);
  translate([129, 3, 0])
    cube([1, 1, 1.25]);
  translate([130, 3, 0])
    cube([1, 1, 1.25]);
  translate([131, 3, 0])
    cube([1, 1, 1.25]);
  translate([132, 3, 0])
    cube([1, 1, 1.25]);
  translate([133, 3, 0])
    cube([1, 1, 1.25]);
  translate([134, 3, 0])
    cube([1, 1, 1.25]);
  translate([135, 3, 0])
    cube([1, 1, 1.25]);
  translate([136, 3, 0])
    cube([1, 1, 1.25]);
  translate([137, 3, 0])
    cube([1, 1, 1.25]);
  translate([138, 3, 0])
    cube([1, 1, 1.25]);
  translate([139, 3, 0])
    cube([1, 1, 1.25]);
  translate([140, 3, 0])
    cube([1, 1, 1.25]);
  translate([141, 3, 0])
    cube([1, 1, 1.25]);
  translate([142, 3, 0])
    cube([1, 1, 1.25]);
  translate([143, 3, 0])
    cube([1, 1, 1.25]);
  translate([144, 3, 0])
    cube([1, 1, 1.25]);
  translate([145, 3, 0])
    cube([1, 1, 1.25]);
  translate([146, 3, 0])
    cube([1, 1, 1.25]);
  translate([147, 3, 0])
    cube([1, 1, 1.25]);
  translate([148, 3, 0])
    cube([1, 1, 1.25]);
  translate([149, 3, 0])
    cube([1, 1, 1.25]);
  translate([150, 3, 0])
    cube([1, 1, 1.25]);
  translate([151, 3, 0])
    cube([1, 1, 1.25]);
  translate([152, 3, 0])
    cube([1, 1, 1.25]);
  translate([153, 3, 0])
    cube([1, 1, 1.25]);
  translate([154, 3, 0])
    cube([1, 1, 1.25]);
  translate([155, 3, 0])
    cube([1, 1, 1.25]);
  translate([156, 3, 0])
    cube([1, 1, 1.25]);
  translate([157, 3, 0])
    cube([1, 1, 1.25]);
  translate([158, 3, 0])
    cube([1, 1, 1.25]);
  translate([159, 3, 0])
    cube([1, 1, 1.25]);
  translate([160, 3, 0])
    cube([1, 1, 1.25]);
  translate([161, 3, 0])
    cube([1, 1, 1.25]);
  translate([162, 3, 0])
    cube([1, 1, 1.25]);
  translate([163, 3, 0])
    cube([1, 1, 1.25]);
  translate([164, 3, 0])
    cube([1, 1, 1.25]);
  translate([165, 3, 0])
    cube([1, 1, 1.25]);
  translate([166, 3, 0])
    cube([1, 1, 1.25]);
  translate([167, 3, 0])
    cube([1, 1, 1.25]);
  translate([168, 3, 0])
    cube([1, 1, 1.25]);
  translate([169, 3, 0])
    cube([1, 1, 1.25]);
  translate([170, 3, 0])
    cube([1, 1, 1.25]);
  translate([171, 3, 0])
    cube([1, 1, 1.25]);
  translate([172, 3, 0])
    cube([1, 1, 1.25]);
  translate([173, 3, 0])
    cube([1, 1, 1.25]);
  translate([174, 3, 0])
    cube([1, 1, 1.25]);
  translate([175, 3, 0])
    cube([1, 1, 1.25]);
  translate([176, 3, 0])
    cube([1, 1, 1.25]);
  translate([177, 3, 0])
    cube([1, 1, 1.25]);
  translate([178, 3, 0])
    cube([1, 1, 1.25]);
  translate([179, 3, 0])
    cube([1, 1, 1.25]);
  translate([180, 3, 0])
    cube([1, 1, 1.25]);
  translate([181, 3, 0])
    cube([1, 1, 1.25]);
  translate([182, 3, 0])
    cube([1, 1, 1.25]);
  translate([183, 3, 0])
    cube([1, 1, 1.25]);
  translate([184, 3, 0])
    cube([1, 1, 1.25]);
  translate([185, 3, 0])
    cube([1, 1, 1.25]);
  translate([186, 3, 0])
    cube([1, 1, 1.25]);
  translate([187, 3, 0])
    cube([1, 1, 1.25]);
  translate([188, 3, 0])
    cube([1, 1, 1.25]);
  translate([189, 3, 0])
    cube([1, 1, 1.25]);
  translate([190, 3, 0])
    cube([1, 1, 1.25]);
  translate([191, 3, 0])
    cube([1, 1, 1.25]);
  translate([192, 3, 0])
    cube([1, 1, 1.25]);
  translate([193, 3, 0])
    cube([1, 1, 1.25]);
  translate([194, 3, 0])
    cube([1, 1, 1.25]);
  translate([195, 3, 0])
    cube([1, 1, 1.25]);
  translate([196, 3, 0])
    cube([1, 1, 1.25]);
  translate([197, 3, 0])
    cube([1, 1, 1.25]);
  translate([198, 3, 0])
    cube([1, 1, 1.25]);
  translate([199, 3, 0])
    cube([1, 1, 1.25]);
  translate([200, 3, 0])
    cube([1, 1, 1.25]);
  translate([201, 3, 0])
    cube([1, 1, 1.25]);
  translate([202, 3, 0])
    cube([1, 1, 1.25]);
  translate([203, 3, 0])
    cube([1, 1, 1.25]);
  translate([204, 3, 0])
    cube([1, 1, 1.25]);
  translate([205, 3, 0])
    cube([1, 1, 1.25]);
  translate([206, 3, 0])
    cube([1, 1, 1.25]);
  translate([207, 3, 0])
    cube([1, 1, 1.25]);
  translate([208, 3, 0])
    cube([1, 1, 1.25]);
  translate([209, 3, 0])
    cube([1, 1, 1.25]);
  translate([210, 3, 0])
    cube([1, 1, 1.25]);
  translate([211, 3, 0])
    cube([1, 1, 1.25]);
  translate([212, 3, 0])
    cube([1, 1, 1.25]);
  translate([213, 3, 0])
    cube([1, 1, 1.25]);
  translate([214, 3, 0])
    cube([1, 1, 1.25]);
  translate([215, 3, 0])
    cube([1, 1, 1.25]);
  translate([216, 3, 0])
    cube([1, 1, 1.25]);
  translate([217, 3, 0])
    cube([1, 1, 1.25]);
  translate([218, 3, 0])
    cube([1, 1, 1.25]);
  translate([219, 3, 0])
    cube([1, 1, 1.25]);
  translate([220, 3, 0])
    cube([1, 1, 1.25]);
  translate([221, 3, 0])
    cube([1, 1, 1.25]);
  translate([222, 3, 0])
    cube([1, 1, 1.25]);
  translate([223, 3, 0])
    cube([1, 1, 1.25]);
  translate([224, 3, 0])
    cube([1, 1, 1.25]);
  translate([225, 3, 0])
    cube([1, 1, 1.25]);
  translate([226, 3, 0])
    cube([1, 1, 1.25]);
  translate([227, 3, 0])
    cube([1, 1, 1.25]);
  translate([228, 3, 0])
    cube([1, 1, 1.25]);
  translate([229, 3, 0])
    cube([1, 1, 1.25]);
  translate([230, 3, 0])
    cube([1, 1, 1.25]);
  translate([231, 3, 0])
    cube([1, 1, 1.25]);
  translate([232, 3, 0])
    cube([1, 1, 1.25]);
  translate([233, 3, 0])
    cube([1, 1, 1.25]);
  translate([234, 3, 0])
    cube([1, 1, 1.25]);
  translate([235, 3, 0])
    cube([1, 1, 1.25]);
  translate([236, 3, 0])
    cube([1, 1, 1.25]);
  translate([237, 3, 0])
    cube([1, 1, 1.25]);
  translate([238, 3, 0])
    cube([1, 1, 1.25]);
  translate([239, 3, 0])
    cube([1, 1, 1.25]);
  translate([240, 3, 0])
    cube([1, 1, 1.25]);
  translate([241, 3, 0])
    cube([1, 1, 1.25]);
  translate([242, 3, 0])
    cube([1, 1, 1.25]);
  translate([243, 3, 0])
    cube([1, 1, 1.25]);
  translate([244, 3, 0])
    cube([1, 1, 1.25]);
  translate([245, 3, 0])
    cube([1, 1, 1.25]);
  translate([246, 3, 0])
    cube([1, 1, 1.25]);
  translate([0, 4, 0])
    cube([1, 1, 1.33]);
  translate([1, 4, 0])
    cube([1, 1, 1.33]);
  translate([2, 4, 0])
    cube([1, 1, 1.33]);
  translate([3, 4, 0])
    cube([1, 1, 1.33]);
  translate([4, 4, 0])
    cube([1, 1, 1.33]);
  translate([5, 4, 0])
    cube([1, 1, 1.33]);
  translate([6, 4, 0])
    cube([1, 1, 1.33]);
  translate([7, 4, 0])
    cube([1, 1, 1.33]);
  translate([8, 4, 0])
    cube([1, 1, 1.33]);
  translate([9, 4, 0])
    cube([1, 1, 1.33]);
  translate([10, 4, 0])
    cube([1, 1, 1.33]);
  translate([11, 4, 0])
    cube([1, 1, 1.33]);
  translate([12, 4, 0])
    cube([1, 1, 1.33]);
  translate([13, 4, 0])
    cube([1, 1, 1.33]);
  translate([14, 4, 0])
    cube([1, 1, 1.33]);
  translate([15, 4, 0])
    cube([1, 1, 1.33]);
  translate([16, 4, 0])
    cube([1, 1, 1.33]);
  translate([17, 4, 0])
    cube([1, 1, 1.33]);
  translate([18, 4, 0])
    cube([1, 1, 1.33]);
  translate([19, 4, 0])
    cube([1, 1, 1.33]);
  translate([20, 4, 0])
    cube([1, 1, 1.33]);
  translate([21, 4, 0])
    cube([1, 1, 1.33]);
  translate([22, 4, 0])
    cube([1, 1, 1.33]);
  translate([23, 4, 0])
    cube([1, 1, 1.33]);
  translate([24, 4, 0])
    cube([1, 1, 1.33]);
  translate([25, 4, 0])
    cube([1, 1, 1.33]);
  translate([26, 4, 0])
    cube([1, 1, 1.33]);
  translate([27, 4, 0])
    cube([1, 1, 1.33]);
  translate([28, 4, 0])
    cube([1, 1, 1.33]);
  translate([29, 4, 0])
    cube([1, 1, 1.33]);
  translate([30, 4, 0])
    cube([1, 1, 1.33]);
  translate([31, 4, 0])
    cube([1, 1, 1.33]);
  translate([32, 4, 0])
    cube([1, 1, 1.33]);
  translate([33, 4, 0])
    cube([1, 1, 1.33]);
  translate([34, 4, 0])
    cube([1, 1, 1.33]);
  translate([35, 4, 0])
    cube([1, 1, 1.33]);
  translate([36, 4, 0])
    cube([1, 1, 1.33]);
  translate([37, 4, 0])
    cube([1, 1, 1.33]);
  translate([38, 4, 0])
    cube([1, 1, 1.33]);
  translate([39, 4, 0])
    cube([1, 1, 1.33]);
  translate([40, 4, 0])
    cube([1, 1, 1.33]);
  translate([41, 4, 0])
    cube([1, 1, 1.33]);
  translate([42, 4, 0])
    cube([1, 1, 1.33]);
  translate([43, 4, 0])
    cube([1, 1, 1.33]);
  translate([44, 4, 0])
    cube([1, 1, 1.33]);
  translate([45, 4, 0])
    cube([1, 1, 1.33]);
  translate([46, 4, 0])
    cube([1, 1, 1.33]);
  translate([47, 4, 0])
    cube([1, 1, 1.33]);
  translate([48, 4, 0])
    cube([1, 1, 1.33]);
  translate([49, 4, 0])
    cube([1, 1, 1.33]);
  translate([50, 4, 0])
    cube([1, 1, 1.33]);
  translate([51, 4, 0])
    cube([1, 1, 1.33]);
  translate([52, 4, 0])
    cube([1, 1, 1.33]);
  translate([53, 4, 0])
    cube([1, 1, 1.33]);
  translate([54, 4, 0])
    cube([1, 1, 1.33]);
  translate([55, 4, 0])
    cube([1, 1, 1.33]);
  translate([56, 4, 0])
    cube([1, 1, 1.33]);
  translate([57, 4, 0])
    cube([1, 1, 1.33]);
  translate([58, 4, 0])
    cube([1, 1, 1.33]);
  translate([59, 4, 0])
    cube([1, 1, 1.33]);
  translate([60, 4, 0])
    cube([1, 1, 1.25]);
  translate([61, 4, 0])
    cube([1, 1, 1.29]);
  translate([62, 4, 0])
    cube([1, 1, 1.29]);
  translate([63, 4, 0])
    cube([1, 1, 1.29]);
  translate([64, 4, 0])
    cube([1, 1, 1.29]);
  translate([65, 4, 0])
    cube([1, 1, 1.22]);
  translate([66, 4, 0])
    cube([1, 1, 1.33]);
  translate([67, 4, 0])
    cube([1, 1, 1.33]);
  translate([68, 4, 0])
    cube([1, 1, 1.29]);
  translate([69, 4, 0])
    cube([1, 1, 1.29]);
  translate([70, 4, 0])
    cube([1, 1, 1.29]);
  translate([71, 4, 0])
    cube([1, 1, 1.29]);
  translate([72, 4, 0])
    cube([1, 1, 1.29]);
  translate([73, 4, 0])
    cube([1, 1, 1.29]);
  translate([74, 4, 0])
    cube([1, 1, 1.29]);
  translate([75, 4, 0])
    cube([1, 1, 1.25]);
  translate([76, 4, 0])
    cube([1, 1, 1.29]);
  translate([77, 4, 0])
    cube([1, 1, 1.29]);
  translate([78, 4, 0])
    cube([1, 1, 1.25]);
  translate([79, 4, 0])
    cube([1, 1, 1.25]);
  translate([80, 4, 0])
    cube([1, 1, 1.29]);
  translate([81, 4, 0])
    cube([1, 1, 1.29]);
  translate([82, 4, 0])
    cube([1, 1, 1.29]);
  translate([83, 4, 0])
    cube([1, 1, 1.29]);
  translate([84, 4, 0])
    cube([1, 1, 1.29]);
  translate([85, 4, 0])
    cube([1, 1, 1.29]);
  translate([86, 4, 0])
    cube([1, 1, 1.29]);
  translate([87, 4, 0])
    cube([1, 1, 1.29]);
  translate([88, 4, 0])
    cube([1, 1, 1.29]);
  translate([89, 4, 0])
    cube([1, 1, 1.29]);
  translate([90, 4, 0])
    cube([1, 1, 1.29]);
  translate([91, 4, 0])
    cube([1, 1, 1.29]);
  translate([92, 4, 0])
    cube([1, 1, 1.29]);
  translate([93, 4, 0])
    cube([1, 1, 1.29]);
  translate([94, 4, 0])
    cube([1, 1, 1.29]);
  translate([95, 4, 0])
    cube([1, 1, 1.29]);
  translate([96, 4, 0])
    cube([1, 1, 1.25]);
  translate([97, 4, 0])
    cube([1, 1, 1.25]);
  translate([98, 4, 0])
    cube([1, 1, 1.25]);
  translate([99, 4, 0])
    cube([1, 1, 1.25]);
  translate([100, 4, 0])
    cube([1, 1, 1.25]);
  translate([101, 4, 0])
    cube([1, 1, 1.25]);
  translate([102, 4, 0])
    cube([1, 1, 1.25]);
  translate([103, 4, 0])
    cube([1, 1, 1.25]);
  translate([104, 4, 0])
    cube([1, 1, 1.25]);
  translate([105, 4, 0])
    cube([1, 1, 1.25]);
  translate([106, 4, 0])
    cube([1, 1, 1.25]);
  translate([107, 4, 0])
    cube([1, 1, 1.25]);
  translate([108, 4, 0])
    cube([1, 1, 1.25]);
  translate([109, 4, 0])
    cube([1, 1, 1.25]);
  translate([110, 4, 0])
    cube([1, 1, 1.25]);
  translate([111, 4, 0])
    cube([1, 1, 1.25]);
  translate([112, 4, 0])
    cube([1, 1, 1.25]);
  translate([113, 4, 0])
    cube([1, 1, 1.25]);
  translate([114, 4, 0])
    cube([1, 1, 1.25]);
  translate([115, 4, 0])
    cube([1, 1, 1.25]);
  translate([116, 4, 0])
    cube([1, 1, 1.25]);
  translate([117, 4, 0])
    cube([1, 1, 1.25]);
  translate([118, 4, 0])
    cube([1, 1, 1.25]);
  translate([119, 4, 0])
    cube([1, 1, 1.25]);
  translate([120, 4, 0])
    cube([1, 1, 1.25]);
  translate([121, 4, 0])
    cube([1, 1, 1.25]);
  translate([122, 4, 0])
    cube([1, 1, 1.25]);
  translate([123, 4, 0])
    cube([1, 1, 1.25]);
  translate([124, 4, 0])
    cube([1, 1, 1.25]);
  translate([125, 4, 0])
    cube([1, 1, 1.25]);
  translate([126, 4, 0])
    cube([1, 1, 1.25]);
  translate([127, 4, 0])
    cube([1, 1, 1.25]);
  translate([128, 4, 0])
    cube([1, 1, 1.25]);
  translate([129, 4, 0])
    cube([1, 1, 1.25]);
  translate([130, 4, 0])
    cube([1, 1, 1.25]);
  translate([131, 4, 0])
    cube([1, 1, 1.25]);
  translate([132, 4, 0])
    cube([1, 1, 1.25]);
  translate([133, 4, 0])
    cube([1, 1, 1.25]);
  translate([134, 4, 0])
    cube([1, 1, 1.25]);
  translate([135, 4, 0])
    cube([1, 1, 1.25]);
  translate([136, 4, 0])
    cube([1, 1, 1.25]);
  translate([137, 4, 0])
    cube([1, 1, 1.25]);
  translate([138, 4, 0])
    cube([1, 1, 1.25]);
  translate([139, 4, 0])
    cube([1, 1, 1.25]);
  translate([140, 4, 0])
    cube([1, 1, 1.25]);
  translate([141, 4, 0])
    cube([1, 1, 1.25]);
  translate([142, 4, 0])
    cube([1, 1, 1.25]);
  translate([143, 4, 0])
    cube([1, 1, 1.25]);
  translate([144, 4, 0])
    cube([1, 1, 1.25]);
  translate([145, 4, 0])
    cube([1, 1, 1.25]);
  translate([146, 4, 0])
    cube([1, 1, 1.25]);
  translate([147, 4, 0])
    cube([1, 1, 1.25]);
  translate([148, 4, 0])
    cube([1, 1, 1.25]);
  translate([149, 4, 0])
    cube([1, 1, 1.25]);
  translate([150, 4, 0])
    cube([1, 1, 1.25]);
  translate([151, 4, 0])
    cube([1, 1, 1.25]);
  translate([152, 4, 0])
    cube([1, 1, 1.25]);
  translate([153, 4, 0])
    cube([1, 1, 1.25]);
  translate([154, 4, 0])
    cube([1, 1, 1.25]);
  translate([155, 4, 0])
    cube([1, 1, 1.25]);
  translate([156, 4, 0])
    cube([1, 1, 1.25]);
  translate([157, 4, 0])
    cube([1, 1, 1.25]);
  translate([158, 4, 0])
    cube([1, 1, 1.25]);
  translate([159, 4, 0])
    cube([1, 1, 1.25]);
  translate([160, 4, 0])
    cube([1, 1, 1.25]);
  translate([161, 4, 0])
    cube([1, 1, 1.25]);
  translate([162, 4, 0])
    cube([1, 1, 1.25]);
  translate([163, 4, 0])
    cube([1, 1, 1.25]);
  translate([164, 4, 0])
    cube([1, 1, 1.25]);
  translate([165, 4, 0])
    cube([1, 1, 1.25]);
  translate([166, 4, 0])
    cube([1, 1, 1.25]);
  translate([167, 4, 0])
    cube([1, 1, 1.25]);
  translate([168, 4, 0])
    cube([1, 1, 1.25]);
  translate([169, 4, 0])
    cube([1, 1, 1.25]);
  translate([170, 4, 0])
    cube([1, 1, 1.25]);
  translate([171, 4, 0])
    cube([1, 1, 1.25]);
  translate([172, 4, 0])
    cube([1, 1, 1.25]);
  translate([173, 4, 0])
    cube([1, 1, 1.25]);
  translate([174, 4, 0])
    cube([1, 1, 1.25]);
  translate([175, 4, 0])
    cube([1, 1, 1.25]);
  translate([176, 4, 0])
    cube([1, 1, 1.25]);
  translate([177, 4, 0])
    cube([1, 1, 1.25]);
  translate([178, 4, 0])
    cube([1, 1, 1.25]);
  translate([179, 4, 0])
    cube([1, 1, 1.25]);
  translate([180, 4, 0])
    cube([1, 1, 1.25]);
  translate([181, 4, 0])
    cube([1, 1, 1.25]);
  translate([182, 4, 0])
    cube([1, 1, 1.25]);
  translate([183, 4, 0])
    cube([1, 1, 1.25]);
  translate([184, 4, 0])
    cube([1, 1, 1.25]);
  translate([185, 4, 0])
    cube([1, 1, 1.25]);
  translate([186, 4, 0])
    cube([1, 1, 1.25]);
  translate([187, 4, 0])
    cube([1, 1, 1.25]);
  translate([188, 4, 0])
    cube([1, 1, 1.25]);
  translate([189, 4, 0])
    cube([1, 1, 1.25]);
  translate([190, 4, 0])
    cube([1, 1, 1.25]);
  translate([191, 4, 0])
    cube([1, 1, 1.25]);
  translate([192, 4, 0])
    cube([1, 1, 1.25]);
  translate([193, 4, 0])
    cube([1, 1, 1.25]);
  translate([194, 4, 0])
    cube([1, 1, 1.25]);
  translate([195, 4, 0])
    cube([1, 1, 1.25]);
  translate([196, 4, 0])
    cube([1, 1, 1.25]);
  translate([197, 4, 0])
    cube([1, 1, 1.25]);
  translate([198, 4, 0])
    cube([1, 1, 1.25]);
  translate([199, 4, 0])
    cube([1, 1, 1.25]);
  translate([200, 4, 0])
    cube([1, 1, 1.25]);
  translate([201, 4, 0])
    cube([1, 1, 1.25]);
  translate([202, 4, 0])
    cube([1, 1, 1.25]);
  translate([203, 4, 0])
    cube([1, 1, 1.25]);
  translate([204, 4, 0])
    cube([1, 1, 1.25]);
  translate([205, 4, 0])
    cube([1, 1, 1.25]);
  translate([206, 4, 0])
    cube([1, 1, 1.25]);
  translate([207, 4, 0])
    cube([1, 1, 1.25]);
  translate([208, 4, 0])
    cube([1, 1, 1.25]);
  translate([209, 4, 0])
    cube([1, 1, 1.25]);
  translate([210, 4, 0])
    cube([1, 1, 1.25]);
  translate([211, 4, 0])
    cube([1, 1, 1.25]);
  translate([212, 4, 0])
    cube([1, 1, 1.25]);
  translate([213, 4, 0])
    cube([1, 1, 1.25]);
  translate([214, 4, 0])
    cube([1, 1, 1.25]);
  translate([215, 4, 0])
    cube([1, 1, 1.25]);
  translate([216, 4, 0])
    cube([1, 1, 1.25]);
  translate([217, 4, 0])
    cube([1, 1, 1.25]);
  translate([218, 4, 0])
    cube([1, 1, 1.25]);
  translate([219, 4, 0])
    cube([1, 1, 1.25]);
  translate([220, 4, 0])
    cube([1, 1, 1.25]);
  translate([221, 4, 0])
    cube([1, 1, 1.25]);
  translate([222, 4, 0])
    cube([1, 1, 1.25]);
  translate([223, 4, 0])
    cube([1, 1, 1.25]);
  translate([224, 4, 0])
    cube([1, 1, 1.25]);
  translate([225, 4, 0])
    cube([1, 1, 1.25]);
  translate([226, 4, 0])
    cube([1, 1, 1.25]);
  translate([227, 4, 0])
    cube([1, 1, 1.25]);
  translate([228, 4, 0])
    cube([1, 1, 1.25]);
  translate([229, 4, 0])
    cube([1, 1, 1.25]);
  translate([230, 4, 0])
    cube([1, 1, 1.25]);
  translate([231, 4, 0])
    cube([1, 1, 1.25]);
  translate([232, 4, 0])
    cube([1, 1, 1.25]);
  translate([233, 4, 0])
    cube([1, 1, 1.25]);
  translate([234, 4, 0])
    cube([1, 1, 1.25]);
  translate([235, 4, 0])
    cube([1, 1, 1.25]);
  translate([236, 4, 0])
    cube([1, 1, 1.25]);
  translate([237, 4, 0])
    cube([1, 1, 1.25]);
  translate([238, 4, 0])
    cube([1, 1, 1.25]);
  translate([239, 4, 0])
    cube([1, 1, 1.25]);
  translate([240, 4, 0])
    cube([1, 1, 1.25]);
  translate([241, 4, 0])
    cube([1, 1, 1.25]);
  translate([242, 4, 0])
    cube([1, 1, 1.25]);
  translate([243, 4, 0])
    cube([1, 1, 1.25]);
  translate([244, 4, 0])
    cube([1, 1, 1.25]);
  translate([245, 4, 0])
    cube([1, 1, 1.25]);
  translate([246, 4, 0])
    cube([1, 1, 1.25]);
  translate([0, 5, 0])
    cube([1, 1, 1.33]);
  translate([1, 5, 0])
    cube([1, 1, 1.33]);
  translate([2, 5, 0])
    cube([1, 1, 1.33]);
  translate([3, 5, 0])
    cube([1, 1, 1.33]);
  translate([4, 5, 0])
    cube([1, 1, 1.33]);
  translate([5, 5, 0])
    cube([1, 1, 1.33]);
  translate([6, 5, 0])
    cube([1, 1, 1.33]);
  translate([7, 5, 0])
    cube([1, 1, 1.33]);
  translate([8, 5, 0])
    cube([1, 1, 1.33]);
  translate([9, 5, 0])
    cube([1, 1, 1.33]);
  translate([10, 5, 0])
    cube([1, 1, 1.33]);
  translate([11, 5, 0])
    cube([1, 1, 1.33]);
  translate([12, 5, 0])
    cube([1, 1, 1.33]);
  translate([13, 5, 0])
    cube([1, 1, 1.33]);
  translate([14, 5, 0])
    cube([1, 1, 1.33]);
  translate([15, 5, 0])
    cube([1, 1, 1.33]);
  translate([16, 5, 0])
    cube([1, 1, 1.33]);
  translate([17, 5, 0])
    cube([1, 1, 1.33]);
  translate([18, 5, 0])
    cube([1, 1, 1.33]);
  translate([19, 5, 0])
    cube([1, 1, 1.33]);
  translate([20, 5, 0])
    cube([1, 1, 1.33]);
  translate([21, 5, 0])
    cube([1, 1, 1.33]);
  translate([22, 5, 0])
    cube([1, 1, 1.33]);
  translate([23, 5, 0])
    cube([1, 1, 1.33]);
  translate([24, 5, 0])
    cube([1, 1, 1.33]);
  translate([25, 5, 0])
    cube([1, 1, 1.33]);
  translate([26, 5, 0])
    cube([1, 1, 1.33]);
  translate([27, 5, 0])
    cube([1, 1, 1.33]);
  translate([28, 5, 0])
    cube([1, 1, 1.33]);
  translate([29, 5, 0])
    cube([1, 1, 1.33]);
  translate([30, 5, 0])
    cube([1, 1, 1.33]);
  translate([31, 5, 0])
    cube([1, 1, 1.33]);
  translate([32, 5, 0])
    cube([1, 1, 1.33]);
  translate([33, 5, 0])
    cube([1, 1, 1.33]);
  translate([34, 5, 0])
    cube([1, 1, 1.33]);
  translate([35, 5, 0])
    cube([1, 1, 1.33]);
  translate([36, 5, 0])
    cube([1, 1, 1.33]);
  translate([37, 5, 0])
    cube([1, 1, 1.33]);
  translate([38, 5, 0])
    cube([1, 1, 1.33]);
  translate([39, 5, 0])
    cube([1, 1, 1.33]);
  translate([40, 5, 0])
    cube([1, 1, 1.33]);
  translate([41, 5, 0])
    cube([1, 1, 1.33]);
  translate([42, 5, 0])
    cube([1, 1, 1.33]);
  translate([43, 5, 0])
    cube([1, 1, 1.33]);
  translate([44, 5, 0])
    cube([1, 1, 1.33]);
  translate([45, 5, 0])
    cube([1, 1, 1.33]);
  translate([46, 5, 0])
    cube([1, 1, 1.33]);
  translate([47, 5, 0])
    cube([1, 1, 1.33]);
  translate([48, 5, 0])
    cube([1, 1, 1.33]);
  translate([49, 5, 0])
    cube([1, 1, 1.33]);
  translate([50, 5, 0])
    cube([1, 1, 1.33]);
  translate([51, 5, 0])
    cube([1, 1, 1.33]);
  translate([52, 5, 0])
    cube([1, 1, 1.33]);
  translate([53, 5, 0])
    cube([1, 1, 1.33]);
  translate([54, 5, 0])
    cube([1, 1, 1.29]);
  translate([55, 5, 0])
    cube([1, 1, 1.29]);
  translate([56, 5, 0])
    cube([1, 1, 1.33]);
  translate([57, 5, 0])
    cube([1, 1, 1.33]);
  translate([58, 5, 0])
    cube([1, 1, 1.33]);
  translate([59, 5, 0])
    cube([1, 1, 1.33]);
  translate([60, 5, 0])
    cube([1, 1, 1.29]);
  translate([61, 5, 0])
    cube([1, 1, 1.29]);
  translate([62, 5, 0])
    cube([1, 1, 1.29]);
  translate([63, 5, 0])
    cube([1, 1, 1.33]);
  translate([64, 5, 0])
    cube([1, 1, 1.33]);
  translate([65, 5, 0])
    cube([1, 1, 1.29]);
  translate([66, 5, 0])
    cube([1, 1, 1.29]);
  translate([67, 5, 0])
    cube([1, 1, 1.33]);
  translate([68, 5, 0])
    cube([1, 1, 1.29]);
  translate([69, 5, 0])
    cube([1, 1, 1.29]);
  translate([70, 5, 0])
    cube([1, 1, 1.33]);
  translate([71, 5, 0])
    cube([1, 1, 1.33]);
  translate([72, 5, 0])
    cube([1, 1, 1.29]);
  translate([73, 5, 0])
    cube([1, 1, 1.29]);
  translate([74, 5, 0])
    cube([1, 1, 1.29]);
  translate([75, 5, 0])
    cube([1, 1, 1.29]);
  translate([76, 5, 0])
    cube([1, 1, 1.29]);
  translate([77, 5, 0])
    cube([1, 1, 1.33]);
  translate([78, 5, 0])
    cube([1, 1, 1.29]);
  translate([79, 5, 0])
    cube([1, 1, 1.29]);
  translate([80, 5, 0])
    cube([1, 1, 1.29]);
  translate([81, 5, 0])
    cube([1, 1, 1.29]);
  translate([82, 5, 0])
    cube([1, 1, 1.29]);
  translate([83, 5, 0])
    cube([1, 1, 1.29]);
  translate([84, 5, 0])
    cube([1, 1, 1.29]);
  translate([85, 5, 0])
    cube([1, 1, 1.29]);
  translate([86, 5, 0])
    cube([1, 1, 1.29]);
  translate([87, 5, 0])
    cube([1, 1, 1.29]);
  translate([88, 5, 0])
    cube([1, 1, 1.29]);
  translate([89, 5, 0])
    cube([1, 1, 1.29]);
  translate([90, 5, 0])
    cube([1, 1, 1.29]);
  translate([91, 5, 0])
    cube([1, 1, 1.29]);
  translate([92, 5, 0])
    cube([1, 1, 1.29]);
  translate([93, 5, 0])
    cube([1, 1, 1.29]);
  translate([94, 5, 0])
    cube([1, 1, 1.25]);
  translate([95, 5, 0])
    cube([1, 1, 1.25]);
  translate([96, 5, 0])
    cube([1, 1, 1.25]);
  translate([97, 5, 0])
    cube([1, 1, 1.25]);
  translate([98, 5, 0])
    cube([1, 1, 1.25]);
  translate([99, 5, 0])
    cube([1, 1, 1.25]);
  translate([100, 5, 0])
    cube([1, 1, 1.25]);
  translate([101, 5, 0])
    cube([1, 1, 1.25]);
  translate([102, 5, 0])
    cube([1, 1, 1.25]);
  translate([103, 5, 0])
    cube([1, 1, 1.25]);
  translate([104, 5, 0])
    cube([1, 1, 1.25]);
  translate([105, 5, 0])
    cube([1, 1, 1.25]);
  translate([106, 5, 0])
    cube([1, 1, 1.25]);
  translate([107, 5, 0])
    cube([1, 1, 1.25]);
  translate([108, 5, 0])
    cube([1, 1, 1.25]);
  translate([109, 5, 0])
    cube([1, 1, 1.25]);
  translate([110, 5, 0])
    cube([1, 1, 1.25]);
  translate([111, 5, 0])
    cube([1, 1, 1.25]);
  translate([112, 5, 0])
    cube([1, 1, 1.25]);
  translate([113, 5, 0])
    cube([1, 1, 1.25]);
  translate([114, 5, 0])
    cube([1, 1, 1.25]);
  translate([115, 5, 0])
    cube([1, 1, 1.25]);
  translate([116, 5, 0])
    cube([1, 1, 1.25]);
  translate([117, 5, 0])
    cube([1, 1, 1.25]);
  translate([118, 5, 0])
    cube([1, 1, 1.25]);
  translate([119, 5, 0])
    cube([1, 1, 1.25]);
  translate([120, 5, 0])
    cube([1, 1, 1.25]);
  translate([121, 5, 0])
    cube([1, 1, 1.25]);
  translate([122, 5, 0])
    cube([1, 1, 1.25]);
  translate([123, 5, 0])
    cube([1, 1, 1.25]);
  translate([124, 5, 0])
    cube([1, 1, 1.25]);
  translate([125, 5, 0])
    cube([1, 1, 1.25]);
  translate([126, 5, 0])
    cube([1, 1, 1.25]);
  translate([127, 5, 0])
    cube([1, 1, 1.25]);
  translate([128, 5, 0])
    cube([1, 1, 1.25]);
  translate([129, 5, 0])
    cube([1, 1, 1.25]);
  translate([130, 5, 0])
    cube([1, 1, 1.25]);
  translate([131, 5, 0])
    cube([1, 1, 1.25]);
  translate([132, 5, 0])
    cube([1, 1, 1.25]);
  translate([133, 5, 0])
    cube([1, 1, 1.25]);
  translate([134, 5, 0])
    cube([1, 1, 1.25]);
  translate([135, 5, 0])
    cube([1, 1, 1.25]);
  translate([136, 5, 0])
    cube([1, 1, 1.25]);
  translate([137, 5, 0])
    cube([1, 1, 1.25]);
  translate([138, 5, 0])
    cube([1, 1, 1.25]);
  translate([139, 5, 0])
    cube([1, 1, 1.25]);
  translate([140, 5, 0])
    cube([1, 1, 1.25]);
  translate([141, 5, 0])
    cube([1, 1, 1.25]);
  translate([142, 5, 0])
    cube([1, 1, 1.25]);
  translate([143, 5, 0])
    cube([1, 1, 1.25]);
  translate([144, 5, 0])
    cube([1, 1, 1.25]);
  translate([145, 5, 0])
    cube([1, 1, 1.25]);
  translate([146, 5, 0])
    cube([1, 1, 1.25]);
  translate([147, 5, 0])
    cube([1, 1, 1.25]);
  translate([148, 5, 0])
    cube([1, 1, 1.25]);
  translate([149, 5, 0])
    cube([1, 1, 1.25]);
  translate([150, 5, 0])
    cube([1, 1, 1.25]);
  translate([151, 5, 0])
    cube([1, 1, 1.25]);
  translate([152, 5, 0])
    cube([1, 1, 1.25]);
  translate([153, 5, 0])
    cube([1, 1, 1.25]);
  translate([154, 5, 0])
    cube([1, 1, 1.25]);
  translate([155, 5, 0])
    cube([1, 1, 1.25]);
  translate([156, 5, 0])
    cube([1, 1, 1.25]);
  translate([157, 5, 0])
    cube([1, 1, 1.25]);
  translate([158, 5, 0])
    cube([1, 1, 1.25]);
  translate([159, 5, 0])
    cube([1, 1, 1.25]);
  translate([160, 5, 0])
    cube([1, 1, 1.25]);
  translate([161, 5, 0])
    cube([1, 1, 1.25]);
  translate([162, 5, 0])
    cube([1, 1, 1.25]);
  translate([163, 5, 0])
    cube([1, 1, 1.25]);
  translate([164, 5, 0])
    cube([1, 1, 1.25]);
  translate([165, 5, 0])
    cube([1, 1, 1.25]);
  translate([166, 5, 0])
    cube([1, 1, 1.25]);
  translate([167, 5, 0])
    cube([1, 1, 1.25]);
  translate([168, 5, 0])
    cube([1, 1, 1.25]);
  translate([169, 5, 0])
    cube([1, 1, 1.25]);
  translate([170, 5, 0])
    cube([1, 1, 1.25]);
  translate([171, 5, 0])
    cube([1, 1, 1.25]);
  translate([172, 5, 0])
    cube([1, 1, 1.25]);
  translate([173, 5, 0])
    cube([1, 1, 1.25]);
  translate([174, 5, 0])
    cube([1, 1, 1.25]);
  translate([175, 5, 0])
    cube([1, 1, 1.25]);
  translate([176, 5, 0])
    cube([1, 1, 1.25]);
  translate([177, 5, 0])
    cube([1, 1, 1.25]);
  translate([178, 5, 0])
    cube([1, 1, 1.25]);
  translate([179, 5, 0])
    cube([1, 1, 1.25]);
  translate([180, 5, 0])
    cube([1, 1, 1.25]);
  translate([181, 5, 0])
    cube([1, 1, 1.25]);
  translate([182, 5, 0])
    cube([1, 1, 1.25]);
  translate([183, 5, 0])
    cube([1, 1, 1.25]);
  translate([184, 5, 0])
    cube([1, 1, 1.25]);
  translate([185, 5, 0])
    cube([1, 1, 1.25]);
  translate([186, 5, 0])
    cube([1, 1, 1.25]);
  translate([187, 5, 0])
    cube([1, 1, 1.25]);
  translate([188, 5, 0])
    cube([1, 1, 1.25]);
  translate([189, 5, 0])
    cube([1, 1, 1.25]);
  translate([190, 5, 0])
    cube([1, 1, 1.25]);
  translate([191, 5, 0])
    cube([1, 1, 1.25]);
  translate([192, 5, 0])
    cube([1, 1, 1.25]);
  translate([193, 5, 0])
    cube([1, 1, 1.25]);
  translate([194, 5, 0])
    cube([1, 1, 1.25]);
  translate([195, 5, 0])
    cube([1, 1, 1.25]);
  translate([196, 5, 0])
    cube([1, 1, 1.25]);
  translate([197, 5, 0])
    cube([1, 1, 1.25]);
  translate([198, 5, 0])
    cube([1, 1, 1.25]);
  translate([199, 5, 0])
    cube([1, 1, 1.25]);
  translate([200, 5, 0])
    cube([1, 1, 1.25]);
  translate([201, 5, 0])
    cube([1, 1, 1.25]);
  translate([202, 5, 0])
    cube([1, 1, 1.25]);
  translate([203, 5, 0])
    cube([1, 1, 1.25]);
  translate([204, 5, 0])
    cube([1, 1, 1.25]);
  translate([205, 5, 0])
    cube([1, 1, 1.25]);
  translate([206, 5, 0])
    cube([1, 1, 1.25]);
  translate([207, 5, 0])
    cube([1, 1, 1.25]);
  translate([208, 5, 0])
    cube([1, 1, 1.25]);
  translate([209, 5, 0])
    cube([1, 1, 1.25]);
  translate([210, 5, 0])
    cube([1, 1, 1.25]);
  translate([211, 5, 0])
    cube([1, 1, 1.25]);
  translate([212, 5, 0])
    cube([1, 1, 1.25]);
  translate([213, 5, 0])
    cube([1, 1, 1.25]);
  translate([214, 5, 0])
    cube([1, 1, 1.25]);
  translate([215, 5, 0])
    cube([1, 1, 1.25]);
  translate([216, 5, 0])
    cube([1, 1, 1.25]);
  translate([217, 5, 0])
    cube([1, 1, 1.25]);
  translate([218, 5, 0])
    cube([1, 1, 1.25]);
  translate([219, 5, 0])
    cube([1, 1, 1.25]);
  translate([220, 5, 0])
    cube([1, 1, 1.25]);
  translate([221, 5, 0])
    cube([1, 1, 1.25]);
  translate([222, 5, 0])
    cube([1, 1, 1.25]);
  translate([223, 5, 0])
    cube([1, 1, 1.25]);
  translate([224, 5, 0])
    cube([1, 1, 1.25]);
  translate([225, 5, 0])
    cube([1, 1, 1.25]);
  translate([226, 5, 0])
    cube([1, 1, 1.25]);
  translate([227, 5, 0])
    cube([1, 1, 1.25]);
  translate([228, 5, 0])
    cube([1, 1, 1.25]);
  translate([229, 5, 0])
    cube([1, 1, 1.25]);
  translate([230, 5, 0])
    cube([1, 1, 1.25]);
  translate([231, 5, 0])
    cube([1, 1, 1.25]);
  translate([232, 5, 0])
    cube([1, 1, 1.25]);
  translate([233, 5, 0])
    cube([1, 1, 1.25]);
  translate([234, 5, 0])
    cube([1, 1, 1.25]);
  translate([235, 5, 0])
    cube([1, 1, 1.25]);
  translate([236, 5, 0])
    cube([1, 1, 1.25]);
  translate([237, 5, 0])
    cube([1, 1, 1.25]);
  translate([238, 5, 0])
    cube([1, 1, 1.25]);
  translate([239, 5, 0])
    cube([1, 1, 1.25]);
  translate([240, 5, 0])
    cube([1, 1, 1.25]);
  translate([241, 5, 0])
    cube([1, 1, 1.25]);
  translate([242, 5, 0])
    cube([1, 1, 1.25]);
  translate([243, 5, 0])
    cube([1, 1, 1.25]);
  translate([244, 5, 0])
    cube([1, 1, 1.25]);
  translate([245, 5, 0])
    cube([1, 1, 1.25]);
  translate([246, 5, 0])
    cube([1, 1, 1.25]);
  translate([0, 6, 0])
    cube([1, 1, 1.33]);
  translate([1, 6, 0])
    cube([1, 1, 1.33]);
  translate([2, 6, 0])
    cube([1, 1, 1.33]);
  translate([3, 6, 0])
    cube([1, 1, 1.33]);
  translate([4, 6, 0])
    cube([1, 1, 1.33]);
  translate([5, 6, 0])
    cube([1, 1, 1.33]);
  translate([6, 6, 0])
    cube([1, 1, 1.33]);
  translate([7, 6, 0])
    cube([1, 1, 1.33]);
  translate([8, 6, 0])
    cube([1, 1, 1.33]);
  translate([9, 6, 0])
    cube([1, 1, 1.33]);
  translate([10, 6, 0])
    cube([1, 1, 1.33]);
  translate([11, 6, 0])
    cube([1, 1, 1.33]);
  translate([12, 6, 0])
    cube([1, 1, 1.33]);
  translate([13, 6, 0])
    cube([1, 1, 1.33]);
  translate([14, 6, 0])
    cube([1, 1, 1.33]);
  translate([15, 6, 0])
    cube([1, 1, 1.33]);
  translate([16, 6, 0])
    cube([1, 1, 1.33]);
  translate([17, 6, 0])
    cube([1, 1, 1.33]);
  translate([18, 6, 0])
    cube([1, 1, 1.33]);
  translate([19, 6, 0])
    cube([1, 1, 1.33]);
  translate([20, 6, 0])
    cube([1, 1, 1.33]);
  translate([21, 6, 0])
    cube([1, 1, 1.33]);
  translate([22, 6, 0])
    cube([1, 1, 1.33]);
  translate([23, 6, 0])
    cube([1, 1, 1.33]);
  translate([24, 6, 0])
    cube([1, 1, 1.33]);
  translate([25, 6, 0])
    cube([1, 1, 1.33]);
  translate([26, 6, 0])
    cube([1, 1, 1.33]);
  translate([27, 6, 0])
    cube([1, 1, 1.33]);
  translate([28, 6, 0])
    cube([1, 1, 1.33]);
  translate([29, 6, 0])
    cube([1, 1, 1.33]);
  translate([30, 6, 0])
    cube([1, 1, 1.33]);
  translate([31, 6, 0])
    cube([1, 1, 1.33]);
  translate([32, 6, 0])
    cube([1, 1, 1.33]);
  translate([33, 6, 0])
    cube([1, 1, 1.33]);
  translate([34, 6, 0])
    cube([1, 1, 1.33]);
  translate([35, 6, 0])
    cube([1, 1, 1.33]);
  translate([36, 6, 0])
    cube([1, 1, 1.33]);
  translate([37, 6, 0])
    cube([1, 1, 1.33]);
  translate([38, 6, 0])
    cube([1, 1, 1.33]);
  translate([39, 6, 0])
    cube([1, 1, 1.33]);
  translate([40, 6, 0])
    cube([1, 1, 1.33]);
  translate([41, 6, 0])
    cube([1, 1, 1.33]);
  translate([42, 6, 0])
    cube([1, 1, 1.33]);
  translate([43, 6, 0])
    cube([1, 1, 1.33]);
  translate([44, 6, 0])
    cube([1, 1, 1.33]);
  translate([45, 6, 0])
    cube([1, 1, 1.33]);
  translate([46, 6, 0])
    cube([1, 1, 1.33]);
  translate([47, 6, 0])
    cube([1, 1, 1.33]);
  translate([48, 6, 0])
    cube([1, 1, 1.33]);
  translate([49, 6, 0])
    cube([1, 1, 1.33]);
  translate([50, 6, 0])
    cube([1, 1, 1.33]);
  translate([51, 6, 0])
    cube([1, 1, 1.33]);
  translate([52, 6, 0])
    cube([1, 1, 1.33]);
  translate([53, 6, 0])
    cube([1, 1, 1.33]);
  translate([54, 6, 0])
    cube([1, 1, 1.29]);
  translate([55, 6, 0])
    cube([1, 1, 1.29]);
  translate([56, 6, 0])
    cube([1, 1, 1.33]);
  translate([57, 6, 0])
    cube([1, 1, 1.33]);
  translate([58, 6, 0])
    cube([1, 1, 1.33]);
  translate([59, 6, 0])
    cube([1, 1, 1.33]);
  translate([60, 6, 0])
    cube([1, 1, 1.29]);
  translate([61, 6, 0])
    cube([1, 1, 1.29]);
  translate([62, 6, 0])
    cube([1, 1, 1.33]);
  translate([63, 6, 0])
    cube([1, 1, 1.25]);
  translate([64, 6, 0])
    cube([1, 1, 1.33]);
  translate([65, 6, 0])
    cube([1, 1, 1.29]);
  translate([66, 6, 0])
    cube([1, 1, 1.29]);
  translate([67, 6, 0])
    cube([1, 1, 1.33]);
  translate([68, 6, 0])
    cube([1, 1, 1.29]);
  translate([69, 6, 0])
    cube([1, 1, 1.29]);
  translate([70, 6, 0])
    cube([1, 1, 1.33]);
  translate([71, 6, 0])
    cube([1, 1, 1.33]);
  translate([72, 6, 0])
    cube([1, 1, 1.29]);
  translate([73, 6, 0])
    cube([1, 1, 1.29]);
  translate([74, 6, 0])
    cube([1, 1, 1.29]);
  translate([75, 6, 0])
    cube([1, 1, 1.29]);
  translate([76, 6, 0])
    cube([1, 1, 1.29]);
  translate([77, 6, 0])
    cube([1, 1, 1.33]);
  translate([78, 6, 0])
    cube([1, 1, 1.29]);
  translate([79, 6, 0])
    cube([1, 1, 1.29]);
  translate([80, 6, 0])
    cube([1, 1, 1.29]);
  translate([81, 6, 0])
    cube([1, 1, 1.29]);
  translate([82, 6, 0])
    cube([1, 1, 1.29]);
  translate([83, 6, 0])
    cube([1, 1, 1.29]);
  translate([84, 6, 0])
    cube([1, 1, 1.29]);
  translate([85, 6, 0])
    cube([1, 1, 1.29]);
  translate([86, 6, 0])
    cube([1, 1, 1.29]);
  translate([87, 6, 0])
    cube([1, 1, 1.29]);
  translate([88, 6, 0])
    cube([1, 1, 1.29]);
  translate([89, 6, 0])
    cube([1, 1, 1.29]);
  translate([90, 6, 0])
    cube([1, 1, 1.29]);
  translate([91, 6, 0])
    cube([1, 1, 1.29]);
  translate([92, 6, 0])
    cube([1, 1, 1.29]);
  translate([93, 6, 0])
    cube([1, 1, 1.29]);
  translate([94, 6, 0])
    cube([1, 1, 1.25]);
  translate([95, 6, 0])
    cube([1, 1, 1.25]);
  translate([96, 6, 0])
    cube([1, 1, 1.25]);
  translate([97, 6, 0])
    cube([1, 1, 1.22]);
  translate([98, 6, 0])
    cube([1, 1, 1.22]);
  translate([99, 6, 0])
    cube([1, 1, 1.25]);
  translate([100, 6, 0])
    cube([1, 1, 1.25]);
  translate([101, 6, 0])
    cube([1, 1, 1.25]);
  translate([102, 6, 0])
    cube([1, 1, 1.25]);
  translate([103, 6, 0])
    cube([1, 1, 1.25]);
  translate([104, 6, 0])
    cube([1, 1, 1.25]);
  translate([105, 6, 0])
    cube([1, 1, 1.25]);
  translate([106, 6, 0])
    cube([1, 1, 1.25]);
  translate([107, 6, 0])
    cube([1, 1, 1.25]);
  translate([108, 6, 0])
    cube([1, 1, 1.25]);
  translate([109, 6, 0])
    cube([1, 1, 1.25]);
  translate([110, 6, 0])
    cube([1, 1, 1.25]);
  translate([111, 6, 0])
    cube([1, 1, 1.25]);
  translate([112, 6, 0])
    cube([1, 1, 1.25]);
  translate([113, 6, 0])
    cube([1, 1, 1.25]);
  translate([114, 6, 0])
    cube([1, 1, 1.25]);
  translate([115, 6, 0])
    cube([1, 1, 1.25]);
  translate([116, 6, 0])
    cube([1, 1, 1.25]);
  translate([117, 6, 0])
    cube([1, 1, 1.25]);
  translate([118, 6, 0])
    cube([1, 1, 1.25]);
  translate([119, 6, 0])
    cube([1, 1, 1.25]);
  translate([120, 6, 0])
    cube([1, 1, 1.25]);
  translate([121, 6, 0])
    cube([1, 1, 1.25]);
  translate([122, 6, 0])
    cube([1, 1, 1.25]);
  translate([123, 6, 0])
    cube([1, 1, 1.25]);
  translate([124, 6, 0])
    cube([1, 1, 1.25]);
  translate([125, 6, 0])
    cube([1, 1, 1.25]);
  translate([126, 6, 0])
    cube([1, 1, 1.25]);
  translate([127, 6, 0])
    cube([1, 1, 1.25]);
  translate([128, 6, 0])
    cube([1, 1, 1.25]);
  translate([129, 6, 0])
    cube([1, 1, 1.25]);
  translate([130, 6, 0])
    cube([1, 1, 1.25]);
  translate([131, 6, 0])
    cube([1, 1, 1.25]);
  translate([132, 6, 0])
    cube([1, 1, 1.25]);
  translate([133, 6, 0])
    cube([1, 1, 1.25]);
  translate([134, 6, 0])
    cube([1, 1, 1.25]);
  translate([135, 6, 0])
    cube([1, 1, 1.25]);
  translate([136, 6, 0])
    cube([1, 1, 1.25]);
  translate([137, 6, 0])
    cube([1, 1, 1.25]);
  translate([138, 6, 0])
    cube([1, 1, 1.25]);
  translate([139, 6, 0])
    cube([1, 1, 1.25]);
  translate([140, 6, 0])
    cube([1, 1, 1.25]);
  translate([141, 6, 0])
    cube([1, 1, 1.25]);
  translate([142, 6, 0])
    cube([1, 1, 1.25]);
  translate([143, 6, 0])
    cube([1, 1, 1.25]);
  translate([144, 6, 0])
    cube([1, 1, 1.25]);
  translate([145, 6, 0])
    cube([1, 1, 1.25]);
  translate([146, 6, 0])
    cube([1, 1, 1.25]);
  translate([147, 6, 0])
    cube([1, 1, 1.25]);
  translate([148, 6, 0])
    cube([1, 1, 1.25]);
  translate([149, 6, 0])
    cube([1, 1, 1.25]);
  translate([150, 6, 0])
    cube([1, 1, 1.25]);
  translate([151, 6, 0])
    cube([1, 1, 1.25]);
  translate([152, 6, 0])
    cube([1, 1, 1.25]);
  translate([153, 6, 0])
    cube([1, 1, 1.25]);
  translate([154, 6, 0])
    cube([1, 1, 1.25]);
  translate([155, 6, 0])
    cube([1, 1, 1.25]);
  translate([156, 6, 0])
    cube([1, 1, 1.25]);
  translate([157, 6, 0])
    cube([1, 1, 1.25]);
  translate([158, 6, 0])
    cube([1, 1, 1.25]);
  translate([159, 6, 0])
    cube([1, 1, 1.25]);
  translate([160, 6, 0])
    cube([1, 1, 1.25]);
  translate([161, 6, 0])
    cube([1, 1, 1.25]);
  translate([162, 6, 0])
    cube([1, 1, 1.25]);
  translate([163, 6, 0])
    cube([1, 1, 1.25]);
  translate([164, 6, 0])
    cube([1, 1, 1.25]);
  translate([165, 6, 0])
    cube([1, 1, 1.25]);
  translate([166, 6, 0])
    cube([1, 1, 1.25]);
  translate([167, 6, 0])
    cube([1, 1, 1.25]);
  translate([168, 6, 0])
    cube([1, 1, 1.25]);
  translate([169, 6, 0])
    cube([1, 1, 1.25]);
  translate([170, 6, 0])
    cube([1, 1, 1.25]);
  translate([171, 6, 0])
    cube([1, 1, 1.25]);
  translate([172, 6, 0])
    cube([1, 1, 1.25]);
  translate([173, 6, 0])
    cube([1, 1, 1.25]);
  translate([174, 6, 0])
    cube([1, 1, 1.25]);
  translate([175, 6, 0])
    cube([1, 1, 1.25]);
  translate([176, 6, 0])
    cube([1, 1, 1.25]);
  translate([177, 6, 0])
    cube([1, 1, 1.25]);
  translate([178, 6, 0])
    cube([1, 1, 1.25]);
  translate([179, 6, 0])
    cube([1, 1, 1.25]);
  translate([180, 6, 0])
    cube([1, 1, 1.25]);
  translate([181, 6, 0])
    cube([1, 1, 1.25]);
  translate([182, 6, 0])
    cube([1, 1, 1.25]);
  translate([183, 6, 0])
    cube([1, 1, 1.25]);
  translate([184, 6, 0])
    cube([1, 1, 1.25]);
  translate([185, 6, 0])
    cube([1, 1, 1.25]);
  translate([186, 6, 0])
    cube([1, 1, 1.25]);
  translate([187, 6, 0])
    cube([1, 1, 1.25]);
  translate([188, 6, 0])
    cube([1, 1, 1.25]);
  translate([189, 6, 0])
    cube([1, 1, 1.25]);
  translate([190, 6, 0])
    cube([1, 1, 1.25]);
  translate([191, 6, 0])
    cube([1, 1, 1.25]);
  translate([192, 6, 0])
    cube([1, 1, 1.25]);
  translate([193, 6, 0])
    cube([1, 1, 1.25]);
  translate([194, 6, 0])
    cube([1, 1, 1.25]);
  translate([195, 6, 0])
    cube([1, 1, 1.25]);
  translate([196, 6, 0])
    cube([1, 1, 1.25]);
  translate([197, 6, 0])
    cube([1, 1, 1.25]);
  translate([198, 6, 0])
    cube([1, 1, 1.25]);
  translate([199, 6, 0])
    cube([1, 1, 1.25]);
  translate([200, 6, 0])
    cube([1, 1, 1.25]);
  translate([201, 6, 0])
    cube([1, 1, 1.25]);
  translate([202, 6, 0])
    cube([1, 1, 1.25]);
  translate([203, 6, 0])
    cube([1, 1, 1.25]);
  translate([204, 6, 0])
    cube([1, 1, 1.25]);
  translate([205, 6, 0])
    cube([1, 1, 1.25]);
  translate([206, 6, 0])
    cube([1, 1, 1.25]);
  translate([207, 6, 0])
    cube([1, 1, 1.25]);
  translate([208, 6, 0])
    cube([1, 1, 1.25]);
  translate([209, 6, 0])
    cube([1, 1, 1.25]);
  translate([210, 6, 0])
    cube([1, 1, 1.25]);
  translate([211, 6, 0])
    cube([1, 1, 1.25]);
  translate([212, 6, 0])
    cube([1, 1, 1.25]);
  translate([213, 6, 0])
    cube([1, 1, 1.25]);
  translate([214, 6, 0])
    cube([1, 1, 1.25]);
  translate([215, 6, 0])
    cube([1, 1, 1.25]);
  translate([216, 6, 0])
    cube([1, 1, 1.25]);
  translate([217, 6, 0])
    cube([1, 1, 1.25]);
  translate([218, 6, 0])
    cube([1, 1, 1.25]);
  translate([219, 6, 0])
    cube([1, 1, 1.25]);
  translate([220, 6, 0])
    cube([1, 1, 1.25]);
  translate([221, 6, 0])
    cube([1, 1, 1.25]);
  translate([222, 6, 0])
    cube([1, 1, 1.25]);
  translate([223, 6, 0])
    cube([1, 1, 1.25]);
  translate([224, 6, 0])
    cube([1, 1, 1.25]);
  translate([225, 6, 0])
    cube([1, 1, 1.25]);
  translate([226, 6, 0])
    cube([1, 1, 1.25]);
  translate([227, 6, 0])
    cube([1, 1, 1.25]);
  translate([228, 6, 0])
    cube([1, 1, 1.25]);
  translate([229, 6, 0])
    cube([1, 1, 1.25]);
  translate([230, 6, 0])
    cube([1, 1, 1.25]);
  translate([231, 6, 0])
    cube([1, 1, 1.25]);
  translate([232, 6, 0])
    cube([1, 1, 1.25]);
  translate([233, 6, 0])
    cube([1, 1, 1.25]);
  translate([234, 6, 0])
    cube([1, 1, 1.25]);
  translate([235, 6, 0])
    cube([1, 1, 1.25]);
  translate([236, 6, 0])
    cube([1, 1, 1.25]);
  translate([237, 6, 0])
    cube([1, 1, 1.25]);
  translate([238, 6, 0])
    cube([1, 1, 1.25]);
  translate([239, 6, 0])
    cube([1, 1, 1.25]);
  translate([240, 6, 0])
    cube([1, 1, 1.25]);
  translate([241, 6, 0])
    cube([1, 1, 1.25]);
  translate([242, 6, 0])
    cube([1, 1, 1.25]);
  translate([243, 6, 0])
    cube([1, 1, 1.25]);
  translate([244, 6, 0])
    cube([1, 1, 1.25]);
  translate([245, 6, 0])
    cube([1, 1, 1.25]);
  translate([246, 6, 0])
    cube([1, 1, 1.25]);
  translate([0, 7, 0])
    cube([1, 1, 1.33]);
  translate([1, 7, 0])
    cube([1, 1, 1.33]);
  translate([2, 7, 0])
    cube([1, 1, 1.33]);
  translate([3, 7, 0])
    cube([1, 1, 1.33]);
  translate([4, 7, 0])
    cube([1, 1, 1.33]);
  translate([5, 7, 0])
    cube([1, 1, 1.33]);
  translate([6, 7, 0])
    cube([1, 1, 1.33]);
  translate([7, 7, 0])
    cube([1, 1, 1.33]);
  translate([8, 7, 0])
    cube([1, 1, 1.33]);
  translate([9, 7, 0])
    cube([1, 1, 1.33]);
  translate([10, 7, 0])
    cube([1, 1, 1.33]);
  translate([11, 7, 0])
    cube([1, 1, 1.37]);
  translate([12, 7, 0])
    cube([1, 1, 1.33]);
  translate([13, 7, 0])
    cube([1, 1, 1.33]);
  translate([14, 7, 0])
    cube([1, 1, 1.33]);
  translate([15, 7, 0])
    cube([1, 1, 1.33]);
  translate([16, 7, 0])
    cube([1, 1, 1.33]);
  translate([17, 7, 0])
    cube([1, 1, 1.33]);
  translate([18, 7, 0])
    cube([1, 1, 1.33]);
  translate([19, 7, 0])
    cube([1, 1, 1.33]);
  translate([20, 7, 0])
    cube([1, 1, 1.33]);
  translate([21, 7, 0])
    cube([1, 1, 1.33]);
  translate([22, 7, 0])
    cube([1, 1, 1.33]);
  translate([23, 7, 0])
    cube([1, 1, 1.33]);
  translate([24, 7, 0])
    cube([1, 1, 1.33]);
  translate([25, 7, 0])
    cube([1, 1, 1.33]);
  translate([26, 7, 0])
    cube([1, 1, 1.33]);
  translate([27, 7, 0])
    cube([1, 1, 1.33]);
  translate([28, 7, 0])
    cube([1, 1, 1.33]);
  translate([29, 7, 0])
    cube([1, 1, 1.33]);
  translate([30, 7, 0])
    cube([1, 1, 1.33]);
  translate([31, 7, 0])
    cube([1, 1, 1.33]);
  translate([32, 7, 0])
    cube([1, 1, 1.33]);
  translate([33, 7, 0])
    cube([1, 1, 1.33]);
  translate([34, 7, 0])
    cube([1, 1, 1.33]);
  translate([35, 7, 0])
    cube([1, 1, 1.33]);
  translate([36, 7, 0])
    cube([1, 1, 1.33]);
  translate([37, 7, 0])
    cube([1, 1, 1.33]);
  translate([38, 7, 0])
    cube([1, 1, 1.33]);
  translate([39, 7, 0])
    cube([1, 1, 1.33]);
  translate([40, 7, 0])
    cube([1, 1, 1.33]);
  translate([41, 7, 0])
    cube([1, 1, 1.33]);
  translate([42, 7, 0])
    cube([1, 1, 1.33]);
  translate([43, 7, 0])
    cube([1, 1, 1.33]);
  translate([44, 7, 0])
    cube([1, 1, 1.33]);
  translate([45, 7, 0])
    cube([1, 1, 1.33]);
  translate([46, 7, 0])
    cube([1, 1, 1.33]);
  translate([47, 7, 0])
    cube([1, 1, 1.33]);
  translate([48, 7, 0])
    cube([1, 1, 1.33]);
  translate([49, 7, 0])
    cube([1, 1, 1.33]);
  translate([50, 7, 0])
    cube([1, 1, 1.33]);
  translate([51, 7, 0])
    cube([1, 1, 1.33]);
  translate([52, 7, 0])
    cube([1, 1, 1.33]);
  translate([53, 7, 0])
    cube([1, 1, 1.33]);
  translate([54, 7, 0])
    cube([1, 1, 1.33]);
  translate([55, 7, 0])
    cube([1, 1, 1.33]);
  translate([56, 7, 0])
    cube([1, 1, 1.29]);
  translate([57, 7, 0])
    cube([1, 1, 1.33]);
  translate([58, 7, 0])
    cube([1, 1, 1.33]);
  translate([59, 7, 0])
    cube([1, 1, 1.29]);
  translate([60, 7, 0])
    cube([1, 1, 1.29]);
  translate([61, 7, 0])
    cube([1, 1, 1.33]);
  translate([62, 7, 0])
    cube([1, 1, 1.29]);
  translate([63, 7, 0])
    cube([1, 1, 1.29]);
  translate([64, 7, 0])
    cube([1, 1, 1.33]);
  translate([65, 7, 0])
    cube([1, 1, 1.29]);
  translate([66, 7, 0])
    cube([1, 1, 1.33]);
  translate([67, 7, 0])
    cube([1, 1, 1.33]);
  translate([68, 7, 0])
    cube([1, 1, 1.29]);
  translate([69, 7, 0])
    cube([1, 1, 1.33]);
  translate([70, 7, 0])
    cube([1, 1, 1.29]);
  translate([71, 7, 0])
    cube([1, 1, 1.33]);
  translate([72, 7, 0])
    cube([1, 1, 1.29]);
  translate([73, 7, 0])
    cube([1, 1, 1.25]);
  translate([74, 7, 0])
    cube([1, 1, 1.25]);
  translate([75, 7, 0])
    cube([1, 1, 1.29]);
  translate([76, 7, 0])
    cube([1, 1, 1.29]);
  translate([77, 7, 0])
    cube([1, 1, 1.29]);
  translate([78, 7, 0])
    cube([1, 1, 1.29]);
  translate([79, 7, 0])
    cube([1, 1, 1.25]);
  translate([80, 7, 0])
    cube([1, 1, 1.29]);
  translate([81, 7, 0])
    cube([1, 1, 1.29]);
  translate([82, 7, 0])
    cube([1, 1, 1.29]);
  translate([83, 7, 0])
    cube([1, 1, 1.29]);
  translate([84, 7, 0])
    cube([1, 1, 1.29]);
  translate([85, 7, 0])
    cube([1, 1, 1.29]);
  translate([86, 7, 0])
    cube([1, 1, 1.29]);
  translate([87, 7, 0])
    cube([1, 1, 1.29]);
  translate([88, 7, 0])
    cube([1, 1, 1.29]);
  translate([89, 7, 0])
    cube([1, 1, 1.29]);
  translate([90, 7, 0])
    cube([1, 1, 1.29]);
  translate([91, 7, 0])
    cube([1, 1, 1.29]);
  translate([92, 7, 0])
    cube([1, 1, 1.22]);
  translate([93, 7, 0])
    cube([1, 1, 1.29]);
  translate([94, 7, 0])
    cube([1, 1, 1.25]);
  translate([95, 7, 0])
    cube([1, 1, 1.29]);
  translate([96, 7, 0])
    cube([1, 1, 1.25]);
  translate([97, 7, 0])
    cube([1, 1, 1.25]);
  translate([98, 7, 0])
    cube([1, 1, 1.25]);
  translate([99, 7, 0])
    cube([1, 1, 1.25]);
  translate([100, 7, 0])
    cube([1, 1, 1.29]);
  translate([101, 7, 0])
    cube([1, 1, 1.22]);
  translate([102, 7, 0])
    cube([1, 1, 1.25]);
  translate([103, 7, 0])
    cube([1, 1, 1.25]);
  translate([104, 7, 0])
    cube([1, 1, 1.25]);
  translate([105, 7, 0])
    cube([1, 1, 1.25]);
  translate([106, 7, 0])
    cube([1, 1, 1.25]);
  translate([107, 7, 0])
    cube([1, 1, 1.25]);
  translate([108, 7, 0])
    cube([1, 1, 1.25]);
  translate([109, 7, 0])
    cube([1, 1, 1.25]);
  translate([110, 7, 0])
    cube([1, 1, 1.25]);
  translate([111, 7, 0])
    cube([1, 1, 1.25]);
  translate([112, 7, 0])
    cube([1, 1, 1.25]);
  translate([113, 7, 0])
    cube([1, 1, 1.25]);
  translate([114, 7, 0])
    cube([1, 1, 1.25]);
  translate([115, 7, 0])
    cube([1, 1, 1.25]);
  translate([116, 7, 0])
    cube([1, 1, 1.25]);
  translate([117, 7, 0])
    cube([1, 1, 1.25]);
  translate([118, 7, 0])
    cube([1, 1, 1.25]);
  translate([119, 7, 0])
    cube([1, 1, 1.25]);
  translate([120, 7, 0])
    cube([1, 1, 1.25]);
  translate([121, 7, 0])
    cube([1, 1, 1.25]);
  translate([122, 7, 0])
    cube([1, 1, 1.25]);
  translate([123, 7, 0])
    cube([1, 1, 1.25]);
  translate([124, 7, 0])
    cube([1, 1, 1.25]);
  translate([125, 7, 0])
    cube([1, 1, 1.25]);
  translate([126, 7, 0])
    cube([1, 1, 1.25]);
  translate([127, 7, 0])
    cube([1, 1, 1.25]);
  translate([128, 7, 0])
    cube([1, 1, 1.25]);
  translate([129, 7, 0])
    cube([1, 1, 1.25]);
  translate([130, 7, 0])
    cube([1, 1, 1.25]);
  translate([131, 7, 0])
    cube([1, 1, 1.25]);
  translate([132, 7, 0])
    cube([1, 1, 1.25]);
  translate([133, 7, 0])
    cube([1, 1, 1.25]);
  translate([134, 7, 0])
    cube([1, 1, 1.25]);
  translate([135, 7, 0])
    cube([1, 1, 1.25]);
  translate([136, 7, 0])
    cube([1, 1, 1.25]);
  translate([137, 7, 0])
    cube([1, 1, 1.25]);
  translate([138, 7, 0])
    cube([1, 1, 1.25]);
  translate([139, 7, 0])
    cube([1, 1, 1.25]);
  translate([140, 7, 0])
    cube([1, 1, 1.25]);
  translate([141, 7, 0])
    cube([1, 1, 1.25]);
  translate([142, 7, 0])
    cube([1, 1, 1.25]);
  translate([143, 7, 0])
    cube([1, 1, 1.25]);
  translate([144, 7, 0])
    cube([1, 1, 1.25]);
  translate([145, 7, 0])
    cube([1, 1, 1.25]);
  translate([146, 7, 0])
    cube([1, 1, 1.25]);
  translate([147, 7, 0])
    cube([1, 1, 1.25]);
  translate([148, 7, 0])
    cube([1, 1, 1.25]);
  translate([149, 7, 0])
    cube([1, 1, 1.25]);
  translate([150, 7, 0])
    cube([1, 1, 1.25]);
  translate([151, 7, 0])
    cube([1, 1, 1.25]);
  translate([152, 7, 0])
    cube([1, 1, 1.25]);
  translate([153, 7, 0])
    cube([1, 1, 1.25]);
  translate([154, 7, 0])
    cube([1, 1, 1.25]);
  translate([155, 7, 0])
    cube([1, 1, 1.25]);
  translate([156, 7, 0])
    cube([1, 1, 1.25]);
  translate([157, 7, 0])
    cube([1, 1, 1.25]);
  translate([158, 7, 0])
    cube([1, 1, 1.25]);
  translate([159, 7, 0])
    cube([1, 1, 1.25]);
  translate([160, 7, 0])
    cube([1, 1, 1.25]);
  translate([161, 7, 0])
    cube([1, 1, 1.25]);
  translate([162, 7, 0])
    cube([1, 1, 1.25]);
  translate([163, 7, 0])
    cube([1, 1, 1.25]);
  translate([164, 7, 0])
    cube([1, 1, 1.25]);
  translate([165, 7, 0])
    cube([1, 1, 1.25]);
  translate([166, 7, 0])
    cube([1, 1, 1.25]);
  translate([167, 7, 0])
    cube([1, 1, 1.25]);
  translate([168, 7, 0])
    cube([1, 1, 1.25]);
  translate([169, 7, 0])
    cube([1, 1, 1.25]);
  translate([170, 7, 0])
    cube([1, 1, 1.25]);
  translate([171, 7, 0])
    cube([1, 1, 1.25]);
  translate([172, 7, 0])
    cube([1, 1, 1.25]);
  translate([173, 7, 0])
    cube([1, 1, 1.25]);
  translate([174, 7, 0])
    cube([1, 1, 1.25]);
  translate([175, 7, 0])
    cube([1, 1, 1.25]);
  translate([176, 7, 0])
    cube([1, 1, 1.25]);
  translate([177, 7, 0])
    cube([1, 1, 1.25]);
  translate([178, 7, 0])
    cube([1, 1, 1.25]);
  translate([179, 7, 0])
    cube([1, 1, 1.25]);
  translate([180, 7, 0])
    cube([1, 1, 1.25]);
  translate([181, 7, 0])
    cube([1, 1, 1.25]);
  translate([182, 7, 0])
    cube([1, 1, 1.25]);
  translate([183, 7, 0])
    cube([1, 1, 1.25]);
  translate([184, 7, 0])
    cube([1, 1, 1.25]);
  translate([185, 7, 0])
    cube([1, 1, 1.25]);
  translate([186, 7, 0])
    cube([1, 1, 1.25]);
  translate([187, 7, 0])
    cube([1, 1, 1.25]);
  translate([188, 7, 0])
    cube([1, 1, 1.25]);
  translate([189, 7, 0])
    cube([1, 1, 1.25]);
  translate([190, 7, 0])
    cube([1, 1, 1.25]);
  translate([191, 7, 0])
    cube([1, 1, 1.25]);
  translate([192, 7, 0])
    cube([1, 1, 1.25]);
  translate([193, 7, 0])
    cube([1, 1, 1.25]);
  translate([194, 7, 0])
    cube([1, 1, 1.25]);
  translate([195, 7, 0])
    cube([1, 1, 1.25]);
  translate([196, 7, 0])
    cube([1, 1, 1.25]);
  translate([197, 7, 0])
    cube([1, 1, 1.25]);
  translate([198, 7, 0])
    cube([1, 1, 1.25]);
  translate([199, 7, 0])
    cube([1, 1, 1.25]);
  translate([200, 7, 0])
    cube([1, 1, 1.25]);
  translate([201, 7, 0])
    cube([1, 1, 1.25]);
  translate([202, 7, 0])
    cube([1, 1, 1.25]);
  translate([203, 7, 0])
    cube([1, 1, 1.25]);
  translate([204, 7, 0])
    cube([1, 1, 1.25]);
  translate([205, 7, 0])
    cube([1, 1, 1.25]);
  translate([206, 7, 0])
    cube([1, 1, 1.25]);
  translate([207, 7, 0])
    cube([1, 1, 1.25]);
  translate([208, 7, 0])
    cube([1, 1, 1.25]);
  translate([209, 7, 0])
    cube([1, 1, 1.25]);
  translate([210, 7, 0])
    cube([1, 1, 1.25]);
  translate([211, 7, 0])
    cube([1, 1, 1.25]);
  translate([212, 7, 0])
    cube([1, 1, 1.25]);
  translate([213, 7, 0])
    cube([1, 1, 1.25]);
  translate([214, 7, 0])
    cube([1, 1, 1.25]);
  translate([215, 7, 0])
    cube([1, 1, 1.25]);
  translate([216, 7, 0])
    cube([1, 1, 1.25]);
  translate([217, 7, 0])
    cube([1, 1, 1.25]);
  translate([218, 7, 0])
    cube([1, 1, 1.25]);
  translate([219, 7, 0])
    cube([1, 1, 1.25]);
  translate([220, 7, 0])
    cube([1, 1, 1.25]);
  translate([221, 7, 0])
    cube([1, 1, 1.25]);
  translate([222, 7, 0])
    cube([1, 1, 1.25]);
  translate([223, 7, 0])
    cube([1, 1, 1.25]);
  translate([224, 7, 0])
    cube([1, 1, 1.25]);
  translate([225, 7, 0])
    cube([1, 1, 1.25]);
  translate([226, 7, 0])
    cube([1, 1, 1.25]);
  translate([227, 7, 0])
    cube([1, 1, 1.25]);
  translate([228, 7, 0])
    cube([1, 1, 1.25]);
  translate([229, 7, 0])
    cube([1, 1, 1.25]);
  translate([230, 7, 0])
    cube([1, 1, 1.25]);
  translate([231, 7, 0])
    cube([1, 1, 1.25]);
  translate([232, 7, 0])
    cube([1, 1, 1.25]);
  translate([233, 7, 0])
    cube([1, 1, 1.25]);
  translate([234, 7, 0])
    cube([1, 1, 1.25]);
  translate([235, 7, 0])
    cube([1, 1, 1.25]);
  translate([236, 7, 0])
    cube([1, 1, 1.25]);
  translate([237, 7, 0])
    cube([1, 1, 1.25]);
  translate([238, 7, 0])
    cube([1, 1, 1.25]);
  translate([239, 7, 0])
    cube([1, 1, 1.25]);
  translate([240, 7, 0])
    cube([1, 1, 1.25]);
  translate([241, 7, 0])
    cube([1, 1, 1.25]);
  translate([242, 7, 0])
    cube([1, 1, 1.25]);
  translate([243, 7, 0])
    cube([1, 1, 1.25]);
  translate([244, 7, 0])
    cube([1, 1, 1.25]);
  translate([245, 7, 0])
    cube([1, 1, 1.25]);
  translate([246, 7, 0])
    cube([1, 1, 1.25]);
  translate([0, 8, 0])
    cube([1, 1, 1.33]);
  translate([1, 8, 0])
    cube([1, 1, 1.33]);
  translate([2, 8, 0])
    cube([1, 1, 1.33]);
  translate([3, 8, 0])
    cube([1, 1, 1.33]);
  translate([4, 8, 0])
    cube([1, 1, 1.33]);
  translate([5, 8, 0])
    cube([1, 1, 1.33]);
  translate([6, 8, 0])
    cube([1, 1, 1.29]);
  translate([7, 8, 0])
    cube([1, 1, 1.33]);
  translate([8, 8, 0])
    cube([1, 1, 1.33]);
  translate([9, 8, 0])
    cube([1, 1, 1.33]);
  translate([10, 8, 0])
    cube([1, 1, 1.33]);
  translate([11, 8, 0])
    cube([1, 1, 1.37]);
  translate([12, 8, 0])
    cube([1, 1, 1.33]);
  translate([13, 8, 0])
    cube([1, 1, 1.33]);
  translate([14, 8, 0])
    cube([1, 1, 1.33]);
  translate([15, 8, 0])
    cube([1, 1, 1.33]);
  translate([16, 8, 0])
    cube([1, 1, 1.29]);
  translate([17, 8, 0])
    cube([1, 1, 1.33]);
  translate([18, 8, 0])
    cube([1, 1, 1.33]);
  translate([19, 8, 0])
    cube([1, 1, 1.33]);
  translate([20, 8, 0])
    cube([1, 1, 1.33]);
  translate([21, 8, 0])
    cube([1, 1, 1.33]);
  translate([22, 8, 0])
    cube([1, 1, 1.33]);
  translate([23, 8, 0])
    cube([1, 1, 1.33]);
  translate([24, 8, 0])
    cube([1, 1, 1.33]);
  translate([25, 8, 0])
    cube([1, 1, 1.33]);
  translate([26, 8, 0])
    cube([1, 1, 1.33]);
  translate([27, 8, 0])
    cube([1, 1, 1.33]);
  translate([28, 8, 0])
    cube([1, 1, 1.33]);
  translate([29, 8, 0])
    cube([1, 1, 1.33]);
  translate([30, 8, 0])
    cube([1, 1, 1.33]);
  translate([31, 8, 0])
    cube([1, 1, 1.33]);
  translate([32, 8, 0])
    cube([1, 1, 1.33]);
  translate([33, 8, 0])
    cube([1, 1, 1.33]);
  translate([34, 8, 0])
    cube([1, 1, 1.33]);
  translate([35, 8, 0])
    cube([1, 1, 1.33]);
  translate([36, 8, 0])
    cube([1, 1, 1.33]);
  translate([37, 8, 0])
    cube([1, 1, 1.33]);
  translate([38, 8, 0])
    cube([1, 1, 1.33]);
  translate([39, 8, 0])
    cube([1, 1, 1.33]);
  translate([40, 8, 0])
    cube([1, 1, 1.33]);
  translate([41, 8, 0])
    cube([1, 1, 1.33]);
  translate([42, 8, 0])
    cube([1, 1, 1.33]);
  translate([43, 8, 0])
    cube([1, 1, 1.33]);
  translate([44, 8, 0])
    cube([1, 1, 1.33]);
  translate([45, 8, 0])
    cube([1, 1, 1.33]);
  translate([46, 8, 0])
    cube([1, 1, 1.33]);
  translate([47, 8, 0])
    cube([1, 1, 1.33]);
  translate([48, 8, 0])
    cube([1, 1, 1.33]);
  translate([49, 8, 0])
    cube([1, 1, 1.33]);
  translate([50, 8, 0])
    cube([1, 1, 1.33]);
  translate([51, 8, 0])
    cube([1, 1, 1.33]);
  translate([52, 8, 0])
    cube([1, 1, 1.33]);
  translate([53, 8, 0])
    cube([1, 1, 1.33]);
  translate([54, 8, 0])
    cube([1, 1, 1.33]);
  translate([55, 8, 0])
    cube([1, 1, 1.33]);
  translate([56, 8, 0])
    cube([1, 1, 1.33]);
  translate([57, 8, 0])
    cube([1, 1, 1.33]);
  translate([58, 8, 0])
    cube([1, 1, 1.33]);
  translate([59, 8, 0])
    cube([1, 1, 1.33]);
  translate([60, 8, 0])
    cube([1, 1, 1.33]);
  translate([61, 8, 0])
    cube([1, 1, 1.33]);
  translate([62, 8, 0])
    cube([1, 1, 1.33]);
  translate([63, 8, 0])
    cube([1, 1, 1.33]);
  translate([64, 8, 0])
    cube([1, 1, 1.29]);
  translate([65, 8, 0])
    cube([1, 1, 1.29]);
  translate([66, 8, 0])
    cube([1, 1, 1.29]);
  translate([67, 8, 0])
    cube([1, 1, 1.33]);
  translate([68, 8, 0])
    cube([1, 1, 1.25]);
  translate([69, 8, 0])
    cube([1, 1, 1.29]);
  translate([70, 8, 0])
    cube([1, 1, 1.29]);
  translate([71, 8, 0])
    cube([1, 1, 1.29]);
  translate([72, 8, 0])
    cube([1, 1, 1.29]);
  translate([73, 8, 0])
    cube([1, 1, 1.25]);
  translate([74, 8, 0])
    cube([1, 1, 1.29]);
  translate([75, 8, 0])
    cube([1, 1, 1.29]);
  translate([76, 8, 0])
    cube([1, 1, 1.29]);
  translate([77, 8, 0])
    cube([1, 1, 1.29]);
  translate([78, 8, 0])
    cube([1, 1, 1.29]);
  translate([79, 8, 0])
    cube([1, 1, 1.29]);
  translate([80, 8, 0])
    cube([1, 1, 1.29]);
  translate([81, 8, 0])
    cube([1, 1, 1.29]);
  translate([82, 8, 0])
    cube([1, 1, 1.29]);
  translate([83, 8, 0])
    cube([1, 1, 1.29]);
  translate([84, 8, 0])
    cube([1, 1, 1.29]);
  translate([85, 8, 0])
    cube([1, 1, 1.29]);
  translate([86, 8, 0])
    cube([1, 1, 1.29]);
  translate([87, 8, 0])
    cube([1, 1, 1.29]);
  translate([88, 8, 0])
    cube([1, 1, 1.29]);
  translate([89, 8, 0])
    cube([1, 1, 1.29]);
  translate([90, 8, 0])
    cube([1, 1, 1.29]);
  translate([91, 8, 0])
    cube([1, 1, 1.25]);
  translate([92, 8, 0])
    cube([1, 1, 1.25]);
  translate([93, 8, 0])
    cube([1, 1, 1.29]);
  translate([94, 8, 0])
    cube([1, 1, 1.22]);
  translate([95, 8, 0])
    cube([1, 1, 1.25]);
  translate([96, 8, 0])
    cube([1, 1, 1.29]);
  translate([97, 8, 0])
    cube([1, 1, 1.25]);
  translate([98, 8, 0])
    cube([1, 1, 1.25]);
  translate([99, 8, 0])
    cube([1, 1, 1.22]);
  translate([100, 8, 0])
    cube([1, 1, 1.25]);
  translate([101, 8, 0])
    cube([1, 1, 1.25]);
  translate([102, 8, 0])
    cube([1, 1, 1.25]);
  translate([103, 8, 0])
    cube([1, 1, 1.25]);
  translate([104, 8, 0])
    cube([1, 1, 1.25]);
  translate([105, 8, 0])
    cube([1, 1, 1.25]);
  translate([106, 8, 0])
    cube([1, 1, 1.25]);
  translate([107, 8, 0])
    cube([1, 1, 1.25]);
  translate([108, 8, 0])
    cube([1, 1, 1.25]);
  translate([109, 8, 0])
    cube([1, 1, 1.25]);
  translate([110, 8, 0])
    cube([1, 1, 1.25]);
  translate([111, 8, 0])
    cube([1, 1, 1.25]);
  translate([112, 8, 0])
    cube([1, 1, 1.25]);
  translate([113, 8, 0])
    cube([1, 1, 1.25]);
  translate([114, 8, 0])
    cube([1, 1, 1.25]);
  translate([115, 8, 0])
    cube([1, 1, 1.25]);
  translate([116, 8, 0])
    cube([1, 1, 1.25]);
  translate([117, 8, 0])
    cube([1, 1, 1.25]);
  translate([118, 8, 0])
    cube([1, 1, 1.25]);
  translate([119, 8, 0])
    cube([1, 1, 1.25]);
  translate([120, 8, 0])
    cube([1, 1, 1.25]);
  translate([121, 8, 0])
    cube([1, 1, 1.25]);
  translate([122, 8, 0])
    cube([1, 1, 1.25]);
  translate([123, 8, 0])
    cube([1, 1, 1.25]);
  translate([124, 8, 0])
    cube([1, 1, 1.25]);
  translate([125, 8, 0])
    cube([1, 1, 1.25]);
  translate([126, 8, 0])
    cube([1, 1, 1.25]);
  translate([127, 8, 0])
    cube([1, 1, 1.25]);
  translate([128, 8, 0])
    cube([1, 1, 1.25]);
  translate([129, 8, 0])
    cube([1, 1, 1.25]);
  translate([130, 8, 0])
    cube([1, 1, 1.25]);
  translate([131, 8, 0])
    cube([1, 1, 1.25]);
  translate([132, 8, 0])
    cube([1, 1, 1.25]);
  translate([133, 8, 0])
    cube([1, 1, 1.25]);
  translate([134, 8, 0])
    cube([1, 1, 1.25]);
  translate([135, 8, 0])
    cube([1, 1, 1.25]);
  translate([136, 8, 0])
    cube([1, 1, 1.25]);
  translate([137, 8, 0])
    cube([1, 1, 1.25]);
  translate([138, 8, 0])
    cube([1, 1, 1.25]);
  translate([139, 8, 0])
    cube([1, 1, 1.25]);
  translate([140, 8, 0])
    cube([1, 1, 1.25]);
  translate([141, 8, 0])
    cube([1, 1, 1.25]);
  translate([142, 8, 0])
    cube([1, 1, 1.25]);
  translate([143, 8, 0])
    cube([1, 1, 1.25]);
  translate([144, 8, 0])
    cube([1, 1, 1.25]);
  translate([145, 8, 0])
    cube([1, 1, 1.25]);
  translate([146, 8, 0])
    cube([1, 1, 1.25]);
  translate([147, 8, 0])
    cube([1, 1, 1.25]);
  translate([148, 8, 0])
    cube([1, 1, 1.25]);
  translate([149, 8, 0])
    cube([1, 1, 1.25]);
  translate([150, 8, 0])
    cube([1, 1, 1.25]);
  translate([151, 8, 0])
    cube([1, 1, 1.25]);
  translate([152, 8, 0])
    cube([1, 1, 1.25]);
  translate([153, 8, 0])
    cube([1, 1, 1.25]);
  translate([154, 8, 0])
    cube([1, 1, 1.25]);
  translate([155, 8, 0])
    cube([1, 1, 1.25]);
  translate([156, 8, 0])
    cube([1, 1, 1.25]);
  translate([157, 8, 0])
    cube([1, 1, 1.25]);
  translate([158, 8, 0])
    cube([1, 1, 1.25]);
  translate([159, 8, 0])
    cube([1, 1, 1.25]);
  translate([160, 8, 0])
    cube([1, 1, 1.25]);
  translate([161, 8, 0])
    cube([1, 1, 1.25]);
  translate([162, 8, 0])
    cube([1, 1, 1.25]);
  translate([163, 8, 0])
    cube([1, 1, 1.25]);
  translate([164, 8, 0])
    cube([1, 1, 1.25]);
  translate([165, 8, 0])
    cube([1, 1, 1.25]);
  translate([166, 8, 0])
    cube([1, 1, 1.25]);
  translate([167, 8, 0])
    cube([1, 1, 1.25]);
  translate([168, 8, 0])
    cube([1, 1, 1.25]);
  translate([169, 8, 0])
    cube([1, 1, 1.25]);
  translate([170, 8, 0])
    cube([1, 1, 1.25]);
  translate([171, 8, 0])
    cube([1, 1, 1.25]);
  translate([172, 8, 0])
    cube([1, 1, 1.25]);
  translate([173, 8, 0])
    cube([1, 1, 1.25]);
  translate([174, 8, 0])
    cube([1, 1, 1.25]);
  translate([175, 8, 0])
    cube([1, 1, 1.25]);
  translate([176, 8, 0])
    cube([1, 1, 1.25]);
  translate([177, 8, 0])
    cube([1, 1, 1.25]);
  translate([178, 8, 0])
    cube([1, 1, 1.25]);
  translate([179, 8, 0])
    cube([1, 1, 1.25]);
  translate([180, 8, 0])
    cube([1, 1, 1.25]);
  translate([181, 8, 0])
    cube([1, 1, 1.25]);
  translate([182, 8, 0])
    cube([1, 1, 1.25]);
  translate([183, 8, 0])
    cube([1, 1, 1.25]);
  translate([184, 8, 0])
    cube([1, 1, 1.25]);
  translate([185, 8, 0])
    cube([1, 1, 1.25]);
  translate([186, 8, 0])
    cube([1, 1, 1.25]);
  translate([187, 8, 0])
    cube([1, 1, 1.25]);
  translate([188, 8, 0])
    cube([1, 1, 1.25]);
  translate([189, 8, 0])
    cube([1, 1, 1.25]);
  translate([190, 8, 0])
    cube([1, 1, 1.25]);
  translate([191, 8, 0])
    cube([1, 1, 1.25]);
  translate([192, 8, 0])
    cube([1, 1, 1.25]);
  translate([193, 8, 0])
    cube([1, 1, 1.25]);
  translate([194, 8, 0])
    cube([1, 1, 1.25]);
  translate([195, 8, 0])
    cube([1, 1, 1.25]);
  translate([196, 8, 0])
    cube([1, 1, 1.25]);
  translate([197, 8, 0])
    cube([1, 1, 1.25]);
  translate([198, 8, 0])
    cube([1, 1, 1.25]);
  translate([199, 8, 0])
    cube([1, 1, 1.25]);
  translate([200, 8, 0])
    cube([1, 1, 1.25]);
  translate([201, 8, 0])
    cube([1, 1, 1.25]);
  translate([202, 8, 0])
    cube([1, 1, 1.25]);
  translate([203, 8, 0])
    cube([1, 1, 1.25]);
  translate([204, 8, 0])
    cube([1, 1, 1.25]);
  translate([205, 8, 0])
    cube([1, 1, 1.25]);
  translate([206, 8, 0])
    cube([1, 1, 1.25]);
  translate([207, 8, 0])
    cube([1, 1, 1.25]);
  translate([208, 8, 0])
    cube([1, 1, 1.25]);
  translate([209, 8, 0])
    cube([1, 1, 1.25]);
  translate([210, 8, 0])
    cube([1, 1, 1.25]);
  translate([211, 8, 0])
    cube([1, 1, 1.25]);
  translate([212, 8, 0])
    cube([1, 1, 1.25]);
  translate([213, 8, 0])
    cube([1, 1, 1.25]);
  translate([214, 8, 0])
    cube([1, 1, 1.25]);
  translate([215, 8, 0])
    cube([1, 1, 1.25]);
  translate([216, 8, 0])
    cube([1, 1, 1.25]);
  translate([217, 8, 0])
    cube([1, 1, 1.25]);
  translate([218, 8, 0])
    cube([1, 1, 1.25]);
  translate([219, 8, 0])
    cube([1, 1, 1.25]);
  translate([220, 8, 0])
    cube([1, 1, 1.25]);
  translate([221, 8, 0])
    cube([1, 1, 1.25]);
  translate([222, 8, 0])
    cube([1, 1, 1.25]);
  translate([223, 8, 0])
    cube([1, 1, 1.25]);
  translate([224, 8, 0])
    cube([1, 1, 1.25]);
  translate([225, 8, 0])
    cube([1, 1, 1.25]);
  translate([226, 8, 0])
    cube([1, 1, 1.25]);
  translate([227, 8, 0])
    cube([1, 1, 1.25]);
  translate([228, 8, 0])
    cube([1, 1, 1.25]);
  translate([229, 8, 0])
    cube([1, 1, 1.25]);
  translate([230, 8, 0])
    cube([1, 1, 1.25]);
  translate([231, 8, 0])
    cube([1, 1, 1.25]);
  translate([232, 8, 0])
    cube([1, 1, 1.25]);
  translate([233, 8, 0])
    cube([1, 1, 1.25]);
  translate([234, 8, 0])
    cube([1, 1, 1.25]);
  translate([235, 8, 0])
    cube([1, 1, 1.25]);
  translate([236, 8, 0])
    cube([1, 1, 1.25]);
  translate([237, 8, 0])
    cube([1, 1, 1.25]);
  translate([238, 8, 0])
    cube([1, 1, 1.25]);
  translate([239, 8, 0])
    cube([1, 1, 1.25]);
  translate([240, 8, 0])
    cube([1, 1, 1.25]);
  translate([241, 8, 0])
    cube([1, 1, 1.25]);
  translate([242, 8, 0])
    cube([1, 1, 1.25]);
  translate([243, 8, 0])
    cube([1, 1, 1.25]);
  translate([244, 8, 0])
    cube([1, 1, 1.25]);
  translate([245, 8, 0])
    cube([1, 1, 1.25]);
  translate([246, 8, 0])
    cube([1, 1, 1.25]);
  translate([0, 9, 0])
    cube([1, 1, 1.33]);
  translate([1, 9, 0])
    cube([1, 1, 1.33]);
  translate([2, 9, 0])
    cube([1, 1, 1.33]);
  translate([3, 9, 0])
    cube([1, 1, 1.33]);
  translate([4, 9, 0])
    cube([1, 1, 1.33]);
  translate([5, 9, 0])
    cube([1, 1, 1.33]);
  translate([6, 9, 0])
    cube([1, 1, 1.37]);
  translate([7, 9, 0])
    cube([1, 1, 1.29]);
  translate([8, 9, 0])
    cube([1, 1, 1.33]);
  translate([9, 9, 0])
    cube([1, 1, 1.33]);
  translate([10, 9, 0])
    cube([1, 1, 1.33]);
  translate([11, 9, 0])
    cube([1, 1, 1.37]);
  translate([12, 9, 0])
    cube([1, 1, 1.33]);
  translate([13, 9, 0])
    cube([1, 1, 1.33]);
  translate([14, 9, 0])
    cube([1, 1, 1.33]);
  translate([15, 9, 0])
    cube([1, 1, 1.33]);
  translate([16, 9, 0])
    cube([1, 1, 1.41]);
  translate([17, 9, 0])
    cube([1, 1, 1.33]);
  translate([18, 9, 0])
    cube([1, 1, 1.33]);
  translate([19, 9, 0])
    cube([1, 1, 1.33]);
  translate([20, 9, 0])
    cube([1, 1, 1.33]);
  translate([21, 9, 0])
    cube([1, 1, 1.33]);
  translate([22, 9, 0])
    cube([1, 1, 1.33]);
  translate([23, 9, 0])
    cube([1, 1, 1.33]);
  translate([24, 9, 0])
    cube([1, 1, 1.33]);
  translate([25, 9, 0])
    cube([1, 1, 1.33]);
  translate([26, 9, 0])
    cube([1, 1, 1.33]);
  translate([27, 9, 0])
    cube([1, 1, 1.33]);
  translate([28, 9, 0])
    cube([1, 1, 1.33]);
  translate([29, 9, 0])
    cube([1, 1, 1.33]);
  translate([30, 9, 0])
    cube([1, 1, 1.33]);
  translate([31, 9, 0])
    cube([1, 1, 1.33]);
  translate([32, 9, 0])
    cube([1, 1, 1.33]);
  translate([33, 9, 0])
    cube([1, 1, 1.33]);
  translate([34, 9, 0])
    cube([1, 1, 1.33]);
  translate([35, 9, 0])
    cube([1, 1, 1.33]);
  translate([36, 9, 0])
    cube([1, 1, 1.33]);
  translate([37, 9, 0])
    cube([1, 1, 1.33]);
  translate([38, 9, 0])
    cube([1, 1, 1.33]);
  translate([39, 9, 0])
    cube([1, 1, 1.33]);
  translate([40, 9, 0])
    cube([1, 1, 1.33]);
  translate([41, 9, 0])
    cube([1, 1, 1.33]);
  translate([42, 9, 0])
    cube([1, 1, 1.33]);
  translate([43, 9, 0])
    cube([1, 1, 1.33]);
  translate([44, 9, 0])
    cube([1, 1, 1.33]);
  translate([45, 9, 0])
    cube([1, 1, 1.33]);
  translate([46, 9, 0])
    cube([1, 1, 1.33]);
  translate([47, 9, 0])
    cube([1, 1, 1.33]);
  translate([48, 9, 0])
    cube([1, 1, 1.33]);
  translate([49, 9, 0])
    cube([1, 1, 1.33]);
  translate([50, 9, 0])
    cube([1, 1, 1.33]);
  translate([51, 9, 0])
    cube([1, 1, 1.33]);
  translate([52, 9, 0])
    cube([1, 1, 1.33]);
  translate([53, 9, 0])
    cube([1, 1, 1.33]);
  translate([54, 9, 0])
    cube([1, 1, 1.33]);
  translate([55, 9, 0])
    cube([1, 1, 1.33]);
  translate([56, 9, 0])
    cube([1, 1, 1.33]);
  translate([57, 9, 0])
    cube([1, 1, 1.33]);
  translate([58, 9, 0])
    cube([1, 1, 1.33]);
  translate([59, 9, 0])
    cube([1, 1, 1.33]);
  translate([60, 9, 0])
    cube([1, 1, 1.33]);
  translate([61, 9, 0])
    cube([1, 1, 1.33]);
  translate([62, 9, 0])
    cube([1, 1, 1.33]);
  translate([63, 9, 0])
    cube([1, 1, 1.33]);
  translate([64, 9, 0])
    cube([1, 1, 1.29]);
  translate([65, 9, 0])
    cube([1, 1, 1.29]);
  translate([66, 9, 0])
    cube([1, 1, 1.29]);
  translate([67, 9, 0])
    cube([1, 1, 1.33]);
  translate([68, 9, 0])
    cube([1, 1, 1.25]);
  translate([69, 9, 0])
    cube([1, 1, 1.29]);
  translate([70, 9, 0])
    cube([1, 1, 1.29]);
  translate([71, 9, 0])
    cube([1, 1, 1.29]);
  translate([72, 9, 0])
    cube([1, 1, 1.29]);
  translate([73, 9, 0])
    cube([1, 1, 1.29]);
  translate([74, 9, 0])
    cube([1, 1, 1.33]);
  translate([75, 9, 0])
    cube([1, 1, 1.29]);
  translate([76, 9, 0])
    cube([1, 1, 1.29]);
  translate([77, 9, 0])
    cube([1, 1, 1.29]);
  translate([78, 9, 0])
    cube([1, 1, 1.29]);
  translate([79, 9, 0])
    cube([1, 1, 1.29]);
  translate([80, 9, 0])
    cube([1, 1, 1.29]);
  translate([81, 9, 0])
    cube([1, 1, 1.29]);
  translate([82, 9, 0])
    cube([1, 1, 1.29]);
  translate([83, 9, 0])
    cube([1, 1, 1.29]);
  translate([84, 9, 0])
    cube([1, 1, 1.29]);
  translate([85, 9, 0])
    cube([1, 1, 1.29]);
  translate([86, 9, 0])
    cube([1, 1, 1.29]);
  translate([87, 9, 0])
    cube([1, 1, 1.29]);
  translate([88, 9, 0])
    cube([1, 1, 1.29]);
  translate([89, 9, 0])
    cube([1, 1, 1.29]);
  translate([90, 9, 0])
    cube([1, 1, 1.29]);
  translate([91, 9, 0])
    cube([1, 1, 1.25]);
  translate([92, 9, 0])
    cube([1, 1, 1.25]);
  translate([93, 9, 0])
    cube([1, 1, 1.29]);
  translate([94, 9, 0])
    cube([1, 1, 1.22]);
  translate([95, 9, 0])
    cube([1, 1, 1.25]);
  translate([96, 9, 0])
    cube([1, 1, 1.29]);
  translate([97, 9, 0])
    cube([1, 1, 1.25]);
  translate([98, 9, 0])
    cube([1, 1, 1.25]);
  translate([99, 9, 0])
    cube([1, 1, 1.29]);
  translate([100, 9, 0])
    cube([1, 1, 1.25]);
  translate([101, 9, 0])
    cube([1, 1, 1.25]);
  translate([102, 9, 0])
    cube([1, 1, 1.25]);
  translate([103, 9, 0])
    cube([1, 1, 1.25]);
  translate([104, 9, 0])
    cube([1, 1, 1.25]);
  translate([105, 9, 0])
    cube([1, 1, 1.25]);
  translate([106, 9, 0])
    cube([1, 1, 1.25]);
  translate([107, 9, 0])
    cube([1, 1, 1.25]);
  translate([108, 9, 0])
    cube([1, 1, 1.25]);
  translate([109, 9, 0])
    cube([1, 1, 1.25]);
  translate([110, 9, 0])
    cube([1, 1, 1.25]);
  translate([111, 9, 0])
    cube([1, 1, 1.25]);
  translate([112, 9, 0])
    cube([1, 1, 1.25]);
  translate([113, 9, 0])
    cube([1, 1, 1.25]);
  translate([114, 9, 0])
    cube([1, 1, 1.25]);
  translate([115, 9, 0])
    cube([1, 1, 1.25]);
  translate([116, 9, 0])
    cube([1, 1, 1.25]);
  translate([117, 9, 0])
    cube([1, 1, 1.25]);
  translate([118, 9, 0])
    cube([1, 1, 1.25]);
  translate([119, 9, 0])
    cube([1, 1, 1.25]);
  translate([120, 9, 0])
    cube([1, 1, 1.25]);
  translate([121, 9, 0])
    cube([1, 1, 1.25]);
  translate([122, 9, 0])
    cube([1, 1, 1.25]);
  translate([123, 9, 0])
    cube([1, 1, 1.25]);
  translate([124, 9, 0])
    cube([1, 1, 1.25]);
  translate([125, 9, 0])
    cube([1, 1, 1.25]);
  translate([126, 9, 0])
    cube([1, 1, 1.25]);
  translate([127, 9, 0])
    cube([1, 1, 1.25]);
  translate([128, 9, 0])
    cube([1, 1, 1.25]);
  translate([129, 9, 0])
    cube([1, 1, 1.25]);
  translate([130, 9, 0])
    cube([1, 1, 1.25]);
  translate([131, 9, 0])
    cube([1, 1, 1.25]);
  translate([132, 9, 0])
    cube([1, 1, 1.25]);
  translate([133, 9, 0])
    cube([1, 1, 1.25]);
  translate([134, 9, 0])
    cube([1, 1, 1.25]);
  translate([135, 9, 0])
    cube([1, 1, 1.25]);
  translate([136, 9, 0])
    cube([1, 1, 1.25]);
  translate([137, 9, 0])
    cube([1, 1, 1.25]);
  translate([138, 9, 0])
    cube([1, 1, 1.25]);
  translate([139, 9, 0])
    cube([1, 1, 1.25]);
  translate([140, 9, 0])
    cube([1, 1, 1.25]);
  translate([141, 9, 0])
    cube([1, 1, 1.25]);
  translate([142, 9, 0])
    cube([1, 1, 1.25]);
  translate([143, 9, 0])
    cube([1, 1, 1.25]);
  translate([144, 9, 0])
    cube([1, 1, 1.25]);
  translate([145, 9, 0])
    cube([1, 1, 1.25]);
  translate([146, 9, 0])
    cube([1, 1, 1.25]);
  translate([147, 9, 0])
    cube([1, 1, 1.25]);
  translate([148, 9, 0])
    cube([1, 1, 1.25]);
  translate([149, 9, 0])
    cube([1, 1, 1.25]);
  translate([150, 9, 0])
    cube([1, 1, 1.25]);
  translate([151, 9, 0])
    cube([1, 1, 1.25]);
  translate([152, 9, 0])
    cube([1, 1, 1.25]);
  translate([153, 9, 0])
    cube([1, 1, 1.25]);
  translate([154, 9, 0])
    cube([1, 1, 1.25]);
  translate([155, 9, 0])
    cube([1, 1, 1.25]);
  translate([156, 9, 0])
    cube([1, 1, 1.25]);
  translate([157, 9, 0])
    cube([1, 1, 1.25]);
  translate([158, 9, 0])
    cube([1, 1, 1.25]);
  translate([159, 9, 0])
    cube([1, 1, 1.25]);
  translate([160, 9, 0])
    cube([1, 1, 1.25]);
  translate([161, 9, 0])
    cube([1, 1, 1.25]);
  translate([162, 9, 0])
    cube([1, 1, 1.25]);
  translate([163, 9, 0])
    cube([1, 1, 1.25]);
  translate([164, 9, 0])
    cube([1, 1, 1.25]);
  translate([165, 9, 0])
    cube([1, 1, 1.25]);
  translate([166, 9, 0])
    cube([1, 1, 1.25]);
  translate([167, 9, 0])
    cube([1, 1, 1.25]);
  translate([168, 9, 0])
    cube([1, 1, 1.25]);
  translate([169, 9, 0])
    cube([1, 1, 1.25]);
  translate([170, 9, 0])
    cube([1, 1, 1.25]);
  translate([171, 9, 0])
    cube([1, 1, 1.25]);
  translate([172, 9, 0])
    cube([1, 1, 1.25]);
  translate([173, 9, 0])
    cube([1, 1, 1.25]);
  translate([174, 9, 0])
    cube([1, 1, 1.25]);
  translate([175, 9, 0])
    cube([1, 1, 1.25]);
  translate([176, 9, 0])
    cube([1, 1, 1.25]);
  translate([177, 9, 0])
    cube([1, 1, 1.25]);
  translate([178, 9, 0])
    cube([1, 1, 1.25]);
  translate([179, 9, 0])
    cube([1, 1, 1.25]);
  translate([180, 9, 0])
    cube([1, 1, 1.25]);
  translate([181, 9, 0])
    cube([1, 1, 1.25]);
  translate([182, 9, 0])
    cube([1, 1, 1.25]);
  translate([183, 9, 0])
    cube([1, 1, 1.25]);
  translate([184, 9, 0])
    cube([1, 1, 1.25]);
  translate([185, 9, 0])
    cube([1, 1, 1.25]);
  translate([186, 9, 0])
    cube([1, 1, 1.25]);
  translate([187, 9, 0])
    cube([1, 1, 1.25]);
  translate([188, 9, 0])
    cube([1, 1, 1.25]);
  translate([189, 9, 0])
    cube([1, 1, 1.25]);
  translate([190, 9, 0])
    cube([1, 1, 1.25]);
  translate([191, 9, 0])
    cube([1, 1, 1.25]);
  translate([192, 9, 0])
    cube([1, 1, 1.25]);
  translate([193, 9, 0])
    cube([1, 1, 1.25]);
  translate([194, 9, 0])
    cube([1, 1, 1.25]);
  translate([195, 9, 0])
    cube([1, 1, 1.25]);
  translate([196, 9, 0])
    cube([1, 1, 1.25]);
  translate([197, 9, 0])
    cube([1, 1, 1.25]);
  translate([198, 9, 0])
    cube([1, 1, 1.25]);
  translate([199, 9, 0])
    cube([1, 1, 1.25]);
  translate([200, 9, 0])
    cube([1, 1, 1.25]);
  translate([201, 9, 0])
    cube([1, 1, 1.25]);
  translate([202, 9, 0])
    cube([1, 1, 1.25]);
  translate([203, 9, 0])
    cube([1, 1, 1.25]);
  translate([204, 9, 0])
    cube([1, 1, 1.25]);
  translate([205, 9, 0])
    cube([1, 1, 1.25]);
  translate([206, 9, 0])
    cube([1, 1, 1.25]);
  translate([207, 9, 0])
    cube([1, 1, 1.25]);
  translate([208, 9, 0])
    cube([1, 1, 1.25]);
  translate([209, 9, 0])
    cube([1, 1, 1.25]);
  translate([210, 9, 0])
    cube([1, 1, 1.25]);
  translate([211, 9, 0])
    cube([1, 1, 1.25]);
  translate([212, 9, 0])
    cube([1, 1, 1.25]);
  translate([213, 9, 0])
    cube([1, 1, 1.25]);
  translate([214, 9, 0])
    cube([1, 1, 1.25]);
  translate([215, 9, 0])
    cube([1, 1, 1.25]);
  translate([216, 9, 0])
    cube([1, 1, 1.25]);
  translate([217, 9, 0])
    cube([1, 1, 1.25]);
  translate([218, 9, 0])
    cube([1, 1, 1.25]);
  translate([219, 9, 0])
    cube([1, 1, 1.25]);
  translate([220, 9, 0])
    cube([1, 1, 1.25]);
  translate([221, 9, 0])
    cube([1, 1, 1.25]);
  translate([222, 9, 0])
    cube([1, 1, 1.25]);
  translate([223, 9, 0])
    cube([1, 1, 1.25]);
  translate([224, 9, 0])
    cube([1, 1, 1.25]);
  translate([225, 9, 0])
    cube([1, 1, 1.25]);
  translate([226, 9, 0])
    cube([1, 1, 1.25]);
  translate([227, 9, 0])
    cube([1, 1, 1.25]);
  translate([228, 9, 0])
    cube([1, 1, 1.25]);
  translate([229, 9, 0])
    cube([1, 1, 1.25]);
  translate([230, 9, 0])
    cube([1, 1, 1.25]);
  translate([231, 9, 0])
    cube([1, 1, 1.25]);
  translate([232, 9, 0])
    cube([1, 1, 1.25]);
  translate([233, 9, 0])
    cube([1, 1, 1.25]);
  translate([234, 9, 0])
    cube([1, 1, 1.25]);
  translate([235, 9, 0])
    cube([1, 1, 1.25]);
  translate([236, 9, 0])
    cube([1, 1, 1.25]);
  translate([237, 9, 0])
    cube([1, 1, 1.25]);
  translate([238, 9, 0])
    cube([1, 1, 1.25]);
  translate([239, 9, 0])
    cube([1, 1, 1.25]);
  translate([240, 9, 0])
    cube([1, 1, 1.25]);
  translate([241, 9, 0])
    cube([1, 1, 1.25]);
  translate([242, 9, 0])
    cube([1, 1, 1.25]);
  translate([243, 9, 0])
    cube([1, 1, 1.25]);
  translate([244, 9, 0])
    cube([1, 1, 1.25]);
  translate([245, 9, 0])
    cube([1, 1, 1.25]);
  translate([246, 9, 0])
    cube([1, 1, 1.25]);
  translate([0, 10, 0])
    cube([1, 1, 1.33]);
  translate([1, 10, 0])
    cube([1, 1, 1.33]);
  translate([2, 10, 0])
    cube([1, 1, 1.33]);
  translate([3, 10, 0])
    cube([1, 1, 1.33]);
  translate([4, 10, 0])
    cube([1, 1, 1.33]);
  translate([5, 10, 0])
    cube([1, 1, 1.33]);
  translate([6, 10, 0])
    cube([1, 1, 1.33]);
  translate([7, 10, 0])
    cube([1, 1, 1.33]);
  translate([8, 10, 0])
    cube([1, 1, 1.33]);
  translate([9, 10, 0])
    cube([1, 1, 1.33]);
  translate([10, 10, 0])
    cube([1, 1, 1.33]);
  translate([11, 10, 0])
    cube([1, 1, 1.33]);
  translate([12, 10, 0])
    cube([1, 1, 1.33]);
  translate([13, 10, 0])
    cube([1, 1, 1.33]);
  translate([14, 10, 0])
    cube([1, 1, 1.33]);
  translate([15, 10, 0])
    cube([1, 1, 1.33]);
  translate([16, 10, 0])
    cube([1, 1, 1.33]);
  translate([17, 10, 0])
    cube([1, 1, 1.33]);
  translate([18, 10, 0])
    cube([1, 1, 1.33]);
  translate([19, 10, 0])
    cube([1, 1, 1.33]);
  translate([20, 10, 0])
    cube([1, 1, 1.33]);
  translate([21, 10, 0])
    cube([1, 1, 1.33]);
  translate([22, 10, 0])
    cube([1, 1, 1.33]);
  translate([23, 10, 0])
    cube([1, 1, 1.33]);
  translate([24, 10, 0])
    cube([1, 1, 1.33]);
  translate([25, 10, 0])
    cube([1, 1, 1.33]);
  translate([26, 10, 0])
    cube([1, 1, 1.33]);
  translate([27, 10, 0])
    cube([1, 1, 1.33]);
  translate([28, 10, 0])
    cube([1, 1, 1.33]);
  translate([29, 10, 0])
    cube([1, 1, 1.33]);
  translate([30, 10, 0])
    cube([1, 1, 1.33]);
  translate([31, 10, 0])
    cube([1, 1, 1.33]);
  translate([32, 10, 0])
    cube([1, 1, 1.33]);
  translate([33, 10, 0])
    cube([1, 1, 1.33]);
  translate([34, 10, 0])
    cube([1, 1, 1.33]);
  translate([35, 10, 0])
    cube([1, 1, 1.33]);
  translate([36, 10, 0])
    cube([1, 1, 1.33]);
  translate([37, 10, 0])
    cube([1, 1, 1.33]);
  translate([38, 10, 0])
    cube([1, 1, 1.33]);
  translate([39, 10, 0])
    cube([1, 1, 1.33]);
  translate([40, 10, 0])
    cube([1, 1, 1.33]);
  translate([41, 10, 0])
    cube([1, 1, 1.33]);
  translate([42, 10, 0])
    cube([1, 1, 1.33]);
  translate([43, 10, 0])
    cube([1, 1, 1.33]);
  translate([44, 10, 0])
    cube([1, 1, 1.33]);
  translate([45, 10, 0])
    cube([1, 1, 1.33]);
  translate([46, 10, 0])
    cube([1, 1, 1.33]);
  translate([47, 10, 0])
    cube([1, 1, 1.33]);
  translate([48, 10, 0])
    cube([1, 1, 1.33]);
  translate([49, 10, 0])
    cube([1, 1, 1.33]);
  translate([50, 10, 0])
    cube([1, 1, 1.33]);
  translate([51, 10, 0])
    cube([1, 1, 1.33]);
  translate([52, 10, 0])
    cube([1, 1, 1.33]);
  translate([53, 10, 0])
    cube([1, 1, 1.33]);
  translate([54, 10, 0])
    cube([1, 1, 1.33]);
  translate([55, 10, 0])
    cube([1, 1, 1.33]);
  translate([56, 10, 0])
    cube([1, 1, 1.33]);
  translate([57, 10, 0])
    cube([1, 1, 1.33]);
  translate([58, 10, 0])
    cube([1, 1, 1.33]);
  translate([59, 10, 0])
    cube([1, 1, 1.29]);
  translate([60, 10, 0])
    cube([1, 1, 1.33]);
  translate([61, 10, 0])
    cube([1, 1, 1.33]);
  translate([62, 10, 0])
    cube([1, 1, 1.29]);
  translate([63, 10, 0])
    cube([1, 1, 1.29]);
  translate([64, 10, 0])
    cube([1, 1, 1.33]);
  translate([65, 10, 0])
    cube([1, 1, 1.29]);
  translate([66, 10, 0])
    cube([1, 1, 1.29]);
  translate([67, 10, 0])
    cube([1, 1, 1.29]);
  translate([68, 10, 0])
    cube([1, 1, 1.29]);
  translate([69, 10, 0])
    cube([1, 1, 1.33]);
  translate([70, 10, 0])
    cube([1, 1, 1.29]);
  translate([71, 10, 0])
    cube([1, 1, 1.29]);
  translate([72, 10, 0])
    cube([1, 1, 1.29]);
  translate([73, 10, 0])
    cube([1, 1, 1.29]);
  translate([74, 10, 0])
    cube([1, 1, 1.29]);
  translate([75, 10, 0])
    cube([1, 1, 1.29]);
  translate([76, 10, 0])
    cube([1, 1, 1.29]);
  translate([77, 10, 0])
    cube([1, 1, 1.29]);
  translate([78, 10, 0])
    cube([1, 1, 1.29]);
  translate([79, 10, 0])
    cube([1, 1, 1.29]);
  translate([80, 10, 0])
    cube([1, 1, 1.29]);
  translate([81, 10, 0])
    cube([1, 1, 1.29]);
  translate([82, 10, 0])
    cube([1, 1, 1.29]);
  translate([83, 10, 0])
    cube([1, 1, 1.29]);
  translate([84, 10, 0])
    cube([1, 1, 1.29]);
  translate([85, 10, 0])
    cube([1, 1, 1.29]);
  translate([86, 10, 0])
    cube([1, 1, 1.29]);
  translate([87, 10, 0])
    cube([1, 1, 1.29]);
  translate([88, 10, 0])
    cube([1, 1, 1.29]);
  translate([89, 10, 0])
    cube([1, 1, 1.29]);
  translate([90, 10, 0])
    cube([1, 1, 1.29]);
  translate([91, 10, 0])
    cube([1, 1, 1.29]);
  translate([92, 10, 0])
    cube([1, 1, 1.25]);
  translate([93, 10, 0])
    cube([1, 1, 1.25]);
  translate([94, 10, 0])
    cube([1, 1, 1.29]);
  translate([95, 10, 0])
    cube([1, 1, 1.29]);
  translate([96, 10, 0])
    cube([1, 1, 1.29]);
  translate([97, 10, 0])
    cube([1, 1, 1.29]);
  translate([98, 10, 0])
    cube([1, 1, 1.29]);
  translate([99, 10, 0])
    cube([1, 1, 1.25]);
  translate([100, 10, 0])
    cube([1, 1, 1.25]);
  translate([101, 10, 0])
    cube([1, 1, 1.25]);
  translate([102, 10, 0])
    cube([1, 1, 1.25]);
  translate([103, 10, 0])
    cube([1, 1, 1.25]);
  translate([104, 10, 0])
    cube([1, 1, 1.25]);
  translate([105, 10, 0])
    cube([1, 1, 1.25]);
  translate([106, 10, 0])
    cube([1, 1, 1.25]);
  translate([107, 10, 0])
    cube([1, 1, 1.25]);
  translate([108, 10, 0])
    cube([1, 1, 1.25]);
  translate([109, 10, 0])
    cube([1, 1, 1.25]);
  translate([110, 10, 0])
    cube([1, 1, 1.25]);
  translate([111, 10, 0])
    cube([1, 1, 1.25]);
  translate([112, 10, 0])
    cube([1, 1, 1.25]);
  translate([113, 10, 0])
    cube([1, 1, 1.25]);
  translate([114, 10, 0])
    cube([1, 1, 1.25]);
  translate([115, 10, 0])
    cube([1, 1, 1.25]);
  translate([116, 10, 0])
    cube([1, 1, 1.25]);
  translate([117, 10, 0])
    cube([1, 1, 1.25]);
  translate([118, 10, 0])
    cube([1, 1, 1.25]);
  translate([119, 10, 0])
    cube([1, 1, 1.25]);
  translate([120, 10, 0])
    cube([1, 1, 1.25]);
  translate([121, 10, 0])
    cube([1, 1, 1.25]);
  translate([122, 10, 0])
    cube([1, 1, 1.25]);
  translate([123, 10, 0])
    cube([1, 1, 1.25]);
  translate([124, 10, 0])
    cube([1, 1, 1.25]);
  translate([125, 10, 0])
    cube([1, 1, 1.25]);
  translate([126, 10, 0])
    cube([1, 1, 1.25]);
  translate([127, 10, 0])
    cube([1, 1, 1.25]);
  translate([128, 10, 0])
    cube([1, 1, 1.25]);
  translate([129, 10, 0])
    cube([1, 1, 1.25]);
  translate([130, 10, 0])
    cube([1, 1, 1.25]);
  translate([131, 10, 0])
    cube([1, 1, 1.25]);
  translate([132, 10, 0])
    cube([1, 1, 1.25]);
  translate([133, 10, 0])
    cube([1, 1, 1.25]);
  translate([134, 10, 0])
    cube([1, 1, 1.25]);
  translate([135, 10, 0])
    cube([1, 1, 1.25]);
  translate([136, 10, 0])
    cube([1, 1, 1.25]);
  translate([137, 10, 0])
    cube([1, 1, 1.25]);
  translate([138, 10, 0])
    cube([1, 1, 1.25]);
  translate([139, 10, 0])
    cube([1, 1, 1.25]);
  translate([140, 10, 0])
    cube([1, 1, 1.25]);
  translate([141, 10, 0])
    cube([1, 1, 1.25]);
  translate([142, 10, 0])
    cube([1, 1, 1.25]);
  translate([143, 10, 0])
    cube([1, 1, 1.25]);
  translate([144, 10, 0])
    cube([1, 1, 1.25]);
  translate([145, 10, 0])
    cube([1, 1, 1.25]);
  translate([146, 10, 0])
    cube([1, 1, 1.25]);
  translate([147, 10, 0])
    cube([1, 1, 1.25]);
  translate([148, 10, 0])
    cube([1, 1, 1.25]);
  translate([149, 10, 0])
    cube([1, 1, 1.25]);
  translate([150, 10, 0])
    cube([1, 1, 1.25]);
  translate([151, 10, 0])
    cube([1, 1, 1.25]);
  translate([152, 10, 0])
    cube([1, 1, 1.25]);
  translate([153, 10, 0])
    cube([1, 1, 1.25]);
  translate([154, 10, 0])
    cube([1, 1, 1.25]);
  translate([155, 10, 0])
    cube([1, 1, 1.25]);
  translate([156, 10, 0])
    cube([1, 1, 1.25]);
  translate([157, 10, 0])
    cube([1, 1, 1.25]);
  translate([158, 10, 0])
    cube([1, 1, 1.25]);
  translate([159, 10, 0])
    cube([1, 1, 1.25]);
  translate([160, 10, 0])
    cube([1, 1, 1.25]);
  translate([161, 10, 0])
    cube([1, 1, 1.25]);
  translate([162, 10, 0])
    cube([1, 1, 1.25]);
  translate([163, 10, 0])
    cube([1, 1, 1.25]);
  translate([164, 10, 0])
    cube([1, 1, 1.25]);
  translate([165, 10, 0])
    cube([1, 1, 1.25]);
  translate([166, 10, 0])
    cube([1, 1, 1.25]);
  translate([167, 10, 0])
    cube([1, 1, 1.25]);
  translate([168, 10, 0])
    cube([1, 1, 1.25]);
  translate([169, 10, 0])
    cube([1, 1, 1.25]);
  translate([170, 10, 0])
    cube([1, 1, 1.25]);
  translate([171, 10, 0])
    cube([1, 1, 1.25]);
  translate([172, 10, 0])
    cube([1, 1, 1.25]);
  translate([173, 10, 0])
    cube([1, 1, 1.25]);
  translate([174, 10, 0])
    cube([1, 1, 1.25]);
  translate([175, 10, 0])
    cube([1, 1, 1.25]);
  translate([176, 10, 0])
    cube([1, 1, 1.25]);
  translate([177, 10, 0])
    cube([1, 1, 1.25]);
  translate([178, 10, 0])
    cube([1, 1, 1.25]);
  translate([179, 10, 0])
    cube([1, 1, 1.25]);
  translate([180, 10, 0])
    cube([1, 1, 1.25]);
  translate([181, 10, 0])
    cube([1, 1, 1.25]);
  translate([182, 10, 0])
    cube([1, 1, 1.25]);
  translate([183, 10, 0])
    cube([1, 1, 1.25]);
  translate([184, 10, 0])
    cube([1, 1, 1.25]);
  translate([185, 10, 0])
    cube([1, 1, 1.25]);
  translate([186, 10, 0])
    cube([1, 1, 1.25]);
  translate([187, 10, 0])
    cube([1, 1, 1.25]);
  translate([188, 10, 0])
    cube([1, 1, 1.25]);
  translate([189, 10, 0])
    cube([1, 1, 1.25]);
  translate([190, 10, 0])
    cube([1, 1, 1.25]);
  translate([191, 10, 0])
    cube([1, 1, 1.25]);
  translate([192, 10, 0])
    cube([1, 1, 1.25]);
  translate([193, 10, 0])
    cube([1, 1, 1.25]);
  translate([194, 10, 0])
    cube([1, 1, 1.25]);
  translate([195, 10, 0])
    cube([1, 1, 1.25]);
  translate([196, 10, 0])
    cube([1, 1, 1.25]);
  translate([197, 10, 0])
    cube([1, 1, 1.25]);
  translate([198, 10, 0])
    cube([1, 1, 1.25]);
  translate([199, 10, 0])
    cube([1, 1, 1.25]);
  translate([200, 10, 0])
    cube([1, 1, 1.25]);
  translate([201, 10, 0])
    cube([1, 1, 1.25]);
  translate([202, 10, 0])
    cube([1, 1, 1.25]);
  translate([203, 10, 0])
    cube([1, 1, 1.25]);
  translate([204, 10, 0])
    cube([1, 1, 1.25]);
  translate([205, 10, 0])
    cube([1, 1, 1.25]);
  translate([206, 10, 0])
    cube([1, 1, 1.25]);
  translate([207, 10, 0])
    cube([1, 1, 1.25]);
  translate([208, 10, 0])
    cube([1, 1, 1.25]);
  translate([209, 10, 0])
    cube([1, 1, 1.25]);
  translate([210, 10, 0])
    cube([1, 1, 1.25]);
  translate([211, 10, 0])
    cube([1, 1, 1.25]);
  translate([212, 10, 0])
    cube([1, 1, 1.25]);
  translate([213, 10, 0])
    cube([1, 1, 1.25]);
  translate([214, 10, 0])
    cube([1, 1, 1.25]);
  translate([215, 10, 0])
    cube([1, 1, 1.25]);
  translate([216, 10, 0])
    cube([1, 1, 1.25]);
  translate([217, 10, 0])
    cube([1, 1, 1.25]);
  translate([218, 10, 0])
    cube([1, 1, 1.25]);
  translate([219, 10, 0])
    cube([1, 1, 1.25]);
  translate([220, 10, 0])
    cube([1, 1, 1.25]);
  translate([221, 10, 0])
    cube([1, 1, 1.25]);
  translate([222, 10, 0])
    cube([1, 1, 1.25]);
  translate([223, 10, 0])
    cube([1, 1, 1.25]);
  translate([224, 10, 0])
    cube([1, 1, 1.25]);
  translate([225, 10, 0])
    cube([1, 1, 1.25]);
  translate([226, 10, 0])
    cube([1, 1, 1.25]);
  translate([227, 10, 0])
    cube([1, 1, 1.25]);
  translate([228, 10, 0])
    cube([1, 1, 1.25]);
  translate([229, 10, 0])
    cube([1, 1, 1.25]);
  translate([230, 10, 0])
    cube([1, 1, 1.25]);
  translate([231, 10, 0])
    cube([1, 1, 1.25]);
  translate([232, 10, 0])
    cube([1, 1, 1.25]);
  translate([233, 10, 0])
    cube([1, 1, 1.25]);
  translate([234, 10, 0])
    cube([1, 1, 1.25]);
  translate([235, 10, 0])
    cube([1, 1, 1.25]);
  translate([236, 10, 0])
    cube([1, 1, 1.25]);
  translate([237, 10, 0])
    cube([1, 1, 1.25]);
  translate([238, 10, 0])
    cube([1, 1, 1.25]);
  translate([239, 10, 0])
    cube([1, 1, 1.25]);
  translate([240, 10, 0])
    cube([1, 1, 1.25]);
  translate([241, 10, 0])
    cube([1, 1, 1.25]);
  translate([242, 10, 0])
    cube([1, 1, 1.25]);
  translate([243, 10, 0])
    cube([1, 1, 1.25]);
  translate([244, 10, 0])
    cube([1, 1, 1.25]);
  translate([245, 10, 0])
    cube([1, 1, 1.25]);
  translate([246, 10, 0])
    cube([1, 1, 1.25]);
  translate([0, 11, 0])
    cube([1, 1, 1.33]);
  translate([1, 11, 0])
    cube([1, 1, 1.33]);
  translate([2, 11, 0])
    cube([1, 1, 1.33]);
  translate([3, 11, 0])
    cube([1, 1, 1.33]);
  translate([4, 11, 0])
    cube([1, 1, 1.33]);
  translate([5, 11, 0])
    cube([1, 1, 1.33]);
  translate([6, 11, 0])
    cube([1, 1, 1.33]);
  translate([7, 11, 0])
    cube([1, 1, 1.33]);
  translate([8, 11, 0])
    cube([1, 1, 1.33]);
  translate([9, 11, 0])
    cube([1, 1, 1.33]);
  translate([10, 11, 0])
    cube([1, 1, 1.33]);
  translate([11, 11, 0])
    cube([1, 1, 1.33]);
  translate([12, 11, 0])
    cube([1, 1, 1.33]);
  translate([13, 11, 0])
    cube([1, 1, 1.33]);
  translate([14, 11, 0])
    cube([1, 1, 1.33]);
  translate([15, 11, 0])
    cube([1, 1, 1.33]);
  translate([16, 11, 0])
    cube([1, 1, 1.33]);
  translate([17, 11, 0])
    cube([1, 1, 1.33]);
  translate([18, 11, 0])
    cube([1, 1, 1.33]);
  translate([19, 11, 0])
    cube([1, 1, 1.33]);
  translate([20, 11, 0])
    cube([1, 1, 1.33]);
  translate([21, 11, 0])
    cube([1, 1, 1.33]);
  translate([22, 11, 0])
    cube([1, 1, 1.33]);
  translate([23, 11, 0])
    cube([1, 1, 1.33]);
  translate([24, 11, 0])
    cube([1, 1, 1.33]);
  translate([25, 11, 0])
    cube([1, 1, 1.33]);
  translate([26, 11, 0])
    cube([1, 1, 1.33]);
  translate([27, 11, 0])
    cube([1, 1, 1.33]);
  translate([28, 11, 0])
    cube([1, 1, 1.33]);
  translate([29, 11, 0])
    cube([1, 1, 1.33]);
  translate([30, 11, 0])
    cube([1, 1, 1.33]);
  translate([31, 11, 0])
    cube([1, 1, 1.33]);
  translate([32, 11, 0])
    cube([1, 1, 1.33]);
  translate([33, 11, 0])
    cube([1, 1, 1.33]);
  translate([34, 11, 0])
    cube([1, 1, 1.33]);
  translate([35, 11, 0])
    cube([1, 1, 1.33]);
  translate([36, 11, 0])
    cube([1, 1, 1.33]);
  translate([37, 11, 0])
    cube([1, 1, 1.33]);
  translate([38, 11, 0])
    cube([1, 1, 1.33]);
  translate([39, 11, 0])
    cube([1, 1, 1.33]);
  translate([40, 11, 0])
    cube([1, 1, 1.33]);
  translate([41, 11, 0])
    cube([1, 1, 1.33]);
  translate([42, 11, 0])
    cube([1, 1, 1.33]);
  translate([43, 11, 0])
    cube([1, 1, 1.33]);
  translate([44, 11, 0])
    cube([1, 1, 1.33]);
  translate([45, 11, 0])
    cube([1, 1, 1.33]);
  translate([46, 11, 0])
    cube([1, 1, 1.33]);
  translate([47, 11, 0])
    cube([1, 1, 1.33]);
  translate([48, 11, 0])
    cube([1, 1, 1.33]);
  translate([49, 11, 0])
    cube([1, 1, 1.33]);
  translate([50, 11, 0])
    cube([1, 1, 1.33]);
  translate([51, 11, 0])
    cube([1, 1, 1.33]);
  translate([52, 11, 0])
    cube([1, 1, 1.33]);
  translate([53, 11, 0])
    cube([1, 1, 1.33]);
  translate([54, 11, 0])
    cube([1, 1, 1.33]);
  translate([55, 11, 0])
    cube([1, 1, 1.33]);
  translate([56, 11, 0])
    cube([1, 1, 1.33]);
  translate([57, 11, 0])
    cube([1, 1, 1.33]);
  translate([58, 11, 0])
    cube([1, 1, 1.33]);
  translate([59, 11, 0])
    cube([1, 1, 1.33]);
  translate([60, 11, 0])
    cube([1, 1, 1.33]);
  translate([61, 11, 0])
    cube([1, 1, 1.33]);
  translate([62, 11, 0])
    cube([1, 1, 1.29]);
  translate([63, 11, 0])
    cube([1, 1, 1.29]);
  translate([64, 11, 0])
    cube([1, 1, 1.33]);
  translate([65, 11, 0])
    cube([1, 1, 1.29]);
  translate([66, 11, 0])
    cube([1, 1, 1.29]);
  translate([67, 11, 0])
    cube([1, 1, 1.29]);
  translate([68, 11, 0])
    cube([1, 1, 1.37]);
  translate([69, 11, 0])
    cube([1, 1, 1.29]);
  translate([70, 11, 0])
    cube([1, 1, 1.29]);
  translate([71, 11, 0])
    cube([1, 1, 1.29]);
  translate([72, 11, 0])
    cube([1, 1, 1.29]);
  translate([73, 11, 0])
    cube([1, 1, 1.29]);
  translate([74, 11, 0])
    cube([1, 1, 1.29]);
  translate([75, 11, 0])
    cube([1, 1, 1.29]);
  translate([76, 11, 0])
    cube([1, 1, 1.29]);
  translate([77, 11, 0])
    cube([1, 1, 1.29]);
  translate([78, 11, 0])
    cube([1, 1, 1.29]);
  translate([79, 11, 0])
    cube([1, 1, 1.29]);
  translate([80, 11, 0])
    cube([1, 1, 1.29]);
  translate([81, 11, 0])
    cube([1, 1, 1.29]);
  translate([82, 11, 0])
    cube([1, 1, 1.29]);
  translate([83, 11, 0])
    cube([1, 1, 1.29]);
  translate([84, 11, 0])
    cube([1, 1, 1.29]);
  translate([85, 11, 0])
    cube([1, 1, 1.29]);
  translate([86, 11, 0])
    cube([1, 1, 1.29]);
  translate([87, 11, 0])
    cube([1, 1, 1.29]);
  translate([88, 11, 0])
    cube([1, 1, 1.29]);
  translate([89, 11, 0])
    cube([1, 1, 1.29]);
  translate([90, 11, 0])
    cube([1, 1, 1.29]);
  translate([91, 11, 0])
    cube([1, 1, 1.29]);
  translate([92, 11, 0])
    cube([1, 1, 1.33]);
  translate([93, 11, 0])
    cube([1, 1, 1.33]);
  translate([94, 11, 0])
    cube([1, 1, 1.29]);
  translate([95, 11, 0])
    cube([1, 1, 1.29]);
  translate([96, 11, 0])
    cube([1, 1, 1.29]);
  translate([97, 11, 0])
    cube([1, 1, 1.29]);
  translate([98, 11, 0])
    cube([1, 1, 1.29]);
  translate([99, 11, 0])
    cube([1, 1, 1.25]);
  translate([100, 11, 0])
    cube([1, 1, 1.25]);
  translate([101, 11, 0])
    cube([1, 1, 1.25]);
  translate([102, 11, 0])
    cube([1, 1, 1.25]);
  translate([103, 11, 0])
    cube([1, 1, 1.25]);
  translate([104, 11, 0])
    cube([1, 1, 1.25]);
  translate([105, 11, 0])
    cube([1, 1, 1.25]);
  translate([106, 11, 0])
    cube([1, 1, 1.25]);
  translate([107, 11, 0])
    cube([1, 1, 1.25]);
  translate([108, 11, 0])
    cube([1, 1, 1.25]);
  translate([109, 11, 0])
    cube([1, 1, 1.25]);
  translate([110, 11, 0])
    cube([1, 1, 1.25]);
  translate([111, 11, 0])
    cube([1, 1, 1.25]);
  translate([112, 11, 0])
    cube([1, 1, 1.25]);
  translate([113, 11, 0])
    cube([1, 1, 1.25]);
  translate([114, 11, 0])
    cube([1, 1, 1.25]);
  translate([115, 11, 0])
    cube([1, 1, 1.25]);
  translate([116, 11, 0])
    cube([1, 1, 1.25]);
  translate([117, 11, 0])
    cube([1, 1, 1.25]);
  translate([118, 11, 0])
    cube([1, 1, 1.25]);
  translate([119, 11, 0])
    cube([1, 1, 1.25]);
  translate([120, 11, 0])
    cube([1, 1, 1.25]);
  translate([121, 11, 0])
    cube([1, 1, 1.25]);
  translate([122, 11, 0])
    cube([1, 1, 1.25]);
  translate([123, 11, 0])
    cube([1, 1, 1.25]);
  translate([124, 11, 0])
    cube([1, 1, 1.25]);
  translate([125, 11, 0])
    cube([1, 1, 1.25]);
  translate([126, 11, 0])
    cube([1, 1, 1.25]);
  translate([127, 11, 0])
    cube([1, 1, 1.25]);
  translate([128, 11, 0])
    cube([1, 1, 1.25]);
  translate([129, 11, 0])
    cube([1, 1, 1.25]);
  translate([130, 11, 0])
    cube([1, 1, 1.25]);
  translate([131, 11, 0])
    cube([1, 1, 1.25]);
  translate([132, 11, 0])
    cube([1, 1, 1.25]);
  translate([133, 11, 0])
    cube([1, 1, 1.25]);
  translate([134, 11, 0])
    cube([1, 1, 1.25]);
  translate([135, 11, 0])
    cube([1, 1, 1.25]);
  translate([136, 11, 0])
    cube([1, 1, 1.25]);
  translate([137, 11, 0])
    cube([1, 1, 1.25]);
  translate([138, 11, 0])
    cube([1, 1, 1.25]);
  translate([139, 11, 0])
    cube([1, 1, 1.25]);
  translate([140, 11, 0])
    cube([1, 1, 1.25]);
  translate([141, 11, 0])
    cube([1, 1, 1.25]);
  translate([142, 11, 0])
    cube([1, 1, 1.25]);
  translate([143, 11, 0])
    cube([1, 1, 1.25]);
  translate([144, 11, 0])
    cube([1, 1, 1.25]);
  translate([145, 11, 0])
    cube([1, 1, 1.25]);
  translate([146, 11, 0])
    cube([1, 1, 1.25]);
  translate([147, 11, 0])
    cube([1, 1, 1.25]);
  translate([148, 11, 0])
    cube([1, 1, 1.25]);
  translate([149, 11, 0])
    cube([1, 1, 1.25]);
  translate([150, 11, 0])
    cube([1, 1, 1.25]);
  translate([151, 11, 0])
    cube([1, 1, 1.25]);
  translate([152, 11, 0])
    cube([1, 1, 1.25]);
  translate([153, 11, 0])
    cube([1, 1, 1.25]);
  translate([154, 11, 0])
    cube([1, 1, 1.25]);
  translate([155, 11, 0])
    cube([1, 1, 1.25]);
  translate([156, 11, 0])
    cube([1, 1, 1.25]);
  translate([157, 11, 0])
    cube([1, 1, 1.25]);
  translate([158, 11, 0])
    cube([1, 1, 1.25]);
  translate([159, 11, 0])
    cube([1, 1, 1.25]);
  translate([160, 11, 0])
    cube([1, 1, 1.25]);
  translate([161, 11, 0])
    cube([1, 1, 1.25]);
  translate([162, 11, 0])
    cube([1, 1, 1.25]);
  translate([163, 11, 0])
    cube([1, 1, 1.25]);
  translate([164, 11, 0])
    cube([1, 1, 1.25]);
  translate([165, 11, 0])
    cube([1, 1, 1.25]);
  translate([166, 11, 0])
    cube([1, 1, 1.25]);
  translate([167, 11, 0])
    cube([1, 1, 1.25]);
  translate([168, 11, 0])
    cube([1, 1, 1.25]);
  translate([169, 11, 0])
    cube([1, 1, 1.25]);
  translate([170, 11, 0])
    cube([1, 1, 1.25]);
  translate([171, 11, 0])
    cube([1, 1, 1.25]);
  translate([172, 11, 0])
    cube([1, 1, 1.25]);
  translate([173, 11, 0])
    cube([1, 1, 1.25]);
  translate([174, 11, 0])
    cube([1, 1, 1.25]);
  translate([175, 11, 0])
    cube([1, 1, 1.25]);
  translate([176, 11, 0])
    cube([1, 1, 1.25]);
  translate([177, 11, 0])
    cube([1, 1, 1.25]);
  translate([178, 11, 0])
    cube([1, 1, 1.25]);
  translate([179, 11, 0])
    cube([1, 1, 1.25]);
  translate([180, 11, 0])
    cube([1, 1, 1.25]);
  translate([181, 11, 0])
    cube([1, 1, 1.25]);
  translate([182, 11, 0])
    cube([1, 1, 1.25]);
  translate([183, 11, 0])
    cube([1, 1, 1.25]);
  translate([184, 11, 0])
    cube([1, 1, 1.25]);
  translate([185, 11, 0])
    cube([1, 1, 1.25]);
  translate([186, 11, 0])
    cube([1, 1, 1.25]);
  translate([187, 11, 0])
    cube([1, 1, 1.25]);
  translate([188, 11, 0])
    cube([1, 1, 1.25]);
  translate([189, 11, 0])
    cube([1, 1, 1.25]);
  translate([190, 11, 0])
    cube([1, 1, 1.25]);
  translate([191, 11, 0])
    cube([1, 1, 1.25]);
  translate([192, 11, 0])
    cube([1, 1, 1.25]);
  translate([193, 11, 0])
    cube([1, 1, 1.25]);
  translate([194, 11, 0])
    cube([1, 1, 1.25]);
  translate([195, 11, 0])
    cube([1, 1, 1.25]);
  translate([196, 11, 0])
    cube([1, 1, 1.25]);
  translate([197, 11, 0])
    cube([1, 1, 1.25]);
  translate([198, 11, 0])
    cube([1, 1, 1.25]);
  translate([199, 11, 0])
    cube([1, 1, 1.25]);
  translate([200, 11, 0])
    cube([1, 1, 1.25]);
  translate([201, 11, 0])
    cube([1, 1, 1.25]);
  translate([202, 11, 0])
    cube([1, 1, 1.25]);
  translate([203, 11, 0])
    cube([1, 1, 1.25]);
  translate([204, 11, 0])
    cube([1, 1, 1.25]);
  translate([205, 11, 0])
    cube([1, 1, 1.25]);
  translate([206, 11, 0])
    cube([1, 1, 1.25]);
  translate([207, 11, 0])
    cube([1, 1, 1.25]);
  translate([208, 11, 0])
    cube([1, 1, 1.25]);
  translate([209, 11, 0])
    cube([1, 1, 1.25]);
  translate([210, 11, 0])
    cube([1, 1, 1.25]);
  translate([211, 11, 0])
    cube([1, 1, 1.25]);
  translate([212, 11, 0])
    cube([1, 1, 1.25]);
  translate([213, 11, 0])
    cube([1, 1, 1.25]);
  translate([214, 11, 0])
    cube([1, 1, 1.25]);
  translate([215, 11, 0])
    cube([1, 1, 1.25]);
  translate([216, 11, 0])
    cube([1, 1, 1.25]);
  translate([217, 11, 0])
    cube([1, 1, 1.25]);
  translate([218, 11, 0])
    cube([1, 1, 1.25]);
  translate([219, 11, 0])
    cube([1, 1, 1.25]);
  translate([220, 11, 0])
    cube([1, 1, 1.25]);
  translate([221, 11, 0])
    cube([1, 1, 1.25]);
  translate([222, 11, 0])
    cube([1, 1, 1.25]);
  translate([223, 11, 0])
    cube([1, 1, 1.25]);
  translate([224, 11, 0])
    cube([1, 1, 1.25]);
  translate([225, 11, 0])
    cube([1, 1, 1.25]);
  translate([226, 11, 0])
    cube([1, 1, 1.25]);
  translate([227, 11, 0])
    cube([1, 1, 1.25]);
  translate([228, 11, 0])
    cube([1, 1, 1.25]);
  translate([229, 11, 0])
    cube([1, 1, 1.25]);
  translate([230, 11, 0])
    cube([1, 1, 1.25]);
  translate([231, 11, 0])
    cube([1, 1, 1.25]);
  translate([232, 11, 0])
    cube([1, 1, 1.25]);
  translate([233, 11, 0])
    cube([1, 1, 1.25]);
  translate([234, 11, 0])
    cube([1, 1, 1.25]);
  translate([235, 11, 0])
    cube([1, 1, 1.25]);
  translate([236, 11, 0])
    cube([1, 1, 1.25]);
  translate([237, 11, 0])
    cube([1, 1, 1.25]);
  translate([238, 11, 0])
    cube([1, 1, 1.25]);
  translate([239, 11, 0])
    cube([1, 1, 1.25]);
  translate([240, 11, 0])
    cube([1, 1, 1.25]);
  translate([241, 11, 0])
    cube([1, 1, 1.25]);
  translate([242, 11, 0])
    cube([1, 1, 1.25]);
  translate([243, 11, 0])
    cube([1, 1, 1.25]);
  translate([244, 11, 0])
    cube([1, 1, 1.25]);
  translate([245, 11, 0])
    cube([1, 1, 1.25]);
  translate([246, 11, 0])
    cube([1, 1, 1.25]);
  translate([0, 12, 0])
    cube([1, 1, 1.33]);
  translate([1, 12, 0])
    cube([1, 1, 1.33]);
  translate([2, 12, 0])
    cube([1, 1, 1.33]);
  translate([3, 12, 0])
    cube([1, 1, 1.33]);
  translate([4, 12, 0])
    cube([1, 1, 1.33]);
  translate([5, 12, 0])
    cube([1, 1, 1.33]);
  translate([6, 12, 0])
    cube([1, 1, 1.33]);
  translate([7, 12, 0])
    cube([1, 1, 1.33]);
  translate([8, 12, 0])
    cube([1, 1, 1.33]);
  translate([9, 12, 0])
    cube([1, 1, 1.33]);
  translate([10, 12, 0])
    cube([1, 1, 1.33]);
  translate([11, 12, 0])
    cube([1, 1, 1.33]);
  translate([12, 12, 0])
    cube([1, 1, 1.33]);
  translate([13, 12, 0])
    cube([1, 1, 1.33]);
  translate([14, 12, 0])
    cube([1, 1, 1.33]);
  translate([15, 12, 0])
    cube([1, 1, 1.33]);
  translate([16, 12, 0])
    cube([1, 1, 1.33]);
  translate([17, 12, 0])
    cube([1, 1, 1.33]);
  translate([18, 12, 0])
    cube([1, 1, 1.33]);
  translate([19, 12, 0])
    cube([1, 1, 1.33]);
  translate([20, 12, 0])
    cube([1, 1, 1.33]);
  translate([21, 12, 0])
    cube([1, 1, 1.33]);
  translate([22, 12, 0])
    cube([1, 1, 1.33]);
  translate([23, 12, 0])
    cube([1, 1, 1.33]);
  translate([24, 12, 0])
    cube([1, 1, 1.33]);
  translate([25, 12, 0])
    cube([1, 1, 1.33]);
  translate([26, 12, 0])
    cube([1, 1, 1.33]);
  translate([27, 12, 0])
    cube([1, 1, 1.33]);
  translate([28, 12, 0])
    cube([1, 1, 1.33]);
  translate([29, 12, 0])
    cube([1, 1, 1.33]);
  translate([30, 12, 0])
    cube([1, 1, 1.33]);
  translate([31, 12, 0])
    cube([1, 1, 1.33]);
  translate([32, 12, 0])
    cube([1, 1, 1.33]);
  translate([33, 12, 0])
    cube([1, 1, 1.33]);
  translate([34, 12, 0])
    cube([1, 1, 1.33]);
  translate([35, 12, 0])
    cube([1, 1, 1.33]);
  translate([36, 12, 0])
    cube([1, 1, 1.33]);
  translate([37, 12, 0])
    cube([1, 1, 1.33]);
  translate([38, 12, 0])
    cube([1, 1, 1.33]);
  translate([39, 12, 0])
    cube([1, 1, 1.33]);
  translate([40, 12, 0])
    cube([1, 1, 1.33]);
  translate([41, 12, 0])
    cube([1, 1, 1.33]);
  translate([42, 12, 0])
    cube([1, 1, 1.33]);
  translate([43, 12, 0])
    cube([1, 1, 1.33]);
  translate([44, 12, 0])
    cube([1, 1, 1.33]);
  translate([45, 12, 0])
    cube([1, 1, 1.33]);
  translate([46, 12, 0])
    cube([1, 1, 1.33]);
  translate([47, 12, 0])
    cube([1, 1, 1.33]);
  translate([48, 12, 0])
    cube([1, 1, 1.33]);
  translate([49, 12, 0])
    cube([1, 1, 1.33]);
  translate([50, 12, 0])
    cube([1, 1, 1.33]);
  translate([51, 12, 0])
    cube([1, 1, 1.33]);
  translate([52, 12, 0])
    cube([1, 1, 1.33]);
  translate([53, 12, 0])
    cube([1, 1, 1.33]);
  translate([54, 12, 0])
    cube([1, 1, 1.33]);
  translate([55, 12, 0])
    cube([1, 1, 1.33]);
  translate([56, 12, 0])
    cube([1, 1, 1.33]);
  translate([57, 12, 0])
    cube([1, 1, 1.33]);
  translate([58, 12, 0])
    cube([1, 1, 1.33]);
  translate([59, 12, 0])
    cube([1, 1, 1.29]);
  translate([60, 12, 0])
    cube([1, 1, 1.33]);
  translate([61, 12, 0])
    cube([1, 1, 1.33]);
  translate([62, 12, 0])
    cube([1, 1, 1.33]);
  translate([63, 12, 0])
    cube([1, 1, 1.33]);
  translate([64, 12, 0])
    cube([1, 1, 1.29]);
  translate([65, 12, 0])
    cube([1, 1, 1.29]);
  translate([66, 12, 0])
    cube([1, 1, 1.33]);
  translate([67, 12, 0])
    cube([1, 1, 1.29]);
  translate([68, 12, 0])
    cube([1, 1, 1.29]);
  translate([69, 12, 0])
    cube([1, 1, 1.29]);
  translate([70, 12, 0])
    cube([1, 1, 1.29]);
  translate([71, 12, 0])
    cube([1, 1, 1.29]);
  translate([72, 12, 0])
    cube([1, 1, 1.29]);
  translate([73, 12, 0])
    cube([1, 1, 1.25]);
  translate([74, 12, 0])
    cube([1, 1, 1.33]);
  translate([75, 12, 0])
    cube([1, 1, 1.29]);
  translate([76, 12, 0])
    cube([1, 1, 1.29]);
  translate([77, 12, 0])
    cube([1, 1, 1.29]);
  translate([78, 12, 0])
    cube([1, 1, 1.29]);
  translate([79, 12, 0])
    cube([1, 1, 1.29]);
  translate([80, 12, 0])
    cube([1, 1, 1.29]);
  translate([81, 12, 0])
    cube([1, 1, 1.29]);
  translate([82, 12, 0])
    cube([1, 1, 1.29]);
  translate([83, 12, 0])
    cube([1, 1, 1.29]);
  translate([84, 12, 0])
    cube([1, 1, 1.29]);
  translate([85, 12, 0])
    cube([1, 1, 1.29]);
  translate([86, 12, 0])
    cube([1, 1, 1.29]);
  translate([87, 12, 0])
    cube([1, 1, 1.29]);
  translate([88, 12, 0])
    cube([1, 1, 1.29]);
  translate([89, 12, 0])
    cube([1, 1, 1.29]);
  translate([90, 12, 0])
    cube([1, 1, 1.29]);
  translate([91, 12, 0])
    cube([1, 1, 1.29]);
  translate([92, 12, 0])
    cube([1, 1, 1.29]);
  translate([93, 12, 0])
    cube([1, 1, 1.29]);
  translate([94, 12, 0])
    cube([1, 1, 1.18]);
  translate([95, 12, 0])
    cube([1, 1, 1.25]);
  translate([96, 12, 0])
    cube([1, 1, 1.33]);
  translate([97, 12, 0])
    cube([1, 1, 1.06]);
  translate([98, 12, 0])
    cube([1, 1, 1.14]);
  translate([99, 12, 0])
    cube([1, 1, 1.33]);
  translate([100, 12, 0])
    cube([1, 1, 1.25]);
  translate([101, 12, 0])
    cube([1, 1, 1.25]);
  translate([102, 12, 0])
    cube([1, 1, 1.25]);
  translate([103, 12, 0])
    cube([1, 1, 1.25]);
  translate([104, 12, 0])
    cube([1, 1, 1.25]);
  translate([105, 12, 0])
    cube([1, 1, 1.25]);
  translate([106, 12, 0])
    cube([1, 1, 1.25]);
  translate([107, 12, 0])
    cube([1, 1, 1.25]);
  translate([108, 12, 0])
    cube([1, 1, 1.25]);
  translate([109, 12, 0])
    cube([1, 1, 1.25]);
  translate([110, 12, 0])
    cube([1, 1, 1.25]);
  translate([111, 12, 0])
    cube([1, 1, 1.25]);
  translate([112, 12, 0])
    cube([1, 1, 1.25]);
  translate([113, 12, 0])
    cube([1, 1, 1.25]);
  translate([114, 12, 0])
    cube([1, 1, 1.25]);
  translate([115, 12, 0])
    cube([1, 1, 1.25]);
  translate([116, 12, 0])
    cube([1, 1, 1.25]);
  translate([117, 12, 0])
    cube([1, 1, 1.25]);
  translate([118, 12, 0])
    cube([1, 1, 1.25]);
  translate([119, 12, 0])
    cube([1, 1, 1.25]);
  translate([120, 12, 0])
    cube([1, 1, 1.25]);
  translate([121, 12, 0])
    cube([1, 1, 1.25]);
  translate([122, 12, 0])
    cube([1, 1, 1.25]);
  translate([123, 12, 0])
    cube([1, 1, 1.25]);
  translate([124, 12, 0])
    cube([1, 1, 1.25]);
  translate([125, 12, 0])
    cube([1, 1, 1.25]);
  translate([126, 12, 0])
    cube([1, 1, 1.25]);
  translate([127, 12, 0])
    cube([1, 1, 1.25]);
  translate([128, 12, 0])
    cube([1, 1, 1.25]);
  translate([129, 12, 0])
    cube([1, 1, 1.25]);
  translate([130, 12, 0])
    cube([1, 1, 1.25]);
  translate([131, 12, 0])
    cube([1, 1, 1.25]);
  translate([132, 12, 0])
    cube([1, 1, 1.25]);
  translate([133, 12, 0])
    cube([1, 1, 1.25]);
  translate([134, 12, 0])
    cube([1, 1, 1.25]);
  translate([135, 12, 0])
    cube([1, 1, 1.25]);
  translate([136, 12, 0])
    cube([1, 1, 1.25]);
  translate([137, 12, 0])
    cube([1, 1, 1.25]);
  translate([138, 12, 0])
    cube([1, 1, 1.25]);
  translate([139, 12, 0])
    cube([1, 1, 1.25]);
  translate([140, 12, 0])
    cube([1, 1, 1.25]);
  translate([141, 12, 0])
    cube([1, 1, 1.25]);
  translate([142, 12, 0])
    cube([1, 1, 1.25]);
  translate([143, 12, 0])
    cube([1, 1, 1.25]);
  translate([144, 12, 0])
    cube([1, 1, 1.25]);
  translate([145, 12, 0])
    cube([1, 1, 1.25]);
  translate([146, 12, 0])
    cube([1, 1, 1.25]);
  translate([147, 12, 0])
    cube([1, 1, 1.25]);
  translate([148, 12, 0])
    cube([1, 1, 1.25]);
  translate([149, 12, 0])
    cube([1, 1, 1.25]);
  translate([150, 12, 0])
    cube([1, 1, 1.25]);
  translate([151, 12, 0])
    cube([1, 1, 1.25]);
  translate([152, 12, 0])
    cube([1, 1, 1.25]);
  translate([153, 12, 0])
    cube([1, 1, 1.25]);
  translate([154, 12, 0])
    cube([1, 1, 1.25]);
  translate([155, 12, 0])
    cube([1, 1, 1.25]);
  translate([156, 12, 0])
    cube([1, 1, 1.25]);
  translate([157, 12, 0])
    cube([1, 1, 1.25]);
  translate([158, 12, 0])
    cube([1, 1, 1.25]);
  translate([159, 12, 0])
    cube([1, 1, 1.25]);
  translate([160, 12, 0])
    cube([1, 1, 1.25]);
  translate([161, 12, 0])
    cube([1, 1, 1.25]);
  translate([162, 12, 0])
    cube([1, 1, 1.25]);
  translate([163, 12, 0])
    cube([1, 1, 1.25]);
  translate([164, 12, 0])
    cube([1, 1, 1.25]);
  translate([165, 12, 0])
    cube([1, 1, 1.25]);
  translate([166, 12, 0])
    cube([1, 1, 1.25]);
  translate([167, 12, 0])
    cube([1, 1, 1.25]);
  translate([168, 12, 0])
    cube([1, 1, 1.25]);
  translate([169, 12, 0])
    cube([1, 1, 1.25]);
  translate([170, 12, 0])
    cube([1, 1, 1.25]);
  translate([171, 12, 0])
    cube([1, 1, 1.25]);
  translate([172, 12, 0])
    cube([1, 1, 1.25]);
  translate([173, 12, 0])
    cube([1, 1, 1.25]);
  translate([174, 12, 0])
    cube([1, 1, 1.25]);
  translate([175, 12, 0])
    cube([1, 1, 1.25]);
  translate([176, 12, 0])
    cube([1, 1, 1.25]);
  translate([177, 12, 0])
    cube([1, 1, 1.25]);
  translate([178, 12, 0])
    cube([1, 1, 1.25]);
  translate([179, 12, 0])
    cube([1, 1, 1.25]);
  translate([180, 12, 0])
    cube([1, 1, 1.25]);
  translate([181, 12, 0])
    cube([1, 1, 1.25]);
  translate([182, 12, 0])
    cube([1, 1, 1.25]);
  translate([183, 12, 0])
    cube([1, 1, 1.25]);
  translate([184, 12, 0])
    cube([1, 1, 1.25]);
  translate([185, 12, 0])
    cube([1, 1, 1.25]);
  translate([186, 12, 0])
    cube([1, 1, 1.25]);
  translate([187, 12, 0])
    cube([1, 1, 1.25]);
  translate([188, 12, 0])
    cube([1, 1, 1.25]);
  translate([189, 12, 0])
    cube([1, 1, 1.25]);
  translate([190, 12, 0])
    cube([1, 1, 1.25]);
  translate([191, 12, 0])
    cube([1, 1, 1.25]);
  translate([192, 12, 0])
    cube([1, 1, 1.25]);
  translate([193, 12, 0])
    cube([1, 1, 1.25]);
  translate([194, 12, 0])
    cube([1, 1, 1.25]);
  translate([195, 12, 0])
    cube([1, 1, 1.25]);
  translate([196, 12, 0])
    cube([1, 1, 1.25]);
  translate([197, 12, 0])
    cube([1, 1, 1.25]);
  translate([198, 12, 0])
    cube([1, 1, 1.25]);
  translate([199, 12, 0])
    cube([1, 1, 1.25]);
  translate([200, 12, 0])
    cube([1, 1, 1.25]);
  translate([201, 12, 0])
    cube([1, 1, 1.25]);
  translate([202, 12, 0])
    cube([1, 1, 1.25]);
  translate([203, 12, 0])
    cube([1, 1, 1.25]);
  translate([204, 12, 0])
    cube([1, 1, 1.25]);
  translate([205, 12, 0])
    cube([1, 1, 1.25]);
  translate([206, 12, 0])
    cube([1, 1, 1.25]);
  translate([207, 12, 0])
    cube([1, 1, 1.25]);
  translate([208, 12, 0])
    cube([1, 1, 1.25]);
  translate([209, 12, 0])
    cube([1, 1, 1.25]);
  translate([210, 12, 0])
    cube([1, 1, 1.25]);
  translate([211, 12, 0])
    cube([1, 1, 1.25]);
  translate([212, 12, 0])
    cube([1, 1, 1.25]);
  translate([213, 12, 0])
    cube([1, 1, 1.25]);
  translate([214, 12, 0])
    cube([1, 1, 1.25]);
  translate([215, 12, 0])
    cube([1, 1, 1.25]);
  translate([216, 12, 0])
    cube([1, 1, 1.25]);
  translate([217, 12, 0])
    cube([1, 1, 1.25]);
  translate([218, 12, 0])
    cube([1, 1, 1.25]);
  translate([219, 12, 0])
    cube([1, 1, 1.25]);
  translate([220, 12, 0])
    cube([1, 1, 1.25]);
  translate([221, 12, 0])
    cube([1, 1, 1.25]);
  translate([222, 12, 0])
    cube([1, 1, 1.25]);
  translate([223, 12, 0])
    cube([1, 1, 1.25]);
  translate([224, 12, 0])
    cube([1, 1, 1.25]);
  translate([225, 12, 0])
    cube([1, 1, 1.25]);
  translate([226, 12, 0])
    cube([1, 1, 1.25]);
  translate([227, 12, 0])
    cube([1, 1, 1.25]);
  translate([228, 12, 0])
    cube([1, 1, 1.25]);
  translate([229, 12, 0])
    cube([1, 1, 1.25]);
  translate([230, 12, 0])
    cube([1, 1, 1.25]);
  translate([231, 12, 0])
    cube([1, 1, 1.25]);
  translate([232, 12, 0])
    cube([1, 1, 1.25]);
  translate([233, 12, 0])
    cube([1, 1, 1.25]);
  translate([234, 12, 0])
    cube([1, 1, 1.25]);
  translate([235, 12, 0])
    cube([1, 1, 1.25]);
  translate([236, 12, 0])
    cube([1, 1, 1.25]);
  translate([237, 12, 0])
    cube([1, 1, 1.25]);
  translate([238, 12, 0])
    cube([1, 1, 1.25]);
  translate([239, 12, 0])
    cube([1, 1, 1.25]);
  translate([240, 12, 0])
    cube([1, 1, 1.25]);
  translate([241, 12, 0])
    cube([1, 1, 1.25]);
  translate([242, 12, 0])
    cube([1, 1, 1.25]);
  translate([243, 12, 0])
    cube([1, 1, 1.25]);
  translate([244, 12, 0])
    cube([1, 1, 1.25]);
  translate([245, 12, 0])
    cube([1, 1, 1.25]);
  translate([246, 12, 0])
    cube([1, 1, 1.25]);
  translate([0, 13, 0])
    cube([1, 1, 1.33]);
  translate([1, 13, 0])
    cube([1, 1, 1.33]);
  translate([2, 13, 0])
    cube([1, 1, 1.33]);
  translate([3, 13, 0])
    cube([1, 1, 1.33]);
  translate([4, 13, 0])
    cube([1, 1, 1.33]);
  translate([5, 13, 0])
    cube([1, 1, 1.37]);
  translate([6, 13, 0])
    cube([1, 1, 1.33]);
  translate([7, 13, 0])
    cube([1, 1, 1.33]);
  translate([8, 13, 0])
    cube([1, 1, 1.33]);
  translate([9, 13, 0])
    cube([1, 1, 1.33]);
  translate([10, 13, 0])
    cube([1, 1, 1.33]);
  translate([11, 13, 0])
    cube([1, 1, 1.33]);
  translate([12, 13, 0])
    cube([1, 1, 1.33]);
  translate([13, 13, 0])
    cube([1, 1, 1.33]);
  translate([14, 13, 0])
    cube([1, 1, 1.33]);
  translate([15, 13, 0])
    cube([1, 1, 1.33]);
  translate([16, 13, 0])
    cube([1, 1, 1.33]);
  translate([17, 13, 0])
    cube([1, 1, 1.33]);
  translate([18, 13, 0])
    cube([1, 1, 1.33]);
  translate([19, 13, 0])
    cube([1, 1, 1.33]);
  translate([20, 13, 0])
    cube([1, 1, 1.33]);
  translate([21, 13, 0])
    cube([1, 1, 1.33]);
  translate([22, 13, 0])
    cube([1, 1, 1.33]);
  translate([23, 13, 0])
    cube([1, 1, 1.33]);
  translate([24, 13, 0])
    cube([1, 1, 1.33]);
  translate([25, 13, 0])
    cube([1, 1, 1.33]);
  translate([26, 13, 0])
    cube([1, 1, 1.33]);
  translate([27, 13, 0])
    cube([1, 1, 1.33]);
  translate([28, 13, 0])
    cube([1, 1, 1.33]);
  translate([29, 13, 0])
    cube([1, 1, 1.33]);
  translate([30, 13, 0])
    cube([1, 1, 1.33]);
  translate([31, 13, 0])
    cube([1, 1, 1.33]);
  translate([32, 13, 0])
    cube([1, 1, 1.33]);
  translate([33, 13, 0])
    cube([1, 1, 1.33]);
  translate([34, 13, 0])
    cube([1, 1, 1.33]);
  translate([35, 13, 0])
    cube([1, 1, 1.33]);
  translate([36, 13, 0])
    cube([1, 1, 1.33]);
  translate([37, 13, 0])
    cube([1, 1, 1.33]);
  translate([38, 13, 0])
    cube([1, 1, 1.33]);
  translate([39, 13, 0])
    cube([1, 1, 1.33]);
  translate([40, 13, 0])
    cube([1, 1, 1.33]);
  translate([41, 13, 0])
    cube([1, 1, 1.33]);
  translate([42, 13, 0])
    cube([1, 1, 1.33]);
  translate([43, 13, 0])
    cube([1, 1, 1.33]);
  translate([44, 13, 0])
    cube([1, 1, 1.33]);
  translate([45, 13, 0])
    cube([1, 1, 1.33]);
  translate([46, 13, 0])
    cube([1, 1, 1.33]);
  translate([47, 13, 0])
    cube([1, 1, 1.33]);
  translate([48, 13, 0])
    cube([1, 1, 1.33]);
  translate([49, 13, 0])
    cube([1, 1, 1.33]);
  translate([50, 13, 0])
    cube([1, 1, 1.33]);
  translate([51, 13, 0])
    cube([1, 1, 1.33]);
  translate([52, 13, 0])
    cube([1, 1, 1.33]);
  translate([53, 13, 0])
    cube([1, 1, 1.33]);
  translate([54, 13, 0])
    cube([1, 1, 1.33]);
  translate([55, 13, 0])
    cube([1, 1, 1.33]);
  translate([56, 13, 0])
    cube([1, 1, 1.33]);
  translate([57, 13, 0])
    cube([1, 1, 1.33]);
  translate([58, 13, 0])
    cube([1, 1, 1.33]);
  translate([59, 13, 0])
    cube([1, 1, 1.33]);
  translate([60, 13, 0])
    cube([1, 1, 1.33]);
  translate([61, 13, 0])
    cube([1, 1, 1.33]);
  translate([62, 13, 0])
    cube([1, 1, 1.33]);
  translate([63, 13, 0])
    cube([1, 1, 1.33]);
  translate([64, 13, 0])
    cube([1, 1, 1.29]);
  translate([65, 13, 0])
    cube([1, 1, 1.33]);
  translate([66, 13, 0])
    cube([1, 1, 1.33]);
  translate([67, 13, 0])
    cube([1, 1, 1.29]);
  translate([68, 13, 0])
    cube([1, 1, 1.29]);
  translate([69, 13, 0])
    cube([1, 1, 1.33]);
  translate([70, 13, 0])
    cube([1, 1, 1.33]);
  translate([71, 13, 0])
    cube([1, 1, 1.33]);
  translate([72, 13, 0])
    cube([1, 1, 1.33]);
  translate([73, 13, 0])
    cube([1, 1, 1.29]);
  translate([74, 13, 0])
    cube([1, 1, 1.29]);
  translate([75, 13, 0])
    cube([1, 1, 1.29]);
  translate([76, 13, 0])
    cube([1, 1, 1.29]);
  translate([77, 13, 0])
    cube([1, 1, 1.29]);
  translate([78, 13, 0])
    cube([1, 1, 1.29]);
  translate([79, 13, 0])
    cube([1, 1, 1.29]);
  translate([80, 13, 0])
    cube([1, 1, 1.29]);
  translate([81, 13, 0])
    cube([1, 1, 1.29]);
  translate([82, 13, 0])
    cube([1, 1, 1.29]);
  translate([83, 13, 0])
    cube([1, 1, 1.29]);
  translate([84, 13, 0])
    cube([1, 1, 1.29]);
  translate([85, 13, 0])
    cube([1, 1, 1.29]);
  translate([86, 13, 0])
    cube([1, 1, 1.29]);
  translate([87, 13, 0])
    cube([1, 1, 1.29]);
  translate([88, 13, 0])
    cube([1, 1, 1.25]);
  translate([89, 13, 0])
    cube([1, 1, 1.25]);
  translate([90, 13, 0])
    cube([1, 1, 1.29]);
  translate([91, 13, 0])
    cube([1, 1, 1.25]);
  translate([92, 13, 0])
    cube([1, 1, 1.53]);
  translate([93, 13, 0])
    cube([1, 1, 1.88]);
  translate([94, 13, 0])
    cube([1, 1, 2.00]);
  translate([95, 13, 0])
    cube([1, 1, 1.45]);
  translate([96, 13, 0])
    cube([1, 1, 1.49]);
  translate([97, 13, 0])
    cube([1, 1, 1.33]);
  translate([98, 13, 0])
    cube([1, 1, 1.53]);
  translate([99, 13, 0])
    cube([1, 1, 1.53]);
  translate([100, 13, 0])
    cube([1, 1, 1.22]);
  translate([101, 13, 0])
    cube([1, 1, 1.45]);
  translate([102, 13, 0])
    cube([1, 1, 1.33]);
  translate([103, 13, 0])
    cube([1, 1, 1.18]);
  translate([104, 13, 0])
    cube([1, 1, 1.45]);
  translate([105, 13, 0])
    cube([1, 1, 1.25]);
  translate([106, 13, 0])
    cube([1, 1, 1.25]);
  translate([107, 13, 0])
    cube([1, 1, 1.25]);
  translate([108, 13, 0])
    cube([1, 1, 1.25]);
  translate([109, 13, 0])
    cube([1, 1, 1.25]);
  translate([110, 13, 0])
    cube([1, 1, 1.25]);
  translate([111, 13, 0])
    cube([1, 1, 1.25]);
  translate([112, 13, 0])
    cube([1, 1, 1.25]);
  translate([113, 13, 0])
    cube([1, 1, 1.25]);
  translate([114, 13, 0])
    cube([1, 1, 1.25]);
  translate([115, 13, 0])
    cube([1, 1, 1.25]);
  translate([116, 13, 0])
    cube([1, 1, 1.25]);
  translate([117, 13, 0])
    cube([1, 1, 1.25]);
  translate([118, 13, 0])
    cube([1, 1, 1.25]);
  translate([119, 13, 0])
    cube([1, 1, 1.25]);
  translate([120, 13, 0])
    cube([1, 1, 1.25]);
  translate([121, 13, 0])
    cube([1, 1, 1.25]);
  translate([122, 13, 0])
    cube([1, 1, 1.25]);
  translate([123, 13, 0])
    cube([1, 1, 1.25]);
  translate([124, 13, 0])
    cube([1, 1, 1.25]);
  translate([125, 13, 0])
    cube([1, 1, 1.25]);
  translate([126, 13, 0])
    cube([1, 1, 1.25]);
  translate([127, 13, 0])
    cube([1, 1, 1.25]);
  translate([128, 13, 0])
    cube([1, 1, 1.25]);
  translate([129, 13, 0])
    cube([1, 1, 1.25]);
  translate([130, 13, 0])
    cube([1, 1, 1.25]);
  translate([131, 13, 0])
    cube([1, 1, 1.25]);
  translate([132, 13, 0])
    cube([1, 1, 1.25]);
  translate([133, 13, 0])
    cube([1, 1, 1.25]);
  translate([134, 13, 0])
    cube([1, 1, 1.25]);
  translate([135, 13, 0])
    cube([1, 1, 1.25]);
  translate([136, 13, 0])
    cube([1, 1, 1.25]);
  translate([137, 13, 0])
    cube([1, 1, 1.25]);
  translate([138, 13, 0])
    cube([1, 1, 1.25]);
  translate([139, 13, 0])
    cube([1, 1, 1.25]);
  translate([140, 13, 0])
    cube([1, 1, 1.25]);
  translate([141, 13, 0])
    cube([1, 1, 1.25]);
  translate([142, 13, 0])
    cube([1, 1, 1.25]);
  translate([143, 13, 0])
    cube([1, 1, 1.25]);
  translate([144, 13, 0])
    cube([1, 1, 1.25]);
  translate([145, 13, 0])
    cube([1, 1, 1.25]);
  translate([146, 13, 0])
    cube([1, 1, 1.25]);
  translate([147, 13, 0])
    cube([1, 1, 1.25]);
  translate([148, 13, 0])
    cube([1, 1, 1.25]);
  translate([149, 13, 0])
    cube([1, 1, 1.25]);
  translate([150, 13, 0])
    cube([1, 1, 1.25]);
  translate([151, 13, 0])
    cube([1, 1, 1.25]);
  translate([152, 13, 0])
    cube([1, 1, 1.25]);
  translate([153, 13, 0])
    cube([1, 1, 1.25]);
  translate([154, 13, 0])
    cube([1, 1, 1.25]);
  translate([155, 13, 0])
    cube([1, 1, 1.25]);
  translate([156, 13, 0])
    cube([1, 1, 1.25]);
  translate([157, 13, 0])
    cube([1, 1, 1.25]);
  translate([158, 13, 0])
    cube([1, 1, 1.25]);
  translate([159, 13, 0])
    cube([1, 1, 1.25]);
  translate([160, 13, 0])
    cube([1, 1, 1.25]);
  translate([161, 13, 0])
    cube([1, 1, 1.25]);
  translate([162, 13, 0])
    cube([1, 1, 1.25]);
  translate([163, 13, 0])
    cube([1, 1, 1.25]);
  translate([164, 13, 0])
    cube([1, 1, 1.25]);
  translate([165, 13, 0])
    cube([1, 1, 1.25]);
  translate([166, 13, 0])
    cube([1, 1, 1.25]);
  translate([167, 13, 0])
    cube([1, 1, 1.25]);
  translate([168, 13, 0])
    cube([1, 1, 1.25]);
  translate([169, 13, 0])
    cube([1, 1, 1.25]);
  translate([170, 13, 0])
    cube([1, 1, 1.25]);
  translate([171, 13, 0])
    cube([1, 1, 1.25]);
  translate([172, 13, 0])
    cube([1, 1, 1.25]);
  translate([173, 13, 0])
    cube([1, 1, 1.25]);
  translate([174, 13, 0])
    cube([1, 1, 1.25]);
  translate([175, 13, 0])
    cube([1, 1, 1.25]);
  translate([176, 13, 0])
    cube([1, 1, 1.25]);
  translate([177, 13, 0])
    cube([1, 1, 1.25]);
  translate([178, 13, 0])
    cube([1, 1, 1.25]);
  translate([179, 13, 0])
    cube([1, 1, 1.25]);
  translate([180, 13, 0])
    cube([1, 1, 1.25]);
  translate([181, 13, 0])
    cube([1, 1, 1.25]);
  translate([182, 13, 0])
    cube([1, 1, 1.25]);
  translate([183, 13, 0])
    cube([1, 1, 1.25]);
  translate([184, 13, 0])
    cube([1, 1, 1.25]);
  translate([185, 13, 0])
    cube([1, 1, 1.25]);
  translate([186, 13, 0])
    cube([1, 1, 1.25]);
  translate([187, 13, 0])
    cube([1, 1, 1.25]);
  translate([188, 13, 0])
    cube([1, 1, 1.25]);
  translate([189, 13, 0])
    cube([1, 1, 1.25]);
  translate([190, 13, 0])
    cube([1, 1, 1.25]);
  translate([191, 13, 0])
    cube([1, 1, 1.25]);
  translate([192, 13, 0])
    cube([1, 1, 1.25]);
  translate([193, 13, 0])
    cube([1, 1, 1.25]);
  translate([194, 13, 0])
    cube([1, 1, 1.25]);
  translate([195, 13, 0])
    cube([1, 1, 1.25]);
  translate([196, 13, 0])
    cube([1, 1, 1.25]);
  translate([197, 13, 0])
    cube([1, 1, 1.25]);
  translate([198, 13, 0])
    cube([1, 1, 1.25]);
  translate([199, 13, 0])
    cube([1, 1, 1.25]);
  translate([200, 13, 0])
    cube([1, 1, 1.25]);
  translate([201, 13, 0])
    cube([1, 1, 1.25]);
  translate([202, 13, 0])
    cube([1, 1, 1.25]);
  translate([203, 13, 0])
    cube([1, 1, 1.25]);
  translate([204, 13, 0])
    cube([1, 1, 1.25]);
  translate([205, 13, 0])
    cube([1, 1, 1.25]);
  translate([206, 13, 0])
    cube([1, 1, 1.25]);
  translate([207, 13, 0])
    cube([1, 1, 1.25]);
  translate([208, 13, 0])
    cube([1, 1, 1.25]);
  translate([209, 13, 0])
    cube([1, 1, 1.25]);
  translate([210, 13, 0])
    cube([1, 1, 1.25]);
  translate([211, 13, 0])
    cube([1, 1, 1.25]);
  translate([212, 13, 0])
    cube([1, 1, 1.25]);
  translate([213, 13, 0])
    cube([1, 1, 1.25]);
  translate([214, 13, 0])
    cube([1, 1, 1.25]);
  translate([215, 13, 0])
    cube([1, 1, 1.25]);
  translate([216, 13, 0])
    cube([1, 1, 1.25]);
  translate([217, 13, 0])
    cube([1, 1, 1.25]);
  translate([218, 13, 0])
    cube([1, 1, 1.25]);
  translate([219, 13, 0])
    cube([1, 1, 1.25]);
  translate([220, 13, 0])
    cube([1, 1, 1.25]);
  translate([221, 13, 0])
    cube([1, 1, 1.25]);
  translate([222, 13, 0])
    cube([1, 1, 1.25]);
  translate([223, 13, 0])
    cube([1, 1, 1.25]);
  translate([224, 13, 0])
    cube([1, 1, 1.25]);
  translate([225, 13, 0])
    cube([1, 1, 1.25]);
  translate([226, 13, 0])
    cube([1, 1, 1.25]);
  translate([227, 13, 0])
    cube([1, 1, 1.25]);
  translate([228, 13, 0])
    cube([1, 1, 1.25]);
  translate([229, 13, 0])
    cube([1, 1, 1.25]);
  translate([230, 13, 0])
    cube([1, 1, 1.25]);
  translate([231, 13, 0])
    cube([1, 1, 1.25]);
  translate([232, 13, 0])
    cube([1, 1, 1.25]);
  translate([233, 13, 0])
    cube([1, 1, 1.25]);
  translate([234, 13, 0])
    cube([1, 1, 1.25]);
  translate([235, 13, 0])
    cube([1, 1, 1.25]);
  translate([236, 13, 0])
    cube([1, 1, 1.25]);
  translate([237, 13, 0])
    cube([1, 1, 1.25]);
  translate([238, 13, 0])
    cube([1, 1, 1.25]);
  translate([239, 13, 0])
    cube([1, 1, 1.25]);
  translate([240, 13, 0])
    cube([1, 1, 1.25]);
  translate([241, 13, 0])
    cube([1, 1, 1.25]);
  translate([242, 13, 0])
    cube([1, 1, 1.25]);
  translate([243, 13, 0])
    cube([1, 1, 1.25]);
  translate([244, 13, 0])
    cube([1, 1, 1.25]);
  translate([245, 13, 0])
    cube([1, 1, 1.25]);
  translate([246, 13, 0])
    cube([1, 1, 1.25]);
  translate([0, 14, 0])
    cube([1, 1, 1.33]);
  translate([1, 14, 0])
    cube([1, 1, 1.33]);
  translate([2, 14, 0])
    cube([1, 1, 1.33]);
  translate([3, 14, 0])
    cube([1, 1, 1.33]);
  translate([4, 14, 0])
    cube([1, 1, 1.33]);
  translate([5, 14, 0])
    cube([1, 1, 1.37]);
  translate([6, 14, 0])
    cube([1, 1, 1.33]);
  translate([7, 14, 0])
    cube([1, 1, 1.33]);
  translate([8, 14, 0])
    cube([1, 1, 1.33]);
  translate([9, 14, 0])
    cube([1, 1, 1.33]);
  translate([10, 14, 0])
    cube([1, 1, 1.33]);
  translate([11, 14, 0])
    cube([1, 1, 1.33]);
  translate([12, 14, 0])
    cube([1, 1, 1.33]);
  translate([13, 14, 0])
    cube([1, 1, 1.33]);
  translate([14, 14, 0])
    cube([1, 1, 1.37]);
  translate([15, 14, 0])
    cube([1, 1, 1.37]);
  translate([16, 14, 0])
    cube([1, 1, 1.37]);
  translate([17, 14, 0])
    cube([1, 1, 1.33]);
  translate([18, 14, 0])
    cube([1, 1, 1.33]);
  translate([19, 14, 0])
    cube([1, 1, 1.33]);
  translate([20, 14, 0])
    cube([1, 1, 1.33]);
  translate([21, 14, 0])
    cube([1, 1, 1.33]);
  translate([22, 14, 0])
    cube([1, 1, 1.33]);
  translate([23, 14, 0])
    cube([1, 1, 1.33]);
  translate([24, 14, 0])
    cube([1, 1, 1.33]);
  translate([25, 14, 0])
    cube([1, 1, 1.33]);
  translate([26, 14, 0])
    cube([1, 1, 1.33]);
  translate([27, 14, 0])
    cube([1, 1, 1.33]);
  translate([28, 14, 0])
    cube([1, 1, 1.33]);
  translate([29, 14, 0])
    cube([1, 1, 1.33]);
  translate([30, 14, 0])
    cube([1, 1, 1.33]);
  translate([31, 14, 0])
    cube([1, 1, 1.33]);
  translate([32, 14, 0])
    cube([1, 1, 1.33]);
  translate([33, 14, 0])
    cube([1, 1, 1.33]);
  translate([34, 14, 0])
    cube([1, 1, 1.33]);
  translate([35, 14, 0])
    cube([1, 1, 1.33]);
  translate([36, 14, 0])
    cube([1, 1, 1.33]);
  translate([37, 14, 0])
    cube([1, 1, 1.33]);
  translate([38, 14, 0])
    cube([1, 1, 1.33]);
  translate([39, 14, 0])
    cube([1, 1, 1.33]);
  translate([40, 14, 0])
    cube([1, 1, 1.33]);
  translate([41, 14, 0])
    cube([1, 1, 1.33]);
  translate([42, 14, 0])
    cube([1, 1, 1.33]);
  translate([43, 14, 0])
    cube([1, 1, 1.33]);
  translate([44, 14, 0])
    cube([1, 1, 1.33]);
  translate([45, 14, 0])
    cube([1, 1, 1.33]);
  translate([46, 14, 0])
    cube([1, 1, 1.33]);
  translate([47, 14, 0])
    cube([1, 1, 1.33]);
  translate([48, 14, 0])
    cube([1, 1, 1.33]);
  translate([49, 14, 0])
    cube([1, 1, 1.33]);
  translate([50, 14, 0])
    cube([1, 1, 1.33]);
  translate([51, 14, 0])
    cube([1, 1, 1.33]);
  translate([52, 14, 0])
    cube([1, 1, 1.33]);
  translate([53, 14, 0])
    cube([1, 1, 1.33]);
  translate([54, 14, 0])
    cube([1, 1, 1.33]);
  translate([55, 14, 0])
    cube([1, 1, 1.33]);
  translate([56, 14, 0])
    cube([1, 1, 1.33]);
  translate([57, 14, 0])
    cube([1, 1, 1.33]);
  translate([58, 14, 0])
    cube([1, 1, 1.33]);
  translate([59, 14, 0])
    cube([1, 1, 1.33]);
  translate([60, 14, 0])
    cube([1, 1, 1.33]);
  translate([61, 14, 0])
    cube([1, 1, 1.33]);
  translate([62, 14, 0])
    cube([1, 1, 1.33]);
  translate([63, 14, 0])
    cube([1, 1, 1.33]);
  translate([64, 14, 0])
    cube([1, 1, 1.29]);
  translate([65, 14, 0])
    cube([1, 1, 1.33]);
  translate([66, 14, 0])
    cube([1, 1, 1.33]);
  translate([67, 14, 0])
    cube([1, 1, 1.29]);
  translate([68, 14, 0])
    cube([1, 1, 1.29]);
  translate([69, 14, 0])
    cube([1, 1, 1.33]);
  translate([70, 14, 0])
    cube([1, 1, 1.33]);
  translate([71, 14, 0])
    cube([1, 1, 1.33]);
  translate([72, 14, 0])
    cube([1, 1, 1.33]);
  translate([73, 14, 0])
    cube([1, 1, 1.29]);
  translate([74, 14, 0])
    cube([1, 1, 1.29]);
  translate([75, 14, 0])
    cube([1, 1, 1.29]);
  translate([76, 14, 0])
    cube([1, 1, 1.29]);
  translate([77, 14, 0])
    cube([1, 1, 1.29]);
  translate([78, 14, 0])
    cube([1, 1, 1.29]);
  translate([79, 14, 0])
    cube([1, 1, 1.29]);
  translate([80, 14, 0])
    cube([1, 1, 1.29]);
  translate([81, 14, 0])
    cube([1, 1, 1.29]);
  translate([82, 14, 0])
    cube([1, 1, 1.29]);
  translate([83, 14, 0])
    cube([1, 1, 1.29]);
  translate([84, 14, 0])
    cube([1, 1, 1.29]);
  translate([85, 14, 0])
    cube([1, 1, 1.29]);
  translate([86, 14, 0])
    cube([1, 1, 1.29]);
  translate([87, 14, 0])
    cube([1, 1, 1.29]);
  translate([88, 14, 0])
    cube([1, 1, 1.25]);
  translate([89, 14, 0])
    cube([1, 1, 1.33]);
  translate([90, 14, 0])
    cube([1, 1, 2.51]);
  translate([91, 14, 0])
    cube([1, 1, 2.08]);
  translate([92, 14, 0])
    cube([1, 1, 1.61]);
  translate([93, 14, 0])
    cube([1, 1, 1.33]);
  translate([94, 14, 0])
    cube([1, 1, 1.37]);
  translate([95, 14, 0])
    cube([1, 1, 1.57]);
  translate([96, 14, 0])
    cube([1, 1, 1.49]);
  translate([97, 14, 0])
    cube([1, 1, 1.69]);
  translate([98, 14, 0])
    cube([1, 1, 1.57]);
  translate([99, 14, 0])
    cube([1, 1, 2.08]);
  translate([100, 14, 0])
    cube([1, 1, 1.65]);
  translate([101, 14, 0])
    cube([1, 1, 1.57]);
  translate([102, 14, 0])
    cube([1, 1, 2.35]);
  translate([103, 14, 0])
    cube([1, 1, 2.08]);
  translate([104, 14, 0])
    cube([1, 1, 1.29]);
  translate([105, 14, 0])
    cube([1, 1, 1.25]);
  translate([106, 14, 0])
    cube([1, 1, 1.25]);
  translate([107, 14, 0])
    cube([1, 1, 1.25]);
  translate([108, 14, 0])
    cube([1, 1, 1.25]);
  translate([109, 14, 0])
    cube([1, 1, 1.25]);
  translate([110, 14, 0])
    cube([1, 1, 1.25]);
  translate([111, 14, 0])
    cube([1, 1, 1.25]);
  translate([112, 14, 0])
    cube([1, 1, 1.25]);
  translate([113, 14, 0])
    cube([1, 1, 1.25]);
  translate([114, 14, 0])
    cube([1, 1, 1.25]);
  translate([115, 14, 0])
    cube([1, 1, 1.25]);
  translate([116, 14, 0])
    cube([1, 1, 1.25]);
  translate([117, 14, 0])
    cube([1, 1, 1.25]);
  translate([118, 14, 0])
    cube([1, 1, 1.25]);
  translate([119, 14, 0])
    cube([1, 1, 1.25]);
  translate([120, 14, 0])
    cube([1, 1, 1.25]);
  translate([121, 14, 0])
    cube([1, 1, 1.25]);
  translate([122, 14, 0])
    cube([1, 1, 1.25]);
  translate([123, 14, 0])
    cube([1, 1, 1.25]);
  translate([124, 14, 0])
    cube([1, 1, 1.25]);
  translate([125, 14, 0])
    cube([1, 1, 1.25]);
  translate([126, 14, 0])
    cube([1, 1, 1.25]);
  translate([127, 14, 0])
    cube([1, 1, 1.25]);
  translate([128, 14, 0])
    cube([1, 1, 1.25]);
  translate([129, 14, 0])
    cube([1, 1, 1.25]);
  translate([130, 14, 0])
    cube([1, 1, 1.25]);
  translate([131, 14, 0])
    cube([1, 1, 1.25]);
  translate([132, 14, 0])
    cube([1, 1, 1.25]);
  translate([133, 14, 0])
    cube([1, 1, 1.25]);
  translate([134, 14, 0])
    cube([1, 1, 1.25]);
  translate([135, 14, 0])
    cube([1, 1, 1.25]);
  translate([136, 14, 0])
    cube([1, 1, 1.25]);
  translate([137, 14, 0])
    cube([1, 1, 1.25]);
  translate([138, 14, 0])
    cube([1, 1, 1.25]);
  translate([139, 14, 0])
    cube([1, 1, 1.25]);
  translate([140, 14, 0])
    cube([1, 1, 1.25]);
  translate([141, 14, 0])
    cube([1, 1, 1.25]);
  translate([142, 14, 0])
    cube([1, 1, 1.25]);
  translate([143, 14, 0])
    cube([1, 1, 1.25]);
  translate([144, 14, 0])
    cube([1, 1, 1.25]);
  translate([145, 14, 0])
    cube([1, 1, 1.25]);
  translate([146, 14, 0])
    cube([1, 1, 1.25]);
  translate([147, 14, 0])
    cube([1, 1, 1.25]);
  translate([148, 14, 0])
    cube([1, 1, 1.25]);
  translate([149, 14, 0])
    cube([1, 1, 1.25]);
  translate([150, 14, 0])
    cube([1, 1, 1.25]);
  translate([151, 14, 0])
    cube([1, 1, 1.25]);
  translate([152, 14, 0])
    cube([1, 1, 1.25]);
  translate([153, 14, 0])
    cube([1, 1, 1.25]);
  translate([154, 14, 0])
    cube([1, 1, 1.25]);
  translate([155, 14, 0])
    cube([1, 1, 1.25]);
  translate([156, 14, 0])
    cube([1, 1, 1.25]);
  translate([157, 14, 0])
    cube([1, 1, 1.25]);
  translate([158, 14, 0])
    cube([1, 1, 1.25]);
  translate([159, 14, 0])
    cube([1, 1, 1.25]);
  translate([160, 14, 0])
    cube([1, 1, 1.25]);
  translate([161, 14, 0])
    cube([1, 1, 1.25]);
  translate([162, 14, 0])
    cube([1, 1, 1.25]);
  translate([163, 14, 0])
    cube([1, 1, 1.25]);
  translate([164, 14, 0])
    cube([1, 1, 1.25]);
  translate([165, 14, 0])
    cube([1, 1, 1.25]);
  translate([166, 14, 0])
    cube([1, 1, 1.25]);
  translate([167, 14, 0])
    cube([1, 1, 1.25]);
  translate([168, 14, 0])
    cube([1, 1, 1.25]);
  translate([169, 14, 0])
    cube([1, 1, 1.25]);
  translate([170, 14, 0])
    cube([1, 1, 1.25]);
  translate([171, 14, 0])
    cube([1, 1, 1.25]);
  translate([172, 14, 0])
    cube([1, 1, 1.25]);
  translate([173, 14, 0])
    cube([1, 1, 1.25]);
  translate([174, 14, 0])
    cube([1, 1, 1.25]);
  translate([175, 14, 0])
    cube([1, 1, 1.25]);
  translate([176, 14, 0])
    cube([1, 1, 1.25]);
  translate([177, 14, 0])
    cube([1, 1, 1.25]);
  translate([178, 14, 0])
    cube([1, 1, 1.25]);
  translate([179, 14, 0])
    cube([1, 1, 1.25]);
  translate([180, 14, 0])
    cube([1, 1, 1.25]);
  translate([181, 14, 0])
    cube([1, 1, 1.25]);
  translate([182, 14, 0])
    cube([1, 1, 1.25]);
  translate([183, 14, 0])
    cube([1, 1, 1.25]);
  translate([184, 14, 0])
    cube([1, 1, 1.25]);
  translate([185, 14, 0])
    cube([1, 1, 1.25]);
  translate([186, 14, 0])
    cube([1, 1, 1.25]);
  translate([187, 14, 0])
    cube([1, 1, 1.25]);
  translate([188, 14, 0])
    cube([1, 1, 1.25]);
  translate([189, 14, 0])
    cube([1, 1, 1.25]);
  translate([190, 14, 0])
    cube([1, 1, 1.25]);
  translate([191, 14, 0])
    cube([1, 1, 1.25]);
  translate([192, 14, 0])
    cube([1, 1, 1.25]);
  translate([193, 14, 0])
    cube([1, 1, 1.25]);
  translate([194, 14, 0])
    cube([1, 1, 1.25]);
  translate([195, 14, 0])
    cube([1, 1, 1.25]);
  translate([196, 14, 0])
    cube([1, 1, 1.25]);
  translate([197, 14, 0])
    cube([1, 1, 1.25]);
  translate([198, 14, 0])
    cube([1, 1, 1.25]);
  translate([199, 14, 0])
    cube([1, 1, 1.25]);
  translate([200, 14, 0])
    cube([1, 1, 1.25]);
  translate([201, 14, 0])
    cube([1, 1, 1.25]);
  translate([202, 14, 0])
    cube([1, 1, 1.25]);
  translate([203, 14, 0])
    cube([1, 1, 1.25]);
  translate([204, 14, 0])
    cube([1, 1, 1.25]);
  translate([205, 14, 0])
    cube([1, 1, 1.25]);
  translate([206, 14, 0])
    cube([1, 1, 1.25]);
  translate([207, 14, 0])
    cube([1, 1, 1.25]);
  translate([208, 14, 0])
    cube([1, 1, 1.25]);
  translate([209, 14, 0])
    cube([1, 1, 1.25]);
  translate([210, 14, 0])
    cube([1, 1, 1.25]);
  translate([211, 14, 0])
    cube([1, 1, 1.25]);
  translate([212, 14, 0])
    cube([1, 1, 1.25]);
  translate([213, 14, 0])
    cube([1, 1, 1.25]);
  translate([214, 14, 0])
    cube([1, 1, 1.25]);
  translate([215, 14, 0])
    cube([1, 1, 1.25]);
  translate([216, 14, 0])
    cube([1, 1, 1.25]);
  translate([217, 14, 0])
    cube([1, 1, 1.25]);
  translate([218, 14, 0])
    cube([1, 1, 1.25]);
  translate([219, 14, 0])
    cube([1, 1, 1.25]);
  translate([220, 14, 0])
    cube([1, 1, 1.25]);
  translate([221, 14, 0])
    cube([1, 1, 1.25]);
  translate([222, 14, 0])
    cube([1, 1, 1.25]);
  translate([223, 14, 0])
    cube([1, 1, 1.25]);
  translate([224, 14, 0])
    cube([1, 1, 1.25]);
  translate([225, 14, 0])
    cube([1, 1, 1.25]);
  translate([226, 14, 0])
    cube([1, 1, 1.25]);
  translate([227, 14, 0])
    cube([1, 1, 1.25]);
  translate([228, 14, 0])
    cube([1, 1, 1.25]);
  translate([229, 14, 0])
    cube([1, 1, 1.25]);
  translate([230, 14, 0])
    cube([1, 1, 1.25]);
  translate([231, 14, 0])
    cube([1, 1, 1.25]);
  translate([232, 14, 0])
    cube([1, 1, 1.25]);
  translate([233, 14, 0])
    cube([1, 1, 1.25]);
  translate([234, 14, 0])
    cube([1, 1, 1.25]);
  translate([235, 14, 0])
    cube([1, 1, 1.25]);
  translate([236, 14, 0])
    cube([1, 1, 1.25]);
  translate([237, 14, 0])
    cube([1, 1, 1.25]);
  translate([238, 14, 0])
    cube([1, 1, 1.25]);
  translate([239, 14, 0])
    cube([1, 1, 1.25]);
  translate([240, 14, 0])
    cube([1, 1, 1.25]);
  translate([241, 14, 0])
    cube([1, 1, 1.25]);
  translate([242, 14, 0])
    cube([1, 1, 1.25]);
  translate([243, 14, 0])
    cube([1, 1, 1.25]);
  translate([244, 14, 0])
    cube([1, 1, 1.25]);
  translate([245, 14, 0])
    cube([1, 1, 1.25]);
  translate([246, 14, 0])
    cube([1, 1, 1.25]);
  translate([0, 15, 0])
    cube([1, 1, 1.37]);
  translate([1, 15, 0])
    cube([1, 1, 1.33]);
  translate([2, 15, 0])
    cube([1, 1, 1.33]);
  translate([3, 15, 0])
    cube([1, 1, 1.33]);
  translate([4, 15, 0])
    cube([1, 1, 1.33]);
  translate([5, 15, 0])
    cube([1, 1, 1.33]);
  translate([6, 15, 0])
    cube([1, 1, 1.33]);
  translate([7, 15, 0])
    cube([1, 1, 1.33]);
  translate([8, 15, 0])
    cube([1, 1, 1.33]);
  translate([9, 15, 0])
    cube([1, 1, 1.33]);
  translate([10, 15, 0])
    cube([1, 1, 1.33]);
  translate([11, 15, 0])
    cube([1, 1, 1.33]);
  translate([12, 15, 0])
    cube([1, 1, 1.33]);
  translate([13, 15, 0])
    cube([1, 1, 1.33]);
  translate([14, 15, 0])
    cube([1, 1, 1.33]);
  translate([15, 15, 0])
    cube([1, 1, 1.37]);
  translate([16, 15, 0])
    cube([1, 1, 1.33]);
  translate([17, 15, 0])
    cube([1, 1, 1.33]);
  translate([18, 15, 0])
    cube([1, 1, 1.33]);
  translate([19, 15, 0])
    cube([1, 1, 1.33]);
  translate([20, 15, 0])
    cube([1, 1, 1.33]);
  translate([21, 15, 0])
    cube([1, 1, 1.33]);
  translate([22, 15, 0])
    cube([1, 1, 1.33]);
  translate([23, 15, 0])
    cube([1, 1, 1.33]);
  translate([24, 15, 0])
    cube([1, 1, 1.33]);
  translate([25, 15, 0])
    cube([1, 1, 1.33]);
  translate([26, 15, 0])
    cube([1, 1, 1.33]);
  translate([27, 15, 0])
    cube([1, 1, 1.33]);
  translate([28, 15, 0])
    cube([1, 1, 1.33]);
  translate([29, 15, 0])
    cube([1, 1, 1.33]);
  translate([30, 15, 0])
    cube([1, 1, 1.33]);
  translate([31, 15, 0])
    cube([1, 1, 1.33]);
  translate([32, 15, 0])
    cube([1, 1, 1.33]);
  translate([33, 15, 0])
    cube([1, 1, 1.33]);
  translate([34, 15, 0])
    cube([1, 1, 1.33]);
  translate([35, 15, 0])
    cube([1, 1, 1.33]);
  translate([36, 15, 0])
    cube([1, 1, 1.33]);
  translate([37, 15, 0])
    cube([1, 1, 1.33]);
  translate([38, 15, 0])
    cube([1, 1, 1.33]);
  translate([39, 15, 0])
    cube([1, 1, 1.33]);
  translate([40, 15, 0])
    cube([1, 1, 1.33]);
  translate([41, 15, 0])
    cube([1, 1, 1.33]);
  translate([42, 15, 0])
    cube([1, 1, 1.33]);
  translate([43, 15, 0])
    cube([1, 1, 1.33]);
  translate([44, 15, 0])
    cube([1, 1, 1.33]);
  translate([45, 15, 0])
    cube([1, 1, 1.33]);
  translate([46, 15, 0])
    cube([1, 1, 1.33]);
  translate([47, 15, 0])
    cube([1, 1, 1.33]);
  translate([48, 15, 0])
    cube([1, 1, 1.33]);
  translate([49, 15, 0])
    cube([1, 1, 1.33]);
  translate([50, 15, 0])
    cube([1, 1, 1.33]);
  translate([51, 15, 0])
    cube([1, 1, 1.33]);
  translate([52, 15, 0])
    cube([1, 1, 1.33]);
  translate([53, 15, 0])
    cube([1, 1, 1.33]);
  translate([54, 15, 0])
    cube([1, 1, 1.33]);
  translate([55, 15, 0])
    cube([1, 1, 1.33]);
  translate([56, 15, 0])
    cube([1, 1, 1.33]);
  translate([57, 15, 0])
    cube([1, 1, 1.33]);
  translate([58, 15, 0])
    cube([1, 1, 1.33]);
  translate([59, 15, 0])
    cube([1, 1, 1.33]);
  translate([60, 15, 0])
    cube([1, 1, 1.33]);
  translate([61, 15, 0])
    cube([1, 1, 1.33]);
  translate([62, 15, 0])
    cube([1, 1, 1.33]);
  translate([63, 15, 0])
    cube([1, 1, 1.33]);
  translate([64, 15, 0])
    cube([1, 1, 1.33]);
  translate([65, 15, 0])
    cube([1, 1, 1.29]);
  translate([66, 15, 0])
    cube([1, 1, 1.33]);
  translate([67, 15, 0])
    cube([1, 1, 1.33]);
  translate([68, 15, 0])
    cube([1, 1, 1.33]);
  translate([69, 15, 0])
    cube([1, 1, 1.33]);
  translate([70, 15, 0])
    cube([1, 1, 1.29]);
  translate([71, 15, 0])
    cube([1, 1, 1.33]);
  translate([72, 15, 0])
    cube([1, 1, 1.33]);
  translate([73, 15, 0])
    cube([1, 1, 1.33]);
  translate([74, 15, 0])
    cube([1, 1, 1.29]);
  translate([75, 15, 0])
    cube([1, 1, 1.33]);
  translate([76, 15, 0])
    cube([1, 1, 1.29]);
  translate([77, 15, 0])
    cube([1, 1, 1.29]);
  translate([78, 15, 0])
    cube([1, 1, 1.29]);
  translate([79, 15, 0])
    cube([1, 1, 1.29]);
  translate([80, 15, 0])
    cube([1, 1, 1.29]);
  translate([81, 15, 0])
    cube([1, 1, 1.29]);
  translate([82, 15, 0])
    cube([1, 1, 1.29]);
  translate([83, 15, 0])
    cube([1, 1, 1.29]);
  translate([84, 15, 0])
    cube([1, 1, 1.29]);
  translate([85, 15, 0])
    cube([1, 1, 1.29]);
  translate([86, 15, 0])
    cube([1, 1, 1.22]);
  translate([87, 15, 0])
    cube([1, 1, 1.14]);
  translate([88, 15, 0])
    cube([1, 1, 2.94]);
  translate([89, 15, 0])
    cube([1, 1, 2.24]);
  translate([90, 15, 0])
    cube([1, 1, 1.76]);
  translate([91, 15, 0])
    cube([1, 1, 1.53]);
  translate([92, 15, 0])
    cube([1, 1, 1.41]);
  translate([93, 15, 0])
    cube([1, 1, 1.45]);
  translate([94, 15, 0])
    cube([1, 1, 1.29]);
  translate([95, 15, 0])
    cube([1, 1, 1.37]);
  translate([96, 15, 0])
    cube([1, 1, 1.41]);
  translate([97, 15, 0])
    cube([1, 1, 1.41]);
  translate([98, 15, 0])
    cube([1, 1, 1.57]);
  translate([99, 15, 0])
    cube([1, 1, 1.76]);
  translate([100, 15, 0])
    cube([1, 1, 1.69]);
  translate([101, 15, 0])
    cube([1, 1, 1.61]);
  translate([102, 15, 0])
    cube([1, 1, 2.39]);
  translate([103, 15, 0])
    cube([1, 1, 2.20]);
  translate([104, 15, 0])
    cube([1, 1, 2.24]);
  translate([105, 15, 0])
    cube([1, 1, 1.73]);
  translate([106, 15, 0])
    cube([1, 1, 3.22]);
  translate([107, 15, 0])
    cube([1, 1, 1.02]);
  translate([108, 15, 0])
    cube([1, 1, 1.25]);
  translate([109, 15, 0])
    cube([1, 1, 1.29]);
  translate([110, 15, 0])
    cube([1, 1, 1.25]);
  translate([111, 15, 0])
    cube([1, 1, 1.25]);
  translate([112, 15, 0])
    cube([1, 1, 1.25]);
  translate([113, 15, 0])
    cube([1, 1, 1.25]);
  translate([114, 15, 0])
    cube([1, 1, 1.25]);
  translate([115, 15, 0])
    cube([1, 1, 1.25]);
  translate([116, 15, 0])
    cube([1, 1, 1.25]);
  translate([117, 15, 0])
    cube([1, 1, 1.25]);
  translate([118, 15, 0])
    cube([1, 1, 1.25]);
  translate([119, 15, 0])
    cube([1, 1, 1.25]);
  translate([120, 15, 0])
    cube([1, 1, 1.25]);
  translate([121, 15, 0])
    cube([1, 1, 1.25]);
  translate([122, 15, 0])
    cube([1, 1, 1.25]);
  translate([123, 15, 0])
    cube([1, 1, 1.25]);
  translate([124, 15, 0])
    cube([1, 1, 1.25]);
  translate([125, 15, 0])
    cube([1, 1, 1.25]);
  translate([126, 15, 0])
    cube([1, 1, 1.25]);
  translate([127, 15, 0])
    cube([1, 1, 1.25]);
  translate([128, 15, 0])
    cube([1, 1, 1.25]);
  translate([129, 15, 0])
    cube([1, 1, 1.25]);
  translate([130, 15, 0])
    cube([1, 1, 1.25]);
  translate([131, 15, 0])
    cube([1, 1, 1.25]);
  translate([132, 15, 0])
    cube([1, 1, 1.25]);
  translate([133, 15, 0])
    cube([1, 1, 1.25]);
  translate([134, 15, 0])
    cube([1, 1, 1.25]);
  translate([135, 15, 0])
    cube([1, 1, 1.25]);
  translate([136, 15, 0])
    cube([1, 1, 1.25]);
  translate([137, 15, 0])
    cube([1, 1, 1.25]);
  translate([138, 15, 0])
    cube([1, 1, 1.25]);
  translate([139, 15, 0])
    cube([1, 1, 1.25]);
  translate([140, 15, 0])
    cube([1, 1, 1.25]);
  translate([141, 15, 0])
    cube([1, 1, 1.25]);
  translate([142, 15, 0])
    cube([1, 1, 1.25]);
  translate([143, 15, 0])
    cube([1, 1, 1.25]);
  translate([144, 15, 0])
    cube([1, 1, 1.25]);
  translate([145, 15, 0])
    cube([1, 1, 1.25]);
  translate([146, 15, 0])
    cube([1, 1, 1.25]);
  translate([147, 15, 0])
    cube([1, 1, 1.25]);
  translate([148, 15, 0])
    cube([1, 1, 1.25]);
  translate([149, 15, 0])
    cube([1, 1, 1.25]);
  translate([150, 15, 0])
    cube([1, 1, 1.25]);
  translate([151, 15, 0])
    cube([1, 1, 1.25]);
  translate([152, 15, 0])
    cube([1, 1, 1.25]);
  translate([153, 15, 0])
    cube([1, 1, 1.25]);
  translate([154, 15, 0])
    cube([1, 1, 1.25]);
  translate([155, 15, 0])
    cube([1, 1, 1.25]);
  translate([156, 15, 0])
    cube([1, 1, 1.25]);
  translate([157, 15, 0])
    cube([1, 1, 1.25]);
  translate([158, 15, 0])
    cube([1, 1, 1.25]);
  translate([159, 15, 0])
    cube([1, 1, 1.25]);
  translate([160, 15, 0])
    cube([1, 1, 1.25]);
  translate([161, 15, 0])
    cube([1, 1, 1.25]);
  translate([162, 15, 0])
    cube([1, 1, 1.25]);
  translate([163, 15, 0])
    cube([1, 1, 1.25]);
  translate([164, 15, 0])
    cube([1, 1, 1.25]);
  translate([165, 15, 0])
    cube([1, 1, 1.25]);
  translate([166, 15, 0])
    cube([1, 1, 1.25]);
  translate([167, 15, 0])
    cube([1, 1, 1.25]);
  translate([168, 15, 0])
    cube([1, 1, 1.25]);
  translate([169, 15, 0])
    cube([1, 1, 1.25]);
  translate([170, 15, 0])
    cube([1, 1, 1.25]);
  translate([171, 15, 0])
    cube([1, 1, 1.25]);
  translate([172, 15, 0])
    cube([1, 1, 1.25]);
  translate([173, 15, 0])
    cube([1, 1, 1.25]);
  translate([174, 15, 0])
    cube([1, 1, 1.25]);
  translate([175, 15, 0])
    cube([1, 1, 1.25]);
  translate([176, 15, 0])
    cube([1, 1, 1.25]);
  translate([177, 15, 0])
    cube([1, 1, 1.25]);
  translate([178, 15, 0])
    cube([1, 1, 1.25]);
  translate([179, 15, 0])
    cube([1, 1, 1.25]);
  translate([180, 15, 0])
    cube([1, 1, 1.25]);
  translate([181, 15, 0])
    cube([1, 1, 1.25]);
  translate([182, 15, 0])
    cube([1, 1, 1.25]);
  translate([183, 15, 0])
    cube([1, 1, 1.25]);
  translate([184, 15, 0])
    cube([1, 1, 1.25]);
  translate([185, 15, 0])
    cube([1, 1, 1.25]);
  translate([186, 15, 0])
    cube([1, 1, 1.25]);
  translate([187, 15, 0])
    cube([1, 1, 1.25]);
  translate([188, 15, 0])
    cube([1, 1, 1.25]);
  translate([189, 15, 0])
    cube([1, 1, 1.25]);
  translate([190, 15, 0])
    cube([1, 1, 1.25]);
  translate([191, 15, 0])
    cube([1, 1, 1.25]);
  translate([192, 15, 0])
    cube([1, 1, 1.25]);
  translate([193, 15, 0])
    cube([1, 1, 1.25]);
  translate([194, 15, 0])
    cube([1, 1, 1.25]);
  translate([195, 15, 0])
    cube([1, 1, 1.25]);
  translate([196, 15, 0])
    cube([1, 1, 1.25]);
  translate([197, 15, 0])
    cube([1, 1, 1.25]);
  translate([198, 15, 0])
    cube([1, 1, 1.25]);
  translate([199, 15, 0])
    cube([1, 1, 1.25]);
  translate([200, 15, 0])
    cube([1, 1, 1.25]);
  translate([201, 15, 0])
    cube([1, 1, 1.25]);
  translate([202, 15, 0])
    cube([1, 1, 1.25]);
  translate([203, 15, 0])
    cube([1, 1, 1.25]);
  translate([204, 15, 0])
    cube([1, 1, 1.25]);
  translate([205, 15, 0])
    cube([1, 1, 1.25]);
  translate([206, 15, 0])
    cube([1, 1, 1.25]);
  translate([207, 15, 0])
    cube([1, 1, 1.25]);
  translate([208, 15, 0])
    cube([1, 1, 1.25]);
  translate([209, 15, 0])
    cube([1, 1, 1.25]);
  translate([210, 15, 0])
    cube([1, 1, 1.25]);
  translate([211, 15, 0])
    cube([1, 1, 1.25]);
  translate([212, 15, 0])
    cube([1, 1, 1.25]);
  translate([213, 15, 0])
    cube([1, 1, 1.25]);
  translate([214, 15, 0])
    cube([1, 1, 1.25]);
  translate([215, 15, 0])
    cube([1, 1, 1.25]);
  translate([216, 15, 0])
    cube([1, 1, 1.25]);
  translate([217, 15, 0])
    cube([1, 1, 1.25]);
  translate([218, 15, 0])
    cube([1, 1, 1.25]);
  translate([219, 15, 0])
    cube([1, 1, 1.25]);
  translate([220, 15, 0])
    cube([1, 1, 1.25]);
  translate([221, 15, 0])
    cube([1, 1, 1.25]);
  translate([222, 15, 0])
    cube([1, 1, 1.25]);
  translate([223, 15, 0])
    cube([1, 1, 1.25]);
  translate([224, 15, 0])
    cube([1, 1, 1.25]);
  translate([225, 15, 0])
    cube([1, 1, 1.25]);
  translate([226, 15, 0])
    cube([1, 1, 1.25]);
  translate([227, 15, 0])
    cube([1, 1, 1.25]);
  translate([228, 15, 0])
    cube([1, 1, 1.25]);
  translate([229, 15, 0])
    cube([1, 1, 1.25]);
  translate([230, 15, 0])
    cube([1, 1, 1.25]);
  translate([231, 15, 0])
    cube([1, 1, 1.25]);
  translate([232, 15, 0])
    cube([1, 1, 1.25]);
  translate([233, 15, 0])
    cube([1, 1, 1.25]);
  translate([234, 15, 0])
    cube([1, 1, 1.25]);
  translate([235, 15, 0])
    cube([1, 1, 1.25]);
  translate([236, 15, 0])
    cube([1, 1, 1.25]);
  translate([237, 15, 0])
    cube([1, 1, 1.25]);
  translate([238, 15, 0])
    cube([1, 1, 1.25]);
  translate([239, 15, 0])
    cube([1, 1, 1.25]);
  translate([240, 15, 0])
    cube([1, 1, 1.25]);
  translate([241, 15, 0])
    cube([1, 1, 1.25]);
  translate([242, 15, 0])
    cube([1, 1, 1.25]);
  translate([243, 15, 0])
    cube([1, 1, 1.25]);
  translate([244, 15, 0])
    cube([1, 1, 1.25]);
  translate([245, 15, 0])
    cube([1, 1, 1.25]);
  translate([246, 15, 0])
    cube([1, 1, 1.25]);
  translate([0, 16, 0])
    cube([1, 1, 1.33]);
  translate([1, 16, 0])
    cube([1, 1, 1.33]);
  translate([2, 16, 0])
    cube([1, 1, 1.33]);
  translate([3, 16, 0])
    cube([1, 1, 1.37]);
  translate([4, 16, 0])
    cube([1, 1, 1.33]);
  translate([5, 16, 0])
    cube([1, 1, 1.33]);
  translate([6, 16, 0])
    cube([1, 1, 1.33]);
  translate([7, 16, 0])
    cube([1, 1, 1.37]);
  translate([8, 16, 0])
    cube([1, 1, 1.33]);
  translate([9, 16, 0])
    cube([1, 1, 1.33]);
  translate([10, 16, 0])
    cube([1, 1, 1.33]);
  translate([11, 16, 0])
    cube([1, 1, 1.33]);
  translate([12, 16, 0])
    cube([1, 1, 1.33]);
  translate([13, 16, 0])
    cube([1, 1, 1.33]);
  translate([14, 16, 0])
    cube([1, 1, 1.33]);
  translate([15, 16, 0])
    cube([1, 1, 1.33]);
  translate([16, 16, 0])
    cube([1, 1, 1.33]);
  translate([17, 16, 0])
    cube([1, 1, 1.33]);
  translate([18, 16, 0])
    cube([1, 1, 1.37]);
  translate([19, 16, 0])
    cube([1, 1, 1.33]);
  translate([20, 16, 0])
    cube([1, 1, 1.33]);
  translate([21, 16, 0])
    cube([1, 1, 1.33]);
  translate([22, 16, 0])
    cube([1, 1, 1.33]);
  translate([23, 16, 0])
    cube([1, 1, 1.33]);
  translate([24, 16, 0])
    cube([1, 1, 1.33]);
  translate([25, 16, 0])
    cube([1, 1, 1.33]);
  translate([26, 16, 0])
    cube([1, 1, 1.33]);
  translate([27, 16, 0])
    cube([1, 1, 1.33]);
  translate([28, 16, 0])
    cube([1, 1, 1.33]);
  translate([29, 16, 0])
    cube([1, 1, 1.33]);
  translate([30, 16, 0])
    cube([1, 1, 1.33]);
  translate([31, 16, 0])
    cube([1, 1, 1.33]);
  translate([32, 16, 0])
    cube([1, 1, 1.33]);
  translate([33, 16, 0])
    cube([1, 1, 1.33]);
  translate([34, 16, 0])
    cube([1, 1, 1.33]);
  translate([35, 16, 0])
    cube([1, 1, 1.33]);
  translate([36, 16, 0])
    cube([1, 1, 1.33]);
  translate([37, 16, 0])
    cube([1, 1, 1.33]);
  translate([38, 16, 0])
    cube([1, 1, 1.33]);
  translate([39, 16, 0])
    cube([1, 1, 1.33]);
  translate([40, 16, 0])
    cube([1, 1, 1.33]);
  translate([41, 16, 0])
    cube([1, 1, 1.33]);
  translate([42, 16, 0])
    cube([1, 1, 1.33]);
  translate([43, 16, 0])
    cube([1, 1, 1.33]);
  translate([44, 16, 0])
    cube([1, 1, 1.33]);
  translate([45, 16, 0])
    cube([1, 1, 1.33]);
  translate([46, 16, 0])
    cube([1, 1, 1.33]);
  translate([47, 16, 0])
    cube([1, 1, 1.33]);
  translate([48, 16, 0])
    cube([1, 1, 1.33]);
  translate([49, 16, 0])
    cube([1, 1, 1.33]);
  translate([50, 16, 0])
    cube([1, 1, 1.33]);
  translate([51, 16, 0])
    cube([1, 1, 1.33]);
  translate([52, 16, 0])
    cube([1, 1, 1.33]);
  translate([53, 16, 0])
    cube([1, 1, 1.33]);
  translate([54, 16, 0])
    cube([1, 1, 1.33]);
  translate([55, 16, 0])
    cube([1, 1, 1.33]);
  translate([56, 16, 0])
    cube([1, 1, 1.25]);
  translate([57, 16, 0])
    cube([1, 1, 1.29]);
  translate([58, 16, 0])
    cube([1, 1, 1.29]);
  translate([59, 16, 0])
    cube([1, 1, 1.33]);
  translate([60, 16, 0])
    cube([1, 1, 1.33]);
  translate([61, 16, 0])
    cube([1, 1, 1.33]);
  translate([62, 16, 0])
    cube([1, 1, 1.33]);
  translate([63, 16, 0])
    cube([1, 1, 1.33]);
  translate([64, 16, 0])
    cube([1, 1, 1.33]);
  translate([65, 16, 0])
    cube([1, 1, 1.29]);
  translate([66, 16, 0])
    cube([1, 1, 1.29]);
  translate([67, 16, 0])
    cube([1, 1, 1.29]);
  translate([68, 16, 0])
    cube([1, 1, 1.29]);
  translate([69, 16, 0])
    cube([1, 1, 1.29]);
  translate([70, 16, 0])
    cube([1, 1, 1.25]);
  translate([71, 16, 0])
    cube([1, 1, 1.29]);
  translate([72, 16, 0])
    cube([1, 1, 1.29]);
  translate([73, 16, 0])
    cube([1, 1, 1.29]);
  translate([74, 16, 0])
    cube([1, 1, 1.29]);
  translate([75, 16, 0])
    cube([1, 1, 1.29]);
  translate([76, 16, 0])
    cube([1, 1, 1.33]);
  translate([77, 16, 0])
    cube([1, 1, 1.33]);
  translate([78, 16, 0])
    cube([1, 1, 1.25]);
  translate([79, 16, 0])
    cube([1, 1, 1.22]);
  translate([80, 16, 0])
    cube([1, 1, 1.29]);
  translate([81, 16, 0])
    cube([1, 1, 1.29]);
  translate([82, 16, 0])
    cube([1, 1, 1.29]);
  translate([83, 16, 0])
    cube([1, 1, 1.29]);
  translate([84, 16, 0])
    cube([1, 1, 1.37]);
  translate([85, 16, 0])
    cube([1, 1, 1.02]);
  translate([86, 16, 0])
    cube([1, 1, 1.14]);
  translate([87, 16, 0])
    cube([1, 1, 4.35]);
  translate([88, 16, 0])
    cube([1, 1, 1.45]);
  translate([89, 16, 0])
    cube([1, 1, 1.37]);
  translate([90, 16, 0])
    cube([1, 1, 1.49]);
  translate([91, 16, 0])
    cube([1, 1, 1.53]);
  translate([92, 16, 0])
    cube([1, 1, 1.37]);
  translate([93, 16, 0])
    cube([1, 1, 1.37]);
  translate([94, 16, 0])
    cube([1, 1, 1.49]);
  translate([95, 16, 0])
    cube([1, 1, 1.49]);
  translate([96, 16, 0])
    cube([1, 1, 1.53]);
  translate([97, 16, 0])
    cube([1, 1, 1.65]);
  translate([98, 16, 0])
    cube([1, 1, 1.65]);
  translate([99, 16, 0])
    cube([1, 1, 1.69]);
  translate([100, 16, 0])
    cube([1, 1, 1.65]);
  translate([101, 16, 0])
    cube([1, 1, 1.61]);
  translate([102, 16, 0])
    cube([1, 1, 2.04]);
  translate([103, 16, 0])
    cube([1, 1, 1.88]);
  translate([104, 16, 0])
    cube([1, 1, 2.16]);
  translate([105, 16, 0])
    cube([1, 1, 1.65]);
  translate([106, 16, 0])
    cube([1, 1, 1.73]);
  translate([107, 16, 0])
    cube([1, 1, 2.59]);
  translate([108, 16, 0])
    cube([1, 1, 1.37]);
  translate([109, 16, 0])
    cube([1, 1, 1.92]);
  translate([110, 16, 0])
    cube([1, 1, 1.33]);
  translate([111, 16, 0])
    cube([1, 1, 1.49]);
  translate([112, 16, 0])
    cube([1, 1, 1.45]);
  translate([113, 16, 0])
    cube([1, 1, 1.49]);
  translate([114, 16, 0])
    cube([1, 1, 1.18]);
  translate([115, 16, 0])
    cube([1, 1, 1.25]);
  translate([116, 16, 0])
    cube([1, 1, 1.25]);
  translate([117, 16, 0])
    cube([1, 1, 1.25]);
  translate([118, 16, 0])
    cube([1, 1, 1.25]);
  translate([119, 16, 0])
    cube([1, 1, 1.25]);
  translate([120, 16, 0])
    cube([1, 1, 1.25]);
  translate([121, 16, 0])
    cube([1, 1, 1.25]);
  translate([122, 16, 0])
    cube([1, 1, 1.25]);
  translate([123, 16, 0])
    cube([1, 1, 1.25]);
  translate([124, 16, 0])
    cube([1, 1, 1.25]);
  translate([125, 16, 0])
    cube([1, 1, 1.25]);
  translate([126, 16, 0])
    cube([1, 1, 1.25]);
  translate([127, 16, 0])
    cube([1, 1, 1.25]);
  translate([128, 16, 0])
    cube([1, 1, 1.25]);
  translate([129, 16, 0])
    cube([1, 1, 1.25]);
  translate([130, 16, 0])
    cube([1, 1, 1.25]);
  translate([131, 16, 0])
    cube([1, 1, 1.25]);
  translate([132, 16, 0])
    cube([1, 1, 1.25]);
  translate([133, 16, 0])
    cube([1, 1, 1.25]);
  translate([134, 16, 0])
    cube([1, 1, 1.25]);
  translate([135, 16, 0])
    cube([1, 1, 1.25]);
  translate([136, 16, 0])
    cube([1, 1, 1.25]);
  translate([137, 16, 0])
    cube([1, 1, 1.25]);
  translate([138, 16, 0])
    cube([1, 1, 1.25]);
  translate([139, 16, 0])
    cube([1, 1, 1.25]);
  translate([140, 16, 0])
    cube([1, 1, 1.25]);
  translate([141, 16, 0])
    cube([1, 1, 1.25]);
  translate([142, 16, 0])
    cube([1, 1, 1.25]);
  translate([143, 16, 0])
    cube([1, 1, 1.25]);
  translate([144, 16, 0])
    cube([1, 1, 1.25]);
  translate([145, 16, 0])
    cube([1, 1, 1.25]);
  translate([146, 16, 0])
    cube([1, 1, 1.25]);
  translate([147, 16, 0])
    cube([1, 1, 1.25]);
  translate([148, 16, 0])
    cube([1, 1, 1.25]);
  translate([149, 16, 0])
    cube([1, 1, 1.25]);
  translate([150, 16, 0])
    cube([1, 1, 1.25]);
  translate([151, 16, 0])
    cube([1, 1, 1.25]);
  translate([152, 16, 0])
    cube([1, 1, 1.25]);
  translate([153, 16, 0])
    cube([1, 1, 1.25]);
  translate([154, 16, 0])
    cube([1, 1, 1.25]);
  translate([155, 16, 0])
    cube([1, 1, 1.25]);
  translate([156, 16, 0])
    cube([1, 1, 1.25]);
  translate([157, 16, 0])
    cube([1, 1, 1.25]);
  translate([158, 16, 0])
    cube([1, 1, 1.25]);
  translate([159, 16, 0])
    cube([1, 1, 1.25]);
  translate([160, 16, 0])
    cube([1, 1, 1.25]);
  translate([161, 16, 0])
    cube([1, 1, 1.25]);
  translate([162, 16, 0])
    cube([1, 1, 1.25]);
  translate([163, 16, 0])
    cube([1, 1, 1.25]);
  translate([164, 16, 0])
    cube([1, 1, 1.25]);
  translate([165, 16, 0])
    cube([1, 1, 1.25]);
  translate([166, 16, 0])
    cube([1, 1, 1.25]);
  translate([167, 16, 0])
    cube([1, 1, 1.25]);
  translate([168, 16, 0])
    cube([1, 1, 1.25]);
  translate([169, 16, 0])
    cube([1, 1, 1.25]);
  translate([170, 16, 0])
    cube([1, 1, 1.25]);
  translate([171, 16, 0])
    cube([1, 1, 1.25]);
  translate([172, 16, 0])
    cube([1, 1, 1.25]);
  translate([173, 16, 0])
    cube([1, 1, 1.25]);
  translate([174, 16, 0])
    cube([1, 1, 1.25]);
  translate([175, 16, 0])
    cube([1, 1, 1.25]);
  translate([176, 16, 0])
    cube([1, 1, 1.25]);
  translate([177, 16, 0])
    cube([1, 1, 1.25]);
  translate([178, 16, 0])
    cube([1, 1, 1.25]);
  translate([179, 16, 0])
    cube([1, 1, 1.25]);
  translate([180, 16, 0])
    cube([1, 1, 1.25]);
  translate([181, 16, 0])
    cube([1, 1, 1.25]);
  translate([182, 16, 0])
    cube([1, 1, 1.25]);
  translate([183, 16, 0])
    cube([1, 1, 1.25]);
  translate([184, 16, 0])
    cube([1, 1, 1.25]);
  translate([185, 16, 0])
    cube([1, 1, 1.25]);
  translate([186, 16, 0])
    cube([1, 1, 1.25]);
  translate([187, 16, 0])
    cube([1, 1, 1.25]);
  translate([188, 16, 0])
    cube([1, 1, 1.25]);
  translate([189, 16, 0])
    cube([1, 1, 1.25]);
  translate([190, 16, 0])
    cube([1, 1, 1.25]);
  translate([191, 16, 0])
    cube([1, 1, 1.25]);
  translate([192, 16, 0])
    cube([1, 1, 1.25]);
  translate([193, 16, 0])
    cube([1, 1, 1.25]);
  translate([194, 16, 0])
    cube([1, 1, 1.25]);
  translate([195, 16, 0])
    cube([1, 1, 1.25]);
  translate([196, 16, 0])
    cube([1, 1, 1.25]);
  translate([197, 16, 0])
    cube([1, 1, 1.25]);
  translate([198, 16, 0])
    cube([1, 1, 1.25]);
  translate([199, 16, 0])
    cube([1, 1, 1.25]);
  translate([200, 16, 0])
    cube([1, 1, 1.25]);
  translate([201, 16, 0])
    cube([1, 1, 1.25]);
  translate([202, 16, 0])
    cube([1, 1, 1.25]);
  translate([203, 16, 0])
    cube([1, 1, 1.25]);
  translate([204, 16, 0])
    cube([1, 1, 1.25]);
  translate([205, 16, 0])
    cube([1, 1, 1.25]);
  translate([206, 16, 0])
    cube([1, 1, 1.25]);
  translate([207, 16, 0])
    cube([1, 1, 1.25]);
  translate([208, 16, 0])
    cube([1, 1, 1.25]);
  translate([209, 16, 0])
    cube([1, 1, 1.25]);
  translate([210, 16, 0])
    cube([1, 1, 1.25]);
  translate([211, 16, 0])
    cube([1, 1, 1.25]);
  translate([212, 16, 0])
    cube([1, 1, 1.25]);
  translate([213, 16, 0])
    cube([1, 1, 1.25]);
  translate([214, 16, 0])
    cube([1, 1, 1.25]);
  translate([215, 16, 0])
    cube([1, 1, 1.25]);
  translate([216, 16, 0])
    cube([1, 1, 1.25]);
  translate([217, 16, 0])
    cube([1, 1, 1.25]);
  translate([218, 16, 0])
    cube([1, 1, 1.25]);
  translate([219, 16, 0])
    cube([1, 1, 1.25]);
  translate([220, 16, 0])
    cube([1, 1, 1.25]);
  translate([221, 16, 0])
    cube([1, 1, 1.25]);
  translate([222, 16, 0])
    cube([1, 1, 1.25]);
  translate([223, 16, 0])
    cube([1, 1, 1.25]);
  translate([224, 16, 0])
    cube([1, 1, 1.25]);
  translate([225, 16, 0])
    cube([1, 1, 1.25]);
  translate([226, 16, 0])
    cube([1, 1, 1.25]);
  translate([227, 16, 0])
    cube([1, 1, 1.25]);
  translate([228, 16, 0])
    cube([1, 1, 1.25]);
  translate([229, 16, 0])
    cube([1, 1, 1.25]);
  translate([230, 16, 0])
    cube([1, 1, 1.25]);
  translate([231, 16, 0])
    cube([1, 1, 1.25]);
  translate([232, 16, 0])
    cube([1, 1, 1.25]);
  translate([233, 16, 0])
    cube([1, 1, 1.25]);
  translate([234, 16, 0])
    cube([1, 1, 1.25]);
  translate([235, 16, 0])
    cube([1, 1, 1.25]);
  translate([236, 16, 0])
    cube([1, 1, 1.25]);
  translate([237, 16, 0])
    cube([1, 1, 1.25]);
  translate([238, 16, 0])
    cube([1, 1, 1.25]);
  translate([239, 16, 0])
    cube([1, 1, 1.25]);
  translate([240, 16, 0])
    cube([1, 1, 1.29]);
  translate([241, 16, 0])
    cube([1, 1, 1.25]);
  translate([242, 16, 0])
    cube([1, 1, 1.25]);
  translate([243, 16, 0])
    cube([1, 1, 1.25]);
  translate([244, 16, 0])
    cube([1, 1, 1.25]);
  translate([245, 16, 0])
    cube([1, 1, 1.25]);
  translate([246, 16, 0])
    cube([1, 1, 1.25]);
  translate([0, 17, 0])
    cube([1, 1, 1.33]);
  translate([1, 17, 0])
    cube([1, 1, 1.33]);
  translate([2, 17, 0])
    cube([1, 1, 1.33]);
  translate([3, 17, 0])
    cube([1, 1, 1.33]);
  translate([4, 17, 0])
    cube([1, 1, 1.33]);
  translate([5, 17, 0])
    cube([1, 1, 1.33]);
  translate([6, 17, 0])
    cube([1, 1, 1.33]);
  translate([7, 17, 0])
    cube([1, 1, 1.37]);
  translate([8, 17, 0])
    cube([1, 1, 1.33]);
  translate([9, 17, 0])
    cube([1, 1, 1.33]);
  translate([10, 17, 0])
    cube([1, 1, 1.33]);
  translate([11, 17, 0])
    cube([1, 1, 1.33]);
  translate([12, 17, 0])
    cube([1, 1, 1.33]);
  translate([13, 17, 0])
    cube([1, 1, 1.33]);
  translate([14, 17, 0])
    cube([1, 1, 1.33]);
  translate([15, 17, 0])
    cube([1, 1, 1.33]);
  translate([16, 17, 0])
    cube([1, 1, 1.33]);
  translate([17, 17, 0])
    cube([1, 1, 1.33]);
  translate([18, 17, 0])
    cube([1, 1, 1.37]);
  translate([19, 17, 0])
    cube([1, 1, 1.33]);
  translate([20, 17, 0])
    cube([1, 1, 1.33]);
  translate([21, 17, 0])
    cube([1, 1, 1.33]);
  translate([22, 17, 0])
    cube([1, 1, 1.33]);
  translate([23, 17, 0])
    cube([1, 1, 1.33]);
  translate([24, 17, 0])
    cube([1, 1, 1.33]);
  translate([25, 17, 0])
    cube([1, 1, 1.33]);
  translate([26, 17, 0])
    cube([1, 1, 1.33]);
  translate([27, 17, 0])
    cube([1, 1, 1.33]);
  translate([28, 17, 0])
    cube([1, 1, 1.33]);
  translate([29, 17, 0])
    cube([1, 1, 1.33]);
  translate([30, 17, 0])
    cube([1, 1, 1.33]);
  translate([31, 17, 0])
    cube([1, 1, 1.33]);
  translate([32, 17, 0])
    cube([1, 1, 1.33]);
  translate([33, 17, 0])
    cube([1, 1, 1.33]);
  translate([34, 17, 0])
    cube([1, 1, 1.33]);
  translate([35, 17, 0])
    cube([1, 1, 1.33]);
  translate([36, 17, 0])
    cube([1, 1, 1.33]);
  translate([37, 17, 0])
    cube([1, 1, 1.33]);
  translate([38, 17, 0])
    cube([1, 1, 1.33]);
  translate([39, 17, 0])
    cube([1, 1, 1.33]);
  translate([40, 17, 0])
    cube([1, 1, 1.33]);
  translate([41, 17, 0])
    cube([1, 1, 1.33]);
  translate([42, 17, 0])
    cube([1, 1, 1.33]);
  translate([43, 17, 0])
    cube([1, 1, 1.33]);
  translate([44, 17, 0])
    cube([1, 1, 1.33]);
  translate([45, 17, 0])
    cube([1, 1, 1.33]);
  translate([46, 17, 0])
    cube([1, 1, 1.33]);
  translate([47, 17, 0])
    cube([1, 1, 1.33]);
  translate([48, 17, 0])
    cube([1, 1, 1.33]);
  translate([49, 17, 0])
    cube([1, 1, 1.33]);
  translate([50, 17, 0])
    cube([1, 1, 1.33]);
  translate([51, 17, 0])
    cube([1, 1, 1.33]);
  translate([52, 17, 0])
    cube([1, 1, 1.33]);
  translate([53, 17, 0])
    cube([1, 1, 1.33]);
  translate([54, 17, 0])
    cube([1, 1, 1.33]);
  translate([55, 17, 0])
    cube([1, 1, 1.33]);
  translate([56, 17, 0])
    cube([1, 1, 1.25]);
  translate([57, 17, 0])
    cube([1, 1, 1.29]);
  translate([58, 17, 0])
    cube([1, 1, 1.29]);
  translate([59, 17, 0])
    cube([1, 1, 1.33]);
  translate([60, 17, 0])
    cube([1, 1, 1.33]);
  translate([61, 17, 0])
    cube([1, 1, 1.33]);
  translate([62, 17, 0])
    cube([1, 1, 1.33]);
  translate([63, 17, 0])
    cube([1, 1, 1.33]);
  translate([64, 17, 0])
    cube([1, 1, 1.33]);
  translate([65, 17, 0])
    cube([1, 1, 1.29]);
  translate([66, 17, 0])
    cube([1, 1, 1.29]);
  translate([67, 17, 0])
    cube([1, 1, 1.29]);
  translate([68, 17, 0])
    cube([1, 1, 1.29]);
  translate([69, 17, 0])
    cube([1, 1, 1.29]);
  translate([70, 17, 0])
    cube([1, 1, 1.33]);
  translate([71, 17, 0])
    cube([1, 1, 1.37]);
  translate([72, 17, 0])
    cube([1, 1, 1.29]);
  translate([73, 17, 0])
    cube([1, 1, 1.29]);
  translate([74, 17, 0])
    cube([1, 1, 1.29]);
  translate([75, 17, 0])
    cube([1, 1, 1.29]);
  translate([76, 17, 0])
    cube([1, 1, 1.33]);
  translate([77, 17, 0])
    cube([1, 1, 1.33]);
  translate([78, 17, 0])
    cube([1, 1, 1.25]);
  translate([79, 17, 0])
    cube([1, 1, 1.22]);
  translate([80, 17, 0])
    cube([1, 1, 1.29]);
  translate([81, 17, 0])
    cube([1, 1, 1.29]);
  translate([82, 17, 0])
    cube([1, 1, 1.29]);
  translate([83, 17, 0])
    cube([1, 1, 1.29]);
  translate([84, 17, 0])
    cube([1, 1, 1.06]);
  translate([85, 17, 0])
    cube([1, 1, 2.35]);
  translate([86, 17, 0])
    cube([1, 1, 1.73]);
  translate([87, 17, 0])
    cube([1, 1, 1.49]);
  translate([88, 17, 0])
    cube([1, 1, 1.18]);
  translate([89, 17, 0])
    cube([1, 1, 1.41]);
  translate([90, 17, 0])
    cube([1, 1, 1.45]);
  translate([91, 17, 0])
    cube([1, 1, 1.37]);
  translate([92, 17, 0])
    cube([1, 1, 1.37]);
  translate([93, 17, 0])
    cube([1, 1, 1.37]);
  translate([94, 17, 0])
    cube([1, 1, 1.29]);
  translate([95, 17, 0])
    cube([1, 1, 1.22]);
  translate([96, 17, 0])
    cube([1, 1, 1.37]);
  translate([97, 17, 0])
    cube([1, 1, 1.45]);
  translate([98, 17, 0])
    cube([1, 1, 1.53]);
  translate([99, 17, 0])
    cube([1, 1, 1.53]);
  translate([100, 17, 0])
    cube([1, 1, 1.61]);
  translate([101, 17, 0])
    cube([1, 1, 1.76]);
  translate([102, 17, 0])
    cube([1, 1, 1.73]);
  translate([103, 17, 0])
    cube([1, 1, 1.84]);
  translate([104, 17, 0])
    cube([1, 1, 1.80]);
  translate([105, 17, 0])
    cube([1, 1, 2.63]);
  translate([106, 17, 0])
    cube([1, 1, 2.43]);
  translate([107, 17, 0])
    cube([1, 1, 1.92]);
  translate([108, 17, 0])
    cube([1, 1, 1.29]);
  translate([109, 17, 0])
    cube([1, 1, 1.45]);
  translate([110, 17, 0])
    cube([1, 1, 1.88]);
  translate([111, 17, 0])
    cube([1, 1, 1.22]);
  translate([112, 17, 0])
    cube([1, 1, 3.25]);
  translate([113, 17, 0])
    cube([1, 1, 1.92]);
  translate([114, 17, 0])
    cube([1, 1, 1.45]);
  translate([115, 17, 0])
    cube([1, 1, 1.25]);
  translate([116, 17, 0])
    cube([1, 1, 1.25]);
  translate([117, 17, 0])
    cube([1, 1, 1.25]);
  translate([118, 17, 0])
    cube([1, 1, 1.25]);
  translate([119, 17, 0])
    cube([1, 1, 1.25]);
  translate([120, 17, 0])
    cube([1, 1, 1.25]);
  translate([121, 17, 0])
    cube([1, 1, 1.25]);
  translate([122, 17, 0])
    cube([1, 1, 1.25]);
  translate([123, 17, 0])
    cube([1, 1, 1.25]);
  translate([124, 17, 0])
    cube([1, 1, 1.25]);
  translate([125, 17, 0])
    cube([1, 1, 1.25]);
  translate([126, 17, 0])
    cube([1, 1, 1.25]);
  translate([127, 17, 0])
    cube([1, 1, 1.25]);
  translate([128, 17, 0])
    cube([1, 1, 1.25]);
  translate([129, 17, 0])
    cube([1, 1, 1.25]);
  translate([130, 17, 0])
    cube([1, 1, 1.25]);
  translate([131, 17, 0])
    cube([1, 1, 1.25]);
  translate([132, 17, 0])
    cube([1, 1, 1.25]);
  translate([133, 17, 0])
    cube([1, 1, 1.25]);
  translate([134, 17, 0])
    cube([1, 1, 1.25]);
  translate([135, 17, 0])
    cube([1, 1, 1.25]);
  translate([136, 17, 0])
    cube([1, 1, 1.25]);
  translate([137, 17, 0])
    cube([1, 1, 1.25]);
  translate([138, 17, 0])
    cube([1, 1, 1.25]);
  translate([139, 17, 0])
    cube([1, 1, 1.25]);
  translate([140, 17, 0])
    cube([1, 1, 1.25]);
  translate([141, 17, 0])
    cube([1, 1, 1.25]);
  translate([142, 17, 0])
    cube([1, 1, 1.25]);
  translate([143, 17, 0])
    cube([1, 1, 1.25]);
  translate([144, 17, 0])
    cube([1, 1, 1.25]);
  translate([145, 17, 0])
    cube([1, 1, 1.25]);
  translate([146, 17, 0])
    cube([1, 1, 1.25]);
  translate([147, 17, 0])
    cube([1, 1, 1.25]);
  translate([148, 17, 0])
    cube([1, 1, 1.25]);
  translate([149, 17, 0])
    cube([1, 1, 1.25]);
  translate([150, 17, 0])
    cube([1, 1, 1.25]);
  translate([151, 17, 0])
    cube([1, 1, 1.25]);
  translate([152, 17, 0])
    cube([1, 1, 1.25]);
  translate([153, 17, 0])
    cube([1, 1, 1.25]);
  translate([154, 17, 0])
    cube([1, 1, 1.25]);
  translate([155, 17, 0])
    cube([1, 1, 1.25]);
  translate([156, 17, 0])
    cube([1, 1, 1.25]);
  translate([157, 17, 0])
    cube([1, 1, 1.25]);
  translate([158, 17, 0])
    cube([1, 1, 1.25]);
  translate([159, 17, 0])
    cube([1, 1, 1.25]);
  translate([160, 17, 0])
    cube([1, 1, 1.25]);
  translate([161, 17, 0])
    cube([1, 1, 1.25]);
  translate([162, 17, 0])
    cube([1, 1, 1.25]);
  translate([163, 17, 0])
    cube([1, 1, 1.25]);
  translate([164, 17, 0])
    cube([1, 1, 1.25]);
  translate([165, 17, 0])
    cube([1, 1, 1.25]);
  translate([166, 17, 0])
    cube([1, 1, 1.25]);
  translate([167, 17, 0])
    cube([1, 1, 1.25]);
  translate([168, 17, 0])
    cube([1, 1, 1.25]);
  translate([169, 17, 0])
    cube([1, 1, 1.25]);
  translate([170, 17, 0])
    cube([1, 1, 1.25]);
  translate([171, 17, 0])
    cube([1, 1, 1.25]);
  translate([172, 17, 0])
    cube([1, 1, 1.25]);
  translate([173, 17, 0])
    cube([1, 1, 1.25]);
  translate([174, 17, 0])
    cube([1, 1, 1.25]);
  translate([175, 17, 0])
    cube([1, 1, 1.25]);
  translate([176, 17, 0])
    cube([1, 1, 1.25]);
  translate([177, 17, 0])
    cube([1, 1, 1.25]);
  translate([178, 17, 0])
    cube([1, 1, 1.25]);
  translate([179, 17, 0])
    cube([1, 1, 1.25]);
  translate([180, 17, 0])
    cube([1, 1, 1.25]);
  translate([181, 17, 0])
    cube([1, 1, 1.25]);
  translate([182, 17, 0])
    cube([1, 1, 1.25]);
  translate([183, 17, 0])
    cube([1, 1, 1.25]);
  translate([184, 17, 0])
    cube([1, 1, 1.25]);
  translate([185, 17, 0])
    cube([1, 1, 1.25]);
  translate([186, 17, 0])
    cube([1, 1, 1.25]);
  translate([187, 17, 0])
    cube([1, 1, 1.25]);
  translate([188, 17, 0])
    cube([1, 1, 1.25]);
  translate([189, 17, 0])
    cube([1, 1, 1.25]);
  translate([190, 17, 0])
    cube([1, 1, 1.25]);
  translate([191, 17, 0])
    cube([1, 1, 1.25]);
  translate([192, 17, 0])
    cube([1, 1, 1.25]);
  translate([193, 17, 0])
    cube([1, 1, 1.25]);
  translate([194, 17, 0])
    cube([1, 1, 1.25]);
  translate([195, 17, 0])
    cube([1, 1, 1.25]);
  translate([196, 17, 0])
    cube([1, 1, 1.25]);
  translate([197, 17, 0])
    cube([1, 1, 1.25]);
  translate([198, 17, 0])
    cube([1, 1, 1.25]);
  translate([199, 17, 0])
    cube([1, 1, 1.25]);
  translate([200, 17, 0])
    cube([1, 1, 1.25]);
  translate([201, 17, 0])
    cube([1, 1, 1.25]);
  translate([202, 17, 0])
    cube([1, 1, 1.25]);
  translate([203, 17, 0])
    cube([1, 1, 1.25]);
  translate([204, 17, 0])
    cube([1, 1, 1.25]);
  translate([205, 17, 0])
    cube([1, 1, 1.25]);
  translate([206, 17, 0])
    cube([1, 1, 1.25]);
  translate([207, 17, 0])
    cube([1, 1, 1.25]);
  translate([208, 17, 0])
    cube([1, 1, 1.25]);
  translate([209, 17, 0])
    cube([1, 1, 1.25]);
  translate([210, 17, 0])
    cube([1, 1, 1.25]);
  translate([211, 17, 0])
    cube([1, 1, 1.25]);
  translate([212, 17, 0])
    cube([1, 1, 1.25]);
  translate([213, 17, 0])
    cube([1, 1, 1.25]);
  translate([214, 17, 0])
    cube([1, 1, 1.25]);
  translate([215, 17, 0])
    cube([1, 1, 1.25]);
  translate([216, 17, 0])
    cube([1, 1, 1.25]);
  translate([217, 17, 0])
    cube([1, 1, 1.25]);
  translate([218, 17, 0])
    cube([1, 1, 1.25]);
  translate([219, 17, 0])
    cube([1, 1, 1.25]);
  translate([220, 17, 0])
    cube([1, 1, 1.25]);
  translate([221, 17, 0])
    cube([1, 1, 1.25]);
  translate([222, 17, 0])
    cube([1, 1, 1.25]);
  translate([223, 17, 0])
    cube([1, 1, 1.25]);
  translate([224, 17, 0])
    cube([1, 1, 1.25]);
  translate([225, 17, 0])
    cube([1, 1, 1.25]);
  translate([226, 17, 0])
    cube([1, 1, 1.25]);
  translate([227, 17, 0])
    cube([1, 1, 1.25]);
  translate([228, 17, 0])
    cube([1, 1, 1.25]);
  translate([229, 17, 0])
    cube([1, 1, 1.25]);
  translate([230, 17, 0])
    cube([1, 1, 1.25]);
  translate([231, 17, 0])
    cube([1, 1, 1.25]);
  translate([232, 17, 0])
    cube([1, 1, 1.25]);
  translate([233, 17, 0])
    cube([1, 1, 1.25]);
  translate([234, 17, 0])
    cube([1, 1, 1.25]);
  translate([235, 17, 0])
    cube([1, 1, 1.25]);
  translate([236, 17, 0])
    cube([1, 1, 1.25]);
  translate([237, 17, 0])
    cube([1, 1, 1.25]);
  translate([238, 17, 0])
    cube([1, 1, 1.25]);
  translate([239, 17, 0])
    cube([1, 1, 1.25]);
  translate([240, 17, 0])
    cube([1, 1, 1.29]);
  translate([241, 17, 0])
    cube([1, 1, 1.25]);
  translate([242, 17, 0])
    cube([1, 1, 1.25]);
  translate([243, 17, 0])
    cube([1, 1, 1.25]);
  translate([244, 17, 0])
    cube([1, 1, 1.25]);
  translate([245, 17, 0])
    cube([1, 1, 1.25]);
  translate([246, 17, 0])
    cube([1, 1, 1.25]);
  translate([0, 18, 0])
    cube([1, 1, 1.33]);
  translate([1, 18, 0])
    cube([1, 1, 1.33]);
  translate([2, 18, 0])
    cube([1, 1, 1.41]);
  translate([3, 18, 0])
    cube([1, 1, 1.37]);
  translate([4, 18, 0])
    cube([1, 1, 1.37]);
  translate([5, 18, 0])
    cube([1, 1, 1.33]);
  translate([6, 18, 0])
    cube([1, 1, 1.29]);
  translate([7, 18, 0])
    cube([1, 1, 1.41]);
  translate([8, 18, 0])
    cube([1, 1, 1.33]);
  translate([9, 18, 0])
    cube([1, 1, 1.33]);
  translate([10, 18, 0])
    cube([1, 1, 1.33]);
  translate([11, 18, 0])
    cube([1, 1, 1.33]);
  translate([12, 18, 0])
    cube([1, 1, 1.33]);
  translate([13, 18, 0])
    cube([1, 1, 1.33]);
  translate([14, 18, 0])
    cube([1, 1, 1.37]);
  translate([15, 18, 0])
    cube([1, 1, 1.33]);
  translate([16, 18, 0])
    cube([1, 1, 1.33]);
  translate([17, 18, 0])
    cube([1, 1, 1.33]);
  translate([18, 18, 0])
    cube([1, 1, 1.33]);
  translate([19, 18, 0])
    cube([1, 1, 1.33]);
  translate([20, 18, 0])
    cube([1, 1, 1.33]);
  translate([21, 18, 0])
    cube([1, 1, 1.37]);
  translate([22, 18, 0])
    cube([1, 1, 1.33]);
  translate([23, 18, 0])
    cube([1, 1, 1.33]);
  translate([24, 18, 0])
    cube([1, 1, 1.33]);
  translate([25, 18, 0])
    cube([1, 1, 1.33]);
  translate([26, 18, 0])
    cube([1, 1, 1.37]);
  translate([27, 18, 0])
    cube([1, 1, 1.33]);
  translate([28, 18, 0])
    cube([1, 1, 1.37]);
  translate([29, 18, 0])
    cube([1, 1, 1.33]);
  translate([30, 18, 0])
    cube([1, 1, 1.33]);
  translate([31, 18, 0])
    cube([1, 1, 1.33]);
  translate([32, 18, 0])
    cube([1, 1, 1.33]);
  translate([33, 18, 0])
    cube([1, 1, 1.33]);
  translate([34, 18, 0])
    cube([1, 1, 1.33]);
  translate([35, 18, 0])
    cube([1, 1, 1.33]);
  translate([36, 18, 0])
    cube([1, 1, 1.33]);
  translate([37, 18, 0])
    cube([1, 1, 1.33]);
  translate([38, 18, 0])
    cube([1, 1, 1.33]);
  translate([39, 18, 0])
    cube([1, 1, 1.33]);
  translate([40, 18, 0])
    cube([1, 1, 1.33]);
  translate([41, 18, 0])
    cube([1, 1, 1.33]);
  translate([42, 18, 0])
    cube([1, 1, 1.37]);
  translate([43, 18, 0])
    cube([1, 1, 1.33]);
  translate([44, 18, 0])
    cube([1, 1, 1.33]);
  translate([45, 18, 0])
    cube([1, 1, 1.33]);
  translate([46, 18, 0])
    cube([1, 1, 1.33]);
  translate([47, 18, 0])
    cube([1, 1, 1.33]);
  translate([48, 18, 0])
    cube([1, 1, 1.33]);
  translate([49, 18, 0])
    cube([1, 1, 1.33]);
  translate([50, 18, 0])
    cube([1, 1, 1.33]);
  translate([51, 18, 0])
    cube([1, 1, 1.33]);
  translate([52, 18, 0])
    cube([1, 1, 1.33]);
  translate([53, 18, 0])
    cube([1, 1, 1.33]);
  translate([54, 18, 0])
    cube([1, 1, 1.33]);
  translate([55, 18, 0])
    cube([1, 1, 1.33]);
  translate([56, 18, 0])
    cube([1, 1, 1.33]);
  translate([57, 18, 0])
    cube([1, 1, 1.33]);
  translate([58, 18, 0])
    cube([1, 1, 1.33]);
  translate([59, 18, 0])
    cube([1, 1, 1.33]);
  translate([60, 18, 0])
    cube([1, 1, 1.29]);
  translate([61, 18, 0])
    cube([1, 1, 1.33]);
  translate([62, 18, 0])
    cube([1, 1, 1.29]);
  translate([63, 18, 0])
    cube([1, 1, 1.29]);
  translate([64, 18, 0])
    cube([1, 1, 1.33]);
  translate([65, 18, 0])
    cube([1, 1, 1.29]);
  translate([66, 18, 0])
    cube([1, 1, 1.33]);
  translate([67, 18, 0])
    cube([1, 1, 1.33]);
  translate([68, 18, 0])
    cube([1, 1, 1.29]);
  translate([69, 18, 0])
    cube([1, 1, 1.29]);
  translate([70, 18, 0])
    cube([1, 1, 1.29]);
  translate([71, 18, 0])
    cube([1, 1, 1.33]);
  translate([72, 18, 0])
    cube([1, 1, 1.29]);
  translate([73, 18, 0])
    cube([1, 1, 1.29]);
  translate([74, 18, 0])
    cube([1, 1, 1.29]);
  translate([75, 18, 0])
    cube([1, 1, 1.29]);
  translate([76, 18, 0])
    cube([1, 1, 1.29]);
  translate([77, 18, 0])
    cube([1, 1, 1.29]);
  translate([78, 18, 0])
    cube([1, 1, 1.29]);
  translate([79, 18, 0])
    cube([1, 1, 1.29]);
  translate([80, 18, 0])
    cube([1, 1, 1.29]);
  translate([81, 18, 0])
    cube([1, 1, 1.25]);
  translate([82, 18, 0])
    cube([1, 1, 1.33]);
  translate([83, 18, 0])
    cube([1, 1, 0.98]);
  translate([84, 18, 0])
    cube([1, 1, 3.96]);
  translate([85, 18, 0])
    cube([1, 1, 2.27]);
  translate([86, 18, 0])
    cube([1, 1, 1.45]);
  translate([87, 18, 0])
    cube([1, 1, 0.98]);
  translate([88, 18, 0])
    cube([1, 1, 1.29]);
  translate([89, 18, 0])
    cube([1, 1, 1.53]);
  translate([90, 18, 0])
    cube([1, 1, 1.57]);
  translate([91, 18, 0])
    cube([1, 1, 1.45]);
  translate([92, 18, 0])
    cube([1, 1, 1.33]);
  translate([93, 18, 0])
    cube([1, 1, 1.53]);
  translate([94, 18, 0])
    cube([1, 1, 1.45]);
  translate([95, 18, 0])
    cube([1, 1, 1.65]);
  translate([96, 18, 0])
    cube([1, 1, 1.61]);
  translate([97, 18, 0])
    cube([1, 1, 1.53]);
  translate([98, 18, 0])
    cube([1, 1, 1.57]);
  translate([99, 18, 0])
    cube([1, 1, 1.84]);
  translate([100, 18, 0])
    cube([1, 1, 1.61]);
  translate([101, 18, 0])
    cube([1, 1, 1.57]);
  translate([102, 18, 0])
    cube([1, 1, 1.80]);
  translate([103, 18, 0])
    cube([1, 1, 1.92]);
  translate([104, 18, 0])
    cube([1, 1, 1.69]);
  translate([105, 18, 0])
    cube([1, 1, 2.04]);
  translate([106, 18, 0])
    cube([1, 1, 1.80]);
  translate([107, 18, 0])
    cube([1, 1, 2.86]);
  translate([108, 18, 0])
    cube([1, 1, 2.35]);
  translate([109, 18, 0])
    cube([1, 1, 1.37]);
  translate([110, 18, 0])
    cube([1, 1, 2.24]);
  translate([111, 18, 0])
    cube([1, 1, 2.51]);
  translate([112, 18, 0])
    cube([1, 1, 1.73]);
  translate([113, 18, 0])
    cube([1, 1, 2.31]);
  translate([114, 18, 0])
    cube([1, 1, 3.29]);
  translate([115, 18, 0])
    cube([1, 1, 0.75]);
  translate([116, 18, 0])
    cube([1, 1, 1.25]);
  translate([117, 18, 0])
    cube([1, 1, 1.25]);
  translate([118, 18, 0])
    cube([1, 1, 1.25]);
  translate([119, 18, 0])
    cube([1, 1, 1.25]);
  translate([120, 18, 0])
    cube([1, 1, 1.25]);
  translate([121, 18, 0])
    cube([1, 1, 1.25]);
  translate([122, 18, 0])
    cube([1, 1, 1.25]);
  translate([123, 18, 0])
    cube([1, 1, 1.25]);
  translate([124, 18, 0])
    cube([1, 1, 1.25]);
  translate([125, 18, 0])
    cube([1, 1, 1.25]);
  translate([126, 18, 0])
    cube([1, 1, 1.25]);
  translate([127, 18, 0])
    cube([1, 1, 1.25]);
  translate([128, 18, 0])
    cube([1, 1, 1.25]);
  translate([129, 18, 0])
    cube([1, 1, 1.25]);
  translate([130, 18, 0])
    cube([1, 1, 1.25]);
  translate([131, 18, 0])
    cube([1, 1, 1.25]);
  translate([132, 18, 0])
    cube([1, 1, 1.25]);
  translate([133, 18, 0])
    cube([1, 1, 1.25]);
  translate([134, 18, 0])
    cube([1, 1, 1.25]);
  translate([135, 18, 0])
    cube([1, 1, 1.25]);
  translate([136, 18, 0])
    cube([1, 1, 1.25]);
  translate([137, 18, 0])
    cube([1, 1, 1.25]);
  translate([138, 18, 0])
    cube([1, 1, 1.25]);
  translate([139, 18, 0])
    cube([1, 1, 1.25]);
  translate([140, 18, 0])
    cube([1, 1, 1.25]);
  translate([141, 18, 0])
    cube([1, 1, 1.25]);
  translate([142, 18, 0])
    cube([1, 1, 1.25]);
  translate([143, 18, 0])
    cube([1, 1, 1.25]);
  translate([144, 18, 0])
    cube([1, 1, 1.25]);
  translate([145, 18, 0])
    cube([1, 1, 1.25]);
  translate([146, 18, 0])
    cube([1, 1, 1.25]);
  translate([147, 18, 0])
    cube([1, 1, 1.25]);
  translate([148, 18, 0])
    cube([1, 1, 1.25]);
  translate([149, 18, 0])
    cube([1, 1, 1.25]);
  translate([150, 18, 0])
    cube([1, 1, 1.25]);
  translate([151, 18, 0])
    cube([1, 1, 1.25]);
  translate([152, 18, 0])
    cube([1, 1, 1.25]);
  translate([153, 18, 0])
    cube([1, 1, 1.25]);
  translate([154, 18, 0])
    cube([1, 1, 1.25]);
  translate([155, 18, 0])
    cube([1, 1, 1.25]);
  translate([156, 18, 0])
    cube([1, 1, 1.25]);
  translate([157, 18, 0])
    cube([1, 1, 1.25]);
  translate([158, 18, 0])
    cube([1, 1, 1.25]);
  translate([159, 18, 0])
    cube([1, 1, 1.25]);
  translate([160, 18, 0])
    cube([1, 1, 1.25]);
  translate([161, 18, 0])
    cube([1, 1, 1.25]);
  translate([162, 18, 0])
    cube([1, 1, 1.25]);
  translate([163, 18, 0])
    cube([1, 1, 1.25]);
  translate([164, 18, 0])
    cube([1, 1, 1.25]);
  translate([165, 18, 0])
    cube([1, 1, 1.25]);
  translate([166, 18, 0])
    cube([1, 1, 1.25]);
  translate([167, 18, 0])
    cube([1, 1, 1.25]);
  translate([168, 18, 0])
    cube([1, 1, 1.25]);
  translate([169, 18, 0])
    cube([1, 1, 1.25]);
  translate([170, 18, 0])
    cube([1, 1, 1.25]);
  translate([171, 18, 0])
    cube([1, 1, 1.25]);
  translate([172, 18, 0])
    cube([1, 1, 1.25]);
  translate([173, 18, 0])
    cube([1, 1, 1.25]);
  translate([174, 18, 0])
    cube([1, 1, 1.25]);
  translate([175, 18, 0])
    cube([1, 1, 1.25]);
  translate([176, 18, 0])
    cube([1, 1, 1.25]);
  translate([177, 18, 0])
    cube([1, 1, 1.25]);
  translate([178, 18, 0])
    cube([1, 1, 1.25]);
  translate([179, 18, 0])
    cube([1, 1, 1.25]);
  translate([180, 18, 0])
    cube([1, 1, 1.25]);
  translate([181, 18, 0])
    cube([1, 1, 1.25]);
  translate([182, 18, 0])
    cube([1, 1, 1.25]);
  translate([183, 18, 0])
    cube([1, 1, 1.25]);
  translate([184, 18, 0])
    cube([1, 1, 1.25]);
  translate([185, 18, 0])
    cube([1, 1, 1.25]);
  translate([186, 18, 0])
    cube([1, 1, 1.25]);
  translate([187, 18, 0])
    cube([1, 1, 1.25]);
  translate([188, 18, 0])
    cube([1, 1, 1.25]);
  translate([189, 18, 0])
    cube([1, 1, 1.25]);
  translate([190, 18, 0])
    cube([1, 1, 1.25]);
  translate([191, 18, 0])
    cube([1, 1, 1.25]);
  translate([192, 18, 0])
    cube([1, 1, 1.25]);
  translate([193, 18, 0])
    cube([1, 1, 1.25]);
  translate([194, 18, 0])
    cube([1, 1, 1.25]);
  translate([195, 18, 0])
    cube([1, 1, 1.25]);
  translate([196, 18, 0])
    cube([1, 1, 1.25]);
  translate([197, 18, 0])
    cube([1, 1, 1.25]);
  translate([198, 18, 0])
    cube([1, 1, 1.25]);
  translate([199, 18, 0])
    cube([1, 1, 1.25]);
  translate([200, 18, 0])
    cube([1, 1, 1.25]);
  translate([201, 18, 0])
    cube([1, 1, 1.25]);
  translate([202, 18, 0])
    cube([1, 1, 1.25]);
  translate([203, 18, 0])
    cube([1, 1, 1.25]);
  translate([204, 18, 0])
    cube([1, 1, 1.25]);
  translate([205, 18, 0])
    cube([1, 1, 1.25]);
  translate([206, 18, 0])
    cube([1, 1, 1.25]);
  translate([207, 18, 0])
    cube([1, 1, 1.25]);
  translate([208, 18, 0])
    cube([1, 1, 1.25]);
  translate([209, 18, 0])
    cube([1, 1, 1.25]);
  translate([210, 18, 0])
    cube([1, 1, 1.25]);
  translate([211, 18, 0])
    cube([1, 1, 1.25]);
  translate([212, 18, 0])
    cube([1, 1, 1.25]);
  translate([213, 18, 0])
    cube([1, 1, 1.25]);
  translate([214, 18, 0])
    cube([1, 1, 1.25]);
  translate([215, 18, 0])
    cube([1, 1, 1.25]);
  translate([216, 18, 0])
    cube([1, 1, 1.25]);
  translate([217, 18, 0])
    cube([1, 1, 1.25]);
  translate([218, 18, 0])
    cube([1, 1, 1.25]);
  translate([219, 18, 0])
    cube([1, 1, 1.25]);
  translate([220, 18, 0])
    cube([1, 1, 1.25]);
  translate([221, 18, 0])
    cube([1, 1, 1.25]);
  translate([222, 18, 0])
    cube([1, 1, 1.25]);
  translate([223, 18, 0])
    cube([1, 1, 1.25]);
  translate([224, 18, 0])
    cube([1, 1, 1.25]);
  translate([225, 18, 0])
    cube([1, 1, 1.25]);
  translate([226, 18, 0])
    cube([1, 1, 1.25]);
  translate([227, 18, 0])
    cube([1, 1, 1.25]);
  translate([228, 18, 0])
    cube([1, 1, 1.25]);
  translate([229, 18, 0])
    cube([1, 1, 1.25]);
  translate([230, 18, 0])
    cube([1, 1, 1.25]);
  translate([231, 18, 0])
    cube([1, 1, 1.25]);
  translate([232, 18, 0])
    cube([1, 1, 1.25]);
  translate([233, 18, 0])
    cube([1, 1, 1.25]);
  translate([234, 18, 0])
    cube([1, 1, 1.25]);
  translate([235, 18, 0])
    cube([1, 1, 1.25]);
  translate([236, 18, 0])
    cube([1, 1, 1.25]);
  translate([237, 18, 0])
    cube([1, 1, 1.25]);
  translate([238, 18, 0])
    cube([1, 1, 1.25]);
  translate([239, 18, 0])
    cube([1, 1, 1.25]);
  translate([240, 18, 0])
    cube([1, 1, 1.25]);
  translate([241, 18, 0])
    cube([1, 1, 1.25]);
  translate([242, 18, 0])
    cube([1, 1, 1.25]);
  translate([243, 18, 0])
    cube([1, 1, 1.25]);
  translate([244, 18, 0])
    cube([1, 1, 1.25]);
  translate([245, 18, 0])
    cube([1, 1, 1.25]);
  translate([246, 18, 0])
    cube([1, 1, 1.25]);
  translate([0, 19, 0])
    cube([1, 1, 1.33]);
  translate([1, 19, 0])
    cube([1, 1, 1.33]);
  translate([2, 19, 0])
    cube([1, 1, 1.41]);
  translate([3, 19, 0])
    cube([1, 1, 1.37]);
  translate([4, 19, 0])
    cube([1, 1, 1.29]);
  translate([5, 19, 0])
    cube([1, 1, 1.37]);
  translate([6, 19, 0])
    cube([1, 1, 1.37]);
  translate([7, 19, 0])
    cube([1, 1, 1.33]);
  translate([8, 19, 0])
    cube([1, 1, 1.33]);
  translate([9, 19, 0])
    cube([1, 1, 1.33]);
  translate([10, 19, 0])
    cube([1, 1, 1.33]);
  translate([11, 19, 0])
    cube([1, 1, 1.33]);
  translate([12, 19, 0])
    cube([1, 1, 1.33]);
  translate([13, 19, 0])
    cube([1, 1, 1.33]);
  translate([14, 19, 0])
    cube([1, 1, 1.37]);
  translate([15, 19, 0])
    cube([1, 1, 1.33]);
  translate([16, 19, 0])
    cube([1, 1, 1.33]);
  translate([17, 19, 0])
    cube([1, 1, 1.33]);
  translate([18, 19, 0])
    cube([1, 1, 1.33]);
  translate([19, 19, 0])
    cube([1, 1, 1.33]);
  translate([20, 19, 0])
    cube([1, 1, 1.33]);
  translate([21, 19, 0])
    cube([1, 1, 1.37]);
  translate([22, 19, 0])
    cube([1, 1, 1.33]);
  translate([23, 19, 0])
    cube([1, 1, 1.33]);
  translate([24, 19, 0])
    cube([1, 1, 1.33]);
  translate([25, 19, 0])
    cube([1, 1, 1.33]);
  translate([26, 19, 0])
    cube([1, 1, 1.37]);
  translate([27, 19, 0])
    cube([1, 1, 1.33]);
  translate([28, 19, 0])
    cube([1, 1, 1.29]);
  translate([29, 19, 0])
    cube([1, 1, 1.37]);
  translate([30, 19, 0])
    cube([1, 1, 1.33]);
  translate([31, 19, 0])
    cube([1, 1, 1.33]);
  translate([32, 19, 0])
    cube([1, 1, 1.33]);
  translate([33, 19, 0])
    cube([1, 1, 1.33]);
  translate([34, 19, 0])
    cube([1, 1, 1.33]);
  translate([35, 19, 0])
    cube([1, 1, 1.33]);
  translate([36, 19, 0])
    cube([1, 1, 1.33]);
  translate([37, 19, 0])
    cube([1, 1, 1.33]);
  translate([38, 19, 0])
    cube([1, 1, 1.33]);
  translate([39, 19, 0])
    cube([1, 1, 1.33]);
  translate([40, 19, 0])
    cube([1, 1, 1.33]);
  translate([41, 19, 0])
    cube([1, 1, 1.37]);
  translate([42, 19, 0])
    cube([1, 1, 1.29]);
  translate([43, 19, 0])
    cube([1, 1, 1.33]);
  translate([44, 19, 0])
    cube([1, 1, 1.33]);
  translate([45, 19, 0])
    cube([1, 1, 1.33]);
  translate([46, 19, 0])
    cube([1, 1, 1.33]);
  translate([47, 19, 0])
    cube([1, 1, 1.33]);
  translate([48, 19, 0])
    cube([1, 1, 1.33]);
  translate([49, 19, 0])
    cube([1, 1, 1.33]);
  translate([50, 19, 0])
    cube([1, 1, 1.33]);
  translate([51, 19, 0])
    cube([1, 1, 1.33]);
  translate([52, 19, 0])
    cube([1, 1, 1.33]);
  translate([53, 19, 0])
    cube([1, 1, 1.33]);
  translate([54, 19, 0])
    cube([1, 1, 1.33]);
  translate([55, 19, 0])
    cube([1, 1, 1.33]);
  translate([56, 19, 0])
    cube([1, 1, 1.33]);
  translate([57, 19, 0])
    cube([1, 1, 1.33]);
  translate([58, 19, 0])
    cube([1, 1, 1.33]);
  translate([59, 19, 0])
    cube([1, 1, 1.33]);
  translate([60, 19, 0])
    cube([1, 1, 1.29]);
  translate([61, 19, 0])
    cube([1, 1, 1.33]);
  translate([62, 19, 0])
    cube([1, 1, 1.33]);
  translate([63, 19, 0])
    cube([1, 1, 1.33]);
  translate([64, 19, 0])
    cube([1, 1, 1.33]);
  translate([65, 19, 0])
    cube([1, 1, 1.33]);
  translate([66, 19, 0])
    cube([1, 1, 1.37]);
  translate([67, 19, 0])
    cube([1, 1, 1.33]);
  translate([68, 19, 0])
    cube([1, 1, 1.33]);
  translate([69, 19, 0])
    cube([1, 1, 1.33]);
  translate([70, 19, 0])
    cube([1, 1, 1.33]);
  translate([71, 19, 0])
    cube([1, 1, 1.25]);
  translate([72, 19, 0])
    cube([1, 1, 1.25]);
  translate([73, 19, 0])
    cube([1, 1, 1.29]);
  translate([74, 19, 0])
    cube([1, 1, 1.29]);
  translate([75, 19, 0])
    cube([1, 1, 1.29]);
  translate([76, 19, 0])
    cube([1, 1, 1.29]);
  translate([77, 19, 0])
    cube([1, 1, 1.29]);
  translate([78, 19, 0])
    cube([1, 1, 1.29]);
  translate([79, 19, 0])
    cube([1, 1, 1.29]);
  translate([80, 19, 0])
    cube([1, 1, 1.29]);
  translate([81, 19, 0])
    cube([1, 1, 1.25]);
  translate([82, 19, 0])
    cube([1, 1, 1.45]);
  translate([83, 19, 0])
    cube([1, 1, 3.92]);
  translate([84, 19, 0])
    cube([1, 1, 3.10]);
  translate([85, 19, 0])
    cube([1, 1, 1.22]);
  translate([86, 19, 0])
    cube([1, 1, 1.88]);
  translate([87, 19, 0])
    cube([1, 1, 1.92]);
  translate([88, 19, 0])
    cube([1, 1, 1.84]);
  translate([89, 19, 0])
    cube([1, 1, 1.45]);
  translate([90, 19, 0])
    cube([1, 1, 1.45]);
  translate([91, 19, 0])
    cube([1, 1, 1.45]);
  translate([92, 19, 0])
    cube([1, 1, 1.45]);
  translate([93, 19, 0])
    cube([1, 1, 1.45]);
  translate([94, 19, 0])
    cube([1, 1, 1.37]);
  translate([95, 19, 0])
    cube([1, 1, 1.45]);
  translate([96, 19, 0])
    cube([1, 1, 1.53]);
  translate([97, 19, 0])
    cube([1, 1, 1.49]);
  translate([98, 19, 0])
    cube([1, 1, 1.53]);
  translate([99, 19, 0])
    cube([1, 1, 1.57]);
  translate([100, 19, 0])
    cube([1, 1, 1.61]);
  translate([101, 19, 0])
    cube([1, 1, 1.73]);
  translate([102, 19, 0])
    cube([1, 1, 1.61]);
  translate([103, 19, 0])
    cube([1, 1, 2.12]);
  translate([104, 19, 0])
    cube([1, 1, 2.24]);
  translate([105, 19, 0])
    cube([1, 1, 1.57]);
  translate([106, 19, 0])
    cube([1, 1, 2.24]);
  translate([107, 19, 0])
    cube([1, 1, 2.20]);
  translate([108, 19, 0])
    cube([1, 1, 1.65]);
  translate([109, 19, 0])
    cube([1, 1, 2.04]);
  translate([110, 19, 0])
    cube([1, 1, 2.35]);
  translate([111, 19, 0])
    cube([1, 1, 1.96]);
  translate([112, 19, 0])
    cube([1, 1, 1.84]);
  translate([113, 19, 0])
    cube([1, 1, 3.29]);
  translate([114, 19, 0])
    cube([1, 1, 2.04]);
  translate([115, 19, 0])
    cube([1, 1, 4.39]);
  translate([116, 19, 0])
    cube([1, 1, 1.25]);
  translate([117, 19, 0])
    cube([1, 1, 1.25]);
  translate([118, 19, 0])
    cube([1, 1, 1.25]);
  translate([119, 19, 0])
    cube([1, 1, 1.25]);
  translate([120, 19, 0])
    cube([1, 1, 1.25]);
  translate([121, 19, 0])
    cube([1, 1, 1.25]);
  translate([122, 19, 0])
    cube([1, 1, 1.25]);
  translate([123, 19, 0])
    cube([1, 1, 1.25]);
  translate([124, 19, 0])
    cube([1, 1, 1.25]);
  translate([125, 19, 0])
    cube([1, 1, 1.25]);
  translate([126, 19, 0])
    cube([1, 1, 1.25]);
  translate([127, 19, 0])
    cube([1, 1, 1.25]);
  translate([128, 19, 0])
    cube([1, 1, 1.25]);
  translate([129, 19, 0])
    cube([1, 1, 1.25]);
  translate([130, 19, 0])
    cube([1, 1, 1.25]);
  translate([131, 19, 0])
    cube([1, 1, 1.25]);
  translate([132, 19, 0])
    cube([1, 1, 1.25]);
  translate([133, 19, 0])
    cube([1, 1, 1.25]);
  translate([134, 19, 0])
    cube([1, 1, 1.25]);
  translate([135, 19, 0])
    cube([1, 1, 1.25]);
  translate([136, 19, 0])
    cube([1, 1, 1.25]);
  translate([137, 19, 0])
    cube([1, 1, 1.25]);
  translate([138, 19, 0])
    cube([1, 1, 1.25]);
  translate([139, 19, 0])
    cube([1, 1, 1.25]);
  translate([140, 19, 0])
    cube([1, 1, 1.25]);
  translate([141, 19, 0])
    cube([1, 1, 1.25]);
  translate([142, 19, 0])
    cube([1, 1, 1.25]);
  translate([143, 19, 0])
    cube([1, 1, 1.25]);
  translate([144, 19, 0])
    cube([1, 1, 1.25]);
  translate([145, 19, 0])
    cube([1, 1, 1.25]);
  translate([146, 19, 0])
    cube([1, 1, 1.25]);
  translate([147, 19, 0])
    cube([1, 1, 1.25]);
  translate([148, 19, 0])
    cube([1, 1, 1.25]);
  translate([149, 19, 0])
    cube([1, 1, 1.25]);
  translate([150, 19, 0])
    cube([1, 1, 1.25]);
  translate([151, 19, 0])
    cube([1, 1, 1.25]);
  translate([152, 19, 0])
    cube([1, 1, 1.25]);
  translate([153, 19, 0])
    cube([1, 1, 1.25]);
  translate([154, 19, 0])
    cube([1, 1, 1.25]);
  translate([155, 19, 0])
    cube([1, 1, 1.25]);
  translate([156, 19, 0])
    cube([1, 1, 1.25]);
  translate([157, 19, 0])
    cube([1, 1, 1.25]);
  translate([158, 19, 0])
    cube([1, 1, 1.25]);
  translate([159, 19, 0])
    cube([1, 1, 1.25]);
  translate([160, 19, 0])
    cube([1, 1, 1.25]);
  translate([161, 19, 0])
    cube([1, 1, 1.25]);
  translate([162, 19, 0])
    cube([1, 1, 1.25]);
  translate([163, 19, 0])
    cube([1, 1, 1.25]);
  translate([164, 19, 0])
    cube([1, 1, 1.25]);
  translate([165, 19, 0])
    cube([1, 1, 1.25]);
  translate([166, 19, 0])
    cube([1, 1, 1.25]);
  translate([167, 19, 0])
    cube([1, 1, 1.25]);
  translate([168, 19, 0])
    cube([1, 1, 1.25]);
  translate([169, 19, 0])
    cube([1, 1, 1.25]);
  translate([170, 19, 0])
    cube([1, 1, 1.25]);
  translate([171, 19, 0])
    cube([1, 1, 1.25]);
  translate([172, 19, 0])
    cube([1, 1, 1.25]);
  translate([173, 19, 0])
    cube([1, 1, 1.25]);
  translate([174, 19, 0])
    cube([1, 1, 1.25]);
  translate([175, 19, 0])
    cube([1, 1, 1.25]);
  translate([176, 19, 0])
    cube([1, 1, 1.25]);
  translate([177, 19, 0])
    cube([1, 1, 1.25]);
  translate([178, 19, 0])
    cube([1, 1, 1.25]);
  translate([179, 19, 0])
    cube([1, 1, 1.25]);
  translate([180, 19, 0])
    cube([1, 1, 1.25]);
  translate([181, 19, 0])
    cube([1, 1, 1.25]);
  translate([182, 19, 0])
    cube([1, 1, 1.25]);
  translate([183, 19, 0])
    cube([1, 1, 1.25]);
  translate([184, 19, 0])
    cube([1, 1, 1.25]);
  translate([185, 19, 0])
    cube([1, 1, 1.25]);
  translate([186, 19, 0])
    cube([1, 1, 1.25]);
  translate([187, 19, 0])
    cube([1, 1, 1.25]);
  translate([188, 19, 0])
    cube([1, 1, 1.25]);
  translate([189, 19, 0])
    cube([1, 1, 1.25]);
  translate([190, 19, 0])
    cube([1, 1, 1.25]);
  translate([191, 19, 0])
    cube([1, 1, 1.25]);
  translate([192, 19, 0])
    cube([1, 1, 1.25]);
  translate([193, 19, 0])
    cube([1, 1, 1.25]);
  translate([194, 19, 0])
    cube([1, 1, 1.25]);
  translate([195, 19, 0])
    cube([1, 1, 1.25]);
  translate([196, 19, 0])
    cube([1, 1, 1.25]);
  translate([197, 19, 0])
    cube([1, 1, 1.25]);
  translate([198, 19, 0])
    cube([1, 1, 1.25]);
  translate([199, 19, 0])
    cube([1, 1, 1.25]);
  translate([200, 19, 0])
    cube([1, 1, 1.25]);
  translate([201, 19, 0])
    cube([1, 1, 1.25]);
  translate([202, 19, 0])
    cube([1, 1, 1.25]);
  translate([203, 19, 0])
    cube([1, 1, 1.25]);
  translate([204, 19, 0])
    cube([1, 1, 1.25]);
  translate([205, 19, 0])
    cube([1, 1, 1.25]);
  translate([206, 19, 0])
    cube([1, 1, 1.25]);
  translate([207, 19, 0])
    cube([1, 1, 1.25]);
  translate([208, 19, 0])
    cube([1, 1, 1.25]);
  translate([209, 19, 0])
    cube([1, 1, 1.25]);
  translate([210, 19, 0])
    cube([1, 1, 1.25]);
  translate([211, 19, 0])
    cube([1, 1, 1.25]);
  translate([212, 19, 0])
    cube([1, 1, 1.25]);
  translate([213, 19, 0])
    cube([1, 1, 1.25]);
  translate([214, 19, 0])
    cube([1, 1, 1.25]);
  translate([215, 19, 0])
    cube([1, 1, 1.25]);
  translate([216, 19, 0])
    cube([1, 1, 1.25]);
  translate([217, 19, 0])
    cube([1, 1, 1.25]);
  translate([218, 19, 0])
    cube([1, 1, 1.25]);
  translate([219, 19, 0])
    cube([1, 1, 1.25]);
  translate([220, 19, 0])
    cube([1, 1, 1.25]);
  translate([221, 19, 0])
    cube([1, 1, 1.25]);
  translate([222, 19, 0])
    cube([1, 1, 1.25]);
  translate([223, 19, 0])
    cube([1, 1, 1.25]);
  translate([224, 19, 0])
    cube([1, 1, 1.25]);
  translate([225, 19, 0])
    cube([1, 1, 1.25]);
  translate([226, 19, 0])
    cube([1, 1, 1.25]);
  translate([227, 19, 0])
    cube([1, 1, 1.25]);
  translate([228, 19, 0])
    cube([1, 1, 1.25]);
  translate([229, 19, 0])
    cube([1, 1, 1.25]);
  translate([230, 19, 0])
    cube([1, 1, 1.25]);
  translate([231, 19, 0])
    cube([1, 1, 1.25]);
  translate([232, 19, 0])
    cube([1, 1, 1.25]);
  translate([233, 19, 0])
    cube([1, 1, 1.25]);
  translate([234, 19, 0])
    cube([1, 1, 1.25]);
  translate([235, 19, 0])
    cube([1, 1, 1.25]);
  translate([236, 19, 0])
    cube([1, 1, 1.25]);
  translate([237, 19, 0])
    cube([1, 1, 1.25]);
  translate([238, 19, 0])
    cube([1, 1, 1.25]);
  translate([239, 19, 0])
    cube([1, 1, 1.25]);
  translate([240, 19, 0])
    cube([1, 1, 1.25]);
  translate([241, 19, 0])
    cube([1, 1, 1.25]);
  translate([242, 19, 0])
    cube([1, 1, 1.25]);
  translate([243, 19, 0])
    cube([1, 1, 1.25]);
  translate([244, 19, 0])
    cube([1, 1, 1.25]);
  translate([245, 19, 0])
    cube([1, 1, 1.25]);
  translate([246, 19, 0])
    cube([1, 1, 1.25]);
  translate([0, 20, 0])
    cube([1, 1, 1.33]);
  translate([1, 20, 0])
    cube([1, 1, 1.37]);
  translate([2, 20, 0])
    cube([1, 1, 1.37]);
  translate([3, 20, 0])
    cube([1, 1, 1.37]);
  translate([4, 20, 0])
    cube([1, 1, 1.37]);
  translate([5, 20, 0])
    cube([1, 1, 1.33]);
  translate([6, 20, 0])
    cube([1, 1, 1.33]);
  translate([7, 20, 0])
    cube([1, 1, 1.37]);
  translate([8, 20, 0])
    cube([1, 1, 1.33]);
  translate([9, 20, 0])
    cube([1, 1, 1.33]);
  translate([10, 20, 0])
    cube([1, 1, 1.33]);
  translate([11, 20, 0])
    cube([1, 1, 1.33]);
  translate([12, 20, 0])
    cube([1, 1, 1.33]);
  translate([13, 20, 0])
    cube([1, 1, 1.33]);
  translate([14, 20, 0])
    cube([1, 1, 1.33]);
  translate([15, 20, 0])
    cube([1, 1, 1.33]);
  translate([16, 20, 0])
    cube([1, 1, 1.33]);
  translate([17, 20, 0])
    cube([1, 1, 1.33]);
  translate([18, 20, 0])
    cube([1, 1, 1.33]);
  translate([19, 20, 0])
    cube([1, 1, 1.33]);
  translate([20, 20, 0])
    cube([1, 1, 1.33]);
  translate([21, 20, 0])
    cube([1, 1, 1.33]);
  translate([22, 20, 0])
    cube([1, 1, 1.33]);
  translate([23, 20, 0])
    cube([1, 1, 1.33]);
  translate([24, 20, 0])
    cube([1, 1, 1.33]);
  translate([25, 20, 0])
    cube([1, 1, 1.33]);
  translate([26, 20, 0])
    cube([1, 1, 1.33]);
  translate([27, 20, 0])
    cube([1, 1, 1.33]);
  translate([28, 20, 0])
    cube([1, 1, 1.33]);
  translate([29, 20, 0])
    cube([1, 1, 1.33]);
  translate([30, 20, 0])
    cube([1, 1, 1.33]);
  translate([31, 20, 0])
    cube([1, 1, 1.33]);
  translate([32, 20, 0])
    cube([1, 1, 1.33]);
  translate([33, 20, 0])
    cube([1, 1, 1.33]);
  translate([34, 20, 0])
    cube([1, 1, 1.33]);
  translate([35, 20, 0])
    cube([1, 1, 1.33]);
  translate([36, 20, 0])
    cube([1, 1, 1.33]);
  translate([37, 20, 0])
    cube([1, 1, 1.33]);
  translate([38, 20, 0])
    cube([1, 1, 1.33]);
  translate([39, 20, 0])
    cube([1, 1, 1.33]);
  translate([40, 20, 0])
    cube([1, 1, 1.33]);
  translate([41, 20, 0])
    cube([1, 1, 1.33]);
  translate([42, 20, 0])
    cube([1, 1, 1.33]);
  translate([43, 20, 0])
    cube([1, 1, 1.33]);
  translate([44, 20, 0])
    cube([1, 1, 1.33]);
  translate([45, 20, 0])
    cube([1, 1, 1.33]);
  translate([46, 20, 0])
    cube([1, 1, 1.33]);
  translate([47, 20, 0])
    cube([1, 1, 1.33]);
  translate([48, 20, 0])
    cube([1, 1, 1.33]);
  translate([49, 20, 0])
    cube([1, 1, 1.33]);
  translate([50, 20, 0])
    cube([1, 1, 1.33]);
  translate([51, 20, 0])
    cube([1, 1, 1.33]);
  translate([52, 20, 0])
    cube([1, 1, 1.33]);
  translate([53, 20, 0])
    cube([1, 1, 1.33]);
  translate([54, 20, 0])
    cube([1, 1, 1.33]);
  translate([55, 20, 0])
    cube([1, 1, 1.33]);
  translate([56, 20, 0])
    cube([1, 1, 1.33]);
  translate([57, 20, 0])
    cube([1, 1, 1.33]);
  translate([58, 20, 0])
    cube([1, 1, 1.33]);
  translate([59, 20, 0])
    cube([1, 1, 1.33]);
  translate([60, 20, 0])
    cube([1, 1, 1.33]);
  translate([61, 20, 0])
    cube([1, 1, 1.33]);
  translate([62, 20, 0])
    cube([1, 1, 1.33]);
  translate([63, 20, 0])
    cube([1, 1, 1.33]);
  translate([64, 20, 0])
    cube([1, 1, 1.33]);
  translate([65, 20, 0])
    cube([1, 1, 1.29]);
  translate([66, 20, 0])
    cube([1, 1, 1.29]);
  translate([67, 20, 0])
    cube([1, 1, 1.29]);
  translate([68, 20, 0])
    cube([1, 1, 1.33]);
  translate([69, 20, 0])
    cube([1, 1, 1.33]);
  translate([70, 20, 0])
    cube([1, 1, 1.33]);
  translate([71, 20, 0])
    cube([1, 1, 1.33]);
  translate([72, 20, 0])
    cube([1, 1, 1.33]);
  translate([73, 20, 0])
    cube([1, 1, 1.29]);
  translate([74, 20, 0])
    cube([1, 1, 1.29]);
  translate([75, 20, 0])
    cube([1, 1, 1.29]);
  translate([76, 20, 0])
    cube([1, 1, 1.29]);
  translate([77, 20, 0])
    cube([1, 1, 1.29]);
  translate([78, 20, 0])
    cube([1, 1, 1.29]);
  translate([79, 20, 0])
    cube([1, 1, 1.29]);
  translate([80, 20, 0])
    cube([1, 1, 1.29]);
  translate([81, 20, 0])
    cube([1, 1, 1.69]);
  translate([82, 20, 0])
    cube([1, 1, 5.14]);
  translate([83, 20, 0])
    cube([1, 1, 1.29]);
  translate([84, 20, 0])
    cube([1, 1, 2.59]);
  translate([85, 20, 0])
    cube([1, 1, 4.00]);
  translate([86, 20, 0])
    cube([1, 1, 2.16]);
  translate([87, 20, 0])
    cube([1, 1, 1.69]);
  translate([88, 20, 0])
    cube([1, 1, 1.49]);
  translate([89, 20, 0])
    cube([1, 1, 1.41]);
  translate([90, 20, 0])
    cube([1, 1, 1.41]);
  translate([91, 20, 0])
    cube([1, 1, 1.45]);
  translate([92, 20, 0])
    cube([1, 1, 1.33]);
  translate([93, 20, 0])
    cube([1, 1, 1.41]);
  translate([94, 20, 0])
    cube([1, 1, 1.41]);
  translate([95, 20, 0])
    cube([1, 1, 1.41]);
  translate([96, 20, 0])
    cube([1, 1, 1.49]);
  translate([97, 20, 0])
    cube([1, 1, 1.41]);
  translate([98, 20, 0])
    cube([1, 1, 1.49]);
  translate([99, 20, 0])
    cube([1, 1, 1.37]);
  translate([100, 20, 0])
    cube([1, 1, 1.57]);
  translate([101, 20, 0])
    cube([1, 1, 1.76]);
  translate([102, 20, 0])
    cube([1, 1, 1.96]);
  translate([103, 20, 0])
    cube([1, 1, 1.92]);
  translate([104, 20, 0])
    cube([1, 1, 1.69]);
  translate([105, 20, 0])
    cube([1, 1, 2.08]);
  translate([106, 20, 0])
    cube([1, 1, 2.08]);
  translate([107, 20, 0])
    cube([1, 1, 2.00]);
  translate([108, 20, 0])
    cube([1, 1, 2.78]);
  translate([109, 20, 0])
    cube([1, 1, 2.55]);
  translate([110, 20, 0])
    cube([1, 1, 3.22]);
  translate([111, 20, 0])
    cube([1, 1, 2.35]);
  translate([112, 20, 0])
    cube([1, 1, 2.00]);
  translate([113, 20, 0])
    cube([1, 1, 2.59]);
  translate([114, 20, 0])
    cube([1, 1, 3.69]);
  translate([115, 20, 0])
    cube([1, 1, 3.69]);
  translate([116, 20, 0])
    cube([1, 1, 1.25]);
  translate([117, 20, 0])
    cube([1, 1, 1.25]);
  translate([118, 20, 0])
    cube([1, 1, 1.25]);
  translate([119, 20, 0])
    cube([1, 1, 1.25]);
  translate([120, 20, 0])
    cube([1, 1, 1.25]);
  translate([121, 20, 0])
    cube([1, 1, 1.25]);
  translate([122, 20, 0])
    cube([1, 1, 1.25]);
  translate([123, 20, 0])
    cube([1, 1, 1.25]);
  translate([124, 20, 0])
    cube([1, 1, 1.25]);
  translate([125, 20, 0])
    cube([1, 1, 1.25]);
  translate([126, 20, 0])
    cube([1, 1, 1.25]);
  translate([127, 20, 0])
    cube([1, 1, 1.25]);
  translate([128, 20, 0])
    cube([1, 1, 1.25]);
  translate([129, 20, 0])
    cube([1, 1, 1.25]);
  translate([130, 20, 0])
    cube([1, 1, 1.25]);
  translate([131, 20, 0])
    cube([1, 1, 1.25]);
  translate([132, 20, 0])
    cube([1, 1, 1.25]);
  translate([133, 20, 0])
    cube([1, 1, 1.25]);
  translate([134, 20, 0])
    cube([1, 1, 1.25]);
  translate([135, 20, 0])
    cube([1, 1, 1.25]);
  translate([136, 20, 0])
    cube([1, 1, 1.25]);
  translate([137, 20, 0])
    cube([1, 1, 1.25]);
  translate([138, 20, 0])
    cube([1, 1, 1.25]);
  translate([139, 20, 0])
    cube([1, 1, 1.25]);
  translate([140, 20, 0])
    cube([1, 1, 1.25]);
  translate([141, 20, 0])
    cube([1, 1, 1.25]);
  translate([142, 20, 0])
    cube([1, 1, 1.25]);
  translate([143, 20, 0])
    cube([1, 1, 1.25]);
  translate([144, 20, 0])
    cube([1, 1, 1.25]);
  translate([145, 20, 0])
    cube([1, 1, 1.25]);
  translate([146, 20, 0])
    cube([1, 1, 1.25]);
  translate([147, 20, 0])
    cube([1, 1, 1.25]);
  translate([148, 20, 0])
    cube([1, 1, 1.25]);
  translate([149, 20, 0])
    cube([1, 1, 1.25]);
  translate([150, 20, 0])
    cube([1, 1, 1.25]);
  translate([151, 20, 0])
    cube([1, 1, 1.25]);
  translate([152, 20, 0])
    cube([1, 1, 1.25]);
  translate([153, 20, 0])
    cube([1, 1, 1.25]);
  translate([154, 20, 0])
    cube([1, 1, 1.25]);
  translate([155, 20, 0])
    cube([1, 1, 1.25]);
  translate([156, 20, 0])
    cube([1, 1, 1.25]);
  translate([157, 20, 0])
    cube([1, 1, 1.25]);
  translate([158, 20, 0])
    cube([1, 1, 1.25]);
  translate([159, 20, 0])
    cube([1, 1, 1.25]);
  translate([160, 20, 0])
    cube([1, 1, 1.25]);
  translate([161, 20, 0])
    cube([1, 1, 1.25]);
  translate([162, 20, 0])
    cube([1, 1, 1.25]);
  translate([163, 20, 0])
    cube([1, 1, 1.25]);
  translate([164, 20, 0])
    cube([1, 1, 1.25]);
  translate([165, 20, 0])
    cube([1, 1, 1.25]);
  translate([166, 20, 0])
    cube([1, 1, 1.25]);
  translate([167, 20, 0])
    cube([1, 1, 1.25]);
  translate([168, 20, 0])
    cube([1, 1, 1.25]);
  translate([169, 20, 0])
    cube([1, 1, 1.25]);
  translate([170, 20, 0])
    cube([1, 1, 1.25]);
  translate([171, 20, 0])
    cube([1, 1, 1.25]);
  translate([172, 20, 0])
    cube([1, 1, 1.25]);
  translate([173, 20, 0])
    cube([1, 1, 1.25]);
  translate([174, 20, 0])
    cube([1, 1, 1.25]);
  translate([175, 20, 0])
    cube([1, 1, 1.25]);
  translate([176, 20, 0])
    cube([1, 1, 1.25]);
  translate([177, 20, 0])
    cube([1, 1, 1.25]);
  translate([178, 20, 0])
    cube([1, 1, 1.25]);
  translate([179, 20, 0])
    cube([1, 1, 1.25]);
  translate([180, 20, 0])
    cube([1, 1, 1.25]);
  translate([181, 20, 0])
    cube([1, 1, 1.25]);
  translate([182, 20, 0])
    cube([1, 1, 1.25]);
  translate([183, 20, 0])
    cube([1, 1, 1.25]);
  translate([184, 20, 0])
    cube([1, 1, 1.25]);
  translate([185, 20, 0])
    cube([1, 1, 1.25]);
  translate([186, 20, 0])
    cube([1, 1, 1.25]);
  translate([187, 20, 0])
    cube([1, 1, 1.25]);
  translate([188, 20, 0])
    cube([1, 1, 1.25]);
  translate([189, 20, 0])
    cube([1, 1, 1.25]);
  translate([190, 20, 0])
    cube([1, 1, 1.25]);
  translate([191, 20, 0])
    cube([1, 1, 1.25]);
  translate([192, 20, 0])
    cube([1, 1, 1.25]);
  translate([193, 20, 0])
    cube([1, 1, 1.25]);
  translate([194, 20, 0])
    cube([1, 1, 1.25]);
  translate([195, 20, 0])
    cube([1, 1, 1.25]);
  translate([196, 20, 0])
    cube([1, 1, 1.25]);
  translate([197, 20, 0])
    cube([1, 1, 1.25]);
  translate([198, 20, 0])
    cube([1, 1, 1.25]);
  translate([199, 20, 0])
    cube([1, 1, 1.25]);
  translate([200, 20, 0])
    cube([1, 1, 1.25]);
  translate([201, 20, 0])
    cube([1, 1, 1.25]);
  translate([202, 20, 0])
    cube([1, 1, 1.25]);
  translate([203, 20, 0])
    cube([1, 1, 1.25]);
  translate([204, 20, 0])
    cube([1, 1, 1.25]);
  translate([205, 20, 0])
    cube([1, 1, 1.25]);
  translate([206, 20, 0])
    cube([1, 1, 1.25]);
  translate([207, 20, 0])
    cube([1, 1, 1.25]);
  translate([208, 20, 0])
    cube([1, 1, 1.25]);
  translate([209, 20, 0])
    cube([1, 1, 1.25]);
  translate([210, 20, 0])
    cube([1, 1, 1.25]);
  translate([211, 20, 0])
    cube([1, 1, 1.25]);
  translate([212, 20, 0])
    cube([1, 1, 1.25]);
  translate([213, 20, 0])
    cube([1, 1, 1.25]);
  translate([214, 20, 0])
    cube([1, 1, 1.25]);
  translate([215, 20, 0])
    cube([1, 1, 1.25]);
  translate([216, 20, 0])
    cube([1, 1, 1.25]);
  translate([217, 20, 0])
    cube([1, 1, 1.25]);
  translate([218, 20, 0])
    cube([1, 1, 1.25]);
  translate([219, 20, 0])
    cube([1, 1, 1.25]);
  translate([220, 20, 0])
    cube([1, 1, 1.25]);
  translate([221, 20, 0])
    cube([1, 1, 1.25]);
  translate([222, 20, 0])
    cube([1, 1, 1.25]);
  translate([223, 20, 0])
    cube([1, 1, 1.25]);
  translate([224, 20, 0])
    cube([1, 1, 1.25]);
  translate([225, 20, 0])
    cube([1, 1, 1.25]);
  translate([226, 20, 0])
    cube([1, 1, 1.25]);
  translate([227, 20, 0])
    cube([1, 1, 1.25]);
  translate([228, 20, 0])
    cube([1, 1, 1.25]);
  translate([229, 20, 0])
    cube([1, 1, 1.25]);
  translate([230, 20, 0])
    cube([1, 1, 1.25]);
  translate([231, 20, 0])
    cube([1, 1, 1.25]);
  translate([232, 20, 0])
    cube([1, 1, 1.25]);
  translate([233, 20, 0])
    cube([1, 1, 1.25]);
  translate([234, 20, 0])
    cube([1, 1, 1.25]);
  translate([235, 20, 0])
    cube([1, 1, 1.25]);
  translate([236, 20, 0])
    cube([1, 1, 1.25]);
  translate([237, 20, 0])
    cube([1, 1, 1.25]);
  translate([238, 20, 0])
    cube([1, 1, 1.25]);
  translate([239, 20, 0])
    cube([1, 1, 1.25]);
  translate([240, 20, 0])
    cube([1, 1, 1.25]);
  translate([241, 20, 0])
    cube([1, 1, 1.25]);
  translate([242, 20, 0])
    cube([1, 1, 1.25]);
  translate([243, 20, 0])
    cube([1, 1, 1.25]);
  translate([244, 20, 0])
    cube([1, 1, 1.25]);
  translate([245, 20, 0])
    cube([1, 1, 1.25]);
  translate([246, 20, 0])
    cube([1, 1, 1.25]);
  translate([0, 21, 0])
    cube([1, 1, 1.41]);
  translate([1, 21, 0])
    cube([1, 1, 1.37]);
  translate([2, 21, 0])
    cube([1, 1, 1.37]);
  translate([3, 21, 0])
    cube([1, 1, 1.37]);
  translate([4, 21, 0])
    cube([1, 1, 1.37]);
  translate([5, 21, 0])
    cube([1, 1, 1.33]);
  translate([6, 21, 0])
    cube([1, 1, 1.33]);
  translate([7, 21, 0])
    cube([1, 1, 1.33]);
  translate([8, 21, 0])
    cube([1, 1, 1.33]);
  translate([9, 21, 0])
    cube([1, 1, 1.33]);
  translate([10, 21, 0])
    cube([1, 1, 1.33]);
  translate([11, 21, 0])
    cube([1, 1, 1.33]);
  translate([12, 21, 0])
    cube([1, 1, 1.33]);
  translate([13, 21, 0])
    cube([1, 1, 1.33]);
  translate([14, 21, 0])
    cube([1, 1, 1.33]);
  translate([15, 21, 0])
    cube([1, 1, 1.37]);
  translate([16, 21, 0])
    cube([1, 1, 1.33]);
  translate([17, 21, 0])
    cube([1, 1, 1.33]);
  translate([18, 21, 0])
    cube([1, 1, 1.33]);
  translate([19, 21, 0])
    cube([1, 1, 1.33]);
  translate([20, 21, 0])
    cube([1, 1, 1.33]);
  translate([21, 21, 0])
    cube([1, 1, 1.33]);
  translate([22, 21, 0])
    cube([1, 1, 1.37]);
  translate([23, 21, 0])
    cube([1, 1, 1.33]);
  translate([24, 21, 0])
    cube([1, 1, 1.33]);
  translate([25, 21, 0])
    cube([1, 1, 1.33]);
  translate([26, 21, 0])
    cube([1, 1, 1.33]);
  translate([27, 21, 0])
    cube([1, 1, 1.33]);
  translate([28, 21, 0])
    cube([1, 1, 1.33]);
  translate([29, 21, 0])
    cube([1, 1, 1.37]);
  translate([30, 21, 0])
    cube([1, 1, 1.33]);
  translate([31, 21, 0])
    cube([1, 1, 1.33]);
  translate([32, 21, 0])
    cube([1, 1, 1.33]);
  translate([33, 21, 0])
    cube([1, 1, 1.33]);
  translate([34, 21, 0])
    cube([1, 1, 1.33]);
  translate([35, 21, 0])
    cube([1, 1, 1.33]);
  translate([36, 21, 0])
    cube([1, 1, 1.33]);
  translate([37, 21, 0])
    cube([1, 1, 1.33]);
  translate([38, 21, 0])
    cube([1, 1, 1.33]);
  translate([39, 21, 0])
    cube([1, 1, 1.33]);
  translate([40, 21, 0])
    cube([1, 1, 1.33]);
  translate([41, 21, 0])
    cube([1, 1, 1.33]);
  translate([42, 21, 0])
    cube([1, 1, 1.33]);
  translate([43, 21, 0])
    cube([1, 1, 1.33]);
  translate([44, 21, 0])
    cube([1, 1, 1.33]);
  translate([45, 21, 0])
    cube([1, 1, 1.33]);
  translate([46, 21, 0])
    cube([1, 1, 1.33]);
  translate([47, 21, 0])
    cube([1, 1, 1.33]);
  translate([48, 21, 0])
    cube([1, 1, 1.33]);
  translate([49, 21, 0])
    cube([1, 1, 1.33]);
  translate([50, 21, 0])
    cube([1, 1, 1.33]);
  translate([51, 21, 0])
    cube([1, 1, 1.33]);
  translate([52, 21, 0])
    cube([1, 1, 1.33]);
  translate([53, 21, 0])
    cube([1, 1, 1.33]);
  translate([54, 21, 0])
    cube([1, 1, 1.33]);
  translate([55, 21, 0])
    cube([1, 1, 1.33]);
  translate([56, 21, 0])
    cube([1, 1, 1.33]);
  translate([57, 21, 0])
    cube([1, 1, 1.33]);
  translate([58, 21, 0])
    cube([1, 1, 1.33]);
  translate([59, 21, 0])
    cube([1, 1, 1.33]);
  translate([60, 21, 0])
    cube([1, 1, 1.33]);
  translate([61, 21, 0])
    cube([1, 1, 1.33]);
  translate([62, 21, 0])
    cube([1, 1, 1.33]);
  translate([63, 21, 0])
    cube([1, 1, 1.33]);
  translate([64, 21, 0])
    cube([1, 1, 1.37]);
  translate([65, 21, 0])
    cube([1, 1, 1.33]);
  translate([66, 21, 0])
    cube([1, 1, 1.33]);
  translate([67, 21, 0])
    cube([1, 1, 1.33]);
  translate([68, 21, 0])
    cube([1, 1, 1.37]);
  translate([69, 21, 0])
    cube([1, 1, 1.29]);
  translate([70, 21, 0])
    cube([1, 1, 1.33]);
  translate([71, 21, 0])
    cube([1, 1, 1.33]);
  translate([72, 21, 0])
    cube([1, 1, 1.29]);
  translate([73, 21, 0])
    cube([1, 1, 1.25]);
  translate([74, 21, 0])
    cube([1, 1, 1.29]);
  translate([75, 21, 0])
    cube([1, 1, 1.29]);
  translate([76, 21, 0])
    cube([1, 1, 1.29]);
  translate([77, 21, 0])
    cube([1, 1, 1.29]);
  translate([78, 21, 0])
    cube([1, 1, 1.29]);
  translate([79, 21, 0])
    cube([1, 1, 1.29]);
  translate([80, 21, 0])
    cube([1, 1, 0.98]);
  translate([81, 21, 0])
    cube([1, 1, 6.78]);
  translate([82, 21, 0])
    cube([1, 1, 2.47]);
  translate([83, 21, 0])
    cube([1, 1, 5.29]);
  translate([84, 21, 0])
    cube([1, 1, 3.37]);
  translate([85, 21, 0])
    cube([1, 1, 2.78]);
  translate([86, 21, 0])
    cube([1, 1, 1.57]);
  translate([87, 21, 0])
    cube([1, 1, 1.57]);
  translate([88, 21, 0])
    cube([1, 1, 1.53]);
  translate([89, 21, 0])
    cube([1, 1, 1.53]);
  translate([90, 21, 0])
    cube([1, 1, 1.41]);
  translate([91, 21, 0])
    cube([1, 1, 1.37]);
  translate([92, 21, 0])
    cube([1, 1, 1.57]);
  translate([93, 21, 0])
    cube([1, 1, 1.69]);
  translate([94, 21, 0])
    cube([1, 1, 1.80]);
  translate([95, 21, 0])
    cube([1, 1, 1.92]);
  translate([96, 21, 0])
    cube([1, 1, 2.08]);
  translate([97, 21, 0])
    cube([1, 1, 2.04]);
  translate([98, 21, 0])
    cube([1, 1, 2.24]);
  translate([99, 21, 0])
    cube([1, 1, 2.24]);
  translate([100, 21, 0])
    cube([1, 1, 2.39]);
  translate([101, 21, 0])
    cube([1, 1, 2.51]);
  translate([102, 21, 0])
    cube([1, 1, 2.67]);
  translate([103, 21, 0])
    cube([1, 1, 2.86]);
  translate([104, 21, 0])
    cube([1, 1, 1.96]);
  translate([105, 21, 0])
    cube([1, 1, 1.84]);
  translate([106, 21, 0])
    cube([1, 1, 1.92]);
  translate([107, 21, 0])
    cube([1, 1, 1.49]);
  translate([108, 21, 0])
    cube([1, 1, 2.31]);
  translate([109, 21, 0])
    cube([1, 1, 2.16]);
  translate([110, 21, 0])
    cube([1, 1, 2.16]);
  translate([111, 21, 0])
    cube([1, 1, 2.04]);
  translate([112, 21, 0])
    cube([1, 1, 2.55]);
  translate([113, 21, 0])
    cube([1, 1, 3.45]);
  translate([114, 21, 0])
    cube([1, 1, 3.06]);
  translate([115, 21, 0])
    cube([1, 1, 3.61]);
  translate([116, 21, 0])
    cube([1, 1, 4.98]);
  translate([117, 21, 0])
    cube([1, 1, 1.41]);
  translate([118, 21, 0])
    cube([1, 1, 1.25]);
  translate([119, 21, 0])
    cube([1, 1, 1.25]);
  translate([120, 21, 0])
    cube([1, 1, 1.25]);
  translate([121, 21, 0])
    cube([1, 1, 1.25]);
  translate([122, 21, 0])
    cube([1, 1, 1.25]);
  translate([123, 21, 0])
    cube([1, 1, 1.25]);
  translate([124, 21, 0])
    cube([1, 1, 1.25]);
  translate([125, 21, 0])
    cube([1, 1, 1.25]);
  translate([126, 21, 0])
    cube([1, 1, 1.25]);
  translate([127, 21, 0])
    cube([1, 1, 1.25]);
  translate([128, 21, 0])
    cube([1, 1, 1.25]);
  translate([129, 21, 0])
    cube([1, 1, 1.25]);
  translate([130, 21, 0])
    cube([1, 1, 1.25]);
  translate([131, 21, 0])
    cube([1, 1, 1.25]);
  translate([132, 21, 0])
    cube([1, 1, 1.25]);
  translate([133, 21, 0])
    cube([1, 1, 1.25]);
  translate([134, 21, 0])
    cube([1, 1, 1.25]);
  translate([135, 21, 0])
    cube([1, 1, 1.25]);
  translate([136, 21, 0])
    cube([1, 1, 1.25]);
  translate([137, 21, 0])
    cube([1, 1, 1.25]);
  translate([138, 21, 0])
    cube([1, 1, 1.25]);
  translate([139, 21, 0])
    cube([1, 1, 1.25]);
  translate([140, 21, 0])
    cube([1, 1, 1.25]);
  translate([141, 21, 0])
    cube([1, 1, 1.25]);
  translate([142, 21, 0])
    cube([1, 1, 1.25]);
  translate([143, 21, 0])
    cube([1, 1, 1.25]);
  translate([144, 21, 0])
    cube([1, 1, 1.25]);
  translate([145, 21, 0])
    cube([1, 1, 1.25]);
  translate([146, 21, 0])
    cube([1, 1, 1.25]);
  translate([147, 21, 0])
    cube([1, 1, 1.25]);
  translate([148, 21, 0])
    cube([1, 1, 1.25]);
  translate([149, 21, 0])
    cube([1, 1, 1.25]);
  translate([150, 21, 0])
    cube([1, 1, 1.25]);
  translate([151, 21, 0])
    cube([1, 1, 1.25]);
  translate([152, 21, 0])
    cube([1, 1, 1.25]);
  translate([153, 21, 0])
    cube([1, 1, 1.25]);
  translate([154, 21, 0])
    cube([1, 1, 1.25]);
  translate([155, 21, 0])
    cube([1, 1, 1.25]);
  translate([156, 21, 0])
    cube([1, 1, 1.25]);
  translate([157, 21, 0])
    cube([1, 1, 1.25]);
  translate([158, 21, 0])
    cube([1, 1, 1.25]);
  translate([159, 21, 0])
    cube([1, 1, 1.25]);
  translate([160, 21, 0])
    cube([1, 1, 1.25]);
  translate([161, 21, 0])
    cube([1, 1, 1.25]);
  translate([162, 21, 0])
    cube([1, 1, 1.25]);
  translate([163, 21, 0])
    cube([1, 1, 1.25]);
  translate([164, 21, 0])
    cube([1, 1, 1.25]);
  translate([165, 21, 0])
    cube([1, 1, 1.25]);
  translate([166, 21, 0])
    cube([1, 1, 1.25]);
  translate([167, 21, 0])
    cube([1, 1, 1.25]);
  translate([168, 21, 0])
    cube([1, 1, 1.25]);
  translate([169, 21, 0])
    cube([1, 1, 1.25]);
  translate([170, 21, 0])
    cube([1, 1, 1.25]);
  translate([171, 21, 0])
    cube([1, 1, 1.25]);
  translate([172, 21, 0])
    cube([1, 1, 1.25]);
  translate([173, 21, 0])
    cube([1, 1, 1.25]);
  translate([174, 21, 0])
    cube([1, 1, 1.25]);
  translate([175, 21, 0])
    cube([1, 1, 1.25]);
  translate([176, 21, 0])
    cube([1, 1, 1.25]);
  translate([177, 21, 0])
    cube([1, 1, 1.25]);
  translate([178, 21, 0])
    cube([1, 1, 1.25]);
  translate([179, 21, 0])
    cube([1, 1, 1.25]);
  translate([180, 21, 0])
    cube([1, 1, 1.25]);
  translate([181, 21, 0])
    cube([1, 1, 1.25]);
  translate([182, 21, 0])
    cube([1, 1, 1.25]);
  translate([183, 21, 0])
    cube([1, 1, 1.25]);
  translate([184, 21, 0])
    cube([1, 1, 1.25]);
  translate([185, 21, 0])
    cube([1, 1, 1.25]);
  translate([186, 21, 0])
    cube([1, 1, 1.25]);
  translate([187, 21, 0])
    cube([1, 1, 1.25]);
  translate([188, 21, 0])
    cube([1, 1, 1.25]);
  translate([189, 21, 0])
    cube([1, 1, 1.25]);
  translate([190, 21, 0])
    cube([1, 1, 1.25]);
  translate([191, 21, 0])
    cube([1, 1, 1.25]);
  translate([192, 21, 0])
    cube([1, 1, 1.25]);
  translate([193, 21, 0])
    cube([1, 1, 1.25]);
  translate([194, 21, 0])
    cube([1, 1, 1.25]);
  translate([195, 21, 0])
    cube([1, 1, 1.25]);
  translate([196, 21, 0])
    cube([1, 1, 1.25]);
  translate([197, 21, 0])
    cube([1, 1, 1.25]);
  translate([198, 21, 0])
    cube([1, 1, 1.25]);
  translate([199, 21, 0])
    cube([1, 1, 1.25]);
  translate([200, 21, 0])
    cube([1, 1, 1.25]);
  translate([201, 21, 0])
    cube([1, 1, 1.25]);
  translate([202, 21, 0])
    cube([1, 1, 1.25]);
  translate([203, 21, 0])
    cube([1, 1, 1.25]);
  translate([204, 21, 0])
    cube([1, 1, 1.25]);
  translate([205, 21, 0])
    cube([1, 1, 1.25]);
  translate([206, 21, 0])
    cube([1, 1, 1.25]);
  translate([207, 21, 0])
    cube([1, 1, 1.25]);
  translate([208, 21, 0])
    cube([1, 1, 1.25]);
  translate([209, 21, 0])
    cube([1, 1, 1.25]);
  translate([210, 21, 0])
    cube([1, 1, 1.25]);
  translate([211, 21, 0])
    cube([1, 1, 1.25]);
  translate([212, 21, 0])
    cube([1, 1, 1.25]);
  translate([213, 21, 0])
    cube([1, 1, 1.25]);
  translate([214, 21, 0])
    cube([1, 1, 1.25]);
  translate([215, 21, 0])
    cube([1, 1, 1.25]);
  translate([216, 21, 0])
    cube([1, 1, 1.25]);
  translate([217, 21, 0])
    cube([1, 1, 1.25]);
  translate([218, 21, 0])
    cube([1, 1, 1.25]);
  translate([219, 21, 0])
    cube([1, 1, 1.25]);
  translate([220, 21, 0])
    cube([1, 1, 1.25]);
  translate([221, 21, 0])
    cube([1, 1, 1.25]);
  translate([222, 21, 0])
    cube([1, 1, 1.25]);
  translate([223, 21, 0])
    cube([1, 1, 1.25]);
  translate([224, 21, 0])
    cube([1, 1, 1.25]);
  translate([225, 21, 0])
    cube([1, 1, 1.25]);
  translate([226, 21, 0])
    cube([1, 1, 1.25]);
  translate([227, 21, 0])
    cube([1, 1, 1.25]);
  translate([228, 21, 0])
    cube([1, 1, 1.25]);
  translate([229, 21, 0])
    cube([1, 1, 1.25]);
  translate([230, 21, 0])
    cube([1, 1, 1.25]);
  translate([231, 21, 0])
    cube([1, 1, 1.25]);
  translate([232, 21, 0])
    cube([1, 1, 1.25]);
  translate([233, 21, 0])
    cube([1, 1, 1.25]);
  translate([234, 21, 0])
    cube([1, 1, 1.25]);
  translate([235, 21, 0])
    cube([1, 1, 1.25]);
  translate([236, 21, 0])
    cube([1, 1, 1.25]);
  translate([237, 21, 0])
    cube([1, 1, 1.25]);
  translate([238, 21, 0])
    cube([1, 1, 1.25]);
  translate([239, 21, 0])
    cube([1, 1, 1.25]);
  translate([240, 21, 0])
    cube([1, 1, 1.25]);
  translate([241, 21, 0])
    cube([1, 1, 1.25]);
  translate([242, 21, 0])
    cube([1, 1, 1.25]);
  translate([243, 21, 0])
    cube([1, 1, 1.25]);
  translate([244, 21, 0])
    cube([1, 1, 1.25]);
  translate([245, 21, 0])
    cube([1, 1, 1.25]);
  translate([246, 21, 0])
    cube([1, 1, 1.25]);
  translate([0, 22, 0])
    cube([1, 1, 1.33]);
  translate([1, 22, 0])
    cube([1, 1, 1.33]);
  translate([2, 22, 0])
    cube([1, 1, 1.33]);
  translate([3, 22, 0])
    cube([1, 1, 1.37]);
  translate([4, 22, 0])
    cube([1, 1, 1.25]);
  translate([5, 22, 0])
    cube([1, 1, 1.37]);
  translate([6, 22, 0])
    cube([1, 1, 1.33]);
  translate([7, 22, 0])
    cube([1, 1, 1.33]);
  translate([8, 22, 0])
    cube([1, 1, 1.33]);
  translate([9, 22, 0])
    cube([1, 1, 1.33]);
  translate([10, 22, 0])
    cube([1, 1, 1.33]);
  translate([11, 22, 0])
    cube([1, 1, 1.33]);
  translate([12, 22, 0])
    cube([1, 1, 1.33]);
  translate([13, 22, 0])
    cube([1, 1, 1.33]);
  translate([14, 22, 0])
    cube([1, 1, 1.33]);
  translate([15, 22, 0])
    cube([1, 1, 1.37]);
  translate([16, 22, 0])
    cube([1, 1, 1.33]);
  translate([17, 22, 0])
    cube([1, 1, 1.33]);
  translate([18, 22, 0])
    cube([1, 1, 1.33]);
  translate([19, 22, 0])
    cube([1, 1, 1.33]);
  translate([20, 22, 0])
    cube([1, 1, 1.33]);
  translate([21, 22, 0])
    cube([1, 1, 1.33]);
  translate([22, 22, 0])
    cube([1, 1, 1.37]);
  translate([23, 22, 0])
    cube([1, 1, 1.33]);
  translate([24, 22, 0])
    cube([1, 1, 1.33]);
  translate([25, 22, 0])
    cube([1, 1, 1.33]);
  translate([26, 22, 0])
    cube([1, 1, 1.33]);
  translate([27, 22, 0])
    cube([1, 1, 1.33]);
  translate([28, 22, 0])
    cube([1, 1, 1.33]);
  translate([29, 22, 0])
    cube([1, 1, 1.37]);
  translate([30, 22, 0])
    cube([1, 1, 1.33]);
  translate([31, 22, 0])
    cube([1, 1, 1.33]);
  translate([32, 22, 0])
    cube([1, 1, 1.33]);
  translate([33, 22, 0])
    cube([1, 1, 1.33]);
  translate([34, 22, 0])
    cube([1, 1, 1.33]);
  translate([35, 22, 0])
    cube([1, 1, 1.33]);
  translate([36, 22, 0])
    cube([1, 1, 1.33]);
  translate([37, 22, 0])
    cube([1, 1, 1.33]);
  translate([38, 22, 0])
    cube([1, 1, 1.33]);
  translate([39, 22, 0])
    cube([1, 1, 1.33]);
  translate([40, 22, 0])
    cube([1, 1, 1.33]);
  translate([41, 22, 0])
    cube([1, 1, 1.33]);
  translate([42, 22, 0])
    cube([1, 1, 1.33]);
  translate([43, 22, 0])
    cube([1, 1, 1.33]);
  translate([44, 22, 0])
    cube([1, 1, 1.33]);
  translate([45, 22, 0])
    cube([1, 1, 1.33]);
  translate([46, 22, 0])
    cube([1, 1, 1.33]);
  translate([47, 22, 0])
    cube([1, 1, 1.33]);
  translate([48, 22, 0])
    cube([1, 1, 1.33]);
  translate([49, 22, 0])
    cube([1, 1, 1.33]);
  translate([50, 22, 0])
    cube([1, 1, 1.33]);
  translate([51, 22, 0])
    cube([1, 1, 1.33]);
  translate([52, 22, 0])
    cube([1, 1, 1.33]);
  translate([53, 22, 0])
    cube([1, 1, 1.33]);
  translate([54, 22, 0])
    cube([1, 1, 1.33]);
  translate([55, 22, 0])
    cube([1, 1, 1.33]);
  translate([56, 22, 0])
    cube([1, 1, 1.33]);
  translate([57, 22, 0])
    cube([1, 1, 1.33]);
  translate([58, 22, 0])
    cube([1, 1, 1.33]);
  translate([59, 22, 0])
    cube([1, 1, 1.33]);
  translate([60, 22, 0])
    cube([1, 1, 1.33]);
  translate([61, 22, 0])
    cube([1, 1, 1.33]);
  translate([62, 22, 0])
    cube([1, 1, 1.33]);
  translate([63, 22, 0])
    cube([1, 1, 1.33]);
  translate([64, 22, 0])
    cube([1, 1, 1.37]);
  translate([65, 22, 0])
    cube([1, 1, 1.33]);
  translate([66, 22, 0])
    cube([1, 1, 1.33]);
  translate([67, 22, 0])
    cube([1, 1, 1.33]);
  translate([68, 22, 0])
    cube([1, 1, 1.25]);
  translate([69, 22, 0])
    cube([1, 1, 1.33]);
  translate([70, 22, 0])
    cube([1, 1, 1.33]);
  translate([71, 22, 0])
    cube([1, 1, 1.33]);
  translate([72, 22, 0])
    cube([1, 1, 1.29]);
  translate([73, 22, 0])
    cube([1, 1, 1.25]);
  translate([74, 22, 0])
    cube([1, 1, 1.29]);
  translate([75, 22, 0])
    cube([1, 1, 1.29]);
  translate([76, 22, 0])
    cube([1, 1, 1.29]);
  translate([77, 22, 0])
    cube([1, 1, 1.29]);
  translate([78, 22, 0])
    cube([1, 1, 1.29]);
  translate([79, 22, 0])
    cube([1, 1, 1.29]);
  translate([80, 22, 0])
    cube([1, 1, 3.96]);
  translate([81, 22, 0])
    cube([1, 1, 3.14]);
  translate([82, 22, 0])
    cube([1, 1, 5.80]);
  translate([83, 22, 0])
    cube([1, 1, 6.27]);
  translate([84, 22, 0])
    cube([1, 1, 2.20]);
  translate([85, 22, 0])
    cube([1, 1, 1.76]);
  translate([86, 22, 0])
    cube([1, 1, 1.61]);
  translate([87, 22, 0])
    cube([1, 1, 1.45]);
  translate([88, 22, 0])
    cube([1, 1, 1.49]);
  translate([89, 22, 0])
    cube([1, 1, 1.53]);
  translate([90, 22, 0])
    cube([1, 1, 1.57]);
  translate([91, 22, 0])
    cube([1, 1, 1.45]);
  translate([92, 22, 0])
    cube([1, 1, 1.45]);
  translate([93, 22, 0])
    cube([1, 1, 1.69]);
  translate([94, 22, 0])
    cube([1, 1, 1.80]);
  translate([95, 22, 0])
    cube([1, 1, 1.96]);
  translate([96, 22, 0])
    cube([1, 1, 1.92]);
  translate([97, 22, 0])
    cube([1, 1, 1.73]);
  translate([98, 22, 0])
    cube([1, 1, 1.80]);
  translate([99, 22, 0])
    cube([1, 1, 1.88]);
  translate([100, 22, 0])
    cube([1, 1, 2.16]);
  translate([101, 22, 0])
    cube([1, 1, 2.27]);
  translate([102, 22, 0])
    cube([1, 1, 2.12]);
  translate([103, 22, 0])
    cube([1, 1, 1.96]);
  translate([104, 22, 0])
    cube([1, 1, 1.76]);
  translate([105, 22, 0])
    cube([1, 1, 3.37]);
  translate([106, 22, 0])
    cube([1, 1, 2.78]);
  translate([107, 22, 0])
    cube([1, 1, 1.96]);
  translate([108, 22, 0])
    cube([1, 1, 2.27]);
  translate([109, 22, 0])
    cube([1, 1, 2.27]);
  translate([110, 22, 0])
    cube([1, 1, 2.12]);
  translate([111, 22, 0])
    cube([1, 1, 2.59]);
  translate([112, 22, 0])
    cube([1, 1, 2.24]);
  translate([113, 22, 0])
    cube([1, 1, 2.27]);
  translate([114, 22, 0])
    cube([1, 1, 2.47]);
  translate([115, 22, 0])
    cube([1, 1, 3.18]);
  translate([116, 22, 0])
    cube([1, 1, 4.24]);
  translate([117, 22, 0])
    cube([1, 1, 1.14]);
  translate([118, 22, 0])
    cube([1, 1, 1.25]);
  translate([119, 22, 0])
    cube([1, 1, 1.25]);
  translate([120, 22, 0])
    cube([1, 1, 1.25]);
  translate([121, 22, 0])
    cube([1, 1, 1.25]);
  translate([122, 22, 0])
    cube([1, 1, 1.25]);
  translate([123, 22, 0])
    cube([1, 1, 1.25]);
  translate([124, 22, 0])
    cube([1, 1, 1.25]);
  translate([125, 22, 0])
    cube([1, 1, 1.25]);
  translate([126, 22, 0])
    cube([1, 1, 1.25]);
  translate([127, 22, 0])
    cube([1, 1, 1.25]);
  translate([128, 22, 0])
    cube([1, 1, 1.25]);
  translate([129, 22, 0])
    cube([1, 1, 1.25]);
  translate([130, 22, 0])
    cube([1, 1, 1.25]);
  translate([131, 22, 0])
    cube([1, 1, 1.25]);
  translate([132, 22, 0])
    cube([1, 1, 1.25]);
  translate([133, 22, 0])
    cube([1, 1, 1.25]);
  translate([134, 22, 0])
    cube([1, 1, 1.25]);
  translate([135, 22, 0])
    cube([1, 1, 1.25]);
  translate([136, 22, 0])
    cube([1, 1, 1.25]);
  translate([137, 22, 0])
    cube([1, 1, 1.25]);
  translate([138, 22, 0])
    cube([1, 1, 1.25]);
  translate([139, 22, 0])
    cube([1, 1, 1.25]);
  translate([140, 22, 0])
    cube([1, 1, 1.25]);
  translate([141, 22, 0])
    cube([1, 1, 1.25]);
  translate([142, 22, 0])
    cube([1, 1, 1.25]);
  translate([143, 22, 0])
    cube([1, 1, 1.25]);
  translate([144, 22, 0])
    cube([1, 1, 1.25]);
  translate([145, 22, 0])
    cube([1, 1, 1.25]);
  translate([146, 22, 0])
    cube([1, 1, 1.25]);
  translate([147, 22, 0])
    cube([1, 1, 1.25]);
  translate([148, 22, 0])
    cube([1, 1, 1.25]);
  translate([149, 22, 0])
    cube([1, 1, 1.25]);
  translate([150, 22, 0])
    cube([1, 1, 1.25]);
  translate([151, 22, 0])
    cube([1, 1, 1.25]);
  translate([152, 22, 0])
    cube([1, 1, 1.25]);
  translate([153, 22, 0])
    cube([1, 1, 1.25]);
  translate([154, 22, 0])
    cube([1, 1, 1.25]);
  translate([155, 22, 0])
    cube([1, 1, 1.25]);
  translate([156, 22, 0])
    cube([1, 1, 1.25]);
  translate([157, 22, 0])
    cube([1, 1, 1.25]);
  translate([158, 22, 0])
    cube([1, 1, 1.25]);
  translate([159, 22, 0])
    cube([1, 1, 1.25]);
  translate([160, 22, 0])
    cube([1, 1, 1.25]);
  translate([161, 22, 0])
    cube([1, 1, 1.25]);
  translate([162, 22, 0])
    cube([1, 1, 1.25]);
  translate([163, 22, 0])
    cube([1, 1, 1.25]);
  translate([164, 22, 0])
    cube([1, 1, 1.25]);
  translate([165, 22, 0])
    cube([1, 1, 1.25]);
  translate([166, 22, 0])
    cube([1, 1, 1.25]);
  translate([167, 22, 0])
    cube([1, 1, 1.25]);
  translate([168, 22, 0])
    cube([1, 1, 1.25]);
  translate([169, 22, 0])
    cube([1, 1, 1.25]);
  translate([170, 22, 0])
    cube([1, 1, 1.25]);
  translate([171, 22, 0])
    cube([1, 1, 1.25]);
  translate([172, 22, 0])
    cube([1, 1, 1.25]);
  translate([173, 22, 0])
    cube([1, 1, 1.25]);
  translate([174, 22, 0])
    cube([1, 1, 1.25]);
  translate([175, 22, 0])
    cube([1, 1, 1.25]);
  translate([176, 22, 0])
    cube([1, 1, 1.25]);
  translate([177, 22, 0])
    cube([1, 1, 1.25]);
  translate([178, 22, 0])
    cube([1, 1, 1.25]);
  translate([179, 22, 0])
    cube([1, 1, 1.25]);
  translate([180, 22, 0])
    cube([1, 1, 1.25]);
  translate([181, 22, 0])
    cube([1, 1, 1.25]);
  translate([182, 22, 0])
    cube([1, 1, 1.25]);
  translate([183, 22, 0])
    cube([1, 1, 1.25]);
  translate([184, 22, 0])
    cube([1, 1, 1.25]);
  translate([185, 22, 0])
    cube([1, 1, 1.25]);
  translate([186, 22, 0])
    cube([1, 1, 1.25]);
  translate([187, 22, 0])
    cube([1, 1, 1.25]);
  translate([188, 22, 0])
    cube([1, 1, 1.25]);
  translate([189, 22, 0])
    cube([1, 1, 1.25]);
  translate([190, 22, 0])
    cube([1, 1, 1.25]);
  translate([191, 22, 0])
    cube([1, 1, 1.25]);
  translate([192, 22, 0])
    cube([1, 1, 1.25]);
  translate([193, 22, 0])
    cube([1, 1, 1.25]);
  translate([194, 22, 0])
    cube([1, 1, 1.25]);
  translate([195, 22, 0])
    cube([1, 1, 1.25]);
  translate([196, 22, 0])
    cube([1, 1, 1.25]);
  translate([197, 22, 0])
    cube([1, 1, 1.25]);
  translate([198, 22, 0])
    cube([1, 1, 1.25]);
  translate([199, 22, 0])
    cube([1, 1, 1.25]);
  translate([200, 22, 0])
    cube([1, 1, 1.25]);
  translate([201, 22, 0])
    cube([1, 1, 1.25]);
  translate([202, 22, 0])
    cube([1, 1, 1.25]);
  translate([203, 22, 0])
    cube([1, 1, 1.25]);
  translate([204, 22, 0])
    cube([1, 1, 1.25]);
  translate([205, 22, 0])
    cube([1, 1, 1.25]);
  translate([206, 22, 0])
    cube([1, 1, 1.25]);
  translate([207, 22, 0])
    cube([1, 1, 1.25]);
  translate([208, 22, 0])
    cube([1, 1, 1.25]);
  translate([209, 22, 0])
    cube([1, 1, 1.25]);
  translate([210, 22, 0])
    cube([1, 1, 1.25]);
  translate([211, 22, 0])
    cube([1, 1, 1.25]);
  translate([212, 22, 0])
    cube([1, 1, 1.25]);
  translate([213, 22, 0])
    cube([1, 1, 1.25]);
  translate([214, 22, 0])
    cube([1, 1, 1.25]);
  translate([215, 22, 0])
    cube([1, 1, 1.25]);
  translate([216, 22, 0])
    cube([1, 1, 1.25]);
  translate([217, 22, 0])
    cube([1, 1, 1.25]);
  translate([218, 22, 0])
    cube([1, 1, 1.25]);
  translate([219, 22, 0])
    cube([1, 1, 1.25]);
  translate([220, 22, 0])
    cube([1, 1, 1.25]);
  translate([221, 22, 0])
    cube([1, 1, 1.25]);
  translate([222, 22, 0])
    cube([1, 1, 1.25]);
  translate([223, 22, 0])
    cube([1, 1, 1.25]);
  translate([224, 22, 0])
    cube([1, 1, 1.25]);
  translate([225, 22, 0])
    cube([1, 1, 1.25]);
  translate([226, 22, 0])
    cube([1, 1, 1.25]);
  translate([227, 22, 0])
    cube([1, 1, 1.25]);
  translate([228, 22, 0])
    cube([1, 1, 1.25]);
  translate([229, 22, 0])
    cube([1, 1, 1.25]);
  translate([230, 22, 0])
    cube([1, 1, 1.25]);
  translate([231, 22, 0])
    cube([1, 1, 1.25]);
  translate([232, 22, 0])
    cube([1, 1, 1.25]);
  translate([233, 22, 0])
    cube([1, 1, 1.25]);
  translate([234, 22, 0])
    cube([1, 1, 1.25]);
  translate([235, 22, 0])
    cube([1, 1, 1.25]);
  translate([236, 22, 0])
    cube([1, 1, 1.25]);
  translate([237, 22, 0])
    cube([1, 1, 1.25]);
  translate([238, 22, 0])
    cube([1, 1, 1.25]);
  translate([239, 22, 0])
    cube([1, 1, 1.25]);
  translate([240, 22, 0])
    cube([1, 1, 1.25]);
  translate([241, 22, 0])
    cube([1, 1, 1.25]);
  translate([242, 22, 0])
    cube([1, 1, 1.25]);
  translate([243, 22, 0])
    cube([1, 1, 1.25]);
  translate([244, 22, 0])
    cube([1, 1, 1.25]);
  translate([245, 22, 0])
    cube([1, 1, 1.25]);
  translate([246, 22, 0])
    cube([1, 1, 1.25]);
  translate([0, 23, 0])
    cube([1, 1, 1.33]);
  translate([1, 23, 0])
    cube([1, 1, 1.33]);
  translate([2, 23, 0])
    cube([1, 1, 1.33]);
  translate([3, 23, 0])
    cube([1, 1, 1.37]);
  translate([4, 23, 0])
    cube([1, 1, 1.41]);
  translate([5, 23, 0])
    cube([1, 1, 1.29]);
  translate([6, 23, 0])
    cube([1, 1, 1.33]);
  translate([7, 23, 0])
    cube([1, 1, 1.33]);
  translate([8, 23, 0])
    cube([1, 1, 1.37]);
  translate([9, 23, 0])
    cube([1, 1, 1.37]);
  translate([10, 23, 0])
    cube([1, 1, 1.37]);
  translate([11, 23, 0])
    cube([1, 1, 1.37]);
  translate([12, 23, 0])
    cube([1, 1, 1.33]);
  translate([13, 23, 0])
    cube([1, 1, 1.37]);
  translate([14, 23, 0])
    cube([1, 1, 1.33]);
  translate([15, 23, 0])
    cube([1, 1, 1.33]);
  translate([16, 23, 0])
    cube([1, 1, 1.33]);
  translate([17, 23, 0])
    cube([1, 1, 1.33]);
  translate([18, 23, 0])
    cube([1, 1, 1.33]);
  translate([19, 23, 0])
    cube([1, 1, 1.33]);
  translate([20, 23, 0])
    cube([1, 1, 1.33]);
  translate([21, 23, 0])
    cube([1, 1, 1.33]);
  translate([22, 23, 0])
    cube([1, 1, 1.33]);
  translate([23, 23, 0])
    cube([1, 1, 1.33]);
  translate([24, 23, 0])
    cube([1, 1, 1.33]);
  translate([25, 23, 0])
    cube([1, 1, 1.33]);
  translate([26, 23, 0])
    cube([1, 1, 1.33]);
  translate([27, 23, 0])
    cube([1, 1, 1.33]);
  translate([28, 23, 0])
    cube([1, 1, 1.33]);
  translate([29, 23, 0])
    cube([1, 1, 1.33]);
  translate([30, 23, 0])
    cube([1, 1, 1.33]);
  translate([31, 23, 0])
    cube([1, 1, 1.33]);
  translate([32, 23, 0])
    cube([1, 1, 1.33]);
  translate([33, 23, 0])
    cube([1, 1, 1.33]);
  translate([34, 23, 0])
    cube([1, 1, 1.33]);
  translate([35, 23, 0])
    cube([1, 1, 1.33]);
  translate([36, 23, 0])
    cube([1, 1, 1.33]);
  translate([37, 23, 0])
    cube([1, 1, 1.33]);
  translate([38, 23, 0])
    cube([1, 1, 1.33]);
  translate([39, 23, 0])
    cube([1, 1, 1.33]);
  translate([40, 23, 0])
    cube([1, 1, 1.33]);
  translate([41, 23, 0])
    cube([1, 1, 1.33]);
  translate([42, 23, 0])
    cube([1, 1, 1.33]);
  translate([43, 23, 0])
    cube([1, 1, 1.33]);
  translate([44, 23, 0])
    cube([1, 1, 1.33]);
  translate([45, 23, 0])
    cube([1, 1, 1.33]);
  translate([46, 23, 0])
    cube([1, 1, 1.33]);
  translate([47, 23, 0])
    cube([1, 1, 1.33]);
  translate([48, 23, 0])
    cube([1, 1, 1.33]);
  translate([49, 23, 0])
    cube([1, 1, 1.33]);
  translate([50, 23, 0])
    cube([1, 1, 1.33]);
  translate([51, 23, 0])
    cube([1, 1, 1.33]);
  translate([52, 23, 0])
    cube([1, 1, 1.33]);
  translate([53, 23, 0])
    cube([1, 1, 1.33]);
  translate([54, 23, 0])
    cube([1, 1, 1.33]);
  translate([55, 23, 0])
    cube([1, 1, 1.33]);
  translate([56, 23, 0])
    cube([1, 1, 1.33]);
  translate([57, 23, 0])
    cube([1, 1, 1.33]);
  translate([58, 23, 0])
    cube([1, 1, 1.33]);
  translate([59, 23, 0])
    cube([1, 1, 1.33]);
  translate([60, 23, 0])
    cube([1, 1, 1.29]);
  translate([61, 23, 0])
    cube([1, 1, 1.33]);
  translate([62, 23, 0])
    cube([1, 1, 1.33]);
  translate([63, 23, 0])
    cube([1, 1, 1.33]);
  translate([64, 23, 0])
    cube([1, 1, 1.33]);
  translate([65, 23, 0])
    cube([1, 1, 1.33]);
  translate([66, 23, 0])
    cube([1, 1, 1.33]);
  translate([67, 23, 0])
    cube([1, 1, 1.33]);
  translate([68, 23, 0])
    cube([1, 1, 1.33]);
  translate([69, 23, 0])
    cube([1, 1, 1.33]);
  translate([70, 23, 0])
    cube([1, 1, 1.33]);
  translate([71, 23, 0])
    cube([1, 1, 1.33]);
  translate([72, 23, 0])
    cube([1, 1, 1.25]);
  translate([73, 23, 0])
    cube([1, 1, 1.25]);
  translate([74, 23, 0])
    cube([1, 1, 1.25]);
  translate([75, 23, 0])
    cube([1, 1, 1.29]);
  translate([76, 23, 0])
    cube([1, 1, 1.29]);
  translate([77, 23, 0])
    cube([1, 1, 1.33]);
  translate([78, 23, 0])
    cube([1, 1, 1.25]);
  translate([79, 23, 0])
    cube([1, 1, 1.29]);
  translate([80, 23, 0])
    cube([1, 1, 3.61]);
  translate([81, 23, 0])
    cube([1, 1, 5.41]);
  translate([82, 23, 0])
    cube([1, 1, 3.18]);
  translate([83, 23, 0])
    cube([1, 1, 2.12]);
  translate([84, 23, 0])
    cube([1, 1, 1.49]);
  translate([85, 23, 0])
    cube([1, 1, 1.61]);
  translate([86, 23, 0])
    cube([1, 1, 1.73]);
  translate([87, 23, 0])
    cube([1, 1, 1.29]);
  translate([88, 23, 0])
    cube([1, 1, 1.45]);
  translate([89, 23, 0])
    cube([1, 1, 1.45]);
  translate([90, 23, 0])
    cube([1, 1, 1.57]);
  translate([91, 23, 0])
    cube([1, 1, 1.61]);
  translate([92, 23, 0])
    cube([1, 1, 1.69]);
  translate([93, 23, 0])
    cube([1, 1, 1.45]);
  translate([94, 23, 0])
    cube([1, 1, 1.37]);
  translate([95, 23, 0])
    cube([1, 1, 1.61]);
  translate([96, 23, 0])
    cube([1, 1, 1.61]);
  translate([97, 23, 0])
    cube([1, 1, 1.65]);
  translate([98, 23, 0])
    cube([1, 1, 1.69]);
  translate([99, 23, 0])
    cube([1, 1, 1.76]);
  translate([100, 23, 0])
    cube([1, 1, 1.92]);
  translate([101, 23, 0])
    cube([1, 1, 2.04]);
  translate([102, 23, 0])
    cube([1, 1, 2.16]);
  translate([103, 23, 0])
    cube([1, 1, 1.88]);
  translate([104, 23, 0])
    cube([1, 1, 1.29]);
  translate([105, 23, 0])
    cube([1, 1, 3.14]);
  translate([106, 23, 0])
    cube([1, 1, 3.88]);
  translate([107, 23, 0])
    cube([1, 1, 2.43]);
  translate([108, 23, 0])
    cube([1, 1, 2.39]);
  translate([109, 23, 0])
    cube([1, 1, 2.00]);
  translate([110, 23, 0])
    cube([1, 1, 3.73]);
  translate([111, 23, 0])
    cube([1, 1, 2.20]);
  translate([112, 23, 0])
    cube([1, 1, 2.24]);
  translate([113, 23, 0])
    cube([1, 1, 2.20]);
  translate([114, 23, 0])
    cube([1, 1, 2.59]);
  translate([115, 23, 0])
    cube([1, 1, 5.88]);
  translate([116, 23, 0])
    cube([1, 1, 4.27]);
  translate([117, 23, 0])
    cube([1, 1, 4.78]);
  translate([118, 23, 0])
    cube([1, 1, 1.14]);
  translate([119, 23, 0])
    cube([1, 1, 1.22]);
  translate([120, 23, 0])
    cube([1, 1, 1.25]);
  translate([121, 23, 0])
    cube([1, 1, 1.25]);
  translate([122, 23, 0])
    cube([1, 1, 1.25]);
  translate([123, 23, 0])
    cube([1, 1, 1.25]);
  translate([124, 23, 0])
    cube([1, 1, 1.25]);
  translate([125, 23, 0])
    cube([1, 1, 1.25]);
  translate([126, 23, 0])
    cube([1, 1, 1.25]);
  translate([127, 23, 0])
    cube([1, 1, 1.25]);
  translate([128, 23, 0])
    cube([1, 1, 1.25]);
  translate([129, 23, 0])
    cube([1, 1, 1.25]);
  translate([130, 23, 0])
    cube([1, 1, 1.25]);
  translate([131, 23, 0])
    cube([1, 1, 1.25]);
  translate([132, 23, 0])
    cube([1, 1, 1.25]);
  translate([133, 23, 0])
    cube([1, 1, 1.25]);
  translate([134, 23, 0])
    cube([1, 1, 1.25]);
  translate([135, 23, 0])
    cube([1, 1, 1.25]);
  translate([136, 23, 0])
    cube([1, 1, 1.25]);
  translate([137, 23, 0])
    cube([1, 1, 1.25]);
  translate([138, 23, 0])
    cube([1, 1, 1.25]);
  translate([139, 23, 0])
    cube([1, 1, 1.25]);
  translate([140, 23, 0])
    cube([1, 1, 1.25]);
  translate([141, 23, 0])
    cube([1, 1, 1.25]);
  translate([142, 23, 0])
    cube([1, 1, 1.25]);
  translate([143, 23, 0])
    cube([1, 1, 1.25]);
  translate([144, 23, 0])
    cube([1, 1, 1.25]);
  translate([145, 23, 0])
    cube([1, 1, 1.25]);
  translate([146, 23, 0])
    cube([1, 1, 1.25]);
  translate([147, 23, 0])
    cube([1, 1, 1.25]);
  translate([148, 23, 0])
    cube([1, 1, 1.25]);
  translate([149, 23, 0])
    cube([1, 1, 1.25]);
  translate([150, 23, 0])
    cube([1, 1, 1.25]);
  translate([151, 23, 0])
    cube([1, 1, 1.25]);
  translate([152, 23, 0])
    cube([1, 1, 1.25]);
  translate([153, 23, 0])
    cube([1, 1, 1.25]);
  translate([154, 23, 0])
    cube([1, 1, 1.25]);
  translate([155, 23, 0])
    cube([1, 1, 1.25]);
  translate([156, 23, 0])
    cube([1, 1, 1.25]);
  translate([157, 23, 0])
    cube([1, 1, 1.25]);
  translate([158, 23, 0])
    cube([1, 1, 1.25]);
  translate([159, 23, 0])
    cube([1, 1, 1.25]);
  translate([160, 23, 0])
    cube([1, 1, 1.25]);
  translate([161, 23, 0])
    cube([1, 1, 1.25]);
  translate([162, 23, 0])
    cube([1, 1, 1.25]);
  translate([163, 23, 0])
    cube([1, 1, 1.25]);
  translate([164, 23, 0])
    cube([1, 1, 1.25]);
  translate([165, 23, 0])
    cube([1, 1, 1.25]);
  translate([166, 23, 0])
    cube([1, 1, 1.25]);
  translate([167, 23, 0])
    cube([1, 1, 1.25]);
  translate([168, 23, 0])
    cube([1, 1, 1.25]);
  translate([169, 23, 0])
    cube([1, 1, 1.25]);
  translate([170, 23, 0])
    cube([1, 1, 1.25]);
  translate([171, 23, 0])
    cube([1, 1, 1.25]);
  translate([172, 23, 0])
    cube([1, 1, 1.25]);
  translate([173, 23, 0])
    cube([1, 1, 1.25]);
  translate([174, 23, 0])
    cube([1, 1, 1.25]);
  translate([175, 23, 0])
    cube([1, 1, 1.25]);
  translate([176, 23, 0])
    cube([1, 1, 1.25]);
  translate([177, 23, 0])
    cube([1, 1, 1.25]);
  translate([178, 23, 0])
    cube([1, 1, 1.25]);
  translate([179, 23, 0])
    cube([1, 1, 1.25]);
  translate([180, 23, 0])
    cube([1, 1, 1.25]);
  translate([181, 23, 0])
    cube([1, 1, 1.25]);
  translate([182, 23, 0])
    cube([1, 1, 1.25]);
  translate([183, 23, 0])
    cube([1, 1, 1.25]);
  translate([184, 23, 0])
    cube([1, 1, 1.25]);
  translate([185, 23, 0])
    cube([1, 1, 1.25]);
  translate([186, 23, 0])
    cube([1, 1, 1.25]);
  translate([187, 23, 0])
    cube([1, 1, 1.25]);
  translate([188, 23, 0])
    cube([1, 1, 1.25]);
  translate([189, 23, 0])
    cube([1, 1, 1.25]);
  translate([190, 23, 0])
    cube([1, 1, 1.25]);
  translate([191, 23, 0])
    cube([1, 1, 1.25]);
  translate([192, 23, 0])
    cube([1, 1, 1.25]);
  translate([193, 23, 0])
    cube([1, 1, 1.25]);
  translate([194, 23, 0])
    cube([1, 1, 1.25]);
  translate([195, 23, 0])
    cube([1, 1, 1.25]);
  translate([196, 23, 0])
    cube([1, 1, 1.25]);
  translate([197, 23, 0])
    cube([1, 1, 1.25]);
  translate([198, 23, 0])
    cube([1, 1, 1.25]);
  translate([199, 23, 0])
    cube([1, 1, 1.25]);
  translate([200, 23, 0])
    cube([1, 1, 1.25]);
  translate([201, 23, 0])
    cube([1, 1, 1.25]);
  translate([202, 23, 0])
    cube([1, 1, 1.25]);
  translate([203, 23, 0])
    cube([1, 1, 1.25]);
  translate([204, 23, 0])
    cube([1, 1, 1.25]);
  translate([205, 23, 0])
    cube([1, 1, 1.25]);
  translate([206, 23, 0])
    cube([1, 1, 1.25]);
  translate([207, 23, 0])
    cube([1, 1, 1.25]);
  translate([208, 23, 0])
    cube([1, 1, 1.25]);
  translate([209, 23, 0])
    cube([1, 1, 1.25]);
  translate([210, 23, 0])
    cube([1, 1, 1.25]);
  translate([211, 23, 0])
    cube([1, 1, 1.25]);
  translate([212, 23, 0])
    cube([1, 1, 1.25]);
  translate([213, 23, 0])
    cube([1, 1, 1.25]);
  translate([214, 23, 0])
    cube([1, 1, 1.25]);
  translate([215, 23, 0])
    cube([1, 1, 1.25]);
  translate([216, 23, 0])
    cube([1, 1, 1.25]);
  translate([217, 23, 0])
    cube([1, 1, 1.25]);
  translate([218, 23, 0])
    cube([1, 1, 1.25]);
  translate([219, 23, 0])
    cube([1, 1, 1.25]);
  translate([220, 23, 0])
    cube([1, 1, 1.25]);
  translate([221, 23, 0])
    cube([1, 1, 1.25]);
  translate([222, 23, 0])
    cube([1, 1, 1.25]);
  translate([223, 23, 0])
    cube([1, 1, 1.25]);
  translate([224, 23, 0])
    cube([1, 1, 1.25]);
  translate([225, 23, 0])
    cube([1, 1, 1.25]);
  translate([226, 23, 0])
    cube([1, 1, 1.25]);
  translate([227, 23, 0])
    cube([1, 1, 1.25]);
  translate([228, 23, 0])
    cube([1, 1, 1.25]);
  translate([229, 23, 0])
    cube([1, 1, 1.25]);
  translate([230, 23, 0])
    cube([1, 1, 1.25]);
  translate([231, 23, 0])
    cube([1, 1, 1.25]);
  translate([232, 23, 0])
    cube([1, 1, 1.25]);
  translate([233, 23, 0])
    cube([1, 1, 1.25]);
  translate([234, 23, 0])
    cube([1, 1, 1.25]);
  translate([235, 23, 0])
    cube([1, 1, 1.25]);
  translate([236, 23, 0])
    cube([1, 1, 1.25]);
  translate([237, 23, 0])
    cube([1, 1, 1.25]);
  translate([238, 23, 0])
    cube([1, 1, 1.25]);
  translate([239, 23, 0])
    cube([1, 1, 1.25]);
  translate([240, 23, 0])
    cube([1, 1, 1.25]);
  translate([241, 23, 0])
    cube([1, 1, 1.25]);
  translate([242, 23, 0])
    cube([1, 1, 1.25]);
  translate([243, 23, 0])
    cube([1, 1, 1.25]);
  translate([244, 23, 0])
    cube([1, 1, 1.25]);
  translate([245, 23, 0])
    cube([1, 1, 1.25]);
  translate([246, 23, 0])
    cube([1, 1, 1.25]);
  translate([0, 24, 0])
    cube([1, 1, 1.33]);
  translate([1, 24, 0])
    cube([1, 1, 1.29]);
  translate([2, 24, 0])
    cube([1, 1, 1.29]);
  translate([3, 24, 0])
    cube([1, 1, 1.33]);
  translate([4, 24, 0])
    cube([1, 1, 1.37]);
  translate([5, 24, 0])
    cube([1, 1, 1.37]);
  translate([6, 24, 0])
    cube([1, 1, 1.37]);
  translate([7, 24, 0])
    cube([1, 1, 1.37]);
  translate([8, 24, 0])
    cube([1, 1, 1.37]);
  translate([9, 24, 0])
    cube([1, 1, 1.37]);
  translate([10, 24, 0])
    cube([1, 1, 1.41]);
  translate([11, 24, 0])
    cube([1, 1, 1.37]);
  translate([12, 24, 0])
    cube([1, 1, 1.33]);
  translate([13, 24, 0])
    cube([1, 1, 1.37]);
  translate([14, 24, 0])
    cube([1, 1, 1.29]);
  translate([15, 24, 0])
    cube([1, 1, 1.29]);
  translate([16, 24, 0])
    cube([1, 1, 1.33]);
  translate([17, 24, 0])
    cube([1, 1, 1.33]);
  translate([18, 24, 0])
    cube([1, 1, 1.33]);
  translate([19, 24, 0])
    cube([1, 1, 1.33]);
  translate([20, 24, 0])
    cube([1, 1, 1.29]);
  translate([21, 24, 0])
    cube([1, 1, 1.33]);
  translate([22, 24, 0])
    cube([1, 1, 1.29]);
  translate([23, 24, 0])
    cube([1, 1, 1.29]);
  translate([24, 24, 0])
    cube([1, 1, 1.33]);
  translate([25, 24, 0])
    cube([1, 1, 1.33]);
  translate([26, 24, 0])
    cube([1, 1, 1.33]);
  translate([27, 24, 0])
    cube([1, 1, 1.33]);
  translate([28, 24, 0])
    cube([1, 1, 1.25]);
  translate([29, 24, 0])
    cube([1, 1, 1.33]);
  translate([30, 24, 0])
    cube([1, 1, 1.29]);
  translate([31, 24, 0])
    cube([1, 1, 1.29]);
  translate([32, 24, 0])
    cube([1, 1, 1.33]);
  translate([33, 24, 0])
    cube([1, 1, 1.37]);
  translate([34, 24, 0])
    cube([1, 1, 1.33]);
  translate([35, 24, 0])
    cube([1, 1, 1.33]);
  translate([36, 24, 0])
    cube([1, 1, 1.33]);
  translate([37, 24, 0])
    cube([1, 1, 1.33]);
  translate([38, 24, 0])
    cube([1, 1, 1.33]);
  translate([39, 24, 0])
    cube([1, 1, 1.33]);
  translate([40, 24, 0])
    cube([1, 1, 1.33]);
  translate([41, 24, 0])
    cube([1, 1, 1.33]);
  translate([42, 24, 0])
    cube([1, 1, 1.33]);
  translate([43, 24, 0])
    cube([1, 1, 1.33]);
  translate([44, 24, 0])
    cube([1, 1, 1.29]);
  translate([45, 24, 0])
    cube([1, 1, 1.29]);
  translate([46, 24, 0])
    cube([1, 1, 1.33]);
  translate([47, 24, 0])
    cube([1, 1, 1.33]);
  translate([48, 24, 0])
    cube([1, 1, 1.33]);
  translate([49, 24, 0])
    cube([1, 1, 1.33]);
  translate([50, 24, 0])
    cube([1, 1, 1.33]);
  translate([51, 24, 0])
    cube([1, 1, 1.33]);
  translate([52, 24, 0])
    cube([1, 1, 1.33]);
  translate([53, 24, 0])
    cube([1, 1, 1.33]);
  translate([54, 24, 0])
    cube([1, 1, 1.33]);
  translate([55, 24, 0])
    cube([1, 1, 1.33]);
  translate([56, 24, 0])
    cube([1, 1, 1.33]);
  translate([57, 24, 0])
    cube([1, 1, 1.33]);
  translate([58, 24, 0])
    cube([1, 1, 1.33]);
  translate([59, 24, 0])
    cube([1, 1, 1.33]);
  translate([60, 24, 0])
    cube([1, 1, 1.33]);
  translate([61, 24, 0])
    cube([1, 1, 1.33]);
  translate([62, 24, 0])
    cube([1, 1, 1.33]);
  translate([63, 24, 0])
    cube([1, 1, 1.33]);
  translate([64, 24, 0])
    cube([1, 1, 1.33]);
  translate([65, 24, 0])
    cube([1, 1, 1.33]);
  translate([66, 24, 0])
    cube([1, 1, 1.33]);
  translate([67, 24, 0])
    cube([1, 1, 1.33]);
  translate([68, 24, 0])
    cube([1, 1, 1.29]);
  translate([69, 24, 0])
    cube([1, 1, 1.37]);
  translate([70, 24, 0])
    cube([1, 1, 1.33]);
  translate([71, 24, 0])
    cube([1, 1, 1.33]);
  translate([72, 24, 0])
    cube([1, 1, 1.29]);
  translate([73, 24, 0])
    cube([1, 1, 1.29]);
  translate([74, 24, 0])
    cube([1, 1, 1.29]);
  translate([75, 24, 0])
    cube([1, 1, 1.29]);
  translate([76, 24, 0])
    cube([1, 1, 1.29]);
  translate([77, 24, 0])
    cube([1, 1, 1.29]);
  translate([78, 24, 0])
    cube([1, 1, 1.49]);
  translate([79, 24, 0])
    cube([1, 1, 2.43]);
  translate([80, 24, 0])
    cube([1, 1, 6.90]);
  translate([81, 24, 0])
    cube([1, 1, 3.22]);
  translate([82, 24, 0])
    cube([1, 1, 1.69]);
  translate([83, 24, 0])
    cube([1, 1, 1.73]);
  translate([84, 24, 0])
    cube([1, 1, 2.12]);
  translate([85, 24, 0])
    cube([1, 1, 1.29]);
  translate([86, 24, 0])
    cube([1, 1, 1.53]);
  translate([87, 24, 0])
    cube([1, 1, 1.65]);
  translate([88, 24, 0])
    cube([1, 1, 1.49]);
  translate([89, 24, 0])
    cube([1, 1, 1.41]);
  translate([90, 24, 0])
    cube([1, 1, 1.37]);
  translate([91, 24, 0])
    cube([1, 1, 1.33]);
  translate([92, 24, 0])
    cube([1, 1, 1.33]);
  translate([93, 24, 0])
    cube([1, 1, 1.61]);
  translate([94, 24, 0])
    cube([1, 1, 1.65]);
  translate([95, 24, 0])
    cube([1, 1, 1.76]);
  translate([96, 24, 0])
    cube([1, 1, 1.88]);
  translate([97, 24, 0])
    cube([1, 1, 1.96]);
  translate([98, 24, 0])
    cube([1, 1, 2.00]);
  translate([99, 24, 0])
    cube([1, 1, 2.16]);
  translate([100, 24, 0])
    cube([1, 1, 2.47]);
  translate([101, 24, 0])
    cube([1, 1, 2.67]);
  translate([102, 24, 0])
    cube([1, 1, 2.67]);
  translate([103, 24, 0])
    cube([1, 1, 2.59]);
  translate([104, 24, 0])
    cube([1, 1, 2.27]);
  translate([105, 24, 0])
    cube([1, 1, 1.61]);
  translate([106, 24, 0])
    cube([1, 1, 2.43]);
  translate([107, 24, 0])
    cube([1, 1, 2.16]);
  translate([108, 24, 0])
    cube([1, 1, 3.18]);
  translate([109, 24, 0])
    cube([1, 1, 3.33]);
  translate([110, 24, 0])
    cube([1, 1, 1.41]);
  translate([111, 24, 0])
    cube([1, 1, 2.55]);
  translate([112, 24, 0])
    cube([1, 1, 2.39]);
  translate([113, 24, 0])
    cube([1, 1, 2.04]);
  translate([114, 24, 0])
    cube([1, 1, 2.16]);
  translate([115, 24, 0])
    cube([1, 1, 1.69]);
  translate([116, 24, 0])
    cube([1, 1, 1.96]);
  translate([117, 24, 0])
    cube([1, 1, 4.16]);
  translate([118, 24, 0])
    cube([1, 1, 5.06]);
  translate([119, 24, 0])
    cube([1, 1, 1.92]);
  translate([120, 24, 0])
    cube([1, 1, 1.18]);
  translate([121, 24, 0])
    cube([1, 1, 1.25]);
  translate([122, 24, 0])
    cube([1, 1, 1.25]);
  translate([123, 24, 0])
    cube([1, 1, 1.25]);
  translate([124, 24, 0])
    cube([1, 1, 1.25]);
  translate([125, 24, 0])
    cube([1, 1, 1.25]);
  translate([126, 24, 0])
    cube([1, 1, 1.25]);
  translate([127, 24, 0])
    cube([1, 1, 1.25]);
  translate([128, 24, 0])
    cube([1, 1, 1.25]);
  translate([129, 24, 0])
    cube([1, 1, 1.25]);
  translate([130, 24, 0])
    cube([1, 1, 1.25]);
  translate([131, 24, 0])
    cube([1, 1, 1.25]);
  translate([132, 24, 0])
    cube([1, 1, 1.25]);
  translate([133, 24, 0])
    cube([1, 1, 1.25]);
  translate([134, 24, 0])
    cube([1, 1, 1.25]);
  translate([135, 24, 0])
    cube([1, 1, 1.25]);
  translate([136, 24, 0])
    cube([1, 1, 1.25]);
  translate([137, 24, 0])
    cube([1, 1, 1.25]);
  translate([138, 24, 0])
    cube([1, 1, 1.25]);
  translate([139, 24, 0])
    cube([1, 1, 1.25]);
  translate([140, 24, 0])
    cube([1, 1, 1.25]);
  translate([141, 24, 0])
    cube([1, 1, 1.25]);
  translate([142, 24, 0])
    cube([1, 1, 1.25]);
  translate([143, 24, 0])
    cube([1, 1, 1.25]);
  translate([144, 24, 0])
    cube([1, 1, 1.25]);
  translate([145, 24, 0])
    cube([1, 1, 1.25]);
  translate([146, 24, 0])
    cube([1, 1, 1.25]);
  translate([147, 24, 0])
    cube([1, 1, 1.25]);
  translate([148, 24, 0])
    cube([1, 1, 1.25]);
  translate([149, 24, 0])
    cube([1, 1, 1.25]);
  translate([150, 24, 0])
    cube([1, 1, 1.25]);
  translate([151, 24, 0])
    cube([1, 1, 1.25]);
  translate([152, 24, 0])
    cube([1, 1, 1.25]);
  translate([153, 24, 0])
    cube([1, 1, 1.25]);
  translate([154, 24, 0])
    cube([1, 1, 1.25]);
  translate([155, 24, 0])
    cube([1, 1, 1.25]);
  translate([156, 24, 0])
    cube([1, 1, 1.25]);
  translate([157, 24, 0])
    cube([1, 1, 1.25]);
  translate([158, 24, 0])
    cube([1, 1, 1.25]);
  translate([159, 24, 0])
    cube([1, 1, 1.25]);
  translate([160, 24, 0])
    cube([1, 1, 1.25]);
  translate([161, 24, 0])
    cube([1, 1, 1.25]);
  translate([162, 24, 0])
    cube([1, 1, 1.25]);
  translate([163, 24, 0])
    cube([1, 1, 1.25]);
  translate([164, 24, 0])
    cube([1, 1, 1.25]);
  translate([165, 24, 0])
    cube([1, 1, 1.25]);
  translate([166, 24, 0])
    cube([1, 1, 1.25]);
  translate([167, 24, 0])
    cube([1, 1, 1.25]);
  translate([168, 24, 0])
    cube([1, 1, 1.25]);
  translate([169, 24, 0])
    cube([1, 1, 1.25]);
  translate([170, 24, 0])
    cube([1, 1, 1.25]);
  translate([171, 24, 0])
    cube([1, 1, 1.25]);
  translate([172, 24, 0])
    cube([1, 1, 1.25]);
  translate([173, 24, 0])
    cube([1, 1, 1.25]);
  translate([174, 24, 0])
    cube([1, 1, 1.25]);
  translate([175, 24, 0])
    cube([1, 1, 1.25]);
  translate([176, 24, 0])
    cube([1, 1, 1.25]);
  translate([177, 24, 0])
    cube([1, 1, 1.25]);
  translate([178, 24, 0])
    cube([1, 1, 1.25]);
  translate([179, 24, 0])
    cube([1, 1, 1.25]);
  translate([180, 24, 0])
    cube([1, 1, 1.25]);
  translate([181, 24, 0])
    cube([1, 1, 1.29]);
  translate([182, 24, 0])
    cube([1, 1, 1.25]);
  translate([183, 24, 0])
    cube([1, 1, 1.25]);
  translate([184, 24, 0])
    cube([1, 1, 1.25]);
  translate([185, 24, 0])
    cube([1, 1, 1.25]);
  translate([186, 24, 0])
    cube([1, 1, 1.25]);
  translate([187, 24, 0])
    cube([1, 1, 1.25]);
  translate([188, 24, 0])
    cube([1, 1, 1.25]);
  translate([189, 24, 0])
    cube([1, 1, 1.25]);
  translate([190, 24, 0])
    cube([1, 1, 1.25]);
  translate([191, 24, 0])
    cube([1, 1, 1.25]);
  translate([192, 24, 0])
    cube([1, 1, 1.25]);
  translate([193, 24, 0])
    cube([1, 1, 1.25]);
  translate([194, 24, 0])
    cube([1, 1, 1.25]);
  translate([195, 24, 0])
    cube([1, 1, 1.25]);
  translate([196, 24, 0])
    cube([1, 1, 1.25]);
  translate([197, 24, 0])
    cube([1, 1, 1.25]);
  translate([198, 24, 0])
    cube([1, 1, 1.25]);
  translate([199, 24, 0])
    cube([1, 1, 1.25]);
  translate([200, 24, 0])
    cube([1, 1, 1.25]);
  translate([201, 24, 0])
    cube([1, 1, 1.25]);
  translate([202, 24, 0])
    cube([1, 1, 1.25]);
  translate([203, 24, 0])
    cube([1, 1, 1.25]);
  translate([204, 24, 0])
    cube([1, 1, 1.25]);
  translate([205, 24, 0])
    cube([1, 1, 1.25]);
  translate([206, 24, 0])
    cube([1, 1, 1.25]);
  translate([207, 24, 0])
    cube([1, 1, 1.25]);
  translate([208, 24, 0])
    cube([1, 1, 1.25]);
  translate([209, 24, 0])
    cube([1, 1, 1.25]);
  translate([210, 24, 0])
    cube([1, 1, 1.25]);
  translate([211, 24, 0])
    cube([1, 1, 1.25]);
  translate([212, 24, 0])
    cube([1, 1, 1.25]);
  translate([213, 24, 0])
    cube([1, 1, 1.25]);
  translate([214, 24, 0])
    cube([1, 1, 1.25]);
  translate([215, 24, 0])
    cube([1, 1, 1.25]);
  translate([216, 24, 0])
    cube([1, 1, 1.25]);
  translate([217, 24, 0])
    cube([1, 1, 1.25]);
  translate([218, 24, 0])
    cube([1, 1, 1.25]);
  translate([219, 24, 0])
    cube([1, 1, 1.25]);
  translate([220, 24, 0])
    cube([1, 1, 1.25]);
  translate([221, 24, 0])
    cube([1, 1, 1.25]);
  translate([222, 24, 0])
    cube([1, 1, 1.25]);
  translate([223, 24, 0])
    cube([1, 1, 1.25]);
  translate([224, 24, 0])
    cube([1, 1, 1.25]);
  translate([225, 24, 0])
    cube([1, 1, 1.25]);
  translate([226, 24, 0])
    cube([1, 1, 1.25]);
  translate([227, 24, 0])
    cube([1, 1, 1.25]);
  translate([228, 24, 0])
    cube([1, 1, 1.25]);
  translate([229, 24, 0])
    cube([1, 1, 1.25]);
  translate([230, 24, 0])
    cube([1, 1, 1.25]);
  translate([231, 24, 0])
    cube([1, 1, 1.25]);
  translate([232, 24, 0])
    cube([1, 1, 1.25]);
  translate([233, 24, 0])
    cube([1, 1, 1.25]);
  translate([234, 24, 0])
    cube([1, 1, 1.25]);
  translate([235, 24, 0])
    cube([1, 1, 1.25]);
  translate([236, 24, 0])
    cube([1, 1, 1.25]);
  translate([237, 24, 0])
    cube([1, 1, 1.25]);
  translate([238, 24, 0])
    cube([1, 1, 1.25]);
  translate([239, 24, 0])
    cube([1, 1, 1.25]);
  translate([240, 24, 0])
    cube([1, 1, 1.25]);
  translate([241, 24, 0])
    cube([1, 1, 1.25]);
  translate([242, 24, 0])
    cube([1, 1, 1.25]);
  translate([243, 24, 0])
    cube([1, 1, 1.25]);
  translate([244, 24, 0])
    cube([1, 1, 1.25]);
  translate([245, 24, 0])
    cube([1, 1, 1.25]);
  translate([246, 24, 0])
    cube([1, 1, 1.25]);
  translate([0, 25, 0])
    cube([1, 1, 1.33]);
  translate([1, 25, 0])
    cube([1, 1, 1.37]);
  translate([2, 25, 0])
    cube([1, 1, 1.37]);
  translate([3, 25, 0])
    cube([1, 1, 1.33]);
  translate([4, 25, 0])
    cube([1, 1, 1.37]);
  translate([5, 25, 0])
    cube([1, 1, 1.37]);
  translate([6, 25, 0])
    cube([1, 1, 1.37]);
  translate([7, 25, 0])
    cube([1, 1, 1.37]);
  translate([8, 25, 0])
    cube([1, 1, 1.37]);
  translate([9, 25, 0])
    cube([1, 1, 1.29]);
  translate([10, 25, 0])
    cube([1, 1, 1.33]);
  translate([11, 25, 0])
    cube([1, 1, 1.33]);
  translate([12, 25, 0])
    cube([1, 1, 1.33]);
  translate([13, 25, 0])
    cube([1, 1, 1.37]);
  translate([14, 25, 0])
    cube([1, 1, 1.37]);
  translate([15, 25, 0])
    cube([1, 1, 1.37]);
  translate([16, 25, 0])
    cube([1, 1, 1.33]);
  translate([17, 25, 0])
    cube([1, 1, 1.33]);
  translate([18, 25, 0])
    cube([1, 1, 1.33]);
  translate([19, 25, 0])
    cube([1, 1, 1.33]);
  translate([20, 25, 0])
    cube([1, 1, 1.33]);
  translate([21, 25, 0])
    cube([1, 1, 1.37]);
  translate([22, 25, 0])
    cube([1, 1, 1.37]);
  translate([23, 25, 0])
    cube([1, 1, 1.37]);
  translate([24, 25, 0])
    cube([1, 1, 1.33]);
  translate([25, 25, 0])
    cube([1, 1, 1.37]);
  translate([26, 25, 0])
    cube([1, 1, 1.37]);
  translate([27, 25, 0])
    cube([1, 1, 1.33]);
  translate([28, 25, 0])
    cube([1, 1, 1.37]);
  translate([29, 25, 0])
    cube([1, 1, 1.33]);
  translate([30, 25, 0])
    cube([1, 1, 1.37]);
  translate([31, 25, 0])
    cube([1, 1, 1.37]);
  translate([32, 25, 0])
    cube([1, 1, 1.33]);
  translate([33, 25, 0])
    cube([1, 1, 1.29]);
  translate([34, 25, 0])
    cube([1, 1, 1.37]);
  translate([35, 25, 0])
    cube([1, 1, 1.33]);
  translate([36, 25, 0])
    cube([1, 1, 1.33]);
  translate([37, 25, 0])
    cube([1, 1, 1.33]);
  translate([38, 25, 0])
    cube([1, 1, 1.33]);
  translate([39, 25, 0])
    cube([1, 1, 1.33]);
  translate([40, 25, 0])
    cube([1, 1, 1.33]);
  translate([41, 25, 0])
    cube([1, 1, 1.33]);
  translate([42, 25, 0])
    cube([1, 1, 1.33]);
  translate([43, 25, 0])
    cube([1, 1, 1.33]);
  translate([44, 25, 0])
    cube([1, 1, 1.37]);
  translate([45, 25, 0])
    cube([1, 1, 1.37]);
  translate([46, 25, 0])
    cube([1, 1, 1.33]);
  translate([47, 25, 0])
    cube([1, 1, 1.33]);
  translate([48, 25, 0])
    cube([1, 1, 1.33]);
  translate([49, 25, 0])
    cube([1, 1, 1.33]);
  translate([50, 25, 0])
    cube([1, 1, 1.33]);
  translate([51, 25, 0])
    cube([1, 1, 1.33]);
  translate([52, 25, 0])
    cube([1, 1, 1.33]);
  translate([53, 25, 0])
    cube([1, 1, 1.33]);
  translate([54, 25, 0])
    cube([1, 1, 1.33]);
  translate([55, 25, 0])
    cube([1, 1, 1.33]);
  translate([56, 25, 0])
    cube([1, 1, 1.33]);
  translate([57, 25, 0])
    cube([1, 1, 1.33]);
  translate([58, 25, 0])
    cube([1, 1, 1.33]);
  translate([59, 25, 0])
    cube([1, 1, 1.33]);
  translate([60, 25, 0])
    cube([1, 1, 1.33]);
  translate([61, 25, 0])
    cube([1, 1, 1.33]);
  translate([62, 25, 0])
    cube([1, 1, 1.33]);
  translate([63, 25, 0])
    cube([1, 1, 1.33]);
  translate([64, 25, 0])
    cube([1, 1, 1.33]);
  translate([65, 25, 0])
    cube([1, 1, 1.33]);
  translate([66, 25, 0])
    cube([1, 1, 1.33]);
  translate([67, 25, 0])
    cube([1, 1, 1.33]);
  translate([68, 25, 0])
    cube([1, 1, 1.33]);
  translate([69, 25, 0])
    cube([1, 1, 1.37]);
  translate([70, 25, 0])
    cube([1, 1, 1.33]);
  translate([71, 25, 0])
    cube([1, 1, 1.33]);
  translate([72, 25, 0])
    cube([1, 1, 1.33]);
  translate([73, 25, 0])
    cube([1, 1, 1.29]);
  translate([74, 25, 0])
    cube([1, 1, 1.29]);
  translate([75, 25, 0])
    cube([1, 1, 1.29]);
  translate([76, 25, 0])
    cube([1, 1, 1.29]);
  translate([77, 25, 0])
    cube([1, 1, 1.29]);
  translate([78, 25, 0])
    cube([1, 1, 1.29]);
  translate([79, 25, 0])
    cube([1, 1, 8.27]);
  translate([80, 25, 0])
    cube([1, 1, 5.18]);
  translate([81, 25, 0])
    cube([1, 1, 2.67]);
  translate([82, 25, 0])
    cube([1, 1, 2.31]);
  translate([83, 25, 0])
    cube([1, 1, 2.78]);
  translate([84, 25, 0])
    cube([1, 1, 2.39]);
  translate([85, 25, 0])
    cube([1, 1, 1.49]);
  translate([86, 25, 0])
    cube([1, 1, 1.41]);
  translate([87, 25, 0])
    cube([1, 1, 1.37]);
  translate([88, 25, 0])
    cube([1, 1, 1.37]);
  translate([89, 25, 0])
    cube([1, 1, 1.45]);
  translate([90, 25, 0])
    cube([1, 1, 1.57]);
  translate([91, 25, 0])
    cube([1, 1, 1.61]);
  translate([92, 25, 0])
    cube([1, 1, 1.69]);
  translate([93, 25, 0])
    cube([1, 1, 1.57]);
  translate([94, 25, 0])
    cube([1, 1, 1.57]);
  translate([95, 25, 0])
    cube([1, 1, 1.69]);
  translate([96, 25, 0])
    cube([1, 1, 1.80]);
  translate([97, 25, 0])
    cube([1, 1, 1.88]);
  translate([98, 25, 0])
    cube([1, 1, 2.04]);
  translate([99, 25, 0])
    cube([1, 1, 2.20]);
  translate([100, 25, 0])
    cube([1, 1, 2.35]);
  translate([101, 25, 0])
    cube([1, 1, 2.59]);
  translate([102, 25, 0])
    cube([1, 1, 2.75]);
  translate([103, 25, 0])
    cube([1, 1, 2.82]);
  translate([104, 25, 0])
    cube([1, 1, 2.55]);
  translate([105, 25, 0])
    cube([1, 1, 2.24]);
  translate([106, 25, 0])
    cube([1, 1, 3.53]);
  translate([107, 25, 0])
    cube([1, 1, 3.25]);
  translate([108, 25, 0])
    cube([1, 1, 2.20]);
  translate([109, 25, 0])
    cube([1, 1, 2.43]);
  translate([110, 25, 0])
    cube([1, 1, 2.35]);
  translate([111, 25, 0])
    cube([1, 1, 3.14]);
  translate([112, 25, 0])
    cube([1, 1, 2.24]);
  translate([113, 25, 0])
    cube([1, 1, 2.31]);
  translate([114, 25, 0])
    cube([1, 1, 2.35]);
  translate([115, 25, 0])
    cube([1, 1, 2.51]);
  translate([116, 25, 0])
    cube([1, 1, 1.96]);
  translate([117, 25, 0])
    cube([1, 1, 3.02]);
  translate([118, 25, 0])
    cube([1, 1, 6.16]);
  translate([119, 25, 0])
    cube([1, 1, 5.57]);
  translate([120, 25, 0])
    cube([1, 1, 1.25]);
  translate([121, 25, 0])
    cube([1, 1, 1.25]);
  translate([122, 25, 0])
    cube([1, 1, 1.25]);
  translate([123, 25, 0])
    cube([1, 1, 1.25]);
  translate([124, 25, 0])
    cube([1, 1, 1.25]);
  translate([125, 25, 0])
    cube([1, 1, 1.25]);
  translate([126, 25, 0])
    cube([1, 1, 1.25]);
  translate([127, 25, 0])
    cube([1, 1, 1.25]);
  translate([128, 25, 0])
    cube([1, 1, 1.25]);
  translate([129, 25, 0])
    cube([1, 1, 1.25]);
  translate([130, 25, 0])
    cube([1, 1, 1.25]);
  translate([131, 25, 0])
    cube([1, 1, 1.25]);
  translate([132, 25, 0])
    cube([1, 1, 1.25]);
  translate([133, 25, 0])
    cube([1, 1, 1.25]);
  translate([134, 25, 0])
    cube([1, 1, 1.25]);
  translate([135, 25, 0])
    cube([1, 1, 1.25]);
  translate([136, 25, 0])
    cube([1, 1, 1.25]);
  translate([137, 25, 0])
    cube([1, 1, 1.25]);
  translate([138, 25, 0])
    cube([1, 1, 1.25]);
  translate([139, 25, 0])
    cube([1, 1, 1.25]);
  translate([140, 25, 0])
    cube([1, 1, 1.25]);
  translate([141, 25, 0])
    cube([1, 1, 1.25]);
  translate([142, 25, 0])
    cube([1, 1, 1.25]);
  translate([143, 25, 0])
    cube([1, 1, 1.25]);
  translate([144, 25, 0])
    cube([1, 1, 1.25]);
  translate([145, 25, 0])
    cube([1, 1, 1.25]);
  translate([146, 25, 0])
    cube([1, 1, 1.25]);
  translate([147, 25, 0])
    cube([1, 1, 1.25]);
  translate([148, 25, 0])
    cube([1, 1, 1.25]);
  translate([149, 25, 0])
    cube([1, 1, 1.25]);
  translate([150, 25, 0])
    cube([1, 1, 1.25]);
  translate([151, 25, 0])
    cube([1, 1, 1.25]);
  translate([152, 25, 0])
    cube([1, 1, 1.25]);
  translate([153, 25, 0])
    cube([1, 1, 1.25]);
  translate([154, 25, 0])
    cube([1, 1, 1.25]);
  translate([155, 25, 0])
    cube([1, 1, 1.25]);
  translate([156, 25, 0])
    cube([1, 1, 1.25]);
  translate([157, 25, 0])
    cube([1, 1, 1.25]);
  translate([158, 25, 0])
    cube([1, 1, 1.25]);
  translate([159, 25, 0])
    cube([1, 1, 1.25]);
  translate([160, 25, 0])
    cube([1, 1, 1.25]);
  translate([161, 25, 0])
    cube([1, 1, 1.25]);
  translate([162, 25, 0])
    cube([1, 1, 1.25]);
  translate([163, 25, 0])
    cube([1, 1, 1.25]);
  translate([164, 25, 0])
    cube([1, 1, 1.25]);
  translate([165, 25, 0])
    cube([1, 1, 1.25]);
  translate([166, 25, 0])
    cube([1, 1, 1.25]);
  translate([167, 25, 0])
    cube([1, 1, 1.25]);
  translate([168, 25, 0])
    cube([1, 1, 1.25]);
  translate([169, 25, 0])
    cube([1, 1, 1.25]);
  translate([170, 25, 0])
    cube([1, 1, 1.25]);
  translate([171, 25, 0])
    cube([1, 1, 1.25]);
  translate([172, 25, 0])
    cube([1, 1, 1.25]);
  translate([173, 25, 0])
    cube([1, 1, 1.25]);
  translate([174, 25, 0])
    cube([1, 1, 1.25]);
  translate([175, 25, 0])
    cube([1, 1, 1.25]);
  translate([176, 25, 0])
    cube([1, 1, 1.25]);
  translate([177, 25, 0])
    cube([1, 1, 1.25]);
  translate([178, 25, 0])
    cube([1, 1, 1.25]);
  translate([179, 25, 0])
    cube([1, 1, 1.25]);
  translate([180, 25, 0])
    cube([1, 1, 1.25]);
  translate([181, 25, 0])
    cube([1, 1, 1.29]);
  translate([182, 25, 0])
    cube([1, 1, 1.25]);
  translate([183, 25, 0])
    cube([1, 1, 1.25]);
  translate([184, 25, 0])
    cube([1, 1, 1.25]);
  translate([185, 25, 0])
    cube([1, 1, 1.25]);
  translate([186, 25, 0])
    cube([1, 1, 1.25]);
  translate([187, 25, 0])
    cube([1, 1, 1.25]);
  translate([188, 25, 0])
    cube([1, 1, 1.25]);
  translate([189, 25, 0])
    cube([1, 1, 1.25]);
  translate([190, 25, 0])
    cube([1, 1, 1.25]);
  translate([191, 25, 0])
    cube([1, 1, 1.25]);
  translate([192, 25, 0])
    cube([1, 1, 1.25]);
  translate([193, 25, 0])
    cube([1, 1, 1.25]);
  translate([194, 25, 0])
    cube([1, 1, 1.25]);
  translate([195, 25, 0])
    cube([1, 1, 1.25]);
  translate([196, 25, 0])
    cube([1, 1, 1.25]);
  translate([197, 25, 0])
    cube([1, 1, 1.25]);
  translate([198, 25, 0])
    cube([1, 1, 1.25]);
  translate([199, 25, 0])
    cube([1, 1, 1.25]);
  translate([200, 25, 0])
    cube([1, 1, 1.25]);
  translate([201, 25, 0])
    cube([1, 1, 1.25]);
  translate([202, 25, 0])
    cube([1, 1, 1.25]);
  translate([203, 25, 0])
    cube([1, 1, 1.25]);
  translate([204, 25, 0])
    cube([1, 1, 1.25]);
  translate([205, 25, 0])
    cube([1, 1, 1.25]);
  translate([206, 25, 0])
    cube([1, 1, 1.25]);
  translate([207, 25, 0])
    cube([1, 1, 1.25]);
  translate([208, 25, 0])
    cube([1, 1, 1.25]);
  translate([209, 25, 0])
    cube([1, 1, 1.25]);
  translate([210, 25, 0])
    cube([1, 1, 1.25]);
  translate([211, 25, 0])
    cube([1, 1, 1.25]);
  translate([212, 25, 0])
    cube([1, 1, 1.25]);
  translate([213, 25, 0])
    cube([1, 1, 1.25]);
  translate([214, 25, 0])
    cube([1, 1, 1.25]);
  translate([215, 25, 0])
    cube([1, 1, 1.25]);
  translate([216, 25, 0])
    cube([1, 1, 1.25]);
  translate([217, 25, 0])
    cube([1, 1, 1.25]);
  translate([218, 25, 0])
    cube([1, 1, 1.25]);
  translate([219, 25, 0])
    cube([1, 1, 1.25]);
  translate([220, 25, 0])
    cube([1, 1, 1.25]);
  translate([221, 25, 0])
    cube([1, 1, 1.25]);
  translate([222, 25, 0])
    cube([1, 1, 1.25]);
  translate([223, 25, 0])
    cube([1, 1, 1.25]);
  translate([224, 25, 0])
    cube([1, 1, 1.25]);
  translate([225, 25, 0])
    cube([1, 1, 1.25]);
  translate([226, 25, 0])
    cube([1, 1, 1.25]);
  translate([227, 25, 0])
    cube([1, 1, 1.25]);
  translate([228, 25, 0])
    cube([1, 1, 1.25]);
  translate([229, 25, 0])
    cube([1, 1, 1.25]);
  translate([230, 25, 0])
    cube([1, 1, 1.25]);
  translate([231, 25, 0])
    cube([1, 1, 1.25]);
  translate([232, 25, 0])
    cube([1, 1, 1.25]);
  translate([233, 25, 0])
    cube([1, 1, 1.25]);
  translate([234, 25, 0])
    cube([1, 1, 1.25]);
  translate([235, 25, 0])
    cube([1, 1, 1.25]);
  translate([236, 25, 0])
    cube([1, 1, 1.25]);
  translate([237, 25, 0])
    cube([1, 1, 1.25]);
  translate([238, 25, 0])
    cube([1, 1, 1.25]);
  translate([239, 25, 0])
    cube([1, 1, 1.25]);
  translate([240, 25, 0])
    cube([1, 1, 1.25]);
  translate([241, 25, 0])
    cube([1, 1, 1.25]);
  translate([242, 25, 0])
    cube([1, 1, 1.25]);
  translate([243, 25, 0])
    cube([1, 1, 1.25]);
  translate([244, 25, 0])
    cube([1, 1, 1.25]);
  translate([245, 25, 0])
    cube([1, 1, 1.25]);
  translate([246, 25, 0])
    cube([1, 1, 1.25]);
  translate([0, 26, 0])
    cube([1, 1, 1.33]);
  translate([1, 26, 0])
    cube([1, 1, 1.37]);
  translate([2, 26, 0])
    cube([1, 1, 1.37]);
  translate([3, 26, 0])
    cube([1, 1, 1.37]);
  translate([4, 26, 0])
    cube([1, 1, 1.37]);
  translate([5, 26, 0])
    cube([1, 1, 1.37]);
  translate([6, 26, 0])
    cube([1, 1, 1.33]);
  translate([7, 26, 0])
    cube([1, 1, 1.37]);
  translate([8, 26, 0])
    cube([1, 1, 1.37]);
  translate([9, 26, 0])
    cube([1, 1, 1.33]);
  translate([10, 26, 0])
    cube([1, 1, 1.33]);
  translate([11, 26, 0])
    cube([1, 1, 1.33]);
  translate([12, 26, 0])
    cube([1, 1, 1.33]);
  translate([13, 26, 0])
    cube([1, 1, 1.41]);
  translate([14, 26, 0])
    cube([1, 1, 1.37]);
  translate([15, 26, 0])
    cube([1, 1, 1.37]);
  translate([16, 26, 0])
    cube([1, 1, 1.33]);
  translate([17, 26, 0])
    cube([1, 1, 1.33]);
  translate([18, 26, 0])
    cube([1, 1, 1.33]);
  translate([19, 26, 0])
    cube([1, 1, 1.33]);
  translate([20, 26, 0])
    cube([1, 1, 1.41]);
  translate([21, 26, 0])
    cube([1, 1, 1.41]);
  translate([22, 26, 0])
    cube([1, 1, 1.33]);
  translate([23, 26, 0])
    cube([1, 1, 1.33]);
  translate([24, 26, 0])
    cube([1, 1, 1.33]);
  translate([25, 26, 0])
    cube([1, 1, 1.33]);
  translate([26, 26, 0])
    cube([1, 1, 1.33]);
  translate([27, 26, 0])
    cube([1, 1, 1.33]);
  translate([28, 26, 0])
    cube([1, 1, 1.37]);
  translate([29, 26, 0])
    cube([1, 1, 1.41]);
  translate([30, 26, 0])
    cube([1, 1, 1.33]);
  translate([31, 26, 0])
    cube([1, 1, 1.33]);
  translate([32, 26, 0])
    cube([1, 1, 1.37]);
  translate([33, 26, 0])
    cube([1, 1, 1.37]);
  translate([34, 26, 0])
    cube([1, 1, 1.37]);
  translate([35, 26, 0])
    cube([1, 1, 1.33]);
  translate([36, 26, 0])
    cube([1, 1, 1.33]);
  translate([37, 26, 0])
    cube([1, 1, 1.33]);
  translate([38, 26, 0])
    cube([1, 1, 1.33]);
  translate([39, 26, 0])
    cube([1, 1, 1.33]);
  translate([40, 26, 0])
    cube([1, 1, 1.33]);
  translate([41, 26, 0])
    cube([1, 1, 1.33]);
  translate([42, 26, 0])
    cube([1, 1, 1.33]);
  translate([43, 26, 0])
    cube([1, 1, 1.33]);
  translate([44, 26, 0])
    cube([1, 1, 1.33]);
  translate([45, 26, 0])
    cube([1, 1, 1.33]);
  translate([46, 26, 0])
    cube([1, 1, 1.33]);
  translate([47, 26, 0])
    cube([1, 1, 1.33]);
  translate([48, 26, 0])
    cube([1, 1, 1.33]);
  translate([49, 26, 0])
    cube([1, 1, 1.33]);
  translate([50, 26, 0])
    cube([1, 1, 1.33]);
  translate([51, 26, 0])
    cube([1, 1, 1.33]);
  translate([52, 26, 0])
    cube([1, 1, 1.33]);
  translate([53, 26, 0])
    cube([1, 1, 1.33]);
  translate([54, 26, 0])
    cube([1, 1, 1.33]);
  translate([55, 26, 0])
    cube([1, 1, 1.33]);
  translate([56, 26, 0])
    cube([1, 1, 1.33]);
  translate([57, 26, 0])
    cube([1, 1, 1.33]);
  translate([58, 26, 0])
    cube([1, 1, 1.33]);
  translate([59, 26, 0])
    cube([1, 1, 1.33]);
  translate([60, 26, 0])
    cube([1, 1, 1.33]);
  translate([61, 26, 0])
    cube([1, 1, 1.33]);
  translate([62, 26, 0])
    cube([1, 1, 1.33]);
  translate([63, 26, 0])
    cube([1, 1, 1.33]);
  translate([64, 26, 0])
    cube([1, 1, 1.33]);
  translate([65, 26, 0])
    cube([1, 1, 1.33]);
  translate([66, 26, 0])
    cube([1, 1, 1.33]);
  translate([67, 26, 0])
    cube([1, 1, 1.33]);
  translate([68, 26, 0])
    cube([1, 1, 1.33]);
  translate([69, 26, 0])
    cube([1, 1, 1.33]);
  translate([70, 26, 0])
    cube([1, 1, 1.33]);
  translate([71, 26, 0])
    cube([1, 1, 1.29]);
  translate([72, 26, 0])
    cube([1, 1, 1.33]);
  translate([73, 26, 0])
    cube([1, 1, 1.33]);
  translate([74, 26, 0])
    cube([1, 1, 1.33]);
  translate([75, 26, 0])
    cube([1, 1, 1.29]);
  translate([76, 26, 0])
    cube([1, 1, 1.29]);
  translate([77, 26, 0])
    cube([1, 1, 1.29]);
  translate([78, 26, 0])
    cube([1, 1, 1.61]);
  translate([79, 26, 0])
    cube([1, 1, 6.90]);
  translate([80, 26, 0])
    cube([1, 1, 3.73]);
  translate([81, 26, 0])
    cube([1, 1, 2.39]);
  translate([82, 26, 0])
    cube([1, 1, 4.31]);
  translate([83, 26, 0])
    cube([1, 1, 2.08]);
  translate([84, 26, 0])
    cube([1, 1, 1.53]);
  translate([85, 26, 0])
    cube([1, 1, 1.41]);
  translate([86, 26, 0])
    cube([1, 1, 1.65]);
  translate([87, 26, 0])
    cube([1, 1, 1.45]);
  translate([88, 26, 0])
    cube([1, 1, 1.45]);
  translate([89, 26, 0])
    cube([1, 1, 1.45]);
  translate([90, 26, 0])
    cube([1, 1, 1.53]);
  translate([91, 26, 0])
    cube([1, 1, 1.49]);
  translate([92, 26, 0])
    cube([1, 1, 1.45]);
  translate([93, 26, 0])
    cube([1, 1, 1.45]);
  translate([94, 26, 0])
    cube([1, 1, 1.29]);
  translate([95, 26, 0])
    cube([1, 1, 1.25]);
  translate([96, 26, 0])
    cube([1, 1, 1.45]);
  translate([97, 26, 0])
    cube([1, 1, 1.22]);
  translate([98, 26, 0])
    cube([1, 1, 1.37]);
  translate([99, 26, 0])
    cube([1, 1, 1.41]);
  translate([100, 26, 0])
    cube([1, 1, 1.45]);
  translate([101, 26, 0])
    cube([1, 1, 1.41]);
  translate([102, 26, 0])
    cube([1, 1, 1.53]);
  translate([103, 26, 0])
    cube([1, 1, 1.49]);
  translate([104, 26, 0])
    cube([1, 1, 1.80]);
  translate([105, 26, 0])
    cube([1, 1, 1.65]);
  translate([106, 26, 0])
    cube([1, 1, 1.73]);
  translate([107, 26, 0])
    cube([1, 1, 2.59]);
  translate([108, 26, 0])
    cube([1, 1, 3.10]);
  translate([109, 26, 0])
    cube([1, 1, 2.82]);
  translate([110, 26, 0])
    cube([1, 1, 2.04]);
  translate([111, 26, 0])
    cube([1, 1, 2.04]);
  translate([112, 26, 0])
    cube([1, 1, 3.25]);
  translate([113, 26, 0])
    cube([1, 1, 2.43]);
  translate([114, 26, 0])
    cube([1, 1, 2.78]);
  translate([115, 26, 0])
    cube([1, 1, 2.04]);
  translate([116, 26, 0])
    cube([1, 1, 5.10]);
  translate([117, 26, 0])
    cube([1, 1, 6.08]);
  translate([118, 26, 0])
    cube([1, 1, 3.96]);
  translate([119, 26, 0])
    cube([1, 1, 4.51]);
  translate([120, 26, 0])
    cube([1, 1, 1.29]);
  translate([121, 26, 0])
    cube([1, 1, 1.25]);
  translate([122, 26, 0])
    cube([1, 1, 1.25]);
  translate([123, 26, 0])
    cube([1, 1, 1.25]);
  translate([124, 26, 0])
    cube([1, 1, 1.25]);
  translate([125, 26, 0])
    cube([1, 1, 1.25]);
  translate([126, 26, 0])
    cube([1, 1, 1.25]);
  translate([127, 26, 0])
    cube([1, 1, 1.25]);
  translate([128, 26, 0])
    cube([1, 1, 1.25]);
  translate([129, 26, 0])
    cube([1, 1, 1.25]);
  translate([130, 26, 0])
    cube([1, 1, 1.25]);
  translate([131, 26, 0])
    cube([1, 1, 1.25]);
  translate([132, 26, 0])
    cube([1, 1, 1.25]);
  translate([133, 26, 0])
    cube([1, 1, 1.25]);
  translate([134, 26, 0])
    cube([1, 1, 1.25]);
  translate([135, 26, 0])
    cube([1, 1, 1.25]);
  translate([136, 26, 0])
    cube([1, 1, 1.25]);
  translate([137, 26, 0])
    cube([1, 1, 1.25]);
  translate([138, 26, 0])
    cube([1, 1, 1.25]);
  translate([139, 26, 0])
    cube([1, 1, 1.25]);
  translate([140, 26, 0])
    cube([1, 1, 1.25]);
  translate([141, 26, 0])
    cube([1, 1, 1.25]);
  translate([142, 26, 0])
    cube([1, 1, 1.25]);
  translate([143, 26, 0])
    cube([1, 1, 1.25]);
  translate([144, 26, 0])
    cube([1, 1, 1.25]);
  translate([145, 26, 0])
    cube([1, 1, 1.25]);
  translate([146, 26, 0])
    cube([1, 1, 1.25]);
  translate([147, 26, 0])
    cube([1, 1, 1.25]);
  translate([148, 26, 0])
    cube([1, 1, 1.25]);
  translate([149, 26, 0])
    cube([1, 1, 1.25]);
  translate([150, 26, 0])
    cube([1, 1, 1.25]);
  translate([151, 26, 0])
    cube([1, 1, 1.25]);
  translate([152, 26, 0])
    cube([1, 1, 1.25]);
  translate([153, 26, 0])
    cube([1, 1, 1.25]);
  translate([154, 26, 0])
    cube([1, 1, 1.25]);
  translate([155, 26, 0])
    cube([1, 1, 1.25]);
  translate([156, 26, 0])
    cube([1, 1, 1.25]);
  translate([157, 26, 0])
    cube([1, 1, 1.25]);
  translate([158, 26, 0])
    cube([1, 1, 1.25]);
  translate([159, 26, 0])
    cube([1, 1, 1.25]);
  translate([160, 26, 0])
    cube([1, 1, 1.25]);
  translate([161, 26, 0])
    cube([1, 1, 1.25]);
  translate([162, 26, 0])
    cube([1, 1, 1.25]);
  translate([163, 26, 0])
    cube([1, 1, 1.25]);
  translate([164, 26, 0])
    cube([1, 1, 1.25]);
  translate([165, 26, 0])
    cube([1, 1, 1.25]);
  translate([166, 26, 0])
    cube([1, 1, 1.25]);
  translate([167, 26, 0])
    cube([1, 1, 1.25]);
  translate([168, 26, 0])
    cube([1, 1, 1.25]);
  translate([169, 26, 0])
    cube([1, 1, 1.25]);
  translate([170, 26, 0])
    cube([1, 1, 1.25]);
  translate([171, 26, 0])
    cube([1, 1, 1.25]);
  translate([172, 26, 0])
    cube([1, 1, 1.25]);
  translate([173, 26, 0])
    cube([1, 1, 1.25]);
  translate([174, 26, 0])
    cube([1, 1, 1.25]);
  translate([175, 26, 0])
    cube([1, 1, 1.25]);
  translate([176, 26, 0])
    cube([1, 1, 1.25]);
  translate([177, 26, 0])
    cube([1, 1, 1.25]);
  translate([178, 26, 0])
    cube([1, 1, 1.25]);
  translate([179, 26, 0])
    cube([1, 1, 1.25]);
  translate([180, 26, 0])
    cube([1, 1, 1.25]);
  translate([181, 26, 0])
    cube([1, 1, 1.25]);
  translate([182, 26, 0])
    cube([1, 1, 1.25]);
  translate([183, 26, 0])
    cube([1, 1, 1.25]);
  translate([184, 26, 0])
    cube([1, 1, 1.25]);
  translate([185, 26, 0])
    cube([1, 1, 1.25]);
  translate([186, 26, 0])
    cube([1, 1, 1.25]);
  translate([187, 26, 0])
    cube([1, 1, 1.25]);
  translate([188, 26, 0])
    cube([1, 1, 1.25]);
  translate([189, 26, 0])
    cube([1, 1, 1.25]);
  translate([190, 26, 0])
    cube([1, 1, 1.25]);
  translate([191, 26, 0])
    cube([1, 1, 1.25]);
  translate([192, 26, 0])
    cube([1, 1, 1.25]);
  translate([193, 26, 0])
    cube([1, 1, 1.25]);
  translate([194, 26, 0])
    cube([1, 1, 1.25]);
  translate([195, 26, 0])
    cube([1, 1, 1.25]);
  translate([196, 26, 0])
    cube([1, 1, 1.25]);
  translate([197, 26, 0])
    cube([1, 1, 1.25]);
  translate([198, 26, 0])
    cube([1, 1, 1.25]);
  translate([199, 26, 0])
    cube([1, 1, 1.25]);
  translate([200, 26, 0])
    cube([1, 1, 1.25]);
  translate([201, 26, 0])
    cube([1, 1, 1.25]);
  translate([202, 26, 0])
    cube([1, 1, 1.25]);
  translate([203, 26, 0])
    cube([1, 1, 1.25]);
  translate([204, 26, 0])
    cube([1, 1, 1.25]);
  translate([205, 26, 0])
    cube([1, 1, 1.25]);
  translate([206, 26, 0])
    cube([1, 1, 1.25]);
  translate([207, 26, 0])
    cube([1, 1, 1.25]);
  translate([208, 26, 0])
    cube([1, 1, 1.25]);
  translate([209, 26, 0])
    cube([1, 1, 1.25]);
  translate([210, 26, 0])
    cube([1, 1, 1.25]);
  translate([211, 26, 0])
    cube([1, 1, 1.25]);
  translate([212, 26, 0])
    cube([1, 1, 1.25]);
  translate([213, 26, 0])
    cube([1, 1, 1.25]);
  translate([214, 26, 0])
    cube([1, 1, 1.25]);
  translate([215, 26, 0])
    cube([1, 1, 1.25]);
  translate([216, 26, 0])
    cube([1, 1, 1.25]);
  translate([217, 26, 0])
    cube([1, 1, 1.25]);
  translate([218, 26, 0])
    cube([1, 1, 1.25]);
  translate([219, 26, 0])
    cube([1, 1, 1.25]);
  translate([220, 26, 0])
    cube([1, 1, 1.25]);
  translate([221, 26, 0])
    cube([1, 1, 1.25]);
  translate([222, 26, 0])
    cube([1, 1, 1.25]);
  translate([223, 26, 0])
    cube([1, 1, 1.25]);
  translate([224, 26, 0])
    cube([1, 1, 1.25]);
  translate([225, 26, 0])
    cube([1, 1, 1.25]);
  translate([226, 26, 0])
    cube([1, 1, 1.25]);
  translate([227, 26, 0])
    cube([1, 1, 1.25]);
  translate([228, 26, 0])
    cube([1, 1, 1.25]);
  translate([229, 26, 0])
    cube([1, 1, 1.25]);
  translate([230, 26, 0])
    cube([1, 1, 1.25]);
  translate([231, 26, 0])
    cube([1, 1, 1.25]);
  translate([232, 26, 0])
    cube([1, 1, 1.25]);
  translate([233, 26, 0])
    cube([1, 1, 1.25]);
  translate([234, 26, 0])
    cube([1, 1, 1.25]);
  translate([235, 26, 0])
    cube([1, 1, 1.25]);
  translate([236, 26, 0])
    cube([1, 1, 1.25]);
  translate([237, 26, 0])
    cube([1, 1, 1.25]);
  translate([238, 26, 0])
    cube([1, 1, 1.25]);
  translate([239, 26, 0])
    cube([1, 1, 1.25]);
  translate([240, 26, 0])
    cube([1, 1, 1.25]);
  translate([241, 26, 0])
    cube([1, 1, 1.25]);
  translate([242, 26, 0])
    cube([1, 1, 1.25]);
  translate([243, 26, 0])
    cube([1, 1, 1.25]);
  translate([244, 26, 0])
    cube([1, 1, 1.25]);
  translate([245, 26, 0])
    cube([1, 1, 1.25]);
  translate([246, 26, 0])
    cube([1, 1, 1.25]);
  translate([0, 27, 0])
    cube([1, 1, 1.33]);
  translate([1, 27, 0])
    cube([1, 1, 1.37]);
  translate([2, 27, 0])
    cube([1, 1, 1.37]);
  translate([3, 27, 0])
    cube([1, 1, 1.37]);
  translate([4, 27, 0])
    cube([1, 1, 1.37]);
  translate([5, 27, 0])
    cube([1, 1, 1.37]);
  translate([6, 27, 0])
    cube([1, 1, 1.33]);
  translate([7, 27, 0])
    cube([1, 1, 1.37]);
  translate([8, 27, 0])
    cube([1, 1, 1.37]);
  translate([9, 27, 0])
    cube([1, 1, 1.33]);
  translate([10, 27, 0])
    cube([1, 1, 1.33]);
  translate([11, 27, 0])
    cube([1, 1, 1.33]);
  translate([12, 27, 0])
    cube([1, 1, 1.33]);
  translate([13, 27, 0])
    cube([1, 1, 1.41]);
  translate([14, 27, 0])
    cube([1, 1, 1.29]);
  translate([15, 27, 0])
    cube([1, 1, 1.29]);
  translate([16, 27, 0])
    cube([1, 1, 1.33]);
  translate([17, 27, 0])
    cube([1, 1, 1.33]);
  translate([18, 27, 0])
    cube([1, 1, 1.33]);
  translate([19, 27, 0])
    cube([1, 1, 1.33]);
  translate([20, 27, 0])
    cube([1, 1, 1.33]);
  translate([21, 27, 0])
    cube([1, 1, 1.45]);
  translate([22, 27, 0])
    cube([1, 1, 1.33]);
  translate([23, 27, 0])
    cube([1, 1, 1.33]);
  translate([24, 27, 0])
    cube([1, 1, 1.33]);
  translate([25, 27, 0])
    cube([1, 1, 1.33]);
  translate([26, 27, 0])
    cube([1, 1, 1.33]);
  translate([27, 27, 0])
    cube([1, 1, 1.33]);
  translate([28, 27, 0])
    cube([1, 1, 1.29]);
  translate([29, 27, 0])
    cube([1, 1, 1.29]);
  translate([30, 27, 0])
    cube([1, 1, 1.29]);
  translate([31, 27, 0])
    cube([1, 1, 1.41]);
  translate([32, 27, 0])
    cube([1, 1, 1.29]);
  translate([33, 27, 0])
    cube([1, 1, 1.37]);
  translate([34, 27, 0])
    cube([1, 1, 1.37]);
  translate([35, 27, 0])
    cube([1, 1, 1.33]);
  translate([36, 27, 0])
    cube([1, 1, 1.33]);
  translate([37, 27, 0])
    cube([1, 1, 1.33]);
  translate([38, 27, 0])
    cube([1, 1, 1.33]);
  translate([39, 27, 0])
    cube([1, 1, 1.33]);
  translate([40, 27, 0])
    cube([1, 1, 1.33]);
  translate([41, 27, 0])
    cube([1, 1, 1.33]);
  translate([42, 27, 0])
    cube([1, 1, 1.33]);
  translate([43, 27, 0])
    cube([1, 1, 1.33]);
  translate([44, 27, 0])
    cube([1, 1, 1.33]);
  translate([45, 27, 0])
    cube([1, 1, 1.33]);
  translate([46, 27, 0])
    cube([1, 1, 1.37]);
  translate([47, 27, 0])
    cube([1, 1, 1.37]);
  translate([48, 27, 0])
    cube([1, 1, 1.33]);
  translate([49, 27, 0])
    cube([1, 1, 1.33]);
  translate([50, 27, 0])
    cube([1, 1, 1.33]);
  translate([51, 27, 0])
    cube([1, 1, 1.33]);
  translate([52, 27, 0])
    cube([1, 1, 1.33]);
  translate([53, 27, 0])
    cube([1, 1, 1.33]);
  translate([54, 27, 0])
    cube([1, 1, 1.33]);
  translate([55, 27, 0])
    cube([1, 1, 1.33]);
  translate([56, 27, 0])
    cube([1, 1, 1.33]);
  translate([57, 27, 0])
    cube([1, 1, 1.33]);
  translate([58, 27, 0])
    cube([1, 1, 1.33]);
  translate([59, 27, 0])
    cube([1, 1, 1.33]);
  translate([60, 27, 0])
    cube([1, 1, 1.33]);
  translate([61, 27, 0])
    cube([1, 1, 1.33]);
  translate([62, 27, 0])
    cube([1, 1, 1.33]);
  translate([63, 27, 0])
    cube([1, 1, 1.33]);
  translate([64, 27, 0])
    cube([1, 1, 1.33]);
  translate([65, 27, 0])
    cube([1, 1, 1.33]);
  translate([66, 27, 0])
    cube([1, 1, 1.33]);
  translate([67, 27, 0])
    cube([1, 1, 1.33]);
  translate([68, 27, 0])
    cube([1, 1, 1.33]);
  translate([69, 27, 0])
    cube([1, 1, 1.33]);
  translate([70, 27, 0])
    cube([1, 1, 1.33]);
  translate([71, 27, 0])
    cube([1, 1, 1.29]);
  translate([72, 27, 0])
    cube([1, 1, 1.33]);
  translate([73, 27, 0])
    cube([1, 1, 1.33]);
  translate([74, 27, 0])
    cube([1, 1, 1.33]);
  translate([75, 27, 0])
    cube([1, 1, 1.29]);
  translate([76, 27, 0])
    cube([1, 1, 1.22]);
  translate([77, 27, 0])
    cube([1, 1, 1.33]);
  translate([78, 27, 0])
    cube([1, 1, 6.71]);
  translate([79, 27, 0])
    cube([1, 1, 4.67]);
  translate([80, 27, 0])
    cube([1, 1, 2.20]);
  translate([81, 27, 0])
    cube([1, 1, 5.18]);
  translate([82, 27, 0])
    cube([1, 1, 2.51]);
  translate([83, 27, 0])
    cube([1, 1, 1.61]);
  translate([84, 27, 0])
    cube([1, 1, 1.80]);
  translate([85, 27, 0])
    cube([1, 1, 1.37]);
  translate([86, 27, 0])
    cube([1, 1, 1.33]);
  translate([87, 27, 0])
    cube([1, 1, 1.49]);
  translate([88, 27, 0])
    cube([1, 1, 1.41]);
  translate([89, 27, 0])
    cube([1, 1, 1.53]);
  translate([90, 27, 0])
    cube([1, 1, 1.65]);
  translate([91, 27, 0])
    cube([1, 1, 1.84]);
  translate([92, 27, 0])
    cube([1, 1, 1.65]);
  translate([93, 27, 0])
    cube([1, 1, 1.53]);
  translate([94, 27, 0])
    cube([1, 1, 1.29]);
  translate([95, 27, 0])
    cube([1, 1, 1.33]);
  translate([96, 27, 0])
    cube([1, 1, 1.65]);
  translate([97, 27, 0])
    cube([1, 1, 1.92]);
  translate([98, 27, 0])
    cube([1, 1, 2.12]);
  translate([99, 27, 0])
    cube([1, 1, 1.92]);
  translate([100, 27, 0])
    cube([1, 1, 1.61]);
  translate([101, 27, 0])
    cube([1, 1, 1.80]);
  translate([102, 27, 0])
    cube([1, 1, 2.24]);
  translate([103, 27, 0])
    cube([1, 1, 3.10]);
  translate([104, 27, 0])
    cube([1, 1, 3.53]);
  translate([105, 27, 0])
    cube([1, 1, 3.14]);
  translate([106, 27, 0])
    cube([1, 1, 3.88]);
  translate([107, 27, 0])
    cube([1, 1, 2.90]);
  translate([108, 27, 0])
    cube([1, 1, 1.76]);
  translate([109, 27, 0])
    cube([1, 1, 1.84]);
  translate([110, 27, 0])
    cube([1, 1, 3.65]);
  translate([111, 27, 0])
    cube([1, 1, 3.18]);
  translate([112, 27, 0])
    cube([1, 1, 2.00]);
  translate([113, 27, 0])
    cube([1, 1, 2.04]);
  translate([114, 27, 0])
    cube([1, 1, 2.94]);
  translate([115, 27, 0])
    cube([1, 1, 4.31]);
  translate([116, 27, 0])
    cube([1, 1, 2.59]);
  translate([117, 27, 0])
    cube([1, 1, 6.12]);
  translate([118, 27, 0])
    cube([1, 1, 3.33]);
  translate([119, 27, 0])
    cube([1, 1, 5.06]);
  translate([120, 27, 0])
    cube([1, 1, 1.45]);
  translate([121, 27, 0])
    cube([1, 1, 1.25]);
  translate([122, 27, 0])
    cube([1, 1, 1.25]);
  translate([123, 27, 0])
    cube([1, 1, 1.25]);
  translate([124, 27, 0])
    cube([1, 1, 1.25]);
  translate([125, 27, 0])
    cube([1, 1, 1.25]);
  translate([126, 27, 0])
    cube([1, 1, 1.25]);
  translate([127, 27, 0])
    cube([1, 1, 1.25]);
  translate([128, 27, 0])
    cube([1, 1, 1.25]);
  translate([129, 27, 0])
    cube([1, 1, 1.25]);
  translate([130, 27, 0])
    cube([1, 1, 1.25]);
  translate([131, 27, 0])
    cube([1, 1, 1.25]);
  translate([132, 27, 0])
    cube([1, 1, 1.25]);
  translate([133, 27, 0])
    cube([1, 1, 1.25]);
  translate([134, 27, 0])
    cube([1, 1, 1.25]);
  translate([135, 27, 0])
    cube([1, 1, 1.25]);
  translate([136, 27, 0])
    cube([1, 1, 1.25]);
  translate([137, 27, 0])
    cube([1, 1, 1.25]);
  translate([138, 27, 0])
    cube([1, 1, 1.25]);
  translate([139, 27, 0])
    cube([1, 1, 1.25]);
  translate([140, 27, 0])
    cube([1, 1, 1.25]);
  translate([141, 27, 0])
    cube([1, 1, 1.25]);
  translate([142, 27, 0])
    cube([1, 1, 1.25]);
  translate([143, 27, 0])
    cube([1, 1, 1.25]);
  translate([144, 27, 0])
    cube([1, 1, 1.25]);
  translate([145, 27, 0])
    cube([1, 1, 1.25]);
  translate([146, 27, 0])
    cube([1, 1, 1.25]);
  translate([147, 27, 0])
    cube([1, 1, 1.25]);
  translate([148, 27, 0])
    cube([1, 1, 1.25]);
  translate([149, 27, 0])
    cube([1, 1, 1.25]);
  translate([150, 27, 0])
    cube([1, 1, 1.25]);
  translate([151, 27, 0])
    cube([1, 1, 1.25]);
  translate([152, 27, 0])
    cube([1, 1, 1.25]);
  translate([153, 27, 0])
    cube([1, 1, 1.25]);
  translate([154, 27, 0])
    cube([1, 1, 1.25]);
  translate([155, 27, 0])
    cube([1, 1, 1.25]);
  translate([156, 27, 0])
    cube([1, 1, 1.25]);
  translate([157, 27, 0])
    cube([1, 1, 1.25]);
  translate([158, 27, 0])
    cube([1, 1, 1.25]);
  translate([159, 27, 0])
    cube([1, 1, 1.25]);
  translate([160, 27, 0])
    cube([1, 1, 1.25]);
  translate([161, 27, 0])
    cube([1, 1, 1.25]);
  translate([162, 27, 0])
    cube([1, 1, 1.25]);
  translate([163, 27, 0])
    cube([1, 1, 1.25]);
  translate([164, 27, 0])
    cube([1, 1, 1.25]);
  translate([165, 27, 0])
    cube([1, 1, 1.25]);
  translate([166, 27, 0])
    cube([1, 1, 1.25]);
  translate([167, 27, 0])
    cube([1, 1, 1.25]);
  translate([168, 27, 0])
    cube([1, 1, 1.25]);
  translate([169, 27, 0])
    cube([1, 1, 1.25]);
  translate([170, 27, 0])
    cube([1, 1, 1.25]);
  translate([171, 27, 0])
    cube([1, 1, 1.25]);
  translate([172, 27, 0])
    cube([1, 1, 1.25]);
  translate([173, 27, 0])
    cube([1, 1, 1.25]);
  translate([174, 27, 0])
    cube([1, 1, 1.25]);
  translate([175, 27, 0])
    cube([1, 1, 1.25]);
  translate([176, 27, 0])
    cube([1, 1, 1.25]);
  translate([177, 27, 0])
    cube([1, 1, 1.25]);
  translate([178, 27, 0])
    cube([1, 1, 1.25]);
  translate([179, 27, 0])
    cube([1, 1, 1.25]);
  translate([180, 27, 0])
    cube([1, 1, 1.25]);
  translate([181, 27, 0])
    cube([1, 1, 1.25]);
  translate([182, 27, 0])
    cube([1, 1, 1.25]);
  translate([183, 27, 0])
    cube([1, 1, 1.25]);
  translate([184, 27, 0])
    cube([1, 1, 1.25]);
  translate([185, 27, 0])
    cube([1, 1, 1.25]);
  translate([186, 27, 0])
    cube([1, 1, 1.25]);
  translate([187, 27, 0])
    cube([1, 1, 1.25]);
  translate([188, 27, 0])
    cube([1, 1, 1.25]);
  translate([189, 27, 0])
    cube([1, 1, 1.25]);
  translate([190, 27, 0])
    cube([1, 1, 1.25]);
  translate([191, 27, 0])
    cube([1, 1, 1.25]);
  translate([192, 27, 0])
    cube([1, 1, 1.25]);
  translate([193, 27, 0])
    cube([1, 1, 1.25]);
  translate([194, 27, 0])
    cube([1, 1, 1.25]);
  translate([195, 27, 0])
    cube([1, 1, 1.25]);
  translate([196, 27, 0])
    cube([1, 1, 1.25]);
  translate([197, 27, 0])
    cube([1, 1, 1.25]);
  translate([198, 27, 0])
    cube([1, 1, 1.25]);
  translate([199, 27, 0])
    cube([1, 1, 1.25]);
  translate([200, 27, 0])
    cube([1, 1, 1.25]);
  translate([201, 27, 0])
    cube([1, 1, 1.25]);
  translate([202, 27, 0])
    cube([1, 1, 1.25]);
  translate([203, 27, 0])
    cube([1, 1, 1.25]);
  translate([204, 27, 0])
    cube([1, 1, 1.25]);
  translate([205, 27, 0])
    cube([1, 1, 1.25]);
  translate([206, 27, 0])
    cube([1, 1, 1.25]);
  translate([207, 27, 0])
    cube([1, 1, 1.25]);
  translate([208, 27, 0])
    cube([1, 1, 1.25]);
  translate([209, 27, 0])
    cube([1, 1, 1.25]);
  translate([210, 27, 0])
    cube([1, 1, 1.25]);
  translate([211, 27, 0])
    cube([1, 1, 1.25]);
  translate([212, 27, 0])
    cube([1, 1, 1.25]);
  translate([213, 27, 0])
    cube([1, 1, 1.25]);
  translate([214, 27, 0])
    cube([1, 1, 1.25]);
  translate([215, 27, 0])
    cube([1, 1, 1.25]);
  translate([216, 27, 0])
    cube([1, 1, 1.25]);
  translate([217, 27, 0])
    cube([1, 1, 1.25]);
  translate([218, 27, 0])
    cube([1, 1, 1.25]);
  translate([219, 27, 0])
    cube([1, 1, 1.25]);
  translate([220, 27, 0])
    cube([1, 1, 1.25]);
  translate([221, 27, 0])
    cube([1, 1, 1.25]);
  translate([222, 27, 0])
    cube([1, 1, 1.25]);
  translate([223, 27, 0])
    cube([1, 1, 1.25]);
  translate([224, 27, 0])
    cube([1, 1, 1.25]);
  translate([225, 27, 0])
    cube([1, 1, 1.25]);
  translate([226, 27, 0])
    cube([1, 1, 1.25]);
  translate([227, 27, 0])
    cube([1, 1, 1.25]);
  translate([228, 27, 0])
    cube([1, 1, 1.25]);
  translate([229, 27, 0])
    cube([1, 1, 1.25]);
  translate([230, 27, 0])
    cube([1, 1, 1.25]);
  translate([231, 27, 0])
    cube([1, 1, 1.25]);
  translate([232, 27, 0])
    cube([1, 1, 1.25]);
  translate([233, 27, 0])
    cube([1, 1, 1.25]);
  translate([234, 27, 0])
    cube([1, 1, 1.25]);
  translate([235, 27, 0])
    cube([1, 1, 1.25]);
  translate([236, 27, 0])
    cube([1, 1, 1.25]);
  translate([237, 27, 0])
    cube([1, 1, 1.25]);
  translate([238, 27, 0])
    cube([1, 1, 1.25]);
  translate([239, 27, 0])
    cube([1, 1, 1.25]);
  translate([240, 27, 0])
    cube([1, 1, 1.25]);
  translate([241, 27, 0])
    cube([1, 1, 1.25]);
  translate([242, 27, 0])
    cube([1, 1, 1.25]);
  translate([243, 27, 0])
    cube([1, 1, 1.25]);
  translate([244, 27, 0])
    cube([1, 1, 1.25]);
  translate([245, 27, 0])
    cube([1, 1, 1.25]);
  translate([246, 27, 0])
    cube([1, 1, 1.25]);
  translate([0, 28, 0])
    cube([1, 1, 1.33]);
  translate([1, 28, 0])
    cube([1, 1, 1.37]);
  translate([2, 28, 0])
    cube([1, 1, 1.37]);
  translate([3, 28, 0])
    cube([1, 1, 1.37]);
  translate([4, 28, 0])
    cube([1, 1, 1.37]);
  translate([5, 28, 0])
    cube([1, 1, 1.37]);
  translate([6, 28, 0])
    cube([1, 1, 1.29]);
  translate([7, 28, 0])
    cube([1, 1, 1.33]);
  translate([8, 28, 0])
    cube([1, 1, 1.37]);
  translate([9, 28, 0])
    cube([1, 1, 1.33]);
  translate([10, 28, 0])
    cube([1, 1, 1.33]);
  translate([11, 28, 0])
    cube([1, 1, 1.37]);
  translate([12, 28, 0])
    cube([1, 1, 1.33]);
  translate([13, 28, 0])
    cube([1, 1, 1.41]);
  translate([14, 28, 0])
    cube([1, 1, 1.33]);
  translate([15, 28, 0])
    cube([1, 1, 1.37]);
  translate([16, 28, 0])
    cube([1, 1, 1.37]);
  translate([17, 28, 0])
    cube([1, 1, 1.33]);
  translate([18, 28, 0])
    cube([1, 1, 1.41]);
  translate([19, 28, 0])
    cube([1, 1, 1.33]);
  translate([20, 28, 0])
    cube([1, 1, 1.33]);
  translate([21, 28, 0])
    cube([1, 1, 1.33]);
  translate([22, 28, 0])
    cube([1, 1, 1.33]);
  translate([23, 28, 0])
    cube([1, 1, 1.33]);
  translate([24, 28, 0])
    cube([1, 1, 1.37]);
  translate([25, 28, 0])
    cube([1, 1, 1.33]);
  translate([26, 28, 0])
    cube([1, 1, 1.33]);
  translate([27, 28, 0])
    cube([1, 1, 1.33]);
  translate([28, 28, 0])
    cube([1, 1, 1.33]);
  translate([29, 28, 0])
    cube([1, 1, 1.33]);
  translate([30, 28, 0])
    cube([1, 1, 1.33]);
  translate([31, 28, 0])
    cube([1, 1, 1.33]);
  translate([32, 28, 0])
    cube([1, 1, 1.41]);
  translate([33, 28, 0])
    cube([1, 1, 1.33]);
  translate([34, 28, 0])
    cube([1, 1, 1.33]);
  translate([35, 28, 0])
    cube([1, 1, 1.37]);
  translate([36, 28, 0])
    cube([1, 1, 1.33]);
  translate([37, 28, 0])
    cube([1, 1, 1.37]);
  translate([38, 28, 0])
    cube([1, 1, 1.29]);
  translate([39, 28, 0])
    cube([1, 1, 1.33]);
  translate([40, 28, 0])
    cube([1, 1, 1.33]);
  translate([41, 28, 0])
    cube([1, 1, 1.33]);
  translate([42, 28, 0])
    cube([1, 1, 1.33]);
  translate([43, 28, 0])
    cube([1, 1, 1.33]);
  translate([44, 28, 0])
    cube([1, 1, 1.33]);
  translate([45, 28, 0])
    cube([1, 1, 1.33]);
  translate([46, 28, 0])
    cube([1, 1, 1.33]);
  translate([47, 28, 0])
    cube([1, 1, 1.33]);
  translate([48, 28, 0])
    cube([1, 1, 1.33]);
  translate([49, 28, 0])
    cube([1, 1, 1.33]);
  translate([50, 28, 0])
    cube([1, 1, 1.33]);
  translate([51, 28, 0])
    cube([1, 1, 1.33]);
  translate([52, 28, 0])
    cube([1, 1, 1.33]);
  translate([53, 28, 0])
    cube([1, 1, 1.33]);
  translate([54, 28, 0])
    cube([1, 1, 1.33]);
  translate([55, 28, 0])
    cube([1, 1, 1.33]);
  translate([56, 28, 0])
    cube([1, 1, 1.33]);
  translate([57, 28, 0])
    cube([1, 1, 1.33]);
  translate([58, 28, 0])
    cube([1, 1, 1.33]);
  translate([59, 28, 0])
    cube([1, 1, 1.33]);
  translate([60, 28, 0])
    cube([1, 1, 1.33]);
  translate([61, 28, 0])
    cube([1, 1, 1.33]);
  translate([62, 28, 0])
    cube([1, 1, 1.33]);
  translate([63, 28, 0])
    cube([1, 1, 1.33]);
  translate([64, 28, 0])
    cube([1, 1, 1.33]);
  translate([65, 28, 0])
    cube([1, 1, 1.33]);
  translate([66, 28, 0])
    cube([1, 1, 1.33]);
  translate([67, 28, 0])
    cube([1, 1, 1.33]);
  translate([68, 28, 0])
    cube([1, 1, 1.33]);
  translate([69, 28, 0])
    cube([1, 1, 1.33]);
  translate([70, 28, 0])
    cube([1, 1, 1.33]);
  translate([71, 28, 0])
    cube([1, 1, 1.33]);
  translate([72, 28, 0])
    cube([1, 1, 1.33]);
  translate([73, 28, 0])
    cube([1, 1, 1.33]);
  translate([74, 28, 0])
    cube([1, 1, 1.33]);
  translate([75, 28, 0])
    cube([1, 1, 1.33]);
  translate([76, 28, 0])
    cube([1, 1, 1.53]);
  translate([77, 28, 0])
    cube([1, 1, 1.18]);
  translate([78, 28, 0])
    cube([1, 1, 4.94]);
  translate([79, 28, 0])
    cube([1, 1, 1.76]);
  translate([80, 28, 0])
    cube([1, 1, 5.25]);
  translate([81, 28, 0])
    cube([1, 1, 3.88]);
  translate([82, 28, 0])
    cube([1, 1, 3.22]);
  translate([83, 28, 0])
    cube([1, 1, 1.96]);
  translate([84, 28, 0])
    cube([1, 1, 1.41]);
  translate([85, 28, 0])
    cube([1, 1, 1.53]);
  translate([86, 28, 0])
    cube([1, 1, 1.49]);
  translate([87, 28, 0])
    cube([1, 1, 1.49]);
  translate([88, 28, 0])
    cube([1, 1, 1.53]);
  translate([89, 28, 0])
    cube([1, 1, 1.45]);
  translate([90, 28, 0])
    cube([1, 1, 1.33]);
  translate([91, 28, 0])
    cube([1, 1, 1.37]);
  translate([92, 28, 0])
    cube([1, 1, 1.53]);
  translate([93, 28, 0])
    cube([1, 1, 1.49]);
  translate([94, 28, 0])
    cube([1, 1, 1.45]);
  translate([95, 28, 0])
    cube([1, 1, 1.57]);
  translate([96, 28, 0])
    cube([1, 1, 1.96]);
  translate([97, 28, 0])
    cube([1, 1, 2.20]);
  translate([98, 28, 0])
    cube([1, 1, 2.31]);
  translate([99, 28, 0])
    cube([1, 1, 2.43]);
  translate([100, 28, 0])
    cube([1, 1, 2.67]);
  translate([101, 28, 0])
    cube([1, 1, 2.98]);
  translate([102, 28, 0])
    cube([1, 1, 3.29]);
  translate([103, 28, 0])
    cube([1, 1, 3.45]);
  translate([104, 28, 0])
    cube([1, 1, 3.49]);
  translate([105, 28, 0])
    cube([1, 1, 1.96]);
  translate([106, 28, 0])
    cube([1, 1, 3.02]);
  translate([107, 28, 0])
    cube([1, 1, 2.59]);
  translate([108, 28, 0])
    cube([1, 1, 3.49]);
  translate([109, 28, 0])
    cube([1, 1, 3.65]);
  translate([110, 28, 0])
    cube([1, 1, 1.73]);
  translate([111, 28, 0])
    cube([1, 1, 1.80]);
  translate([112, 28, 0])
    cube([1, 1, 3.25]);
  translate([113, 28, 0])
    cube([1, 1, 2.31]);
  translate([114, 28, 0])
    cube([1, 1, 2.47]);
  translate([115, 28, 0])
    cube([1, 1, 2.04]);
  translate([116, 28, 0])
    cube([1, 1, 1.69]);
  translate([117, 28, 0])
    cube([1, 1, 1.92]);
  translate([118, 28, 0])
    cube([1, 1, 3.96]);
  translate([119, 28, 0])
    cube([1, 1, 4.35]);
  translate([120, 28, 0])
    cube([1, 1, 1.29]);
  translate([121, 28, 0])
    cube([1, 1, 1.25]);
  translate([122, 28, 0])
    cube([1, 1, 1.25]);
  translate([123, 28, 0])
    cube([1, 1, 1.25]);
  translate([124, 28, 0])
    cube([1, 1, 1.25]);
  translate([125, 28, 0])
    cube([1, 1, 1.25]);
  translate([126, 28, 0])
    cube([1, 1, 1.25]);
  translate([127, 28, 0])
    cube([1, 1, 1.25]);
  translate([128, 28, 0])
    cube([1, 1, 1.25]);
  translate([129, 28, 0])
    cube([1, 1, 1.25]);
  translate([130, 28, 0])
    cube([1, 1, 1.25]);
  translate([131, 28, 0])
    cube([1, 1, 1.25]);
  translate([132, 28, 0])
    cube([1, 1, 1.25]);
  translate([133, 28, 0])
    cube([1, 1, 1.25]);
  translate([134, 28, 0])
    cube([1, 1, 1.25]);
  translate([135, 28, 0])
    cube([1, 1, 1.25]);
  translate([136, 28, 0])
    cube([1, 1, 1.25]);
  translate([137, 28, 0])
    cube([1, 1, 1.25]);
  translate([138, 28, 0])
    cube([1, 1, 1.25]);
  translate([139, 28, 0])
    cube([1, 1, 1.25]);
  translate([140, 28, 0])
    cube([1, 1, 1.25]);
  translate([141, 28, 0])
    cube([1, 1, 1.25]);
  translate([142, 28, 0])
    cube([1, 1, 1.25]);
  translate([143, 28, 0])
    cube([1, 1, 1.25]);
  translate([144, 28, 0])
    cube([1, 1, 1.25]);
  translate([145, 28, 0])
    cube([1, 1, 1.25]);
  translate([146, 28, 0])
    cube([1, 1, 1.25]);
  translate([147, 28, 0])
    cube([1, 1, 1.25]);
  translate([148, 28, 0])
    cube([1, 1, 1.25]);
  translate([149, 28, 0])
    cube([1, 1, 1.25]);
  translate([150, 28, 0])
    cube([1, 1, 1.25]);
  translate([151, 28, 0])
    cube([1, 1, 1.25]);
  translate([152, 28, 0])
    cube([1, 1, 1.25]);
  translate([153, 28, 0])
    cube([1, 1, 1.25]);
  translate([154, 28, 0])
    cube([1, 1, 1.25]);
  translate([155, 28, 0])
    cube([1, 1, 1.25]);
  translate([156, 28, 0])
    cube([1, 1, 1.25]);
  translate([157, 28, 0])
    cube([1, 1, 1.25]);
  translate([158, 28, 0])
    cube([1, 1, 1.25]);
  translate([159, 28, 0])
    cube([1, 1, 1.25]);
  translate([160, 28, 0])
    cube([1, 1, 1.33]);
  translate([161, 28, 0])
    cube([1, 1, 1.25]);
  translate([162, 28, 0])
    cube([1, 1, 1.25]);
  translate([163, 28, 0])
    cube([1, 1, 1.25]);
  translate([164, 28, 0])
    cube([1, 1, 1.25]);
  translate([165, 28, 0])
    cube([1, 1, 1.25]);
  translate([166, 28, 0])
    cube([1, 1, 1.25]);
  translate([167, 28, 0])
    cube([1, 1, 1.25]);
  translate([168, 28, 0])
    cube([1, 1, 1.25]);
  translate([169, 28, 0])
    cube([1, 1, 1.25]);
  translate([170, 28, 0])
    cube([1, 1, 1.25]);
  translate([171, 28, 0])
    cube([1, 1, 1.25]);
  translate([172, 28, 0])
    cube([1, 1, 1.25]);
  translate([173, 28, 0])
    cube([1, 1, 1.25]);
  translate([174, 28, 0])
    cube([1, 1, 1.25]);
  translate([175, 28, 0])
    cube([1, 1, 1.25]);
  translate([176, 28, 0])
    cube([1, 1, 1.25]);
  translate([177, 28, 0])
    cube([1, 1, 1.25]);
  translate([178, 28, 0])
    cube([1, 1, 1.25]);
  translate([179, 28, 0])
    cube([1, 1, 1.25]);
  translate([180, 28, 0])
    cube([1, 1, 1.25]);
  translate([181, 28, 0])
    cube([1, 1, 1.25]);
  translate([182, 28, 0])
    cube([1, 1, 1.25]);
  translate([183, 28, 0])
    cube([1, 1, 1.25]);
  translate([184, 28, 0])
    cube([1, 1, 1.25]);
  translate([185, 28, 0])
    cube([1, 1, 1.25]);
  translate([186, 28, 0])
    cube([1, 1, 1.25]);
  translate([187, 28, 0])
    cube([1, 1, 1.25]);
  translate([188, 28, 0])
    cube([1, 1, 1.25]);
  translate([189, 28, 0])
    cube([1, 1, 1.25]);
  translate([190, 28, 0])
    cube([1, 1, 1.25]);
  translate([191, 28, 0])
    cube([1, 1, 1.25]);
  translate([192, 28, 0])
    cube([1, 1, 1.25]);
  translate([193, 28, 0])
    cube([1, 1, 1.25]);
  translate([194, 28, 0])
    cube([1, 1, 1.25]);
  translate([195, 28, 0])
    cube([1, 1, 1.25]);
  translate([196, 28, 0])
    cube([1, 1, 1.25]);
  translate([197, 28, 0])
    cube([1, 1, 1.25]);
  translate([198, 28, 0])
    cube([1, 1, 1.25]);
  translate([199, 28, 0])
    cube([1, 1, 1.25]);
  translate([200, 28, 0])
    cube([1, 1, 1.25]);
  translate([201, 28, 0])
    cube([1, 1, 1.25]);
  translate([202, 28, 0])
    cube([1, 1, 1.25]);
  translate([203, 28, 0])
    cube([1, 1, 1.25]);
  translate([204, 28, 0])
    cube([1, 1, 1.25]);
  translate([205, 28, 0])
    cube([1, 1, 1.25]);
  translate([206, 28, 0])
    cube([1, 1, 1.25]);
  translate([207, 28, 0])
    cube([1, 1, 1.25]);
  translate([208, 28, 0])
    cube([1, 1, 1.25]);
  translate([209, 28, 0])
    cube([1, 1, 1.25]);
  translate([210, 28, 0])
    cube([1, 1, 1.25]);
  translate([211, 28, 0])
    cube([1, 1, 1.25]);
  translate([212, 28, 0])
    cube([1, 1, 1.25]);
  translate([213, 28, 0])
    cube([1, 1, 1.25]);
  translate([214, 28, 0])
    cube([1, 1, 1.25]);
  translate([215, 28, 0])
    cube([1, 1, 1.22]);
  translate([216, 28, 0])
    cube([1, 1, 1.25]);
  translate([217, 28, 0])
    cube([1, 1, 1.25]);
  translate([218, 28, 0])
    cube([1, 1, 1.25]);
  translate([219, 28, 0])
    cube([1, 1, 1.25]);
  translate([220, 28, 0])
    cube([1, 1, 1.25]);
  translate([221, 28, 0])
    cube([1, 1, 1.25]);
  translate([222, 28, 0])
    cube([1, 1, 1.25]);
  translate([223, 28, 0])
    cube([1, 1, 1.25]);
  translate([224, 28, 0])
    cube([1, 1, 1.25]);
  translate([225, 28, 0])
    cube([1, 1, 1.25]);
  translate([226, 28, 0])
    cube([1, 1, 1.25]);
  translate([227, 28, 0])
    cube([1, 1, 1.25]);
  translate([228, 28, 0])
    cube([1, 1, 1.25]);
  translate([229, 28, 0])
    cube([1, 1, 1.25]);
  translate([230, 28, 0])
    cube([1, 1, 1.25]);
  translate([231, 28, 0])
    cube([1, 1, 1.25]);
  translate([232, 28, 0])
    cube([1, 1, 1.25]);
  translate([233, 28, 0])
    cube([1, 1, 1.25]);
  translate([234, 28, 0])
    cube([1, 1, 1.25]);
  translate([235, 28, 0])
    cube([1, 1, 1.25]);
  translate([236, 28, 0])
    cube([1, 1, 1.25]);
  translate([237, 28, 0])
    cube([1, 1, 1.25]);
  translate([238, 28, 0])
    cube([1, 1, 1.25]);
  translate([239, 28, 0])
    cube([1, 1, 1.25]);
  translate([240, 28, 0])
    cube([1, 1, 1.25]);
  translate([241, 28, 0])
    cube([1, 1, 1.25]);
  translate([242, 28, 0])
    cube([1, 1, 1.25]);
  translate([243, 28, 0])
    cube([1, 1, 1.25]);
  translate([244, 28, 0])
    cube([1, 1, 1.25]);
  translate([245, 28, 0])
    cube([1, 1, 1.25]);
  translate([246, 28, 0])
    cube([1, 1, 1.25]);
  translate([0, 29, 0])
    cube([1, 1, 1.37]);
  translate([1, 29, 0])
    cube([1, 1, 1.37]);
  translate([2, 29, 0])
    cube([1, 1, 1.37]);
  translate([3, 29, 0])
    cube([1, 1, 1.37]);
  translate([4, 29, 0])
    cube([1, 1, 1.37]);
  translate([5, 29, 0])
    cube([1, 1, 1.37]);
  translate([6, 29, 0])
    cube([1, 1, 1.37]);
  translate([7, 29, 0])
    cube([1, 1, 1.37]);
  translate([8, 29, 0])
    cube([1, 1, 1.33]);
  translate([9, 29, 0])
    cube([1, 1, 1.33]);
  translate([10, 29, 0])
    cube([1, 1, 1.33]);
  translate([11, 29, 0])
    cube([1, 1, 1.37]);
  translate([12, 29, 0])
    cube([1, 1, 1.33]);
  translate([13, 29, 0])
    cube([1, 1, 1.37]);
  translate([14, 29, 0])
    cube([1, 1, 1.33]);
  translate([15, 29, 0])
    cube([1, 1, 1.33]);
  translate([16, 29, 0])
    cube([1, 1, 1.33]);
  translate([17, 29, 0])
    cube([1, 1, 1.33]);
  translate([18, 29, 0])
    cube([1, 1, 1.41]);
  translate([19, 29, 0])
    cube([1, 1, 1.37]);
  translate([20, 29, 0])
    cube([1, 1, 1.33]);
  translate([21, 29, 0])
    cube([1, 1, 1.33]);
  translate([22, 29, 0])
    cube([1, 1, 1.37]);
  translate([23, 29, 0])
    cube([1, 1, 1.37]);
  translate([24, 29, 0])
    cube([1, 1, 1.33]);
  translate([25, 29, 0])
    cube([1, 1, 1.33]);
  translate([26, 29, 0])
    cube([1, 1, 1.37]);
  translate([27, 29, 0])
    cube([1, 1, 1.37]);
  translate([28, 29, 0])
    cube([1, 1, 1.33]);
  translate([29, 29, 0])
    cube([1, 1, 1.33]);
  translate([30, 29, 0])
    cube([1, 1, 1.33]);
  translate([31, 29, 0])
    cube([1, 1, 1.33]);
  translate([32, 29, 0])
    cube([1, 1, 1.33]);
  translate([33, 29, 0])
    cube([1, 1, 1.33]);
  translate([34, 29, 0])
    cube([1, 1, 1.33]);
  translate([35, 29, 0])
    cube([1, 1, 1.33]);
  translate([36, 29, 0])
    cube([1, 1, 1.33]);
  translate([37, 29, 0])
    cube([1, 1, 1.33]);
  translate([38, 29, 0])
    cube([1, 1, 1.33]);
  translate([39, 29, 0])
    cube([1, 1, 1.37]);
  translate([40, 29, 0])
    cube([1, 1, 1.33]);
  translate([41, 29, 0])
    cube([1, 1, 1.33]);
  translate([42, 29, 0])
    cube([1, 1, 1.33]);
  translate([43, 29, 0])
    cube([1, 1, 1.33]);
  translate([44, 29, 0])
    cube([1, 1, 1.33]);
  translate([45, 29, 0])
    cube([1, 1, 1.37]);
  translate([46, 29, 0])
    cube([1, 1, 1.33]);
  translate([47, 29, 0])
    cube([1, 1, 1.33]);
  translate([48, 29, 0])
    cube([1, 1, 1.33]);
  translate([49, 29, 0])
    cube([1, 1, 1.33]);
  translate([50, 29, 0])
    cube([1, 1, 1.37]);
  translate([51, 29, 0])
    cube([1, 1, 1.33]);
  translate([52, 29, 0])
    cube([1, 1, 1.33]);
  translate([53, 29, 0])
    cube([1, 1, 1.33]);
  translate([54, 29, 0])
    cube([1, 1, 1.33]);
  translate([55, 29, 0])
    cube([1, 1, 1.33]);
  translate([56, 29, 0])
    cube([1, 1, 1.33]);
  translate([57, 29, 0])
    cube([1, 1, 1.33]);
  translate([58, 29, 0])
    cube([1, 1, 1.33]);
  translate([59, 29, 0])
    cube([1, 1, 1.33]);
  translate([60, 29, 0])
    cube([1, 1, 1.33]);
  translate([61, 29, 0])
    cube([1, 1, 1.33]);
  translate([62, 29, 0])
    cube([1, 1, 1.33]);
  translate([63, 29, 0])
    cube([1, 1, 1.33]);
  translate([64, 29, 0])
    cube([1, 1, 1.33]);
  translate([65, 29, 0])
    cube([1, 1, 1.33]);
  translate([66, 29, 0])
    cube([1, 1, 1.33]);
  translate([67, 29, 0])
    cube([1, 1, 1.33]);
  translate([68, 29, 0])
    cube([1, 1, 1.33]);
  translate([69, 29, 0])
    cube([1, 1, 1.33]);
  translate([70, 29, 0])
    cube([1, 1, 1.29]);
  translate([71, 29, 0])
    cube([1, 1, 1.29]);
  translate([72, 29, 0])
    cube([1, 1, 1.33]);
  translate([73, 29, 0])
    cube([1, 1, 1.29]);
  translate([74, 29, 0])
    cube([1, 1, 1.33]);
  translate([75, 29, 0])
    cube([1, 1, 1.29]);
  translate([76, 29, 0])
    cube([1, 1, 1.45]);
  translate([77, 29, 0])
    cube([1, 1, 5.92]);
  translate([78, 29, 0])
    cube([1, 1, 2.04]);
  translate([79, 29, 0])
    cube([1, 1, 1.69]);
  translate([80, 29, 0])
    cube([1, 1, 3.02]);
  translate([81, 29, 0])
    cube([1, 1, 3.25]);
  translate([82, 29, 0])
    cube([1, 1, 1.76]);
  translate([83, 29, 0])
    cube([1, 1, 2.24]);
  translate([84, 29, 0])
    cube([1, 1, 1.57]);
  translate([85, 29, 0])
    cube([1, 1, 1.57]);
  translate([86, 29, 0])
    cube([1, 1, 1.37]);
  translate([87, 29, 0])
    cube([1, 1, 1.41]);
  translate([88, 29, 0])
    cube([1, 1, 1.45]);
  translate([89, 29, 0])
    cube([1, 1, 1.45]);
  translate([90, 29, 0])
    cube([1, 1, 1.41]);
  translate([91, 29, 0])
    cube([1, 1, 1.53]);
  translate([92, 29, 0])
    cube([1, 1, 1.65]);
  translate([93, 29, 0])
    cube([1, 1, 1.76]);
  translate([94, 29, 0])
    cube([1, 1, 1.49]);
  translate([95, 29, 0])
    cube([1, 1, 1.57]);
  translate([96, 29, 0])
    cube([1, 1, 1.96]);
  translate([97, 29, 0])
    cube([1, 1, 2.12]);
  translate([98, 29, 0])
    cube([1, 1, 2.04]);
  translate([99, 29, 0])
    cube([1, 1, 1.65]);
  translate([100, 29, 0])
    cube([1, 1, 1.96]);
  translate([101, 29, 0])
    cube([1, 1, 3.02]);
  translate([102, 29, 0])
    cube([1, 1, 3.33]);
  translate([103, 29, 0])
    cube([1, 1, 3.53]);
  translate([104, 29, 0])
    cube([1, 1, 3.33]);
  translate([105, 29, 0])
    cube([1, 1, 2.31]);
  translate([106, 29, 0])
    cube([1, 1, 3.49]);
  translate([107, 29, 0])
    cube([1, 1, 2.43]);
  translate([108, 29, 0])
    cube([1, 1, 3.61]);
  translate([109, 29, 0])
    cube([1, 1, 2.00]);
  translate([110, 29, 0])
    cube([1, 1, 3.18]);
  translate([111, 29, 0])
    cube([1, 1, 3.22]);
  translate([112, 29, 0])
    cube([1, 1, 2.08]);
  translate([113, 29, 0])
    cube([1, 1, 2.78]);
  translate([114, 29, 0])
    cube([1, 1, 2.47]);
  translate([115, 29, 0])
    cube([1, 1, 2.47]);
  translate([116, 29, 0])
    cube([1, 1, 1.53]);
  translate([117, 29, 0])
    cube([1, 1, 4.78]);
  translate([118, 29, 0])
    cube([1, 1, 2.00]);
  translate([119, 29, 0])
    cube([1, 1, 5.76]);
  translate([120, 29, 0])
    cube([1, 1, 2.86]);
  translate([121, 29, 0])
    cube([1, 1, 1.22]);
  translate([122, 29, 0])
    cube([1, 1, 1.25]);
  translate([123, 29, 0])
    cube([1, 1, 1.25]);
  translate([124, 29, 0])
    cube([1, 1, 1.25]);
  translate([125, 29, 0])
    cube([1, 1, 1.25]);
  translate([126, 29, 0])
    cube([1, 1, 1.25]);
  translate([127, 29, 0])
    cube([1, 1, 1.25]);
  translate([128, 29, 0])
    cube([1, 1, 1.25]);
  translate([129, 29, 0])
    cube([1, 1, 1.25]);
  translate([130, 29, 0])
    cube([1, 1, 1.25]);
  translate([131, 29, 0])
    cube([1, 1, 1.25]);
  translate([132, 29, 0])
    cube([1, 1, 1.25]);
  translate([133, 29, 0])
    cube([1, 1, 1.25]);
  translate([134, 29, 0])
    cube([1, 1, 1.25]);
  translate([135, 29, 0])
    cube([1, 1, 1.25]);
  translate([136, 29, 0])
    cube([1, 1, 1.25]);
  translate([137, 29, 0])
    cube([1, 1, 1.25]);
  translate([138, 29, 0])
    cube([1, 1, 1.25]);
  translate([139, 29, 0])
    cube([1, 1, 1.25]);
  translate([140, 29, 0])
    cube([1, 1, 1.25]);
  translate([141, 29, 0])
    cube([1, 1, 1.25]);
  translate([142, 29, 0])
    cube([1, 1, 1.25]);
  translate([143, 29, 0])
    cube([1, 1, 1.25]);
  translate([144, 29, 0])
    cube([1, 1, 1.25]);
  translate([145, 29, 0])
    cube([1, 1, 1.25]);
  translate([146, 29, 0])
    cube([1, 1, 1.25]);
  translate([147, 29, 0])
    cube([1, 1, 1.25]);
  translate([148, 29, 0])
    cube([1, 1, 1.25]);
  translate([149, 29, 0])
    cube([1, 1, 1.25]);
  translate([150, 29, 0])
    cube([1, 1, 1.25]);
  translate([151, 29, 0])
    cube([1, 1, 1.25]);
  translate([152, 29, 0])
    cube([1, 1, 1.25]);
  translate([153, 29, 0])
    cube([1, 1, 1.25]);
  translate([154, 29, 0])
    cube([1, 1, 1.25]);
  translate([155, 29, 0])
    cube([1, 1, 1.25]);
  translate([156, 29, 0])
    cube([1, 1, 1.25]);
  translate([157, 29, 0])
    cube([1, 1, 1.25]);
  translate([158, 29, 0])
    cube([1, 1, 1.25]);
  translate([159, 29, 0])
    cube([1, 1, 1.25]);
  translate([160, 29, 0])
    cube([1, 1, 1.25]);
  translate([161, 29, 0])
    cube([1, 1, 1.25]);
  translate([162, 29, 0])
    cube([1, 1, 1.25]);
  translate([163, 29, 0])
    cube([1, 1, 1.25]);
  translate([164, 29, 0])
    cube([1, 1, 1.25]);
  translate([165, 29, 0])
    cube([1, 1, 1.25]);
  translate([166, 29, 0])
    cube([1, 1, 1.25]);
  translate([167, 29, 0])
    cube([1, 1, 1.25]);
  translate([168, 29, 0])
    cube([1, 1, 1.25]);
  translate([169, 29, 0])
    cube([1, 1, 1.25]);
  translate([170, 29, 0])
    cube([1, 1, 1.25]);
  translate([171, 29, 0])
    cube([1, 1, 1.25]);
  translate([172, 29, 0])
    cube([1, 1, 1.25]);
  translate([173, 29, 0])
    cube([1, 1, 1.25]);
  translate([174, 29, 0])
    cube([1, 1, 1.25]);
  translate([175, 29, 0])
    cube([1, 1, 1.25]);
  translate([176, 29, 0])
    cube([1, 1, 1.25]);
  translate([177, 29, 0])
    cube([1, 1, 1.25]);
  translate([178, 29, 0])
    cube([1, 1, 1.25]);
  translate([179, 29, 0])
    cube([1, 1, 1.25]);
  translate([180, 29, 0])
    cube([1, 1, 1.25]);
  translate([181, 29, 0])
    cube([1, 1, 1.25]);
  translate([182, 29, 0])
    cube([1, 1, 1.25]);
  translate([183, 29, 0])
    cube([1, 1, 1.25]);
  translate([184, 29, 0])
    cube([1, 1, 1.25]);
  translate([185, 29, 0])
    cube([1, 1, 1.25]);
  translate([186, 29, 0])
    cube([1, 1, 1.25]);
  translate([187, 29, 0])
    cube([1, 1, 1.25]);
  translate([188, 29, 0])
    cube([1, 1, 1.25]);
  translate([189, 29, 0])
    cube([1, 1, 1.25]);
  translate([190, 29, 0])
    cube([1, 1, 1.25]);
  translate([191, 29, 0])
    cube([1, 1, 1.25]);
  translate([192, 29, 0])
    cube([1, 1, 1.25]);
  translate([193, 29, 0])
    cube([1, 1, 1.25]);
  translate([194, 29, 0])
    cube([1, 1, 1.25]);
  translate([195, 29, 0])
    cube([1, 1, 1.25]);
  translate([196, 29, 0])
    cube([1, 1, 1.25]);
  translate([197, 29, 0])
    cube([1, 1, 1.25]);
  translate([198, 29, 0])
    cube([1, 1, 1.25]);
  translate([199, 29, 0])
    cube([1, 1, 1.25]);
  translate([200, 29, 0])
    cube([1, 1, 1.25]);
  translate([201, 29, 0])
    cube([1, 1, 1.25]);
  translate([202, 29, 0])
    cube([1, 1, 1.25]);
  translate([203, 29, 0])
    cube([1, 1, 1.25]);
  translate([204, 29, 0])
    cube([1, 1, 1.25]);
  translate([205, 29, 0])
    cube([1, 1, 1.25]);
  translate([206, 29, 0])
    cube([1, 1, 1.25]);
  translate([207, 29, 0])
    cube([1, 1, 1.25]);
  translate([208, 29, 0])
    cube([1, 1, 1.25]);
  translate([209, 29, 0])
    cube([1, 1, 1.25]);
  translate([210, 29, 0])
    cube([1, 1, 1.25]);
  translate([211, 29, 0])
    cube([1, 1, 1.25]);
  translate([212, 29, 0])
    cube([1, 1, 1.25]);
  translate([213, 29, 0])
    cube([1, 1, 1.25]);
  translate([214, 29, 0])
    cube([1, 1, 1.22]);
  translate([215, 29, 0])
    cube([1, 1, 1.33]);
  translate([216, 29, 0])
    cube([1, 1, 1.25]);
  translate([217, 29, 0])
    cube([1, 1, 1.25]);
  translate([218, 29, 0])
    cube([1, 1, 1.25]);
  translate([219, 29, 0])
    cube([1, 1, 1.25]);
  translate([220, 29, 0])
    cube([1, 1, 1.25]);
  translate([221, 29, 0])
    cube([1, 1, 1.25]);
  translate([222, 29, 0])
    cube([1, 1, 1.25]);
  translate([223, 29, 0])
    cube([1, 1, 1.25]);
  translate([224, 29, 0])
    cube([1, 1, 1.25]);
  translate([225, 29, 0])
    cube([1, 1, 1.25]);
  translate([226, 29, 0])
    cube([1, 1, 1.25]);
  translate([227, 29, 0])
    cube([1, 1, 1.25]);
  translate([228, 29, 0])
    cube([1, 1, 1.25]);
  translate([229, 29, 0])
    cube([1, 1, 1.25]);
  translate([230, 29, 0])
    cube([1, 1, 1.25]);
  translate([231, 29, 0])
    cube([1, 1, 1.25]);
  translate([232, 29, 0])
    cube([1, 1, 1.25]);
  translate([233, 29, 0])
    cube([1, 1, 1.25]);
  translate([234, 29, 0])
    cube([1, 1, 1.25]);
  translate([235, 29, 0])
    cube([1, 1, 1.25]);
  translate([236, 29, 0])
    cube([1, 1, 1.25]);
  translate([237, 29, 0])
    cube([1, 1, 1.25]);
  translate([238, 29, 0])
    cube([1, 1, 1.25]);
  translate([239, 29, 0])
    cube([1, 1, 1.25]);
  translate([240, 29, 0])
    cube([1, 1, 1.25]);
  translate([241, 29, 0])
    cube([1, 1, 1.25]);
  translate([242, 29, 0])
    cube([1, 1, 1.25]);
  translate([243, 29, 0])
    cube([1, 1, 1.25]);
  translate([244, 29, 0])
    cube([1, 1, 1.25]);
  translate([245, 29, 0])
    cube([1, 1, 1.25]);
  translate([246, 29, 0])
    cube([1, 1, 1.25]);
  translate([0, 30, 0])
    cube([1, 1, 1.37]);
  translate([1, 30, 0])
    cube([1, 1, 1.37]);
  translate([2, 30, 0])
    cube([1, 1, 1.37]);
  translate([3, 30, 0])
    cube([1, 1, 1.37]);
  translate([4, 30, 0])
    cube([1, 1, 1.37]);
  translate([5, 30, 0])
    cube([1, 1, 1.37]);
  translate([6, 30, 0])
    cube([1, 1, 1.37]);
  translate([7, 30, 0])
    cube([1, 1, 1.37]);
  translate([8, 30, 0])
    cube([1, 1, 1.33]);
  translate([9, 30, 0])
    cube([1, 1, 1.33]);
  translate([10, 30, 0])
    cube([1, 1, 1.33]);
  translate([11, 30, 0])
    cube([1, 1, 1.37]);
  translate([12, 30, 0])
    cube([1, 1, 1.33]);
  translate([13, 30, 0])
    cube([1, 1, 1.37]);
  translate([14, 30, 0])
    cube([1, 1, 1.33]);
  translate([15, 30, 0])
    cube([1, 1, 1.33]);
  translate([16, 30, 0])
    cube([1, 1, 1.33]);
  translate([17, 30, 0])
    cube([1, 1, 1.33]);
  translate([18, 30, 0])
    cube([1, 1, 1.41]);
  translate([19, 30, 0])
    cube([1, 1, 1.37]);
  translate([20, 30, 0])
    cube([1, 1, 1.33]);
  translate([21, 30, 0])
    cube([1, 1, 1.33]);
  translate([22, 30, 0])
    cube([1, 1, 1.37]);
  translate([23, 30, 0])
    cube([1, 1, 1.37]);
  translate([24, 30, 0])
    cube([1, 1, 1.33]);
  translate([25, 30, 0])
    cube([1, 1, 1.33]);
  translate([26, 30, 0])
    cube([1, 1, 1.37]);
  translate([27, 30, 0])
    cube([1, 1, 1.37]);
  translate([28, 30, 0])
    cube([1, 1, 1.33]);
  translate([29, 30, 0])
    cube([1, 1, 1.33]);
  translate([30, 30, 0])
    cube([1, 1, 1.33]);
  translate([31, 30, 0])
    cube([1, 1, 1.33]);
  translate([32, 30, 0])
    cube([1, 1, 1.33]);
  translate([33, 30, 0])
    cube([1, 1, 1.33]);
  translate([34, 30, 0])
    cube([1, 1, 1.33]);
  translate([35, 30, 0])
    cube([1, 1, 1.33]);
  translate([36, 30, 0])
    cube([1, 1, 1.33]);
  translate([37, 30, 0])
    cube([1, 1, 1.33]);
  translate([38, 30, 0])
    cube([1, 1, 1.33]);
  translate([39, 30, 0])
    cube([1, 1, 1.37]);
  translate([40, 30, 0])
    cube([1, 1, 1.33]);
  translate([41, 30, 0])
    cube([1, 1, 1.37]);
  translate([42, 30, 0])
    cube([1, 1, 1.37]);
  translate([43, 30, 0])
    cube([1, 1, 1.33]);
  translate([44, 30, 0])
    cube([1, 1, 1.33]);
  translate([45, 30, 0])
    cube([1, 1, 1.37]);
  translate([46, 30, 0])
    cube([1, 1, 1.33]);
  translate([47, 30, 0])
    cube([1, 1, 1.33]);
  translate([48, 30, 0])
    cube([1, 1, 1.33]);
  translate([49, 30, 0])
    cube([1, 1, 1.33]);
  translate([50, 30, 0])
    cube([1, 1, 1.37]);
  translate([51, 30, 0])
    cube([1, 1, 1.33]);
  translate([52, 30, 0])
    cube([1, 1, 1.33]);
  translate([53, 30, 0])
    cube([1, 1, 1.33]);
  translate([54, 30, 0])
    cube([1, 1, 1.33]);
  translate([55, 30, 0])
    cube([1, 1, 1.33]);
  translate([56, 30, 0])
    cube([1, 1, 1.33]);
  translate([57, 30, 0])
    cube([1, 1, 1.33]);
  translate([58, 30, 0])
    cube([1, 1, 1.33]);
  translate([59, 30, 0])
    cube([1, 1, 1.33]);
  translate([60, 30, 0])
    cube([1, 1, 1.33]);
  translate([61, 30, 0])
    cube([1, 1, 1.33]);
  translate([62, 30, 0])
    cube([1, 1, 1.33]);
  translate([63, 30, 0])
    cube([1, 1, 1.33]);
  translate([64, 30, 0])
    cube([1, 1, 1.33]);
  translate([65, 30, 0])
    cube([1, 1, 1.33]);
  translate([66, 30, 0])
    cube([1, 1, 1.33]);
  translate([67, 30, 0])
    cube([1, 1, 1.33]);
  translate([68, 30, 0])
    cube([1, 1, 1.33]);
  translate([69, 30, 0])
    cube([1, 1, 1.33]);
  translate([70, 30, 0])
    cube([1, 1, 1.29]);
  translate([71, 30, 0])
    cube([1, 1, 1.29]);
  translate([72, 30, 0])
    cube([1, 1, 1.33]);
  translate([73, 30, 0])
    cube([1, 1, 1.29]);
  translate([74, 30, 0])
    cube([1, 1, 1.33]);
  translate([75, 30, 0])
    cube([1, 1, 1.37]);
  translate([76, 30, 0])
    cube([1, 1, 2.35]);
  translate([77, 30, 0])
    cube([1, 1, 4.86]);
  translate([78, 30, 0])
    cube([1, 1, 2.35]);
  translate([79, 30, 0])
    cube([1, 1, 6.27]);
  translate([80, 30, 0])
    cube([1, 1, 4.00]);
  translate([81, 30, 0])
    cube([1, 1, 4.08]);
  translate([82, 30, 0])
    cube([1, 1, 2.20]);
  translate([83, 30, 0])
    cube([1, 1, 1.92]);
  translate([84, 30, 0])
    cube([1, 1, 1.69]);
  translate([85, 30, 0])
    cube([1, 1, 1.57]);
  translate([86, 30, 0])
    cube([1, 1, 1.53]);
  translate([87, 30, 0])
    cube([1, 1, 1.53]);
  translate([88, 30, 0])
    cube([1, 1, 1.57]);
  translate([89, 30, 0])
    cube([1, 1, 1.45]);
  translate([90, 30, 0])
    cube([1, 1, 1.41]);
  translate([91, 30, 0])
    cube([1, 1, 1.41]);
  translate([92, 30, 0])
    cube([1, 1, 1.22]);
  translate([93, 30, 0])
    cube([1, 1, 1.33]);
  translate([94, 30, 0])
    cube([1, 1, 1.33]);
  translate([95, 30, 0])
    cube([1, 1, 1.29]);
  translate([96, 30, 0])
    cube([1, 1, 1.61]);
  translate([97, 30, 0])
    cube([1, 1, 1.53]);
  translate([98, 30, 0])
    cube([1, 1, 1.53]);
  translate([99, 30, 0])
    cube([1, 1, 1.45]);
  translate([100, 30, 0])
    cube([1, 1, 1.57]);
  translate([101, 30, 0])
    cube([1, 1, 1.57]);
  translate([102, 30, 0])
    cube([1, 1, 1.45]);
  translate([103, 30, 0])
    cube([1, 1, 1.33]);
  translate([104, 30, 0])
    cube([1, 1, 1.57]);
  translate([105, 30, 0])
    cube([1, 1, 1.61]);
  translate([106, 30, 0])
    cube([1, 1, 2.04]);
  translate([107, 30, 0])
    cube([1, 1, 1.92]);
  translate([108, 30, 0])
    cube([1, 1, 1.84]);
  translate([109, 30, 0])
    cube([1, 1, 2.08]);
  translate([110, 30, 0])
    cube([1, 1, 2.82]);
  translate([111, 30, 0])
    cube([1, 1, 2.47]);
  translate([112, 30, 0])
    cube([1, 1, 2.78]);
  translate([113, 30, 0])
    cube([1, 1, 2.47]);
  translate([114, 30, 0])
    cube([1, 1, 2.59]);
  translate([115, 30, 0])
    cube([1, 1, 2.86]);
  translate([116, 30, 0])
    cube([1, 1, 2.31]);
  translate([117, 30, 0])
    cube([1, 1, 1.33]);
  translate([118, 30, 0])
    cube([1, 1, 4.08]);
  translate([119, 30, 0])
    cube([1, 1, 1.84]);
  translate([120, 30, 0])
    cube([1, 1, 2.43]);
  translate([121, 30, 0])
    cube([1, 1, 2.08]);
  translate([122, 30, 0])
    cube([1, 1, 1.61]);
  translate([123, 30, 0])
    cube([1, 1, 1.14]);
  translate([124, 30, 0])
    cube([1, 1, 1.25]);
  translate([125, 30, 0])
    cube([1, 1, 1.25]);
  translate([126, 30, 0])
    cube([1, 1, 1.25]);
  translate([127, 30, 0])
    cube([1, 1, 1.25]);
  translate([128, 30, 0])
    cube([1, 1, 1.25]);
  translate([129, 30, 0])
    cube([1, 1, 1.25]);
  translate([130, 30, 0])
    cube([1, 1, 1.25]);
  translate([131, 30, 0])
    cube([1, 1, 1.25]);
  translate([132, 30, 0])
    cube([1, 1, 1.25]);
  translate([133, 30, 0])
    cube([1, 1, 1.25]);
  translate([134, 30, 0])
    cube([1, 1, 1.25]);
  translate([135, 30, 0])
    cube([1, 1, 1.25]);
  translate([136, 30, 0])
    cube([1, 1, 1.25]);
  translate([137, 30, 0])
    cube([1, 1, 1.25]);
  translate([138, 30, 0])
    cube([1, 1, 1.25]);
  translate([139, 30, 0])
    cube([1, 1, 1.25]);
  translate([140, 30, 0])
    cube([1, 1, 1.25]);
  translate([141, 30, 0])
    cube([1, 1, 1.25]);
  translate([142, 30, 0])
    cube([1, 1, 1.25]);
  translate([143, 30, 0])
    cube([1, 1, 1.25]);
  translate([144, 30, 0])
    cube([1, 1, 1.25]);
  translate([145, 30, 0])
    cube([1, 1, 1.25]);
  translate([146, 30, 0])
    cube([1, 1, 1.25]);
  translate([147, 30, 0])
    cube([1, 1, 1.25]);
  translate([148, 30, 0])
    cube([1, 1, 1.25]);
  translate([149, 30, 0])
    cube([1, 1, 1.25]);
  translate([150, 30, 0])
    cube([1, 1, 1.25]);
  translate([151, 30, 0])
    cube([1, 1, 1.25]);
  translate([152, 30, 0])
    cube([1, 1, 1.25]);
  translate([153, 30, 0])
    cube([1, 1, 1.25]);
  translate([154, 30, 0])
    cube([1, 1, 1.25]);
  translate([155, 30, 0])
    cube([1, 1, 1.25]);
  translate([156, 30, 0])
    cube([1, 1, 1.25]);
  translate([157, 30, 0])
    cube([1, 1, 1.25]);
  translate([158, 30, 0])
    cube([1, 1, 1.25]);
  translate([159, 30, 0])
    cube([1, 1, 1.25]);
  translate([160, 30, 0])
    cube([1, 1, 1.25]);
  translate([161, 30, 0])
    cube([1, 1, 1.25]);
  translate([162, 30, 0])
    cube([1, 1, 1.25]);
  translate([163, 30, 0])
    cube([1, 1, 1.25]);
  translate([164, 30, 0])
    cube([1, 1, 1.25]);
  translate([165, 30, 0])
    cube([1, 1, 1.25]);
  translate([166, 30, 0])
    cube([1, 1, 1.25]);
  translate([167, 30, 0])
    cube([1, 1, 1.25]);
  translate([168, 30, 0])
    cube([1, 1, 1.25]);
  translate([169, 30, 0])
    cube([1, 1, 1.25]);
  translate([170, 30, 0])
    cube([1, 1, 1.25]);
  translate([171, 30, 0])
    cube([1, 1, 1.25]);
  translate([172, 30, 0])
    cube([1, 1, 1.25]);
  translate([173, 30, 0])
    cube([1, 1, 1.25]);
  translate([174, 30, 0])
    cube([1, 1, 1.25]);
  translate([175, 30, 0])
    cube([1, 1, 1.25]);
  translate([176, 30, 0])
    cube([1, 1, 1.25]);
  translate([177, 30, 0])
    cube([1, 1, 1.25]);
  translate([178, 30, 0])
    cube([1, 1, 1.25]);
  translate([179, 30, 0])
    cube([1, 1, 1.25]);
  translate([180, 30, 0])
    cube([1, 1, 1.25]);
  translate([181, 30, 0])
    cube([1, 1, 1.25]);
  translate([182, 30, 0])
    cube([1, 1, 1.25]);
  translate([183, 30, 0])
    cube([1, 1, 1.25]);
  translate([184, 30, 0])
    cube([1, 1, 1.25]);
  translate([185, 30, 0])
    cube([1, 1, 1.25]);
  translate([186, 30, 0])
    cube([1, 1, 1.25]);
  translate([187, 30, 0])
    cube([1, 1, 1.25]);
  translate([188, 30, 0])
    cube([1, 1, 1.25]);
  translate([189, 30, 0])
    cube([1, 1, 1.25]);
  translate([190, 30, 0])
    cube([1, 1, 1.25]);
  translate([191, 30, 0])
    cube([1, 1, 1.25]);
  translate([192, 30, 0])
    cube([1, 1, 1.25]);
  translate([193, 30, 0])
    cube([1, 1, 1.25]);
  translate([194, 30, 0])
    cube([1, 1, 1.25]);
  translate([195, 30, 0])
    cube([1, 1, 1.25]);
  translate([196, 30, 0])
    cube([1, 1, 1.25]);
  translate([197, 30, 0])
    cube([1, 1, 1.25]);
  translate([198, 30, 0])
    cube([1, 1, 1.25]);
  translate([199, 30, 0])
    cube([1, 1, 1.25]);
  translate([200, 30, 0])
    cube([1, 1, 1.25]);
  translate([201, 30, 0])
    cube([1, 1, 1.25]);
  translate([202, 30, 0])
    cube([1, 1, 1.25]);
  translate([203, 30, 0])
    cube([1, 1, 1.25]);
  translate([204, 30, 0])
    cube([1, 1, 1.25]);
  translate([205, 30, 0])
    cube([1, 1, 1.25]);
  translate([206, 30, 0])
    cube([1, 1, 1.25]);
  translate([207, 30, 0])
    cube([1, 1, 1.25]);
  translate([208, 30, 0])
    cube([1, 1, 1.25]);
  translate([209, 30, 0])
    cube([1, 1, 1.25]);
  translate([210, 30, 0])
    cube([1, 1, 1.25]);
  translate([211, 30, 0])
    cube([1, 1, 1.25]);
  translate([212, 30, 0])
    cube([1, 1, 1.25]);
  translate([213, 30, 0])
    cube([1, 1, 1.25]);
  translate([214, 30, 0])
    cube([1, 1, 1.25]);
  translate([215, 30, 0])
    cube([1, 1, 1.25]);
  translate([216, 30, 0])
    cube([1, 1, 1.25]);
  translate([217, 30, 0])
    cube([1, 1, 1.25]);
  translate([218, 30, 0])
    cube([1, 1, 1.25]);
  translate([219, 30, 0])
    cube([1, 1, 1.25]);
  translate([220, 30, 0])
    cube([1, 1, 1.25]);
  translate([221, 30, 0])
    cube([1, 1, 1.25]);
  translate([222, 30, 0])
    cube([1, 1, 1.25]);
  translate([223, 30, 0])
    cube([1, 1, 1.25]);
  translate([224, 30, 0])
    cube([1, 1, 1.25]);
  translate([225, 30, 0])
    cube([1, 1, 1.25]);
  translate([226, 30, 0])
    cube([1, 1, 1.25]);
  translate([227, 30, 0])
    cube([1, 1, 1.25]);
  translate([228, 30, 0])
    cube([1, 1, 1.25]);
  translate([229, 30, 0])
    cube([1, 1, 1.25]);
  translate([230, 30, 0])
    cube([1, 1, 1.25]);
  translate([231, 30, 0])
    cube([1, 1, 1.25]);
  translate([232, 30, 0])
    cube([1, 1, 1.25]);
  translate([233, 30, 0])
    cube([1, 1, 1.25]);
  translate([234, 30, 0])
    cube([1, 1, 1.25]);
  translate([235, 30, 0])
    cube([1, 1, 1.25]);
  translate([236, 30, 0])
    cube([1, 1, 1.25]);
  translate([237, 30, 0])
    cube([1, 1, 1.25]);
  translate([238, 30, 0])
    cube([1, 1, 1.25]);
  translate([239, 30, 0])
    cube([1, 1, 1.25]);
  translate([240, 30, 0])
    cube([1, 1, 1.25]);
  translate([241, 30, 0])
    cube([1, 1, 1.25]);
  translate([242, 30, 0])
    cube([1, 1, 1.25]);
  translate([243, 30, 0])
    cube([1, 1, 1.25]);
  translate([244, 30, 0])
    cube([1, 1, 1.25]);
  translate([245, 30, 0])
    cube([1, 1, 1.25]);
  translate([246, 30, 0])
    cube([1, 1, 1.25]);
  translate([0, 31, 0])
    cube([1, 1, 1.37]);
  translate([1, 31, 0])
    cube([1, 1, 1.37]);
  translate([2, 31, 0])
    cube([1, 1, 1.37]);
  translate([3, 31, 0])
    cube([1, 1, 1.37]);
  translate([4, 31, 0])
    cube([1, 1, 1.37]);
  translate([5, 31, 0])
    cube([1, 1, 1.37]);
  translate([6, 31, 0])
    cube([1, 1, 1.37]);
  translate([7, 31, 0])
    cube([1, 1, 1.37]);
  translate([8, 31, 0])
    cube([1, 1, 1.37]);
  translate([9, 31, 0])
    cube([1, 1, 1.33]);
  translate([10, 31, 0])
    cube([1, 1, 1.41]);
  translate([11, 31, 0])
    cube([1, 1, 1.37]);
  translate([12, 31, 0])
    cube([1, 1, 1.33]);
  translate([13, 31, 0])
    cube([1, 1, 1.33]);
  translate([14, 31, 0])
    cube([1, 1, 1.33]);
  translate([15, 31, 0])
    cube([1, 1, 1.37]);
  translate([16, 31, 0])
    cube([1, 1, 1.37]);
  translate([17, 31, 0])
    cube([1, 1, 1.37]);
  translate([18, 31, 0])
    cube([1, 1, 1.37]);
  translate([19, 31, 0])
    cube([1, 1, 1.37]);
  translate([20, 31, 0])
    cube([1, 1, 1.37]);
  translate([21, 31, 0])
    cube([1, 1, 1.37]);
  translate([22, 31, 0])
    cube([1, 1, 1.37]);
  translate([23, 31, 0])
    cube([1, 1, 1.37]);
  translate([24, 31, 0])
    cube([1, 1, 1.37]);
  translate([25, 31, 0])
    cube([1, 1, 1.37]);
  translate([26, 31, 0])
    cube([1, 1, 1.37]);
  translate([27, 31, 0])
    cube([1, 1, 1.33]);
  translate([28, 31, 0])
    cube([1, 1, 1.33]);
  translate([29, 31, 0])
    cube([1, 1, 1.33]);
  translate([30, 31, 0])
    cube([1, 1, 1.33]);
  translate([31, 31, 0])
    cube([1, 1, 1.33]);
  translate([32, 31, 0])
    cube([1, 1, 1.33]);
  translate([33, 31, 0])
    cube([1, 1, 1.25]);
  translate([34, 31, 0])
    cube([1, 1, 1.22]);
  translate([35, 31, 0])
    cube([1, 1, 1.33]);
  translate([36, 31, 0])
    cube([1, 1, 1.33]);
  translate([37, 31, 0])
    cube([1, 1, 1.33]);
  translate([38, 31, 0])
    cube([1, 1, 1.33]);
  translate([39, 31, 0])
    cube([1, 1, 1.37]);
  translate([40, 31, 0])
    cube([1, 1, 1.33]);
  translate([41, 31, 0])
    cube([1, 1, 1.33]);
  translate([42, 31, 0])
    cube([1, 1, 1.33]);
  translate([43, 31, 0])
    cube([1, 1, 1.33]);
  translate([44, 31, 0])
    cube([1, 1, 1.33]);
  translate([45, 31, 0])
    cube([1, 1, 1.33]);
  translate([46, 31, 0])
    cube([1, 1, 1.33]);
  translate([47, 31, 0])
    cube([1, 1, 1.33]);
  translate([48, 31, 0])
    cube([1, 1, 1.33]);
  translate([49, 31, 0])
    cube([1, 1, 1.33]);
  translate([50, 31, 0])
    cube([1, 1, 1.33]);
  translate([51, 31, 0])
    cube([1, 1, 1.33]);
  translate([52, 31, 0])
    cube([1, 1, 1.33]);
  translate([53, 31, 0])
    cube([1, 1, 1.33]);
  translate([54, 31, 0])
    cube([1, 1, 1.33]);
  translate([55, 31, 0])
    cube([1, 1, 1.33]);
  translate([56, 31, 0])
    cube([1, 1, 1.33]);
  translate([57, 31, 0])
    cube([1, 1, 1.33]);
  translate([58, 31, 0])
    cube([1, 1, 1.33]);
  translate([59, 31, 0])
    cube([1, 1, 1.33]);
  translate([60, 31, 0])
    cube([1, 1, 1.33]);
  translate([61, 31, 0])
    cube([1, 1, 1.33]);
  translate([62, 31, 0])
    cube([1, 1, 1.33]);
  translate([63, 31, 0])
    cube([1, 1, 1.33]);
  translate([64, 31, 0])
    cube([1, 1, 1.33]);
  translate([65, 31, 0])
    cube([1, 1, 1.33]);
  translate([66, 31, 0])
    cube([1, 1, 1.33]);
  translate([67, 31, 0])
    cube([1, 1, 1.33]);
  translate([68, 31, 0])
    cube([1, 1, 1.33]);
  translate([69, 31, 0])
    cube([1, 1, 1.33]);
  translate([70, 31, 0])
    cube([1, 1, 1.33]);
  translate([71, 31, 0])
    cube([1, 1, 1.33]);
  translate([72, 31, 0])
    cube([1, 1, 1.33]);
  translate([73, 31, 0])
    cube([1, 1, 1.29]);
  translate([74, 31, 0])
    cube([1, 1, 1.33]);
  translate([75, 31, 0])
    cube([1, 1, 1.49]);
  translate([76, 31, 0])
    cube([1, 1, 7.18]);
  translate([77, 31, 0])
    cube([1, 1, 1.80]);
  translate([78, 31, 0])
    cube([1, 1, 6.47]);
  translate([79, 31, 0])
    cube([1, 1, 5.18]);
  translate([80, 31, 0])
    cube([1, 1, 5.73]);
  translate([81, 31, 0])
    cube([1, 1, 1.49]);
  translate([82, 31, 0])
    cube([1, 1, 3.14]);
  translate([83, 31, 0])
    cube([1, 1, 2.20]);
  translate([84, 31, 0])
    cube([1, 1, 1.65]);
  translate([85, 31, 0])
    cube([1, 1, 1.33]);
  translate([86, 31, 0])
    cube([1, 1, 1.92]);
  translate([87, 31, 0])
    cube([1, 1, 1.61]);
  translate([88, 31, 0])
    cube([1, 1, 1.49]);
  translate([89, 31, 0])
    cube([1, 1, 1.41]);
  translate([90, 31, 0])
    cube([1, 1, 1.33]);
  translate([91, 31, 0])
    cube([1, 1, 1.33]);
  translate([92, 31, 0])
    cube([1, 1, 1.37]);
  translate([93, 31, 0])
    cube([1, 1, 1.45]);
  translate([94, 31, 0])
    cube([1, 1, 1.41]);
  translate([95, 31, 0])
    cube([1, 1, 1.41]);
  translate([96, 31, 0])
    cube([1, 1, 1.65]);
  translate([97, 31, 0])
    cube([1, 1, 1.69]);
  translate([98, 31, 0])
    cube([1, 1, 1.76]);
  translate([99, 31, 0])
    cube([1, 1, 1.76]);
  translate([100, 31, 0])
    cube([1, 1, 1.92]);
  translate([101, 31, 0])
    cube([1, 1, 2.04]);
  translate([102, 31, 0])
    cube([1, 1, 2.08]);
  translate([103, 31, 0])
    cube([1, 1, 2.43]);
  translate([104, 31, 0])
    cube([1, 1, 2.75]);
  translate([105, 31, 0])
    cube([1, 1, 2.67]);
  translate([106, 31, 0])
    cube([1, 1, 2.71]);
  translate([107, 31, 0])
    cube([1, 1, 2.35]);
  translate([108, 31, 0])
    cube([1, 1, 2.24]);
  translate([109, 31, 0])
    cube([1, 1, 2.20]);
  translate([110, 31, 0])
    cube([1, 1, 2.04]);
  translate([111, 31, 0])
    cube([1, 1, 2.08]);
  translate([112, 31, 0])
    cube([1, 1, 1.96]);
  translate([113, 31, 0])
    cube([1, 1, 2.27]);
  translate([114, 31, 0])
    cube([1, 1, 2.27]);
  translate([115, 31, 0])
    cube([1, 1, 2.59]);
  translate([116, 31, 0])
    cube([1, 1, 1.49]);
  translate([117, 31, 0])
    cube([1, 1, 2.47]);
  translate([118, 31, 0])
    cube([1, 1, 1.49]);
  translate([119, 31, 0])
    cube([1, 1, 1.57]);
  translate([120, 31, 0])
    cube([1, 1, 2.39]);
  translate([121, 31, 0])
    cube([1, 1, 2.08]);
  translate([122, 31, 0])
    cube([1, 1, 2.24]);
  translate([123, 31, 0])
    cube([1, 1, 2.47]);
  translate([124, 31, 0])
    cube([1, 1, 3.92]);
  translate([125, 31, 0])
    cube([1, 1, 1.45]);
  translate([126, 31, 0])
    cube([1, 1, 1.25]);
  translate([127, 31, 0])
    cube([1, 1, 1.25]);
  translate([128, 31, 0])
    cube([1, 1, 1.22]);
  translate([129, 31, 0])
    cube([1, 1, 1.25]);
  translate([130, 31, 0])
    cube([1, 1, 1.25]);
  translate([131, 31, 0])
    cube([1, 1, 1.25]);
  translate([132, 31, 0])
    cube([1, 1, 1.25]);
  translate([133, 31, 0])
    cube([1, 1, 1.25]);
  translate([134, 31, 0])
    cube([1, 1, 1.25]);
  translate([135, 31, 0])
    cube([1, 1, 1.25]);
  translate([136, 31, 0])
    cube([1, 1, 1.25]);
  translate([137, 31, 0])
    cube([1, 1, 1.25]);
  translate([138, 31, 0])
    cube([1, 1, 1.25]);
  translate([139, 31, 0])
    cube([1, 1, 1.25]);
  translate([140, 31, 0])
    cube([1, 1, 1.25]);
  translate([141, 31, 0])
    cube([1, 1, 1.25]);
  translate([142, 31, 0])
    cube([1, 1, 1.25]);
  translate([143, 31, 0])
    cube([1, 1, 1.25]);
  translate([144, 31, 0])
    cube([1, 1, 1.25]);
  translate([145, 31, 0])
    cube([1, 1, 1.25]);
  translate([146, 31, 0])
    cube([1, 1, 1.25]);
  translate([147, 31, 0])
    cube([1, 1, 1.25]);
  translate([148, 31, 0])
    cube([1, 1, 1.25]);
  translate([149, 31, 0])
    cube([1, 1, 1.25]);
  translate([150, 31, 0])
    cube([1, 1, 1.25]);
  translate([151, 31, 0])
    cube([1, 1, 1.25]);
  translate([152, 31, 0])
    cube([1, 1, 1.25]);
  translate([153, 31, 0])
    cube([1, 1, 1.25]);
  translate([154, 31, 0])
    cube([1, 1, 1.25]);
  translate([155, 31, 0])
    cube([1, 1, 1.25]);
  translate([156, 31, 0])
    cube([1, 1, 1.25]);
  translate([157, 31, 0])
    cube([1, 1, 1.25]);
  translate([158, 31, 0])
    cube([1, 1, 1.25]);
  translate([159, 31, 0])
    cube([1, 1, 1.25]);
  translate([160, 31, 0])
    cube([1, 1, 1.25]);
  translate([161, 31, 0])
    cube([1, 1, 1.25]);
  translate([162, 31, 0])
    cube([1, 1, 1.25]);
  translate([163, 31, 0])
    cube([1, 1, 1.25]);
  translate([164, 31, 0])
    cube([1, 1, 1.25]);
  translate([165, 31, 0])
    cube([1, 1, 1.25]);
  translate([166, 31, 0])
    cube([1, 1, 1.25]);
  translate([167, 31, 0])
    cube([1, 1, 1.25]);
  translate([168, 31, 0])
    cube([1, 1, 1.25]);
  translate([169, 31, 0])
    cube([1, 1, 1.25]);
  translate([170, 31, 0])
    cube([1, 1, 1.25]);
  translate([171, 31, 0])
    cube([1, 1, 1.25]);
  translate([172, 31, 0])
    cube([1, 1, 1.25]);
  translate([173, 31, 0])
    cube([1, 1, 1.25]);
  translate([174, 31, 0])
    cube([1, 1, 1.25]);
  translate([175, 31, 0])
    cube([1, 1, 1.25]);
  translate([176, 31, 0])
    cube([1, 1, 1.25]);
  translate([177, 31, 0])
    cube([1, 1, 1.25]);
  translate([178, 31, 0])
    cube([1, 1, 1.25]);
  translate([179, 31, 0])
    cube([1, 1, 1.25]);
  translate([180, 31, 0])
    cube([1, 1, 1.25]);
  translate([181, 31, 0])
    cube([1, 1, 1.25]);
  translate([182, 31, 0])
    cube([1, 1, 1.25]);
  translate([183, 31, 0])
    cube([1, 1, 1.25]);
  translate([184, 31, 0])
    cube([1, 1, 1.25]);
  translate([185, 31, 0])
    cube([1, 1, 1.25]);
  translate([186, 31, 0])
    cube([1, 1, 1.25]);
  translate([187, 31, 0])
    cube([1, 1, 1.25]);
  translate([188, 31, 0])
    cube([1, 1, 1.25]);
  translate([189, 31, 0])
    cube([1, 1, 1.25]);
  translate([190, 31, 0])
    cube([1, 1, 1.25]);
  translate([191, 31, 0])
    cube([1, 1, 1.25]);
  translate([192, 31, 0])
    cube([1, 1, 1.25]);
  translate([193, 31, 0])
    cube([1, 1, 1.25]);
  translate([194, 31, 0])
    cube([1, 1, 1.25]);
  translate([195, 31, 0])
    cube([1, 1, 1.25]);
  translate([196, 31, 0])
    cube([1, 1, 1.25]);
  translate([197, 31, 0])
    cube([1, 1, 1.25]);
  translate([198, 31, 0])
    cube([1, 1, 1.25]);
  translate([199, 31, 0])
    cube([1, 1, 1.25]);
  translate([200, 31, 0])
    cube([1, 1, 1.25]);
  translate([201, 31, 0])
    cube([1, 1, 1.25]);
  translate([202, 31, 0])
    cube([1, 1, 1.25]);
  translate([203, 31, 0])
    cube([1, 1, 1.25]);
  translate([204, 31, 0])
    cube([1, 1, 1.25]);
  translate([205, 31, 0])
    cube([1, 1, 1.25]);
  translate([206, 31, 0])
    cube([1, 1, 1.25]);
  translate([207, 31, 0])
    cube([1, 1, 1.25]);
  translate([208, 31, 0])
    cube([1, 1, 1.25]);
  translate([209, 31, 0])
    cube([1, 1, 1.25]);
  translate([210, 31, 0])
    cube([1, 1, 1.25]);
  translate([211, 31, 0])
    cube([1, 1, 1.25]);
  translate([212, 31, 0])
    cube([1, 1, 1.25]);
  translate([213, 31, 0])
    cube([1, 1, 1.25]);
  translate([214, 31, 0])
    cube([1, 1, 1.25]);
  translate([215, 31, 0])
    cube([1, 1, 1.25]);
  translate([216, 31, 0])
    cube([1, 1, 1.25]);
  translate([217, 31, 0])
    cube([1, 1, 1.25]);
  translate([218, 31, 0])
    cube([1, 1, 1.25]);
  translate([219, 31, 0])
    cube([1, 1, 1.25]);
  translate([220, 31, 0])
    cube([1, 1, 1.25]);
  translate([221, 31, 0])
    cube([1, 1, 1.25]);
  translate([222, 31, 0])
    cube([1, 1, 1.25]);
  translate([223, 31, 0])
    cube([1, 1, 1.25]);
  translate([224, 31, 0])
    cube([1, 1, 1.25]);
  translate([225, 31, 0])
    cube([1, 1, 1.25]);
  translate([226, 31, 0])
    cube([1, 1, 1.25]);
  translate([227, 31, 0])
    cube([1, 1, 1.25]);
  translate([228, 31, 0])
    cube([1, 1, 1.25]);
  translate([229, 31, 0])
    cube([1, 1, 1.25]);
  translate([230, 31, 0])
    cube([1, 1, 1.25]);
  translate([231, 31, 0])
    cube([1, 1, 1.25]);
  translate([232, 31, 0])
    cube([1, 1, 1.25]);
  translate([233, 31, 0])
    cube([1, 1, 1.25]);
  translate([234, 31, 0])
    cube([1, 1, 1.25]);
  translate([235, 31, 0])
    cube([1, 1, 1.25]);
  translate([236, 31, 0])
    cube([1, 1, 1.25]);
  translate([237, 31, 0])
    cube([1, 1, 1.25]);
  translate([238, 31, 0])
    cube([1, 1, 1.25]);
  translate([239, 31, 0])
    cube([1, 1, 1.25]);
  translate([240, 31, 0])
    cube([1, 1, 1.25]);
  translate([241, 31, 0])
    cube([1, 1, 1.25]);
  translate([242, 31, 0])
    cube([1, 1, 1.25]);
  translate([243, 31, 0])
    cube([1, 1, 1.25]);
  translate([244, 31, 0])
    cube([1, 1, 1.25]);
  translate([245, 31, 0])
    cube([1, 1, 1.25]);
  translate([246, 31, 0])
    cube([1, 1, 1.25]);
  translate([0, 32, 0])
    cube([1, 1, 1.37]);
  translate([1, 32, 0])
    cube([1, 1, 1.37]);
  translate([2, 32, 0])
    cube([1, 1, 1.37]);
  translate([3, 32, 0])
    cube([1, 1, 1.37]);
  translate([4, 32, 0])
    cube([1, 1, 1.37]);
  translate([5, 32, 0])
    cube([1, 1, 1.37]);
  translate([6, 32, 0])
    cube([1, 1, 1.33]);
  translate([7, 32, 0])
    cube([1, 1, 1.33]);
  translate([8, 32, 0])
    cube([1, 1, 1.37]);
  translate([9, 32, 0])
    cube([1, 1, 1.37]);
  translate([10, 32, 0])
    cube([1, 1, 1.37]);
  translate([11, 32, 0])
    cube([1, 1, 1.37]);
  translate([12, 32, 0])
    cube([1, 1, 1.37]);
  translate([13, 32, 0])
    cube([1, 1, 1.37]);
  translate([14, 32, 0])
    cube([1, 1, 1.37]);
  translate([15, 32, 0])
    cube([1, 1, 1.37]);
  translate([16, 32, 0])
    cube([1, 1, 1.37]);
  translate([17, 32, 0])
    cube([1, 1, 1.37]);
  translate([18, 32, 0])
    cube([1, 1, 1.37]);
  translate([19, 32, 0])
    cube([1, 1, 1.37]);
  translate([20, 32, 0])
    cube([1, 1, 1.37]);
  translate([21, 32, 0])
    cube([1, 1, 1.37]);
  translate([22, 32, 0])
    cube([1, 1, 1.37]);
  translate([23, 32, 0])
    cube([1, 1, 1.37]);
  translate([24, 32, 0])
    cube([1, 1, 1.33]);
  translate([25, 32, 0])
    cube([1, 1, 1.33]);
  translate([26, 32, 0])
    cube([1, 1, 1.41]);
  translate([27, 32, 0])
    cube([1, 1, 1.33]);
  translate([28, 32, 0])
    cube([1, 1, 1.33]);
  translate([29, 32, 0])
    cube([1, 1, 1.33]);
  translate([30, 32, 0])
    cube([1, 1, 1.37]);
  translate([31, 32, 0])
    cube([1, 1, 1.37]);
  translate([32, 32, 0])
    cube([1, 1, 1.37]);
  translate([33, 32, 0])
    cube([1, 1, 1.37]);
  translate([34, 32, 0])
    cube([1, 1, 1.37]);
  translate([35, 32, 0])
    cube([1, 1, 1.33]);
  translate([36, 32, 0])
    cube([1, 1, 1.37]);
  translate([37, 32, 0])
    cube([1, 1, 1.37]);
  translate([38, 32, 0])
    cube([1, 1, 1.33]);
  translate([39, 32, 0])
    cube([1, 1, 1.33]);
  translate([40, 32, 0])
    cube([1, 1, 1.33]);
  translate([41, 32, 0])
    cube([1, 1, 1.33]);
  translate([42, 32, 0])
    cube([1, 1, 1.33]);
  translate([43, 32, 0])
    cube([1, 1, 1.33]);
  translate([44, 32, 0])
    cube([1, 1, 1.33]);
  translate([45, 32, 0])
    cube([1, 1, 1.33]);
  translate([46, 32, 0])
    cube([1, 1, 1.33]);
  translate([47, 32, 0])
    cube([1, 1, 1.33]);
  translate([48, 32, 0])
    cube([1, 1, 1.33]);
  translate([49, 32, 0])
    cube([1, 1, 1.33]);
  translate([50, 32, 0])
    cube([1, 1, 1.33]);
  translate([51, 32, 0])
    cube([1, 1, 1.33]);
  translate([52, 32, 0])
    cube([1, 1, 1.33]);
  translate([53, 32, 0])
    cube([1, 1, 1.33]);
  translate([54, 32, 0])
    cube([1, 1, 1.33]);
  translate([55, 32, 0])
    cube([1, 1, 1.33]);
  translate([56, 32, 0])
    cube([1, 1, 1.33]);
  translate([57, 32, 0])
    cube([1, 1, 1.33]);
  translate([58, 32, 0])
    cube([1, 1, 1.33]);
  translate([59, 32, 0])
    cube([1, 1, 1.33]);
  translate([60, 32, 0])
    cube([1, 1, 1.33]);
  translate([61, 32, 0])
    cube([1, 1, 1.33]);
  translate([62, 32, 0])
    cube([1, 1, 1.33]);
  translate([63, 32, 0])
    cube([1, 1, 1.33]);
  translate([64, 32, 0])
    cube([1, 1, 1.33]);
  translate([65, 32, 0])
    cube([1, 1, 1.33]);
  translate([66, 32, 0])
    cube([1, 1, 1.33]);
  translate([67, 32, 0])
    cube([1, 1, 1.33]);
  translate([68, 32, 0])
    cube([1, 1, 1.33]);
  translate([69, 32, 0])
    cube([1, 1, 1.33]);
  translate([70, 32, 0])
    cube([1, 1, 1.33]);
  translate([71, 32, 0])
    cube([1, 1, 1.33]);
  translate([72, 32, 0])
    cube([1, 1, 1.33]);
  translate([73, 32, 0])
    cube([1, 1, 1.29]);
  translate([74, 32, 0])
    cube([1, 1, 1.29]);
  translate([75, 32, 0])
    cube([1, 1, 1.10]);
  translate([76, 32, 0])
    cube([1, 1, 7.69]);
  translate([77, 32, 0])
    cube([1, 1, 5.14]);
  translate([78, 32, 0])
    cube([1, 1, 4.86]);
  translate([79, 32, 0])
    cube([1, 1, 6.31]);
  translate([80, 32, 0])
    cube([1, 1, 3.92]);
  translate([81, 32, 0])
    cube([1, 1, 3.69]);
  translate([82, 32, 0])
    cube([1, 1, 2.59]);
  translate([83, 32, 0])
    cube([1, 1, 1.73]);
  translate([84, 32, 0])
    cube([1, 1, 2.04]);
  translate([85, 32, 0])
    cube([1, 1, 2.27]);
  translate([86, 32, 0])
    cube([1, 1, 1.37]);
  translate([87, 32, 0])
    cube([1, 1, 1.29]);
  translate([88, 32, 0])
    cube([1, 1, 1.37]);
  translate([89, 32, 0])
    cube([1, 1, 1.53]);
  translate([90, 32, 0])
    cube([1, 1, 1.53]);
  translate([91, 32, 0])
    cube([1, 1, 1.45]);
  translate([92, 32, 0])
    cube([1, 1, 1.61]);
  translate([93, 32, 0])
    cube([1, 1, 1.41]);
  translate([94, 32, 0])
    cube([1, 1, 1.41]);
  translate([95, 32, 0])
    cube([1, 1, 1.45]);
  translate([96, 32, 0])
    cube([1, 1, 1.53]);
  translate([97, 32, 0])
    cube([1, 1, 1.53]);
  translate([98, 32, 0])
    cube([1, 1, 1.76]);
  translate([99, 32, 0])
    cube([1, 1, 1.96]);
  translate([100, 32, 0])
    cube([1, 1, 1.49]);
  translate([101, 32, 0])
    cube([1, 1, 1.53]);
  translate([102, 32, 0])
    cube([1, 1, 1.92]);
  translate([103, 32, 0])
    cube([1, 1, 2.43]);
  translate([104, 32, 0])
    cube([1, 1, 2.75]);
  translate([105, 32, 0])
    cube([1, 1, 2.51]);
  translate([106, 32, 0])
    cube([1, 1, 2.04]);
  translate([107, 32, 0])
    cube([1, 1, 1.96]);
  translate([108, 32, 0])
    cube([1, 1, 2.04]);
  translate([109, 32, 0])
    cube([1, 1, 1.92]);
  translate([110, 32, 0])
    cube([1, 1, 2.08]);
  translate([111, 32, 0])
    cube([1, 1, 2.27]);
  translate([112, 32, 0])
    cube([1, 1, 2.31]);
  translate([113, 32, 0])
    cube([1, 1, 1.06]);
  translate([114, 32, 0])
    cube([1, 1, 1.96]);
  translate([115, 32, 0])
    cube([1, 1, 2.71]);
  translate([116, 32, 0])
    cube([1, 1, 1.29]);
  translate([117, 32, 0])
    cube([1, 1, 3.57]);
  translate([118, 32, 0])
    cube([1, 1, 2.63]);
  translate([119, 32, 0])
    cube([1, 1, 3.18]);
  translate([120, 32, 0])
    cube([1, 1, 2.63]);
  translate([121, 32, 0])
    cube([1, 1, 2.39]);
  translate([122, 32, 0])
    cube([1, 1, 2.20]);
  translate([123, 32, 0])
    cube([1, 1, 2.24]);
  translate([124, 32, 0])
    cube([1, 1, 3.41]);
  translate([125, 32, 0])
    cube([1, 1, 5.96]);
  translate([126, 32, 0])
    cube([1, 1, 1.10]);
  translate([127, 32, 0])
    cube([1, 1, 1.25]);
  translate([128, 32, 0])
    cube([1, 1, 1.25]);
  translate([129, 32, 0])
    cube([1, 1, 1.25]);
  translate([130, 32, 0])
    cube([1, 1, 1.25]);
  translate([131, 32, 0])
    cube([1, 1, 1.25]);
  translate([132, 32, 0])
    cube([1, 1, 1.25]);
  translate([133, 32, 0])
    cube([1, 1, 1.25]);
  translate([134, 32, 0])
    cube([1, 1, 1.25]);
  translate([135, 32, 0])
    cube([1, 1, 1.25]);
  translate([136, 32, 0])
    cube([1, 1, 1.25]);
  translate([137, 32, 0])
    cube([1, 1, 1.25]);
  translate([138, 32, 0])
    cube([1, 1, 1.25]);
  translate([139, 32, 0])
    cube([1, 1, 1.25]);
  translate([140, 32, 0])
    cube([1, 1, 1.25]);
  translate([141, 32, 0])
    cube([1, 1, 1.25]);
  translate([142, 32, 0])
    cube([1, 1, 1.25]);
  translate([143, 32, 0])
    cube([1, 1, 1.25]);
  translate([144, 32, 0])
    cube([1, 1, 1.25]);
  translate([145, 32, 0])
    cube([1, 1, 1.25]);
  translate([146, 32, 0])
    cube([1, 1, 1.25]);
  translate([147, 32, 0])
    cube([1, 1, 1.25]);
  translate([148, 32, 0])
    cube([1, 1, 1.25]);
  translate([149, 32, 0])
    cube([1, 1, 1.25]);
  translate([150, 32, 0])
    cube([1, 1, 1.25]);
  translate([151, 32, 0])
    cube([1, 1, 1.25]);
  translate([152, 32, 0])
    cube([1, 1, 1.25]);
  translate([153, 32, 0])
    cube([1, 1, 1.25]);
  translate([154, 32, 0])
    cube([1, 1, 1.25]);
  translate([155, 32, 0])
    cube([1, 1, 1.25]);
  translate([156, 32, 0])
    cube([1, 1, 1.25]);
  translate([157, 32, 0])
    cube([1, 1, 1.25]);
  translate([158, 32, 0])
    cube([1, 1, 1.25]);
  translate([159, 32, 0])
    cube([1, 1, 1.25]);
  translate([160, 32, 0])
    cube([1, 1, 1.25]);
  translate([161, 32, 0])
    cube([1, 1, 1.25]);
  translate([162, 32, 0])
    cube([1, 1, 1.25]);
  translate([163, 32, 0])
    cube([1, 1, 1.25]);
  translate([164, 32, 0])
    cube([1, 1, 1.25]);
  translate([165, 32, 0])
    cube([1, 1, 1.25]);
  translate([166, 32, 0])
    cube([1, 1, 1.25]);
  translate([167, 32, 0])
    cube([1, 1, 1.25]);
  translate([168, 32, 0])
    cube([1, 1, 1.25]);
  translate([169, 32, 0])
    cube([1, 1, 1.25]);
  translate([170, 32, 0])
    cube([1, 1, 1.25]);
  translate([171, 32, 0])
    cube([1, 1, 1.25]);
  translate([172, 32, 0])
    cube([1, 1, 1.25]);
  translate([173, 32, 0])
    cube([1, 1, 1.25]);
  translate([174, 32, 0])
    cube([1, 1, 1.25]);
  translate([175, 32, 0])
    cube([1, 1, 1.25]);
  translate([176, 32, 0])
    cube([1, 1, 1.25]);
  translate([177, 32, 0])
    cube([1, 1, 1.25]);
  translate([178, 32, 0])
    cube([1, 1, 1.25]);
  translate([179, 32, 0])
    cube([1, 1, 1.25]);
  translate([180, 32, 0])
    cube([1, 1, 1.25]);
  translate([181, 32, 0])
    cube([1, 1, 1.25]);
  translate([182, 32, 0])
    cube([1, 1, 1.25]);
  translate([183, 32, 0])
    cube([1, 1, 1.25]);
  translate([184, 32, 0])
    cube([1, 1, 1.25]);
  translate([185, 32, 0])
    cube([1, 1, 1.25]);
  translate([186, 32, 0])
    cube([1, 1, 1.25]);
  translate([187, 32, 0])
    cube([1, 1, 1.25]);
  translate([188, 32, 0])
    cube([1, 1, 1.25]);
  translate([189, 32, 0])
    cube([1, 1, 1.25]);
  translate([190, 32, 0])
    cube([1, 1, 1.25]);
  translate([191, 32, 0])
    cube([1, 1, 1.25]);
  translate([192, 32, 0])
    cube([1, 1, 1.25]);
  translate([193, 32, 0])
    cube([1, 1, 1.25]);
  translate([194, 32, 0])
    cube([1, 1, 1.25]);
  translate([195, 32, 0])
    cube([1, 1, 1.25]);
  translate([196, 32, 0])
    cube([1, 1, 1.25]);
  translate([197, 32, 0])
    cube([1, 1, 1.25]);
  translate([198, 32, 0])
    cube([1, 1, 1.25]);
  translate([199, 32, 0])
    cube([1, 1, 1.25]);
  translate([200, 32, 0])
    cube([1, 1, 1.25]);
  translate([201, 32, 0])
    cube([1, 1, 1.25]);
  translate([202, 32, 0])
    cube([1, 1, 1.25]);
  translate([203, 32, 0])
    cube([1, 1, 1.25]);
  translate([204, 32, 0])
    cube([1, 1, 1.25]);
  translate([205, 32, 0])
    cube([1, 1, 1.25]);
  translate([206, 32, 0])
    cube([1, 1, 1.25]);
  translate([207, 32, 0])
    cube([1, 1, 1.25]);
  translate([208, 32, 0])
    cube([1, 1, 1.25]);
  translate([209, 32, 0])
    cube([1, 1, 1.25]);
  translate([210, 32, 0])
    cube([1, 1, 1.25]);
  translate([211, 32, 0])
    cube([1, 1, 1.25]);
  translate([212, 32, 0])
    cube([1, 1, 1.25]);
  translate([213, 32, 0])
    cube([1, 1, 1.25]);
  translate([214, 32, 0])
    cube([1, 1, 1.25]);
  translate([215, 32, 0])
    cube([1, 1, 1.25]);
  translate([216, 32, 0])
    cube([1, 1, 1.25]);
  translate([217, 32, 0])
    cube([1, 1, 1.25]);
  translate([218, 32, 0])
    cube([1, 1, 1.25]);
  translate([219, 32, 0])
    cube([1, 1, 1.25]);
  translate([220, 32, 0])
    cube([1, 1, 1.25]);
  translate([221, 32, 0])
    cube([1, 1, 1.25]);
  translate([222, 32, 0])
    cube([1, 1, 1.25]);
  translate([223, 32, 0])
    cube([1, 1, 1.25]);
  translate([224, 32, 0])
    cube([1, 1, 1.25]);
  translate([225, 32, 0])
    cube([1, 1, 1.25]);
  translate([226, 32, 0])
    cube([1, 1, 1.25]);
  translate([227, 32, 0])
    cube([1, 1, 1.25]);
  translate([228, 32, 0])
    cube([1, 1, 1.25]);
  translate([229, 32, 0])
    cube([1, 1, 1.25]);
  translate([230, 32, 0])
    cube([1, 1, 1.25]);
  translate([231, 32, 0])
    cube([1, 1, 1.25]);
  translate([232, 32, 0])
    cube([1, 1, 1.25]);
  translate([233, 32, 0])
    cube([1, 1, 1.25]);
  translate([234, 32, 0])
    cube([1, 1, 1.25]);
  translate([235, 32, 0])
    cube([1, 1, 1.25]);
  translate([236, 32, 0])
    cube([1, 1, 1.25]);
  translate([237, 32, 0])
    cube([1, 1, 1.25]);
  translate([238, 32, 0])
    cube([1, 1, 1.25]);
  translate([239, 32, 0])
    cube([1, 1, 1.25]);
  translate([240, 32, 0])
    cube([1, 1, 1.25]);
  translate([241, 32, 0])
    cube([1, 1, 1.25]);
  translate([242, 32, 0])
    cube([1, 1, 1.25]);
  translate([243, 32, 0])
    cube([1, 1, 1.25]);
  translate([244, 32, 0])
    cube([1, 1, 1.25]);
  translate([245, 32, 0])
    cube([1, 1, 1.25]);
  translate([246, 32, 0])
    cube([1, 1, 1.25]);
  translate([0, 33, 0])
    cube([1, 1, 1.37]);
  translate([1, 33, 0])
    cube([1, 1, 1.37]);
  translate([2, 33, 0])
    cube([1, 1, 1.37]);
  translate([3, 33, 0])
    cube([1, 1, 1.37]);
  translate([4, 33, 0])
    cube([1, 1, 1.37]);
  translate([5, 33, 0])
    cube([1, 1, 1.37]);
  translate([6, 33, 0])
    cube([1, 1, 1.33]);
  translate([7, 33, 0])
    cube([1, 1, 1.33]);
  translate([8, 33, 0])
    cube([1, 1, 1.37]);
  translate([9, 33, 0])
    cube([1, 1, 1.37]);
  translate([10, 33, 0])
    cube([1, 1, 1.37]);
  translate([11, 33, 0])
    cube([1, 1, 1.37]);
  translate([12, 33, 0])
    cube([1, 1, 1.37]);
  translate([13, 33, 0])
    cube([1, 1, 1.37]);
  translate([14, 33, 0])
    cube([1, 1, 1.37]);
  translate([15, 33, 0])
    cube([1, 1, 1.37]);
  translate([16, 33, 0])
    cube([1, 1, 1.37]);
  translate([17, 33, 0])
    cube([1, 1, 1.37]);
  translate([18, 33, 0])
    cube([1, 1, 1.37]);
  translate([19, 33, 0])
    cube([1, 1, 1.37]);
  translate([20, 33, 0])
    cube([1, 1, 1.37]);
  translate([21, 33, 0])
    cube([1, 1, 1.37]);
  translate([22, 33, 0])
    cube([1, 1, 1.37]);
  translate([23, 33, 0])
    cube([1, 1, 1.37]);
  translate([24, 33, 0])
    cube([1, 1, 1.33]);
  translate([25, 33, 0])
    cube([1, 1, 1.33]);
  translate([26, 33, 0])
    cube([1, 1, 1.41]);
  translate([27, 33, 0])
    cube([1, 1, 1.33]);
  translate([28, 33, 0])
    cube([1, 1, 1.33]);
  translate([29, 33, 0])
    cube([1, 1, 1.33]);
  translate([30, 33, 0])
    cube([1, 1, 1.37]);
  translate([31, 33, 0])
    cube([1, 1, 1.37]);
  translate([32, 33, 0])
    cube([1, 1, 1.37]);
  translate([33, 33, 0])
    cube([1, 1, 1.37]);
  translate([34, 33, 0])
    cube([1, 1, 1.37]);
  translate([35, 33, 0])
    cube([1, 1, 1.33]);
  translate([36, 33, 0])
    cube([1, 1, 1.33]);
  translate([37, 33, 0])
    cube([1, 1, 1.33]);
  translate([38, 33, 0])
    cube([1, 1, 1.33]);
  translate([39, 33, 0])
    cube([1, 1, 1.33]);
  translate([40, 33, 0])
    cube([1, 1, 1.33]);
  translate([41, 33, 0])
    cube([1, 1, 1.33]);
  translate([42, 33, 0])
    cube([1, 1, 1.33]);
  translate([43, 33, 0])
    cube([1, 1, 1.33]);
  translate([44, 33, 0])
    cube([1, 1, 1.33]);
  translate([45, 33, 0])
    cube([1, 1, 1.33]);
  translate([46, 33, 0])
    cube([1, 1, 1.33]);
  translate([47, 33, 0])
    cube([1, 1, 1.33]);
  translate([48, 33, 0])
    cube([1, 1, 1.33]);
  translate([49, 33, 0])
    cube([1, 1, 1.33]);
  translate([50, 33, 0])
    cube([1, 1, 1.33]);
  translate([51, 33, 0])
    cube([1, 1, 1.33]);
  translate([52, 33, 0])
    cube([1, 1, 1.33]);
  translate([53, 33, 0])
    cube([1, 1, 1.33]);
  translate([54, 33, 0])
    cube([1, 1, 1.33]);
  translate([55, 33, 0])
    cube([1, 1, 1.33]);
  translate([56, 33, 0])
    cube([1, 1, 1.33]);
  translate([57, 33, 0])
    cube([1, 1, 1.33]);
  translate([58, 33, 0])
    cube([1, 1, 1.33]);
  translate([59, 33, 0])
    cube([1, 1, 1.33]);
  translate([60, 33, 0])
    cube([1, 1, 1.33]);
  translate([61, 33, 0])
    cube([1, 1, 1.33]);
  translate([62, 33, 0])
    cube([1, 1, 1.33]);
  translate([63, 33, 0])
    cube([1, 1, 1.33]);
  translate([64, 33, 0])
    cube([1, 1, 1.33]);
  translate([65, 33, 0])
    cube([1, 1, 1.33]);
  translate([66, 33, 0])
    cube([1, 1, 1.33]);
  translate([67, 33, 0])
    cube([1, 1, 1.33]);
  translate([68, 33, 0])
    cube([1, 1, 1.33]);
  translate([69, 33, 0])
    cube([1, 1, 1.33]);
  translate([70, 33, 0])
    cube([1, 1, 1.33]);
  translate([71, 33, 0])
    cube([1, 1, 1.33]);
  translate([72, 33, 0])
    cube([1, 1, 1.33]);
  translate([73, 33, 0])
    cube([1, 1, 1.29]);
  translate([74, 33, 0])
    cube([1, 1, 1.29]);
  translate([75, 33, 0])
    cube([1, 1, 7.33]);
  translate([76, 33, 0])
    cube([1, 1, 6.24]);
  translate([77, 33, 0])
    cube([1, 1, 1.06]);
  translate([78, 33, 0])
    cube([1, 1, 7.57]);
  translate([79, 33, 0])
    cube([1, 1, 5.14]);
  translate([80, 33, 0])
    cube([1, 1, 4.67]);
  translate([81, 33, 0])
    cube([1, 1, 2.63]);
  translate([82, 33, 0])
    cube([1, 1, 2.20]);
  translate([83, 33, 0])
    cube([1, 1, 1.65]);
  translate([84, 33, 0])
    cube([1, 1, 2.35]);
  translate([85, 33, 0])
    cube([1, 1, 1.33]);
  translate([86, 33, 0])
    cube([1, 1, 1.45]);
  translate([87, 33, 0])
    cube([1, 1, 1.45]);
  translate([88, 33, 0])
    cube([1, 1, 1.18]);
  translate([89, 33, 0])
    cube([1, 1, 1.02]);
  translate([90, 33, 0])
    cube([1, 1, 0.86]);
  translate([91, 33, 0])
    cube([1, 1, 1.02]);
  translate([92, 33, 0])
    cube([1, 1, 1.25]);
  translate([93, 33, 0])
    cube([1, 1, 1.53]);
  translate([94, 33, 0])
    cube([1, 1, 1.41]);
  translate([95, 33, 0])
    cube([1, 1, 1.49]);
  translate([96, 33, 0])
    cube([1, 1, 1.45]);
  translate([97, 33, 0])
    cube([1, 1, 1.29]);
  translate([98, 33, 0])
    cube([1, 1, 1.73]);
  translate([99, 33, 0])
    cube([1, 1, 1.96]);
  translate([100, 33, 0])
    cube([1, 1, 1.76]);
  translate([101, 33, 0])
    cube([1, 1, 1.57]);
  translate([102, 33, 0])
    cube([1, 1, 1.96]);
  translate([103, 33, 0])
    cube([1, 1, 3.06]);
  translate([104, 33, 0])
    cube([1, 1, 3.45]);
  translate([105, 33, 0])
    cube([1, 1, 2.71]);
  translate([106, 33, 0])
    cube([1, 1, 2.31]);
  translate([107, 33, 0])
    cube([1, 1, 2.55]);
  translate([108, 33, 0])
    cube([1, 1, 1.96]);
  translate([109, 33, 0])
    cube([1, 1, 1.88]);
  translate([110, 33, 0])
    cube([1, 1, 2.04]);
  translate([111, 33, 0])
    cube([1, 1, 2.04]);
  translate([112, 33, 0])
    cube([1, 1, 2.39]);
  translate([113, 33, 0])
    cube([1, 1, 2.20]);
  translate([114, 33, 0])
    cube([1, 1, 3.29]);
  translate([115, 33, 0])
    cube([1, 1, 1.65]);
  translate([116, 33, 0])
    cube([1, 1, 2.90]);
  translate([117, 33, 0])
    cube([1, 1, 3.45]);
  translate([118, 33, 0])
    cube([1, 1, 3.76]);
  translate([119, 33, 0])
    cube([1, 1, 1.69]);
  translate([120, 33, 0])
    cube([1, 1, 1.37]);
  translate([121, 33, 0])
    cube([1, 1, 1.29]);
  translate([122, 33, 0])
    cube([1, 1, 1.25]);
  translate([123, 33, 0])
    cube([1, 1, 1.22]);
  translate([124, 33, 0])
    cube([1, 1, 2.35]);
  translate([125, 33, 0])
    cube([1, 1, 5.96]);
  translate([126, 33, 0])
    cube([1, 1, 6.75]);
  translate([127, 33, 0])
    cube([1, 1, 1.22]);
  translate([128, 33, 0])
    cube([1, 1, 1.25]);
  translate([129, 33, 0])
    cube([1, 1, 1.25]);
  translate([130, 33, 0])
    cube([1, 1, 1.25]);
  translate([131, 33, 0])
    cube([1, 1, 1.25]);
  translate([132, 33, 0])
    cube([1, 1, 1.25]);
  translate([133, 33, 0])
    cube([1, 1, 1.25]);
  translate([134, 33, 0])
    cube([1, 1, 1.25]);
  translate([135, 33, 0])
    cube([1, 1, 1.25]);
  translate([136, 33, 0])
    cube([1, 1, 1.25]);
  translate([137, 33, 0])
    cube([1, 1, 1.25]);
  translate([138, 33, 0])
    cube([1, 1, 1.25]);
  translate([139, 33, 0])
    cube([1, 1, 1.25]);
  translate([140, 33, 0])
    cube([1, 1, 1.25]);
  translate([141, 33, 0])
    cube([1, 1, 1.25]);
  translate([142, 33, 0])
    cube([1, 1, 1.25]);
  translate([143, 33, 0])
    cube([1, 1, 1.25]);
  translate([144, 33, 0])
    cube([1, 1, 1.25]);
  translate([145, 33, 0])
    cube([1, 1, 1.25]);
  translate([146, 33, 0])
    cube([1, 1, 1.25]);
  translate([147, 33, 0])
    cube([1, 1, 1.25]);
  translate([148, 33, 0])
    cube([1, 1, 1.25]);
  translate([149, 33, 0])
    cube([1, 1, 1.25]);
  translate([150, 33, 0])
    cube([1, 1, 1.25]);
  translate([151, 33, 0])
    cube([1, 1, 1.25]);
  translate([152, 33, 0])
    cube([1, 1, 1.25]);
  translate([153, 33, 0])
    cube([1, 1, 1.25]);
  translate([154, 33, 0])
    cube([1, 1, 1.25]);
  translate([155, 33, 0])
    cube([1, 1, 1.25]);
  translate([156, 33, 0])
    cube([1, 1, 1.25]);
  translate([157, 33, 0])
    cube([1, 1, 1.25]);
  translate([158, 33, 0])
    cube([1, 1, 1.25]);
  translate([159, 33, 0])
    cube([1, 1, 1.25]);
  translate([160, 33, 0])
    cube([1, 1, 1.25]);
  translate([161, 33, 0])
    cube([1, 1, 1.25]);
  translate([162, 33, 0])
    cube([1, 1, 1.25]);
  translate([163, 33, 0])
    cube([1, 1, 1.25]);
  translate([164, 33, 0])
    cube([1, 1, 1.25]);
  translate([165, 33, 0])
    cube([1, 1, 1.25]);
  translate([166, 33, 0])
    cube([1, 1, 1.25]);
  translate([167, 33, 0])
    cube([1, 1, 1.25]);
  translate([168, 33, 0])
    cube([1, 1, 1.25]);
  translate([169, 33, 0])
    cube([1, 1, 1.25]);
  translate([170, 33, 0])
    cube([1, 1, 1.25]);
  translate([171, 33, 0])
    cube([1, 1, 1.25]);
  translate([172, 33, 0])
    cube([1, 1, 1.25]);
  translate([173, 33, 0])
    cube([1, 1, 1.25]);
  translate([174, 33, 0])
    cube([1, 1, 1.25]);
  translate([175, 33, 0])
    cube([1, 1, 1.25]);
  translate([176, 33, 0])
    cube([1, 1, 1.25]);
  translate([177, 33, 0])
    cube([1, 1, 1.25]);
  translate([178, 33, 0])
    cube([1, 1, 1.25]);
  translate([179, 33, 0])
    cube([1, 1, 1.25]);
  translate([180, 33, 0])
    cube([1, 1, 1.25]);
  translate([181, 33, 0])
    cube([1, 1, 1.25]);
  translate([182, 33, 0])
    cube([1, 1, 1.25]);
  translate([183, 33, 0])
    cube([1, 1, 1.25]);
  translate([184, 33, 0])
    cube([1, 1, 1.25]);
  translate([185, 33, 0])
    cube([1, 1, 1.25]);
  translate([186, 33, 0])
    cube([1, 1, 1.25]);
  translate([187, 33, 0])
    cube([1, 1, 1.25]);
  translate([188, 33, 0])
    cube([1, 1, 1.25]);
  translate([189, 33, 0])
    cube([1, 1, 1.25]);
  translate([190, 33, 0])
    cube([1, 1, 1.25]);
  translate([191, 33, 0])
    cube([1, 1, 1.25]);
  translate([192, 33, 0])
    cube([1, 1, 1.25]);
  translate([193, 33, 0])
    cube([1, 1, 1.25]);
  translate([194, 33, 0])
    cube([1, 1, 1.25]);
  translate([195, 33, 0])
    cube([1, 1, 1.25]);
  translate([196, 33, 0])
    cube([1, 1, 1.25]);
  translate([197, 33, 0])
    cube([1, 1, 1.25]);
  translate([198, 33, 0])
    cube([1, 1, 1.25]);
  translate([199, 33, 0])
    cube([1, 1, 1.25]);
  translate([200, 33, 0])
    cube([1, 1, 1.25]);
  translate([201, 33, 0])
    cube([1, 1, 1.25]);
  translate([202, 33, 0])
    cube([1, 1, 1.25]);
  translate([203, 33, 0])
    cube([1, 1, 1.25]);
  translate([204, 33, 0])
    cube([1, 1, 1.25]);
  translate([205, 33, 0])
    cube([1, 1, 1.25]);
  translate([206, 33, 0])
    cube([1, 1, 1.25]);
  translate([207, 33, 0])
    cube([1, 1, 1.25]);
  translate([208, 33, 0])
    cube([1, 1, 1.25]);
  translate([209, 33, 0])
    cube([1, 1, 1.25]);
  translate([210, 33, 0])
    cube([1, 1, 1.25]);
  translate([211, 33, 0])
    cube([1, 1, 1.25]);
  translate([212, 33, 0])
    cube([1, 1, 1.25]);
  translate([213, 33, 0])
    cube([1, 1, 1.25]);
  translate([214, 33, 0])
    cube([1, 1, 1.25]);
  translate([215, 33, 0])
    cube([1, 1, 1.25]);
  translate([216, 33, 0])
    cube([1, 1, 1.25]);
  translate([217, 33, 0])
    cube([1, 1, 1.25]);
  translate([218, 33, 0])
    cube([1, 1, 1.25]);
  translate([219, 33, 0])
    cube([1, 1, 1.25]);
  translate([220, 33, 0])
    cube([1, 1, 1.25]);
  translate([221, 33, 0])
    cube([1, 1, 1.25]);
  translate([222, 33, 0])
    cube([1, 1, 1.25]);
  translate([223, 33, 0])
    cube([1, 1, 1.25]);
  translate([224, 33, 0])
    cube([1, 1, 1.25]);
  translate([225, 33, 0])
    cube([1, 1, 1.25]);
  translate([226, 33, 0])
    cube([1, 1, 1.25]);
  translate([227, 33, 0])
    cube([1, 1, 1.25]);
  translate([228, 33, 0])
    cube([1, 1, 1.25]);
  translate([229, 33, 0])
    cube([1, 1, 1.25]);
  translate([230, 33, 0])
    cube([1, 1, 1.25]);
  translate([231, 33, 0])
    cube([1, 1, 1.25]);
  translate([232, 33, 0])
    cube([1, 1, 1.25]);
  translate([233, 33, 0])
    cube([1, 1, 1.25]);
  translate([234, 33, 0])
    cube([1, 1, 1.25]);
  translate([235, 33, 0])
    cube([1, 1, 1.25]);
  translate([236, 33, 0])
    cube([1, 1, 1.25]);
  translate([237, 33, 0])
    cube([1, 1, 1.25]);
  translate([238, 33, 0])
    cube([1, 1, 1.25]);
  translate([239, 33, 0])
    cube([1, 1, 1.25]);
  translate([240, 33, 0])
    cube([1, 1, 1.25]);
  translate([241, 33, 0])
    cube([1, 1, 1.25]);
  translate([242, 33, 0])
    cube([1, 1, 1.25]);
  translate([243, 33, 0])
    cube([1, 1, 1.25]);
  translate([244, 33, 0])
    cube([1, 1, 1.25]);
  translate([245, 33, 0])
    cube([1, 1, 1.25]);
  translate([246, 33, 0])
    cube([1, 1, 1.25]);
  translate([0, 34, 0])
    cube([1, 1, 1.37]);
  translate([1, 34, 0])
    cube([1, 1, 1.37]);
  translate([2, 34, 0])
    cube([1, 1, 1.37]);
  translate([3, 34, 0])
    cube([1, 1, 1.37]);
  translate([4, 34, 0])
    cube([1, 1, 1.37]);
  translate([5, 34, 0])
    cube([1, 1, 1.37]);
  translate([6, 34, 0])
    cube([1, 1, 1.37]);
  translate([7, 34, 0])
    cube([1, 1, 1.37]);
  translate([8, 34, 0])
    cube([1, 1, 1.37]);
  translate([9, 34, 0])
    cube([1, 1, 1.37]);
  translate([10, 34, 0])
    cube([1, 1, 1.37]);
  translate([11, 34, 0])
    cube([1, 1, 1.37]);
  translate([12, 34, 0])
    cube([1, 1, 1.37]);
  translate([13, 34, 0])
    cube([1, 1, 1.37]);
  translate([14, 34, 0])
    cube([1, 1, 1.29]);
  translate([15, 34, 0])
    cube([1, 1, 1.33]);
  translate([16, 34, 0])
    cube([1, 1, 1.37]);
  translate([17, 34, 0])
    cube([1, 1, 1.02]);
  translate([18, 34, 0])
    cube([1, 1, 0.86]);
  translate([19, 34, 0])
    cube([1, 1, 1.25]);
  translate([20, 34, 0])
    cube([1, 1, 1.37]);
  translate([21, 34, 0])
    cube([1, 1, 1.41]);
  translate([22, 34, 0])
    cube([1, 1, 1.33]);
  translate([23, 34, 0])
    cube([1, 1, 1.33]);
  translate([24, 34, 0])
    cube([1, 1, 1.33]);
  translate([25, 34, 0])
    cube([1, 1, 1.33]);
  translate([26, 34, 0])
    cube([1, 1, 1.33]);
  translate([27, 34, 0])
    cube([1, 1, 1.37]);
  translate([28, 34, 0])
    cube([1, 1, 1.33]);
  translate([29, 34, 0])
    cube([1, 1, 1.37]);
  translate([30, 34, 0])
    cube([1, 1, 1.37]);
  translate([31, 34, 0])
    cube([1, 1, 1.37]);
  translate([32, 34, 0])
    cube([1, 1, 1.33]);
  translate([33, 34, 0])
    cube([1, 1, 1.37]);
  translate([34, 34, 0])
    cube([1, 1, 1.37]);
  translate([35, 34, 0])
    cube([1, 1, 1.33]);
  translate([36, 34, 0])
    cube([1, 1, 1.33]);
  translate([37, 34, 0])
    cube([1, 1, 1.33]);
  translate([38, 34, 0])
    cube([1, 1, 1.33]);
  translate([39, 34, 0])
    cube([1, 1, 1.33]);
  translate([40, 34, 0])
    cube([1, 1, 1.37]);
  translate([41, 34, 0])
    cube([1, 1, 1.33]);
  translate([42, 34, 0])
    cube([1, 1, 1.33]);
  translate([43, 34, 0])
    cube([1, 1, 1.33]);
  translate([44, 34, 0])
    cube([1, 1, 1.33]);
  translate([45, 34, 0])
    cube([1, 1, 1.33]);
  translate([46, 34, 0])
    cube([1, 1, 1.33]);
  translate([47, 34, 0])
    cube([1, 1, 1.33]);
  translate([48, 34, 0])
    cube([1, 1, 1.33]);
  translate([49, 34, 0])
    cube([1, 1, 1.33]);
  translate([50, 34, 0])
    cube([1, 1, 1.33]);
  translate([51, 34, 0])
    cube([1, 1, 1.33]);
  translate([52, 34, 0])
    cube([1, 1, 1.33]);
  translate([53, 34, 0])
    cube([1, 1, 1.33]);
  translate([54, 34, 0])
    cube([1, 1, 1.33]);
  translate([55, 34, 0])
    cube([1, 1, 1.33]);
  translate([56, 34, 0])
    cube([1, 1, 1.33]);
  translate([57, 34, 0])
    cube([1, 1, 1.33]);
  translate([58, 34, 0])
    cube([1, 1, 1.33]);
  translate([59, 34, 0])
    cube([1, 1, 1.33]);
  translate([60, 34, 0])
    cube([1, 1, 1.33]);
  translate([61, 34, 0])
    cube([1, 1, 1.33]);
  translate([62, 34, 0])
    cube([1, 1, 1.33]);
  translate([63, 34, 0])
    cube([1, 1, 1.33]);
  translate([64, 34, 0])
    cube([1, 1, 1.33]);
  translate([65, 34, 0])
    cube([1, 1, 1.33]);
  translate([66, 34, 0])
    cube([1, 1, 1.33]);
  translate([67, 34, 0])
    cube([1, 1, 1.25]);
  translate([68, 34, 0])
    cube([1, 1, 1.33]);
  translate([69, 34, 0])
    cube([1, 1, 1.33]);
  translate([70, 34, 0])
    cube([1, 1, 1.33]);
  translate([71, 34, 0])
    cube([1, 1, 1.33]);
  translate([72, 34, 0])
    cube([1, 1, 1.33]);
  translate([73, 34, 0])
    cube([1, 1, 1.33]);
  translate([74, 34, 0])
    cube([1, 1, 1.33]);
  translate([75, 34, 0])
    cube([1, 1, 3.41]);
  translate([76, 34, 0])
    cube([1, 1, 4.20]);
  translate([77, 34, 0])
    cube([1, 1, 7.96]);
  translate([78, 34, 0])
    cube([1, 1, 8.55]);
  translate([79, 34, 0])
    cube([1, 1, 3.84]);
  translate([80, 34, 0])
    cube([1, 1, 3.37]);
  translate([81, 34, 0])
    cube([1, 1, 2.98]);
  translate([82, 34, 0])
    cube([1, 1, 1.45]);
  translate([83, 34, 0])
    cube([1, 1, 2.00]);
  translate([84, 34, 0])
    cube([1, 1, 1.41]);
  translate([85, 34, 0])
    cube([1, 1, 1.41]);
  translate([86, 34, 0])
    cube([1, 1, 1.10]);
  translate([87, 34, 0])
    cube([1, 1, 0.90]);
  translate([88, 34, 0])
    cube([1, 1, 1.14]);
  translate([89, 34, 0])
    cube([1, 1, 1.25]);
  translate([90, 34, 0])
    cube([1, 1, 1.25]);
  translate([91, 34, 0])
    cube([1, 1, 1.10]);
  translate([92, 34, 0])
    cube([1, 1, 0.71]);
  translate([93, 34, 0])
    cube([1, 1, 1.25]);
  translate([94, 34, 0])
    cube([1, 1, 1.41]);
  translate([95, 34, 0])
    cube([1, 1, 1.37]);
  translate([96, 34, 0])
    cube([1, 1, 1.73]);
  translate([97, 34, 0])
    cube([1, 1, 1.69]);
  translate([98, 34, 0])
    cube([1, 1, 1.45]);
  translate([99, 34, 0])
    cube([1, 1, 1.96]);
  translate([100, 34, 0])
    cube([1, 1, 1.88]);
  translate([101, 34, 0])
    cube([1, 1, 1.22]);
  translate([102, 34, 0])
    cube([1, 1, 1.88]);
  translate([103, 34, 0])
    cube([1, 1, 2.04]);
  translate([104, 34, 0])
    cube([1, 1, 1.41]);
  translate([105, 34, 0])
    cube([1, 1, 1.45]);
  translate([106, 34, 0])
    cube([1, 1, 1.65]);
  translate([107, 34, 0])
    cube([1, 1, 2.00]);
  translate([108, 34, 0])
    cube([1, 1, 2.31]);
  translate([109, 34, 0])
    cube([1, 1, 2.27]);
  translate([110, 34, 0])
    cube([1, 1, 2.39]);
  translate([111, 34, 0])
    cube([1, 1, 3.22]);
  translate([112, 34, 0])
    cube([1, 1, 4.27]);
  translate([113, 34, 0])
    cube([1, 1, 1.49]);
  translate([114, 34, 0])
    cube([1, 1, 1.53]);
  translate([115, 34, 0])
    cube([1, 1, 1.69]);
  translate([116, 34, 0])
    cube([1, 1, 2.12]);
  translate([117, 34, 0])
    cube([1, 1, 1.84]);
  translate([118, 34, 0])
    cube([1, 1, 2.08]);
  translate([119, 34, 0])
    cube([1, 1, 2.04]);
  translate([120, 34, 0])
    cube([1, 1, 1.88]);
  translate([121, 34, 0])
    cube([1, 1, 1.61]);
  translate([122, 34, 0])
    cube([1, 1, 1.45]);
  translate([123, 34, 0])
    cube([1, 1, 1.76]);
  translate([124, 34, 0])
    cube([1, 1, 3.33]);
  translate([125, 34, 0])
    cube([1, 1, 1.73]);
  translate([126, 34, 0])
    cube([1, 1, 6.16]);
  translate([127, 34, 0])
    cube([1, 1, 1.25]);
  translate([128, 34, 0])
    cube([1, 1, 1.25]);
  translate([129, 34, 0])
    cube([1, 1, 1.25]);
  translate([130, 34, 0])
    cube([1, 1, 1.25]);
  translate([131, 34, 0])
    cube([1, 1, 1.25]);
  translate([132, 34, 0])
    cube([1, 1, 1.25]);
  translate([133, 34, 0])
    cube([1, 1, 1.25]);
  translate([134, 34, 0])
    cube([1, 1, 1.25]);
  translate([135, 34, 0])
    cube([1, 1, 1.25]);
  translate([136, 34, 0])
    cube([1, 1, 1.25]);
  translate([137, 34, 0])
    cube([1, 1, 1.25]);
  translate([138, 34, 0])
    cube([1, 1, 1.25]);
  translate([139, 34, 0])
    cube([1, 1, 1.25]);
  translate([140, 34, 0])
    cube([1, 1, 1.25]);
  translate([141, 34, 0])
    cube([1, 1, 1.25]);
  translate([142, 34, 0])
    cube([1, 1, 1.25]);
  translate([143, 34, 0])
    cube([1, 1, 1.25]);
  translate([144, 34, 0])
    cube([1, 1, 1.25]);
  translate([145, 34, 0])
    cube([1, 1, 1.25]);
  translate([146, 34, 0])
    cube([1, 1, 1.25]);
  translate([147, 34, 0])
    cube([1, 1, 1.25]);
  translate([148, 34, 0])
    cube([1, 1, 1.25]);
  translate([149, 34, 0])
    cube([1, 1, 1.25]);
  translate([150, 34, 0])
    cube([1, 1, 1.25]);
  translate([151, 34, 0])
    cube([1, 1, 1.25]);
  translate([152, 34, 0])
    cube([1, 1, 1.25]);
  translate([153, 34, 0])
    cube([1, 1, 1.25]);
  translate([154, 34, 0])
    cube([1, 1, 1.25]);
  translate([155, 34, 0])
    cube([1, 1, 1.25]);
  translate([156, 34, 0])
    cube([1, 1, 1.25]);
  translate([157, 34, 0])
    cube([1, 1, 1.25]);
  translate([158, 34, 0])
    cube([1, 1, 1.25]);
  translate([159, 34, 0])
    cube([1, 1, 1.25]);
  translate([160, 34, 0])
    cube([1, 1, 1.25]);
  translate([161, 34, 0])
    cube([1, 1, 1.25]);
  translate([162, 34, 0])
    cube([1, 1, 1.25]);
  translate([163, 34, 0])
    cube([1, 1, 1.25]);
  translate([164, 34, 0])
    cube([1, 1, 1.25]);
  translate([165, 34, 0])
    cube([1, 1, 1.25]);
  translate([166, 34, 0])
    cube([1, 1, 1.25]);
  translate([167, 34, 0])
    cube([1, 1, 1.25]);
  translate([168, 34, 0])
    cube([1, 1, 1.25]);
  translate([169, 34, 0])
    cube([1, 1, 1.25]);
  translate([170, 34, 0])
    cube([1, 1, 1.25]);
  translate([171, 34, 0])
    cube([1, 1, 1.25]);
  translate([172, 34, 0])
    cube([1, 1, 1.25]);
  translate([173, 34, 0])
    cube([1, 1, 1.25]);
  translate([174, 34, 0])
    cube([1, 1, 1.22]);
  translate([175, 34, 0])
    cube([1, 1, 1.25]);
  translate([176, 34, 0])
    cube([1, 1, 1.25]);
  translate([177, 34, 0])
    cube([1, 1, 1.25]);
  translate([178, 34, 0])
    cube([1, 1, 1.25]);
  translate([179, 34, 0])
    cube([1, 1, 1.25]);
  translate([180, 34, 0])
    cube([1, 1, 1.25]);
  translate([181, 34, 0])
    cube([1, 1, 1.25]);
  translate([182, 34, 0])
    cube([1, 1, 1.25]);
  translate([183, 34, 0])
    cube([1, 1, 1.25]);
  translate([184, 34, 0])
    cube([1, 1, 1.25]);
  translate([185, 34, 0])
    cube([1, 1, 1.25]);
  translate([186, 34, 0])
    cube([1, 1, 1.25]);
  translate([187, 34, 0])
    cube([1, 1, 1.25]);
  translate([188, 34, 0])
    cube([1, 1, 1.25]);
  translate([189, 34, 0])
    cube([1, 1, 1.25]);
  translate([190, 34, 0])
    cube([1, 1, 1.25]);
  translate([191, 34, 0])
    cube([1, 1, 1.25]);
  translate([192, 34, 0])
    cube([1, 1, 1.25]);
  translate([193, 34, 0])
    cube([1, 1, 1.25]);
  translate([194, 34, 0])
    cube([1, 1, 1.25]);
  translate([195, 34, 0])
    cube([1, 1, 1.25]);
  translate([196, 34, 0])
    cube([1, 1, 1.25]);
  translate([197, 34, 0])
    cube([1, 1, 1.25]);
  translate([198, 34, 0])
    cube([1, 1, 1.25]);
  translate([199, 34, 0])
    cube([1, 1, 1.25]);
  translate([200, 34, 0])
    cube([1, 1, 1.29]);
  translate([201, 34, 0])
    cube([1, 1, 1.25]);
  translate([202, 34, 0])
    cube([1, 1, 1.25]);
  translate([203, 34, 0])
    cube([1, 1, 1.25]);
  translate([204, 34, 0])
    cube([1, 1, 1.25]);
  translate([205, 34, 0])
    cube([1, 1, 1.25]);
  translate([206, 34, 0])
    cube([1, 1, 1.25]);
  translate([207, 34, 0])
    cube([1, 1, 1.25]);
  translate([208, 34, 0])
    cube([1, 1, 1.25]);
  translate([209, 34, 0])
    cube([1, 1, 1.25]);
  translate([210, 34, 0])
    cube([1, 1, 1.25]);
  translate([211, 34, 0])
    cube([1, 1, 1.25]);
  translate([212, 34, 0])
    cube([1, 1, 1.25]);
  translate([213, 34, 0])
    cube([1, 1, 1.25]);
  translate([214, 34, 0])
    cube([1, 1, 1.25]);
  translate([215, 34, 0])
    cube([1, 1, 1.25]);
  translate([216, 34, 0])
    cube([1, 1, 1.25]);
  translate([217, 34, 0])
    cube([1, 1, 1.25]);
  translate([218, 34, 0])
    cube([1, 1, 1.25]);
  translate([219, 34, 0])
    cube([1, 1, 1.25]);
  translate([220, 34, 0])
    cube([1, 1, 1.25]);
  translate([221, 34, 0])
    cube([1, 1, 1.25]);
  translate([222, 34, 0])
    cube([1, 1, 1.25]);
  translate([223, 34, 0])
    cube([1, 1, 1.25]);
  translate([224, 34, 0])
    cube([1, 1, 1.25]);
  translate([225, 34, 0])
    cube([1, 1, 1.25]);
  translate([226, 34, 0])
    cube([1, 1, 1.25]);
  translate([227, 34, 0])
    cube([1, 1, 1.25]);
  translate([228, 34, 0])
    cube([1, 1, 1.25]);
  translate([229, 34, 0])
    cube([1, 1, 1.25]);
  translate([230, 34, 0])
    cube([1, 1, 1.25]);
  translate([231, 34, 0])
    cube([1, 1, 1.25]);
  translate([232, 34, 0])
    cube([1, 1, 1.25]);
  translate([233, 34, 0])
    cube([1, 1, 1.25]);
  translate([234, 34, 0])
    cube([1, 1, 1.25]);
  translate([235, 34, 0])
    cube([1, 1, 1.25]);
  translate([236, 34, 0])
    cube([1, 1, 1.25]);
  translate([237, 34, 0])
    cube([1, 1, 1.25]);
  translate([238, 34, 0])
    cube([1, 1, 1.25]);
  translate([239, 34, 0])
    cube([1, 1, 1.25]);
  translate([240, 34, 0])
    cube([1, 1, 1.25]);
  translate([241, 34, 0])
    cube([1, 1, 1.25]);
  translate([242, 34, 0])
    cube([1, 1, 1.25]);
  translate([243, 34, 0])
    cube([1, 1, 1.25]);
  translate([244, 34, 0])
    cube([1, 1, 1.25]);
  translate([245, 34, 0])
    cube([1, 1, 1.25]);
  translate([246, 34, 0])
    cube([1, 1, 1.25]);
  translate([0, 35, 0])
    cube([1, 1, 1.37]);
  translate([1, 35, 0])
    cube([1, 1, 1.37]);
  translate([2, 35, 0])
    cube([1, 1, 1.37]);
  translate([3, 35, 0])
    cube([1, 1, 1.37]);
  translate([4, 35, 0])
    cube([1, 1, 1.37]);
  translate([5, 35, 0])
    cube([1, 1, 1.37]);
  translate([6, 35, 0])
    cube([1, 1, 1.37]);
  translate([7, 35, 0])
    cube([1, 1, 1.37]);
  translate([8, 35, 0])
    cube([1, 1, 1.37]);
  translate([9, 35, 0])
    cube([1, 1, 1.37]);
  translate([10, 35, 0])
    cube([1, 1, 1.37]);
  translate([11, 35, 0])
    cube([1, 1, 1.37]);
  translate([12, 35, 0])
    cube([1, 1, 1.37]);
  translate([13, 35, 0])
    cube([1, 1, 1.37]);
  translate([14, 35, 0])
    cube([1, 1, 1.49]);
  translate([15, 35, 0])
    cube([1, 1, 0.47]);
  translate([16, 35, 0])
    cube([1, 1, 1.37]);
  translate([17, 35, 0])
    cube([1, 1, 4.35]);
  translate([18, 35, 0])
    cube([1, 1, 0.82]);
  translate([19, 35, 0])
    cube([1, 1, 0.98]);
  translate([20, 35, 0])
    cube([1, 1, 1.37]);
  translate([21, 35, 0])
    cube([1, 1, 1.41]);
  translate([22, 35, 0])
    cube([1, 1, 1.25]);
  translate([23, 35, 0])
    cube([1, 1, 1.25]);
  translate([24, 35, 0])
    cube([1, 1, 1.33]);
  translate([25, 35, 0])
    cube([1, 1, 1.33]);
  translate([26, 35, 0])
    cube([1, 1, 1.33]);
  translate([27, 35, 0])
    cube([1, 1, 1.37]);
  translate([28, 35, 0])
    cube([1, 1, 1.33]);
  translate([29, 35, 0])
    cube([1, 1, 1.37]);
  translate([30, 35, 0])
    cube([1, 1, 1.37]);
  translate([31, 35, 0])
    cube([1, 1, 1.37]);
  translate([32, 35, 0])
    cube([1, 1, 1.33]);
  translate([33, 35, 0])
    cube([1, 1, 1.37]);
  translate([34, 35, 0])
    cube([1, 1, 1.37]);
  translate([35, 35, 0])
    cube([1, 1, 1.33]);
  translate([36, 35, 0])
    cube([1, 1, 1.33]);
  translate([37, 35, 0])
    cube([1, 1, 1.33]);
  translate([38, 35, 0])
    cube([1, 1, 1.33]);
  translate([39, 35, 0])
    cube([1, 1, 1.41]);
  translate([40, 35, 0])
    cube([1, 1, 1.37]);
  translate([41, 35, 0])
    cube([1, 1, 1.33]);
  translate([42, 35, 0])
    cube([1, 1, 1.33]);
  translate([43, 35, 0])
    cube([1, 1, 1.33]);
  translate([44, 35, 0])
    cube([1, 1, 1.33]);
  translate([45, 35, 0])
    cube([1, 1, 1.33]);
  translate([46, 35, 0])
    cube([1, 1, 1.33]);
  translate([47, 35, 0])
    cube([1, 1, 1.33]);
  translate([48, 35, 0])
    cube([1, 1, 1.33]);
  translate([49, 35, 0])
    cube([1, 1, 1.33]);
  translate([50, 35, 0])
    cube([1, 1, 1.33]);
  translate([51, 35, 0])
    cube([1, 1, 1.33]);
  translate([52, 35, 0])
    cube([1, 1, 1.33]);
  translate([53, 35, 0])
    cube([1, 1, 1.33]);
  translate([54, 35, 0])
    cube([1, 1, 1.33]);
  translate([55, 35, 0])
    cube([1, 1, 1.33]);
  translate([56, 35, 0])
    cube([1, 1, 1.33]);
  translate([57, 35, 0])
    cube([1, 1, 1.33]);
  translate([58, 35, 0])
    cube([1, 1, 1.33]);
  translate([59, 35, 0])
    cube([1, 1, 1.33]);
  translate([60, 35, 0])
    cube([1, 1, 1.33]);
  translate([61, 35, 0])
    cube([1, 1, 1.33]);
  translate([62, 35, 0])
    cube([1, 1, 1.33]);
  translate([63, 35, 0])
    cube([1, 1, 1.33]);
  translate([64, 35, 0])
    cube([1, 1, 1.33]);
  translate([65, 35, 0])
    cube([1, 1, 1.33]);
  translate([66, 35, 0])
    cube([1, 1, 1.33]);
  translate([67, 35, 0])
    cube([1, 1, 1.33]);
  translate([68, 35, 0])
    cube([1, 1, 1.33]);
  translate([69, 35, 0])
    cube([1, 1, 1.33]);
  translate([70, 35, 0])
    cube([1, 1, 1.33]);
  translate([71, 35, 0])
    cube([1, 1, 1.33]);
  translate([72, 35, 0])
    cube([1, 1, 1.29]);
  translate([73, 35, 0])
    cube([1, 1, 1.33]);
  translate([74, 35, 0])
    cube([1, 1, 1.33]);
  translate([75, 35, 0])
    cube([1, 1, 6.35]);
  translate([76, 35, 0])
    cube([1, 1, 6.94]);
  translate([77, 35, 0])
    cube([1, 1, 7.80]);
  translate([78, 35, 0])
    cube([1, 1, 5.73]);
  translate([79, 35, 0])
    cube([1, 1, 3.61]);
  translate([80, 35, 0])
    cube([1, 1, 2.47]);
  translate([81, 35, 0])
    cube([1, 1, 0.67]);
  translate([82, 35, 0])
    cube([1, 1, 4.39]);
  translate([83, 35, 0])
    cube([1, 1, 1.22]);
  translate([84, 35, 0])
    cube([1, 1, 1.22]);
  translate([85, 35, 0])
    cube([1, 1, 1.22]);
  translate([86, 35, 0])
    cube([1, 1, 1.14]);
  translate([87, 35, 0])
    cube([1, 1, 1.18]);
  translate([88, 35, 0])
    cube([1, 1, 1.02]);
  translate([89, 35, 0])
    cube([1, 1, 0.90]);
  translate([90, 35, 0])
    cube([1, 1, 0.94]);
  translate([91, 35, 0])
    cube([1, 1, 1.22]);
  translate([92, 35, 0])
    cube([1, 1, 1.61]);
  translate([93, 35, 0])
    cube([1, 1, 1.45]);
  translate([94, 35, 0])
    cube([1, 1, 1.49]);
  translate([95, 35, 0])
    cube([1, 1, 1.57]);
  translate([96, 35, 0])
    cube([1, 1, 1.45]);
  translate([97, 35, 0])
    cube([1, 1, 1.65]);
  translate([98, 35, 0])
    cube([1, 1, 1.14]);
  translate([99, 35, 0])
    cube([1, 1, 1.49]);
  translate([100, 35, 0])
    cube([1, 1, 1.65]);
  translate([101, 35, 0])
    cube([1, 1, 1.25]);
  translate([102, 35, 0])
    cube([1, 1, 2.16]);
  translate([103, 35, 0])
    cube([1, 1, 3.65]);
  translate([104, 35, 0])
    cube([1, 1, 3.76]);
  translate([105, 35, 0])
    cube([1, 1, 3.69]);
  translate([106, 35, 0])
    cube([1, 1, 3.61]);
  translate([107, 35, 0])
    cube([1, 1, 3.53]);
  translate([108, 35, 0])
    cube([1, 1, 3.49]);
  translate([109, 35, 0])
    cube([1, 1, 2.98]);
  translate([110, 35, 0])
    cube([1, 1, 2.39]);
  translate([111, 35, 0])
    cube([1, 1, 2.00]);
  translate([112, 35, 0])
    cube([1, 1, 2.16]);
  translate([113, 35, 0])
    cube([1, 1, 1.69]);
  translate([114, 35, 0])
    cube([1, 1, 1.41]);
  translate([115, 35, 0])
    cube([1, 1, 1.65]);
  translate([116, 35, 0])
    cube([1, 1, 1.88]);
  translate([117, 35, 0])
    cube([1, 1, 2.12]);
  translate([118, 35, 0])
    cube([1, 1, 1.84]);
  translate([119, 35, 0])
    cube([1, 1, 1.76]);
  translate([120, 35, 0])
    cube([1, 1, 1.88]);
  translate([121, 35, 0])
    cube([1, 1, 2.04]);
  translate([122, 35, 0])
    cube([1, 1, 2.31]);
  translate([123, 35, 0])
    cube([1, 1, 1.41]);
  translate([124, 35, 0])
    cube([1, 1, 0.94]);
  translate([125, 35, 0])
    cube([1, 1, 2.67]);
  translate([126, 35, 0])
    cube([1, 1, 2.08]);
  translate([127, 35, 0])
    cube([1, 1, 1.45]);
  translate([128, 35, 0])
    cube([1, 1, 1.25]);
  translate([129, 35, 0])
    cube([1, 1, 1.25]);
  translate([130, 35, 0])
    cube([1, 1, 1.25]);
  translate([131, 35, 0])
    cube([1, 1, 1.25]);
  translate([132, 35, 0])
    cube([1, 1, 1.25]);
  translate([133, 35, 0])
    cube([1, 1, 1.25]);
  translate([134, 35, 0])
    cube([1, 1, 1.25]);
  translate([135, 35, 0])
    cube([1, 1, 1.25]);
  translate([136, 35, 0])
    cube([1, 1, 1.25]);
  translate([137, 35, 0])
    cube([1, 1, 1.25]);
  translate([138, 35, 0])
    cube([1, 1, 1.25]);
  translate([139, 35, 0])
    cube([1, 1, 1.25]);
  translate([140, 35, 0])
    cube([1, 1, 1.25]);
  translate([141, 35, 0])
    cube([1, 1, 1.25]);
  translate([142, 35, 0])
    cube([1, 1, 1.25]);
  translate([143, 35, 0])
    cube([1, 1, 1.25]);
  translate([144, 35, 0])
    cube([1, 1, 1.25]);
  translate([145, 35, 0])
    cube([1, 1, 1.25]);
  translate([146, 35, 0])
    cube([1, 1, 1.25]);
  translate([147, 35, 0])
    cube([1, 1, 1.25]);
  translate([148, 35, 0])
    cube([1, 1, 1.25]);
  translate([149, 35, 0])
    cube([1, 1, 1.25]);
  translate([150, 35, 0])
    cube([1, 1, 1.25]);
  translate([151, 35, 0])
    cube([1, 1, 1.25]);
  translate([152, 35, 0])
    cube([1, 1, 1.25]);
  translate([153, 35, 0])
    cube([1, 1, 1.25]);
  translate([154, 35, 0])
    cube([1, 1, 1.25]);
  translate([155, 35, 0])
    cube([1, 1, 1.25]);
  translate([156, 35, 0])
    cube([1, 1, 1.25]);
  translate([157, 35, 0])
    cube([1, 1, 1.25]);
  translate([158, 35, 0])
    cube([1, 1, 1.25]);
  translate([159, 35, 0])
    cube([1, 1, 1.25]);
  translate([160, 35, 0])
    cube([1, 1, 1.25]);
  translate([161, 35, 0])
    cube([1, 1, 1.25]);
  translate([162, 35, 0])
    cube([1, 1, 1.25]);
  translate([163, 35, 0])
    cube([1, 1, 1.25]);
  translate([164, 35, 0])
    cube([1, 1, 1.25]);
  translate([165, 35, 0])
    cube([1, 1, 1.25]);
  translate([166, 35, 0])
    cube([1, 1, 1.25]);
  translate([167, 35, 0])
    cube([1, 1, 1.25]);
  translate([168, 35, 0])
    cube([1, 1, 1.25]);
  translate([169, 35, 0])
    cube([1, 1, 1.25]);
  translate([170, 35, 0])
    cube([1, 1, 1.25]);
  translate([171, 35, 0])
    cube([1, 1, 1.25]);
  translate([172, 35, 0])
    cube([1, 1, 1.25]);
  translate([173, 35, 0])
    cube([1, 1, 1.25]);
  translate([174, 35, 0])
    cube([1, 1, 1.22]);
  translate([175, 35, 0])
    cube([1, 1, 1.25]);
  translate([176, 35, 0])
    cube([1, 1, 1.25]);
  translate([177, 35, 0])
    cube([1, 1, 1.25]);
  translate([178, 35, 0])
    cube([1, 1, 1.25]);
  translate([179, 35, 0])
    cube([1, 1, 1.25]);
  translate([180, 35, 0])
    cube([1, 1, 1.25]);
  translate([181, 35, 0])
    cube([1, 1, 1.25]);
  translate([182, 35, 0])
    cube([1, 1, 1.25]);
  translate([183, 35, 0])
    cube([1, 1, 1.25]);
  translate([184, 35, 0])
    cube([1, 1, 1.25]);
  translate([185, 35, 0])
    cube([1, 1, 1.25]);
  translate([186, 35, 0])
    cube([1, 1, 1.25]);
  translate([187, 35, 0])
    cube([1, 1, 1.25]);
  translate([188, 35, 0])
    cube([1, 1, 1.25]);
  translate([189, 35, 0])
    cube([1, 1, 1.25]);
  translate([190, 35, 0])
    cube([1, 1, 1.25]);
  translate([191, 35, 0])
    cube([1, 1, 1.25]);
  translate([192, 35, 0])
    cube([1, 1, 1.25]);
  translate([193, 35, 0])
    cube([1, 1, 1.25]);
  translate([194, 35, 0])
    cube([1, 1, 1.25]);
  translate([195, 35, 0])
    cube([1, 1, 1.25]);
  translate([196, 35, 0])
    cube([1, 1, 1.25]);
  translate([197, 35, 0])
    cube([1, 1, 1.25]);
  translate([198, 35, 0])
    cube([1, 1, 1.25]);
  translate([199, 35, 0])
    cube([1, 1, 1.25]);
  translate([200, 35, 0])
    cube([1, 1, 1.29]);
  translate([201, 35, 0])
    cube([1, 1, 1.25]);
  translate([202, 35, 0])
    cube([1, 1, 1.25]);
  translate([203, 35, 0])
    cube([1, 1, 1.25]);
  translate([204, 35, 0])
    cube([1, 1, 1.25]);
  translate([205, 35, 0])
    cube([1, 1, 1.25]);
  translate([206, 35, 0])
    cube([1, 1, 1.25]);
  translate([207, 35, 0])
    cube([1, 1, 1.25]);
  translate([208, 35, 0])
    cube([1, 1, 1.25]);
  translate([209, 35, 0])
    cube([1, 1, 1.25]);
  translate([210, 35, 0])
    cube([1, 1, 1.25]);
  translate([211, 35, 0])
    cube([1, 1, 1.25]);
  translate([212, 35, 0])
    cube([1, 1, 1.25]);
  translate([213, 35, 0])
    cube([1, 1, 1.25]);
  translate([214, 35, 0])
    cube([1, 1, 1.25]);
  translate([215, 35, 0])
    cube([1, 1, 1.25]);
  translate([216, 35, 0])
    cube([1, 1, 1.25]);
  translate([217, 35, 0])
    cube([1, 1, 1.25]);
  translate([218, 35, 0])
    cube([1, 1, 1.25]);
  translate([219, 35, 0])
    cube([1, 1, 1.25]);
  translate([220, 35, 0])
    cube([1, 1, 1.25]);
  translate([221, 35, 0])
    cube([1, 1, 1.25]);
  translate([222, 35, 0])
    cube([1, 1, 1.25]);
  translate([223, 35, 0])
    cube([1, 1, 1.25]);
  translate([224, 35, 0])
    cube([1, 1, 1.25]);
  translate([225, 35, 0])
    cube([1, 1, 1.25]);
  translate([226, 35, 0])
    cube([1, 1, 1.25]);
  translate([227, 35, 0])
    cube([1, 1, 1.25]);
  translate([228, 35, 0])
    cube([1, 1, 1.25]);
  translate([229, 35, 0])
    cube([1, 1, 1.25]);
  translate([230, 35, 0])
    cube([1, 1, 1.25]);
  translate([231, 35, 0])
    cube([1, 1, 1.25]);
  translate([232, 35, 0])
    cube([1, 1, 1.25]);
  translate([233, 35, 0])
    cube([1, 1, 1.25]);
  translate([234, 35, 0])
    cube([1, 1, 1.25]);
  translate([235, 35, 0])
    cube([1, 1, 1.25]);
  translate([236, 35, 0])
    cube([1, 1, 1.25]);
  translate([237, 35, 0])
    cube([1, 1, 1.25]);
  translate([238, 35, 0])
    cube([1, 1, 1.25]);
  translate([239, 35, 0])
    cube([1, 1, 1.25]);
  translate([240, 35, 0])
    cube([1, 1, 1.25]);
  translate([241, 35, 0])
    cube([1, 1, 1.25]);
  translate([242, 35, 0])
    cube([1, 1, 1.25]);
  translate([243, 35, 0])
    cube([1, 1, 1.25]);
  translate([244, 35, 0])
    cube([1, 1, 1.25]);
  translate([245, 35, 0])
    cube([1, 1, 1.25]);
  translate([246, 35, 0])
    cube([1, 1, 1.25]);
  translate([0, 36, 0])
    cube([1, 1, 1.37]);
  translate([1, 36, 0])
    cube([1, 1, 1.37]);
  translate([2, 36, 0])
    cube([1, 1, 1.37]);
  translate([3, 36, 0])
    cube([1, 1, 1.37]);
  translate([4, 36, 0])
    cube([1, 1, 1.37]);
  translate([5, 36, 0])
    cube([1, 1, 1.37]);
  translate([6, 36, 0])
    cube([1, 1, 1.37]);
  translate([7, 36, 0])
    cube([1, 1, 1.37]);
  translate([8, 36, 0])
    cube([1, 1, 1.37]);
  translate([9, 36, 0])
    cube([1, 1, 1.37]);
  translate([10, 36, 0])
    cube([1, 1, 1.37]);
  translate([11, 36, 0])
    cube([1, 1, 1.18]);
  translate([12, 36, 0])
    cube([1, 1, 1.57]);
  translate([13, 36, 0])
    cube([1, 1, 1.92]);
  translate([14, 36, 0])
    cube([1, 1, 0.59]);
  translate([15, 36, 0])
    cube([1, 1, 0.82]);
  translate([16, 36, 0])
    cube([1, 1, 0.43]);
  translate([17, 36, 0])
    cube([1, 1, 0.71]);
  translate([18, 36, 0])
    cube([1, 1, 0.63]);
  translate([19, 36, 0])
    cube([1, 1, 0.71]);
  translate([20, 36, 0])
    cube([1, 1, 1.02]);
  translate([21, 36, 0])
    cube([1, 1, 0.24]);
  translate([22, 36, 0])
    cube([1, 1, 0.86]);
  translate([23, 36, 0])
    cube([1, 1, 1.33]);
  translate([24, 36, 0])
    cube([1, 1, 1.33]);
  translate([25, 36, 0])
    cube([1, 1, 1.37]);
  translate([26, 36, 0])
    cube([1, 1, 1.37]);
  translate([27, 36, 0])
    cube([1, 1, 1.37]);
  translate([28, 36, 0])
    cube([1, 1, 1.37]);
  translate([29, 36, 0])
    cube([1, 1, 1.33]);
  translate([30, 36, 0])
    cube([1, 1, 1.33]);
  translate([31, 36, 0])
    cube([1, 1, 1.33]);
  translate([32, 36, 0])
    cube([1, 1, 1.33]);
  translate([33, 36, 0])
    cube([1, 1, 1.33]);
  translate([34, 36, 0])
    cube([1, 1, 1.41]);
  translate([35, 36, 0])
    cube([1, 1, 1.33]);
  translate([36, 36, 0])
    cube([1, 1, 1.33]);
  translate([37, 36, 0])
    cube([1, 1, 1.33]);
  translate([38, 36, 0])
    cube([1, 1, 1.33]);
  translate([39, 36, 0])
    cube([1, 1, 1.33]);
  translate([40, 36, 0])
    cube([1, 1, 1.33]);
  translate([41, 36, 0])
    cube([1, 1, 1.33]);
  translate([42, 36, 0])
    cube([1, 1, 1.33]);
  translate([43, 36, 0])
    cube([1, 1, 1.33]);
  translate([44, 36, 0])
    cube([1, 1, 1.33]);
  translate([45, 36, 0])
    cube([1, 1, 1.37]);
  translate([46, 36, 0])
    cube([1, 1, 1.33]);
  translate([47, 36, 0])
    cube([1, 1, 1.33]);
  translate([48, 36, 0])
    cube([1, 1, 1.33]);
  translate([49, 36, 0])
    cube([1, 1, 1.33]);
  translate([50, 36, 0])
    cube([1, 1, 1.33]);
  translate([51, 36, 0])
    cube([1, 1, 1.33]);
  translate([52, 36, 0])
    cube([1, 1, 1.33]);
  translate([53, 36, 0])
    cube([1, 1, 1.33]);
  translate([54, 36, 0])
    cube([1, 1, 1.33]);
  translate([55, 36, 0])
    cube([1, 1, 1.33]);
  translate([56, 36, 0])
    cube([1, 1, 1.33]);
  translate([57, 36, 0])
    cube([1, 1, 1.33]);
  translate([58, 36, 0])
    cube([1, 1, 1.33]);
  translate([59, 36, 0])
    cube([1, 1, 1.33]);
  translate([60, 36, 0])
    cube([1, 1, 1.33]);
  translate([61, 36, 0])
    cube([1, 1, 1.33]);
  translate([62, 36, 0])
    cube([1, 1, 1.33]);
  translate([63, 36, 0])
    cube([1, 1, 1.33]);
  translate([64, 36, 0])
    cube([1, 1, 1.33]);
  translate([65, 36, 0])
    cube([1, 1, 1.33]);
  translate([66, 36, 0])
    cube([1, 1, 1.33]);
  translate([67, 36, 0])
    cube([1, 1, 1.33]);
  translate([68, 36, 0])
    cube([1, 1, 1.33]);
  translate([69, 36, 0])
    cube([1, 1, 1.33]);
  translate([70, 36, 0])
    cube([1, 1, 1.33]);
  translate([71, 36, 0])
    cube([1, 1, 1.33]);
  translate([72, 36, 0])
    cube([1, 1, 1.29]);
  translate([73, 36, 0])
    cube([1, 1, 1.29]);
  translate([74, 36, 0])
    cube([1, 1, 1.25]);
  translate([75, 36, 0])
    cube([1, 1, 7.41]);
  translate([76, 36, 0])
    cube([1, 1, 2.00]);
  translate([77, 36, 0])
    cube([1, 1, 7.06]);
  translate([78, 36, 0])
    cube([1, 1, 4.00]);
  translate([79, 36, 0])
    cube([1, 1, 1.29]);
  translate([80, 36, 0])
    cube([1, 1, 1.29]);
  translate([81, 36, 0])
    cube([1, 1, 3.84]);
  translate([82, 36, 0])
    cube([1, 1, 0.98]);
  translate([83, 36, 0])
    cube([1, 1, 1.37]);
  translate([84, 36, 0])
    cube([1, 1, 1.14]);
  translate([85, 36, 0])
    cube([1, 1, 1.22]);
  translate([86, 36, 0])
    cube([1, 1, 1.14]);
  translate([87, 36, 0])
    cube([1, 1, 0.94]);
  translate([88, 36, 0])
    cube([1, 1, 0.98]);
  translate([89, 36, 0])
    cube([1, 1, 0.90]);
  translate([90, 36, 0])
    cube([1, 1, 1.25]);
  translate([91, 36, 0])
    cube([1, 1, 1.45]);
  translate([92, 36, 0])
    cube([1, 1, 1.41]);
  translate([93, 36, 0])
    cube([1, 1, 1.37]);
  translate([94, 36, 0])
    cube([1, 1, 1.53]);
  translate([95, 36, 0])
    cube([1, 1, 1.41]);
  translate([96, 36, 0])
    cube([1, 1, 1.14]);
  translate([97, 36, 0])
    cube([1, 1, 1.25]);
  translate([98, 36, 0])
    cube([1, 1, 1.49]);
  translate([99, 36, 0])
    cube([1, 1, 1.29]);
  translate([100, 36, 0])
    cube([1, 1, 2.35]);
  translate([101, 36, 0])
    cube([1, 1, 2.08]);
  translate([102, 36, 0])
    cube([1, 1, 2.43]);
  translate([103, 36, 0])
    cube([1, 1, 3.61]);
  translate([104, 36, 0])
    cube([1, 1, 2.39]);
  translate([105, 36, 0])
    cube([1, 1, 1.65]);
  translate([106, 36, 0])
    cube([1, 1, 1.61]);
  translate([107, 36, 0])
    cube([1, 1, 1.88]);
  translate([108, 36, 0])
    cube([1, 1, 2.20]);
  translate([109, 36, 0])
    cube([1, 1, 2.59]);
  translate([110, 36, 0])
    cube([1, 1, 2.55]);
  translate([111, 36, 0])
    cube([1, 1, 2.24]);
  translate([112, 36, 0])
    cube([1, 1, 2.51]);
  translate([113, 36, 0])
    cube([1, 1, 2.55]);
  translate([114, 36, 0])
    cube([1, 1, 1.76]);
  translate([115, 36, 0])
    cube([1, 1, 1.84]);
  translate([116, 36, 0])
    cube([1, 1, 2.16]);
  translate([117, 36, 0])
    cube([1, 1, 2.20]);
  translate([118, 36, 0])
    cube([1, 1, 2.20]);
  translate([119, 36, 0])
    cube([1, 1, 2.27]);
  translate([120, 36, 0])
    cube([1, 1, 3.25]);
  translate([121, 36, 0])
    cube([1, 1, 2.08]);
  translate([122, 36, 0])
    cube([1, 1, 2.78]);
  translate([123, 36, 0])
    cube([1, 1, 3.29]);
  translate([124, 36, 0])
    cube([1, 1, 4.04]);
  translate([125, 36, 0])
    cube([1, 1, 1.02]);
  translate([126, 36, 0])
    cube([1, 1, 4.75]);
  translate([127, 36, 0])
    cube([1, 1, 1.80]);
  translate([128, 36, 0])
    cube([1, 1, 1.25]);
  translate([129, 36, 0])
    cube([1, 1, 1.25]);
  translate([130, 36, 0])
    cube([1, 1, 1.25]);
  translate([131, 36, 0])
    cube([1, 1, 1.25]);
  translate([132, 36, 0])
    cube([1, 1, 1.25]);
  translate([133, 36, 0])
    cube([1, 1, 1.25]);
  translate([134, 36, 0])
    cube([1, 1, 1.25]);
  translate([135, 36, 0])
    cube([1, 1, 1.25]);
  translate([136, 36, 0])
    cube([1, 1, 1.25]);
  translate([137, 36, 0])
    cube([1, 1, 1.25]);
  translate([138, 36, 0])
    cube([1, 1, 1.25]);
  translate([139, 36, 0])
    cube([1, 1, 1.25]);
  translate([140, 36, 0])
    cube([1, 1, 1.25]);
  translate([141, 36, 0])
    cube([1, 1, 1.25]);
  translate([142, 36, 0])
    cube([1, 1, 1.25]);
  translate([143, 36, 0])
    cube([1, 1, 1.25]);
  translate([144, 36, 0])
    cube([1, 1, 1.25]);
  translate([145, 36, 0])
    cube([1, 1, 1.25]);
  translate([146, 36, 0])
    cube([1, 1, 1.25]);
  translate([147, 36, 0])
    cube([1, 1, 1.25]);
  translate([148, 36, 0])
    cube([1, 1, 1.25]);
  translate([149, 36, 0])
    cube([1, 1, 1.25]);
  translate([150, 36, 0])
    cube([1, 1, 1.25]);
  translate([151, 36, 0])
    cube([1, 1, 1.25]);
  translate([152, 36, 0])
    cube([1, 1, 1.25]);
  translate([153, 36, 0])
    cube([1, 1, 1.25]);
  translate([154, 36, 0])
    cube([1, 1, 1.25]);
  translate([155, 36, 0])
    cube([1, 1, 1.25]);
  translate([156, 36, 0])
    cube([1, 1, 1.25]);
  translate([157, 36, 0])
    cube([1, 1, 1.25]);
  translate([158, 36, 0])
    cube([1, 1, 1.25]);
  translate([159, 36, 0])
    cube([1, 1, 1.25]);
  translate([160, 36, 0])
    cube([1, 1, 1.25]);
  translate([161, 36, 0])
    cube([1, 1, 1.25]);
  translate([162, 36, 0])
    cube([1, 1, 1.25]);
  translate([163, 36, 0])
    cube([1, 1, 1.25]);
  translate([164, 36, 0])
    cube([1, 1, 1.25]);
  translate([165, 36, 0])
    cube([1, 1, 1.25]);
  translate([166, 36, 0])
    cube([1, 1, 1.25]);
  translate([167, 36, 0])
    cube([1, 1, 1.25]);
  translate([168, 36, 0])
    cube([1, 1, 1.25]);
  translate([169, 36, 0])
    cube([1, 1, 1.25]);
  translate([170, 36, 0])
    cube([1, 1, 1.25]);
  translate([171, 36, 0])
    cube([1, 1, 1.25]);
  translate([172, 36, 0])
    cube([1, 1, 1.25]);
  translate([173, 36, 0])
    cube([1, 1, 1.25]);
  translate([174, 36, 0])
    cube([1, 1, 1.25]);
  translate([175, 36, 0])
    cube([1, 1, 1.25]);
  translate([176, 36, 0])
    cube([1, 1, 1.25]);
  translate([177, 36, 0])
    cube([1, 1, 1.25]);
  translate([178, 36, 0])
    cube([1, 1, 1.25]);
  translate([179, 36, 0])
    cube([1, 1, 1.25]);
  translate([180, 36, 0])
    cube([1, 1, 1.25]);
  translate([181, 36, 0])
    cube([1, 1, 1.25]);
  translate([182, 36, 0])
    cube([1, 1, 1.25]);
  translate([183, 36, 0])
    cube([1, 1, 1.25]);
  translate([184, 36, 0])
    cube([1, 1, 1.25]);
  translate([185, 36, 0])
    cube([1, 1, 1.25]);
  translate([186, 36, 0])
    cube([1, 1, 1.25]);
  translate([187, 36, 0])
    cube([1, 1, 1.25]);
  translate([188, 36, 0])
    cube([1, 1, 1.25]);
  translate([189, 36, 0])
    cube([1, 1, 1.25]);
  translate([190, 36, 0])
    cube([1, 1, 1.25]);
  translate([191, 36, 0])
    cube([1, 1, 1.25]);
  translate([192, 36, 0])
    cube([1, 1, 1.25]);
  translate([193, 36, 0])
    cube([1, 1, 1.25]);
  translate([194, 36, 0])
    cube([1, 1, 1.25]);
  translate([195, 36, 0])
    cube([1, 1, 1.25]);
  translate([196, 36, 0])
    cube([1, 1, 1.25]);
  translate([197, 36, 0])
    cube([1, 1, 1.25]);
  translate([198, 36, 0])
    cube([1, 1, 1.25]);
  translate([199, 36, 0])
    cube([1, 1, 1.25]);
  translate([200, 36, 0])
    cube([1, 1, 1.25]);
  translate([201, 36, 0])
    cube([1, 1, 1.25]);
  translate([202, 36, 0])
    cube([1, 1, 1.25]);
  translate([203, 36, 0])
    cube([1, 1, 1.25]);
  translate([204, 36, 0])
    cube([1, 1, 1.25]);
  translate([205, 36, 0])
    cube([1, 1, 1.25]);
  translate([206, 36, 0])
    cube([1, 1, 1.25]);
  translate([207, 36, 0])
    cube([1, 1, 1.25]);
  translate([208, 36, 0])
    cube([1, 1, 1.25]);
  translate([209, 36, 0])
    cube([1, 1, 1.25]);
  translate([210, 36, 0])
    cube([1, 1, 1.25]);
  translate([211, 36, 0])
    cube([1, 1, 1.25]);
  translate([212, 36, 0])
    cube([1, 1, 1.25]);
  translate([213, 36, 0])
    cube([1, 1, 1.25]);
  translate([214, 36, 0])
    cube([1, 1, 1.25]);
  translate([215, 36, 0])
    cube([1, 1, 1.25]);
  translate([216, 36, 0])
    cube([1, 1, 1.25]);
  translate([217, 36, 0])
    cube([1, 1, 1.25]);
  translate([218, 36, 0])
    cube([1, 1, 1.25]);
  translate([219, 36, 0])
    cube([1, 1, 1.25]);
  translate([220, 36, 0])
    cube([1, 1, 1.25]);
  translate([221, 36, 0])
    cube([1, 1, 1.25]);
  translate([222, 36, 0])
    cube([1, 1, 1.25]);
  translate([223, 36, 0])
    cube([1, 1, 1.25]);
  translate([224, 36, 0])
    cube([1, 1, 1.25]);
  translate([225, 36, 0])
    cube([1, 1, 1.25]);
  translate([226, 36, 0])
    cube([1, 1, 1.25]);
  translate([227, 36, 0])
    cube([1, 1, 1.25]);
  translate([228, 36, 0])
    cube([1, 1, 1.25]);
  translate([229, 36, 0])
    cube([1, 1, 1.25]);
  translate([230, 36, 0])
    cube([1, 1, 1.25]);
  translate([231, 36, 0])
    cube([1, 1, 1.25]);
  translate([232, 36, 0])
    cube([1, 1, 1.25]);
  translate([233, 36, 0])
    cube([1, 1, 1.25]);
  translate([234, 36, 0])
    cube([1, 1, 1.25]);
  translate([235, 36, 0])
    cube([1, 1, 1.25]);
  translate([236, 36, 0])
    cube([1, 1, 1.25]);
  translate([237, 36, 0])
    cube([1, 1, 1.25]);
  translate([238, 36, 0])
    cube([1, 1, 1.25]);
  translate([239, 36, 0])
    cube([1, 1, 1.25]);
  translate([240, 36, 0])
    cube([1, 1, 1.25]);
  translate([241, 36, 0])
    cube([1, 1, 1.25]);
  translate([242, 36, 0])
    cube([1, 1, 1.25]);
  translate([243, 36, 0])
    cube([1, 1, 1.25]);
  translate([244, 36, 0])
    cube([1, 1, 1.25]);
  translate([245, 36, 0])
    cube([1, 1, 1.25]);
  translate([246, 36, 0])
    cube([1, 1, 1.25]);
  translate([0, 37, 0])
    cube([1, 1, 1.37]);
  translate([1, 37, 0])
    cube([1, 1, 1.37]);
  translate([2, 37, 0])
    cube([1, 1, 1.37]);
  translate([3, 37, 0])
    cube([1, 1, 1.37]);
  translate([4, 37, 0])
    cube([1, 1, 1.37]);
  translate([5, 37, 0])
    cube([1, 1, 1.37]);
  translate([6, 37, 0])
    cube([1, 1, 1.37]);
  translate([7, 37, 0])
    cube([1, 1, 1.37]);
  translate([8, 37, 0])
    cube([1, 1, 1.37]);
  translate([9, 37, 0])
    cube([1, 1, 1.37]);
  translate([10, 37, 0])
    cube([1, 1, 1.37]);
  translate([11, 37, 0])
    cube([1, 1, 1.53]);
  translate([12, 37, 0])
    cube([1, 1, 1.33]);
  translate([13, 37, 0])
    cube([1, 1, 1.02]);
  translate([14, 37, 0])
    cube([1, 1, 0.67]);
  translate([15, 37, 0])
    cube([1, 1, 0.55]);
  translate([16, 37, 0])
    cube([1, 1, 0.59]);
  translate([17, 37, 0])
    cube([1, 1, 0.59]);
  translate([18, 37, 0])
    cube([1, 1, 0.55]);
  translate([19, 37, 0])
    cube([1, 1, 0.63]);
  translate([20, 37, 0])
    cube([1, 1, 0.55]);
  translate([21, 37, 0])
    cube([1, 1, 0.67]);
  translate([22, 37, 0])
    cube([1, 1, 0.51]);
  translate([23, 37, 0])
    cube([1, 1, 0.82]);
  translate([24, 37, 0])
    cube([1, 1, 1.49]);
  translate([25, 37, 0])
    cube([1, 1, 1.37]);
  translate([26, 37, 0])
    cube([1, 1, 1.37]);
  translate([27, 37, 0])
    cube([1, 1, 1.37]);
  translate([28, 37, 0])
    cube([1, 1, 1.29]);
  translate([29, 37, 0])
    cube([1, 1, 1.37]);
  translate([30, 37, 0])
    cube([1, 1, 1.33]);
  translate([31, 37, 0])
    cube([1, 1, 1.37]);
  translate([32, 37, 0])
    cube([1, 1, 1.33]);
  translate([33, 37, 0])
    cube([1, 1, 1.33]);
  translate([34, 37, 0])
    cube([1, 1, 1.41]);
  translate([35, 37, 0])
    cube([1, 1, 1.33]);
  translate([36, 37, 0])
    cube([1, 1, 1.33]);
  translate([37, 37, 0])
    cube([1, 1, 1.33]);
  translate([38, 37, 0])
    cube([1, 1, 1.33]);
  translate([39, 37, 0])
    cube([1, 1, 1.33]);
  translate([40, 37, 0])
    cube([1, 1, 1.37]);
  translate([41, 37, 0])
    cube([1, 1, 1.33]);
  translate([42, 37, 0])
    cube([1, 1, 1.33]);
  translate([43, 37, 0])
    cube([1, 1, 1.33]);
  translate([44, 37, 0])
    cube([1, 1, 1.33]);
  translate([45, 37, 0])
    cube([1, 1, 1.33]);
  translate([46, 37, 0])
    cube([1, 1, 1.33]);
  translate([47, 37, 0])
    cube([1, 1, 1.33]);
  translate([48, 37, 0])
    cube([1, 1, 1.33]);
  translate([49, 37, 0])
    cube([1, 1, 1.33]);
  translate([50, 37, 0])
    cube([1, 1, 1.33]);
  translate([51, 37, 0])
    cube([1, 1, 1.33]);
  translate([52, 37, 0])
    cube([1, 1, 1.33]);
  translate([53, 37, 0])
    cube([1, 1, 1.33]);
  translate([54, 37, 0])
    cube([1, 1, 1.33]);
  translate([55, 37, 0])
    cube([1, 1, 1.33]);
  translate([56, 37, 0])
    cube([1, 1, 1.33]);
  translate([57, 37, 0])
    cube([1, 1, 1.33]);
  translate([58, 37, 0])
    cube([1, 1, 1.33]);
  translate([59, 37, 0])
    cube([1, 1, 1.33]);
  translate([60, 37, 0])
    cube([1, 1, 1.33]);
  translate([61, 37, 0])
    cube([1, 1, 1.33]);
  translate([62, 37, 0])
    cube([1, 1, 1.33]);
  translate([63, 37, 0])
    cube([1, 1, 1.33]);
  translate([64, 37, 0])
    cube([1, 1, 1.33]);
  translate([65, 37, 0])
    cube([1, 1, 1.33]);
  translate([66, 37, 0])
    cube([1, 1, 1.33]);
  translate([67, 37, 0])
    cube([1, 1, 1.33]);
  translate([68, 37, 0])
    cube([1, 1, 1.33]);
  translate([69, 37, 0])
    cube([1, 1, 1.33]);
  translate([70, 37, 0])
    cube([1, 1, 1.33]);
  translate([71, 37, 0])
    cube([1, 1, 1.33]);
  translate([72, 37, 0])
    cube([1, 1, 1.41]);
  translate([73, 37, 0])
    cube([1, 1, 6.39]);
  translate([74, 37, 0])
    cube([1, 1, 3.25]);
  translate([75, 37, 0])
    cube([1, 1, 3.33]);
  translate([76, 37, 0])
    cube([1, 1, 5.10]);
  translate([77, 37, 0])
    cube([1, 1, 5.92]);
  translate([78, 37, 0])
    cube([1, 1, 1.45]);
  translate([79, 37, 0])
    cube([1, 1, 3.33]);
  translate([80, 37, 0])
    cube([1, 1, 0.75]);
  translate([81, 37, 0])
    cube([1, 1, 3.22]);
  translate([82, 37, 0])
    cube([1, 1, 1.96]);
  translate([83, 37, 0])
    cube([1, 1, 1.14]);
  translate([84, 37, 0])
    cube([1, 1, 0.94]);
  translate([85, 37, 0])
    cube([1, 1, 1.10]);
  translate([86, 37, 0])
    cube([1, 1, 1.10]);
  translate([87, 37, 0])
    cube([1, 1, 0.82]);
  translate([88, 37, 0])
    cube([1, 1, 1.29]);
  translate([89, 37, 0])
    cube([1, 1, 1.45]);
  translate([90, 37, 0])
    cube([1, 1, 1.57]);
  translate([91, 37, 0])
    cube([1, 1, 1.33]);
  translate([92, 37, 0])
    cube([1, 1, 1.29]);
  translate([93, 37, 0])
    cube([1, 1, 1.25]);
  translate([94, 37, 0])
    cube([1, 1, 1.25]);
  translate([95, 37, 0])
    cube([1, 1, 1.29]);
  translate([96, 37, 0])
    cube([1, 1, 1.45]);
  translate([97, 37, 0])
    cube([1, 1, 1.49]);
  translate([98, 37, 0])
    cube([1, 1, 1.65]);
  translate([99, 37, 0])
    cube([1, 1, 2.20]);
  translate([100, 37, 0])
    cube([1, 1, 2.00]);
  translate([101, 37, 0])
    cube([1, 1, 1.80]);
  translate([102, 37, 0])
    cube([1, 1, 2.00]);
  translate([103, 37, 0])
    cube([1, 1, 1.10]);
  translate([104, 37, 0])
    cube([1, 1, 1.29]);
  translate([105, 37, 0])
    cube([1, 1, 1.88]);
  translate([106, 37, 0])
    cube([1, 1, 2.55]);
  translate([107, 37, 0])
    cube([1, 1, 2.39]);
  translate([108, 37, 0])
    cube([1, 1, 2.08]);
  translate([109, 37, 0])
    cube([1, 1, 2.08]);
  translate([110, 37, 0])
    cube([1, 1, 1.73]);
  translate([111, 37, 0])
    cube([1, 1, 1.69]);
  translate([112, 37, 0])
    cube([1, 1, 1.33]);
  translate([113, 37, 0])
    cube([1, 1, 1.84]);
  translate([114, 37, 0])
    cube([1, 1, 2.16]);
  translate([115, 37, 0])
    cube([1, 1, 1.45]);
  translate([116, 37, 0])
    cube([1, 1, 1.45]);
  translate([117, 37, 0])
    cube([1, 1, 1.80]);
  translate([118, 37, 0])
    cube([1, 1, 2.47]);
  translate([119, 37, 0])
    cube([1, 1, 2.78]);
  translate([120, 37, 0])
    cube([1, 1, 2.12]);
  translate([121, 37, 0])
    cube([1, 1, 3.73]);
  translate([122, 37, 0])
    cube([1, 1, 2.35]);
  translate([123, 37, 0])
    cube([1, 1, 2.51]);
  translate([124, 37, 0])
    cube([1, 1, 3.41]);
  translate([125, 37, 0])
    cube([1, 1, 7.18]);
  translate([126, 37, 0])
    cube([1, 1, 2.78]);
  translate([127, 37, 0])
    cube([1, 1, 0.86]);
  translate([128, 37, 0])
    cube([1, 1, 1.29]);
  translate([129, 37, 0])
    cube([1, 1, 1.25]);
  translate([130, 37, 0])
    cube([1, 1, 1.25]);
  translate([131, 37, 0])
    cube([1, 1, 1.25]);
  translate([132, 37, 0])
    cube([1, 1, 1.25]);
  translate([133, 37, 0])
    cube([1, 1, 1.25]);
  translate([134, 37, 0])
    cube([1, 1, 1.25]);
  translate([135, 37, 0])
    cube([1, 1, 1.25]);
  translate([136, 37, 0])
    cube([1, 1, 1.25]);
  translate([137, 37, 0])
    cube([1, 1, 1.25]);
  translate([138, 37, 0])
    cube([1, 1, 1.25]);
  translate([139, 37, 0])
    cube([1, 1, 1.25]);
  translate([140, 37, 0])
    cube([1, 1, 1.25]);
  translate([141, 37, 0])
    cube([1, 1, 1.25]);
  translate([142, 37, 0])
    cube([1, 1, 1.25]);
  translate([143, 37, 0])
    cube([1, 1, 1.25]);
  translate([144, 37, 0])
    cube([1, 1, 1.25]);
  translate([145, 37, 0])
    cube([1, 1, 1.25]);
  translate([146, 37, 0])
    cube([1, 1, 1.25]);
  translate([147, 37, 0])
    cube([1, 1, 1.25]);
  translate([148, 37, 0])
    cube([1, 1, 1.25]);
  translate([149, 37, 0])
    cube([1, 1, 1.25]);
  translate([150, 37, 0])
    cube([1, 1, 1.25]);
  translate([151, 37, 0])
    cube([1, 1, 1.25]);
  translate([152, 37, 0])
    cube([1, 1, 1.25]);
  translate([153, 37, 0])
    cube([1, 1, 1.25]);
  translate([154, 37, 0])
    cube([1, 1, 1.25]);
  translate([155, 37, 0])
    cube([1, 1, 1.25]);
  translate([156, 37, 0])
    cube([1, 1, 1.25]);
  translate([157, 37, 0])
    cube([1, 1, 1.25]);
  translate([158, 37, 0])
    cube([1, 1, 1.25]);
  translate([159, 37, 0])
    cube([1, 1, 1.25]);
  translate([160, 37, 0])
    cube([1, 1, 1.25]);
  translate([161, 37, 0])
    cube([1, 1, 1.25]);
  translate([162, 37, 0])
    cube([1, 1, 1.25]);
  translate([163, 37, 0])
    cube([1, 1, 1.25]);
  translate([164, 37, 0])
    cube([1, 1, 1.25]);
  translate([165, 37, 0])
    cube([1, 1, 1.25]);
  translate([166, 37, 0])
    cube([1, 1, 1.25]);
  translate([167, 37, 0])
    cube([1, 1, 1.25]);
  translate([168, 37, 0])
    cube([1, 1, 1.25]);
  translate([169, 37, 0])
    cube([1, 1, 1.25]);
  translate([170, 37, 0])
    cube([1, 1, 1.25]);
  translate([171, 37, 0])
    cube([1, 1, 1.25]);
  translate([172, 37, 0])
    cube([1, 1, 1.25]);
  translate([173, 37, 0])
    cube([1, 1, 1.25]);
  translate([174, 37, 0])
    cube([1, 1, 1.25]);
  translate([175, 37, 0])
    cube([1, 1, 1.25]);
  translate([176, 37, 0])
    cube([1, 1, 1.25]);
  translate([177, 37, 0])
    cube([1, 1, 1.25]);
  translate([178, 37, 0])
    cube([1, 1, 1.25]);
  translate([179, 37, 0])
    cube([1, 1, 1.25]);
  translate([180, 37, 0])
    cube([1, 1, 1.25]);
  translate([181, 37, 0])
    cube([1, 1, 1.25]);
  translate([182, 37, 0])
    cube([1, 1, 1.25]);
  translate([183, 37, 0])
    cube([1, 1, 1.25]);
  translate([184, 37, 0])
    cube([1, 1, 1.25]);
  translate([185, 37, 0])
    cube([1, 1, 1.25]);
  translate([186, 37, 0])
    cube([1, 1, 1.25]);
  translate([187, 37, 0])
    cube([1, 1, 1.25]);
  translate([188, 37, 0])
    cube([1, 1, 1.25]);
  translate([189, 37, 0])
    cube([1, 1, 1.25]);
  translate([190, 37, 0])
    cube([1, 1, 1.25]);
  translate([191, 37, 0])
    cube([1, 1, 1.25]);
  translate([192, 37, 0])
    cube([1, 1, 1.25]);
  translate([193, 37, 0])
    cube([1, 1, 1.25]);
  translate([194, 37, 0])
    cube([1, 1, 1.25]);
  translate([195, 37, 0])
    cube([1, 1, 1.25]);
  translate([196, 37, 0])
    cube([1, 1, 1.25]);
  translate([197, 37, 0])
    cube([1, 1, 1.25]);
  translate([198, 37, 0])
    cube([1, 1, 1.25]);
  translate([199, 37, 0])
    cube([1, 1, 1.25]);
  translate([200, 37, 0])
    cube([1, 1, 1.25]);
  translate([201, 37, 0])
    cube([1, 1, 1.25]);
  translate([202, 37, 0])
    cube([1, 1, 1.25]);
  translate([203, 37, 0])
    cube([1, 1, 1.25]);
  translate([204, 37, 0])
    cube([1, 1, 1.25]);
  translate([205, 37, 0])
    cube([1, 1, 1.25]);
  translate([206, 37, 0])
    cube([1, 1, 1.25]);
  translate([207, 37, 0])
    cube([1, 1, 1.25]);
  translate([208, 37, 0])
    cube([1, 1, 1.25]);
  translate([209, 37, 0])
    cube([1, 1, 1.25]);
  translate([210, 37, 0])
    cube([1, 1, 1.25]);
  translate([211, 37, 0])
    cube([1, 1, 1.25]);
  translate([212, 37, 0])
    cube([1, 1, 1.25]);
  translate([213, 37, 0])
    cube([1, 1, 1.25]);
  translate([214, 37, 0])
    cube([1, 1, 1.25]);
  translate([215, 37, 0])
    cube([1, 1, 1.25]);
  translate([216, 37, 0])
    cube([1, 1, 1.25]);
  translate([217, 37, 0])
    cube([1, 1, 1.25]);
  translate([218, 37, 0])
    cube([1, 1, 1.25]);
  translate([219, 37, 0])
    cube([1, 1, 1.25]);
  translate([220, 37, 0])
    cube([1, 1, 1.25]);
  translate([221, 37, 0])
    cube([1, 1, 1.25]);
  translate([222, 37, 0])
    cube([1, 1, 1.25]);
  translate([223, 37, 0])
    cube([1, 1, 1.25]);
  translate([224, 37, 0])
    cube([1, 1, 1.25]);
  translate([225, 37, 0])
    cube([1, 1, 1.25]);
  translate([226, 37, 0])
    cube([1, 1, 1.25]);
  translate([227, 37, 0])
    cube([1, 1, 1.25]);
  translate([228, 37, 0])
    cube([1, 1, 1.25]);
  translate([229, 37, 0])
    cube([1, 1, 1.25]);
  translate([230, 37, 0])
    cube([1, 1, 1.25]);
  translate([231, 37, 0])
    cube([1, 1, 1.25]);
  translate([232, 37, 0])
    cube([1, 1, 1.25]);
  translate([233, 37, 0])
    cube([1, 1, 1.25]);
  translate([234, 37, 0])
    cube([1, 1, 1.25]);
  translate([235, 37, 0])
    cube([1, 1, 1.25]);
  translate([236, 37, 0])
    cube([1, 1, 1.25]);
  translate([237, 37, 0])
    cube([1, 1, 1.25]);
  translate([238, 37, 0])
    cube([1, 1, 1.25]);
  translate([239, 37, 0])
    cube([1, 1, 1.25]);
  translate([240, 37, 0])
    cube([1, 1, 1.25]);
  translate([241, 37, 0])
    cube([1, 1, 1.25]);
  translate([242, 37, 0])
    cube([1, 1, 1.25]);
  translate([243, 37, 0])
    cube([1, 1, 1.25]);
  translate([244, 37, 0])
    cube([1, 1, 1.25]);
  translate([245, 37, 0])
    cube([1, 1, 1.25]);
  translate([246, 37, 0])
    cube([1, 1, 1.25]);
  translate([0, 38, 0])
    cube([1, 1, 1.37]);
  translate([1, 38, 0])
    cube([1, 1, 1.37]);
  translate([2, 38, 0])
    cube([1, 1, 1.37]);
  translate([3, 38, 0])
    cube([1, 1, 1.37]);
  translate([4, 38, 0])
    cube([1, 1, 1.37]);
  translate([5, 38, 0])
    cube([1, 1, 1.37]);
  translate([6, 38, 0])
    cube([1, 1, 1.37]);
  translate([7, 38, 0])
    cube([1, 1, 1.37]);
  translate([8, 38, 0])
    cube([1, 1, 1.37]);
  translate([9, 38, 0])
    cube([1, 1, 1.37]);
  translate([10, 38, 0])
    cube([1, 1, 1.37]);
  translate([11, 38, 0])
    cube([1, 1, 1.41]);
  translate([12, 38, 0])
    cube([1, 1, 5.10]);
  translate([13, 38, 0])
    cube([1, 1, 1.25]);
  translate([14, 38, 0])
    cube([1, 1, 0.98]);
  translate([15, 38, 0])
    cube([1, 1, 0.98]);
  translate([16, 38, 0])
    cube([1, 1, 0.90]);
  translate([17, 38, 0])
    cube([1, 1, 0.71]);
  translate([18, 38, 0])
    cube([1, 1, 0.55]);
  translate([19, 38, 0])
    cube([1, 1, 0.63]);
  translate([20, 38, 0])
    cube([1, 1, 0.67]);
  translate([21, 38, 0])
    cube([1, 1, 0.67]);
  translate([22, 38, 0])
    cube([1, 1, 0.75]);
  translate([23, 38, 0])
    cube([1, 1, 0.71]);
  translate([24, 38, 0])
    cube([1, 1, 1.41]);
  translate([25, 38, 0])
    cube([1, 1, 1.37]);
  translate([26, 38, 0])
    cube([1, 1, 1.37]);
  translate([27, 38, 0])
    cube([1, 1, 1.37]);
  translate([28, 38, 0])
    cube([1, 1, 1.37]);
  translate([29, 38, 0])
    cube([1, 1, 1.33]);
  translate([30, 38, 0])
    cube([1, 1, 1.33]);
  translate([31, 38, 0])
    cube([1, 1, 1.37]);
  translate([32, 38, 0])
    cube([1, 1, 1.33]);
  translate([33, 38, 0])
    cube([1, 1, 1.33]);
  translate([34, 38, 0])
    cube([1, 1, 1.41]);
  translate([35, 38, 0])
    cube([1, 1, 1.33]);
  translate([36, 38, 0])
    cube([1, 1, 1.37]);
  translate([37, 38, 0])
    cube([1, 1, 1.37]);
  translate([38, 38, 0])
    cube([1, 1, 1.37]);
  translate([39, 38, 0])
    cube([1, 1, 1.37]);
  translate([40, 38, 0])
    cube([1, 1, 1.37]);
  translate([41, 38, 0])
    cube([1, 1, 1.33]);
  translate([42, 38, 0])
    cube([1, 1, 1.33]);
  translate([43, 38, 0])
    cube([1, 1, 1.33]);
  translate([44, 38, 0])
    cube([1, 1, 1.33]);
  translate([45, 38, 0])
    cube([1, 1, 1.33]);
  translate([46, 38, 0])
    cube([1, 1, 1.33]);
  translate([47, 38, 0])
    cube([1, 1, 1.33]);
  translate([48, 38, 0])
    cube([1, 1, 1.33]);
  translate([49, 38, 0])
    cube([1, 1, 1.33]);
  translate([50, 38, 0])
    cube([1, 1, 1.33]);
  translate([51, 38, 0])
    cube([1, 1, 1.33]);
  translate([52, 38, 0])
    cube([1, 1, 1.33]);
  translate([53, 38, 0])
    cube([1, 1, 1.33]);
  translate([54, 38, 0])
    cube([1, 1, 1.33]);
  translate([55, 38, 0])
    cube([1, 1, 1.33]);
  translate([56, 38, 0])
    cube([1, 1, 1.33]);
  translate([57, 38, 0])
    cube([1, 1, 1.33]);
  translate([58, 38, 0])
    cube([1, 1, 1.33]);
  translate([59, 38, 0])
    cube([1, 1, 1.33]);
  translate([60, 38, 0])
    cube([1, 1, 1.33]);
  translate([61, 38, 0])
    cube([1, 1, 1.33]);
  translate([62, 38, 0])
    cube([1, 1, 1.33]);
  translate([63, 38, 0])
    cube([1, 1, 1.33]);
  translate([64, 38, 0])
    cube([1, 1, 1.33]);
  translate([65, 38, 0])
    cube([1, 1, 1.33]);
  translate([66, 38, 0])
    cube([1, 1, 1.33]);
  translate([67, 38, 0])
    cube([1, 1, 1.33]);
  translate([68, 38, 0])
    cube([1, 1, 1.33]);
  translate([69, 38, 0])
    cube([1, 1, 1.33]);
  translate([70, 38, 0])
    cube([1, 1, 1.33]);
  translate([71, 38, 0])
    cube([1, 1, 1.33]);
  translate([72, 38, 0])
    cube([1, 1, 1.41]);
  translate([73, 38, 0])
    cube([1, 1, 1.69]);
  translate([74, 38, 0])
    cube([1, 1, 6.16]);
  translate([75, 38, 0])
    cube([1, 1, 7.14]);
  translate([76, 38, 0])
    cube([1, 1, 5.69]);
  translate([77, 38, 0])
    cube([1, 1, 2.00]);
  translate([78, 38, 0])
    cube([1, 1, 5.49]);
  translate([79, 38, 0])
    cube([1, 1, 1.14]);
  translate([80, 38, 0])
    cube([1, 1, 4.63]);
  translate([81, 38, 0])
    cube([1, 1, 1.14]);
  translate([82, 38, 0])
    cube([1, 1, 1.06]);
  translate([83, 38, 0])
    cube([1, 1, 1.22]);
  translate([84, 38, 0])
    cube([1, 1, 1.25]);
  translate([85, 38, 0])
    cube([1, 1, 1.06]);
  translate([86, 38, 0])
    cube([1, 1, 0.75]);
  translate([87, 38, 0])
    cube([1, 1, 1.18]);
  translate([88, 38, 0])
    cube([1, 1, 1.65]);
  translate([89, 38, 0])
    cube([1, 1, 1.73]);
  translate([90, 38, 0])
    cube([1, 1, 1.29]);
  translate([91, 38, 0])
    cube([1, 1, 1.22]);
  translate([92, 38, 0])
    cube([1, 1, 1.22]);
  translate([93, 38, 0])
    cube([1, 1, 1.06]);
  translate([94, 38, 0])
    cube([1, 1, 1.22]);
  translate([95, 38, 0])
    cube([1, 1, 1.80]);
  translate([96, 38, 0])
    cube([1, 1, 1.37]);
  translate([97, 38, 0])
    cube([1, 1, 1.65]);
  translate([98, 38, 0])
    cube([1, 1, 1.45]);
  translate([99, 38, 0])
    cube([1, 1, 2.35]);
  translate([100, 38, 0])
    cube([1, 1, 1.33]);
  translate([101, 38, 0])
    cube([1, 1, 1.69]);
  translate([102, 38, 0])
    cube([1, 1, 1.37]);
  translate([103, 38, 0])
    cube([1, 1, 3.33]);
  translate([104, 38, 0])
    cube([1, 1, 3.14]);
  translate([105, 38, 0])
    cube([1, 1, 1.84]);
  translate([106, 38, 0])
    cube([1, 1, 2.71]);
  translate([107, 38, 0])
    cube([1, 1, 2.16]);
  translate([108, 38, 0])
    cube([1, 1, 1.69]);
  translate([109, 38, 0])
    cube([1, 1, 1.53]);
  translate([110, 38, 0])
    cube([1, 1, 1.33]);
  translate([111, 38, 0])
    cube([1, 1, 0.98]);
  translate([112, 38, 0])
    cube([1, 1, 1.18]);
  translate([113, 38, 0])
    cube([1, 1, 1.37]);
  translate([114, 38, 0])
    cube([1, 1, 1.14]);
  translate([115, 38, 0])
    cube([1, 1, 1.45]);
  translate([116, 38, 0])
    cube([1, 1, 1.69]);
  translate([117, 38, 0])
    cube([1, 1, 1.88]);
  translate([118, 38, 0])
    cube([1, 1, 1.49]);
  translate([119, 38, 0])
    cube([1, 1, 1.76]);
  translate([120, 38, 0])
    cube([1, 1, 2.04]);
  translate([121, 38, 0])
    cube([1, 1, 3.73]);
  translate([122, 38, 0])
    cube([1, 1, 2.78]);
  translate([123, 38, 0])
    cube([1, 1, 2.71]);
  translate([124, 38, 0])
    cube([1, 1, 2.86]);
  translate([125, 38, 0])
    cube([1, 1, 6.08]);
  translate([126, 38, 0])
    cube([1, 1, 6.00]);
  translate([127, 38, 0])
    cube([1, 1, 1.14]);
  translate([128, 38, 0])
    cube([1, 1, 1.25]);
  translate([129, 38, 0])
    cube([1, 1, 1.25]);
  translate([130, 38, 0])
    cube([1, 1, 1.25]);
  translate([131, 38, 0])
    cube([1, 1, 1.25]);
  translate([132, 38, 0])
    cube([1, 1, 1.25]);
  translate([133, 38, 0])
    cube([1, 1, 1.25]);
  translate([134, 38, 0])
    cube([1, 1, 1.25]);
  translate([135, 38, 0])
    cube([1, 1, 1.25]);
  translate([136, 38, 0])
    cube([1, 1, 1.25]);
  translate([137, 38, 0])
    cube([1, 1, 1.25]);
  translate([138, 38, 0])
    cube([1, 1, 1.25]);
  translate([139, 38, 0])
    cube([1, 1, 1.25]);
  translate([140, 38, 0])
    cube([1, 1, 1.25]);
  translate([141, 38, 0])
    cube([1, 1, 1.25]);
  translate([142, 38, 0])
    cube([1, 1, 1.25]);
  translate([143, 38, 0])
    cube([1, 1, 1.25]);
  translate([144, 38, 0])
    cube([1, 1, 1.25]);
  translate([145, 38, 0])
    cube([1, 1, 1.25]);
  translate([146, 38, 0])
    cube([1, 1, 1.25]);
  translate([147, 38, 0])
    cube([1, 1, 1.25]);
  translate([148, 38, 0])
    cube([1, 1, 1.25]);
  translate([149, 38, 0])
    cube([1, 1, 1.25]);
  translate([150, 38, 0])
    cube([1, 1, 1.25]);
  translate([151, 38, 0])
    cube([1, 1, 1.25]);
  translate([152, 38, 0])
    cube([1, 1, 1.25]);
  translate([153, 38, 0])
    cube([1, 1, 1.25]);
  translate([154, 38, 0])
    cube([1, 1, 1.25]);
  translate([155, 38, 0])
    cube([1, 1, 1.25]);
  translate([156, 38, 0])
    cube([1, 1, 1.25]);
  translate([157, 38, 0])
    cube([1, 1, 1.25]);
  translate([158, 38, 0])
    cube([1, 1, 1.25]);
  translate([159, 38, 0])
    cube([1, 1, 1.25]);
  translate([160, 38, 0])
    cube([1, 1, 1.25]);
  translate([161, 38, 0])
    cube([1, 1, 1.25]);
  translate([162, 38, 0])
    cube([1, 1, 1.25]);
  translate([163, 38, 0])
    cube([1, 1, 1.25]);
  translate([164, 38, 0])
    cube([1, 1, 1.25]);
  translate([165, 38, 0])
    cube([1, 1, 1.25]);
  translate([166, 38, 0])
    cube([1, 1, 1.25]);
  translate([167, 38, 0])
    cube([1, 1, 1.25]);
  translate([168, 38, 0])
    cube([1, 1, 1.25]);
  translate([169, 38, 0])
    cube([1, 1, 1.25]);
  translate([170, 38, 0])
    cube([1, 1, 1.25]);
  translate([171, 38, 0])
    cube([1, 1, 1.25]);
  translate([172, 38, 0])
    cube([1, 1, 1.25]);
  translate([173, 38, 0])
    cube([1, 1, 1.25]);
  translate([174, 38, 0])
    cube([1, 1, 1.25]);
  translate([175, 38, 0])
    cube([1, 1, 1.25]);
  translate([176, 38, 0])
    cube([1, 1, 1.25]);
  translate([177, 38, 0])
    cube([1, 1, 1.25]);
  translate([178, 38, 0])
    cube([1, 1, 1.25]);
  translate([179, 38, 0])
    cube([1, 1, 1.25]);
  translate([180, 38, 0])
    cube([1, 1, 1.25]);
  translate([181, 38, 0])
    cube([1, 1, 1.25]);
  translate([182, 38, 0])
    cube([1, 1, 1.25]);
  translate([183, 38, 0])
    cube([1, 1, 1.25]);
  translate([184, 38, 0])
    cube([1, 1, 1.25]);
  translate([185, 38, 0])
    cube([1, 1, 1.25]);
  translate([186, 38, 0])
    cube([1, 1, 1.25]);
  translate([187, 38, 0])
    cube([1, 1, 1.25]);
  translate([188, 38, 0])
    cube([1, 1, 1.25]);
  translate([189, 38, 0])
    cube([1, 1, 1.25]);
  translate([190, 38, 0])
    cube([1, 1, 1.25]);
  translate([191, 38, 0])
    cube([1, 1, 1.25]);
  translate([192, 38, 0])
    cube([1, 1, 1.25]);
  translate([193, 38, 0])
    cube([1, 1, 1.25]);
  translate([194, 38, 0])
    cube([1, 1, 1.25]);
  translate([195, 38, 0])
    cube([1, 1, 1.25]);
  translate([196, 38, 0])
    cube([1, 1, 1.25]);
  translate([197, 38, 0])
    cube([1, 1, 1.25]);
  translate([198, 38, 0])
    cube([1, 1, 1.25]);
  translate([199, 38, 0])
    cube([1, 1, 1.25]);
  translate([200, 38, 0])
    cube([1, 1, 1.25]);
  translate([201, 38, 0])
    cube([1, 1, 1.25]);
  translate([202, 38, 0])
    cube([1, 1, 1.25]);
  translate([203, 38, 0])
    cube([1, 1, 1.25]);
  translate([204, 38, 0])
    cube([1, 1, 1.25]);
  translate([205, 38, 0])
    cube([1, 1, 1.25]);
  translate([206, 38, 0])
    cube([1, 1, 1.25]);
  translate([207, 38, 0])
    cube([1, 1, 1.25]);
  translate([208, 38, 0])
    cube([1, 1, 1.25]);
  translate([209, 38, 0])
    cube([1, 1, 1.25]);
  translate([210, 38, 0])
    cube([1, 1, 1.25]);
  translate([211, 38, 0])
    cube([1, 1, 1.25]);
  translate([212, 38, 0])
    cube([1, 1, 1.25]);
  translate([213, 38, 0])
    cube([1, 1, 1.25]);
  translate([214, 38, 0])
    cube([1, 1, 1.25]);
  translate([215, 38, 0])
    cube([1, 1, 1.25]);
  translate([216, 38, 0])
    cube([1, 1, 1.25]);
  translate([217, 38, 0])
    cube([1, 1, 1.25]);
  translate([218, 38, 0])
    cube([1, 1, 1.25]);
  translate([219, 38, 0])
    cube([1, 1, 1.25]);
  translate([220, 38, 0])
    cube([1, 1, 1.25]);
  translate([221, 38, 0])
    cube([1, 1, 1.25]);
  translate([222, 38, 0])
    cube([1, 1, 1.25]);
  translate([223, 38, 0])
    cube([1, 1, 1.25]);
  translate([224, 38, 0])
    cube([1, 1, 1.25]);
  translate([225, 38, 0])
    cube([1, 1, 1.25]);
  translate([226, 38, 0])
    cube([1, 1, 1.25]);
  translate([227, 38, 0])
    cube([1, 1, 1.25]);
  translate([228, 38, 0])
    cube([1, 1, 1.25]);
  translate([229, 38, 0])
    cube([1, 1, 1.25]);
  translate([230, 38, 0])
    cube([1, 1, 1.25]);
  translate([231, 38, 0])
    cube([1, 1, 1.25]);
  translate([232, 38, 0])
    cube([1, 1, 1.25]);
  translate([233, 38, 0])
    cube([1, 1, 1.25]);
  translate([234, 38, 0])
    cube([1, 1, 1.25]);
  translate([235, 38, 0])
    cube([1, 1, 1.25]);
  translate([236, 38, 0])
    cube([1, 1, 1.25]);
  translate([237, 38, 0])
    cube([1, 1, 1.25]);
  translate([238, 38, 0])
    cube([1, 1, 1.25]);
  translate([239, 38, 0])
    cube([1, 1, 1.25]);
  translate([240, 38, 0])
    cube([1, 1, 1.25]);
  translate([241, 38, 0])
    cube([1, 1, 1.25]);
  translate([242, 38, 0])
    cube([1, 1, 1.25]);
  translate([243, 38, 0])
    cube([1, 1, 1.25]);
  translate([244, 38, 0])
    cube([1, 1, 1.25]);
  translate([245, 38, 0])
    cube([1, 1, 1.25]);
  translate([246, 38, 0])
    cube([1, 1, 1.25]);
  translate([0, 39, 0])
    cube([1, 1, 1.41]);
  translate([1, 39, 0])
    cube([1, 1, 1.37]);
  translate([2, 39, 0])
    cube([1, 1, 1.37]);
  translate([3, 39, 0])
    cube([1, 1, 1.33]);
  translate([4, 39, 0])
    cube([1, 1, 1.37]);
  translate([5, 39, 0])
    cube([1, 1, 1.37]);
  translate([6, 39, 0])
    cube([1, 1, 1.37]);
  translate([7, 39, 0])
    cube([1, 1, 1.37]);
  translate([8, 39, 0])
    cube([1, 1, 1.37]);
  translate([9, 39, 0])
    cube([1, 1, 1.37]);
  translate([10, 39, 0])
    cube([1, 1, 1.37]);
  translate([11, 39, 0])
    cube([1, 1, 1.37]);
  translate([12, 39, 0])
    cube([1, 1, 2.20]);
  translate([13, 39, 0])
    cube([1, 1, 0.86]);
  translate([14, 39, 0])
    cube([1, 1, 0.94]);
  translate([15, 39, 0])
    cube([1, 1, 0.98]);
  translate([16, 39, 0])
    cube([1, 1, 1.02]);
  translate([17, 39, 0])
    cube([1, 1, 1.65]);
  translate([18, 39, 0])
    cube([1, 1, 1.02]);
  translate([19, 39, 0])
    cube([1, 1, 0.63]);
  translate([20, 39, 0])
    cube([1, 1, 0.75]);
  translate([21, 39, 0])
    cube([1, 1, 0.67]);
  translate([22, 39, 0])
    cube([1, 1, 0.75]);
  translate([23, 39, 0])
    cube([1, 1, 0.71]);
  translate([24, 39, 0])
    cube([1, 1, 0.94]);
  translate([25, 39, 0])
    cube([1, 1, 1.37]);
  translate([26, 39, 0])
    cube([1, 1, 1.37]);
  translate([27, 39, 0])
    cube([1, 1, 1.37]);
  translate([28, 39, 0])
    cube([1, 1, 1.37]);
  translate([29, 39, 0])
    cube([1, 1, 1.37]);
  translate([30, 39, 0])
    cube([1, 1, 1.37]);
  translate([31, 39, 0])
    cube([1, 1, 1.37]);
  translate([32, 39, 0])
    cube([1, 1, 1.33]);
  translate([33, 39, 0])
    cube([1, 1, 1.29]);
  translate([34, 39, 0])
    cube([1, 1, 1.29]);
  translate([35, 39, 0])
    cube([1, 1, 1.37]);
  translate([36, 39, 0])
    cube([1, 1, 1.37]);
  translate([37, 39, 0])
    cube([1, 1, 1.37]);
  translate([38, 39, 0])
    cube([1, 1, 1.29]);
  translate([39, 39, 0])
    cube([1, 1, 1.37]);
  translate([40, 39, 0])
    cube([1, 1, 1.37]);
  translate([41, 39, 0])
    cube([1, 1, 1.37]);
  translate([42, 39, 0])
    cube([1, 1, 1.37]);
  translate([43, 39, 0])
    cube([1, 1, 1.33]);
  translate([44, 39, 0])
    cube([1, 1, 1.33]);
  translate([45, 39, 0])
    cube([1, 1, 1.33]);
  translate([46, 39, 0])
    cube([1, 1, 1.33]);
  translate([47, 39, 0])
    cube([1, 1, 1.33]);
  translate([48, 39, 0])
    cube([1, 1, 1.33]);
  translate([49, 39, 0])
    cube([1, 1, 1.33]);
  translate([50, 39, 0])
    cube([1, 1, 1.33]);
  translate([51, 39, 0])
    cube([1, 1, 1.33]);
  translate([52, 39, 0])
    cube([1, 1, 1.33]);
  translate([53, 39, 0])
    cube([1, 1, 1.33]);
  translate([54, 39, 0])
    cube([1, 1, 1.33]);
  translate([55, 39, 0])
    cube([1, 1, 1.33]);
  translate([56, 39, 0])
    cube([1, 1, 1.33]);
  translate([57, 39, 0])
    cube([1, 1, 1.33]);
  translate([58, 39, 0])
    cube([1, 1, 1.33]);
  translate([59, 39, 0])
    cube([1, 1, 1.33]);
  translate([60, 39, 0])
    cube([1, 1, 1.33]);
  translate([61, 39, 0])
    cube([1, 1, 1.33]);
  translate([62, 39, 0])
    cube([1, 1, 1.33]);
  translate([63, 39, 0])
    cube([1, 1, 1.33]);
  translate([64, 39, 0])
    cube([1, 1, 1.33]);
  translate([65, 39, 0])
    cube([1, 1, 1.33]);
  translate([66, 39, 0])
    cube([1, 1, 1.33]);
  translate([67, 39, 0])
    cube([1, 1, 1.33]);
  translate([68, 39, 0])
    cube([1, 1, 1.33]);
  translate([69, 39, 0])
    cube([1, 1, 1.33]);
  translate([70, 39, 0])
    cube([1, 1, 1.33]);
  translate([71, 39, 0])
    cube([1, 1, 1.33]);
  translate([72, 39, 0])
    cube([1, 1, 1.33]);
  translate([73, 39, 0])
    cube([1, 1, 1.41]);
  translate([74, 39, 0])
    cube([1, 1, 7.18]);
  translate([75, 39, 0])
    cube([1, 1, 7.49]);
  translate([76, 39, 0])
    cube([1, 1, 2.16]);
  translate([77, 39, 0])
    cube([1, 1, 6.71]);
  translate([78, 39, 0])
    cube([1, 1, 0.71]);
  translate([79, 39, 0])
    cube([1, 1, 0.90]);
  translate([80, 39, 0])
    cube([1, 1, 7.06]);
  translate([81, 39, 0])
    cube([1, 1, 1.33]);
  translate([82, 39, 0])
    cube([1, 1, 1.49]);
  translate([83, 39, 0])
    cube([1, 1, 1.06]);
  translate([84, 39, 0])
    cube([1, 1, 1.18]);
  translate([85, 39, 0])
    cube([1, 1, 0.75]);
  translate([86, 39, 0])
    cube([1, 1, 1.37]);
  translate([87, 39, 0])
    cube([1, 1, 1.22]);
  translate([88, 39, 0])
    cube([1, 1, 1.65]);
  translate([89, 39, 0])
    cube([1, 1, 1.33]);
  translate([90, 39, 0])
    cube([1, 1, 1.22]);
  translate([91, 39, 0])
    cube([1, 1, 1.33]);
  translate([92, 39, 0])
    cube([1, 1, 1.02]);
  translate([93, 39, 0])
    cube([1, 1, 1.33]);
  translate([94, 39, 0])
    cube([1, 1, 1.76]);
  translate([95, 39, 0])
    cube([1, 1, 1.18]);
  translate([96, 39, 0])
    cube([1, 1, 1.76]);
  translate([97, 39, 0])
    cube([1, 1, 1.41]);
  translate([98, 39, 0])
    cube([1, 1, 1.76]);
  translate([99, 39, 0])
    cube([1, 1, 1.22]);
  translate([100, 39, 0])
    cube([1, 1, 1.61]);
  translate([101, 39, 0])
    cube([1, 1, 3.65]);
  translate([102, 39, 0])
    cube([1, 1, 2.00]);
  translate([103, 39, 0])
    cube([1, 1, 3.92]);
  translate([104, 39, 0])
    cube([1, 1, 1.45]);
  translate([105, 39, 0])
    cube([1, 1, 1.61]);
  translate([106, 39, 0])
    cube([1, 1, 2.20]);
  translate([107, 39, 0])
    cube([1, 1, 1.73]);
  translate([108, 39, 0])
    cube([1, 1, 1.73]);
  translate([109, 39, 0])
    cube([1, 1, 1.37]);
  translate([110, 39, 0])
    cube([1, 1, 1.41]);
  translate([111, 39, 0])
    cube([1, 1, 1.92]);
  translate([112, 39, 0])
    cube([1, 1, 2.71]);
  translate([113, 39, 0])
    cube([1, 1, 2.24]);
  translate([114, 39, 0])
    cube([1, 1, 1.06]);
  translate([115, 39, 0])
    cube([1, 1, 1.06]);
  translate([116, 39, 0])
    cube([1, 1, 1.18]);
  translate([117, 39, 0])
    cube([1, 1, 1.65]);
  translate([118, 39, 0])
    cube([1, 1, 2.04]);
  translate([119, 39, 0])
    cube([1, 1, 2.51]);
  translate([120, 39, 0])
    cube([1, 1, 2.04]);
  translate([121, 39, 0])
    cube([1, 1, 2.12]);
  translate([122, 39, 0])
    cube([1, 1, 3.45]);
  translate([123, 39, 0])
    cube([1, 1, 2.90]);
  translate([124, 39, 0])
    cube([1, 1, 2.12]);
  translate([125, 39, 0])
    cube([1, 1, 3.49]);
  translate([126, 39, 0])
    cube([1, 1, 5.65]);
  translate([127, 39, 0])
    cube([1, 1, 1.33]);
  translate([128, 39, 0])
    cube([1, 1, 1.22]);
  translate([129, 39, 0])
    cube([1, 1, 1.25]);
  translate([130, 39, 0])
    cube([1, 1, 1.25]);
  translate([131, 39, 0])
    cube([1, 1, 1.29]);
  translate([132, 39, 0])
    cube([1, 1, 1.25]);
  translate([133, 39, 0])
    cube([1, 1, 1.25]);
  translate([134, 39, 0])
    cube([1, 1, 1.25]);
  translate([135, 39, 0])
    cube([1, 1, 1.25]);
  translate([136, 39, 0])
    cube([1, 1, 1.25]);
  translate([137, 39, 0])
    cube([1, 1, 1.25]);
  translate([138, 39, 0])
    cube([1, 1, 1.25]);
  translate([139, 39, 0])
    cube([1, 1, 1.25]);
  translate([140, 39, 0])
    cube([1, 1, 1.25]);
  translate([141, 39, 0])
    cube([1, 1, 1.25]);
  translate([142, 39, 0])
    cube([1, 1, 1.22]);
  translate([143, 39, 0])
    cube([1, 1, 1.25]);
  translate([144, 39, 0])
    cube([1, 1, 1.29]);
  translate([145, 39, 0])
    cube([1, 1, 1.25]);
  translate([146, 39, 0])
    cube([1, 1, 1.25]);
  translate([147, 39, 0])
    cube([1, 1, 1.25]);
  translate([148, 39, 0])
    cube([1, 1, 1.25]);
  translate([149, 39, 0])
    cube([1, 1, 1.25]);
  translate([150, 39, 0])
    cube([1, 1, 1.25]);
  translate([151, 39, 0])
    cube([1, 1, 1.25]);
  translate([152, 39, 0])
    cube([1, 1, 1.29]);
  translate([153, 39, 0])
    cube([1, 1, 1.25]);
  translate([154, 39, 0])
    cube([1, 1, 1.25]);
  translate([155, 39, 0])
    cube([1, 1, 1.22]);
  translate([156, 39, 0])
    cube([1, 1, 1.25]);
  translate([157, 39, 0])
    cube([1, 1, 1.25]);
  translate([158, 39, 0])
    cube([1, 1, 1.29]);
  translate([159, 39, 0])
    cube([1, 1, 1.25]);
  translate([160, 39, 0])
    cube([1, 1, 1.25]);
  translate([161, 39, 0])
    cube([1, 1, 1.25]);
  translate([162, 39, 0])
    cube([1, 1, 1.25]);
  translate([163, 39, 0])
    cube([1, 1, 1.25]);
  translate([164, 39, 0])
    cube([1, 1, 1.25]);
  translate([165, 39, 0])
    cube([1, 1, 1.25]);
  translate([166, 39, 0])
    cube([1, 1, 1.25]);
  translate([167, 39, 0])
    cube([1, 1, 1.25]);
  translate([168, 39, 0])
    cube([1, 1, 1.25]);
  translate([169, 39, 0])
    cube([1, 1, 1.25]);
  translate([170, 39, 0])
    cube([1, 1, 1.25]);
  translate([171, 39, 0])
    cube([1, 1, 1.25]);
  translate([172, 39, 0])
    cube([1, 1, 1.25]);
  translate([173, 39, 0])
    cube([1, 1, 1.25]);
  translate([174, 39, 0])
    cube([1, 1, 1.25]);
  translate([175, 39, 0])
    cube([1, 1, 1.25]);
  translate([176, 39, 0])
    cube([1, 1, 1.25]);
  translate([177, 39, 0])
    cube([1, 1, 1.25]);
  translate([178, 39, 0])
    cube([1, 1, 1.25]);
  translate([179, 39, 0])
    cube([1, 1, 1.25]);
  translate([180, 39, 0])
    cube([1, 1, 1.25]);
  translate([181, 39, 0])
    cube([1, 1, 1.25]);
  translate([182, 39, 0])
    cube([1, 1, 1.25]);
  translate([183, 39, 0])
    cube([1, 1, 1.25]);
  translate([184, 39, 0])
    cube([1, 1, 1.25]);
  translate([185, 39, 0])
    cube([1, 1, 1.25]);
  translate([186, 39, 0])
    cube([1, 1, 1.25]);
  translate([187, 39, 0])
    cube([1, 1, 1.25]);
  translate([188, 39, 0])
    cube([1, 1, 1.25]);
  translate([189, 39, 0])
    cube([1, 1, 1.25]);
  translate([190, 39, 0])
    cube([1, 1, 1.25]);
  translate([191, 39, 0])
    cube([1, 1, 1.25]);
  translate([192, 39, 0])
    cube([1, 1, 1.25]);
  translate([193, 39, 0])
    cube([1, 1, 1.25]);
  translate([194, 39, 0])
    cube([1, 1, 1.25]);
  translate([195, 39, 0])
    cube([1, 1, 1.25]);
  translate([196, 39, 0])
    cube([1, 1, 1.25]);
  translate([197, 39, 0])
    cube([1, 1, 1.25]);
  translate([198, 39, 0])
    cube([1, 1, 1.25]);
  translate([199, 39, 0])
    cube([1, 1, 1.25]);
  translate([200, 39, 0])
    cube([1, 1, 1.25]);
  translate([201, 39, 0])
    cube([1, 1, 1.25]);
  translate([202, 39, 0])
    cube([1, 1, 1.25]);
  translate([203, 39, 0])
    cube([1, 1, 1.25]);
  translate([204, 39, 0])
    cube([1, 1, 1.25]);
  translate([205, 39, 0])
    cube([1, 1, 1.25]);
  translate([206, 39, 0])
    cube([1, 1, 1.25]);
  translate([207, 39, 0])
    cube([1, 1, 1.25]);
  translate([208, 39, 0])
    cube([1, 1, 1.25]);
  translate([209, 39, 0])
    cube([1, 1, 1.25]);
  translate([210, 39, 0])
    cube([1, 1, 1.25]);
  translate([211, 39, 0])
    cube([1, 1, 1.25]);
  translate([212, 39, 0])
    cube([1, 1, 1.25]);
  translate([213, 39, 0])
    cube([1, 1, 1.25]);
  translate([214, 39, 0])
    cube([1, 1, 1.25]);
  translate([215, 39, 0])
    cube([1, 1, 1.25]);
  translate([216, 39, 0])
    cube([1, 1, 1.25]);
  translate([217, 39, 0])
    cube([1, 1, 1.25]);
  translate([218, 39, 0])
    cube([1, 1, 1.25]);
  translate([219, 39, 0])
    cube([1, 1, 1.25]);
  translate([220, 39, 0])
    cube([1, 1, 1.25]);
  translate([221, 39, 0])
    cube([1, 1, 1.25]);
  translate([222, 39, 0])
    cube([1, 1, 1.25]);
  translate([223, 39, 0])
    cube([1, 1, 1.25]);
  translate([224, 39, 0])
    cube([1, 1, 1.25]);
  translate([225, 39, 0])
    cube([1, 1, 1.25]);
  translate([226, 39, 0])
    cube([1, 1, 1.25]);
  translate([227, 39, 0])
    cube([1, 1, 1.25]);
  translate([228, 39, 0])
    cube([1, 1, 1.25]);
  translate([229, 39, 0])
    cube([1, 1, 1.25]);
  translate([230, 39, 0])
    cube([1, 1, 1.25]);
  translate([231, 39, 0])
    cube([1, 1, 1.25]);
  translate([232, 39, 0])
    cube([1, 1, 1.25]);
  translate([233, 39, 0])
    cube([1, 1, 1.25]);
  translate([234, 39, 0])
    cube([1, 1, 1.25]);
  translate([235, 39, 0])
    cube([1, 1, 1.25]);
  translate([236, 39, 0])
    cube([1, 1, 1.25]);
  translate([237, 39, 0])
    cube([1, 1, 1.25]);
  translate([238, 39, 0])
    cube([1, 1, 1.25]);
  translate([239, 39, 0])
    cube([1, 1, 1.25]);
  translate([240, 39, 0])
    cube([1, 1, 1.25]);
  translate([241, 39, 0])
    cube([1, 1, 1.25]);
  translate([242, 39, 0])
    cube([1, 1, 1.25]);
  translate([243, 39, 0])
    cube([1, 1, 1.25]);
  translate([244, 39, 0])
    cube([1, 1, 1.25]);
  translate([245, 39, 0])
    cube([1, 1, 1.25]);
  translate([246, 39, 0])
    cube([1, 1, 1.25]);
  translate([0, 40, 0])
    cube([1, 1, 1.37]);
  translate([1, 40, 0])
    cube([1, 1, 1.33]);
  translate([2, 40, 0])
    cube([1, 1, 1.33]);
  translate([3, 40, 0])
    cube([1, 1, 1.41]);
  translate([4, 40, 0])
    cube([1, 1, 1.37]);
  translate([5, 40, 0])
    cube([1, 1, 1.37]);
  translate([6, 40, 0])
    cube([1, 1, 1.37]);
  translate([7, 40, 0])
    cube([1, 1, 1.37]);
  translate([8, 40, 0])
    cube([1, 1, 1.37]);
  translate([9, 40, 0])
    cube([1, 1, 1.37]);
  translate([10, 40, 0])
    cube([1, 1, 1.37]);
  translate([11, 40, 0])
    cube([1, 1, 1.37]);
  translate([12, 40, 0])
    cube([1, 1, 1.14]);
  translate([13, 40, 0])
    cube([1, 1, 0.94]);
  translate([14, 40, 0])
    cube([1, 1, 0.90]);
  translate([15, 40, 0])
    cube([1, 1, 0.94]);
  translate([16, 40, 0])
    cube([1, 1, 0.94]);
  translate([17, 40, 0])
    cube([1, 1, 0.86]);
  translate([18, 40, 0])
    cube([1, 1, 1.06]);
  translate([19, 40, 0])
    cube([1, 1, 0.78]);
  translate([20, 40, 0])
    cube([1, 1, 0.71]);
  translate([21, 40, 0])
    cube([1, 1, 0.78]);
  translate([22, 40, 0])
    cube([1, 1, 0.20]);
  translate([23, 40, 0])
    cube([1, 1, 0.51]);
  translate([24, 40, 0])
    cube([1, 1, 0.90]);
  translate([25, 40, 0])
    cube([1, 1, 1.37]);
  translate([26, 40, 0])
    cube([1, 1, 1.33]);
  translate([27, 40, 0])
    cube([1, 1, 1.37]);
  translate([28, 40, 0])
    cube([1, 1, 1.37]);
  translate([29, 40, 0])
    cube([1, 1, 1.37]);
  translate([30, 40, 0])
    cube([1, 1, 1.37]);
  translate([31, 40, 0])
    cube([1, 1, 1.37]);
  translate([32, 40, 0])
    cube([1, 1, 1.37]);
  translate([33, 40, 0])
    cube([1, 1, 1.37]);
  translate([34, 40, 0])
    cube([1, 1, 1.37]);
  translate([35, 40, 0])
    cube([1, 1, 1.33]);
  translate([36, 40, 0])
    cube([1, 1, 1.25]);
  translate([37, 40, 0])
    cube([1, 1, 1.25]);
  translate([38, 40, 0])
    cube([1, 1, 1.37]);
  translate([39, 40, 0])
    cube([1, 1, 1.37]);
  translate([40, 40, 0])
    cube([1, 1, 1.37]);
  translate([41, 40, 0])
    cube([1, 1, 1.37]);
  translate([42, 40, 0])
    cube([1, 1, 1.37]);
  translate([43, 40, 0])
    cube([1, 1, 1.37]);
  translate([44, 40, 0])
    cube([1, 1, 1.33]);
  translate([45, 40, 0])
    cube([1, 1, 1.33]);
  translate([46, 40, 0])
    cube([1, 1, 1.33]);
  translate([47, 40, 0])
    cube([1, 1, 1.33]);
  translate([48, 40, 0])
    cube([1, 1, 1.29]);
  translate([49, 40, 0])
    cube([1, 1, 1.33]);
  translate([50, 40, 0])
    cube([1, 1, 1.33]);
  translate([51, 40, 0])
    cube([1, 1, 1.33]);
  translate([52, 40, 0])
    cube([1, 1, 1.33]);
  translate([53, 40, 0])
    cube([1, 1, 1.33]);
  translate([54, 40, 0])
    cube([1, 1, 1.33]);
  translate([55, 40, 0])
    cube([1, 1, 1.33]);
  translate([56, 40, 0])
    cube([1, 1, 1.33]);
  translate([57, 40, 0])
    cube([1, 1, 1.33]);
  translate([58, 40, 0])
    cube([1, 1, 1.33]);
  translate([59, 40, 0])
    cube([1, 1, 1.33]);
  translate([60, 40, 0])
    cube([1, 1, 1.33]);
  translate([61, 40, 0])
    cube([1, 1, 1.33]);
  translate([62, 40, 0])
    cube([1, 1, 1.33]);
  translate([63, 40, 0])
    cube([1, 1, 1.33]);
  translate([64, 40, 0])
    cube([1, 1, 1.33]);
  translate([65, 40, 0])
    cube([1, 1, 1.33]);
  translate([66, 40, 0])
    cube([1, 1, 1.33]);
  translate([67, 40, 0])
    cube([1, 1, 1.33]);
  translate([68, 40, 0])
    cube([1, 1, 1.33]);
  translate([69, 40, 0])
    cube([1, 1, 1.33]);
  translate([70, 40, 0])
    cube([1, 1, 1.33]);
  translate([71, 40, 0])
    cube([1, 1, 1.33]);
  translate([72, 40, 0])
    cube([1, 1, 1.33]);
  translate([73, 40, 0])
    cube([1, 1, 1.18]);
  translate([74, 40, 0])
    cube([1, 1, 4.39]);
  translate([75, 40, 0])
    cube([1, 1, 5.18]);
  translate([76, 40, 0])
    cube([1, 1, 7.65]);
  translate([77, 40, 0])
    cube([1, 1, 0.78]);
  translate([78, 40, 0])
    cube([1, 1, 0.75]);
  translate([79, 40, 0])
    cube([1, 1, 1.14]);
  translate([80, 40, 0])
    cube([1, 1, 5.65]);
  translate([81, 40, 0])
    cube([1, 1, 1.37]);
  translate([82, 40, 0])
    cube([1, 1, 1.61]);
  translate([83, 40, 0])
    cube([1, 1, 1.33]);
  translate([84, 40, 0])
    cube([1, 1, 1.18]);
  translate([85, 40, 0])
    cube([1, 1, 1.57]);
  translate([86, 40, 0])
    cube([1, 1, 1.18]);
  translate([87, 40, 0])
    cube([1, 1, 1.33]);
  translate([88, 40, 0])
    cube([1, 1, 1.29]);
  translate([89, 40, 0])
    cube([1, 1, 1.29]);
  translate([90, 40, 0])
    cube([1, 1, 1.29]);
  translate([91, 40, 0])
    cube([1, 1, 1.02]);
  translate([92, 40, 0])
    cube([1, 1, 1.41]);
  translate([93, 40, 0])
    cube([1, 1, 1.41]);
  translate([94, 40, 0])
    cube([1, 1, 1.29]);
  translate([95, 40, 0])
    cube([1, 1, 1.69]);
  translate([96, 40, 0])
    cube([1, 1, 1.45]);
  translate([97, 40, 0])
    cube([1, 1, 1.41]);
  translate([98, 40, 0])
    cube([1, 1, 1.29]);
  translate([99, 40, 0])
    cube([1, 1, 2.27]);
  translate([100, 40, 0])
    cube([1, 1, 2.08]);
  translate([101, 40, 0])
    cube([1, 1, 3.69]);
  translate([102, 40, 0])
    cube([1, 1, 1.76]);
  translate([103, 40, 0])
    cube([1, 1, 3.49]);
  translate([104, 40, 0])
    cube([1, 1, 1.53]);
  translate([105, 40, 0])
    cube([1, 1, 1.84]);
  translate([106, 40, 0])
    cube([1, 1, 4.59]);
  translate([107, 40, 0])
    cube([1, 1, 4.55]);
  translate([108, 40, 0])
    cube([1, 1, 4.94]);
  translate([109, 40, 0])
    cube([1, 1, 5.41]);
  translate([110, 40, 0])
    cube([1, 1, 5.76]);
  translate([111, 40, 0])
    cube([1, 1, 5.92]);
  translate([112, 40, 0])
    cube([1, 1, 6.04]);
  translate([113, 40, 0])
    cube([1, 1, 5.96]);
  translate([114, 40, 0])
    cube([1, 1, 2.08]);
  translate([115, 40, 0])
    cube([1, 1, 0.71]);
  translate([116, 40, 0])
    cube([1, 1, 0.98]);
  translate([117, 40, 0])
    cube([1, 1, 1.69]);
  translate([118, 40, 0])
    cube([1, 1, 1.37]);
  translate([119, 40, 0])
    cube([1, 1, 2.00]);
  translate([120, 40, 0])
    cube([1, 1, 3.22]);
  translate([121, 40, 0])
    cube([1, 1, 2.24]);
  translate([122, 40, 0])
    cube([1, 1, 2.24]);
  translate([123, 40, 0])
    cube([1, 1, 2.27]);
  translate([124, 40, 0])
    cube([1, 1, 3.96]);
  translate([125, 40, 0])
    cube([1, 1, 3.02]);
  translate([126, 40, 0])
    cube([1, 1, 5.57]);
  translate([127, 40, 0])
    cube([1, 1, 1.06]);
  translate([128, 40, 0])
    cube([1, 1, 1.25]);
  translate([129, 40, 0])
    cube([1, 1, 1.22]);
  translate([130, 40, 0])
    cube([1, 1, 1.25]);
  translate([131, 40, 0])
    cube([1, 1, 1.25]);
  translate([132, 40, 0])
    cube([1, 1, 1.25]);
  translate([133, 40, 0])
    cube([1, 1, 1.25]);
  translate([134, 40, 0])
    cube([1, 1, 1.25]);
  translate([135, 40, 0])
    cube([1, 1, 1.25]);
  translate([136, 40, 0])
    cube([1, 1, 1.25]);
  translate([137, 40, 0])
    cube([1, 1, 1.25]);
  translate([138, 40, 0])
    cube([1, 1, 1.25]);
  translate([139, 40, 0])
    cube([1, 1, 1.25]);
  translate([140, 40, 0])
    cube([1, 1, 1.25]);
  translate([141, 40, 0])
    cube([1, 1, 1.25]);
  translate([142, 40, 0])
    cube([1, 1, 1.25]);
  translate([143, 40, 0])
    cube([1, 1, 1.25]);
  translate([144, 40, 0])
    cube([1, 1, 1.25]);
  translate([145, 40, 0])
    cube([1, 1, 1.25]);
  translate([146, 40, 0])
    cube([1, 1, 1.25]);
  translate([147, 40, 0])
    cube([1, 1, 1.25]);
  translate([148, 40, 0])
    cube([1, 1, 1.25]);
  translate([149, 40, 0])
    cube([1, 1, 1.25]);
  translate([150, 40, 0])
    cube([1, 1, 1.25]);
  translate([151, 40, 0])
    cube([1, 1, 1.25]);
  translate([152, 40, 0])
    cube([1, 1, 1.25]);
  translate([153, 40, 0])
    cube([1, 1, 1.25]);
  translate([154, 40, 0])
    cube([1, 1, 1.25]);
  translate([155, 40, 0])
    cube([1, 1, 1.25]);
  translate([156, 40, 0])
    cube([1, 1, 1.25]);
  translate([157, 40, 0])
    cube([1, 1, 1.25]);
  translate([158, 40, 0])
    cube([1, 1, 1.25]);
  translate([159, 40, 0])
    cube([1, 1, 1.25]);
  translate([160, 40, 0])
    cube([1, 1, 1.25]);
  translate([161, 40, 0])
    cube([1, 1, 1.25]);
  translate([162, 40, 0])
    cube([1, 1, 1.25]);
  translate([163, 40, 0])
    cube([1, 1, 1.25]);
  translate([164, 40, 0])
    cube([1, 1, 1.25]);
  translate([165, 40, 0])
    cube([1, 1, 1.25]);
  translate([166, 40, 0])
    cube([1, 1, 1.25]);
  translate([167, 40, 0])
    cube([1, 1, 1.25]);
  translate([168, 40, 0])
    cube([1, 1, 1.25]);
  translate([169, 40, 0])
    cube([1, 1, 1.25]);
  translate([170, 40, 0])
    cube([1, 1, 1.25]);
  translate([171, 40, 0])
    cube([1, 1, 1.25]);
  translate([172, 40, 0])
    cube([1, 1, 1.25]);
  translate([173, 40, 0])
    cube([1, 1, 1.25]);
  translate([174, 40, 0])
    cube([1, 1, 1.25]);
  translate([175, 40, 0])
    cube([1, 1, 1.25]);
  translate([176, 40, 0])
    cube([1, 1, 1.25]);
  translate([177, 40, 0])
    cube([1, 1, 1.25]);
  translate([178, 40, 0])
    cube([1, 1, 1.25]);
  translate([179, 40, 0])
    cube([1, 1, 1.25]);
  translate([180, 40, 0])
    cube([1, 1, 1.25]);
  translate([181, 40, 0])
    cube([1, 1, 1.25]);
  translate([182, 40, 0])
    cube([1, 1, 1.25]);
  translate([183, 40, 0])
    cube([1, 1, 1.25]);
  translate([184, 40, 0])
    cube([1, 1, 1.25]);
  translate([185, 40, 0])
    cube([1, 1, 1.25]);
  translate([186, 40, 0])
    cube([1, 1, 1.25]);
  translate([187, 40, 0])
    cube([1, 1, 1.25]);
  translate([188, 40, 0])
    cube([1, 1, 1.25]);
  translate([189, 40, 0])
    cube([1, 1, 1.25]);
  translate([190, 40, 0])
    cube([1, 1, 1.25]);
  translate([191, 40, 0])
    cube([1, 1, 1.25]);
  translate([192, 40, 0])
    cube([1, 1, 1.25]);
  translate([193, 40, 0])
    cube([1, 1, 1.25]);
  translate([194, 40, 0])
    cube([1, 1, 1.25]);
  translate([195, 40, 0])
    cube([1, 1, 1.25]);
  translate([196, 40, 0])
    cube([1, 1, 1.25]);
  translate([197, 40, 0])
    cube([1, 1, 1.25]);
  translate([198, 40, 0])
    cube([1, 1, 1.25]);
  translate([199, 40, 0])
    cube([1, 1, 1.25]);
  translate([200, 40, 0])
    cube([1, 1, 1.25]);
  translate([201, 40, 0])
    cube([1, 1, 1.25]);
  translate([202, 40, 0])
    cube([1, 1, 1.25]);
  translate([203, 40, 0])
    cube([1, 1, 1.25]);
  translate([204, 40, 0])
    cube([1, 1, 1.25]);
  translate([205, 40, 0])
    cube([1, 1, 1.25]);
  translate([206, 40, 0])
    cube([1, 1, 1.25]);
  translate([207, 40, 0])
    cube([1, 1, 1.25]);
  translate([208, 40, 0])
    cube([1, 1, 1.25]);
  translate([209, 40, 0])
    cube([1, 1, 1.25]);
  translate([210, 40, 0])
    cube([1, 1, 1.25]);
  translate([211, 40, 0])
    cube([1, 1, 1.25]);
  translate([212, 40, 0])
    cube([1, 1, 1.25]);
  translate([213, 40, 0])
    cube([1, 1, 1.25]);
  translate([214, 40, 0])
    cube([1, 1, 1.25]);
  translate([215, 40, 0])
    cube([1, 1, 1.25]);
  translate([216, 40, 0])
    cube([1, 1, 1.25]);
  translate([217, 40, 0])
    cube([1, 1, 1.25]);
  translate([218, 40, 0])
    cube([1, 1, 1.25]);
  translate([219, 40, 0])
    cube([1, 1, 1.25]);
  translate([220, 40, 0])
    cube([1, 1, 1.25]);
  translate([221, 40, 0])
    cube([1, 1, 1.25]);
  translate([222, 40, 0])
    cube([1, 1, 1.25]);
  translate([223, 40, 0])
    cube([1, 1, 1.25]);
  translate([224, 40, 0])
    cube([1, 1, 1.25]);
  translate([225, 40, 0])
    cube([1, 1, 1.25]);
  translate([226, 40, 0])
    cube([1, 1, 1.25]);
  translate([227, 40, 0])
    cube([1, 1, 1.25]);
  translate([228, 40, 0])
    cube([1, 1, 1.25]);
  translate([229, 40, 0])
    cube([1, 1, 1.25]);
  translate([230, 40, 0])
    cube([1, 1, 1.25]);
  translate([231, 40, 0])
    cube([1, 1, 1.25]);
  translate([232, 40, 0])
    cube([1, 1, 1.25]);
  translate([233, 40, 0])
    cube([1, 1, 1.25]);
  translate([234, 40, 0])
    cube([1, 1, 1.25]);
  translate([235, 40, 0])
    cube([1, 1, 1.25]);
  translate([236, 40, 0])
    cube([1, 1, 1.25]);
  translate([237, 40, 0])
    cube([1, 1, 1.25]);
  translate([238, 40, 0])
    cube([1, 1, 1.25]);
  translate([239, 40, 0])
    cube([1, 1, 1.25]);
  translate([240, 40, 0])
    cube([1, 1, 1.25]);
  translate([241, 40, 0])
    cube([1, 1, 1.25]);
  translate([242, 40, 0])
    cube([1, 1, 1.25]);
  translate([243, 40, 0])
    cube([1, 1, 1.25]);
  translate([244, 40, 0])
    cube([1, 1, 1.25]);
  translate([245, 40, 0])
    cube([1, 1, 1.25]);
  translate([246, 40, 0])
    cube([1, 1, 1.25]);
  translate([0, 41, 0])
    cube([1, 1, 1.37]);
  translate([1, 41, 0])
    cube([1, 1, 1.37]);
  translate([2, 41, 0])
    cube([1, 1, 1.37]);
  translate([3, 41, 0])
    cube([1, 1, 1.41]);
  translate([4, 41, 0])
    cube([1, 1, 1.37]);
  translate([5, 41, 0])
    cube([1, 1, 1.37]);
  translate([6, 41, 0])
    cube([1, 1, 1.37]);
  translate([7, 41, 0])
    cube([1, 1, 1.37]);
  translate([8, 41, 0])
    cube([1, 1, 1.37]);
  translate([9, 41, 0])
    cube([1, 1, 1.37]);
  translate([10, 41, 0])
    cube([1, 1, 1.37]);
  translate([11, 41, 0])
    cube([1, 1, 1.37]);
  translate([12, 41, 0])
    cube([1, 1, 1.61]);
  translate([13, 41, 0])
    cube([1, 1, 5.29]);
  translate([14, 41, 0])
    cube([1, 1, 0.90]);
  translate([15, 41, 0])
    cube([1, 1, 0.94]);
  translate([16, 41, 0])
    cube([1, 1, 0.94]);
  translate([17, 41, 0])
    cube([1, 1, 0.94]);
  translate([18, 41, 0])
    cube([1, 1, 0.31]);
  translate([19, 41, 0])
    cube([1, 1, 0.20]);
  translate([20, 41, 0])
    cube([1, 1, 0.31]);
  translate([21, 41, 0])
    cube([1, 1, 0.31]);
  translate([22, 41, 0])
    cube([1, 1, 0.43]);
  translate([23, 41, 0])
    cube([1, 1, 0.67]);
  translate([24, 41, 0])
    cube([1, 1, 0.75]);
  translate([25, 41, 0])
    cube([1, 1, 1.29]);
  translate([26, 41, 0])
    cube([1, 1, 1.37]);
  translate([27, 41, 0])
    cube([1, 1, 1.37]);
  translate([28, 41, 0])
    cube([1, 1, 1.37]);
  translate([29, 41, 0])
    cube([1, 1, 1.37]);
  translate([30, 41, 0])
    cube([1, 1, 1.37]);
  translate([31, 41, 0])
    cube([1, 1, 1.37]);
  translate([32, 41, 0])
    cube([1, 1, 1.37]);
  translate([33, 41, 0])
    cube([1, 1, 1.37]);
  translate([34, 41, 0])
    cube([1, 1, 1.37]);
  translate([35, 41, 0])
    cube([1, 1, 1.33]);
  translate([36, 41, 0])
    cube([1, 1, 1.37]);
  translate([37, 41, 0])
    cube([1, 1, 1.37]);
  translate([38, 41, 0])
    cube([1, 1, 1.37]);
  translate([39, 41, 0])
    cube([1, 1, 1.37]);
  translate([40, 41, 0])
    cube([1, 1, 1.37]);
  translate([41, 41, 0])
    cube([1, 1, 1.37]);
  translate([42, 41, 0])
    cube([1, 1, 1.37]);
  translate([43, 41, 0])
    cube([1, 1, 1.37]);
  translate([44, 41, 0])
    cube([1, 1, 1.33]);
  translate([45, 41, 0])
    cube([1, 1, 1.33]);
  translate([46, 41, 0])
    cube([1, 1, 1.33]);
  translate([47, 41, 0])
    cube([1, 1, 1.33]);
  translate([48, 41, 0])
    cube([1, 1, 1.37]);
  translate([49, 41, 0])
    cube([1, 1, 1.33]);
  translate([50, 41, 0])
    cube([1, 1, 1.33]);
  translate([51, 41, 0])
    cube([1, 1, 1.33]);
  translate([52, 41, 0])
    cube([1, 1, 1.33]);
  translate([53, 41, 0])
    cube([1, 1, 1.33]);
  translate([54, 41, 0])
    cube([1, 1, 1.33]);
  translate([55, 41, 0])
    cube([1, 1, 1.33]);
  translate([56, 41, 0])
    cube([1, 1, 1.33]);
  translate([57, 41, 0])
    cube([1, 1, 1.33]);
  translate([58, 41, 0])
    cube([1, 1, 1.33]);
  translate([59, 41, 0])
    cube([1, 1, 1.33]);
  translate([60, 41, 0])
    cube([1, 1, 1.33]);
  translate([61, 41, 0])
    cube([1, 1, 1.33]);
  translate([62, 41, 0])
    cube([1, 1, 1.33]);
  translate([63, 41, 0])
    cube([1, 1, 1.33]);
  translate([64, 41, 0])
    cube([1, 1, 1.33]);
  translate([65, 41, 0])
    cube([1, 1, 1.33]);
  translate([66, 41, 0])
    cube([1, 1, 1.33]);
  translate([67, 41, 0])
    cube([1, 1, 1.33]);
  translate([68, 41, 0])
    cube([1, 1, 1.33]);
  translate([69, 41, 0])
    cube([1, 1, 1.33]);
  translate([70, 41, 0])
    cube([1, 1, 1.33]);
  translate([71, 41, 0])
    cube([1, 1, 1.33]);
  translate([72, 41, 0])
    cube([1, 1, 1.33]);
  translate([73, 41, 0])
    cube([1, 1, 0.98]);
  translate([74, 41, 0])
    cube([1, 1, 6.51]);
  translate([75, 41, 0])
    cube([1, 1, 7.73]);
  translate([76, 41, 0])
    cube([1, 1, 1.14]);
  translate([77, 41, 0])
    cube([1, 1, 2.39]);
  translate([78, 41, 0])
    cube([1, 1, 1.18]);
  translate([79, 41, 0])
    cube([1, 1, 6.27]);
  translate([80, 41, 0])
    cube([1, 1, 1.76]);
  translate([81, 41, 0])
    cube([1, 1, 1.29]);
  translate([82, 41, 0])
    cube([1, 1, 1.73]);
  translate([83, 41, 0])
    cube([1, 1, 1.57]);
  translate([84, 41, 0])
    cube([1, 1, 1.18]);
  translate([85, 41, 0])
    cube([1, 1, 1.53]);
  translate([86, 41, 0])
    cube([1, 1, 3.61]);
  translate([87, 41, 0])
    cube([1, 1, 4.35]);
  translate([88, 41, 0])
    cube([1, 1, 1.14]);
  translate([89, 41, 0])
    cube([1, 1, 1.33]);
  translate([90, 41, 0])
    cube([1, 1, 1.22]);
  translate([91, 41, 0])
    cube([1, 1, 0.90]);
  translate([92, 41, 0])
    cube([1, 1, 2.55]);
  translate([93, 41, 0])
    cube([1, 1, 1.61]);
  translate([94, 41, 0])
    cube([1, 1, 2.04]);
  translate([95, 41, 0])
    cube([1, 1, 1.14]);
  translate([96, 41, 0])
    cube([1, 1, 1.53]);
  translate([97, 41, 0])
    cube([1, 1, 1.33]);
  translate([98, 41, 0])
    cube([1, 1, 2.08]);
  translate([99, 41, 0])
    cube([1, 1, 1.61]);
  translate([100, 41, 0])
    cube([1, 1, 1.92]);
  translate([101, 41, 0])
    cube([1, 1, 2.71]);
  translate([102, 41, 0])
    cube([1, 1, 1.41]);
  translate([103, 41, 0])
    cube([1, 1, 4.27]);
  translate([104, 41, 0])
    cube([1, 1, 4.51]);
  translate([105, 41, 0])
    cube([1, 1, 5.18]);
  translate([106, 41, 0])
    cube([1, 1, 5.53]);
  translate([107, 41, 0])
    cube([1, 1, 5.80]);
  translate([108, 41, 0])
    cube([1, 1, 5.88]);
  translate([109, 41, 0])
    cube([1, 1, 6.16]);
  translate([110, 41, 0])
    cube([1, 1, 6.20]);
  translate([111, 41, 0])
    cube([1, 1, 6.24]);
  translate([112, 41, 0])
    cube([1, 1, 6.35]);
  translate([113, 41, 0])
    cube([1, 1, 6.24]);
  translate([114, 41, 0])
    cube([1, 1, 3.65]);
  translate([115, 41, 0])
    cube([1, 1, 0.94]);
  translate([116, 41, 0])
    cube([1, 1, 0.47]);
  translate([117, 41, 0])
    cube([1, 1, 1.22]);
  translate([118, 41, 0])
    cube([1, 1, 2.43]);
  translate([119, 41, 0])
    cube([1, 1, 3.29]);
  translate([120, 41, 0])
    cube([1, 1, 3.29]);
  translate([121, 41, 0])
    cube([1, 1, 3.02]);
  translate([122, 41, 0])
    cube([1, 1, 2.39]);
  translate([123, 41, 0])
    cube([1, 1, 2.47]);
  translate([124, 41, 0])
    cube([1, 1, 4.12]);
  translate([125, 41, 0])
    cube([1, 1, 0.98]);
  translate([126, 41, 0])
    cube([1, 1, 6.20]);
  translate([127, 41, 0])
    cube([1, 1, 1.45]);
  translate([128, 41, 0])
    cube([1, 1, 1.25]);
  translate([129, 41, 0])
    cube([1, 1, 1.25]);
  translate([130, 41, 0])
    cube([1, 1, 1.33]);
  translate([131, 41, 0])
    cube([1, 1, 1.25]);
  translate([132, 41, 0])
    cube([1, 1, 1.25]);
  translate([133, 41, 0])
    cube([1, 1, 1.25]);
  translate([134, 41, 0])
    cube([1, 1, 1.25]);
  translate([135, 41, 0])
    cube([1, 1, 1.25]);
  translate([136, 41, 0])
    cube([1, 1, 1.25]);
  translate([137, 41, 0])
    cube([1, 1, 1.25]);
  translate([138, 41, 0])
    cube([1, 1, 1.25]);
  translate([139, 41, 0])
    cube([1, 1, 1.33]);
  translate([140, 41, 0])
    cube([1, 1, 1.25]);
  translate([141, 41, 0])
    cube([1, 1, 1.25]);
  translate([142, 41, 0])
    cube([1, 1, 1.25]);
  translate([143, 41, 0])
    cube([1, 1, 1.25]);
  translate([144, 41, 0])
    cube([1, 1, 1.25]);
  translate([145, 41, 0])
    cube([1, 1, 1.25]);
  translate([146, 41, 0])
    cube([1, 1, 1.25]);
  translate([147, 41, 0])
    cube([1, 1, 1.25]);
  translate([148, 41, 0])
    cube([1, 1, 1.25]);
  translate([149, 41, 0])
    cube([1, 1, 1.25]);
  translate([150, 41, 0])
    cube([1, 1, 1.25]);
  translate([151, 41, 0])
    cube([1, 1, 1.25]);
  translate([152, 41, 0])
    cube([1, 1, 1.25]);
  translate([153, 41, 0])
    cube([1, 1, 1.25]);
  translate([154, 41, 0])
    cube([1, 1, 1.25]);
  translate([155, 41, 0])
    cube([1, 1, 1.25]);
  translate([156, 41, 0])
    cube([1, 1, 1.25]);
  translate([157, 41, 0])
    cube([1, 1, 1.25]);
  translate([158, 41, 0])
    cube([1, 1, 1.25]);
  translate([159, 41, 0])
    cube([1, 1, 1.25]);
  translate([160, 41, 0])
    cube([1, 1, 1.25]);
  translate([161, 41, 0])
    cube([1, 1, 1.25]);
  translate([162, 41, 0])
    cube([1, 1, 1.25]);
  translate([163, 41, 0])
    cube([1, 1, 1.25]);
  translate([164, 41, 0])
    cube([1, 1, 1.25]);
  translate([165, 41, 0])
    cube([1, 1, 1.25]);
  translate([166, 41, 0])
    cube([1, 1, 1.25]);
  translate([167, 41, 0])
    cube([1, 1, 1.25]);
  translate([168, 41, 0])
    cube([1, 1, 1.25]);
  translate([169, 41, 0])
    cube([1, 1, 1.25]);
  translate([170, 41, 0])
    cube([1, 1, 1.25]);
  translate([171, 41, 0])
    cube([1, 1, 1.25]);
  translate([172, 41, 0])
    cube([1, 1, 1.25]);
  translate([173, 41, 0])
    cube([1, 1, 1.25]);
  translate([174, 41, 0])
    cube([1, 1, 1.25]);
  translate([175, 41, 0])
    cube([1, 1, 1.25]);
  translate([176, 41, 0])
    cube([1, 1, 1.25]);
  translate([177, 41, 0])
    cube([1, 1, 1.25]);
  translate([178, 41, 0])
    cube([1, 1, 1.25]);
  translate([179, 41, 0])
    cube([1, 1, 1.25]);
  translate([180, 41, 0])
    cube([1, 1, 1.25]);
  translate([181, 41, 0])
    cube([1, 1, 1.25]);
  translate([182, 41, 0])
    cube([1, 1, 1.25]);
  translate([183, 41, 0])
    cube([1, 1, 1.25]);
  translate([184, 41, 0])
    cube([1, 1, 1.25]);
  translate([185, 41, 0])
    cube([1, 1, 1.25]);
  translate([186, 41, 0])
    cube([1, 1, 1.25]);
  translate([187, 41, 0])
    cube([1, 1, 1.25]);
  translate([188, 41, 0])
    cube([1, 1, 1.25]);
  translate([189, 41, 0])
    cube([1, 1, 1.25]);
  translate([190, 41, 0])
    cube([1, 1, 1.25]);
  translate([191, 41, 0])
    cube([1, 1, 1.25]);
  translate([192, 41, 0])
    cube([1, 1, 1.25]);
  translate([193, 41, 0])
    cube([1, 1, 1.25]);
  translate([194, 41, 0])
    cube([1, 1, 1.25]);
  translate([195, 41, 0])
    cube([1, 1, 1.25]);
  translate([196, 41, 0])
    cube([1, 1, 1.25]);
  translate([197, 41, 0])
    cube([1, 1, 1.25]);
  translate([198, 41, 0])
    cube([1, 1, 1.25]);
  translate([199, 41, 0])
    cube([1, 1, 1.25]);
  translate([200, 41, 0])
    cube([1, 1, 1.25]);
  translate([201, 41, 0])
    cube([1, 1, 1.25]);
  translate([202, 41, 0])
    cube([1, 1, 1.25]);
  translate([203, 41, 0])
    cube([1, 1, 1.25]);
  translate([204, 41, 0])
    cube([1, 1, 1.25]);
  translate([205, 41, 0])
    cube([1, 1, 1.25]);
  translate([206, 41, 0])
    cube([1, 1, 1.25]);
  translate([207, 41, 0])
    cube([1, 1, 1.25]);
  translate([208, 41, 0])
    cube([1, 1, 1.25]);
  translate([209, 41, 0])
    cube([1, 1, 1.25]);
  translate([210, 41, 0])
    cube([1, 1, 1.25]);
  translate([211, 41, 0])
    cube([1, 1, 1.25]);
  translate([212, 41, 0])
    cube([1, 1, 1.25]);
  translate([213, 41, 0])
    cube([1, 1, 1.25]);
  translate([214, 41, 0])
    cube([1, 1, 1.25]);
  translate([215, 41, 0])
    cube([1, 1, 1.25]);
  translate([216, 41, 0])
    cube([1, 1, 1.25]);
  translate([217, 41, 0])
    cube([1, 1, 1.25]);
  translate([218, 41, 0])
    cube([1, 1, 1.25]);
  translate([219, 41, 0])
    cube([1, 1, 1.25]);
  translate([220, 41, 0])
    cube([1, 1, 1.25]);
  translate([221, 41, 0])
    cube([1, 1, 1.25]);
  translate([222, 41, 0])
    cube([1, 1, 1.25]);
  translate([223, 41, 0])
    cube([1, 1, 1.25]);
  translate([224, 41, 0])
    cube([1, 1, 1.25]);
  translate([225, 41, 0])
    cube([1, 1, 1.25]);
  translate([226, 41, 0])
    cube([1, 1, 1.25]);
  translate([227, 41, 0])
    cube([1, 1, 1.25]);
  translate([228, 41, 0])
    cube([1, 1, 1.25]);
  translate([229, 41, 0])
    cube([1, 1, 1.25]);
  translate([230, 41, 0])
    cube([1, 1, 1.25]);
  translate([231, 41, 0])
    cube([1, 1, 1.25]);
  translate([232, 41, 0])
    cube([1, 1, 1.25]);
  translate([233, 41, 0])
    cube([1, 1, 1.25]);
  translate([234, 41, 0])
    cube([1, 1, 1.25]);
  translate([235, 41, 0])
    cube([1, 1, 1.25]);
  translate([236, 41, 0])
    cube([1, 1, 1.25]);
  translate([237, 41, 0])
    cube([1, 1, 1.25]);
  translate([238, 41, 0])
    cube([1, 1, 1.25]);
  translate([239, 41, 0])
    cube([1, 1, 1.25]);
  translate([240, 41, 0])
    cube([1, 1, 1.25]);
  translate([241, 41, 0])
    cube([1, 1, 1.25]);
  translate([242, 41, 0])
    cube([1, 1, 1.25]);
  translate([243, 41, 0])
    cube([1, 1, 1.25]);
  translate([244, 41, 0])
    cube([1, 1, 1.25]);
  translate([245, 41, 0])
    cube([1, 1, 1.25]);
  translate([246, 41, 0])
    cube([1, 1, 1.25]);
  translate([0, 42, 0])
    cube([1, 1, 1.41]);
  translate([1, 42, 0])
    cube([1, 1, 1.37]);
  translate([2, 42, 0])
    cube([1, 1, 1.41]);
  translate([3, 42, 0])
    cube([1, 1, 1.37]);
  translate([4, 42, 0])
    cube([1, 1, 1.37]);
  translate([5, 42, 0])
    cube([1, 1, 1.37]);
  translate([6, 42, 0])
    cube([1, 1, 1.37]);
  translate([7, 42, 0])
    cube([1, 1, 1.37]);
  translate([8, 42, 0])
    cube([1, 1, 1.41]);
  translate([9, 42, 0])
    cube([1, 1, 1.37]);
  translate([10, 42, 0])
    cube([1, 1, 1.37]);
  translate([11, 42, 0])
    cube([1, 1, 1.37]);
  translate([12, 42, 0])
    cube([1, 1, 1.25]);
  translate([13, 42, 0])
    cube([1, 1, 3.29]);
  translate([14, 42, 0])
    cube([1, 1, 1.02]);
  translate([15, 42, 0])
    cube([1, 1, 0.86]);
  translate([16, 42, 0])
    cube([1, 1, 0.94]);
  translate([17, 42, 0])
    cube([1, 1, 0.94]);
  translate([18, 42, 0])
    cube([1, 1, 1.18]);
  translate([19, 42, 0])
    cube([1, 1, 0.94]);
  translate([20, 42, 0])
    cube([1, 1, 0.59]);
  translate([21, 42, 0])
    cube([1, 1, 0.71]);
  translate([22, 42, 0])
    cube([1, 1, 0.59]);
  translate([23, 42, 0])
    cube([1, 1, 0.55]);
  translate([24, 42, 0])
    cube([1, 1, 0.43]);
  translate([25, 42, 0])
    cube([1, 1, 0.86]);
  translate([26, 42, 0])
    cube([1, 1, 1.37]);
  translate([27, 42, 0])
    cube([1, 1, 1.37]);
  translate([28, 42, 0])
    cube([1, 1, 1.37]);
  translate([29, 42, 0])
    cube([1, 1, 1.37]);
  translate([30, 42, 0])
    cube([1, 1, 1.37]);
  translate([31, 42, 0])
    cube([1, 1, 1.37]);
  translate([32, 42, 0])
    cube([1, 1, 1.37]);
  translate([33, 42, 0])
    cube([1, 1, 1.37]);
  translate([34, 42, 0])
    cube([1, 1, 1.37]);
  translate([35, 42, 0])
    cube([1, 1, 1.37]);
  translate([36, 42, 0])
    cube([1, 1, 1.37]);
  translate([37, 42, 0])
    cube([1, 1, 1.37]);
  translate([38, 42, 0])
    cube([1, 1, 1.37]);
  translate([39, 42, 0])
    cube([1, 1, 1.41]);
  translate([40, 42, 0])
    cube([1, 1, 1.37]);
  translate([41, 42, 0])
    cube([1, 1, 1.33]);
  translate([42, 42, 0])
    cube([1, 1, 1.33]);
  translate([43, 42, 0])
    cube([1, 1, 1.33]);
  translate([44, 42, 0])
    cube([1, 1, 1.33]);
  translate([45, 42, 0])
    cube([1, 1, 1.37]);
  translate([46, 42, 0])
    cube([1, 1, 1.33]);
  translate([47, 42, 0])
    cube([1, 1, 1.33]);
  translate([48, 42, 0])
    cube([1, 1, 1.33]);
  translate([49, 42, 0])
    cube([1, 1, 1.33]);
  translate([50, 42, 0])
    cube([1, 1, 1.33]);
  translate([51, 42, 0])
    cube([1, 1, 1.33]);
  translate([52, 42, 0])
    cube([1, 1, 1.33]);
  translate([53, 42, 0])
    cube([1, 1, 1.33]);
  translate([54, 42, 0])
    cube([1, 1, 1.33]);
  translate([55, 42, 0])
    cube([1, 1, 1.33]);
  translate([56, 42, 0])
    cube([1, 1, 1.33]);
  translate([57, 42, 0])
    cube([1, 1, 1.33]);
  translate([58, 42, 0])
    cube([1, 1, 1.33]);
  translate([59, 42, 0])
    cube([1, 1, 1.33]);
  translate([60, 42, 0])
    cube([1, 1, 1.33]);
  translate([61, 42, 0])
    cube([1, 1, 1.33]);
  translate([62, 42, 0])
    cube([1, 1, 1.33]);
  translate([63, 42, 0])
    cube([1, 1, 1.33]);
  translate([64, 42, 0])
    cube([1, 1, 1.33]);
  translate([65, 42, 0])
    cube([1, 1, 1.33]);
  translate([66, 42, 0])
    cube([1, 1, 1.33]);
  translate([67, 42, 0])
    cube([1, 1, 1.33]);
  translate([68, 42, 0])
    cube([1, 1, 1.33]);
  translate([69, 42, 0])
    cube([1, 1, 1.33]);
  translate([70, 42, 0])
    cube([1, 1, 1.33]);
  translate([71, 42, 0])
    cube([1, 1, 1.33]);
  translate([72, 42, 0])
    cube([1, 1, 1.33]);
  translate([73, 42, 0])
    cube([1, 1, 1.22]);
  translate([74, 42, 0])
    cube([1, 1, 1.10]);
  translate([75, 42, 0])
    cube([1, 1, 1.80]);
  translate([76, 42, 0])
    cube([1, 1, 7.69]);
  translate([77, 42, 0])
    cube([1, 1, 1.69]);
  translate([78, 42, 0])
    cube([1, 1, 5.69]);
  translate([79, 42, 0])
    cube([1, 1, 6.47]);
  translate([80, 42, 0])
    cube([1, 1, 1.69]);
  translate([81, 42, 0])
    cube([1, 1, 1.49]);
  translate([82, 42, 0])
    cube([1, 1, 1.33]);
  translate([83, 42, 0])
    cube([1, 1, 1.18]);
  translate([84, 42, 0])
    cube([1, 1, 1.41]);
  translate([85, 42, 0])
    cube([1, 1, 1.65]);
  translate([86, 42, 0])
    cube([1, 1, 1.22]);
  translate([87, 42, 0])
    cube([1, 1, 1.06]);
  translate([88, 42, 0])
    cube([1, 1, 1.41]);
  translate([89, 42, 0])
    cube([1, 1, 0.98]);
  translate([90, 42, 0])
    cube([1, 1, 1.29]);
  translate([91, 42, 0])
    cube([1, 1, 1.69]);
  translate([92, 42, 0])
    cube([1, 1, 1.22]);
  translate([93, 42, 0])
    cube([1, 1, 3.80]);
  translate([94, 42, 0])
    cube([1, 1, 1.57]);
  translate([95, 42, 0])
    cube([1, 1, 1.49]);
  translate([96, 42, 0])
    cube([1, 1, 1.73]);
  translate([97, 42, 0])
    cube([1, 1, 1.76]);
  translate([98, 42, 0])
    cube([1, 1, 2.12]);
  translate([99, 42, 0])
    cube([1, 1, 1.06]);
  translate([100, 42, 0])
    cube([1, 1, 1.65]);
  translate([101, 42, 0])
    cube([1, 1, 2.47]);
  translate([102, 42, 0])
    cube([1, 1, 4.55]);
  translate([103, 42, 0])
    cube([1, 1, 5.02]);
  translate([104, 42, 0])
    cube([1, 1, 5.37]);
  translate([105, 42, 0])
    cube([1, 1, 5.76]);
  translate([106, 42, 0])
    cube([1, 1, 5.73]);
  translate([107, 42, 0])
    cube([1, 1, 6.04]);
  translate([108, 42, 0])
    cube([1, 1, 6.08]);
  translate([109, 42, 0])
    cube([1, 1, 6.20]);
  translate([110, 42, 0])
    cube([1, 1, 6.31]);
  translate([111, 42, 0])
    cube([1, 1, 6.35]);
  translate([112, 42, 0])
    cube([1, 1, 6.31]);
  translate([113, 42, 0])
    cube([1, 1, 6.20]);
  translate([114, 42, 0])
    cube([1, 1, 4.47]);
  translate([115, 42, 0])
    cube([1, 1, 1.45]);
  translate([116, 42, 0])
    cube([1, 1, 0.67]);
  translate([117, 42, 0])
    cube([1, 1, 0.59]);
  translate([118, 42, 0])
    cube([1, 1, 1.41]);
  translate([119, 42, 0])
    cube([1, 1, 1.92]);
  translate([120, 42, 0])
    cube([1, 1, 3.57]);
  translate([121, 42, 0])
    cube([1, 1, 3.37]);
  translate([122, 42, 0])
    cube([1, 1, 3.41]);
  translate([123, 42, 0])
    cube([1, 1, 2.98]);
  translate([124, 42, 0])
    cube([1, 1, 1.61]);
  translate([125, 42, 0])
    cube([1, 1, 2.75]);
  translate([126, 42, 0])
    cube([1, 1, 2.59]);
  translate([127, 42, 0])
    cube([1, 1, 2.08]);
  translate([128, 42, 0])
    cube([1, 1, 1.25]);
  translate([129, 42, 0])
    cube([1, 1, 1.25]);
  translate([130, 42, 0])
    cube([1, 1, 1.25]);
  translate([131, 42, 0])
    cube([1, 1, 1.29]);
  translate([132, 42, 0])
    cube([1, 1, 1.22]);
  translate([133, 42, 0])
    cube([1, 1, 1.25]);
  translate([134, 42, 0])
    cube([1, 1, 1.25]);
  translate([135, 42, 0])
    cube([1, 1, 1.22]);
  translate([136, 42, 0])
    cube([1, 1, 1.25]);
  translate([137, 42, 0])
    cube([1, 1, 1.25]);
  translate([138, 42, 0])
    cube([1, 1, 1.25]);
  translate([139, 42, 0])
    cube([1, 1, 1.25]);
  translate([140, 42, 0])
    cube([1, 1, 1.25]);
  translate([141, 42, 0])
    cube([1, 1, 1.25]);
  translate([142, 42, 0])
    cube([1, 1, 1.25]);
  translate([143, 42, 0])
    cube([1, 1, 1.25]);
  translate([144, 42, 0])
    cube([1, 1, 1.25]);
  translate([145, 42, 0])
    cube([1, 1, 1.25]);
  translate([146, 42, 0])
    cube([1, 1, 1.25]);
  translate([147, 42, 0])
    cube([1, 1, 1.25]);
  translate([148, 42, 0])
    cube([1, 1, 1.25]);
  translate([149, 42, 0])
    cube([1, 1, 1.25]);
  translate([150, 42, 0])
    cube([1, 1, 1.29]);
  translate([151, 42, 0])
    cube([1, 1, 1.29]);
  translate([152, 42, 0])
    cube([1, 1, 1.25]);
  translate([153, 42, 0])
    cube([1, 1, 1.25]);
  translate([154, 42, 0])
    cube([1, 1, 1.25]);
  translate([155, 42, 0])
    cube([1, 1, 1.25]);
  translate([156, 42, 0])
    cube([1, 1, 1.25]);
  translate([157, 42, 0])
    cube([1, 1, 1.25]);
  translate([158, 42, 0])
    cube([1, 1, 1.25]);
  translate([159, 42, 0])
    cube([1, 1, 1.25]);
  translate([160, 42, 0])
    cube([1, 1, 1.29]);
  translate([161, 42, 0])
    cube([1, 1, 1.22]);
  translate([162, 42, 0])
    cube([1, 1, 1.29]);
  translate([163, 42, 0])
    cube([1, 1, 1.29]);
  translate([164, 42, 0])
    cube([1, 1, 1.25]);
  translate([165, 42, 0])
    cube([1, 1, 1.25]);
  translate([166, 42, 0])
    cube([1, 1, 1.25]);
  translate([167, 42, 0])
    cube([1, 1, 1.25]);
  translate([168, 42, 0])
    cube([1, 1, 1.25]);
  translate([169, 42, 0])
    cube([1, 1, 1.25]);
  translate([170, 42, 0])
    cube([1, 1, 1.25]);
  translate([171, 42, 0])
    cube([1, 1, 1.25]);
  translate([172, 42, 0])
    cube([1, 1, 1.25]);
  translate([173, 42, 0])
    cube([1, 1, 1.25]);
  translate([174, 42, 0])
    cube([1, 1, 1.25]);
  translate([175, 42, 0])
    cube([1, 1, 1.25]);
  translate([176, 42, 0])
    cube([1, 1, 1.25]);
  translate([177, 42, 0])
    cube([1, 1, 1.25]);
  translate([178, 42, 0])
    cube([1, 1, 1.25]);
  translate([179, 42, 0])
    cube([1, 1, 1.25]);
  translate([180, 42, 0])
    cube([1, 1, 1.25]);
  translate([181, 42, 0])
    cube([1, 1, 1.25]);
  translate([182, 42, 0])
    cube([1, 1, 1.25]);
  translate([183, 42, 0])
    cube([1, 1, 1.25]);
  translate([184, 42, 0])
    cube([1, 1, 1.25]);
  translate([185, 42, 0])
    cube([1, 1, 1.25]);
  translate([186, 42, 0])
    cube([1, 1, 1.25]);
  translate([187, 42, 0])
    cube([1, 1, 1.25]);
  translate([188, 42, 0])
    cube([1, 1, 1.25]);
  translate([189, 42, 0])
    cube([1, 1, 1.25]);
  translate([190, 42, 0])
    cube([1, 1, 1.25]);
  translate([191, 42, 0])
    cube([1, 1, 1.25]);
  translate([192, 42, 0])
    cube([1, 1, 1.25]);
  translate([193, 42, 0])
    cube([1, 1, 1.25]);
  translate([194, 42, 0])
    cube([1, 1, 1.25]);
  translate([195, 42, 0])
    cube([1, 1, 1.25]);
  translate([196, 42, 0])
    cube([1, 1, 1.25]);
  translate([197, 42, 0])
    cube([1, 1, 1.25]);
  translate([198, 42, 0])
    cube([1, 1, 1.25]);
  translate([199, 42, 0])
    cube([1, 1, 1.25]);
  translate([200, 42, 0])
    cube([1, 1, 1.25]);
  translate([201, 42, 0])
    cube([1, 1, 1.25]);
  translate([202, 42, 0])
    cube([1, 1, 1.25]);
  translate([203, 42, 0])
    cube([1, 1, 1.25]);
  translate([204, 42, 0])
    cube([1, 1, 1.25]);
  translate([205, 42, 0])
    cube([1, 1, 1.25]);
  translate([206, 42, 0])
    cube([1, 1, 1.25]);
  translate([207, 42, 0])
    cube([1, 1, 1.25]);
  translate([208, 42, 0])
    cube([1, 1, 1.25]);
  translate([209, 42, 0])
    cube([1, 1, 1.25]);
  translate([210, 42, 0])
    cube([1, 1, 1.25]);
  translate([211, 42, 0])
    cube([1, 1, 1.25]);
  translate([212, 42, 0])
    cube([1, 1, 1.25]);
  translate([213, 42, 0])
    cube([1, 1, 1.25]);
  translate([214, 42, 0])
    cube([1, 1, 1.25]);
  translate([215, 42, 0])
    cube([1, 1, 1.25]);
  translate([216, 42, 0])
    cube([1, 1, 1.25]);
  translate([217, 42, 0])
    cube([1, 1, 1.25]);
  translate([218, 42, 0])
    cube([1, 1, 1.25]);
  translate([219, 42, 0])
    cube([1, 1, 1.25]);
  translate([220, 42, 0])
    cube([1, 1, 1.25]);
  translate([221, 42, 0])
    cube([1, 1, 1.25]);
  translate([222, 42, 0])
    cube([1, 1, 1.25]);
  translate([223, 42, 0])
    cube([1, 1, 1.25]);
  translate([224, 42, 0])
    cube([1, 1, 1.25]);
  translate([225, 42, 0])
    cube([1, 1, 1.25]);
  translate([226, 42, 0])
    cube([1, 1, 1.25]);
  translate([227, 42, 0])
    cube([1, 1, 1.25]);
  translate([228, 42, 0])
    cube([1, 1, 1.25]);
  translate([229, 42, 0])
    cube([1, 1, 1.25]);
  translate([230, 42, 0])
    cube([1, 1, 1.25]);
  translate([231, 42, 0])
    cube([1, 1, 1.25]);
  translate([232, 42, 0])
    cube([1, 1, 1.25]);
  translate([233, 42, 0])
    cube([1, 1, 1.25]);
  translate([234, 42, 0])
    cube([1, 1, 1.25]);
  translate([235, 42, 0])
    cube([1, 1, 1.25]);
  translate([236, 42, 0])
    cube([1, 1, 1.25]);
  translate([237, 42, 0])
    cube([1, 1, 1.25]);
  translate([238, 42, 0])
    cube([1, 1, 1.25]);
  translate([239, 42, 0])
    cube([1, 1, 1.25]);
  translate([240, 42, 0])
    cube([1, 1, 1.25]);
  translate([241, 42, 0])
    cube([1, 1, 1.25]);
  translate([242, 42, 0])
    cube([1, 1, 1.25]);
  translate([243, 42, 0])
    cube([1, 1, 1.25]);
  translate([244, 42, 0])
    cube([1, 1, 1.25]);
  translate([245, 42, 0])
    cube([1, 1, 1.25]);
  translate([246, 42, 0])
    cube([1, 1, 1.25]);
  translate([0, 43, 0])
    cube([1, 1, 1.41]);
  translate([1, 43, 0])
    cube([1, 1, 1.37]);
  translate([2, 43, 0])
    cube([1, 1, 1.41]);
  translate([3, 43, 0])
    cube([1, 1, 1.37]);
  translate([4, 43, 0])
    cube([1, 1, 1.29]);
  translate([5, 43, 0])
    cube([1, 1, 1.41]);
  translate([6, 43, 0])
    cube([1, 1, 1.37]);
  translate([7, 43, 0])
    cube([1, 1, 1.37]);
  translate([8, 43, 0])
    cube([1, 1, 1.41]);
  translate([9, 43, 0])
    cube([1, 1, 1.37]);
  translate([10, 43, 0])
    cube([1, 1, 1.37]);
  translate([11, 43, 0])
    cube([1, 1, 1.37]);
  translate([12, 43, 0])
    cube([1, 1, 1.53]);
  translate([13, 43, 0])
    cube([1, 1, 1.57]);
  translate([14, 43, 0])
    cube([1, 1, 1.45]);
  translate([15, 43, 0])
    cube([1, 1, 0.90]);
  translate([16, 43, 0])
    cube([1, 1, 0.94]);
  translate([17, 43, 0])
    cube([1, 1, 0.90]);
  translate([18, 43, 0])
    cube([1, 1, 0.98]);
  translate([19, 43, 0])
    cube([1, 1, 0.24]);
  translate([20, 43, 0])
    cube([1, 1, 0.35]);
  translate([21, 43, 0])
    cube([1, 1, 0.31]);
  translate([22, 43, 0])
    cube([1, 1, 0.20]);
  translate([23, 43, 0])
    cube([1, 1, 0.55]);
  translate([24, 43, 0])
    cube([1, 1, 0.82]);
  translate([25, 43, 0])
    cube([1, 1, 1.25]);
  translate([26, 43, 0])
    cube([1, 1, 1.22]);
  translate([27, 43, 0])
    cube([1, 1, 1.37]);
  translate([28, 43, 0])
    cube([1, 1, 1.37]);
  translate([29, 43, 0])
    cube([1, 1, 1.37]);
  translate([30, 43, 0])
    cube([1, 1, 1.37]);
  translate([31, 43, 0])
    cube([1, 1, 1.37]);
  translate([32, 43, 0])
    cube([1, 1, 1.37]);
  translate([33, 43, 0])
    cube([1, 1, 1.37]);
  translate([34, 43, 0])
    cube([1, 1, 1.37]);
  translate([35, 43, 0])
    cube([1, 1, 1.37]);
  translate([36, 43, 0])
    cube([1, 1, 1.37]);
  translate([37, 43, 0])
    cube([1, 1, 1.37]);
  translate([38, 43, 0])
    cube([1, 1, 1.37]);
  translate([39, 43, 0])
    cube([1, 1, 1.41]);
  translate([40, 43, 0])
    cube([1, 1, 1.37]);
  translate([41, 43, 0])
    cube([1, 1, 1.33]);
  translate([42, 43, 0])
    cube([1, 1, 1.33]);
  translate([43, 43, 0])
    cube([1, 1, 1.33]);
  translate([44, 43, 0])
    cube([1, 1, 1.33]);
  translate([45, 43, 0])
    cube([1, 1, 1.37]);
  translate([46, 43, 0])
    cube([1, 1, 1.33]);
  translate([47, 43, 0])
    cube([1, 1, 1.33]);
  translate([48, 43, 0])
    cube([1, 1, 1.33]);
  translate([49, 43, 0])
    cube([1, 1, 1.33]);
  translate([50, 43, 0])
    cube([1, 1, 1.33]);
  translate([51, 43, 0])
    cube([1, 1, 1.33]);
  translate([52, 43, 0])
    cube([1, 1, 1.33]);
  translate([53, 43, 0])
    cube([1, 1, 1.33]);
  translate([54, 43, 0])
    cube([1, 1, 1.33]);
  translate([55, 43, 0])
    cube([1, 1, 1.33]);
  translate([56, 43, 0])
    cube([1, 1, 1.33]);
  translate([57, 43, 0])
    cube([1, 1, 1.33]);
  translate([58, 43, 0])
    cube([1, 1, 1.33]);
  translate([59, 43, 0])
    cube([1, 1, 1.33]);
  translate([60, 43, 0])
    cube([1, 1, 1.33]);
  translate([61, 43, 0])
    cube([1, 1, 1.33]);
  translate([62, 43, 0])
    cube([1, 1, 1.33]);
  translate([63, 43, 0])
    cube([1, 1, 1.33]);
  translate([64, 43, 0])
    cube([1, 1, 1.33]);
  translate([65, 43, 0])
    cube([1, 1, 1.33]);
  translate([66, 43, 0])
    cube([1, 1, 1.33]);
  translate([67, 43, 0])
    cube([1, 1, 1.33]);
  translate([68, 43, 0])
    cube([1, 1, 1.33]);
  translate([69, 43, 0])
    cube([1, 1, 1.33]);
  translate([70, 43, 0])
    cube([1, 1, 1.33]);
  translate([71, 43, 0])
    cube([1, 1, 1.33]);
  translate([72, 43, 0])
    cube([1, 1, 1.33]);
  translate([73, 43, 0])
    cube([1, 1, 1.53]);
  translate([74, 43, 0])
    cube([1, 1, 1.41]);
  translate([75, 43, 0])
    cube([1, 1, 2.12]);
  translate([76, 43, 0])
    cube([1, 1, 2.47]);
  translate([77, 43, 0])
    cube([1, 1, 5.37]);
  translate([78, 43, 0])
    cube([1, 1, 6.51]);
  translate([79, 43, 0])
    cube([1, 1, 7.14]);
  translate([80, 43, 0])
    cube([1, 1, 1.84]);
  translate([81, 43, 0])
    cube([1, 1, 1.61]);
  translate([82, 43, 0])
    cube([1, 1, 1.14]);
  translate([83, 43, 0])
    cube([1, 1, 1.14]);
  translate([84, 43, 0])
    cube([1, 1, 1.18]);
  translate([85, 43, 0])
    cube([1, 1, 4.63]);
  translate([86, 43, 0])
    cube([1, 1, 4.94]);
  translate([87, 43, 0])
    cube([1, 1, 1.14]);
  translate([88, 43, 0])
    cube([1, 1, 1.10]);
  translate([89, 43, 0])
    cube([1, 1, 1.37]);
  translate([90, 43, 0])
    cube([1, 1, 1.25]);
  translate([91, 43, 0])
    cube([1, 1, 1.53]);
  translate([92, 43, 0])
    cube([1, 1, 1.22]);
  translate([93, 43, 0])
    cube([1, 1, 1.49]);
  translate([94, 43, 0])
    cube([1, 1, 1.45]);
  translate([95, 43, 0])
    cube([1, 1, 2.35]);
  translate([96, 43, 0])
    cube([1, 1, 1.45]);
  translate([97, 43, 0])
    cube([1, 1, 1.88]);
  translate([98, 43, 0])
    cube([1, 1, 1.61]);
  translate([99, 43, 0])
    cube([1, 1, 1.69]);
  translate([100, 43, 0])
    cube([1, 1, 4.00]);
  translate([101, 43, 0])
    cube([1, 1, 4.55]);
  translate([102, 43, 0])
    cube([1, 1, 5.14]);
  translate([103, 43, 0])
    cube([1, 1, 5.57]);
  translate([104, 43, 0])
    cube([1, 1, 5.69]);
  translate([105, 43, 0])
    cube([1, 1, 6.04]);
  translate([106, 43, 0])
    cube([1, 1, 6.16]);
  translate([107, 43, 0])
    cube([1, 1, 6.20]);
  translate([108, 43, 0])
    cube([1, 1, 6.35]);
  translate([109, 43, 0])
    cube([1, 1, 6.39]);
  translate([110, 43, 0])
    cube([1, 1, 6.24]);
  translate([111, 43, 0])
    cube([1, 1, 6.20]);
  translate([112, 43, 0])
    cube([1, 1, 6.20]);
  translate([113, 43, 0])
    cube([1, 1, 6.00]);
  translate([114, 43, 0])
    cube([1, 1, 4.63]);
  translate([115, 43, 0])
    cube([1, 1, 1.80]);
  translate([116, 43, 0])
    cube([1, 1, 0.59]);
  translate([117, 43, 0])
    cube([1, 1, 0.59]);
  translate([118, 43, 0])
    cube([1, 1, 1.41]);
  translate([119, 43, 0])
    cube([1, 1, 1.02]);
  translate([120, 43, 0])
    cube([1, 1, 3.33]);
  translate([121, 43, 0])
    cube([1, 1, 1.84]);
  translate([122, 43, 0])
    cube([1, 1, 3.02]);
  translate([123, 43, 0])
    cube([1, 1, 2.63]);
  translate([124, 43, 0])
    cube([1, 1, 4.67]);
  translate([125, 43, 0])
    cube([1, 1, 6.24]);
  translate([126, 43, 0])
    cube([1, 1, 1.25]);
  translate([127, 43, 0])
    cube([1, 1, 4.78]);
  translate([128, 43, 0])
    cube([1, 1, 1.33]);
  translate([129, 43, 0])
    cube([1, 1, 1.33]);
  translate([130, 43, 0])
    cube([1, 1, 1.33]);
  translate([131, 43, 0])
    cube([1, 1, 1.29]);
  translate([132, 43, 0])
    cube([1, 1, 1.22]);
  translate([133, 43, 0])
    cube([1, 1, 1.25]);
  translate([134, 43, 0])
    cube([1, 1, 1.22]);
  translate([135, 43, 0])
    cube([1, 1, 1.29]);
  translate([136, 43, 0])
    cube([1, 1, 1.25]);
  translate([137, 43, 0])
    cube([1, 1, 1.25]);
  translate([138, 43, 0])
    cube([1, 1, 1.25]);
  translate([139, 43, 0])
    cube([1, 1, 1.25]);
  translate([140, 43, 0])
    cube([1, 1, 1.18]);
  translate([141, 43, 0])
    cube([1, 1, 1.29]);
  translate([142, 43, 0])
    cube([1, 1, 1.25]);
  translate([143, 43, 0])
    cube([1, 1, 1.25]);
  translate([144, 43, 0])
    cube([1, 1, 1.25]);
  translate([145, 43, 0])
    cube([1, 1, 1.33]);
  translate([146, 43, 0])
    cube([1, 1, 1.33]);
  translate([147, 43, 0])
    cube([1, 1, 1.25]);
  translate([148, 43, 0])
    cube([1, 1, 1.25]);
  translate([149, 43, 0])
    cube([1, 1, 1.25]);
  translate([150, 43, 0])
    cube([1, 1, 1.22]);
  translate([151, 43, 0])
    cube([1, 1, 1.22]);
  translate([152, 43, 0])
    cube([1, 1, 1.25]);
  translate([153, 43, 0])
    cube([1, 1, 1.25]);
  translate([154, 43, 0])
    cube([1, 1, 1.25]);
  translate([155, 43, 0])
    cube([1, 1, 1.25]);
  translate([156, 43, 0])
    cube([1, 1, 1.25]);
  translate([157, 43, 0])
    cube([1, 1, 1.25]);
  translate([158, 43, 0])
    cube([1, 1, 1.25]);
  translate([159, 43, 0])
    cube([1, 1, 1.25]);
  translate([160, 43, 0])
    cube([1, 1, 1.33]);
  translate([161, 43, 0])
    cube([1, 1, 1.22]);
  translate([162, 43, 0])
    cube([1, 1, 1.29]);
  translate([163, 43, 0])
    cube([1, 1, 1.29]);
  translate([164, 43, 0])
    cube([1, 1, 1.25]);
  translate([165, 43, 0])
    cube([1, 1, 1.25]);
  translate([166, 43, 0])
    cube([1, 1, 1.25]);
  translate([167, 43, 0])
    cube([1, 1, 1.25]);
  translate([168, 43, 0])
    cube([1, 1, 1.25]);
  translate([169, 43, 0])
    cube([1, 1, 1.25]);
  translate([170, 43, 0])
    cube([1, 1, 1.25]);
  translate([171, 43, 0])
    cube([1, 1, 1.25]);
  translate([172, 43, 0])
    cube([1, 1, 1.25]);
  translate([173, 43, 0])
    cube([1, 1, 1.25]);
  translate([174, 43, 0])
    cube([1, 1, 1.25]);
  translate([175, 43, 0])
    cube([1, 1, 1.25]);
  translate([176, 43, 0])
    cube([1, 1, 1.25]);
  translate([177, 43, 0])
    cube([1, 1, 1.25]);
  translate([178, 43, 0])
    cube([1, 1, 1.25]);
  translate([179, 43, 0])
    cube([1, 1, 1.25]);
  translate([180, 43, 0])
    cube([1, 1, 1.25]);
  translate([181, 43, 0])
    cube([1, 1, 1.25]);
  translate([182, 43, 0])
    cube([1, 1, 1.25]);
  translate([183, 43, 0])
    cube([1, 1, 1.25]);
  translate([184, 43, 0])
    cube([1, 1, 1.25]);
  translate([185, 43, 0])
    cube([1, 1, 1.25]);
  translate([186, 43, 0])
    cube([1, 1, 1.25]);
  translate([187, 43, 0])
    cube([1, 1, 1.25]);
  translate([188, 43, 0])
    cube([1, 1, 1.25]);
  translate([189, 43, 0])
    cube([1, 1, 1.25]);
  translate([190, 43, 0])
    cube([1, 1, 1.25]);
  translate([191, 43, 0])
    cube([1, 1, 1.25]);
  translate([192, 43, 0])
    cube([1, 1, 1.25]);
  translate([193, 43, 0])
    cube([1, 1, 1.25]);
  translate([194, 43, 0])
    cube([1, 1, 1.25]);
  translate([195, 43, 0])
    cube([1, 1, 1.25]);
  translate([196, 43, 0])
    cube([1, 1, 1.25]);
  translate([197, 43, 0])
    cube([1, 1, 1.25]);
  translate([198, 43, 0])
    cube([1, 1, 1.25]);
  translate([199, 43, 0])
    cube([1, 1, 1.25]);
  translate([200, 43, 0])
    cube([1, 1, 1.25]);
  translate([201, 43, 0])
    cube([1, 1, 1.25]);
  translate([202, 43, 0])
    cube([1, 1, 1.25]);
  translate([203, 43, 0])
    cube([1, 1, 1.22]);
  translate([204, 43, 0])
    cube([1, 1, 1.25]);
  translate([205, 43, 0])
    cube([1, 1, 1.25]);
  translate([206, 43, 0])
    cube([1, 1, 1.25]);
  translate([207, 43, 0])
    cube([1, 1, 1.25]);
  translate([208, 43, 0])
    cube([1, 1, 1.25]);
  translate([209, 43, 0])
    cube([1, 1, 1.25]);
  translate([210, 43, 0])
    cube([1, 1, 1.25]);
  translate([211, 43, 0])
    cube([1, 1, 1.25]);
  translate([212, 43, 0])
    cube([1, 1, 1.25]);
  translate([213, 43, 0])
    cube([1, 1, 1.25]);
  translate([214, 43, 0])
    cube([1, 1, 1.25]);
  translate([215, 43, 0])
    cube([1, 1, 1.25]);
  translate([216, 43, 0])
    cube([1, 1, 1.25]);
  translate([217, 43, 0])
    cube([1, 1, 1.25]);
  translate([218, 43, 0])
    cube([1, 1, 1.25]);
  translate([219, 43, 0])
    cube([1, 1, 1.25]);
  translate([220, 43, 0])
    cube([1, 1, 1.25]);
  translate([221, 43, 0])
    cube([1, 1, 1.25]);
  translate([222, 43, 0])
    cube([1, 1, 1.25]);
  translate([223, 43, 0])
    cube([1, 1, 1.25]);
  translate([224, 43, 0])
    cube([1, 1, 1.25]);
  translate([225, 43, 0])
    cube([1, 1, 1.25]);
  translate([226, 43, 0])
    cube([1, 1, 1.25]);
  translate([227, 43, 0])
    cube([1, 1, 1.25]);
  translate([228, 43, 0])
    cube([1, 1, 1.25]);
  translate([229, 43, 0])
    cube([1, 1, 1.25]);
  translate([230, 43, 0])
    cube([1, 1, 1.25]);
  translate([231, 43, 0])
    cube([1, 1, 1.25]);
  translate([232, 43, 0])
    cube([1, 1, 1.25]);
  translate([233, 43, 0])
    cube([1, 1, 1.25]);
  translate([234, 43, 0])
    cube([1, 1, 1.25]);
  translate([235, 43, 0])
    cube([1, 1, 1.25]);
  translate([236, 43, 0])
    cube([1, 1, 1.25]);
  translate([237, 43, 0])
    cube([1, 1, 1.25]);
  translate([238, 43, 0])
    cube([1, 1, 1.25]);
  translate([239, 43, 0])
    cube([1, 1, 1.25]);
  translate([240, 43, 0])
    cube([1, 1, 1.25]);
  translate([241, 43, 0])
    cube([1, 1, 1.25]);
  translate([242, 43, 0])
    cube([1, 1, 1.25]);
  translate([243, 43, 0])
    cube([1, 1, 1.25]);
  translate([244, 43, 0])
    cube([1, 1, 1.25]);
  translate([245, 43, 0])
    cube([1, 1, 1.25]);
  translate([246, 43, 0])
    cube([1, 1, 1.25]);
  translate([0, 44, 0])
    cube([1, 1, 1.41]);
  translate([1, 44, 0])
    cube([1, 1, 1.37]);
  translate([2, 44, 0])
    cube([1, 1, 1.37]);
  translate([3, 44, 0])
    cube([1, 1, 1.37]);
  translate([4, 44, 0])
    cube([1, 1, 1.37]);
  translate([5, 44, 0])
    cube([1, 1, 1.37]);
  translate([6, 44, 0])
    cube([1, 1, 1.37]);
  translate([7, 44, 0])
    cube([1, 1, 1.37]);
  translate([8, 44, 0])
    cube([1, 1, 1.41]);
  translate([9, 44, 0])
    cube([1, 1, 1.37]);
  translate([10, 44, 0])
    cube([1, 1, 1.37]);
  translate([11, 44, 0])
    cube([1, 1, 1.37]);
  translate([12, 44, 0])
    cube([1, 1, 1.53]);
  translate([13, 44, 0])
    cube([1, 1, 1.65]);
  translate([14, 44, 0])
    cube([1, 1, 4.16]);
  translate([15, 44, 0])
    cube([1, 1, 1.22]);
  translate([16, 44, 0])
    cube([1, 1, 0.94]);
  translate([17, 44, 0])
    cube([1, 1, 0.94]);
  translate([18, 44, 0])
    cube([1, 1, 0.94]);
  translate([19, 44, 0])
    cube([1, 1, 1.06]);
  translate([20, 44, 0])
    cube([1, 1, 0.75]);
  translate([21, 44, 0])
    cube([1, 1, 0.47]);
  translate([22, 44, 0])
    cube([1, 1, 0.67]);
  translate([23, 44, 0])
    cube([1, 1, 0.63]);
  translate([24, 44, 0])
    cube([1, 1, 0.55]);
  translate([25, 44, 0])
    cube([1, 1, 0.51]);
  translate([26, 44, 0])
    cube([1, 1, 1.37]);
  translate([27, 44, 0])
    cube([1, 1, 1.37]);
  translate([28, 44, 0])
    cube([1, 1, 1.37]);
  translate([29, 44, 0])
    cube([1, 1, 1.37]);
  translate([30, 44, 0])
    cube([1, 1, 1.37]);
  translate([31, 44, 0])
    cube([1, 1, 1.37]);
  translate([32, 44, 0])
    cube([1, 1, 1.37]);
  translate([33, 44, 0])
    cube([1, 1, 1.37]);
  translate([34, 44, 0])
    cube([1, 1, 1.37]);
  translate([35, 44, 0])
    cube([1, 1, 1.37]);
  translate([36, 44, 0])
    cube([1, 1, 1.37]);
  translate([37, 44, 0])
    cube([1, 1, 1.37]);
  translate([38, 44, 0])
    cube([1, 1, 1.37]);
  translate([39, 44, 0])
    cube([1, 1, 1.41]);
  translate([40, 44, 0])
    cube([1, 1, 1.33]);
  translate([41, 44, 0])
    cube([1, 1, 1.33]);
  translate([42, 44, 0])
    cube([1, 1, 1.33]);
  translate([43, 44, 0])
    cube([1, 1, 1.37]);
  translate([44, 44, 0])
    cube([1, 1, 1.33]);
  translate([45, 44, 0])
    cube([1, 1, 1.37]);
  translate([46, 44, 0])
    cube([1, 1, 1.33]);
  translate([47, 44, 0])
    cube([1, 1, 1.33]);
  translate([48, 44, 0])
    cube([1, 1, 1.33]);
  translate([49, 44, 0])
    cube([1, 1, 1.33]);
  translate([50, 44, 0])
    cube([1, 1, 1.33]);
  translate([51, 44, 0])
    cube([1, 1, 1.33]);
  translate([52, 44, 0])
    cube([1, 1, 1.33]);
  translate([53, 44, 0])
    cube([1, 1, 1.33]);
  translate([54, 44, 0])
    cube([1, 1, 1.33]);
  translate([55, 44, 0])
    cube([1, 1, 1.33]);
  translate([56, 44, 0])
    cube([1, 1, 1.33]);
  translate([57, 44, 0])
    cube([1, 1, 1.33]);
  translate([58, 44, 0])
    cube([1, 1, 1.33]);
  translate([59, 44, 0])
    cube([1, 1, 1.33]);
  translate([60, 44, 0])
    cube([1, 1, 1.33]);
  translate([61, 44, 0])
    cube([1, 1, 1.33]);
  translate([62, 44, 0])
    cube([1, 1, 1.33]);
  translate([63, 44, 0])
    cube([1, 1, 1.33]);
  translate([64, 44, 0])
    cube([1, 1, 1.33]);
  translate([65, 44, 0])
    cube([1, 1, 1.33]);
  translate([66, 44, 0])
    cube([1, 1, 1.33]);
  translate([67, 44, 0])
    cube([1, 1, 1.33]);
  translate([68, 44, 0])
    cube([1, 1, 1.33]);
  translate([69, 44, 0])
    cube([1, 1, 1.33]);
  translate([70, 44, 0])
    cube([1, 1, 1.18]);
  translate([71, 44, 0])
    cube([1, 1, 1.25]);
  translate([72, 44, 0])
    cube([1, 1, 1.69]);
  translate([73, 44, 0])
    cube([1, 1, 1.25]);
  translate([74, 44, 0])
    cube([1, 1, 1.33]);
  translate([75, 44, 0])
    cube([1, 1, 4.20]);
  translate([76, 44, 0])
    cube([1, 1, 1.92]);
  translate([77, 44, 0])
    cube([1, 1, 6.55]);
  translate([78, 44, 0])
    cube([1, 1, 0.98]);
  translate([79, 44, 0])
    cube([1, 1, 7.37]);
  translate([80, 44, 0])
    cube([1, 1, 1.73]);
  translate([81, 44, 0])
    cube([1, 1, 1.69]);
  translate([82, 44, 0])
    cube([1, 1, 1.06]);
  translate([83, 44, 0])
    cube([1, 1, 1.53]);
  translate([84, 44, 0])
    cube([1, 1, 0.63]);
  translate([85, 44, 0])
    cube([1, 1, 1.14]);
  translate([86, 44, 0])
    cube([1, 1, 1.14]);
  translate([87, 44, 0])
    cube([1, 1, 1.80]);
  translate([88, 44, 0])
    cube([1, 1, 1.41]);
  translate([89, 44, 0])
    cube([1, 1, 1.22]);
  translate([90, 44, 0])
    cube([1, 1, 0.82]);
  translate([91, 44, 0])
    cube([1, 1, 4.35]);
  translate([92, 44, 0])
    cube([1, 1, 5.02]);
  translate([93, 44, 0])
    cube([1, 1, 1.25]);
  translate([94, 44, 0])
    cube([1, 1, 1.61]);
  translate([95, 44, 0])
    cube([1, 1, 1.49]);
  translate([96, 44, 0])
    cube([1, 1, 1.61]);
  translate([97, 44, 0])
    cube([1, 1, 1.41]);
  translate([98, 44, 0])
    cube([1, 1, 1.22]);
  translate([99, 44, 0])
    cube([1, 1, 4.16]);
  translate([100, 44, 0])
    cube([1, 1, 4.67]);
  translate([101, 44, 0])
    cube([1, 1, 4.98]);
  translate([102, 44, 0])
    cube([1, 1, 5.25]);
  translate([103, 44, 0])
    cube([1, 1, 5.65]);
  translate([104, 44, 0])
    cube([1, 1, 5.88]);
  translate([105, 44, 0])
    cube([1, 1, 6.04]);
  translate([106, 44, 0])
    cube([1, 1, 6.24]);
  translate([107, 44, 0])
    cube([1, 1, 6.24]);
  translate([108, 44, 0])
    cube([1, 1, 6.24]);
  translate([109, 44, 0])
    cube([1, 1, 6.27]);
  translate([110, 44, 0])
    cube([1, 1, 6.20]);
  translate([111, 44, 0])
    cube([1, 1, 6.16]);
  translate([112, 44, 0])
    cube([1, 1, 6.16]);
  translate([113, 44, 0])
    cube([1, 1, 6.08]);
  translate([114, 44, 0])
    cube([1, 1, 5.02]);
  translate([115, 44, 0])
    cube([1, 1, 2.31]);
  translate([116, 44, 0])
    cube([1, 1, 0.55]);
  translate([117, 44, 0])
    cube([1, 1, 0.51]);
  translate([118, 44, 0])
    cube([1, 1, 1.22]);
  translate([119, 44, 0])
    cube([1, 1, 1.29]);
  translate([120, 44, 0])
    cube([1, 1, 3.14]);
  translate([121, 44, 0])
    cube([1, 1, 2.63]);
  translate([122, 44, 0])
    cube([1, 1, 1.49]);
  translate([123, 44, 0])
    cube([1, 1, 2.39]);
  translate([124, 44, 0])
    cube([1, 1, 2.16]);
  translate([125, 44, 0])
    cube([1, 1, 1.76]);
  translate([126, 44, 0])
    cube([1, 1, 1.14]);
  translate([127, 44, 0])
    cube([1, 1, 5.06]);
  translate([128, 44, 0])
    cube([1, 1, 1.18]);
  translate([129, 44, 0])
    cube([1, 1, 1.22]);
  translate([130, 44, 0])
    cube([1, 1, 1.22]);
  translate([131, 44, 0])
    cube([1, 1, 1.33]);
  translate([132, 44, 0])
    cube([1, 1, 1.25]);
  translate([133, 44, 0])
    cube([1, 1, 1.25]);
  translate([134, 44, 0])
    cube([1, 1, 1.25]);
  translate([135, 44, 0])
    cube([1, 1, 1.29]);
  translate([136, 44, 0])
    cube([1, 1, 1.25]);
  translate([137, 44, 0])
    cube([1, 1, 1.25]);
  translate([138, 44, 0])
    cube([1, 1, 1.25]);
  translate([139, 44, 0])
    cube([1, 1, 1.25]);
  translate([140, 44, 0])
    cube([1, 1, 1.25]);
  translate([141, 44, 0])
    cube([1, 1, 1.25]);
  translate([142, 44, 0])
    cube([1, 1, 1.22]);
  translate([143, 44, 0])
    cube([1, 1, 1.22]);
  translate([144, 44, 0])
    cube([1, 1, 1.25]);
  translate([145, 44, 0])
    cube([1, 1, 1.25]);
  translate([146, 44, 0])
    cube([1, 1, 1.25]);
  translate([147, 44, 0])
    cube([1, 1, 1.25]);
  translate([148, 44, 0])
    cube([1, 1, 1.25]);
  translate([149, 44, 0])
    cube([1, 1, 1.25]);
  translate([150, 44, 0])
    cube([1, 1, 1.25]);
  translate([151, 44, 0])
    cube([1, 1, 1.25]);
  translate([152, 44, 0])
    cube([1, 1, 1.25]);
  translate([153, 44, 0])
    cube([1, 1, 1.22]);
  translate([154, 44, 0])
    cube([1, 1, 1.22]);
  translate([155, 44, 0])
    cube([1, 1, 1.22]);
  translate([156, 44, 0])
    cube([1, 1, 1.18]);
  translate([157, 44, 0])
    cube([1, 1, 1.29]);
  translate([158, 44, 0])
    cube([1, 1, 1.25]);
  translate([159, 44, 0])
    cube([1, 1, 1.22]);
  translate([160, 44, 0])
    cube([1, 1, 1.25]);
  translate([161, 44, 0])
    cube([1, 1, 1.25]);
  translate([162, 44, 0])
    cube([1, 1, 1.25]);
  translate([163, 44, 0])
    cube([1, 1, 1.33]);
  translate([164, 44, 0])
    cube([1, 1, 1.33]);
  translate([165, 44, 0])
    cube([1, 1, 1.33]);
  translate([166, 44, 0])
    cube([1, 1, 1.25]);
  translate([167, 44, 0])
    cube([1, 1, 1.25]);
  translate([168, 44, 0])
    cube([1, 1, 1.25]);
  translate([169, 44, 0])
    cube([1, 1, 1.25]);
  translate([170, 44, 0])
    cube([1, 1, 1.25]);
  translate([171, 44, 0])
    cube([1, 1, 1.25]);
  translate([172, 44, 0])
    cube([1, 1, 1.25]);
  translate([173, 44, 0])
    cube([1, 1, 1.25]);
  translate([174, 44, 0])
    cube([1, 1, 1.25]);
  translate([175, 44, 0])
    cube([1, 1, 1.25]);
  translate([176, 44, 0])
    cube([1, 1, 1.25]);
  translate([177, 44, 0])
    cube([1, 1, 1.25]);
  translate([178, 44, 0])
    cube([1, 1, 1.25]);
  translate([179, 44, 0])
    cube([1, 1, 1.25]);
  translate([180, 44, 0])
    cube([1, 1, 1.25]);
  translate([181, 44, 0])
    cube([1, 1, 1.25]);
  translate([182, 44, 0])
    cube([1, 1, 1.25]);
  translate([183, 44, 0])
    cube([1, 1, 1.25]);
  translate([184, 44, 0])
    cube([1, 1, 1.25]);
  translate([185, 44, 0])
    cube([1, 1, 1.25]);
  translate([186, 44, 0])
    cube([1, 1, 1.25]);
  translate([187, 44, 0])
    cube([1, 1, 1.25]);
  translate([188, 44, 0])
    cube([1, 1, 1.25]);
  translate([189, 44, 0])
    cube([1, 1, 1.25]);
  translate([190, 44, 0])
    cube([1, 1, 1.25]);
  translate([191, 44, 0])
    cube([1, 1, 1.25]);
  translate([192, 44, 0])
    cube([1, 1, 1.25]);
  translate([193, 44, 0])
    cube([1, 1, 1.25]);
  translate([194, 44, 0])
    cube([1, 1, 1.25]);
  translate([195, 44, 0])
    cube([1, 1, 1.25]);
  translate([196, 44, 0])
    cube([1, 1, 1.25]);
  translate([197, 44, 0])
    cube([1, 1, 1.25]);
  translate([198, 44, 0])
    cube([1, 1, 1.25]);
  translate([199, 44, 0])
    cube([1, 1, 1.25]);
  translate([200, 44, 0])
    cube([1, 1, 1.25]);
  translate([201, 44, 0])
    cube([1, 1, 1.25]);
  translate([202, 44, 0])
    cube([1, 1, 1.25]);
  translate([203, 44, 0])
    cube([1, 1, 1.25]);
  translate([204, 44, 0])
    cube([1, 1, 1.25]);
  translate([205, 44, 0])
    cube([1, 1, 1.25]);
  translate([206, 44, 0])
    cube([1, 1, 1.25]);
  translate([207, 44, 0])
    cube([1, 1, 1.25]);
  translate([208, 44, 0])
    cube([1, 1, 1.25]);
  translate([209, 44, 0])
    cube([1, 1, 1.25]);
  translate([210, 44, 0])
    cube([1, 1, 1.25]);
  translate([211, 44, 0])
    cube([1, 1, 1.25]);
  translate([212, 44, 0])
    cube([1, 1, 1.25]);
  translate([213, 44, 0])
    cube([1, 1, 1.25]);
  translate([214, 44, 0])
    cube([1, 1, 1.25]);
  translate([215, 44, 0])
    cube([1, 1, 1.25]);
  translate([216, 44, 0])
    cube([1, 1, 1.25]);
  translate([217, 44, 0])
    cube([1, 1, 1.25]);
  translate([218, 44, 0])
    cube([1, 1, 1.25]);
  translate([219, 44, 0])
    cube([1, 1, 1.25]);
  translate([220, 44, 0])
    cube([1, 1, 1.25]);
  translate([221, 44, 0])
    cube([1, 1, 1.25]);
  translate([222, 44, 0])
    cube([1, 1, 1.25]);
  translate([223, 44, 0])
    cube([1, 1, 1.25]);
  translate([224, 44, 0])
    cube([1, 1, 1.25]);
  translate([225, 44, 0])
    cube([1, 1, 1.25]);
  translate([226, 44, 0])
    cube([1, 1, 1.25]);
  translate([227, 44, 0])
    cube([1, 1, 1.25]);
  translate([228, 44, 0])
    cube([1, 1, 1.25]);
  translate([229, 44, 0])
    cube([1, 1, 1.25]);
  translate([230, 44, 0])
    cube([1, 1, 1.25]);
  translate([231, 44, 0])
    cube([1, 1, 1.25]);
  translate([232, 44, 0])
    cube([1, 1, 1.25]);
  translate([233, 44, 0])
    cube([1, 1, 1.25]);
  translate([234, 44, 0])
    cube([1, 1, 1.25]);
  translate([235, 44, 0])
    cube([1, 1, 1.25]);
  translate([236, 44, 0])
    cube([1, 1, 1.25]);
  translate([237, 44, 0])
    cube([1, 1, 1.25]);
  translate([238, 44, 0])
    cube([1, 1, 1.25]);
  translate([239, 44, 0])
    cube([1, 1, 1.25]);
  translate([240, 44, 0])
    cube([1, 1, 1.25]);
  translate([241, 44, 0])
    cube([1, 1, 1.25]);
  translate([242, 44, 0])
    cube([1, 1, 1.25]);
  translate([243, 44, 0])
    cube([1, 1, 1.25]);
  translate([244, 44, 0])
    cube([1, 1, 1.25]);
  translate([245, 44, 0])
    cube([1, 1, 1.25]);
  translate([246, 44, 0])
    cube([1, 1, 1.25]);
  translate([0, 45, 0])
    cube([1, 1, 1.45]);
  translate([1, 45, 0])
    cube([1, 1, 1.37]);
  translate([2, 45, 0])
    cube([1, 1, 1.37]);
  translate([3, 45, 0])
    cube([1, 1, 1.37]);
  translate([4, 45, 0])
    cube([1, 1, 1.37]);
  translate([5, 45, 0])
    cube([1, 1, 1.37]);
  translate([6, 45, 0])
    cube([1, 1, 1.37]);
  translate([7, 45, 0])
    cube([1, 1, 1.41]);
  translate([8, 45, 0])
    cube([1, 1, 1.37]);
  translate([9, 45, 0])
    cube([1, 1, 1.37]);
  translate([10, 45, 0])
    cube([1, 1, 1.37]);
  translate([11, 45, 0])
    cube([1, 1, 1.41]);
  translate([12, 45, 0])
    cube([1, 1, 1.37]);
  translate([13, 45, 0])
    cube([1, 1, 1.37]);
  translate([14, 45, 0])
    cube([1, 1, 3.69]);
  translate([15, 45, 0])
    cube([1, 1, 0.86]);
  translate([16, 45, 0])
    cube([1, 1, 0.94]);
  translate([17, 45, 0])
    cube([1, 1, 0.94]);
  translate([18, 45, 0])
    cube([1, 1, 0.94]);
  translate([19, 45, 0])
    cube([1, 1, 1.53]);
  translate([20, 45, 0])
    cube([1, 1, 0.39]);
  translate([21, 45, 0])
    cube([1, 1, 0.67]);
  translate([22, 45, 0])
    cube([1, 1, 0.35]);
  translate([23, 45, 0])
    cube([1, 1, 0.24]);
  translate([24, 45, 0])
    cube([1, 1, 0.59]);
  translate([25, 45, 0])
    cube([1, 1, 0.67]);
  translate([26, 45, 0])
    cube([1, 1, 1.10]);
  translate([27, 45, 0])
    cube([1, 1, 1.33]);
  translate([28, 45, 0])
    cube([1, 1, 1.37]);
  translate([29, 45, 0])
    cube([1, 1, 1.37]);
  translate([30, 45, 0])
    cube([1, 1, 1.37]);
  translate([31, 45, 0])
    cube([1, 1, 1.37]);
  translate([32, 45, 0])
    cube([1, 1, 1.37]);
  translate([33, 45, 0])
    cube([1, 1, 1.37]);
  translate([34, 45, 0])
    cube([1, 1, 1.37]);
  translate([35, 45, 0])
    cube([1, 1, 1.37]);
  translate([36, 45, 0])
    cube([1, 1, 1.37]);
  translate([37, 45, 0])
    cube([1, 1, 1.37]);
  translate([38, 45, 0])
    cube([1, 1, 1.37]);
  translate([39, 45, 0])
    cube([1, 1, 1.37]);
  translate([40, 45, 0])
    cube([1, 1, 1.37]);
  translate([41, 45, 0])
    cube([1, 1, 1.37]);
  translate([42, 45, 0])
    cube([1, 1, 1.37]);
  translate([43, 45, 0])
    cube([1, 1, 1.37]);
  translate([44, 45, 0])
    cube([1, 1, 1.33]);
  translate([45, 45, 0])
    cube([1, 1, 1.37]);
  translate([46, 45, 0])
    cube([1, 1, 1.37]);
  translate([47, 45, 0])
    cube([1, 1, 1.33]);
  translate([48, 45, 0])
    cube([1, 1, 1.33]);
  translate([49, 45, 0])
    cube([1, 1, 1.33]);
  translate([50, 45, 0])
    cube([1, 1, 1.33]);
  translate([51, 45, 0])
    cube([1, 1, 1.33]);
  translate([52, 45, 0])
    cube([1, 1, 1.33]);
  translate([53, 45, 0])
    cube([1, 1, 1.33]);
  translate([54, 45, 0])
    cube([1, 1, 1.33]);
  translate([55, 45, 0])
    cube([1, 1, 1.33]);
  translate([56, 45, 0])
    cube([1, 1, 1.33]);
  translate([57, 45, 0])
    cube([1, 1, 1.33]);
  translate([58, 45, 0])
    cube([1, 1, 1.33]);
  translate([59, 45, 0])
    cube([1, 1, 1.33]);
  translate([60, 45, 0])
    cube([1, 1, 1.33]);
  translate([61, 45, 0])
    cube([1, 1, 1.33]);
  translate([62, 45, 0])
    cube([1, 1, 1.33]);
  translate([63, 45, 0])
    cube([1, 1, 1.33]);
  translate([64, 45, 0])
    cube([1, 1, 1.33]);
  translate([65, 45, 0])
    cube([1, 1, 1.33]);
  translate([66, 45, 0])
    cube([1, 1, 1.33]);
  translate([67, 45, 0])
    cube([1, 1, 1.33]);
  translate([68, 45, 0])
    cube([1, 1, 1.33]);
  translate([69, 45, 0])
    cube([1, 1, 1.33]);
  translate([70, 45, 0])
    cube([1, 1, 1.33]);
  translate([71, 45, 0])
    cube([1, 1, 1.33]);
  translate([72, 45, 0])
    cube([1, 1, 1.37]);
  translate([73, 45, 0])
    cube([1, 1, 1.41]);
  translate([74, 45, 0])
    cube([1, 1, 1.14]);
  translate([75, 45, 0])
    cube([1, 1, 0.59]);
  translate([76, 45, 0])
    cube([1, 1, 1.65]);
  translate([77, 45, 0])
    cube([1, 1, 4.16]);
  translate([78, 45, 0])
    cube([1, 1, 0.47]);
  translate([79, 45, 0])
    cube([1, 1, 7.45]);
  translate([80, 45, 0])
    cube([1, 1, 1.53]);
  translate([81, 45, 0])
    cube([1, 1, 1.61]);
  translate([82, 45, 0])
    cube([1, 1, 1.25]);
  translate([83, 45, 0])
    cube([1, 1, 1.02]);
  translate([84, 45, 0])
    cube([1, 1, 5.73]);
  translate([85, 45, 0])
    cube([1, 1, 2.59]);
  translate([86, 45, 0])
    cube([1, 1, 1.29]);
  translate([87, 45, 0])
    cube([1, 1, 1.02]);
  translate([88, 45, 0])
    cube([1, 1, 1.10]);
  translate([89, 45, 0])
    cube([1, 1, 1.33]);
  translate([90, 45, 0])
    cube([1, 1, 2.20]);
  translate([91, 45, 0])
    cube([1, 1, 1.53]);
  translate([92, 45, 0])
    cube([1, 1, 4.90]);
  translate([93, 45, 0])
    cube([1, 1, 2.04]);
  translate([94, 45, 0])
    cube([1, 1, 1.37]);
  translate([95, 45, 0])
    cube([1, 1, 1.61]);
  translate([96, 45, 0])
    cube([1, 1, 1.29]);
  translate([97, 45, 0])
    cube([1, 1, 2.16]);
  translate([98, 45, 0])
    cube([1, 1, 4.31]);
  translate([99, 45, 0])
    cube([1, 1, 4.90]);
  translate([100, 45, 0])
    cube([1, 1, 5.22]);
  translate([101, 45, 0])
    cube([1, 1, 5.49]);
  translate([102, 45, 0])
    cube([1, 1, 5.76]);
  translate([103, 45, 0])
    cube([1, 1, 6.04]);
  translate([104, 45, 0])
    cube([1, 1, 6.12]);
  translate([105, 45, 0])
    cube([1, 1, 6.16]);
  translate([106, 45, 0])
    cube([1, 1, 6.16]);
  translate([107, 45, 0])
    cube([1, 1, 6.24]);
  translate([108, 45, 0])
    cube([1, 1, 6.20]);
  translate([109, 45, 0])
    cube([1, 1, 6.24]);
  translate([110, 45, 0])
    cube([1, 1, 6.08]);
  translate([111, 45, 0])
    cube([1, 1, 6.16]);
  translate([112, 45, 0])
    cube([1, 1, 6.27]);
  translate([113, 45, 0])
    cube([1, 1, 6.08]);
  translate([114, 45, 0])
    cube([1, 1, 5.18]);
  translate([115, 45, 0])
    cube([1, 1, 2.59]);
  translate([116, 45, 0])
    cube([1, 1, 0.59]);
  translate([117, 45, 0])
    cube([1, 1, 0.47]);
  translate([118, 45, 0])
    cube([1, 1, 0.71]);
  translate([119, 45, 0])
    cube([1, 1, 1.22]);
  translate([120, 45, 0])
    cube([1, 1, 2.94]);
  translate([121, 45, 0])
    cube([1, 1, 2.39]);
  translate([122, 45, 0])
    cube([1, 1, 2.24]);
  translate([123, 45, 0])
    cube([1, 1, 2.55]);
  translate([124, 45, 0])
    cube([1, 1, 5.61]);
  translate([125, 45, 0])
    cube([1, 1, 6.35]);
  translate([126, 45, 0])
    cube([1, 1, 3.06]);
  translate([127, 45, 0])
    cube([1, 1, 4.55]);
  translate([128, 45, 0])
    cube([1, 1, 1.33]);
  translate([129, 45, 0])
    cube([1, 1, 1.25]);
  translate([130, 45, 0])
    cube([1, 1, 1.25]);
  translate([131, 45, 0])
    cube([1, 1, 1.25]);
  translate([132, 45, 0])
    cube([1, 1, 1.25]);
  translate([133, 45, 0])
    cube([1, 1, 1.25]);
  translate([134, 45, 0])
    cube([1, 1, 1.25]);
  translate([135, 45, 0])
    cube([1, 1, 1.25]);
  translate([136, 45, 0])
    cube([1, 1, 1.25]);
  translate([137, 45, 0])
    cube([1, 1, 1.25]);
  translate([138, 45, 0])
    cube([1, 1, 1.25]);
  translate([139, 45, 0])
    cube([1, 1, 1.25]);
  translate([140, 45, 0])
    cube([1, 1, 1.25]);
  translate([141, 45, 0])
    cube([1, 1, 1.25]);
  translate([142, 45, 0])
    cube([1, 1, 1.25]);
  translate([143, 45, 0])
    cube([1, 1, 1.25]);
  translate([144, 45, 0])
    cube([1, 1, 1.22]);
  translate([145, 45, 0])
    cube([1, 1, 1.25]);
  translate([146, 45, 0])
    cube([1, 1, 1.25]);
  translate([147, 45, 0])
    cube([1, 1, 1.25]);
  translate([148, 45, 0])
    cube([1, 1, 1.25]);
  translate([149, 45, 0])
    cube([1, 1, 1.25]);
  translate([150, 45, 0])
    cube([1, 1, 1.25]);
  translate([151, 45, 0])
    cube([1, 1, 1.25]);
  translate([152, 45, 0])
    cube([1, 1, 1.29]);
  translate([153, 45, 0])
    cube([1, 1, 1.25]);
  translate([154, 45, 0])
    cube([1, 1, 1.29]);
  translate([155, 45, 0])
    cube([1, 1, 1.29]);
  translate([156, 45, 0])
    cube([1, 1, 1.25]);
  translate([157, 45, 0])
    cube([1, 1, 1.25]);
  translate([158, 45, 0])
    cube([1, 1, 1.25]);
  translate([159, 45, 0])
    cube([1, 1, 1.22]);
  translate([160, 45, 0])
    cube([1, 1, 1.33]);
  translate([161, 45, 0])
    cube([1, 1, 1.25]);
  translate([162, 45, 0])
    cube([1, 1, 1.25]);
  translate([163, 45, 0])
    cube([1, 1, 1.25]);
  translate([164, 45, 0])
    cube([1, 1, 1.25]);
  translate([165, 45, 0])
    cube([1, 1, 1.29]);
  translate([166, 45, 0])
    cube([1, 1, 1.25]);
  translate([167, 45, 0])
    cube([1, 1, 1.25]);
  translate([168, 45, 0])
    cube([1, 1, 1.25]);
  translate([169, 45, 0])
    cube([1, 1, 1.29]);
  translate([170, 45, 0])
    cube([1, 1, 1.29]);
  translate([171, 45, 0])
    cube([1, 1, 1.25]);
  translate([172, 45, 0])
    cube([1, 1, 1.25]);
  translate([173, 45, 0])
    cube([1, 1, 1.25]);
  translate([174, 45, 0])
    cube([1, 1, 1.25]);
  translate([175, 45, 0])
    cube([1, 1, 1.25]);
  translate([176, 45, 0])
    cube([1, 1, 1.25]);
  translate([177, 45, 0])
    cube([1, 1, 1.25]);
  translate([178, 45, 0])
    cube([1, 1, 1.25]);
  translate([179, 45, 0])
    cube([1, 1, 1.22]);
  translate([180, 45, 0])
    cube([1, 1, 1.25]);
  translate([181, 45, 0])
    cube([1, 1, 1.25]);
  translate([182, 45, 0])
    cube([1, 1, 1.25]);
  translate([183, 45, 0])
    cube([1, 1, 1.25]);
  translate([184, 45, 0])
    cube([1, 1, 1.25]);
  translate([185, 45, 0])
    cube([1, 1, 1.25]);
  translate([186, 45, 0])
    cube([1, 1, 1.25]);
  translate([187, 45, 0])
    cube([1, 1, 1.25]);
  translate([188, 45, 0])
    cube([1, 1, 1.25]);
  translate([189, 45, 0])
    cube([1, 1, 1.25]);
  translate([190, 45, 0])
    cube([1, 1, 1.25]);
  translate([191, 45, 0])
    cube([1, 1, 1.25]);
  translate([192, 45, 0])
    cube([1, 1, 1.25]);
  translate([193, 45, 0])
    cube([1, 1, 1.25]);
  translate([194, 45, 0])
    cube([1, 1, 1.25]);
  translate([195, 45, 0])
    cube([1, 1, 1.25]);
  translate([196, 45, 0])
    cube([1, 1, 1.25]);
  translate([197, 45, 0])
    cube([1, 1, 1.25]);
  translate([198, 45, 0])
    cube([1, 1, 1.25]);
  translate([199, 45, 0])
    cube([1, 1, 1.25]);
  translate([200, 45, 0])
    cube([1, 1, 1.25]);
  translate([201, 45, 0])
    cube([1, 1, 1.25]);
  translate([202, 45, 0])
    cube([1, 1, 1.25]);
  translate([203, 45, 0])
    cube([1, 1, 1.25]);
  translate([204, 45, 0])
    cube([1, 1, 1.25]);
  translate([205, 45, 0])
    cube([1, 1, 1.25]);
  translate([206, 45, 0])
    cube([1, 1, 1.25]);
  translate([207, 45, 0])
    cube([1, 1, 1.25]);
  translate([208, 45, 0])
    cube([1, 1, 1.25]);
  translate([209, 45, 0])
    cube([1, 1, 1.25]);
  translate([210, 45, 0])
    cube([1, 1, 1.25]);
  translate([211, 45, 0])
    cube([1, 1, 1.25]);
  translate([212, 45, 0])
    cube([1, 1, 1.25]);
  translate([213, 45, 0])
    cube([1, 1, 1.25]);
  translate([214, 45, 0])
    cube([1, 1, 1.25]);
  translate([215, 45, 0])
    cube([1, 1, 1.25]);
  translate([216, 45, 0])
    cube([1, 1, 1.25]);
  translate([217, 45, 0])
    cube([1, 1, 1.25]);
  translate([218, 45, 0])
    cube([1, 1, 1.25]);
  translate([219, 45, 0])
    cube([1, 1, 1.25]);
  translate([220, 45, 0])
    cube([1, 1, 1.25]);
  translate([221, 45, 0])
    cube([1, 1, 1.25]);
  translate([222, 45, 0])
    cube([1, 1, 1.25]);
  translate([223, 45, 0])
    cube([1, 1, 1.25]);
  translate([224, 45, 0])
    cube([1, 1, 1.25]);
  translate([225, 45, 0])
    cube([1, 1, 1.25]);
  translate([226, 45, 0])
    cube([1, 1, 1.25]);
  translate([227, 45, 0])
    cube([1, 1, 1.25]);
  translate([228, 45, 0])
    cube([1, 1, 1.25]);
  translate([229, 45, 0])
    cube([1, 1, 1.25]);
  translate([230, 45, 0])
    cube([1, 1, 1.25]);
  translate([231, 45, 0])
    cube([1, 1, 1.25]);
  translate([232, 45, 0])
    cube([1, 1, 1.25]);
  translate([233, 45, 0])
    cube([1, 1, 1.25]);
  translate([234, 45, 0])
    cube([1, 1, 1.25]);
  translate([235, 45, 0])
    cube([1, 1, 1.25]);
  translate([236, 45, 0])
    cube([1, 1, 1.25]);
  translate([237, 45, 0])
    cube([1, 1, 1.25]);
  translate([238, 45, 0])
    cube([1, 1, 1.25]);
  translate([239, 45, 0])
    cube([1, 1, 1.25]);
  translate([240, 45, 0])
    cube([1, 1, 1.25]);
  translate([241, 45, 0])
    cube([1, 1, 1.25]);
  translate([242, 45, 0])
    cube([1, 1, 1.25]);
  translate([243, 45, 0])
    cube([1, 1, 1.25]);
  translate([244, 45, 0])
    cube([1, 1, 1.25]);
  translate([245, 45, 0])
    cube([1, 1, 1.25]);
  translate([246, 45, 0])
    cube([1, 1, 1.25]);
  translate([0, 46, 0])
    cube([1, 1, 1.45]);
  translate([1, 46, 0])
    cube([1, 1, 1.37]);
  translate([2, 46, 0])
    cube([1, 1, 1.37]);
  translate([3, 46, 0])
    cube([1, 1, 1.37]);
  translate([4, 46, 0])
    cube([1, 1, 1.37]);
  translate([5, 46, 0])
    cube([1, 1, 1.37]);
  translate([6, 46, 0])
    cube([1, 1, 1.37]);
  translate([7, 46, 0])
    cube([1, 1, 1.41]);
  translate([8, 46, 0])
    cube([1, 1, 1.45]);
  translate([9, 46, 0])
    cube([1, 1, 1.37]);
  translate([10, 46, 0])
    cube([1, 1, 1.37]);
  translate([11, 46, 0])
    cube([1, 1, 1.41]);
  translate([12, 46, 0])
    cube([1, 1, 1.37]);
  translate([13, 46, 0])
    cube([1, 1, 1.37]);
  translate([14, 46, 0])
    cube([1, 1, 1.37]);
  translate([15, 46, 0])
    cube([1, 1, 0.90]);
  translate([16, 46, 0])
    cube([1, 1, 0.98]);
  translate([17, 46, 0])
    cube([1, 1, 0.94]);
  translate([18, 46, 0])
    cube([1, 1, 0.94]);
  translate([19, 46, 0])
    cube([1, 1, 0.78]);
  translate([20, 46, 0])
    cube([1, 1, 0.75]);
  translate([21, 46, 0])
    cube([1, 1, 0.31]);
  translate([22, 46, 0])
    cube([1, 1, 0.43]);
  translate([23, 46, 0])
    cube([1, 1, 0.75]);
  translate([24, 46, 0])
    cube([1, 1, 0.75]);
  translate([25, 46, 0])
    cube([1, 1, 0.67]);
  translate([26, 46, 0])
    cube([1, 1, 0.75]);
  translate([27, 46, 0])
    cube([1, 1, 1.33]);
  translate([28, 46, 0])
    cube([1, 1, 1.37]);
  translate([29, 46, 0])
    cube([1, 1, 1.37]);
  translate([30, 46, 0])
    cube([1, 1, 1.37]);
  translate([31, 46, 0])
    cube([1, 1, 1.37]);
  translate([32, 46, 0])
    cube([1, 1, 1.37]);
  translate([33, 46, 0])
    cube([1, 1, 1.37]);
  translate([34, 46, 0])
    cube([1, 1, 1.37]);
  translate([35, 46, 0])
    cube([1, 1, 1.37]);
  translate([36, 46, 0])
    cube([1, 1, 1.37]);
  translate([37, 46, 0])
    cube([1, 1, 1.37]);
  translate([38, 46, 0])
    cube([1, 1, 1.37]);
  translate([39, 46, 0])
    cube([1, 1, 1.37]);
  translate([40, 46, 0])
    cube([1, 1, 1.37]);
  translate([41, 46, 0])
    cube([1, 1, 1.37]);
  translate([42, 46, 0])
    cube([1, 1, 1.37]);
  translate([43, 46, 0])
    cube([1, 1, 1.37]);
  translate([44, 46, 0])
    cube([1, 1, 1.33]);
  translate([45, 46, 0])
    cube([1, 1, 1.37]);
  translate([46, 46, 0])
    cube([1, 1, 1.37]);
  translate([47, 46, 0])
    cube([1, 1, 1.33]);
  translate([48, 46, 0])
    cube([1, 1, 1.37]);
  translate([49, 46, 0])
    cube([1, 1, 1.33]);
  translate([50, 46, 0])
    cube([1, 1, 1.33]);
  translate([51, 46, 0])
    cube([1, 1, 1.33]);
  translate([52, 46, 0])
    cube([1, 1, 1.33]);
  translate([53, 46, 0])
    cube([1, 1, 1.33]);
  translate([54, 46, 0])
    cube([1, 1, 1.33]);
  translate([55, 46, 0])
    cube([1, 1, 1.33]);
  translate([56, 46, 0])
    cube([1, 1, 1.33]);
  translate([57, 46, 0])
    cube([1, 1, 1.33]);
  translate([58, 46, 0])
    cube([1, 1, 1.33]);
  translate([59, 46, 0])
    cube([1, 1, 1.33]);
  translate([60, 46, 0])
    cube([1, 1, 1.33]);
  translate([61, 46, 0])
    cube([1, 1, 1.33]);
  translate([62, 46, 0])
    cube([1, 1, 1.33]);
  translate([63, 46, 0])
    cube([1, 1, 1.33]);
  translate([64, 46, 0])
    cube([1, 1, 1.33]);
  translate([65, 46, 0])
    cube([1, 1, 1.33]);
  translate([66, 46, 0])
    cube([1, 1, 1.33]);
  translate([67, 46, 0])
    cube([1, 1, 1.33]);
  translate([68, 46, 0])
    cube([1, 1, 1.33]);
  translate([69, 46, 0])
    cube([1, 1, 1.33]);
  translate([70, 46, 0])
    cube([1, 1, 1.33]);
  translate([71, 46, 0])
    cube([1, 1, 1.33]);
  translate([72, 46, 0])
    cube([1, 1, 1.45]);
  translate([73, 46, 0])
    cube([1, 1, 2.04]);
  translate([74, 46, 0])
    cube([1, 1, 2.20]);
  translate([75, 46, 0])
    cube([1, 1, 1.22]);
  translate([76, 46, 0])
    cube([1, 1, 0.82]);
  translate([77, 46, 0])
    cube([1, 1, 1.10]);
  translate([78, 46, 0])
    cube([1, 1, 1.96]);
  translate([79, 46, 0])
    cube([1, 1, 7.06]);
  translate([80, 46, 0])
    cube([1, 1, 1.33]);
  translate([81, 46, 0])
    cube([1, 1, 1.29]);
  translate([82, 46, 0])
    cube([1, 1, 1.25]);
  translate([83, 46, 0])
    cube([1, 1, 0.71]);
  translate([84, 46, 0])
    cube([1, 1, 1.22]);
  translate([85, 46, 0])
    cube([1, 1, 2.04]);
  translate([86, 46, 0])
    cube([1, 1, 1.29]);
  translate([87, 46, 0])
    cube([1, 1, 1.25]);
  translate([88, 46, 0])
    cube([1, 1, 1.22]);
  translate([89, 46, 0])
    cube([1, 1, 1.45]);
  translate([90, 46, 0])
    cube([1, 1, 3.57]);
  translate([91, 46, 0])
    cube([1, 1, 0.43]);
  translate([92, 46, 0])
    cube([1, 1, 1.14]);
  translate([93, 46, 0])
    cube([1, 1, 3.80]);
  translate([94, 46, 0])
    cube([1, 1, 2.82]);
  translate([95, 46, 0])
    cube([1, 1, 1.33]);
  translate([96, 46, 0])
    cube([1, 1, 1.41]);
  translate([97, 46, 0])
    cube([1, 1, 1.22]);
  translate([98, 46, 0])
    cube([1, 1, 3.06]);
  translate([99, 46, 0])
    cube([1, 1, 4.71]);
  translate([100, 46, 0])
    cube([1, 1, 5.53]);
  translate([101, 46, 0])
    cube([1, 1, 5.88]);
  translate([102, 46, 0])
    cube([1, 1, 6.00]);
  translate([103, 46, 0])
    cube([1, 1, 6.12]);
  translate([104, 46, 0])
    cube([1, 1, 6.16]);
  translate([105, 46, 0])
    cube([1, 1, 6.08]);
  translate([106, 46, 0])
    cube([1, 1, 6.16]);
  translate([107, 46, 0])
    cube([1, 1, 6.12]);
  translate([108, 46, 0])
    cube([1, 1, 6.16]);
  translate([109, 46, 0])
    cube([1, 1, 6.20]);
  translate([110, 46, 0])
    cube([1, 1, 6.08]);
  translate([111, 46, 0])
    cube([1, 1, 6.16]);
  translate([112, 46, 0])
    cube([1, 1, 6.20]);
  translate([113, 46, 0])
    cube([1, 1, 6.20]);
  translate([114, 46, 0])
    cube([1, 1, 5.29]);
  translate([115, 46, 0])
    cube([1, 1, 3.02]);
  translate([116, 46, 0])
    cube([1, 1, 0.55]);
  translate([117, 46, 0])
    cube([1, 1, 0.43]);
  translate([118, 46, 0])
    cube([1, 1, 0.31]);
  translate([119, 46, 0])
    cube([1, 1, 1.18]);
  translate([120, 46, 0])
    cube([1, 1, 2.43]);
  translate([121, 46, 0])
    cube([1, 1, 2.55]);
  translate([122, 46, 0])
    cube([1, 1, 1.76]);
  translate([123, 46, 0])
    cube([1, 1, 1.76]);
  translate([124, 46, 0])
    cube([1, 1, 2.35]);
  translate([125, 46, 0])
    cube([1, 1, 4.43]);
  translate([126, 46, 0])
    cube([1, 1, 3.06]);
  translate([127, 46, 0])
    cube([1, 1, 3.88]);
  translate([128, 46, 0])
    cube([1, 1, 1.37]);
  translate([129, 46, 0])
    cube([1, 1, 1.25]);
  translate([130, 46, 0])
    cube([1, 1, 1.25]);
  translate([131, 46, 0])
    cube([1, 1, 1.25]);
  translate([132, 46, 0])
    cube([1, 1, 1.25]);
  translate([133, 46, 0])
    cube([1, 1, 1.25]);
  translate([134, 46, 0])
    cube([1, 1, 1.25]);
  translate([135, 46, 0])
    cube([1, 1, 1.25]);
  translate([136, 46, 0])
    cube([1, 1, 1.25]);
  translate([137, 46, 0])
    cube([1, 1, 1.25]);
  translate([138, 46, 0])
    cube([1, 1, 1.25]);
  translate([139, 46, 0])
    cube([1, 1, 1.25]);
  translate([140, 46, 0])
    cube([1, 1, 1.25]);
  translate([141, 46, 0])
    cube([1, 1, 1.25]);
  translate([142, 46, 0])
    cube([1, 1, 1.25]);
  translate([143, 46, 0])
    cube([1, 1, 1.25]);
  translate([144, 46, 0])
    cube([1, 1, 1.22]);
  translate([145, 46, 0])
    cube([1, 1, 1.25]);
  translate([146, 46, 0])
    cube([1, 1, 1.25]);
  translate([147, 46, 0])
    cube([1, 1, 1.25]);
  translate([148, 46, 0])
    cube([1, 1, 1.25]);
  translate([149, 46, 0])
    cube([1, 1, 1.25]);
  translate([150, 46, 0])
    cube([1, 1, 1.25]);
  translate([151, 46, 0])
    cube([1, 1, 1.25]);
  translate([152, 46, 0])
    cube([1, 1, 1.29]);
  translate([153, 46, 0])
    cube([1, 1, 1.25]);
  translate([154, 46, 0])
    cube([1, 1, 1.29]);
  translate([155, 46, 0])
    cube([1, 1, 1.29]);
  translate([156, 46, 0])
    cube([1, 1, 1.25]);
  translate([157, 46, 0])
    cube([1, 1, 1.25]);
  translate([158, 46, 0])
    cube([1, 1, 1.25]);
  translate([159, 46, 0])
    cube([1, 1, 1.22]);
  translate([160, 46, 0])
    cube([1, 1, 1.33]);
  translate([161, 46, 0])
    cube([1, 1, 1.25]);
  translate([162, 46, 0])
    cube([1, 1, 1.25]);
  translate([163, 46, 0])
    cube([1, 1, 1.25]);
  translate([164, 46, 0])
    cube([1, 1, 1.25]);
  translate([165, 46, 0])
    cube([1, 1, 1.29]);
  translate([166, 46, 0])
    cube([1, 1, 1.25]);
  translate([167, 46, 0])
    cube([1, 1, 1.25]);
  translate([168, 46, 0])
    cube([1, 1, 1.25]);
  translate([169, 46, 0])
    cube([1, 1, 1.29]);
  translate([170, 46, 0])
    cube([1, 1, 1.29]);
  translate([171, 46, 0])
    cube([1, 1, 1.25]);
  translate([172, 46, 0])
    cube([1, 1, 1.25]);
  translate([173, 46, 0])
    cube([1, 1, 1.25]);
  translate([174, 46, 0])
    cube([1, 1, 1.25]);
  translate([175, 46, 0])
    cube([1, 1, 1.25]);
  translate([176, 46, 0])
    cube([1, 1, 1.25]);
  translate([177, 46, 0])
    cube([1, 1, 1.25]);
  translate([178, 46, 0])
    cube([1, 1, 1.25]);
  translate([179, 46, 0])
    cube([1, 1, 1.22]);
  translate([180, 46, 0])
    cube([1, 1, 1.25]);
  translate([181, 46, 0])
    cube([1, 1, 1.25]);
  translate([182, 46, 0])
    cube([1, 1, 1.25]);
  translate([183, 46, 0])
    cube([1, 1, 1.25]);
  translate([184, 46, 0])
    cube([1, 1, 1.25]);
  translate([185, 46, 0])
    cube([1, 1, 1.25]);
  translate([186, 46, 0])
    cube([1, 1, 1.25]);
  translate([187, 46, 0])
    cube([1, 1, 1.25]);
  translate([188, 46, 0])
    cube([1, 1, 1.25]);
  translate([189, 46, 0])
    cube([1, 1, 1.25]);
  translate([190, 46, 0])
    cube([1, 1, 1.25]);
  translate([191, 46, 0])
    cube([1, 1, 1.25]);
  translate([192, 46, 0])
    cube([1, 1, 1.25]);
  translate([193, 46, 0])
    cube([1, 1, 1.25]);
  translate([194, 46, 0])
    cube([1, 1, 1.25]);
  translate([195, 46, 0])
    cube([1, 1, 1.25]);
  translate([196, 46, 0])
    cube([1, 1, 1.25]);
  translate([197, 46, 0])
    cube([1, 1, 1.25]);
  translate([198, 46, 0])
    cube([1, 1, 1.25]);
  translate([199, 46, 0])
    cube([1, 1, 1.25]);
  translate([200, 46, 0])
    cube([1, 1, 1.25]);
  translate([201, 46, 0])
    cube([1, 1, 1.25]);
  translate([202, 46, 0])
    cube([1, 1, 1.25]);
  translate([203, 46, 0])
    cube([1, 1, 1.25]);
  translate([204, 46, 0])
    cube([1, 1, 1.25]);
  translate([205, 46, 0])
    cube([1, 1, 1.25]);
  translate([206, 46, 0])
    cube([1, 1, 1.25]);
  translate([207, 46, 0])
    cube([1, 1, 1.25]);
  translate([208, 46, 0])
    cube([1, 1, 1.25]);
  translate([209, 46, 0])
    cube([1, 1, 1.25]);
  translate([210, 46, 0])
    cube([1, 1, 1.25]);
  translate([211, 46, 0])
    cube([1, 1, 1.25]);
  translate([212, 46, 0])
    cube([1, 1, 1.25]);
  translate([213, 46, 0])
    cube([1, 1, 1.25]);
  translate([214, 46, 0])
    cube([1, 1, 1.25]);
  translate([215, 46, 0])
    cube([1, 1, 1.25]);
  translate([216, 46, 0])
    cube([1, 1, 1.25]);
  translate([217, 46, 0])
    cube([1, 1, 1.25]);
  translate([218, 46, 0])
    cube([1, 1, 1.25]);
  translate([219, 46, 0])
    cube([1, 1, 1.25]);
  translate([220, 46, 0])
    cube([1, 1, 1.25]);
  translate([221, 46, 0])
    cube([1, 1, 1.25]);
  translate([222, 46, 0])
    cube([1, 1, 1.25]);
  translate([223, 46, 0])
    cube([1, 1, 1.25]);
  translate([224, 46, 0])
    cube([1, 1, 1.25]);
  translate([225, 46, 0])
    cube([1, 1, 1.25]);
  translate([226, 46, 0])
    cube([1, 1, 1.25]);
  translate([227, 46, 0])
    cube([1, 1, 1.25]);
  translate([228, 46, 0])
    cube([1, 1, 1.25]);
  translate([229, 46, 0])
    cube([1, 1, 1.25]);
  translate([230, 46, 0])
    cube([1, 1, 1.25]);
  translate([231, 46, 0])
    cube([1, 1, 1.25]);
  translate([232, 46, 0])
    cube([1, 1, 1.25]);
  translate([233, 46, 0])
    cube([1, 1, 1.25]);
  translate([234, 46, 0])
    cube([1, 1, 1.25]);
  translate([235, 46, 0])
    cube([1, 1, 1.25]);
  translate([236, 46, 0])
    cube([1, 1, 1.25]);
  translate([237, 46, 0])
    cube([1, 1, 1.25]);
  translate([238, 46, 0])
    cube([1, 1, 1.25]);
  translate([239, 46, 0])
    cube([1, 1, 1.25]);
  translate([240, 46, 0])
    cube([1, 1, 1.25]);
  translate([241, 46, 0])
    cube([1, 1, 1.25]);
  translate([242, 46, 0])
    cube([1, 1, 1.25]);
  translate([243, 46, 0])
    cube([1, 1, 1.25]);
  translate([244, 46, 0])
    cube([1, 1, 1.25]);
  translate([245, 46, 0])
    cube([1, 1, 1.25]);
  translate([246, 46, 0])
    cube([1, 1, 1.25]);
  translate([0, 47, 0])
    cube([1, 1, 1.41]);
  translate([1, 47, 0])
    cube([1, 1, 1.37]);
  translate([2, 47, 0])
    cube([1, 1, 1.45]);
  translate([3, 47, 0])
    cube([1, 1, 1.41]);
  translate([4, 47, 0])
    cube([1, 1, 1.37]);
  translate([5, 47, 0])
    cube([1, 1, 1.41]);
  translate([6, 47, 0])
    cube([1, 1, 1.37]);
  translate([7, 47, 0])
    cube([1, 1, 1.37]);
  translate([8, 47, 0])
    cube([1, 1, 1.41]);
  translate([9, 47, 0])
    cube([1, 1, 1.37]);
  translate([10, 47, 0])
    cube([1, 1, 1.37]);
  translate([11, 47, 0])
    cube([1, 1, 1.41]);
  translate([12, 47, 0])
    cube([1, 1, 1.37]);
  translate([13, 47, 0])
    cube([1, 1, 1.37]);
  translate([14, 47, 0])
    cube([1, 1, 0.86]);
  translate([15, 47, 0])
    cube([1, 1, 3.25]);
  translate([16, 47, 0])
    cube([1, 1, 0.59]);
  translate([17, 47, 0])
    cube([1, 1, 0.78]);
  translate([18, 47, 0])
    cube([1, 1, 0.98]);
  translate([19, 47, 0])
    cube([1, 1, 0.94]);
  translate([20, 47, 0])
    cube([1, 1, 0.86]);
  translate([21, 47, 0])
    cube([1, 1, 0.90]);
  translate([22, 47, 0])
    cube([1, 1, 0.63]);
  translate([23, 47, 0])
    cube([1, 1, 0.71]);
  translate([24, 47, 0])
    cube([1, 1, 0.67]);
  translate([25, 47, 0])
    cube([1, 1, 0.75]);
  translate([26, 47, 0])
    cube([1, 1, 0.75]);
  translate([27, 47, 0])
    cube([1, 1, 0.86]);
  translate([28, 47, 0])
    cube([1, 1, 1.37]);
  translate([29, 47, 0])
    cube([1, 1, 1.37]);
  translate([30, 47, 0])
    cube([1, 1, 1.37]);
  translate([31, 47, 0])
    cube([1, 1, 1.37]);
  translate([32, 47, 0])
    cube([1, 1, 1.37]);
  translate([33, 47, 0])
    cube([1, 1, 1.37]);
  translate([34, 47, 0])
    cube([1, 1, 1.37]);
  translate([35, 47, 0])
    cube([1, 1, 1.37]);
  translate([36, 47, 0])
    cube([1, 1, 1.37]);
  translate([37, 47, 0])
    cube([1, 1, 1.37]);
  translate([38, 47, 0])
    cube([1, 1, 1.37]);
  translate([39, 47, 0])
    cube([1, 1, 1.37]);
  translate([40, 47, 0])
    cube([1, 1, 1.37]);
  translate([41, 47, 0])
    cube([1, 1, 1.37]);
  translate([42, 47, 0])
    cube([1, 1, 1.37]);
  translate([43, 47, 0])
    cube([1, 1, 1.37]);
  translate([44, 47, 0])
    cube([1, 1, 1.37]);
  translate([45, 47, 0])
    cube([1, 1, 1.37]);
  translate([46, 47, 0])
    cube([1, 1, 1.33]);
  translate([47, 47, 0])
    cube([1, 1, 1.33]);
  translate([48, 47, 0])
    cube([1, 1, 1.37]);
  translate([49, 47, 0])
    cube([1, 1, 1.33]);
  translate([50, 47, 0])
    cube([1, 1, 1.33]);
  translate([51, 47, 0])
    cube([1, 1, 1.33]);
  translate([52, 47, 0])
    cube([1, 1, 1.33]);
  translate([53, 47, 0])
    cube([1, 1, 1.37]);
  translate([54, 47, 0])
    cube([1, 1, 1.33]);
  translate([55, 47, 0])
    cube([1, 1, 1.33]);
  translate([56, 47, 0])
    cube([1, 1, 1.33]);
  translate([57, 47, 0])
    cube([1, 1, 1.33]);
  translate([58, 47, 0])
    cube([1, 1, 1.33]);
  translate([59, 47, 0])
    cube([1, 1, 1.33]);
  translate([60, 47, 0])
    cube([1, 1, 1.33]);
  translate([61, 47, 0])
    cube([1, 1, 1.33]);
  translate([62, 47, 0])
    cube([1, 1, 1.33]);
  translate([63, 47, 0])
    cube([1, 1, 1.33]);
  translate([64, 47, 0])
    cube([1, 1, 1.33]);
  translate([65, 47, 0])
    cube([1, 1, 1.33]);
  translate([66, 47, 0])
    cube([1, 1, 1.33]);
  translate([67, 47, 0])
    cube([1, 1, 1.33]);
  translate([68, 47, 0])
    cube([1, 1, 1.33]);
  translate([69, 47, 0])
    cube([1, 1, 1.33]);
  translate([70, 47, 0])
    cube([1, 1, 1.33]);
  translate([71, 47, 0])
    cube([1, 1, 1.33]);
  translate([72, 47, 0])
    cube([1, 1, 1.45]);
  translate([73, 47, 0])
    cube([1, 1, 6.55]);
  translate([74, 47, 0])
    cube([1, 1, 4.90]);
  translate([75, 47, 0])
    cube([1, 1, 1.57]);
  translate([76, 47, 0])
    cube([1, 1, 3.53]);
  translate([77, 47, 0])
    cube([1, 1, 2.94]);
  translate([78, 47, 0])
    cube([1, 1, 2.78]);
  translate([79, 47, 0])
    cube([1, 1, 3.49]);
  translate([80, 47, 0])
    cube([1, 1, 1.18]);
  translate([81, 47, 0])
    cube([1, 1, 1.02]);
  translate([82, 47, 0])
    cube([1, 1, 0.86]);
  translate([83, 47, 0])
    cube([1, 1, 5.06]);
  translate([84, 47, 0])
    cube([1, 1, 1.14]);
  translate([85, 47, 0])
    cube([1, 1, 1.37]);
  translate([86, 47, 0])
    cube([1, 1, 1.18]);
  translate([87, 47, 0])
    cube([1, 1, 0.90]);
  translate([88, 47, 0])
    cube([1, 1, 2.16]);
  translate([89, 47, 0])
    cube([1, 1, 2.35]);
  translate([90, 47, 0])
    cube([1, 1, 0.94]);
  translate([91, 47, 0])
    cube([1, 1, 0.94]);
  translate([92, 47, 0])
    cube([1, 1, 0.90]);
  translate([93, 47, 0])
    cube([1, 1, 1.45]);
  translate([94, 47, 0])
    cube([1, 1, 1.45]);
  translate([95, 47, 0])
    cube([1, 1, 1.45]);
  translate([96, 47, 0])
    cube([1, 1, 1.33]);
  translate([97, 47, 0])
    cube([1, 1, 2.31]);
  translate([98, 47, 0])
    cube([1, 1, 0.63]);
  translate([99, 47, 0])
    cube([1, 1, 2.90]);
  translate([100, 47, 0])
    cube([1, 1, 2.71]);
  translate([101, 47, 0])
    cube([1, 1, 5.25]);
  translate([102, 47, 0])
    cube([1, 1, 5.73]);
  translate([103, 47, 0])
    cube([1, 1, 5.96]);
  translate([104, 47, 0])
    cube([1, 1, 6.00]);
  translate([105, 47, 0])
    cube([1, 1, 6.00]);
  translate([106, 47, 0])
    cube([1, 1, 6.04]);
  translate([107, 47, 0])
    cube([1, 1, 5.92]);
  translate([108, 47, 0])
    cube([1, 1, 6.04]);
  translate([109, 47, 0])
    cube([1, 1, 6.00]);
  translate([110, 47, 0])
    cube([1, 1, 6.00]);
  translate([111, 47, 0])
    cube([1, 1, 6.04]);
  translate([112, 47, 0])
    cube([1, 1, 6.04]);
  translate([113, 47, 0])
    cube([1, 1, 5.96]);
  translate([114, 47, 0])
    cube([1, 1, 5.22]);
  translate([115, 47, 0])
    cube([1, 1, 2.90]);
  translate([116, 47, 0])
    cube([1, 1, 0.39]);
  translate([117, 47, 0])
    cube([1, 1, 0.35]);
  translate([118, 47, 0])
    cube([1, 1, 0.27]);
  translate([119, 47, 0])
    cube([1, 1, 1.18]);
  translate([120, 47, 0])
    cube([1, 1, 2.24]);
  translate([121, 47, 0])
    cube([1, 1, 2.47]);
  translate([122, 47, 0])
    cube([1, 1, 1.14]);
  translate([123, 47, 0])
    cube([1, 1, 1.33]);
  translate([124, 47, 0])
    cube([1, 1, 2.27]);
  translate([125, 47, 0])
    cube([1, 1, 2.67]);
  translate([126, 47, 0])
    cube([1, 1, 2.55]);
  translate([127, 47, 0])
    cube([1, 1, 2.67]);
  translate([128, 47, 0])
    cube([1, 1, 1.25]);
  translate([129, 47, 0])
    cube([1, 1, 1.25]);
  translate([130, 47, 0])
    cube([1, 1, 1.25]);
  translate([131, 47, 0])
    cube([1, 1, 1.29]);
  translate([132, 47, 0])
    cube([1, 1, 1.25]);
  translate([133, 47, 0])
    cube([1, 1, 1.25]);
  translate([134, 47, 0])
    cube([1, 1, 1.25]);
  translate([135, 47, 0])
    cube([1, 1, 1.25]);
  translate([136, 47, 0])
    cube([1, 1, 1.29]);
  translate([137, 47, 0])
    cube([1, 1, 1.25]);
  translate([138, 47, 0])
    cube([1, 1, 1.25]);
  translate([139, 47, 0])
    cube([1, 1, 1.25]);
  translate([140, 47, 0])
    cube([1, 1, 1.25]);
  translate([141, 47, 0])
    cube([1, 1, 1.25]);
  translate([142, 47, 0])
    cube([1, 1, 1.25]);
  translate([143, 47, 0])
    cube([1, 1, 1.25]);
  translate([144, 47, 0])
    cube([1, 1, 1.33]);
  translate([145, 47, 0])
    cube([1, 1, 1.29]);
  translate([146, 47, 0])
    cube([1, 1, 1.29]);
  translate([147, 47, 0])
    cube([1, 1, 1.25]);
  translate([148, 47, 0])
    cube([1, 1, 1.25]);
  translate([149, 47, 0])
    cube([1, 1, 1.25]);
  translate([150, 47, 0])
    cube([1, 1, 1.25]);
  translate([151, 47, 0])
    cube([1, 1, 1.25]);
  translate([152, 47, 0])
    cube([1, 1, 1.29]);
  translate([153, 47, 0])
    cube([1, 1, 1.29]);
  translate([154, 47, 0])
    cube([1, 1, 1.29]);
  translate([155, 47, 0])
    cube([1, 1, 1.29]);
  translate([156, 47, 0])
    cube([1, 1, 1.22]);
  translate([157, 47, 0])
    cube([1, 1, 1.29]);
  translate([158, 47, 0])
    cube([1, 1, 1.25]);
  translate([159, 47, 0])
    cube([1, 1, 1.29]);
  translate([160, 47, 0])
    cube([1, 1, 1.29]);
  translate([161, 47, 0])
    cube([1, 1, 1.25]);
  translate([162, 47, 0])
    cube([1, 1, 1.25]);
  translate([163, 47, 0])
    cube([1, 1, 1.25]);
  translate([164, 47, 0])
    cube([1, 1, 1.22]);
  translate([165, 47, 0])
    cube([1, 1, 1.25]);
  translate([166, 47, 0])
    cube([1, 1, 1.25]);
  translate([167, 47, 0])
    cube([1, 1, 1.25]);
  translate([168, 47, 0])
    cube([1, 1, 1.29]);
  translate([169, 47, 0])
    cube([1, 1, 1.25]);
  translate([170, 47, 0])
    cube([1, 1, 1.25]);
  translate([171, 47, 0])
    cube([1, 1, 1.25]);
  translate([172, 47, 0])
    cube([1, 1, 1.25]);
  translate([173, 47, 0])
    cube([1, 1, 1.25]);
  translate([174, 47, 0])
    cube([1, 1, 1.25]);
  translate([175, 47, 0])
    cube([1, 1, 1.25]);
  translate([176, 47, 0])
    cube([1, 1, 1.25]);
  translate([177, 47, 0])
    cube([1, 1, 1.25]);
  translate([178, 47, 0])
    cube([1, 1, 1.25]);
  translate([179, 47, 0])
    cube([1, 1, 1.25]);
  translate([180, 47, 0])
    cube([1, 1, 1.25]);
  translate([181, 47, 0])
    cube([1, 1, 1.25]);
  translate([182, 47, 0])
    cube([1, 1, 1.25]);
  translate([183, 47, 0])
    cube([1, 1, 1.25]);
  translate([184, 47, 0])
    cube([1, 1, 1.25]);
  translate([185, 47, 0])
    cube([1, 1, 1.25]);
  translate([186, 47, 0])
    cube([1, 1, 1.25]);
  translate([187, 47, 0])
    cube([1, 1, 1.25]);
  translate([188, 47, 0])
    cube([1, 1, 1.25]);
  translate([189, 47, 0])
    cube([1, 1, 1.25]);
  translate([190, 47, 0])
    cube([1, 1, 1.25]);
  translate([191, 47, 0])
    cube([1, 1, 1.25]);
  translate([192, 47, 0])
    cube([1, 1, 1.25]);
  translate([193, 47, 0])
    cube([1, 1, 1.25]);
  translate([194, 47, 0])
    cube([1, 1, 1.25]);
  translate([195, 47, 0])
    cube([1, 1, 1.25]);
  translate([196, 47, 0])
    cube([1, 1, 1.25]);
  translate([197, 47, 0])
    cube([1, 1, 1.25]);
  translate([198, 47, 0])
    cube([1, 1, 1.25]);
  translate([199, 47, 0])
    cube([1, 1, 1.25]);
  translate([200, 47, 0])
    cube([1, 1, 1.25]);
  translate([201, 47, 0])
    cube([1, 1, 1.25]);
  translate([202, 47, 0])
    cube([1, 1, 1.25]);
  translate([203, 47, 0])
    cube([1, 1, 1.25]);
  translate([204, 47, 0])
    cube([1, 1, 1.25]);
  translate([205, 47, 0])
    cube([1, 1, 1.25]);
  translate([206, 47, 0])
    cube([1, 1, 1.25]);
  translate([207, 47, 0])
    cube([1, 1, 1.25]);
  translate([208, 47, 0])
    cube([1, 1, 1.25]);
  translate([209, 47, 0])
    cube([1, 1, 1.25]);
  translate([210, 47, 0])
    cube([1, 1, 1.25]);
  translate([211, 47, 0])
    cube([1, 1, 1.25]);
  translate([212, 47, 0])
    cube([1, 1, 1.25]);
  translate([213, 47, 0])
    cube([1, 1, 1.25]);
  translate([214, 47, 0])
    cube([1, 1, 1.25]);
  translate([215, 47, 0])
    cube([1, 1, 1.25]);
  translate([216, 47, 0])
    cube([1, 1, 1.25]);
  translate([217, 47, 0])
    cube([1, 1, 1.25]);
  translate([218, 47, 0])
    cube([1, 1, 1.25]);
  translate([219, 47, 0])
    cube([1, 1, 1.25]);
  translate([220, 47, 0])
    cube([1, 1, 1.25]);
  translate([221, 47, 0])
    cube([1, 1, 1.25]);
  translate([222, 47, 0])
    cube([1, 1, 1.25]);
  translate([223, 47, 0])
    cube([1, 1, 1.25]);
  translate([224, 47, 0])
    cube([1, 1, 1.25]);
  translate([225, 47, 0])
    cube([1, 1, 1.25]);
  translate([226, 47, 0])
    cube([1, 1, 1.25]);
  translate([227, 47, 0])
    cube([1, 1, 1.25]);
  translate([228, 47, 0])
    cube([1, 1, 1.25]);
  translate([229, 47, 0])
    cube([1, 1, 1.25]);
  translate([230, 47, 0])
    cube([1, 1, 1.25]);
  translate([231, 47, 0])
    cube([1, 1, 1.25]);
  translate([232, 47, 0])
    cube([1, 1, 1.25]);
  translate([233, 47, 0])
    cube([1, 1, 1.25]);
  translate([234, 47, 0])
    cube([1, 1, 1.25]);
  translate([235, 47, 0])
    cube([1, 1, 1.25]);
  translate([236, 47, 0])
    cube([1, 1, 1.25]);
  translate([237, 47, 0])
    cube([1, 1, 1.25]);
  translate([238, 47, 0])
    cube([1, 1, 1.25]);
  translate([239, 47, 0])
    cube([1, 1, 1.25]);
  translate([240, 47, 0])
    cube([1, 1, 1.25]);
  translate([241, 47, 0])
    cube([1, 1, 1.25]);
  translate([242, 47, 0])
    cube([1, 1, 1.25]);
  translate([243, 47, 0])
    cube([1, 1, 1.25]);
  translate([244, 47, 0])
    cube([1, 1, 1.25]);
  translate([245, 47, 0])
    cube([1, 1, 1.25]);
  translate([246, 47, 0])
    cube([1, 1, 1.25]);
  translate([0, 48, 0])
    cube([1, 1, 1.45]);
  translate([1, 48, 0])
    cube([1, 1, 1.37]);
  translate([2, 48, 0])
    cube([1, 1, 1.37]);
  translate([3, 48, 0])
    cube([1, 1, 1.41]);
  translate([4, 48, 0])
    cube([1, 1, 1.37]);
  translate([5, 48, 0])
    cube([1, 1, 1.37]);
  translate([6, 48, 0])
    cube([1, 1, 1.37]);
  translate([7, 48, 0])
    cube([1, 1, 1.37]);
  translate([8, 48, 0])
    cube([1, 1, 1.41]);
  translate([9, 48, 0])
    cube([1, 1, 1.33]);
  translate([10, 48, 0])
    cube([1, 1, 1.33]);
  translate([11, 48, 0])
    cube([1, 1, 1.41]);
  translate([12, 48, 0])
    cube([1, 1, 1.41]);
  translate([13, 48, 0])
    cube([1, 1, 1.37]);
  translate([14, 48, 0])
    cube([1, 1, 1.41]);
  translate([15, 48, 0])
    cube([1, 1, 6.00]);
  translate([16, 48, 0])
    cube([1, 1, 1.69]);
  translate([17, 48, 0])
    cube([1, 1, 1.69]);
  translate([18, 48, 0])
    cube([1, 1, 0.71]);
  translate([19, 48, 0])
    cube([1, 1, 0.59]);
  translate([20, 48, 0])
    cube([1, 1, 1.22]);
  translate([21, 48, 0])
    cube([1, 1, 1.02]);
  translate([22, 48, 0])
    cube([1, 1, 0.75]);
  translate([23, 48, 0])
    cube([1, 1, 0.43]);
  translate([24, 48, 0])
    cube([1, 1, 0.75]);
  translate([25, 48, 0])
    cube([1, 1, 0.75]);
  translate([26, 48, 0])
    cube([1, 1, 0.75]);
  translate([27, 48, 0])
    cube([1, 1, 0.63]);
  translate([28, 48, 0])
    cube([1, 1, 1.37]);
  translate([29, 48, 0])
    cube([1, 1, 1.37]);
  translate([30, 48, 0])
    cube([1, 1, 1.37]);
  translate([31, 48, 0])
    cube([1, 1, 1.37]);
  translate([32, 48, 0])
    cube([1, 1, 1.37]);
  translate([33, 48, 0])
    cube([1, 1, 1.37]);
  translate([34, 48, 0])
    cube([1, 1, 1.37]);
  translate([35, 48, 0])
    cube([1, 1, 1.37]);
  translate([36, 48, 0])
    cube([1, 1, 1.37]);
  translate([37, 48, 0])
    cube([1, 1, 1.37]);
  translate([38, 48, 0])
    cube([1, 1, 1.29]);
  translate([39, 48, 0])
    cube([1, 1, 1.29]);
  translate([40, 48, 0])
    cube([1, 1, 1.37]);
  translate([41, 48, 0])
    cube([1, 1, 1.37]);
  translate([42, 48, 0])
    cube([1, 1, 1.37]);
  translate([43, 48, 0])
    cube([1, 1, 1.37]);
  translate([44, 48, 0])
    cube([1, 1, 1.33]);
  translate([45, 48, 0])
    cube([1, 1, 1.37]);
  translate([46, 48, 0])
    cube([1, 1, 1.29]);
  translate([47, 48, 0])
    cube([1, 1, 1.29]);
  translate([48, 48, 0])
    cube([1, 1, 1.37]);
  translate([49, 48, 0])
    cube([1, 1, 1.33]);
  translate([50, 48, 0])
    cube([1, 1, 1.33]);
  translate([51, 48, 0])
    cube([1, 1, 1.29]);
  translate([52, 48, 0])
    cube([1, 1, 1.33]);
  translate([53, 48, 0])
    cube([1, 1, 1.33]);
  translate([54, 48, 0])
    cube([1, 1, 1.33]);
  translate([55, 48, 0])
    cube([1, 1, 1.33]);
  translate([56, 48, 0])
    cube([1, 1, 1.33]);
  translate([57, 48, 0])
    cube([1, 1, 1.33]);
  translate([58, 48, 0])
    cube([1, 1, 1.33]);
  translate([59, 48, 0])
    cube([1, 1, 1.33]);
  translate([60, 48, 0])
    cube([1, 1, 1.33]);
  translate([61, 48, 0])
    cube([1, 1, 1.33]);
  translate([62, 48, 0])
    cube([1, 1, 1.33]);
  translate([63, 48, 0])
    cube([1, 1, 1.33]);
  translate([64, 48, 0])
    cube([1, 1, 1.33]);
  translate([65, 48, 0])
    cube([1, 1, 1.33]);
  translate([66, 48, 0])
    cube([1, 1, 1.33]);
  translate([67, 48, 0])
    cube([1, 1, 1.33]);
  translate([68, 48, 0])
    cube([1, 1, 1.33]);
  translate([69, 48, 0])
    cube([1, 1, 1.33]);
  translate([70, 48, 0])
    cube([1, 1, 1.33]);
  translate([71, 48, 0])
    cube([1, 1, 1.33]);
  translate([72, 48, 0])
    cube([1, 1, 1.33]);
  translate([73, 48, 0])
    cube([1, 1, 1.14]);
  translate([74, 48, 0])
    cube([1, 1, 2.90]);
  translate([75, 48, 0])
    cube([1, 1, 0.59]);
  translate([76, 48, 0])
    cube([1, 1, 1.14]);
  translate([77, 48, 0])
    cube([1, 1, 1.73]);
  translate([78, 48, 0])
    cube([1, 1, 3.45]);
  translate([79, 48, 0])
    cube([1, 1, 1.73]);
  translate([80, 48, 0])
    cube([1, 1, 0.98]);
  translate([81, 48, 0])
    cube([1, 1, 1.18]);
  translate([82, 48, 0])
    cube([1, 1, 0.86]);
  translate([83, 48, 0])
    cube([1, 1, 2.51]);
  translate([84, 48, 0])
    cube([1, 1, 4.75]);
  translate([85, 48, 0])
    cube([1, 1, 1.02]);
  translate([86, 48, 0])
    cube([1, 1, 1.45]);
  translate([87, 48, 0])
    cube([1, 1, 2.31]);
  translate([88, 48, 0])
    cube([1, 1, 1.69]);
  translate([89, 48, 0])
    cube([1, 1, 1.06]);
  translate([90, 48, 0])
    cube([1, 1, 1.02]);
  translate([91, 48, 0])
    cube([1, 1, 1.53]);
  translate([92, 48, 0])
    cube([1, 1, 2.94]);
  translate([93, 48, 0])
    cube([1, 1, 3.80]);
  translate([94, 48, 0])
    cube([1, 1, 1.33]);
  translate([95, 48, 0])
    cube([1, 1, 1.49]);
  translate([96, 48, 0])
    cube([1, 1, 3.45]);
  translate([97, 48, 0])
    cube([1, 1, 4.12]);
  translate([98, 48, 0])
    cube([1, 1, 4.39]);
  translate([99, 48, 0])
    cube([1, 1, 3.18]);
  translate([100, 48, 0])
    cube([1, 1, 1.22]);
  translate([101, 48, 0])
    cube([1, 1, 2.08]);
  translate([102, 48, 0])
    cube([1, 1, 3.02]);
  translate([103, 48, 0])
    cube([1, 1, 5.61]);
  translate([104, 48, 0])
    cube([1, 1, 5.73]);
  translate([105, 48, 0])
    cube([1, 1, 5.61]);
  translate([106, 48, 0])
    cube([1, 1, 5.73]);
  translate([107, 48, 0])
    cube([1, 1, 5.73]);
  translate([108, 48, 0])
    cube([1, 1, 5.84]);
  translate([109, 48, 0])
    cube([1, 1, 5.80]);
  translate([110, 48, 0])
    cube([1, 1, 5.76]);
  translate([111, 48, 0])
    cube([1, 1, 5.73]);
  translate([112, 48, 0])
    cube([1, 1, 5.76]);
  translate([113, 48, 0])
    cube([1, 1, 5.25]);
  translate([114, 48, 0])
    cube([1, 1, 1.80]);
  translate([115, 48, 0])
    cube([1, 1, 0.86]);
  translate([116, 48, 0])
    cube([1, 1, 0.71]);
  translate([117, 48, 0])
    cube([1, 1, 0.82]);
  translate([118, 48, 0])
    cube([1, 1, 0.59]);
  translate([119, 48, 0])
    cube([1, 1, 1.22]);
  translate([120, 48, 0])
    cube([1, 1, 1.53]);
  translate([121, 48, 0])
    cube([1, 1, 1.76]);
  translate([122, 48, 0])
    cube([1, 1, 0.94]);
  translate([123, 48, 0])
    cube([1, 1, 1.06]);
  translate([124, 48, 0])
    cube([1, 1, 4.04]);
  translate([125, 48, 0])
    cube([1, 1, 1.41]);
  translate([126, 48, 0])
    cube([1, 1, 3.18]);
  translate([127, 48, 0])
    cube([1, 1, 1.25]);
  translate([128, 48, 0])
    cube([1, 1, 1.33]);
  translate([129, 48, 0])
    cube([1, 1, 1.29]);
  translate([130, 48, 0])
    cube([1, 1, 1.29]);
  translate([131, 48, 0])
    cube([1, 1, 1.25]);
  translate([132, 48, 0])
    cube([1, 1, 1.25]);
  translate([133, 48, 0])
    cube([1, 1, 1.29]);
  translate([134, 48, 0])
    cube([1, 1, 1.25]);
  translate([135, 48, 0])
    cube([1, 1, 1.25]);
  translate([136, 48, 0])
    cube([1, 1, 1.29]);
  translate([137, 48, 0])
    cube([1, 1, 1.25]);
  translate([138, 48, 0])
    cube([1, 1, 1.25]);
  translate([139, 48, 0])
    cube([1, 1, 1.25]);
  translate([140, 48, 0])
    cube([1, 1, 1.29]);
  translate([141, 48, 0])
    cube([1, 1, 1.29]);
  translate([142, 48, 0])
    cube([1, 1, 1.29]);
  translate([143, 48, 0])
    cube([1, 1, 1.29]);
  translate([144, 48, 0])
    cube([1, 1, 1.29]);
  translate([145, 48, 0])
    cube([1, 1, 1.25]);
  translate([146, 48, 0])
    cube([1, 1, 1.25]);
  translate([147, 48, 0])
    cube([1, 1, 1.29]);
  translate([148, 48, 0])
    cube([1, 1, 1.25]);
  translate([149, 48, 0])
    cube([1, 1, 1.25]);
  translate([150, 48, 0])
    cube([1, 1, 1.25]);
  translate([151, 48, 0])
    cube([1, 1, 1.25]);
  translate([152, 48, 0])
    cube([1, 1, 1.29]);
  translate([153, 48, 0])
    cube([1, 1, 1.25]);
  translate([154, 48, 0])
    cube([1, 1, 1.25]);
  translate([155, 48, 0])
    cube([1, 1, 1.25]);
  translate([156, 48, 0])
    cube([1, 1, 1.25]);
  translate([157, 48, 0])
    cube([1, 1, 1.29]);
  translate([158, 48, 0])
    cube([1, 1, 1.22]);
  translate([159, 48, 0])
    cube([1, 1, 1.29]);
  translate([160, 48, 0])
    cube([1, 1, 1.22]);
  translate([161, 48, 0])
    cube([1, 1, 1.22]);
  translate([162, 48, 0])
    cube([1, 1, 1.22]);
  translate([163, 48, 0])
    cube([1, 1, 1.29]);
  translate([164, 48, 0])
    cube([1, 1, 1.25]);
  translate([165, 48, 0])
    cube([1, 1, 1.25]);
  translate([166, 48, 0])
    cube([1, 1, 1.29]);
  translate([167, 48, 0])
    cube([1, 1, 1.25]);
  translate([168, 48, 0])
    cube([1, 1, 1.25]);
  translate([169, 48, 0])
    cube([1, 1, 1.25]);
  translate([170, 48, 0])
    cube([1, 1, 1.25]);
  translate([171, 48, 0])
    cube([1, 1, 1.25]);
  translate([172, 48, 0])
    cube([1, 1, 1.25]);
  translate([173, 48, 0])
    cube([1, 1, 1.25]);
  translate([174, 48, 0])
    cube([1, 1, 1.25]);
  translate([175, 48, 0])
    cube([1, 1, 1.25]);
  translate([176, 48, 0])
    cube([1, 1, 1.25]);
  translate([177, 48, 0])
    cube([1, 1, 1.25]);
  translate([178, 48, 0])
    cube([1, 1, 1.25]);
  translate([179, 48, 0])
    cube([1, 1, 1.25]);
  translate([180, 48, 0])
    cube([1, 1, 1.25]);
  translate([181, 48, 0])
    cube([1, 1, 1.25]);
  translate([182, 48, 0])
    cube([1, 1, 1.25]);
  translate([183, 48, 0])
    cube([1, 1, 1.25]);
  translate([184, 48, 0])
    cube([1, 1, 1.25]);
  translate([185, 48, 0])
    cube([1, 1, 1.25]);
  translate([186, 48, 0])
    cube([1, 1, 1.25]);
  translate([187, 48, 0])
    cube([1, 1, 1.25]);
  translate([188, 48, 0])
    cube([1, 1, 1.25]);
  translate([189, 48, 0])
    cube([1, 1, 1.25]);
  translate([190, 48, 0])
    cube([1, 1, 1.25]);
  translate([191, 48, 0])
    cube([1, 1, 1.25]);
  translate([192, 48, 0])
    cube([1, 1, 1.25]);
  translate([193, 48, 0])
    cube([1, 1, 1.25]);
  translate([194, 48, 0])
    cube([1, 1, 1.25]);
  translate([195, 48, 0])
    cube([1, 1, 1.25]);
  translate([196, 48, 0])
    cube([1, 1, 1.25]);
  translate([197, 48, 0])
    cube([1, 1, 1.25]);
  translate([198, 48, 0])
    cube([1, 1, 1.25]);
  translate([199, 48, 0])
    cube([1, 1, 1.25]);
  translate([200, 48, 0])
    cube([1, 1, 1.25]);
  translate([201, 48, 0])
    cube([1, 1, 1.25]);
  translate([202, 48, 0])
    cube([1, 1, 1.25]);
  translate([203, 48, 0])
    cube([1, 1, 1.25]);
  translate([204, 48, 0])
    cube([1, 1, 1.25]);
  translate([205, 48, 0])
    cube([1, 1, 1.25]);
  translate([206, 48, 0])
    cube([1, 1, 1.25]);
  translate([207, 48, 0])
    cube([1, 1, 1.25]);
  translate([208, 48, 0])
    cube([1, 1, 1.25]);
  translate([209, 48, 0])
    cube([1, 1, 1.25]);
  translate([210, 48, 0])
    cube([1, 1, 1.25]);
  translate([211, 48, 0])
    cube([1, 1, 1.25]);
  translate([212, 48, 0])
    cube([1, 1, 1.25]);
  translate([213, 48, 0])
    cube([1, 1, 1.25]);
  translate([214, 48, 0])
    cube([1, 1, 1.25]);
  translate([215, 48, 0])
    cube([1, 1, 1.25]);
  translate([216, 48, 0])
    cube([1, 1, 1.25]);
  translate([217, 48, 0])
    cube([1, 1, 1.25]);
  translate([218, 48, 0])
    cube([1, 1, 1.25]);
  translate([219, 48, 0])
    cube([1, 1, 1.25]);
  translate([220, 48, 0])
    cube([1, 1, 1.25]);
  translate([221, 48, 0])
    cube([1, 1, 1.25]);
  translate([222, 48, 0])
    cube([1, 1, 1.25]);
  translate([223, 48, 0])
    cube([1, 1, 1.25]);
  translate([224, 48, 0])
    cube([1, 1, 1.25]);
  translate([225, 48, 0])
    cube([1, 1, 1.25]);
  translate([226, 48, 0])
    cube([1, 1, 1.25]);
  translate([227, 48, 0])
    cube([1, 1, 1.25]);
  translate([228, 48, 0])
    cube([1, 1, 1.25]);
  translate([229, 48, 0])
    cube([1, 1, 1.25]);
  translate([230, 48, 0])
    cube([1, 1, 1.25]);
  translate([231, 48, 0])
    cube([1, 1, 1.25]);
  translate([232, 48, 0])
    cube([1, 1, 1.25]);
  translate([233, 48, 0])
    cube([1, 1, 1.25]);
  translate([234, 48, 0])
    cube([1, 1, 1.25]);
  translate([235, 48, 0])
    cube([1, 1, 1.25]);
  translate([236, 48, 0])
    cube([1, 1, 1.25]);
  translate([237, 48, 0])
    cube([1, 1, 1.25]);
  translate([238, 48, 0])
    cube([1, 1, 1.25]);
  translate([239, 48, 0])
    cube([1, 1, 1.25]);
  translate([240, 48, 0])
    cube([1, 1, 1.25]);
  translate([241, 48, 0])
    cube([1, 1, 1.25]);
  translate([242, 48, 0])
    cube([1, 1, 1.25]);
  translate([243, 48, 0])
    cube([1, 1, 1.25]);
  translate([244, 48, 0])
    cube([1, 1, 1.25]);
  translate([245, 48, 0])
    cube([1, 1, 1.25]);
  translate([246, 48, 0])
    cube([1, 1, 1.25]);
  translate([0, 49, 0])
    cube([1, 1, 1.37]);
  translate([1, 49, 0])
    cube([1, 1, 1.41]);
  translate([2, 49, 0])
    cube([1, 1, 1.41]);
  translate([3, 49, 0])
    cube([1, 1, 1.41]);
  translate([4, 49, 0])
    cube([1, 1, 1.37]);
  translate([5, 49, 0])
    cube([1, 1, 1.37]);
  translate([6, 49, 0])
    cube([1, 1, 1.37]);
  translate([7, 49, 0])
    cube([1, 1, 1.37]);
  translate([8, 49, 0])
    cube([1, 1, 1.41]);
  translate([9, 49, 0])
    cube([1, 1, 1.41]);
  translate([10, 49, 0])
    cube([1, 1, 1.41]);
  translate([11, 49, 0])
    cube([1, 1, 1.41]);
  translate([12, 49, 0])
    cube([1, 1, 1.41]);
  translate([13, 49, 0])
    cube([1, 1, 1.37]);
  translate([14, 49, 0])
    cube([1, 1, 1.18]);
  translate([15, 49, 0])
    cube([1, 1, 1.25]);
  translate([16, 49, 0])
    cube([1, 1, 1.49]);
  translate([17, 49, 0])
    cube([1, 1, 1.65]);
  translate([18, 49, 0])
    cube([1, 1, 1.84]);
  translate([19, 49, 0])
    cube([1, 1, 2.20]);
  translate([20, 49, 0])
    cube([1, 1, 0.75]);
  translate([21, 49, 0])
    cube([1, 1, 0.47]);
  translate([22, 49, 0])
    cube([1, 1, 0.90]);
  translate([23, 49, 0])
    cube([1, 1, 0.71]);
  translate([24, 49, 0])
    cube([1, 1, 0.59]);
  translate([25, 49, 0])
    cube([1, 1, 0.75]);
  translate([26, 49, 0])
    cube([1, 1, 0.75]);
  translate([27, 49, 0])
    cube([1, 1, 0.82]);
  translate([28, 49, 0])
    cube([1, 1, 1.37]);
  translate([29, 49, 0])
    cube([1, 1, 1.37]);
  translate([30, 49, 0])
    cube([1, 1, 1.37]);
  translate([31, 49, 0])
    cube([1, 1, 1.37]);
  translate([32, 49, 0])
    cube([1, 1, 1.37]);
  translate([33, 49, 0])
    cube([1, 1, 1.37]);
  translate([34, 49, 0])
    cube([1, 1, 1.37]);
  translate([35, 49, 0])
    cube([1, 1, 1.37]);
  translate([36, 49, 0])
    cube([1, 1, 1.37]);
  translate([37, 49, 0])
    cube([1, 1, 1.37]);
  translate([38, 49, 0])
    cube([1, 1, 1.37]);
  translate([39, 49, 0])
    cube([1, 1, 1.37]);
  translate([40, 49, 0])
    cube([1, 1, 1.37]);
  translate([41, 49, 0])
    cube([1, 1, 1.37]);
  translate([42, 49, 0])
    cube([1, 1, 1.37]);
  translate([43, 49, 0])
    cube([1, 1, 1.37]);
  translate([44, 49, 0])
    cube([1, 1, 1.33]);
  translate([45, 49, 0])
    cube([1, 1, 1.37]);
  translate([46, 49, 0])
    cube([1, 1, 1.33]);
  translate([47, 49, 0])
    cube([1, 1, 1.33]);
  translate([48, 49, 0])
    cube([1, 1, 1.37]);
  translate([49, 49, 0])
    cube([1, 1, 1.33]);
  translate([50, 49, 0])
    cube([1, 1, 1.33]);
  translate([51, 49, 0])
    cube([1, 1, 1.37]);
  translate([52, 49, 0])
    cube([1, 1, 1.33]);
  translate([53, 49, 0])
    cube([1, 1, 1.33]);
  translate([54, 49, 0])
    cube([1, 1, 1.33]);
  translate([55, 49, 0])
    cube([1, 1, 1.33]);
  translate([56, 49, 0])
    cube([1, 1, 1.33]);
  translate([57, 49, 0])
    cube([1, 1, 1.33]);
  translate([58, 49, 0])
    cube([1, 1, 1.33]);
  translate([59, 49, 0])
    cube([1, 1, 1.33]);
  translate([60, 49, 0])
    cube([1, 1, 1.33]);
  translate([61, 49, 0])
    cube([1, 1, 1.33]);
  translate([62, 49, 0])
    cube([1, 1, 1.33]);
  translate([63, 49, 0])
    cube([1, 1, 1.33]);
  translate([64, 49, 0])
    cube([1, 1, 1.33]);
  translate([65, 49, 0])
    cube([1, 1, 1.33]);
  translate([66, 49, 0])
    cube([1, 1, 1.33]);
  translate([67, 49, 0])
    cube([1, 1, 1.33]);
  translate([68, 49, 0])
    cube([1, 1, 1.33]);
  translate([69, 49, 0])
    cube([1, 1, 1.33]);
  translate([70, 49, 0])
    cube([1, 1, 1.33]);
  translate([71, 49, 0])
    cube([1, 1, 1.33]);
  translate([72, 49, 0])
    cube([1, 1, 1.33]);
  translate([73, 49, 0])
    cube([1, 1, 0.98]);
  translate([74, 49, 0])
    cube([1, 1, 3.14]);
  translate([75, 49, 0])
    cube([1, 1, 5.88]);
  translate([76, 49, 0])
    cube([1, 1, 1.88]);
  translate([77, 49, 0])
    cube([1, 1, 1.57]);
  translate([78, 49, 0])
    cube([1, 1, 7.37]);
  translate([79, 49, 0])
    cube([1, 1, 1.02]);
  translate([80, 49, 0])
    cube([1, 1, 1.29]);
  translate([81, 49, 0])
    cube([1, 1, 1.06]);
  translate([82, 49, 0])
    cube([1, 1, 1.49]);
  translate([83, 49, 0])
    cube([1, 1, 1.02]);
  translate([84, 49, 0])
    cube([1, 1, 0.63]);
  translate([85, 49, 0])
    cube([1, 1, 1.22]);
  translate([86, 49, 0])
    cube([1, 1, 3.69]);
  translate([87, 49, 0])
    cube([1, 1, 1.25]);
  translate([88, 49, 0])
    cube([1, 1, 1.29]);
  translate([89, 49, 0])
    cube([1, 1, 1.33]);
  translate([90, 49, 0])
    cube([1, 1, 1.02]);
  translate([91, 49, 0])
    cube([1, 1, 4.00]);
  translate([92, 49, 0])
    cube([1, 1, 2.78]);
  translate([93, 49, 0])
    cube([1, 1, 3.14]);
  translate([94, 49, 0])
    cube([1, 1, 1.25]);
  translate([95, 49, 0])
    cube([1, 1, 1.41]);
  translate([96, 49, 0])
    cube([1, 1, 2.47]);
  translate([97, 49, 0])
    cube([1, 1, 3.10]);
  translate([98, 49, 0])
    cube([1, 1, 3.65]);
  translate([99, 49, 0])
    cube([1, 1, 3.33]);
  translate([100, 49, 0])
    cube([1, 1, 3.33]);
  translate([101, 49, 0])
    cube([1, 1, 1.33]);
  translate([102, 49, 0])
    cube([1, 1, 0.98]);
  translate([103, 49, 0])
    cube([1, 1, 0.67]);
  translate([104, 49, 0])
    cube([1, 1, 4.12]);
  translate([105, 49, 0])
    cube([1, 1, 5.22]);
  translate([106, 49, 0])
    cube([1, 1, 5.41]);
  translate([107, 49, 0])
    cube([1, 1, 5.57]);
  translate([108, 49, 0])
    cube([1, 1, 5.53]);
  translate([109, 49, 0])
    cube([1, 1, 5.57]);
  translate([110, 49, 0])
    cube([1, 1, 5.33]);
  translate([111, 49, 0])
    cube([1, 1, 5.65]);
  translate([112, 49, 0])
    cube([1, 1, 2.82]);
  translate([113, 49, 0])
    cube([1, 1, 1.33]);
  translate([114, 49, 0])
    cube([1, 1, 1.14]);
  translate([115, 49, 0])
    cube([1, 1, 1.80]);
  translate([116, 49, 0])
    cube([1, 1, 0.71]);
  translate([117, 49, 0])
    cube([1, 1, 0.71]);
  translate([118, 49, 0])
    cube([1, 1, 0.86]);
  translate([119, 49, 0])
    cube([1, 1, 1.25]);
  translate([120, 49, 0])
    cube([1, 1, 1.61]);
  translate([121, 49, 0])
    cube([1, 1, 2.24]);
  translate([122, 49, 0])
    cube([1, 1, 0.94]);
  translate([123, 49, 0])
    cube([1, 1, 1.37]);
  translate([124, 49, 0])
    cube([1, 1, 4.59]);
  translate([125, 49, 0])
    cube([1, 1, 1.37]);
  translate([126, 49, 0])
    cube([1, 1, 3.53]);
  translate([127, 49, 0])
    cube([1, 1, 1.18]);
  translate([128, 49, 0])
    cube([1, 1, 1.25]);
  translate([129, 49, 0])
    cube([1, 1, 1.29]);
  translate([130, 49, 0])
    cube([1, 1, 1.29]);
  translate([131, 49, 0])
    cube([1, 1, 1.25]);
  translate([132, 49, 0])
    cube([1, 1, 1.25]);
  translate([133, 49, 0])
    cube([1, 1, 1.29]);
  translate([134, 49, 0])
    cube([1, 1, 1.29]);
  translate([135, 49, 0])
    cube([1, 1, 1.29]);
  translate([136, 49, 0])
    cube([1, 1, 1.25]);
  translate([137, 49, 0])
    cube([1, 1, 1.25]);
  translate([138, 49, 0])
    cube([1, 1, 1.25]);
  translate([139, 49, 0])
    cube([1, 1, 1.18]);
  translate([140, 49, 0])
    cube([1, 1, 1.29]);
  translate([141, 49, 0])
    cube([1, 1, 1.29]);
  translate([142, 49, 0])
    cube([1, 1, 1.29]);
  translate([143, 49, 0])
    cube([1, 1, 1.29]);
  translate([144, 49, 0])
    cube([1, 1, 1.29]);
  translate([145, 49, 0])
    cube([1, 1, 1.25]);
  translate([146, 49, 0])
    cube([1, 1, 1.25]);
  translate([147, 49, 0])
    cube([1, 1, 1.29]);
  translate([148, 49, 0])
    cube([1, 1, 1.25]);
  translate([149, 49, 0])
    cube([1, 1, 1.25]);
  translate([150, 49, 0])
    cube([1, 1, 1.25]);
  translate([151, 49, 0])
    cube([1, 1, 1.25]);
  translate([152, 49, 0])
    cube([1, 1, 1.29]);
  translate([153, 49, 0])
    cube([1, 1, 1.25]);
  translate([154, 49, 0])
    cube([1, 1, 1.25]);
  translate([155, 49, 0])
    cube([1, 1, 1.25]);
  translate([156, 49, 0])
    cube([1, 1, 1.25]);
  translate([157, 49, 0])
    cube([1, 1, 1.29]);
  translate([158, 49, 0])
    cube([1, 1, 1.22]);
  translate([159, 49, 0])
    cube([1, 1, 1.29]);
  translate([160, 49, 0])
    cube([1, 1, 1.22]);
  translate([161, 49, 0])
    cube([1, 1, 1.29]);
  translate([162, 49, 0])
    cube([1, 1, 1.29]);
  translate([163, 49, 0])
    cube([1, 1, 1.29]);
  translate([164, 49, 0])
    cube([1, 1, 1.25]);
  translate([165, 49, 0])
    cube([1, 1, 1.25]);
  translate([166, 49, 0])
    cube([1, 1, 1.29]);
  translate([167, 49, 0])
    cube([1, 1, 1.25]);
  translate([168, 49, 0])
    cube([1, 1, 1.25]);
  translate([169, 49, 0])
    cube([1, 1, 1.25]);
  translate([170, 49, 0])
    cube([1, 1, 1.25]);
  translate([171, 49, 0])
    cube([1, 1, 1.25]);
  translate([172, 49, 0])
    cube([1, 1, 1.25]);
  translate([173, 49, 0])
    cube([1, 1, 1.25]);
  translate([174, 49, 0])
    cube([1, 1, 1.25]);
  translate([175, 49, 0])
    cube([1, 1, 1.25]);
  translate([176, 49, 0])
    cube([1, 1, 1.25]);
  translate([177, 49, 0])
    cube([1, 1, 1.25]);
  translate([178, 49, 0])
    cube([1, 1, 1.25]);
  translate([179, 49, 0])
    cube([1, 1, 1.25]);
  translate([180, 49, 0])
    cube([1, 1, 1.25]);
  translate([181, 49, 0])
    cube([1, 1, 1.25]);
  translate([182, 49, 0])
    cube([1, 1, 1.25]);
  translate([183, 49, 0])
    cube([1, 1, 1.25]);
  translate([184, 49, 0])
    cube([1, 1, 1.25]);
  translate([185, 49, 0])
    cube([1, 1, 1.25]);
  translate([186, 49, 0])
    cube([1, 1, 1.25]);
  translate([187, 49, 0])
    cube([1, 1, 1.25]);
  translate([188, 49, 0])
    cube([1, 1, 1.25]);
  translate([189, 49, 0])
    cube([1, 1, 1.25]);
  translate([190, 49, 0])
    cube([1, 1, 1.25]);
  translate([191, 49, 0])
    cube([1, 1, 1.25]);
  translate([192, 49, 0])
    cube([1, 1, 1.25]);
  translate([193, 49, 0])
    cube([1, 1, 1.25]);
  translate([194, 49, 0])
    cube([1, 1, 1.25]);
  translate([195, 49, 0])
    cube([1, 1, 1.25]);
  translate([196, 49, 0])
    cube([1, 1, 1.25]);
  translate([197, 49, 0])
    cube([1, 1, 1.25]);
  translate([198, 49, 0])
    cube([1, 1, 1.25]);
  translate([199, 49, 0])
    cube([1, 1, 1.25]);
  translate([200, 49, 0])
    cube([1, 1, 1.25]);
  translate([201, 49, 0])
    cube([1, 1, 1.25]);
  translate([202, 49, 0])
    cube([1, 1, 1.25]);
  translate([203, 49, 0])
    cube([1, 1, 1.25]);
  translate([204, 49, 0])
    cube([1, 1, 1.25]);
  translate([205, 49, 0])
    cube([1, 1, 1.25]);
  translate([206, 49, 0])
    cube([1, 1, 1.25]);
  translate([207, 49, 0])
    cube([1, 1, 1.25]);
  translate([208, 49, 0])
    cube([1, 1, 1.25]);
  translate([209, 49, 0])
    cube([1, 1, 1.25]);
  translate([210, 49, 0])
    cube([1, 1, 1.25]);
  translate([211, 49, 0])
    cube([1, 1, 1.25]);
  translate([212, 49, 0])
    cube([1, 1, 1.25]);
  translate([213, 49, 0])
    cube([1, 1, 1.25]);
  translate([214, 49, 0])
    cube([1, 1, 1.25]);
  translate([215, 49, 0])
    cube([1, 1, 1.25]);
  translate([216, 49, 0])
    cube([1, 1, 1.25]);
  translate([217, 49, 0])
    cube([1, 1, 1.25]);
  translate([218, 49, 0])
    cube([1, 1, 1.25]);
  translate([219, 49, 0])
    cube([1, 1, 1.25]);
  translate([220, 49, 0])
    cube([1, 1, 1.25]);
  translate([221, 49, 0])
    cube([1, 1, 1.25]);
  translate([222, 49, 0])
    cube([1, 1, 1.25]);
  translate([223, 49, 0])
    cube([1, 1, 1.25]);
  translate([224, 49, 0])
    cube([1, 1, 1.25]);
  translate([225, 49, 0])
    cube([1, 1, 1.25]);
  translate([226, 49, 0])
    cube([1, 1, 1.25]);
  translate([227, 49, 0])
    cube([1, 1, 1.25]);
  translate([228, 49, 0])
    cube([1, 1, 1.25]);
  translate([229, 49, 0])
    cube([1, 1, 1.25]);
  translate([230, 49, 0])
    cube([1, 1, 1.25]);
  translate([231, 49, 0])
    cube([1, 1, 1.25]);
  translate([232, 49, 0])
    cube([1, 1, 1.25]);
  translate([233, 49, 0])
    cube([1, 1, 1.25]);
  translate([234, 49, 0])
    cube([1, 1, 1.25]);
  translate([235, 49, 0])
    cube([1, 1, 1.25]);
  translate([236, 49, 0])
    cube([1, 1, 1.25]);
  translate([237, 49, 0])
    cube([1, 1, 1.25]);
  translate([238, 49, 0])
    cube([1, 1, 1.25]);
  translate([239, 49, 0])
    cube([1, 1, 1.25]);
  translate([240, 49, 0])
    cube([1, 1, 1.25]);
  translate([241, 49, 0])
    cube([1, 1, 1.25]);
  translate([242, 49, 0])
    cube([1, 1, 1.25]);
  translate([243, 49, 0])
    cube([1, 1, 1.25]);
  translate([244, 49, 0])
    cube([1, 1, 1.25]);
  translate([245, 49, 0])
    cube([1, 1, 1.25]);
  translate([246, 49, 0])
    cube([1, 1, 1.25]);
  translate([0, 50, 0])
    cube([1, 1, 1.33]);
  translate([1, 50, 0])
    cube([1, 1, 1.41]);
  translate([2, 50, 0])
    cube([1, 1, 1.41]);
  translate([3, 50, 0])
    cube([1, 1, 1.41]);
  translate([4, 50, 0])
    cube([1, 1, 1.41]);
  translate([5, 50, 0])
    cube([1, 1, 1.41]);
  translate([6, 50, 0])
    cube([1, 1, 1.41]);
  translate([7, 50, 0])
    cube([1, 1, 1.41]);
  translate([8, 50, 0])
    cube([1, 1, 1.41]);
  translate([9, 50, 0])
    cube([1, 1, 1.41]);
  translate([10, 50, 0])
    cube([1, 1, 1.33]);
  translate([11, 50, 0])
    cube([1, 1, 1.41]);
  translate([12, 50, 0])
    cube([1, 1, 1.37]);
  translate([13, 50, 0])
    cube([1, 1, 1.37]);
  translate([14, 50, 0])
    cube([1, 1, 1.41]);
  translate([15, 50, 0])
    cube([1, 1, 1.41]);
  translate([16, 50, 0])
    cube([1, 1, 1.41]);
  translate([17, 50, 0])
    cube([1, 1, 2.00]);
  translate([18, 50, 0])
    cube([1, 1, 5.18]);
  translate([19, 50, 0])
    cube([1, 1, 0.51]);
  translate([20, 50, 0])
    cube([1, 1, 0.75]);
  translate([21, 50, 0])
    cube([1, 1, 0.31]);
  translate([22, 50, 0])
    cube([1, 1, 0.47]);
  translate([23, 50, 0])
    cube([1, 1, 0.35]);
  translate([24, 50, 0])
    cube([1, 1, 0.59]);
  translate([25, 50, 0])
    cube([1, 1, 0.71]);
  translate([26, 50, 0])
    cube([1, 1, 0.75]);
  translate([27, 50, 0])
    cube([1, 1, 0.71]);
  translate([28, 50, 0])
    cube([1, 1, 0.98]);
  translate([29, 50, 0])
    cube([1, 1, 1.37]);
  translate([30, 50, 0])
    cube([1, 1, 1.37]);
  translate([31, 50, 0])
    cube([1, 1, 1.37]);
  translate([32, 50, 0])
    cube([1, 1, 1.37]);
  translate([33, 50, 0])
    cube([1, 1, 1.37]);
  translate([34, 50, 0])
    cube([1, 1, 1.37]);
  translate([35, 50, 0])
    cube([1, 1, 1.37]);
  translate([36, 50, 0])
    cube([1, 1, 1.37]);
  translate([37, 50, 0])
    cube([1, 1, 1.37]);
  translate([38, 50, 0])
    cube([1, 1, 1.37]);
  translate([39, 50, 0])
    cube([1, 1, 1.37]);
  translate([40, 50, 0])
    cube([1, 1, 1.37]);
  translate([41, 50, 0])
    cube([1, 1, 1.37]);
  translate([42, 50, 0])
    cube([1, 1, 1.37]);
  translate([43, 50, 0])
    cube([1, 1, 1.37]);
  translate([44, 50, 0])
    cube([1, 1, 1.37]);
  translate([45, 50, 0])
    cube([1, 1, 1.37]);
  translate([46, 50, 0])
    cube([1, 1, 1.29]);
  translate([47, 50, 0])
    cube([1, 1, 1.29]);
  translate([48, 50, 0])
    cube([1, 1, 1.41]);
  translate([49, 50, 0])
    cube([1, 1, 1.33]);
  translate([50, 50, 0])
    cube([1, 1, 1.33]);
  translate([51, 50, 0])
    cube([1, 1, 1.41]);
  translate([52, 50, 0])
    cube([1, 1, 1.33]);
  translate([53, 50, 0])
    cube([1, 1, 1.33]);
  translate([54, 50, 0])
    cube([1, 1, 1.33]);
  translate([55, 50, 0])
    cube([1, 1, 1.33]);
  translate([56, 50, 0])
    cube([1, 1, 1.33]);
  translate([57, 50, 0])
    cube([1, 1, 1.33]);
  translate([58, 50, 0])
    cube([1, 1, 1.33]);
  translate([59, 50, 0])
    cube([1, 1, 1.33]);
  translate([60, 50, 0])
    cube([1, 1, 1.33]);
  translate([61, 50, 0])
    cube([1, 1, 1.33]);
  translate([62, 50, 0])
    cube([1, 1, 1.33]);
  translate([63, 50, 0])
    cube([1, 1, 1.33]);
  translate([64, 50, 0])
    cube([1, 1, 1.33]);
  translate([65, 50, 0])
    cube([1, 1, 1.33]);
  translate([66, 50, 0])
    cube([1, 1, 1.33]);
  translate([67, 50, 0])
    cube([1, 1, 1.33]);
  translate([68, 50, 0])
    cube([1, 1, 1.33]);
  translate([69, 50, 0])
    cube([1, 1, 1.33]);
  translate([70, 50, 0])
    cube([1, 1, 1.33]);
  translate([71, 50, 0])
    cube([1, 1, 1.33]);
  translate([72, 50, 0])
    cube([1, 1, 1.33]);
  translate([73, 50, 0])
    cube([1, 1, 1.29]);
  translate([74, 50, 0])
    cube([1, 1, 1.33]);
  translate([75, 50, 0])
    cube([1, 1, 2.82]);
  translate([76, 50, 0])
    cube([1, 1, 3.37]);
  translate([77, 50, 0])
    cube([1, 1, 2.78]);
  translate([78, 50, 0])
    cube([1, 1, 6.71]);
  translate([79, 50, 0])
    cube([1, 1, 1.06]);
  translate([80, 50, 0])
    cube([1, 1, 1.02]);
  translate([81, 50, 0])
    cube([1, 1, 0.55]);
  translate([82, 50, 0])
    cube([1, 1, 7.76]);
  translate([83, 50, 0])
    cube([1, 1, 1.18]);
  translate([84, 50, 0])
    cube([1, 1, 1.18]);
  translate([85, 50, 0])
    cube([1, 1, 5.33]);
  translate([86, 50, 0])
    cube([1, 1, 1.25]);
  translate([87, 50, 0])
    cube([1, 1, 1.02]);
  translate([88, 50, 0])
    cube([1, 1, 1.22]);
  translate([89, 50, 0])
    cube([1, 1, 0.94]);
  translate([90, 50, 0])
    cube([1, 1, 1.33]);
  translate([91, 50, 0])
    cube([1, 1, 2.24]);
  translate([92, 50, 0])
    cube([1, 1, 2.86]);
  translate([93, 50, 0])
    cube([1, 1, 1.22]);
  translate([94, 50, 0])
    cube([1, 1, 1.49]);
  translate([95, 50, 0])
    cube([1, 1, 1.45]);
  translate([96, 50, 0])
    cube([1, 1, 0.43]);
  translate([97, 50, 0])
    cube([1, 1, 0.94]);
  translate([98, 50, 0])
    cube([1, 1, 0.98]);
  translate([99, 50, 0])
    cube([1, 1, 0.86]);
  translate([100, 50, 0])
    cube([1, 1, 1.37]);
  translate([101, 50, 0])
    cube([1, 1, 2.08]);
  translate([102, 50, 0])
    cube([1, 1, 2.39]);
  translate([103, 50, 0])
    cube([1, 1, 1.53]);
  translate([104, 50, 0])
    cube([1, 1, 1.33]);
  translate([105, 50, 0])
    cube([1, 1, 4.39]);
  translate([106, 50, 0])
    cube([1, 1, 5.06]);
  translate([107, 50, 0])
    cube([1, 1, 5.25]);
  translate([108, 50, 0])
    cube([1, 1, 5.18]);
  translate([109, 50, 0])
    cube([1, 1, 5.25]);
  translate([110, 50, 0])
    cube([1, 1, 4.75]);
  translate([111, 50, 0])
    cube([1, 1, 1.14]);
  translate([112, 50, 0])
    cube([1, 1, 2.08]);
  translate([113, 50, 0])
    cube([1, 1, 1.76]);
  translate([114, 50, 0])
    cube([1, 1, 1.18]);
  translate([115, 50, 0])
    cube([1, 1, 0.43]);
  translate([116, 50, 0])
    cube([1, 1, 0.24]);
  translate([117, 50, 0])
    cube([1, 1, 0.67]);
  translate([118, 50, 0])
    cube([1, 1, 1.10]);
  translate([119, 50, 0])
    cube([1, 1, 1.49]);
  translate([120, 50, 0])
    cube([1, 1, 1.76]);
  translate([121, 50, 0])
    cube([1, 1, 2.08]);
  translate([122, 50, 0])
    cube([1, 1, 0.75]);
  translate([123, 50, 0])
    cube([1, 1, 1.29]);
  translate([124, 50, 0])
    cube([1, 1, 2.90]);
  translate([125, 50, 0])
    cube([1, 1, 1.37]);
  translate([126, 50, 0])
    cube([1, 1, 1.53]);
  translate([127, 50, 0])
    cube([1, 1, 1.29]);
  translate([128, 50, 0])
    cube([1, 1, 1.29]);
  translate([129, 50, 0])
    cube([1, 1, 1.25]);
  translate([130, 50, 0])
    cube([1, 1, 1.25]);
  translate([131, 50, 0])
    cube([1, 1, 1.22]);
  translate([132, 50, 0])
    cube([1, 1, 1.25]);
  translate([133, 50, 0])
    cube([1, 1, 1.29]);
  translate([134, 50, 0])
    cube([1, 1, 1.29]);
  translate([135, 50, 0])
    cube([1, 1, 1.29]);
  translate([136, 50, 0])
    cube([1, 1, 1.29]);
  translate([137, 50, 0])
    cube([1, 1, 1.29]);
  translate([138, 50, 0])
    cube([1, 1, 1.29]);
  translate([139, 50, 0])
    cube([1, 1, 1.29]);
  translate([140, 50, 0])
    cube([1, 1, 1.25]);
  translate([141, 50, 0])
    cube([1, 1, 1.29]);
  translate([142, 50, 0])
    cube([1, 1, 1.22]);
  translate([143, 50, 0])
    cube([1, 1, 1.25]);
  translate([144, 50, 0])
    cube([1, 1, 1.29]);
  translate([145, 50, 0])
    cube([1, 1, 1.25]);
  translate([146, 50, 0])
    cube([1, 1, 1.25]);
  translate([147, 50, 0])
    cube([1, 1, 1.29]);
  translate([148, 50, 0])
    cube([1, 1, 1.29]);
  translate([149, 50, 0])
    cube([1, 1, 1.29]);
  translate([150, 50, 0])
    cube([1, 1, 1.29]);
  translate([151, 50, 0])
    cube([1, 1, 1.25]);
  translate([152, 50, 0])
    cube([1, 1, 1.25]);
  translate([153, 50, 0])
    cube([1, 1, 1.25]);
  translate([154, 50, 0])
    cube([1, 1, 1.29]);
  translate([155, 50, 0])
    cube([1, 1, 1.29]);
  translate([156, 50, 0])
    cube([1, 1, 1.25]);
  translate([157, 50, 0])
    cube([1, 1, 1.25]);
  translate([158, 50, 0])
    cube([1, 1, 1.25]);
  translate([159, 50, 0])
    cube([1, 1, 1.29]);
  translate([160, 50, 0])
    cube([1, 1, 1.25]);
  translate([161, 50, 0])
    cube([1, 1, 1.22]);
  translate([162, 50, 0])
    cube([1, 1, 1.29]);
  translate([163, 50, 0])
    cube([1, 1, 1.29]);
  translate([164, 50, 0])
    cube([1, 1, 1.22]);
  translate([165, 50, 0])
    cube([1, 1, 1.22]);
  translate([166, 50, 0])
    cube([1, 1, 1.22]);
  translate([167, 50, 0])
    cube([1, 1, 1.25]);
  translate([168, 50, 0])
    cube([1, 1, 1.25]);
  translate([169, 50, 0])
    cube([1, 1, 1.25]);
  translate([170, 50, 0])
    cube([1, 1, 1.25]);
  translate([171, 50, 0])
    cube([1, 1, 1.25]);
  translate([172, 50, 0])
    cube([1, 1, 1.25]);
  translate([173, 50, 0])
    cube([1, 1, 1.25]);
  translate([174, 50, 0])
    cube([1, 1, 1.25]);
  translate([175, 50, 0])
    cube([1, 1, 1.25]);
  translate([176, 50, 0])
    cube([1, 1, 1.29]);
  translate([177, 50, 0])
    cube([1, 1, 1.22]);
  translate([178, 50, 0])
    cube([1, 1, 1.25]);
  translate([179, 50, 0])
    cube([1, 1, 1.29]);
  translate([180, 50, 0])
    cube([1, 1, 1.25]);
  translate([181, 50, 0])
    cube([1, 1, 1.25]);
  translate([182, 50, 0])
    cube([1, 1, 1.25]);
  translate([183, 50, 0])
    cube([1, 1, 1.25]);
  translate([184, 50, 0])
    cube([1, 1, 1.25]);
  translate([185, 50, 0])
    cube([1, 1, 1.25]);
  translate([186, 50, 0])
    cube([1, 1, 1.25]);
  translate([187, 50, 0])
    cube([1, 1, 1.25]);
  translate([188, 50, 0])
    cube([1, 1, 1.25]);
  translate([189, 50, 0])
    cube([1, 1, 1.25]);
  translate([190, 50, 0])
    cube([1, 1, 1.25]);
  translate([191, 50, 0])
    cube([1, 1, 1.25]);
  translate([192, 50, 0])
    cube([1, 1, 1.25]);
  translate([193, 50, 0])
    cube([1, 1, 1.25]);
  translate([194, 50, 0])
    cube([1, 1, 1.25]);
  translate([195, 50, 0])
    cube([1, 1, 1.25]);
  translate([196, 50, 0])
    cube([1, 1, 1.25]);
  translate([197, 50, 0])
    cube([1, 1, 1.25]);
  translate([198, 50, 0])
    cube([1, 1, 1.25]);
  translate([199, 50, 0])
    cube([1, 1, 1.25]);
  translate([200, 50, 0])
    cube([1, 1, 1.25]);
  translate([201, 50, 0])
    cube([1, 1, 1.25]);
  translate([202, 50, 0])
    cube([1, 1, 1.25]);
  translate([203, 50, 0])
    cube([1, 1, 1.25]);
  translate([204, 50, 0])
    cube([1, 1, 1.25]);
  translate([205, 50, 0])
    cube([1, 1, 1.25]);
  translate([206, 50, 0])
    cube([1, 1, 1.25]);
  translate([207, 50, 0])
    cube([1, 1, 1.25]);
  translate([208, 50, 0])
    cube([1, 1, 1.25]);
  translate([209, 50, 0])
    cube([1, 1, 1.25]);
  translate([210, 50, 0])
    cube([1, 1, 1.25]);
  translate([211, 50, 0])
    cube([1, 1, 1.25]);
  translate([212, 50, 0])
    cube([1, 1, 1.25]);
  translate([213, 50, 0])
    cube([1, 1, 1.25]);
  translate([214, 50, 0])
    cube([1, 1, 1.25]);
  translate([215, 50, 0])
    cube([1, 1, 1.25]);
  translate([216, 50, 0])
    cube([1, 1, 1.25]);
  translate([217, 50, 0])
    cube([1, 1, 1.25]);
  translate([218, 50, 0])
    cube([1, 1, 1.25]);
  translate([219, 50, 0])
    cube([1, 1, 1.25]);
  translate([220, 50, 0])
    cube([1, 1, 1.25]);
  translate([221, 50, 0])
    cube([1, 1, 1.25]);
  translate([222, 50, 0])
    cube([1, 1, 1.25]);
  translate([223, 50, 0])
    cube([1, 1, 1.25]);
  translate([224, 50, 0])
    cube([1, 1, 1.25]);
  translate([225, 50, 0])
    cube([1, 1, 1.25]);
  translate([226, 50, 0])
    cube([1, 1, 1.25]);
  translate([227, 50, 0])
    cube([1, 1, 1.25]);
  translate([228, 50, 0])
    cube([1, 1, 1.25]);
  translate([229, 50, 0])
    cube([1, 1, 1.25]);
  translate([230, 50, 0])
    cube([1, 1, 1.25]);
  translate([231, 50, 0])
    cube([1, 1, 1.25]);
  translate([232, 50, 0])
    cube([1, 1, 1.25]);
  translate([233, 50, 0])
    cube([1, 1, 1.25]);
  translate([234, 50, 0])
    cube([1, 1, 1.25]);
  translate([235, 50, 0])
    cube([1, 1, 1.25]);
  translate([236, 50, 0])
    cube([1, 1, 1.25]);
  translate([237, 50, 0])
    cube([1, 1, 1.25]);
  translate([238, 50, 0])
    cube([1, 1, 1.25]);
  translate([239, 50, 0])
    cube([1, 1, 1.25]);
  translate([240, 50, 0])
    cube([1, 1, 1.25]);
  translate([241, 50, 0])
    cube([1, 1, 1.25]);
  translate([242, 50, 0])
    cube([1, 1, 1.25]);
  translate([243, 50, 0])
    cube([1, 1, 1.25]);
  translate([244, 50, 0])
    cube([1, 1, 1.25]);
  translate([245, 50, 0])
    cube([1, 1, 1.25]);
  translate([246, 50, 0])
    cube([1, 1, 1.25]);
  translate([0, 51, 0])
    cube([1, 1, 1.41]);
  translate([1, 51, 0])
    cube([1, 1, 1.41]);
  translate([2, 51, 0])
    cube([1, 1, 1.41]);
  translate([3, 51, 0])
    cube([1, 1, 1.41]);
  translate([4, 51, 0])
    cube([1, 1, 1.41]);
  translate([5, 51, 0])
    cube([1, 1, 1.41]);
  translate([6, 51, 0])
    cube([1, 1, 1.41]);
  translate([7, 51, 0])
    cube([1, 1, 1.41]);
  translate([8, 51, 0])
    cube([1, 1, 1.41]);
  translate([9, 51, 0])
    cube([1, 1, 1.33]);
  translate([10, 51, 0])
    cube([1, 1, 1.41]);
  translate([11, 51, 0])
    cube([1, 1, 1.41]);
  translate([12, 51, 0])
    cube([1, 1, 1.45]);
  translate([13, 51, 0])
    cube([1, 1, 1.45]);
  translate([14, 51, 0])
    cube([1, 1, 1.41]);
  translate([15, 51, 0])
    cube([1, 1, 1.41]);
  translate([16, 51, 0])
    cube([1, 1, 5.76]);
  translate([17, 51, 0])
    cube([1, 1, 1.25]);
  translate([18, 51, 0])
    cube([1, 1, 2.59]);
  translate([19, 51, 0])
    cube([1, 1, 1.41]);
  translate([20, 51, 0])
    cube([1, 1, 0.31]);
  translate([21, 51, 0])
    cube([1, 1, 0.47]);
  translate([22, 51, 0])
    cube([1, 1, 1.10]);
  translate([23, 51, 0])
    cube([1, 1, 0.24]);
  translate([24, 51, 0])
    cube([1, 1, 0.94]);
  translate([25, 51, 0])
    cube([1, 1, 0.71]);
  translate([26, 51, 0])
    cube([1, 1, 0.75]);
  translate([27, 51, 0])
    cube([1, 1, 0.71]);
  translate([28, 51, 0])
    cube([1, 1, 0.47]);
  translate([29, 51, 0])
    cube([1, 1, 1.45]);
  translate([30, 51, 0])
    cube([1, 1, 1.37]);
  translate([31, 51, 0])
    cube([1, 1, 1.37]);
  translate([32, 51, 0])
    cube([1, 1, 1.37]);
  translate([33, 51, 0])
    cube([1, 1, 1.37]);
  translate([34, 51, 0])
    cube([1, 1, 1.37]);
  translate([35, 51, 0])
    cube([1, 1, 1.37]);
  translate([36, 51, 0])
    cube([1, 1, 1.37]);
  translate([37, 51, 0])
    cube([1, 1, 1.37]);
  translate([38, 51, 0])
    cube([1, 1, 1.37]);
  translate([39, 51, 0])
    cube([1, 1, 1.37]);
  translate([40, 51, 0])
    cube([1, 1, 1.37]);
  translate([41, 51, 0])
    cube([1, 1, 1.37]);
  translate([42, 51, 0])
    cube([1, 1, 1.37]);
  translate([43, 51, 0])
    cube([1, 1, 1.37]);
  translate([44, 51, 0])
    cube([1, 1, 1.37]);
  translate([45, 51, 0])
    cube([1, 1, 1.37]);
  translate([46, 51, 0])
    cube([1, 1, 1.29]);
  translate([47, 51, 0])
    cube([1, 1, 1.29]);
  translate([48, 51, 0])
    cube([1, 1, 1.41]);
  translate([49, 51, 0])
    cube([1, 1, 1.33]);
  translate([50, 51, 0])
    cube([1, 1, 1.33]);
  translate([51, 51, 0])
    cube([1, 1, 1.41]);
  translate([52, 51, 0])
    cube([1, 1, 1.33]);
  translate([53, 51, 0])
    cube([1, 1, 1.33]);
  translate([54, 51, 0])
    cube([1, 1, 1.33]);
  translate([55, 51, 0])
    cube([1, 1, 1.33]);
  translate([56, 51, 0])
    cube([1, 1, 1.33]);
  translate([57, 51, 0])
    cube([1, 1, 1.33]);
  translate([58, 51, 0])
    cube([1, 1, 1.33]);
  translate([59, 51, 0])
    cube([1, 1, 1.33]);
  translate([60, 51, 0])
    cube([1, 1, 1.33]);
  translate([61, 51, 0])
    cube([1, 1, 1.33]);
  translate([62, 51, 0])
    cube([1, 1, 1.33]);
  translate([63, 51, 0])
    cube([1, 1, 1.33]);
  translate([64, 51, 0])
    cube([1, 1, 1.33]);
  translate([65, 51, 0])
    cube([1, 1, 1.33]);
  translate([66, 51, 0])
    cube([1, 1, 1.33]);
  translate([67, 51, 0])
    cube([1, 1, 1.33]);
  translate([68, 51, 0])
    cube([1, 1, 1.33]);
  translate([69, 51, 0])
    cube([1, 1, 1.33]);
  translate([70, 51, 0])
    cube([1, 1, 1.33]);
  translate([71, 51, 0])
    cube([1, 1, 1.33]);
  translate([72, 51, 0])
    cube([1, 1, 1.33]);
  translate([73, 51, 0])
    cube([1, 1, 1.29]);
  translate([74, 51, 0])
    cube([1, 1, 1.37]);
  translate([75, 51, 0])
    cube([1, 1, 1.14]);
  translate([76, 51, 0])
    cube([1, 1, 6.59]);
  translate([77, 51, 0])
    cube([1, 1, 2.16]);
  translate([78, 51, 0])
    cube([1, 1, 7.14]);
  translate([79, 51, 0])
    cube([1, 1, 0.82]);
  translate([80, 51, 0])
    cube([1, 1, 1.41]);
  translate([81, 51, 0])
    cube([1, 1, 0.59]);
  translate([82, 51, 0])
    cube([1, 1, 4.04]);
  translate([83, 51, 0])
    cube([1, 1, 2.47]);
  translate([84, 51, 0])
    cube([1, 1, 3.65]);
  translate([85, 51, 0])
    cube([1, 1, 3.45]);
  translate([86, 51, 0])
    cube([1, 1, 1.06]);
  translate([87, 51, 0])
    cube([1, 1, 0.90]);
  translate([88, 51, 0])
    cube([1, 1, 1.02]);
  translate([89, 51, 0])
    cube([1, 1, 1.29]);
  translate([90, 51, 0])
    cube([1, 1, 1.22]);
  translate([91, 51, 0])
    cube([1, 1, 1.41]);
  translate([92, 51, 0])
    cube([1, 1, 2.67]);
  translate([93, 51, 0])
    cube([1, 1, 1.18]);
  translate([94, 51, 0])
    cube([1, 1, 1.49]);
  translate([95, 51, 0])
    cube([1, 1, 1.37]);
  translate([96, 51, 0])
    cube([1, 1, 2.98]);
  translate([97, 51, 0])
    cube([1, 1, 0.86]);
  translate([98, 51, 0])
    cube([1, 1, 2.16]);
  translate([99, 51, 0])
    cube([1, 1, 4.47]);
  translate([100, 51, 0])
    cube([1, 1, 3.02]);
  translate([101, 51, 0])
    cube([1, 1, 0.94]);
  translate([102, 51, 0])
    cube([1, 1, 2.59]);
  translate([103, 51, 0])
    cube([1, 1, 3.22]);
  translate([104, 51, 0])
    cube([1, 1, 2.98]);
  translate([105, 51, 0])
    cube([1, 1, 4.04]);
  translate([106, 51, 0])
    cube([1, 1, 4.98]);
  translate([107, 51, 0])
    cube([1, 1, 5.18]);
  translate([108, 51, 0])
    cube([1, 1, 5.37]);
  translate([109, 51, 0])
    cube([1, 1, 4.94]);
  translate([110, 51, 0])
    cube([1, 1, 3.06]);
  translate([111, 51, 0])
    cube([1, 1, 1.14]);
  translate([112, 51, 0])
    cube([1, 1, 0.94]);
  translate([113, 51, 0])
    cube([1, 1, 1.29]);
  translate([114, 51, 0])
    cube([1, 1, 1.65]);
  translate([115, 51, 0])
    cube([1, 1, 0.75]);
  translate([116, 51, 0])
    cube([1, 1, 0.90]);
  translate([117, 51, 0])
    cube([1, 1, 0.59]);
  translate([118, 51, 0])
    cube([1, 1, 1.10]);
  translate([119, 51, 0])
    cube([1, 1, 1.37]);
  translate([120, 51, 0])
    cube([1, 1, 1.25]);
  translate([121, 51, 0])
    cube([1, 1, 2.67]);
  translate([122, 51, 0])
    cube([1, 1, 0.98]);
  translate([123, 51, 0])
    cube([1, 1, 1.22]);
  translate([124, 51, 0])
    cube([1, 1, 2.16]);
  translate([125, 51, 0])
    cube([1, 1, 1.61]);
  translate([126, 51, 0])
    cube([1, 1, 1.57]);
  translate([127, 51, 0])
    cube([1, 1, 1.33]);
  translate([128, 51, 0])
    cube([1, 1, 1.29]);
  translate([129, 51, 0])
    cube([1, 1, 1.25]);
  translate([130, 51, 0])
    cube([1, 1, 1.25]);
  translate([131, 51, 0])
    cube([1, 1, 1.33]);
  translate([132, 51, 0])
    cube([1, 1, 1.29]);
  translate([133, 51, 0])
    cube([1, 1, 1.33]);
  translate([134, 51, 0])
    cube([1, 1, 1.29]);
  translate([135, 51, 0])
    cube([1, 1, 1.29]);
  translate([136, 51, 0])
    cube([1, 1, 1.29]);
  translate([137, 51, 0])
    cube([1, 1, 1.29]);
  translate([138, 51, 0])
    cube([1, 1, 1.29]);
  translate([139, 51, 0])
    cube([1, 1, 1.29]);
  translate([140, 51, 0])
    cube([1, 1, 1.33]);
  translate([141, 51, 0])
    cube([1, 1, 1.25]);
  translate([142, 51, 0])
    cube([1, 1, 1.22]);
  translate([143, 51, 0])
    cube([1, 1, 1.25]);
  translate([144, 51, 0])
    cube([1, 1, 1.29]);
  translate([145, 51, 0])
    cube([1, 1, 1.25]);
  translate([146, 51, 0])
    cube([1, 1, 1.25]);
  translate([147, 51, 0])
    cube([1, 1, 1.29]);
  translate([148, 51, 0])
    cube([1, 1, 1.29]);
  translate([149, 51, 0])
    cube([1, 1, 1.29]);
  translate([150, 51, 0])
    cube([1, 1, 1.29]);
  translate([151, 51, 0])
    cube([1, 1, 1.25]);
  translate([152, 51, 0])
    cube([1, 1, 1.29]);
  translate([153, 51, 0])
    cube([1, 1, 1.18]);
  translate([154, 51, 0])
    cube([1, 1, 1.22]);
  translate([155, 51, 0])
    cube([1, 1, 1.25]);
  translate([156, 51, 0])
    cube([1, 1, 1.25]);
  translate([157, 51, 0])
    cube([1, 1, 1.25]);
  translate([158, 51, 0])
    cube([1, 1, 1.29]);
  translate([159, 51, 0])
    cube([1, 1, 1.25]);
  translate([160, 51, 0])
    cube([1, 1, 1.22]);
  translate([161, 51, 0])
    cube([1, 1, 1.25]);
  translate([162, 51, 0])
    cube([1, 1, 1.25]);
  translate([163, 51, 0])
    cube([1, 1, 1.29]);
  translate([164, 51, 0])
    cube([1, 1, 1.33]);
  translate([165, 51, 0])
    cube([1, 1, 1.33]);
  translate([166, 51, 0])
    cube([1, 1, 1.29]);
  translate([167, 51, 0])
    cube([1, 1, 1.33]);
  translate([168, 51, 0])
    cube([1, 1, 1.25]);
  translate([169, 51, 0])
    cube([1, 1, 1.33]);
  translate([170, 51, 0])
    cube([1, 1, 1.33]);
  translate([171, 51, 0])
    cube([1, 1, 1.25]);
  translate([172, 51, 0])
    cube([1, 1, 1.25]);
  translate([173, 51, 0])
    cube([1, 1, 1.25]);
  translate([174, 51, 0])
    cube([1, 1, 1.29]);
  translate([175, 51, 0])
    cube([1, 1, 1.29]);
  translate([176, 51, 0])
    cube([1, 1, 1.29]);
  translate([177, 51, 0])
    cube([1, 1, 1.22]);
  translate([178, 51, 0])
    cube([1, 1, 1.25]);
  translate([179, 51, 0])
    cube([1, 1, 1.29]);
  translate([180, 51, 0])
    cube([1, 1, 1.25]);
  translate([181, 51, 0])
    cube([1, 1, 1.25]);
  translate([182, 51, 0])
    cube([1, 1, 1.25]);
  translate([183, 51, 0])
    cube([1, 1, 1.25]);
  translate([184, 51, 0])
    cube([1, 1, 1.25]);
  translate([185, 51, 0])
    cube([1, 1, 1.25]);
  translate([186, 51, 0])
    cube([1, 1, 1.25]);
  translate([187, 51, 0])
    cube([1, 1, 1.25]);
  translate([188, 51, 0])
    cube([1, 1, 1.25]);
  translate([189, 51, 0])
    cube([1, 1, 1.25]);
  translate([190, 51, 0])
    cube([1, 1, 1.25]);
  translate([191, 51, 0])
    cube([1, 1, 1.25]);
  translate([192, 51, 0])
    cube([1, 1, 1.25]);
  translate([193, 51, 0])
    cube([1, 1, 1.25]);
  translate([194, 51, 0])
    cube([1, 1, 1.25]);
  translate([195, 51, 0])
    cube([1, 1, 1.25]);
  translate([196, 51, 0])
    cube([1, 1, 1.25]);
  translate([197, 51, 0])
    cube([1, 1, 1.25]);
  translate([198, 51, 0])
    cube([1, 1, 1.25]);
  translate([199, 51, 0])
    cube([1, 1, 1.25]);
  translate([200, 51, 0])
    cube([1, 1, 1.25]);
  translate([201, 51, 0])
    cube([1, 1, 1.25]);
  translate([202, 51, 0])
    cube([1, 1, 1.25]);
  translate([203, 51, 0])
    cube([1, 1, 1.25]);
  translate([204, 51, 0])
    cube([1, 1, 1.25]);
  translate([205, 51, 0])
    cube([1, 1, 1.25]);
  translate([206, 51, 0])
    cube([1, 1, 1.25]);
  translate([207, 51, 0])
    cube([1, 1, 1.25]);
  translate([208, 51, 0])
    cube([1, 1, 1.25]);
  translate([209, 51, 0])
    cube([1, 1, 1.25]);
  translate([210, 51, 0])
    cube([1, 1, 1.25]);
  translate([211, 51, 0])
    cube([1, 1, 1.25]);
  translate([212, 51, 0])
    cube([1, 1, 1.25]);
  translate([213, 51, 0])
    cube([1, 1, 1.25]);
  translate([214, 51, 0])
    cube([1, 1, 1.25]);
  translate([215, 51, 0])
    cube([1, 1, 1.25]);
  translate([216, 51, 0])
    cube([1, 1, 1.25]);
  translate([217, 51, 0])
    cube([1, 1, 1.25]);
  translate([218, 51, 0])
    cube([1, 1, 1.25]);
  translate([219, 51, 0])
    cube([1, 1, 1.25]);
  translate([220, 51, 0])
    cube([1, 1, 1.25]);
  translate([221, 51, 0])
    cube([1, 1, 1.25]);
  translate([222, 51, 0])
    cube([1, 1, 1.25]);
  translate([223, 51, 0])
    cube([1, 1, 1.25]);
  translate([224, 51, 0])
    cube([1, 1, 1.25]);
  translate([225, 51, 0])
    cube([1, 1, 1.25]);
  translate([226, 51, 0])
    cube([1, 1, 1.25]);
  translate([227, 51, 0])
    cube([1, 1, 1.25]);
  translate([228, 51, 0])
    cube([1, 1, 1.25]);
  translate([229, 51, 0])
    cube([1, 1, 1.25]);
  translate([230, 51, 0])
    cube([1, 1, 1.25]);
  translate([231, 51, 0])
    cube([1, 1, 1.25]);
  translate([232, 51, 0])
    cube([1, 1, 1.25]);
  translate([233, 51, 0])
    cube([1, 1, 1.25]);
  translate([234, 51, 0])
    cube([1, 1, 1.25]);
  translate([235, 51, 0])
    cube([1, 1, 1.25]);
  translate([236, 51, 0])
    cube([1, 1, 1.25]);
  translate([237, 51, 0])
    cube([1, 1, 1.25]);
  translate([238, 51, 0])
    cube([1, 1, 1.25]);
  translate([239, 51, 0])
    cube([1, 1, 1.25]);
  translate([240, 51, 0])
    cube([1, 1, 1.25]);
  translate([241, 51, 0])
    cube([1, 1, 1.25]);
  translate([242, 51, 0])
    cube([1, 1, 1.25]);
  translate([243, 51, 0])
    cube([1, 1, 1.25]);
  translate([244, 51, 0])
    cube([1, 1, 1.25]);
  translate([245, 51, 0])
    cube([1, 1, 1.25]);
  translate([246, 51, 0])
    cube([1, 1, 1.25]);
  translate([0, 52, 0])
    cube([1, 1, 1.41]);
  translate([1, 52, 0])
    cube([1, 1, 1.41]);
  translate([2, 52, 0])
    cube([1, 1, 1.41]);
  translate([3, 52, 0])
    cube([1, 1, 1.41]);
  translate([4, 52, 0])
    cube([1, 1, 1.41]);
  translate([5, 52, 0])
    cube([1, 1, 1.41]);
  translate([6, 52, 0])
    cube([1, 1, 1.41]);
  translate([7, 52, 0])
    cube([1, 1, 1.41]);
  translate([8, 52, 0])
    cube([1, 1, 1.41]);
  translate([9, 52, 0])
    cube([1, 1, 1.41]);
  translate([10, 52, 0])
    cube([1, 1, 1.41]);
  translate([11, 52, 0])
    cube([1, 1, 1.41]);
  translate([12, 52, 0])
    cube([1, 1, 1.45]);
  translate([13, 52, 0])
    cube([1, 1, 1.37]);
  translate([14, 52, 0])
    cube([1, 1, 1.41]);
  translate([15, 52, 0])
    cube([1, 1, 1.41]);
  translate([16, 52, 0])
    cube([1, 1, 1.49]);
  translate([17, 52, 0])
    cube([1, 1, 1.57]);
  translate([18, 52, 0])
    cube([1, 1, 1.37]);
  translate([19, 52, 0])
    cube([1, 1, 1.41]);
  translate([20, 52, 0])
    cube([1, 1, 1.14]);
  translate([21, 52, 0])
    cube([1, 1, 0.67]);
  translate([22, 52, 0])
    cube([1, 1, 0.55]);
  translate([23, 52, 0])
    cube([1, 1, 0.82]);
  translate([24, 52, 0])
    cube([1, 1, 0.71]);
  translate([25, 52, 0])
    cube([1, 1, 0.59]);
  translate([26, 52, 0])
    cube([1, 1, 0.82]);
  translate([27, 52, 0])
    cube([1, 1, 0.71]);
  translate([28, 52, 0])
    cube([1, 1, 0.67]);
  translate([29, 52, 0])
    cube([1, 1, 1.45]);
  translate([30, 52, 0])
    cube([1, 1, 1.37]);
  translate([31, 52, 0])
    cube([1, 1, 1.37]);
  translate([32, 52, 0])
    cube([1, 1, 1.37]);
  translate([33, 52, 0])
    cube([1, 1, 1.37]);
  translate([34, 52, 0])
    cube([1, 1, 1.37]);
  translate([35, 52, 0])
    cube([1, 1, 1.37]);
  translate([36, 52, 0])
    cube([1, 1, 1.37]);
  translate([37, 52, 0])
    cube([1, 1, 1.37]);
  translate([38, 52, 0])
    cube([1, 1, 1.37]);
  translate([39, 52, 0])
    cube([1, 1, 1.37]);
  translate([40, 52, 0])
    cube([1, 1, 1.37]);
  translate([41, 52, 0])
    cube([1, 1, 1.37]);
  translate([42, 52, 0])
    cube([1, 1, 1.37]);
  translate([43, 52, 0])
    cube([1, 1, 1.37]);
  translate([44, 52, 0])
    cube([1, 1, 1.37]);
  translate([45, 52, 0])
    cube([1, 1, 1.37]);
  translate([46, 52, 0])
    cube([1, 1, 1.37]);
  translate([47, 52, 0])
    cube([1, 1, 1.37]);
  translate([48, 52, 0])
    cube([1, 1, 1.37]);
  translate([49, 52, 0])
    cube([1, 1, 1.37]);
  translate([50, 52, 0])
    cube([1, 1, 1.37]);
  translate([51, 52, 0])
    cube([1, 1, 1.33]);
  translate([52, 52, 0])
    cube([1, 1, 1.33]);
  translate([53, 52, 0])
    cube([1, 1, 1.33]);
  translate([54, 52, 0])
    cube([1, 1, 1.33]);
  translate([55, 52, 0])
    cube([1, 1, 1.33]);
  translate([56, 52, 0])
    cube([1, 1, 1.33]);
  translate([57, 52, 0])
    cube([1, 1, 1.33]);
  translate([58, 52, 0])
    cube([1, 1, 1.33]);
  translate([59, 52, 0])
    cube([1, 1, 1.33]);
  translate([60, 52, 0])
    cube([1, 1, 1.33]);
  translate([61, 52, 0])
    cube([1, 1, 1.33]);
  translate([62, 52, 0])
    cube([1, 1, 1.33]);
  translate([63, 52, 0])
    cube([1, 1, 1.33]);
  translate([64, 52, 0])
    cube([1, 1, 1.33]);
  translate([65, 52, 0])
    cube([1, 1, 1.33]);
  translate([66, 52, 0])
    cube([1, 1, 1.33]);
  translate([67, 52, 0])
    cube([1, 1, 1.33]);
  translate([68, 52, 0])
    cube([1, 1, 1.33]);
  translate([69, 52, 0])
    cube([1, 1, 1.33]);
  translate([70, 52, 0])
    cube([1, 1, 1.33]);
  translate([71, 52, 0])
    cube([1, 1, 1.33]);
  translate([72, 52, 0])
    cube([1, 1, 1.33]);
  translate([73, 52, 0])
    cube([1, 1, 1.33]);
  translate([74, 52, 0])
    cube([1, 1, 1.33]);
  translate([75, 52, 0])
    cube([1, 1, 0.90]);
  translate([76, 52, 0])
    cube([1, 1, 7.45]);
  translate([77, 52, 0])
    cube([1, 1, 6.51]);
  translate([78, 52, 0])
    cube([1, 1, 1.14]);
  translate([79, 52, 0])
    cube([1, 1, 1.53]);
  translate([80, 52, 0])
    cube([1, 1, 1.45]);
  translate([81, 52, 0])
    cube([1, 1, 0.27]);
  translate([82, 52, 0])
    cube([1, 1, 0.98]);
  translate([83, 52, 0])
    cube([1, 1, 0.75]);
  translate([84, 52, 0])
    cube([1, 1, 6.94]);
  translate([85, 52, 0])
    cube([1, 1, 0.86]);
  translate([86, 52, 0])
    cube([1, 1, 1.22]);
  translate([87, 52, 0])
    cube([1, 1, 1.14]);
  translate([88, 52, 0])
    cube([1, 1, 1.25]);
  translate([89, 52, 0])
    cube([1, 1, 1.18]);
  translate([90, 52, 0])
    cube([1, 1, 1.22]);
  translate([91, 52, 0])
    cube([1, 1, 0.86]);
  translate([92, 52, 0])
    cube([1, 1, 1.18]);
  translate([93, 52, 0])
    cube([1, 1, 1.41]);
  translate([94, 52, 0])
    cube([1, 1, 1.53]);
  translate([95, 52, 0])
    cube([1, 1, 2.04]);
  translate([96, 52, 0])
    cube([1, 1, 2.08]);
  translate([97, 52, 0])
    cube([1, 1, 1.49]);
  translate([98, 52, 0])
    cube([1, 1, 2.12]);
  translate([99, 52, 0])
    cube([1, 1, 4.94]);
  translate([100, 52, 0])
    cube([1, 1, 4.86]);
  translate([101, 52, 0])
    cube([1, 1, 2.67]);
  translate([102, 52, 0])
    cube([1, 1, 2.82]);
  translate([103, 52, 0])
    cube([1, 1, 3.84]);
  translate([104, 52, 0])
    cube([1, 1, 3.18]);
  translate([105, 52, 0])
    cube([1, 1, 4.00]);
  translate([106, 52, 0])
    cube([1, 1, 5.45]);
  translate([107, 52, 0])
    cube([1, 1, 5.61]);
  translate([108, 52, 0])
    cube([1, 1, 5.41]);
  translate([109, 52, 0])
    cube([1, 1, 4.20]);
  translate([110, 52, 0])
    cube([1, 1, 2.00]);
  translate([111, 52, 0])
    cube([1, 1, 1.88]);
  translate([112, 52, 0])
    cube([1, 1, 1.69]);
  translate([113, 52, 0])
    cube([1, 1, 1.92]);
  translate([114, 52, 0])
    cube([1, 1, 2.47]);
  translate([115, 52, 0])
    cube([1, 1, 1.06]);
  translate([116, 52, 0])
    cube([1, 1, 1.02]);
  translate([117, 52, 0])
    cube([1, 1, 0.47]);
  translate([118, 52, 0])
    cube([1, 1, 1.10]);
  translate([119, 52, 0])
    cube([1, 1, 1.37]);
  translate([120, 52, 0])
    cube([1, 1, 1.69]);
  translate([121, 52, 0])
    cube([1, 1, 1.45]);
  translate([122, 52, 0])
    cube([1, 1, 1.06]);
  translate([123, 52, 0])
    cube([1, 1, 0.90]);
  translate([124, 52, 0])
    cube([1, 1, 1.84]);
  translate([125, 52, 0])
    cube([1, 1, 2.08]);
  translate([126, 52, 0])
    cube([1, 1, 1.41]);
  translate([127, 52, 0])
    cube([1, 1, 1.37]);
  translate([128, 52, 0])
    cube([1, 1, 1.29]);
  translate([129, 52, 0])
    cube([1, 1, 1.25]);
  translate([130, 52, 0])
    cube([1, 1, 1.25]);
  translate([131, 52, 0])
    cube([1, 1, 1.29]);
  translate([132, 52, 0])
    cube([1, 1, 1.25]);
  translate([133, 52, 0])
    cube([1, 1, 1.25]);
  translate([134, 52, 0])
    cube([1, 1, 1.25]);
  translate([135, 52, 0])
    cube([1, 1, 1.29]);
  translate([136, 52, 0])
    cube([1, 1, 1.29]);
  translate([137, 52, 0])
    cube([1, 1, 1.25]);
  translate([138, 52, 0])
    cube([1, 1, 1.25]);
  translate([139, 52, 0])
    cube([1, 1, 1.22]);
  translate([140, 52, 0])
    cube([1, 1, 1.25]);
  translate([141, 52, 0])
    cube([1, 1, 1.29]);
  translate([142, 52, 0])
    cube([1, 1, 1.18]);
  translate([143, 52, 0])
    cube([1, 1, 1.25]);
  translate([144, 52, 0])
    cube([1, 1, 1.29]);
  translate([145, 52, 0])
    cube([1, 1, 1.29]);
  translate([146, 52, 0])
    cube([1, 1, 1.29]);
  translate([147, 52, 0])
    cube([1, 1, 1.29]);
  translate([148, 52, 0])
    cube([1, 1, 1.25]);
  translate([149, 52, 0])
    cube([1, 1, 1.29]);
  translate([150, 52, 0])
    cube([1, 1, 1.29]);
  translate([151, 52, 0])
    cube([1, 1, 1.29]);
  translate([152, 52, 0])
    cube([1, 1, 1.29]);
  translate([153, 52, 0])
    cube([1, 1, 1.25]);
  translate([154, 52, 0])
    cube([1, 1, 1.25]);
  translate([155, 52, 0])
    cube([1, 1, 1.25]);
  translate([156, 52, 0])
    cube([1, 1, 1.29]);
  translate([157, 52, 0])
    cube([1, 1, 1.29]);
  translate([158, 52, 0])
    cube([1, 1, 1.25]);
  translate([159, 52, 0])
    cube([1, 1, 1.22]);
  translate([160, 52, 0])
    cube([1, 1, 1.25]);
  translate([161, 52, 0])
    cube([1, 1, 1.25]);
  translate([162, 52, 0])
    cube([1, 1, 1.29]);
  translate([163, 52, 0])
    cube([1, 1, 1.25]);
  translate([164, 52, 0])
    cube([1, 1, 1.25]);
  translate([165, 52, 0])
    cube([1, 1, 1.33]);
  translate([166, 52, 0])
    cube([1, 1, 1.25]);
  translate([167, 52, 0])
    cube([1, 1, 1.25]);
  translate([168, 52, 0])
    cube([1, 1, 1.29]);
  translate([169, 52, 0])
    cube([1, 1, 1.29]);
  translate([170, 52, 0])
    cube([1, 1, 1.29]);
  translate([171, 52, 0])
    cube([1, 1, 1.25]);
  translate([172, 52, 0])
    cube([1, 1, 1.25]);
  translate([173, 52, 0])
    cube([1, 1, 1.25]);
  translate([174, 52, 0])
    cube([1, 1, 1.18]);
  translate([175, 52, 0])
    cube([1, 1, 1.18]);
  translate([176, 52, 0])
    cube([1, 1, 1.25]);
  translate([177, 52, 0])
    cube([1, 1, 1.25]);
  translate([178, 52, 0])
    cube([1, 1, 1.29]);
  translate([179, 52, 0])
    cube([1, 1, 1.22]);
  translate([180, 52, 0])
    cube([1, 1, 1.25]);
  translate([181, 52, 0])
    cube([1, 1, 1.33]);
  translate([182, 52, 0])
    cube([1, 1, 1.25]);
  translate([183, 52, 0])
    cube([1, 1, 1.25]);
  translate([184, 52, 0])
    cube([1, 1, 1.25]);
  translate([185, 52, 0])
    cube([1, 1, 1.25]);
  translate([186, 52, 0])
    cube([1, 1, 1.25]);
  translate([187, 52, 0])
    cube([1, 1, 1.25]);
  translate([188, 52, 0])
    cube([1, 1, 1.25]);
  translate([189, 52, 0])
    cube([1, 1, 1.25]);
  translate([190, 52, 0])
    cube([1, 1, 1.25]);
  translate([191, 52, 0])
    cube([1, 1, 1.25]);
  translate([192, 52, 0])
    cube([1, 1, 1.25]);
  translate([193, 52, 0])
    cube([1, 1, 1.25]);
  translate([194, 52, 0])
    cube([1, 1, 1.25]);
  translate([195, 52, 0])
    cube([1, 1, 1.25]);
  translate([196, 52, 0])
    cube([1, 1, 1.25]);
  translate([197, 52, 0])
    cube([1, 1, 1.25]);
  translate([198, 52, 0])
    cube([1, 1, 1.25]);
  translate([199, 52, 0])
    cube([1, 1, 1.25]);
  translate([200, 52, 0])
    cube([1, 1, 1.25]);
  translate([201, 52, 0])
    cube([1, 1, 1.25]);
  translate([202, 52, 0])
    cube([1, 1, 1.25]);
  translate([203, 52, 0])
    cube([1, 1, 1.25]);
  translate([204, 52, 0])
    cube([1, 1, 1.25]);
  translate([205, 52, 0])
    cube([1, 1, 1.25]);
  translate([206, 52, 0])
    cube([1, 1, 1.25]);
  translate([207, 52, 0])
    cube([1, 1, 1.25]);
  translate([208, 52, 0])
    cube([1, 1, 1.25]);
  translate([209, 52, 0])
    cube([1, 1, 1.25]);
  translate([210, 52, 0])
    cube([1, 1, 1.25]);
  translate([211, 52, 0])
    cube([1, 1, 1.25]);
  translate([212, 52, 0])
    cube([1, 1, 1.25]);
  translate([213, 52, 0])
    cube([1, 1, 1.25]);
  translate([214, 52, 0])
    cube([1, 1, 1.25]);
  translate([215, 52, 0])
    cube([1, 1, 1.25]);
  translate([216, 52, 0])
    cube([1, 1, 1.25]);
  translate([217, 52, 0])
    cube([1, 1, 1.25]);
  translate([218, 52, 0])
    cube([1, 1, 1.25]);
  translate([219, 52, 0])
    cube([1, 1, 1.25]);
  translate([220, 52, 0])
    cube([1, 1, 1.25]);
  translate([221, 52, 0])
    cube([1, 1, 1.25]);
  translate([222, 52, 0])
    cube([1, 1, 1.25]);
  translate([223, 52, 0])
    cube([1, 1, 1.25]);
  translate([224, 52, 0])
    cube([1, 1, 1.25]);
  translate([225, 52, 0])
    cube([1, 1, 1.25]);
  translate([226, 52, 0])
    cube([1, 1, 1.25]);
  translate([227, 52, 0])
    cube([1, 1, 1.25]);
  translate([228, 52, 0])
    cube([1, 1, 1.25]);
  translate([229, 52, 0])
    cube([1, 1, 1.25]);
  translate([230, 52, 0])
    cube([1, 1, 1.25]);
  translate([231, 52, 0])
    cube([1, 1, 1.25]);
  translate([232, 52, 0])
    cube([1, 1, 1.25]);
  translate([233, 52, 0])
    cube([1, 1, 1.25]);
  translate([234, 52, 0])
    cube([1, 1, 1.25]);
  translate([235, 52, 0])
    cube([1, 1, 1.25]);
  translate([236, 52, 0])
    cube([1, 1, 1.25]);
  translate([237, 52, 0])
    cube([1, 1, 1.25]);
  translate([238, 52, 0])
    cube([1, 1, 1.25]);
  translate([239, 52, 0])
    cube([1, 1, 1.25]);
  translate([240, 52, 0])
    cube([1, 1, 1.25]);
  translate([241, 52, 0])
    cube([1, 1, 1.25]);
  translate([242, 52, 0])
    cube([1, 1, 1.25]);
  translate([243, 52, 0])
    cube([1, 1, 1.25]);
  translate([244, 52, 0])
    cube([1, 1, 1.25]);
  translate([245, 52, 0])
    cube([1, 1, 1.25]);
  translate([246, 52, 0])
    cube([1, 1, 1.25]);
  translate([0, 53, 0])
    cube([1, 1, 1.41]);
  translate([1, 53, 0])
    cube([1, 1, 1.41]);
  translate([2, 53, 0])
    cube([1, 1, 1.41]);
  translate([3, 53, 0])
    cube([1, 1, 1.41]);
  translate([4, 53, 0])
    cube([1, 1, 1.37]);
  translate([5, 53, 0])
    cube([1, 1, 1.41]);
  translate([6, 53, 0])
    cube([1, 1, 1.41]);
  translate([7, 53, 0])
    cube([1, 1, 1.41]);
  translate([8, 53, 0])
    cube([1, 1, 1.41]);
  translate([9, 53, 0])
    cube([1, 1, 1.41]);
  translate([10, 53, 0])
    cube([1, 1, 1.41]);
  translate([11, 53, 0])
    cube([1, 1, 1.41]);
  translate([12, 53, 0])
    cube([1, 1, 1.41]);
  translate([13, 53, 0])
    cube([1, 1, 1.45]);
  translate([14, 53, 0])
    cube([1, 1, 1.45]);
  translate([15, 53, 0])
    cube([1, 1, 1.45]);
  translate([16, 53, 0])
    cube([1, 1, 1.41]);
  translate([17, 53, 0])
    cube([1, 1, 1.84]);
  translate([18, 53, 0])
    cube([1, 1, 1.41]);
  translate([19, 53, 0])
    cube([1, 1, 3.02]);
  translate([20, 53, 0])
    cube([1, 1, 1.06]);
  translate([21, 53, 0])
    cube([1, 1, 0.27]);
  translate([22, 53, 0])
    cube([1, 1, 0.16]);
  translate([23, 53, 0])
    cube([1, 1, 0.71]);
  translate([24, 53, 0])
    cube([1, 1, 0.67]);
  translate([25, 53, 0])
    cube([1, 1, 0.31]);
  translate([26, 53, 0])
    cube([1, 1, 0.71]);
  translate([27, 53, 0])
    cube([1, 1, 0.75]);
  translate([28, 53, 0])
    cube([1, 1, 0.71]);
  translate([29, 53, 0])
    cube([1, 1, 1.14]);
  translate([30, 53, 0])
    cube([1, 1, 1.37]);
  translate([31, 53, 0])
    cube([1, 1, 1.41]);
  translate([32, 53, 0])
    cube([1, 1, 1.41]);
  translate([33, 53, 0])
    cube([1, 1, 1.37]);
  translate([34, 53, 0])
    cube([1, 1, 1.37]);
  translate([35, 53, 0])
    cube([1, 1, 1.37]);
  translate([36, 53, 0])
    cube([1, 1, 1.37]);
  translate([37, 53, 0])
    cube([1, 1, 1.37]);
  translate([38, 53, 0])
    cube([1, 1, 1.37]);
  translate([39, 53, 0])
    cube([1, 1, 1.37]);
  translate([40, 53, 0])
    cube([1, 1, 1.37]);
  translate([41, 53, 0])
    cube([1, 1, 1.37]);
  translate([42, 53, 0])
    cube([1, 1, 1.37]);
  translate([43, 53, 0])
    cube([1, 1, 1.37]);
  translate([44, 53, 0])
    cube([1, 1, 1.37]);
  translate([45, 53, 0])
    cube([1, 1, 1.37]);
  translate([46, 53, 0])
    cube([1, 1, 1.37]);
  translate([47, 53, 0])
    cube([1, 1, 1.37]);
  translate([48, 53, 0])
    cube([1, 1, 1.37]);
  translate([49, 53, 0])
    cube([1, 1, 1.33]);
  translate([50, 53, 0])
    cube([1, 1, 1.33]);
  translate([51, 53, 0])
    cube([1, 1, 1.37]);
  translate([52, 53, 0])
    cube([1, 1, 1.33]);
  translate([53, 53, 0])
    cube([1, 1, 1.33]);
  translate([54, 53, 0])
    cube([1, 1, 1.33]);
  translate([55, 53, 0])
    cube([1, 1, 1.37]);
  translate([56, 53, 0])
    cube([1, 1, 1.33]);
  translate([57, 53, 0])
    cube([1, 1, 1.33]);
  translate([58, 53, 0])
    cube([1, 1, 1.33]);
  translate([59, 53, 0])
    cube([1, 1, 1.33]);
  translate([60, 53, 0])
    cube([1, 1, 1.33]);
  translate([61, 53, 0])
    cube([1, 1, 1.33]);
  translate([62, 53, 0])
    cube([1, 1, 1.33]);
  translate([63, 53, 0])
    cube([1, 1, 1.33]);
  translate([64, 53, 0])
    cube([1, 1, 1.33]);
  translate([65, 53, 0])
    cube([1, 1, 1.33]);
  translate([66, 53, 0])
    cube([1, 1, 1.33]);
  translate([67, 53, 0])
    cube([1, 1, 1.33]);
  translate([68, 53, 0])
    cube([1, 1, 1.33]);
  translate([69, 53, 0])
    cube([1, 1, 1.33]);
  translate([70, 53, 0])
    cube([1, 1, 1.33]);
  translate([71, 53, 0])
    cube([1, 1, 1.33]);
  translate([72, 53, 0])
    cube([1, 1, 1.33]);
  translate([73, 53, 0])
    cube([1, 1, 1.22]);
  translate([74, 53, 0])
    cube([1, 1, 1.33]);
  translate([75, 53, 0])
    cube([1, 1, 2.51]);
  translate([76, 53, 0])
    cube([1, 1, 3.02]);
  translate([77, 53, 0])
    cube([1, 1, 6.04]);
  translate([78, 53, 0])
    cube([1, 1, 0.94]);
  translate([79, 53, 0])
    cube([1, 1, 1.80]);
  translate([80, 53, 0])
    cube([1, 1, 0.90]);
  translate([81, 53, 0])
    cube([1, 1, 4.12]);
  translate([82, 53, 0])
    cube([1, 1, 1.18]);
  translate([83, 53, 0])
    cube([1, 1, 0.94]);
  translate([84, 53, 0])
    cube([1, 1, 7.80]);
  translate([85, 53, 0])
    cube([1, 1, 1.25]);
  translate([86, 53, 0])
    cube([1, 1, 1.29]);
  translate([87, 53, 0])
    cube([1, 1, 1.29]);
  translate([88, 53, 0])
    cube([1, 1, 1.25]);
  translate([89, 53, 0])
    cube([1, 1, 1.22]);
  translate([90, 53, 0])
    cube([1, 1, 1.06]);
  translate([91, 53, 0])
    cube([1, 1, 0.67]);
  translate([92, 53, 0])
    cube([1, 1, 0.86]);
  translate([93, 53, 0])
    cube([1, 1, 1.41]);
  translate([94, 53, 0])
    cube([1, 1, 1.53]);
  translate([95, 53, 0])
    cube([1, 1, 3.25]);
  translate([96, 53, 0])
    cube([1, 1, 3.22]);
  translate([97, 53, 0])
    cube([1, 1, 3.06]);
  translate([98, 53, 0])
    cube([1, 1, 2.82]);
  translate([99, 53, 0])
    cube([1, 1, 2.78]);
  translate([100, 53, 0])
    cube([1, 1, 2.71]);
  translate([101, 53, 0])
    cube([1, 1, 3.92]);
  translate([102, 53, 0])
    cube([1, 1, 4.98]);
  translate([103, 53, 0])
    cube([1, 1, 4.75]);
  translate([104, 53, 0])
    cube([1, 1, 4.00]);
  translate([105, 53, 0])
    cube([1, 1, 4.20]);
  translate([106, 53, 0])
    cube([1, 1, 6.04]);
  translate([107, 53, 0])
    cube([1, 1, 6.16]);
  translate([108, 53, 0])
    cube([1, 1, 5.29]);
  translate([109, 53, 0])
    cube([1, 1, 5.14]);
  translate([110, 53, 0])
    cube([1, 1, 5.29]);
  translate([111, 53, 0])
    cube([1, 1, 3.53]);
  translate([112, 53, 0])
    cube([1, 1, 2.16]);
  translate([113, 53, 0])
    cube([1, 1, 1.73]);
  translate([114, 53, 0])
    cube([1, 1, 0.98]);
  translate([115, 53, 0])
    cube([1, 1, 0.82]);
  translate([116, 53, 0])
    cube([1, 1, 1.10]);
  translate([117, 53, 0])
    cube([1, 1, 0.71]);
  translate([118, 53, 0])
    cube([1, 1, 1.10]);
  translate([119, 53, 0])
    cube([1, 1, 1.37]);
  translate([120, 53, 0])
    cube([1, 1, 1.57]);
  translate([121, 53, 0])
    cube([1, 1, 1.10]);
  translate([122, 53, 0])
    cube([1, 1, 1.61]);
  translate([123, 53, 0])
    cube([1, 1, 1.69]);
  translate([124, 53, 0])
    cube([1, 1, 1.37]);
  translate([125, 53, 0])
    cube([1, 1, 1.92]);
  translate([126, 53, 0])
    cube([1, 1, 1.25]);
  translate([127, 53, 0])
    cube([1, 1, 1.25]);
  translate([128, 53, 0])
    cube([1, 1, 1.25]);
  translate([129, 53, 0])
    cube([1, 1, 1.25]);
  translate([130, 53, 0])
    cube([1, 1, 1.25]);
  translate([131, 53, 0])
    cube([1, 1, 1.25]);
  translate([132, 53, 0])
    cube([1, 1, 1.22]);
  translate([133, 53, 0])
    cube([1, 1, 1.29]);
  translate([134, 53, 0])
    cube([1, 1, 1.25]);
  translate([135, 53, 0])
    cube([1, 1, 1.29]);
  translate([136, 53, 0])
    cube([1, 1, 1.29]);
  translate([137, 53, 0])
    cube([1, 1, 1.29]);
  translate([138, 53, 0])
    cube([1, 1, 1.29]);
  translate([139, 53, 0])
    cube([1, 1, 1.25]);
  translate([140, 53, 0])
    cube([1, 1, 1.29]);
  translate([141, 53, 0])
    cube([1, 1, 1.29]);
  translate([142, 53, 0])
    cube([1, 1, 1.25]);
  translate([143, 53, 0])
    cube([1, 1, 1.29]);
  translate([144, 53, 0])
    cube([1, 1, 1.29]);
  translate([145, 53, 0])
    cube([1, 1, 1.25]);
  translate([146, 53, 0])
    cube([1, 1, 1.25]);
  translate([147, 53, 0])
    cube([1, 1, 1.29]);
  translate([148, 53, 0])
    cube([1, 1, 1.29]);
  translate([149, 53, 0])
    cube([1, 1, 1.29]);
  translate([150, 53, 0])
    cube([1, 1, 1.25]);
  translate([151, 53, 0])
    cube([1, 1, 1.29]);
  translate([152, 53, 0])
    cube([1, 1, 1.29]);
  translate([153, 53, 0])
    cube([1, 1, 1.29]);
  translate([154, 53, 0])
    cube([1, 1, 1.29]);
  translate([155, 53, 0])
    cube([1, 1, 1.29]);
  translate([156, 53, 0])
    cube([1, 1, 1.29]);
  translate([157, 53, 0])
    cube([1, 1, 1.29]);
  translate([158, 53, 0])
    cube([1, 1, 1.25]);
  translate([159, 53, 0])
    cube([1, 1, 1.29]);
  translate([160, 53, 0])
    cube([1, 1, 1.29]);
  translate([161, 53, 0])
    cube([1, 1, 1.29]);
  translate([162, 53, 0])
    cube([1, 1, 1.29]);
  translate([163, 53, 0])
    cube([1, 1, 1.33]);
  translate([164, 53, 0])
    cube([1, 1, 1.25]);
  translate([165, 53, 0])
    cube([1, 1, 1.25]);
  translate([166, 53, 0])
    cube([1, 1, 1.25]);
  translate([167, 53, 0])
    cube([1, 1, 1.25]);
  translate([168, 53, 0])
    cube([1, 1, 1.25]);
  translate([169, 53, 0])
    cube([1, 1, 1.25]);
  translate([170, 53, 0])
    cube([1, 1, 1.25]);
  translate([171, 53, 0])
    cube([1, 1, 1.29]);
  translate([172, 53, 0])
    cube([1, 1, 1.22]);
  translate([173, 53, 0])
    cube([1, 1, 1.22]);
  translate([174, 53, 0])
    cube([1, 1, 1.25]);
  translate([175, 53, 0])
    cube([1, 1, 1.25]);
  translate([176, 53, 0])
    cube([1, 1, 1.29]);
  translate([177, 53, 0])
    cube([1, 1, 1.25]);
  translate([178, 53, 0])
    cube([1, 1, 1.29]);
  translate([179, 53, 0])
    cube([1, 1, 1.25]);
  translate([180, 53, 0])
    cube([1, 1, 1.25]);
  translate([181, 53, 0])
    cube([1, 1, 1.25]);
  translate([182, 53, 0])
    cube([1, 1, 1.18]);
  translate([183, 53, 0])
    cube([1, 1, 1.22]);
  translate([184, 53, 0])
    cube([1, 1, 1.29]);
  translate([185, 53, 0])
    cube([1, 1, 1.25]);
  translate([186, 53, 0])
    cube([1, 1, 1.25]);
  translate([187, 53, 0])
    cube([1, 1, 1.25]);
  translate([188, 53, 0])
    cube([1, 1, 1.29]);
  translate([189, 53, 0])
    cube([1, 1, 1.25]);
  translate([190, 53, 0])
    cube([1, 1, 1.25]);
  translate([191, 53, 0])
    cube([1, 1, 1.25]);
  translate([192, 53, 0])
    cube([1, 1, 1.25]);
  translate([193, 53, 0])
    cube([1, 1, 1.25]);
  translate([194, 53, 0])
    cube([1, 1, 1.25]);
  translate([195, 53, 0])
    cube([1, 1, 1.25]);
  translate([196, 53, 0])
    cube([1, 1, 1.25]);
  translate([197, 53, 0])
    cube([1, 1, 1.25]);
  translate([198, 53, 0])
    cube([1, 1, 1.25]);
  translate([199, 53, 0])
    cube([1, 1, 1.25]);
  translate([200, 53, 0])
    cube([1, 1, 1.25]);
  translate([201, 53, 0])
    cube([1, 1, 1.25]);
  translate([202, 53, 0])
    cube([1, 1, 1.25]);
  translate([203, 53, 0])
    cube([1, 1, 1.25]);
  translate([204, 53, 0])
    cube([1, 1, 1.25]);
  translate([205, 53, 0])
    cube([1, 1, 1.25]);
  translate([206, 53, 0])
    cube([1, 1, 1.25]);
  translate([207, 53, 0])
    cube([1, 1, 1.25]);
  translate([208, 53, 0])
    cube([1, 1, 1.25]);
  translate([209, 53, 0])
    cube([1, 1, 1.25]);
  translate([210, 53, 0])
    cube([1, 1, 1.25]);
  translate([211, 53, 0])
    cube([1, 1, 1.25]);
  translate([212, 53, 0])
    cube([1, 1, 1.25]);
  translate([213, 53, 0])
    cube([1, 1, 1.25]);
  translate([214, 53, 0])
    cube([1, 1, 1.25]);
  translate([215, 53, 0])
    cube([1, 1, 1.25]);
  translate([216, 53, 0])
    cube([1, 1, 1.25]);
  translate([217, 53, 0])
    cube([1, 1, 1.25]);
  translate([218, 53, 0])
    cube([1, 1, 1.25]);
  translate([219, 53, 0])
    cube([1, 1, 1.25]);
  translate([220, 53, 0])
    cube([1, 1, 1.25]);
  translate([221, 53, 0])
    cube([1, 1, 1.25]);
  translate([222, 53, 0])
    cube([1, 1, 1.25]);
  translate([223, 53, 0])
    cube([1, 1, 1.25]);
  translate([224, 53, 0])
    cube([1, 1, 1.25]);
  translate([225, 53, 0])
    cube([1, 1, 1.25]);
  translate([226, 53, 0])
    cube([1, 1, 1.25]);
  translate([227, 53, 0])
    cube([1, 1, 1.25]);
  translate([228, 53, 0])
    cube([1, 1, 1.25]);
  translate([229, 53, 0])
    cube([1, 1, 1.25]);
  translate([230, 53, 0])
    cube([1, 1, 1.25]);
  translate([231, 53, 0])
    cube([1, 1, 1.25]);
  translate([232, 53, 0])
    cube([1, 1, 1.25]);
  translate([233, 53, 0])
    cube([1, 1, 1.25]);
  translate([234, 53, 0])
    cube([1, 1, 1.25]);
  translate([235, 53, 0])
    cube([1, 1, 1.25]);
  translate([236, 53, 0])
    cube([1, 1, 1.25]);
  translate([237, 53, 0])
    cube([1, 1, 1.25]);
  translate([238, 53, 0])
    cube([1, 1, 1.25]);
  translate([239, 53, 0])
    cube([1, 1, 1.25]);
  translate([240, 53, 0])
    cube([1, 1, 1.25]);
  translate([241, 53, 0])
    cube([1, 1, 1.25]);
  translate([242, 53, 0])
    cube([1, 1, 1.25]);
  translate([243, 53, 0])
    cube([1, 1, 1.25]);
  translate([244, 53, 0])
    cube([1, 1, 1.25]);
  translate([245, 53, 0])
    cube([1, 1, 1.25]);
  translate([246, 53, 0])
    cube([1, 1, 1.25]);
  translate([0, 54, 0])
    cube([1, 1, 1.41]);
  translate([1, 54, 0])
    cube([1, 1, 1.41]);
  translate([2, 54, 0])
    cube([1, 1, 1.41]);
  translate([3, 54, 0])
    cube([1, 1, 1.41]);
  translate([4, 54, 0])
    cube([1, 1, 1.37]);
  translate([5, 54, 0])
    cube([1, 1, 1.41]);
  translate([6, 54, 0])
    cube([1, 1, 1.41]);
  translate([7, 54, 0])
    cube([1, 1, 1.41]);
  translate([8, 54, 0])
    cube([1, 1, 1.41]);
  translate([9, 54, 0])
    cube([1, 1, 1.41]);
  translate([10, 54, 0])
    cube([1, 1, 1.41]);
  translate([11, 54, 0])
    cube([1, 1, 1.41]);
  translate([12, 54, 0])
    cube([1, 1, 1.41]);
  translate([13, 54, 0])
    cube([1, 1, 1.45]);
  translate([14, 54, 0])
    cube([1, 1, 1.37]);
  translate([15, 54, 0])
    cube([1, 1, 1.37]);
  translate([16, 54, 0])
    cube([1, 1, 1.41]);
  translate([17, 54, 0])
    cube([1, 1, 5.88]);
  translate([18, 54, 0])
    cube([1, 1, 1.18]);
  translate([19, 54, 0])
    cube([1, 1, 4.20]);
  translate([20, 54, 0])
    cube([1, 1, 1.25]);
  translate([21, 54, 0])
    cube([1, 1, 0.86]);
  translate([22, 54, 0])
    cube([1, 1, 0.71]);
  translate([23, 54, 0])
    cube([1, 1, 0.98]);
  translate([24, 54, 0])
    cube([1, 1, 0.75]);
  translate([25, 54, 0])
    cube([1, 1, 0.47]);
  translate([26, 54, 0])
    cube([1, 1, 0.75]);
  translate([27, 54, 0])
    cube([1, 1, 0.75]);
  translate([28, 54, 0])
    cube([1, 1, 0.75]);
  translate([29, 54, 0])
    cube([1, 1, 0.71]);
  translate([30, 54, 0])
    cube([1, 1, 1.37]);
  translate([31, 54, 0])
    cube([1, 1, 1.41]);
  translate([32, 54, 0])
    cube([1, 1, 1.41]);
  translate([33, 54, 0])
    cube([1, 1, 1.37]);
  translate([34, 54, 0])
    cube([1, 1, 1.37]);
  translate([35, 54, 0])
    cube([1, 1, 1.37]);
  translate([36, 54, 0])
    cube([1, 1, 1.37]);
  translate([37, 54, 0])
    cube([1, 1, 1.37]);
  translate([38, 54, 0])
    cube([1, 1, 1.37]);
  translate([39, 54, 0])
    cube([1, 1, 1.37]);
  translate([40, 54, 0])
    cube([1, 1, 1.37]);
  translate([41, 54, 0])
    cube([1, 1, 1.37]);
  translate([42, 54, 0])
    cube([1, 1, 1.37]);
  translate([43, 54, 0])
    cube([1, 1, 1.37]);
  translate([44, 54, 0])
    cube([1, 1, 1.37]);
  translate([45, 54, 0])
    cube([1, 1, 1.37]);
  translate([46, 54, 0])
    cube([1, 1, 1.37]);
  translate([47, 54, 0])
    cube([1, 1, 1.37]);
  translate([48, 54, 0])
    cube([1, 1, 1.37]);
  translate([49, 54, 0])
    cube([1, 1, 1.37]);
  translate([50, 54, 0])
    cube([1, 1, 1.37]);
  translate([51, 54, 0])
    cube([1, 1, 1.37]);
  translate([52, 54, 0])
    cube([1, 1, 1.33]);
  translate([53, 54, 0])
    cube([1, 1, 1.33]);
  translate([54, 54, 0])
    cube([1, 1, 1.33]);
  translate([55, 54, 0])
    cube([1, 1, 1.37]);
  translate([56, 54, 0])
    cube([1, 1, 1.33]);
  translate([57, 54, 0])
    cube([1, 1, 1.33]);
  translate([58, 54, 0])
    cube([1, 1, 1.33]);
  translate([59, 54, 0])
    cube([1, 1, 1.33]);
  translate([60, 54, 0])
    cube([1, 1, 1.33]);
  translate([61, 54, 0])
    cube([1, 1, 1.33]);
  translate([62, 54, 0])
    cube([1, 1, 1.33]);
  translate([63, 54, 0])
    cube([1, 1, 1.33]);
  translate([64, 54, 0])
    cube([1, 1, 1.33]);
  translate([65, 54, 0])
    cube([1, 1, 1.33]);
  translate([66, 54, 0])
    cube([1, 1, 1.33]);
  translate([67, 54, 0])
    cube([1, 1, 1.33]);
  translate([68, 54, 0])
    cube([1, 1, 1.33]);
  translate([69, 54, 0])
    cube([1, 1, 1.33]);
  translate([70, 54, 0])
    cube([1, 1, 1.33]);
  translate([71, 54, 0])
    cube([1, 1, 1.33]);
  translate([72, 54, 0])
    cube([1, 1, 1.33]);
  translate([73, 54, 0])
    cube([1, 1, 1.33]);
  translate([74, 54, 0])
    cube([1, 1, 1.33]);
  translate([75, 54, 0])
    cube([1, 1, 5.18]);
  translate([76, 54, 0])
    cube([1, 1, 8.12]);
  translate([77, 54, 0])
    cube([1, 1, 7.61]);
  translate([78, 54, 0])
    cube([1, 1, 0.86]);
  translate([79, 54, 0])
    cube([1, 1, 0.98]);
  translate([80, 54, 0])
    cube([1, 1, 0.86]);
  translate([81, 54, 0])
    cube([1, 1, 7.41]);
  translate([82, 54, 0])
    cube([1, 1, 0.86]);
  translate([83, 54, 0])
    cube([1, 1, 0.43]);
  translate([84, 54, 0])
    cube([1, 1, 7.22]);
  translate([85, 54, 0])
    cube([1, 1, 1.14]);
  translate([86, 54, 0])
    cube([1, 1, 0.63]);
  translate([87, 54, 0])
    cube([1, 1, 2.16]);
  translate([88, 54, 0])
    cube([1, 1, 1.33]);
  translate([89, 54, 0])
    cube([1, 1, 1.14]);
  translate([90, 54, 0])
    cube([1, 1, 0.98]);
  translate([91, 54, 0])
    cube([1, 1, 1.53]);
  translate([92, 54, 0])
    cube([1, 1, 0.75]);
  translate([93, 54, 0])
    cube([1, 1, 1.14]);
  translate([94, 54, 0])
    cube([1, 1, 1.57]);
  translate([95, 54, 0])
    cube([1, 1, 4.82]);
  translate([96, 54, 0])
    cube([1, 1, 4.51]);
  translate([97, 54, 0])
    cube([1, 1, 4.31]);
  translate([98, 54, 0])
    cube([1, 1, 4.63]);
  translate([99, 54, 0])
    cube([1, 1, 4.78]);
  translate([100, 54, 0])
    cube([1, 1, 5.18]);
  translate([101, 54, 0])
    cube([1, 1, 5.10]);
  translate([102, 54, 0])
    cube([1, 1, 5.49]);
  translate([103, 54, 0])
    cube([1, 1, 4.86]);
  translate([104, 54, 0])
    cube([1, 1, 4.27]);
  translate([105, 54, 0])
    cube([1, 1, 4.24]);
  translate([106, 54, 0])
    cube([1, 1, 6.12]);
  translate([107, 54, 0])
    cube([1, 1, 6.31]);
  translate([108, 54, 0])
    cube([1, 1, 5.33]);
  translate([109, 54, 0])
    cube([1, 1, 5.65]);
  translate([110, 54, 0])
    cube([1, 1, 5.49]);
  translate([111, 54, 0])
    cube([1, 1, 4.51]);
  translate([112, 54, 0])
    cube([1, 1, 3.61]);
  translate([113, 54, 0])
    cube([1, 1, 2.75]);
  translate([114, 54, 0])
    cube([1, 1, 1.96]);
  translate([115, 54, 0])
    cube([1, 1, 1.06]);
  translate([116, 54, 0])
    cube([1, 1, 1.18]);
  translate([117, 54, 0])
    cube([1, 1, 1.18]);
  translate([118, 54, 0])
    cube([1, 1, 1.18]);
  translate([119, 54, 0])
    cube([1, 1, 1.33]);
  translate([120, 54, 0])
    cube([1, 1, 1.96]);
  translate([121, 54, 0])
    cube([1, 1, 1.53]);
  translate([122, 54, 0])
    cube([1, 1, 1.33]);
  translate([123, 54, 0])
    cube([1, 1, 1.96]);
  translate([124, 54, 0])
    cube([1, 1, 2.47]);
  translate([125, 54, 0])
    cube([1, 1, 3.65]);
  translate([126, 54, 0])
    cube([1, 1, 1.25]);
  translate([127, 54, 0])
    cube([1, 1, 1.25]);
  translate([128, 54, 0])
    cube([1, 1, 1.25]);
  translate([129, 54, 0])
    cube([1, 1, 1.25]);
  translate([130, 54, 0])
    cube([1, 1, 1.25]);
  translate([131, 54, 0])
    cube([1, 1, 1.25]);
  translate([132, 54, 0])
    cube([1, 1, 1.22]);
  translate([133, 54, 0])
    cube([1, 1, 1.29]);
  translate([134, 54, 0])
    cube([1, 1, 1.25]);
  translate([135, 54, 0])
    cube([1, 1, 1.29]);
  translate([136, 54, 0])
    cube([1, 1, 1.29]);
  translate([137, 54, 0])
    cube([1, 1, 1.29]);
  translate([138, 54, 0])
    cube([1, 1, 1.29]);
  translate([139, 54, 0])
    cube([1, 1, 1.25]);
  translate([140, 54, 0])
    cube([1, 1, 1.29]);
  translate([141, 54, 0])
    cube([1, 1, 1.29]);
  translate([142, 54, 0])
    cube([1, 1, 1.25]);
  translate([143, 54, 0])
    cube([1, 1, 1.29]);
  translate([144, 54, 0])
    cube([1, 1, 1.29]);
  translate([145, 54, 0])
    cube([1, 1, 1.25]);
  translate([146, 54, 0])
    cube([1, 1, 1.25]);
  translate([147, 54, 0])
    cube([1, 1, 1.29]);
  translate([148, 54, 0])
    cube([1, 1, 1.29]);
  translate([149, 54, 0])
    cube([1, 1, 1.29]);
  translate([150, 54, 0])
    cube([1, 1, 1.25]);
  translate([151, 54, 0])
    cube([1, 1, 1.29]);
  translate([152, 54, 0])
    cube([1, 1, 1.29]);
  translate([153, 54, 0])
    cube([1, 1, 1.29]);
  translate([154, 54, 0])
    cube([1, 1, 1.29]);
  translate([155, 54, 0])
    cube([1, 1, 1.29]);
  translate([156, 54, 0])
    cube([1, 1, 1.29]);
  translate([157, 54, 0])
    cube([1, 1, 1.29]);
  translate([158, 54, 0])
    cube([1, 1, 1.29]);
  translate([159, 54, 0])
    cube([1, 1, 1.33]);
  translate([160, 54, 0])
    cube([1, 1, 1.29]);
  translate([161, 54, 0])
    cube([1, 1, 1.29]);
  translate([162, 54, 0])
    cube([1, 1, 1.29]);
  translate([163, 54, 0])
    cube([1, 1, 1.25]);
  translate([164, 54, 0])
    cube([1, 1, 1.25]);
  translate([165, 54, 0])
    cube([1, 1, 1.25]);
  translate([166, 54, 0])
    cube([1, 1, 1.25]);
  translate([167, 54, 0])
    cube([1, 1, 1.25]);
  translate([168, 54, 0])
    cube([1, 1, 1.33]);
  translate([169, 54, 0])
    cube([1, 1, 1.25]);
  translate([170, 54, 0])
    cube([1, 1, 1.25]);
  translate([171, 54, 0])
    cube([1, 1, 1.29]);
  translate([172, 54, 0])
    cube([1, 1, 1.22]);
  translate([173, 54, 0])
    cube([1, 1, 1.22]);
  translate([174, 54, 0])
    cube([1, 1, 1.25]);
  translate([175, 54, 0])
    cube([1, 1, 1.25]);
  translate([176, 54, 0])
    cube([1, 1, 1.29]);
  translate([177, 54, 0])
    cube([1, 1, 1.25]);
  translate([178, 54, 0])
    cube([1, 1, 1.29]);
  translate([179, 54, 0])
    cube([1, 1, 1.25]);
  translate([180, 54, 0])
    cube([1, 1, 1.25]);
  translate([181, 54, 0])
    cube([1, 1, 1.25]);
  translate([182, 54, 0])
    cube([1, 1, 1.18]);
  translate([183, 54, 0])
    cube([1, 1, 1.22]);
  translate([184, 54, 0])
    cube([1, 1, 1.29]);
  translate([185, 54, 0])
    cube([1, 1, 1.25]);
  translate([186, 54, 0])
    cube([1, 1, 1.25]);
  translate([187, 54, 0])
    cube([1, 1, 1.25]);
  translate([188, 54, 0])
    cube([1, 1, 1.29]);
  translate([189, 54, 0])
    cube([1, 1, 1.25]);
  translate([190, 54, 0])
    cube([1, 1, 1.25]);
  translate([191, 54, 0])
    cube([1, 1, 1.25]);
  translate([192, 54, 0])
    cube([1, 1, 1.25]);
  translate([193, 54, 0])
    cube([1, 1, 1.25]);
  translate([194, 54, 0])
    cube([1, 1, 1.25]);
  translate([195, 54, 0])
    cube([1, 1, 1.25]);
  translate([196, 54, 0])
    cube([1, 1, 1.25]);
  translate([197, 54, 0])
    cube([1, 1, 1.25]);
  translate([198, 54, 0])
    cube([1, 1, 1.25]);
  translate([199, 54, 0])
    cube([1, 1, 1.25]);
  translate([200, 54, 0])
    cube([1, 1, 1.25]);
  translate([201, 54, 0])
    cube([1, 1, 1.25]);
  translate([202, 54, 0])
    cube([1, 1, 1.25]);
  translate([203, 54, 0])
    cube([1, 1, 1.25]);
  translate([204, 54, 0])
    cube([1, 1, 1.25]);
  translate([205, 54, 0])
    cube([1, 1, 1.25]);
  translate([206, 54, 0])
    cube([1, 1, 1.25]);
  translate([207, 54, 0])
    cube([1, 1, 1.25]);
  translate([208, 54, 0])
    cube([1, 1, 1.25]);
  translate([209, 54, 0])
    cube([1, 1, 1.25]);
  translate([210, 54, 0])
    cube([1, 1, 1.25]);
  translate([211, 54, 0])
    cube([1, 1, 1.25]);
  translate([212, 54, 0])
    cube([1, 1, 1.25]);
  translate([213, 54, 0])
    cube([1, 1, 1.25]);
  translate([214, 54, 0])
    cube([1, 1, 1.25]);
  translate([215, 54, 0])
    cube([1, 1, 1.25]);
  translate([216, 54, 0])
    cube([1, 1, 1.25]);
  translate([217, 54, 0])
    cube([1, 1, 1.25]);
  translate([218, 54, 0])
    cube([1, 1, 1.25]);
  translate([219, 54, 0])
    cube([1, 1, 1.25]);
  translate([220, 54, 0])
    cube([1, 1, 1.25]);
  translate([221, 54, 0])
    cube([1, 1, 1.25]);
  translate([222, 54, 0])
    cube([1, 1, 1.25]);
  translate([223, 54, 0])
    cube([1, 1, 1.25]);
  translate([224, 54, 0])
    cube([1, 1, 1.25]);
  translate([225, 54, 0])
    cube([1, 1, 1.25]);
  translate([226, 54, 0])
    cube([1, 1, 1.25]);
  translate([227, 54, 0])
    cube([1, 1, 1.25]);
  translate([228, 54, 0])
    cube([1, 1, 1.25]);
  translate([229, 54, 0])
    cube([1, 1, 1.25]);
  translate([230, 54, 0])
    cube([1, 1, 1.25]);
  translate([231, 54, 0])
    cube([1, 1, 1.25]);
  translate([232, 54, 0])
    cube([1, 1, 1.25]);
  translate([233, 54, 0])
    cube([1, 1, 1.25]);
  translate([234, 54, 0])
    cube([1, 1, 1.25]);
  translate([235, 54, 0])
    cube([1, 1, 1.25]);
  translate([236, 54, 0])
    cube([1, 1, 1.25]);
  translate([237, 54, 0])
    cube([1, 1, 1.25]);
  translate([238, 54, 0])
    cube([1, 1, 1.25]);
  translate([239, 54, 0])
    cube([1, 1, 1.25]);
  translate([240, 54, 0])
    cube([1, 1, 1.25]);
  translate([241, 54, 0])
    cube([1, 1, 1.25]);
  translate([242, 54, 0])
    cube([1, 1, 1.25]);
  translate([243, 54, 0])
    cube([1, 1, 1.25]);
  translate([244, 54, 0])
    cube([1, 1, 1.25]);
  translate([245, 54, 0])
    cube([1, 1, 1.25]);
  translate([246, 54, 0])
    cube([1, 1, 1.25]);
  translate([0, 55, 0])
    cube([1, 1, 1.41]);
  translate([1, 55, 0])
    cube([1, 1, 1.41]);
  translate([2, 55, 0])
    cube([1, 1, 1.41]);
  translate([3, 55, 0])
    cube([1, 1, 1.41]);
  translate([4, 55, 0])
    cube([1, 1, 1.41]);
  translate([5, 55, 0])
    cube([1, 1, 1.41]);
  translate([6, 55, 0])
    cube([1, 1, 1.41]);
  translate([7, 55, 0])
    cube([1, 1, 1.41]);
  translate([8, 55, 0])
    cube([1, 1, 1.41]);
  translate([9, 55, 0])
    cube([1, 1, 1.37]);
  translate([10, 55, 0])
    cube([1, 1, 1.41]);
  translate([11, 55, 0])
    cube([1, 1, 1.41]);
  translate([12, 55, 0])
    cube([1, 1, 1.41]);
  translate([13, 55, 0])
    cube([1, 1, 1.41]);
  translate([14, 55, 0])
    cube([1, 1, 1.41]);
  translate([15, 55, 0])
    cube([1, 1, 1.29]);
  translate([16, 55, 0])
    cube([1, 1, 1.45]);
  translate([17, 55, 0])
    cube([1, 1, 2.12]);
  translate([18, 55, 0])
    cube([1, 1, 1.61]);
  translate([19, 55, 0])
    cube([1, 1, 1.57]);
  translate([20, 55, 0])
    cube([1, 1, 1.53]);
  translate([21, 55, 0])
    cube([1, 1, 1.06]);
  translate([22, 55, 0])
    cube([1, 1, 1.10]);
  translate([23, 55, 0])
    cube([1, 1, 1.06]);
  translate([24, 55, 0])
    cube([1, 1, 0.94]);
  translate([25, 55, 0])
    cube([1, 1, 0.67]);
  translate([26, 55, 0])
    cube([1, 1, 0.59]);
  translate([27, 55, 0])
    cube([1, 1, 0.71]);
  translate([28, 55, 0])
    cube([1, 1, 0.90]);
  translate([29, 55, 0])
    cube([1, 1, 0.71]);
  translate([30, 55, 0])
    cube([1, 1, 1.53]);
  translate([31, 55, 0])
    cube([1, 1, 1.33]);
  translate([32, 55, 0])
    cube([1, 1, 1.37]);
  translate([33, 55, 0])
    cube([1, 1, 1.37]);
  translate([34, 55, 0])
    cube([1, 1, 1.37]);
  translate([35, 55, 0])
    cube([1, 1, 1.37]);
  translate([36, 55, 0])
    cube([1, 1, 1.37]);
  translate([37, 55, 0])
    cube([1, 1, 1.37]);
  translate([38, 55, 0])
    cube([1, 1, 1.37]);
  translate([39, 55, 0])
    cube([1, 1, 1.37]);
  translate([40, 55, 0])
    cube([1, 1, 1.37]);
  translate([41, 55, 0])
    cube([1, 1, 1.37]);
  translate([42, 55, 0])
    cube([1, 1, 1.37]);
  translate([43, 55, 0])
    cube([1, 1, 1.37]);
  translate([44, 55, 0])
    cube([1, 1, 1.37]);
  translate([45, 55, 0])
    cube([1, 1, 1.37]);
  translate([46, 55, 0])
    cube([1, 1, 1.37]);
  translate([47, 55, 0])
    cube([1, 1, 1.37]);
  translate([48, 55, 0])
    cube([1, 1, 1.37]);
  translate([49, 55, 0])
    cube([1, 1, 1.37]);
  translate([50, 55, 0])
    cube([1, 1, 1.29]);
  translate([51, 55, 0])
    cube([1, 1, 1.33]);
  translate([52, 55, 0])
    cube([1, 1, 1.37]);
  translate([53, 55, 0])
    cube([1, 1, 1.37]);
  translate([54, 55, 0])
    cube([1, 1, 1.33]);
  translate([55, 55, 0])
    cube([1, 1, 1.33]);
  translate([56, 55, 0])
    cube([1, 1, 1.33]);
  translate([57, 55, 0])
    cube([1, 1, 1.33]);
  translate([58, 55, 0])
    cube([1, 1, 1.33]);
  translate([59, 55, 0])
    cube([1, 1, 1.33]);
  translate([60, 55, 0])
    cube([1, 1, 1.33]);
  translate([61, 55, 0])
    cube([1, 1, 1.33]);
  translate([62, 55, 0])
    cube([1, 1, 1.33]);
  translate([63, 55, 0])
    cube([1, 1, 1.33]);
  translate([64, 55, 0])
    cube([1, 1, 1.33]);
  translate([65, 55, 0])
    cube([1, 1, 1.33]);
  translate([66, 55, 0])
    cube([1, 1, 1.33]);
  translate([67, 55, 0])
    cube([1, 1, 1.33]);
  translate([68, 55, 0])
    cube([1, 1, 1.33]);
  translate([69, 55, 0])
    cube([1, 1, 1.33]);
  translate([70, 55, 0])
    cube([1, 1, 1.33]);
  translate([71, 55, 0])
    cube([1, 1, 1.33]);
  translate([72, 55, 0])
    cube([1, 1, 1.33]);
  translate([73, 55, 0])
    cube([1, 1, 1.33]);
  translate([74, 55, 0])
    cube([1, 1, 1.61]);
  translate([75, 55, 0])
    cube([1, 1, 6.20]);
  translate([76, 55, 0])
    cube([1, 1, 2.08]);
  translate([77, 55, 0])
    cube([1, 1, 0.78]);
  translate([78, 55, 0])
    cube([1, 1, 5.53]);
  translate([79, 55, 0])
    cube([1, 1, 1.06]);
  translate([80, 55, 0])
    cube([1, 1, 1.37]);
  translate([81, 55, 0])
    cube([1, 1, 7.57]);
  translate([82, 55, 0])
    cube([1, 1, 0.47]);
  translate([83, 55, 0])
    cube([1, 1, 0.31]);
  translate([84, 55, 0])
    cube([1, 1, 6.27]);
  translate([85, 55, 0])
    cube([1, 1, 0.98]);
  translate([86, 55, 0])
    cube([1, 1, 1.22]);
  translate([87, 55, 0])
    cube([1, 1, 1.14]);
  translate([88, 55, 0])
    cube([1, 1, 1.22]);
  translate([89, 55, 0])
    cube([1, 1, 1.18]);
  translate([90, 55, 0])
    cube([1, 1, 1.10]);
  translate([91, 55, 0])
    cube([1, 1, 3.33]);
  translate([92, 55, 0])
    cube([1, 1, 0.75]);
  translate([93, 55, 0])
    cube([1, 1, 1.18]);
  translate([94, 55, 0])
    cube([1, 1, 1.41]);
  translate([95, 55, 0])
    cube([1, 1, 5.53]);
  translate([96, 55, 0])
    cube([1, 1, 5.65]);
  translate([97, 55, 0])
    cube([1, 1, 5.69]);
  translate([98, 55, 0])
    cube([1, 1, 5.57]);
  translate([99, 55, 0])
    cube([1, 1, 5.84]);
  translate([100, 55, 0])
    cube([1, 1, 5.96]);
  translate([101, 55, 0])
    cube([1, 1, 6.04]);
  translate([102, 55, 0])
    cube([1, 1, 5.41]);
  translate([103, 55, 0])
    cube([1, 1, 4.86]);
  translate([104, 55, 0])
    cube([1, 1, 4.43]);
  translate([105, 55, 0])
    cube([1, 1, 4.27]);
  translate([106, 55, 0])
    cube([1, 1, 5.84]);
  translate([107, 55, 0])
    cube([1, 1, 6.35]);
  translate([108, 55, 0])
    cube([1, 1, 5.25]);
  translate([109, 55, 0])
    cube([1, 1, 5.65]);
  translate([110, 55, 0])
    cube([1, 1, 5.92]);
  translate([111, 55, 0])
    cube([1, 1, 5.18]);
  translate([112, 55, 0])
    cube([1, 1, 4.31]);
  translate([113, 55, 0])
    cube([1, 1, 3.14]);
  translate([114, 55, 0])
    cube([1, 1, 1.41]);
  translate([115, 55, 0])
    cube([1, 1, 1.06]);
  translate([116, 55, 0])
    cube([1, 1, 1.33]);
  translate([117, 55, 0])
    cube([1, 1, 1.45]);
  translate([118, 55, 0])
    cube([1, 1, 1.25]);
  translate([119, 55, 0])
    cube([1, 1, 1.29]);
  translate([120, 55, 0])
    cube([1, 1, 1.96]);
  translate([121, 55, 0])
    cube([1, 1, 1.22]);
  translate([122, 55, 0])
    cube([1, 1, 1.45]);
  translate([123, 55, 0])
    cube([1, 1, 2.47]);
  translate([124, 55, 0])
    cube([1, 1, 1.73]);
  translate([125, 55, 0])
    cube([1, 1, 1.45]);
  translate([126, 55, 0])
    cube([1, 1, 1.22]);
  translate([127, 55, 0])
    cube([1, 1, 1.29]);
  translate([128, 55, 0])
    cube([1, 1, 1.33]);
  translate([129, 55, 0])
    cube([1, 1, 1.18]);
  translate([130, 55, 0])
    cube([1, 1, 1.25]);
  translate([131, 55, 0])
    cube([1, 1, 1.25]);
  translate([132, 55, 0])
    cube([1, 1, 1.29]);
  translate([133, 55, 0])
    cube([1, 1, 1.25]);
  translate([134, 55, 0])
    cube([1, 1, 1.29]);
  translate([135, 55, 0])
    cube([1, 1, 1.29]);
  translate([136, 55, 0])
    cube([1, 1, 1.29]);
  translate([137, 55, 0])
    cube([1, 1, 1.33]);
  translate([138, 55, 0])
    cube([1, 1, 1.25]);
  translate([139, 55, 0])
    cube([1, 1, 1.25]);
  translate([140, 55, 0])
    cube([1, 1, 1.29]);
  translate([141, 55, 0])
    cube([1, 1, 1.29]);
  translate([142, 55, 0])
    cube([1, 1, 1.29]);
  translate([143, 55, 0])
    cube([1, 1, 1.29]);
  translate([144, 55, 0])
    cube([1, 1, 1.29]);
  translate([145, 55, 0])
    cube([1, 1, 1.25]);
  translate([146, 55, 0])
    cube([1, 1, 1.29]);
  translate([147, 55, 0])
    cube([1, 1, 1.29]);
  translate([148, 55, 0])
    cube([1, 1, 1.29]);
  translate([149, 55, 0])
    cube([1, 1, 1.29]);
  translate([150, 55, 0])
    cube([1, 1, 1.29]);
  translate([151, 55, 0])
    cube([1, 1, 1.29]);
  translate([152, 55, 0])
    cube([1, 1, 1.29]);
  translate([153, 55, 0])
    cube([1, 1, 1.29]);
  translate([154, 55, 0])
    cube([1, 1, 1.29]);
  translate([155, 55, 0])
    cube([1, 1, 1.29]);
  translate([156, 55, 0])
    cube([1, 1, 1.29]);
  translate([157, 55, 0])
    cube([1, 1, 1.29]);
  translate([158, 55, 0])
    cube([1, 1, 1.25]);
  translate([159, 55, 0])
    cube([1, 1, 1.25]);
  translate([160, 55, 0])
    cube([1, 1, 1.29]);
  translate([161, 55, 0])
    cube([1, 1, 1.25]);
  translate([162, 55, 0])
    cube([1, 1, 1.25]);
  translate([163, 55, 0])
    cube([1, 1, 1.29]);
  translate([164, 55, 0])
    cube([1, 1, 1.25]);
  translate([165, 55, 0])
    cube([1, 1, 1.25]);
  translate([166, 55, 0])
    cube([1, 1, 1.29]);
  translate([167, 55, 0])
    cube([1, 1, 1.25]);
  translate([168, 55, 0])
    cube([1, 1, 1.29]);
  translate([169, 55, 0])
    cube([1, 1, 1.25]);
  translate([170, 55, 0])
    cube([1, 1, 1.29]);
  translate([171, 55, 0])
    cube([1, 1, 1.33]);
  translate([172, 55, 0])
    cube([1, 1, 1.29]);
  translate([173, 55, 0])
    cube([1, 1, 1.29]);
  translate([174, 55, 0])
    cube([1, 1, 1.29]);
  translate([175, 55, 0])
    cube([1, 1, 1.29]);
  translate([176, 55, 0])
    cube([1, 1, 1.25]);
  translate([177, 55, 0])
    cube([1, 1, 1.25]);
  translate([178, 55, 0])
    cube([1, 1, 1.33]);
  translate([179, 55, 0])
    cube([1, 1, 1.29]);
  translate([180, 55, 0])
    cube([1, 1, 1.25]);
  translate([181, 55, 0])
    cube([1, 1, 1.25]);
  translate([182, 55, 0])
    cube([1, 1, 1.22]);
  translate([183, 55, 0])
    cube([1, 1, 1.33]);
  translate([184, 55, 0])
    cube([1, 1, 1.25]);
  translate([185, 55, 0])
    cube([1, 1, 1.25]);
  translate([186, 55, 0])
    cube([1, 1, 1.25]);
  translate([187, 55, 0])
    cube([1, 1, 1.25]);
  translate([188, 55, 0])
    cube([1, 1, 1.25]);
  translate([189, 55, 0])
    cube([1, 1, 1.25]);
  translate([190, 55, 0])
    cube([1, 1, 1.25]);
  translate([191, 55, 0])
    cube([1, 1, 1.25]);
  translate([192, 55, 0])
    cube([1, 1, 1.25]);
  translate([193, 55, 0])
    cube([1, 1, 1.25]);
  translate([194, 55, 0])
    cube([1, 1, 1.25]);
  translate([195, 55, 0])
    cube([1, 1, 1.25]);
  translate([196, 55, 0])
    cube([1, 1, 1.25]);
  translate([197, 55, 0])
    cube([1, 1, 1.25]);
  translate([198, 55, 0])
    cube([1, 1, 1.25]);
  translate([199, 55, 0])
    cube([1, 1, 1.22]);
  translate([200, 55, 0])
    cube([1, 1, 1.25]);
  translate([201, 55, 0])
    cube([1, 1, 1.25]);
  translate([202, 55, 0])
    cube([1, 1, 1.25]);
  translate([203, 55, 0])
    cube([1, 1, 1.25]);
  translate([204, 55, 0])
    cube([1, 1, 1.25]);
  translate([205, 55, 0])
    cube([1, 1, 1.25]);
  translate([206, 55, 0])
    cube([1, 1, 1.25]);
  translate([207, 55, 0])
    cube([1, 1, 1.25]);
  translate([208, 55, 0])
    cube([1, 1, 1.25]);
  translate([209, 55, 0])
    cube([1, 1, 1.25]);
  translate([210, 55, 0])
    cube([1, 1, 1.25]);
  translate([211, 55, 0])
    cube([1, 1, 1.25]);
  translate([212, 55, 0])
    cube([1, 1, 1.25]);
  translate([213, 55, 0])
    cube([1, 1, 1.25]);
  translate([214, 55, 0])
    cube([1, 1, 1.25]);
  translate([215, 55, 0])
    cube([1, 1, 1.25]);
  translate([216, 55, 0])
    cube([1, 1, 1.25]);
  translate([217, 55, 0])
    cube([1, 1, 1.25]);
  translate([218, 55, 0])
    cube([1, 1, 1.25]);
  translate([219, 55, 0])
    cube([1, 1, 1.25]);
  translate([220, 55, 0])
    cube([1, 1, 1.25]);
  translate([221, 55, 0])
    cube([1, 1, 1.25]);
  translate([222, 55, 0])
    cube([1, 1, 1.25]);
  translate([223, 55, 0])
    cube([1, 1, 1.25]);
  translate([224, 55, 0])
    cube([1, 1, 1.25]);
  translate([225, 55, 0])
    cube([1, 1, 1.25]);
  translate([226, 55, 0])
    cube([1, 1, 1.25]);
  translate([227, 55, 0])
    cube([1, 1, 1.25]);
  translate([228, 55, 0])
    cube([1, 1, 1.25]);
  translate([229, 55, 0])
    cube([1, 1, 1.25]);
  translate([230, 55, 0])
    cube([1, 1, 1.25]);
  translate([231, 55, 0])
    cube([1, 1, 1.25]);
  translate([232, 55, 0])
    cube([1, 1, 1.25]);
  translate([233, 55, 0])
    cube([1, 1, 1.25]);
  translate([234, 55, 0])
    cube([1, 1, 1.25]);
  translate([235, 55, 0])
    cube([1, 1, 1.25]);
  translate([236, 55, 0])
    cube([1, 1, 1.25]);
  translate([237, 55, 0])
    cube([1, 1, 1.25]);
  translate([238, 55, 0])
    cube([1, 1, 1.25]);
  translate([239, 55, 0])
    cube([1, 1, 1.25]);
  translate([240, 55, 0])
    cube([1, 1, 1.25]);
  translate([241, 55, 0])
    cube([1, 1, 1.25]);
  translate([242, 55, 0])
    cube([1, 1, 1.25]);
  translate([243, 55, 0])
    cube([1, 1, 1.25]);
  translate([244, 55, 0])
    cube([1, 1, 1.25]);
  translate([245, 55, 0])
    cube([1, 1, 1.25]);
  translate([246, 55, 0])
    cube([1, 1, 1.25]);
  translate([0, 56, 0])
    cube([1, 1, 1.41]);
  translate([1, 56, 0])
    cube([1, 1, 1.41]);
  translate([2, 56, 0])
    cube([1, 1, 1.41]);
  translate([3, 56, 0])
    cube([1, 1, 1.41]);
  translate([4, 56, 0])
    cube([1, 1, 1.41]);
  translate([5, 56, 0])
    cube([1, 1, 1.41]);
  translate([6, 56, 0])
    cube([1, 1, 1.41]);
  translate([7, 56, 0])
    cube([1, 1, 1.41]);
  translate([8, 56, 0])
    cube([1, 1, 1.41]);
  translate([9, 56, 0])
    cube([1, 1, 1.37]);
  translate([10, 56, 0])
    cube([1, 1, 1.37]);
  translate([11, 56, 0])
    cube([1, 1, 1.41]);
  translate([12, 56, 0])
    cube([1, 1, 1.41]);
  translate([13, 56, 0])
    cube([1, 1, 1.41]);
  translate([14, 56, 0])
    cube([1, 1, 1.41]);
  translate([15, 56, 0])
    cube([1, 1, 1.41]);
  translate([16, 56, 0])
    cube([1, 1, 1.41]);
  translate([17, 56, 0])
    cube([1, 1, 1.14]);
  translate([18, 56, 0])
    cube([1, 1, 1.76]);
  translate([19, 56, 0])
    cube([1, 1, 1.22]);
  translate([20, 56, 0])
    cube([1, 1, 1.73]);
  translate([21, 56, 0])
    cube([1, 1, 1.22]);
  translate([22, 56, 0])
    cube([1, 1, 0.31]);
  translate([23, 56, 0])
    cube([1, 1, 0.59]);
  translate([24, 56, 0])
    cube([1, 1, 1.18]);
  translate([25, 56, 0])
    cube([1, 1, 0.63]);
  translate([26, 56, 0])
    cube([1, 1, 0.39]);
  translate([27, 56, 0])
    cube([1, 1, 0.78]);
  translate([28, 56, 0])
    cube([1, 1, 0.75]);
  translate([29, 56, 0])
    cube([1, 1, 0.75]);
  translate([30, 56, 0])
    cube([1, 1, 1.25]);
  translate([31, 56, 0])
    cube([1, 1, 1.37]);
  translate([32, 56, 0])
    cube([1, 1, 1.41]);
  translate([33, 56, 0])
    cube([1, 1, 1.37]);
  translate([34, 56, 0])
    cube([1, 1, 1.37]);
  translate([35, 56, 0])
    cube([1, 1, 1.37]);
  translate([36, 56, 0])
    cube([1, 1, 1.37]);
  translate([37, 56, 0])
    cube([1, 1, 1.37]);
  translate([38, 56, 0])
    cube([1, 1, 1.37]);
  translate([39, 56, 0])
    cube([1, 1, 1.37]);
  translate([40, 56, 0])
    cube([1, 1, 1.37]);
  translate([41, 56, 0])
    cube([1, 1, 1.37]);
  translate([42, 56, 0])
    cube([1, 1, 1.37]);
  translate([43, 56, 0])
    cube([1, 1, 1.37]);
  translate([44, 56, 0])
    cube([1, 1, 1.37]);
  translate([45, 56, 0])
    cube([1, 1, 1.37]);
  translate([46, 56, 0])
    cube([1, 1, 1.37]);
  translate([47, 56, 0])
    cube([1, 1, 1.37]);
  translate([48, 56, 0])
    cube([1, 1, 1.37]);
  translate([49, 56, 0])
    cube([1, 1, 1.29]);
  translate([50, 56, 0])
    cube([1, 1, 1.29]);
  translate([51, 56, 0])
    cube([1, 1, 1.29]);
  translate([52, 56, 0])
    cube([1, 1, 1.33]);
  translate([53, 56, 0])
    cube([1, 1, 1.33]);
  translate([54, 56, 0])
    cube([1, 1, 1.37]);
  translate([55, 56, 0])
    cube([1, 1, 1.33]);
  translate([56, 56, 0])
    cube([1, 1, 1.33]);
  translate([57, 56, 0])
    cube([1, 1, 1.33]);
  translate([58, 56, 0])
    cube([1, 1, 1.33]);
  translate([59, 56, 0])
    cube([1, 1, 1.33]);
  translate([60, 56, 0])
    cube([1, 1, 1.33]);
  translate([61, 56, 0])
    cube([1, 1, 1.33]);
  translate([62, 56, 0])
    cube([1, 1, 1.33]);
  translate([63, 56, 0])
    cube([1, 1, 1.33]);
  translate([64, 56, 0])
    cube([1, 1, 1.33]);
  translate([65, 56, 0])
    cube([1, 1, 1.33]);
  translate([66, 56, 0])
    cube([1, 1, 1.33]);
  translate([67, 56, 0])
    cube([1, 1, 1.33]);
  translate([68, 56, 0])
    cube([1, 1, 1.33]);
  translate([69, 56, 0])
    cube([1, 1, 1.33]);
  translate([70, 56, 0])
    cube([1, 1, 1.33]);
  translate([71, 56, 0])
    cube([1, 1, 1.33]);
  translate([72, 56, 0])
    cube([1, 1, 1.37]);
  translate([73, 56, 0])
    cube([1, 1, 1.02]);
  translate([74, 56, 0])
    cube([1, 1, 1.37]);
  translate([75, 56, 0])
    cube([1, 1, 6.67]);
  translate([76, 56, 0])
    cube([1, 1, 7.18]);
  translate([77, 56, 0])
    cube([1, 1, 1.25]);
  translate([78, 56, 0])
    cube([1, 1, 0.82]);
  translate([79, 56, 0])
    cube([1, 1, 1.10]);
  translate([80, 56, 0])
    cube([1, 1, 0.78]);
  translate([81, 56, 0])
    cube([1, 1, 7.80]);
  translate([82, 56, 0])
    cube([1, 1, 0.90]);
  translate([83, 56, 0])
    cube([1, 1, 0.75]);
  translate([84, 56, 0])
    cube([1, 1, 4.55]);
  translate([85, 56, 0])
    cube([1, 1, 1.06]);
  translate([86, 56, 0])
    cube([1, 1, 4.63]);
  translate([87, 56, 0])
    cube([1, 1, 0.94]);
  translate([88, 56, 0])
    cube([1, 1, 1.25]);
  translate([89, 56, 0])
    cube([1, 1, 1.10]);
  translate([90, 56, 0])
    cube([1, 1, 1.25]);
  translate([91, 56, 0])
    cube([1, 1, 2.82]);
  translate([92, 56, 0])
    cube([1, 1, 0.82]);
  translate([93, 56, 0])
    cube([1, 1, 0.86]);
  translate([94, 56, 0])
    cube([1, 1, 1.25]);
  translate([95, 56, 0])
    cube([1, 1, 5.84]);
  translate([96, 56, 0])
    cube([1, 1, 6.00]);
  translate([97, 56, 0])
    cube([1, 1, 6.27]);
  translate([98, 56, 0])
    cube([1, 1, 6.47]);
  translate([99, 56, 0])
    cube([1, 1, 6.63]);
  translate([100, 56, 0])
    cube([1, 1, 6.59]);
  translate([101, 56, 0])
    cube([1, 1, 6.00]);
  translate([102, 56, 0])
    cube([1, 1, 5.49]);
  translate([103, 56, 0])
    cube([1, 1, 4.86]);
  translate([104, 56, 0])
    cube([1, 1, 4.35]);
  translate([105, 56, 0])
    cube([1, 1, 4.31]);
  translate([106, 56, 0])
    cube([1, 1, 5.57]);
  translate([107, 56, 0])
    cube([1, 1, 6.24]);
  translate([108, 56, 0])
    cube([1, 1, 5.22]);
  translate([109, 56, 0])
    cube([1, 1, 5.65]);
  translate([110, 56, 0])
    cube([1, 1, 5.84]);
  translate([111, 56, 0])
    cube([1, 1, 5.61]);
  translate([112, 56, 0])
    cube([1, 1, 4.78]);
  translate([113, 56, 0])
    cube([1, 1, 3.41]);
  translate([114, 56, 0])
    cube([1, 1, 1.33]);
  translate([115, 56, 0])
    cube([1, 1, 1.06]);
  translate([116, 56, 0])
    cube([1, 1, 1.53]);
  translate([117, 56, 0])
    cube([1, 1, 1.49]);
  translate([118, 56, 0])
    cube([1, 1, 1.33]);
  translate([119, 56, 0])
    cube([1, 1, 1.49]);
  translate([120, 56, 0])
    cube([1, 1, 1.49]);
  translate([121, 56, 0])
    cube([1, 1, 0.86]);
  translate([122, 56, 0])
    cube([1, 1, 0.75]);
  translate([123, 56, 0])
    cube([1, 1, 1.73]);
  translate([124, 56, 0])
    cube([1, 1, 1.69]);
  translate([125, 56, 0])
    cube([1, 1, 1.37]);
  translate([126, 56, 0])
    cube([1, 1, 1.25]);
  translate([127, 56, 0])
    cube([1, 1, 1.25]);
  translate([128, 56, 0])
    cube([1, 1, 1.29]);
  translate([129, 56, 0])
    cube([1, 1, 1.25]);
  translate([130, 56, 0])
    cube([1, 1, 1.29]);
  translate([131, 56, 0])
    cube([1, 1, 1.25]);
  translate([132, 56, 0])
    cube([1, 1, 1.22]);
  translate([133, 56, 0])
    cube([1, 1, 1.25]);
  translate([134, 56, 0])
    cube([1, 1, 1.29]);
  translate([135, 56, 0])
    cube([1, 1, 1.25]);
  translate([136, 56, 0])
    cube([1, 1, 1.29]);
  translate([137, 56, 0])
    cube([1, 1, 1.33]);
  translate([138, 56, 0])
    cube([1, 1, 1.33]);
  translate([139, 56, 0])
    cube([1, 1, 1.29]);
  translate([140, 56, 0])
    cube([1, 1, 1.22]);
  translate([141, 56, 0])
    cube([1, 1, 1.29]);
  translate([142, 56, 0])
    cube([1, 1, 1.29]);
  translate([143, 56, 0])
    cube([1, 1, 1.33]);
  translate([144, 56, 0])
    cube([1, 1, 1.29]);
  translate([145, 56, 0])
    cube([1, 1, 1.25]);
  translate([146, 56, 0])
    cube([1, 1, 1.29]);
  translate([147, 56, 0])
    cube([1, 1, 1.29]);
  translate([148, 56, 0])
    cube([1, 1, 1.25]);
  translate([149, 56, 0])
    cube([1, 1, 1.25]);
  translate([150, 56, 0])
    cube([1, 1, 1.25]);
  translate([151, 56, 0])
    cube([1, 1, 1.29]);
  translate([152, 56, 0])
    cube([1, 1, 1.29]);
  translate([153, 56, 0])
    cube([1, 1, 1.25]);
  translate([154, 56, 0])
    cube([1, 1, 1.25]);
  translate([155, 56, 0])
    cube([1, 1, 1.29]);
  translate([156, 56, 0])
    cube([1, 1, 1.29]);
  translate([157, 56, 0])
    cube([1, 1, 1.29]);
  translate([158, 56, 0])
    cube([1, 1, 1.29]);
  translate([159, 56, 0])
    cube([1, 1, 1.29]);
  translate([160, 56, 0])
    cube([1, 1, 1.29]);
  translate([161, 56, 0])
    cube([1, 1, 1.29]);
  translate([162, 56, 0])
    cube([1, 1, 1.29]);
  translate([163, 56, 0])
    cube([1, 1, 1.29]);
  translate([164, 56, 0])
    cube([1, 1, 1.29]);
  translate([165, 56, 0])
    cube([1, 1, 1.29]);
  translate([166, 56, 0])
    cube([1, 1, 1.29]);
  translate([167, 56, 0])
    cube([1, 1, 1.29]);
  translate([168, 56, 0])
    cube([1, 1, 1.29]);
  translate([169, 56, 0])
    cube([1, 1, 1.29]);
  translate([170, 56, 0])
    cube([1, 1, 1.29]);
  translate([171, 56, 0])
    cube([1, 1, 1.29]);
  translate([172, 56, 0])
    cube([1, 1, 1.33]);
  translate([173, 56, 0])
    cube([1, 1, 1.33]);
  translate([174, 56, 0])
    cube([1, 1, 1.25]);
  translate([175, 56, 0])
    cube([1, 1, 1.29]);
  translate([176, 56, 0])
    cube([1, 1, 1.29]);
  translate([177, 56, 0])
    cube([1, 1, 1.29]);
  translate([178, 56, 0])
    cube([1, 1, 1.29]);
  translate([179, 56, 0])
    cube([1, 1, 1.29]);
  translate([180, 56, 0])
    cube([1, 1, 1.33]);
  translate([181, 56, 0])
    cube([1, 1, 1.33]);
  translate([182, 56, 0])
    cube([1, 1, 1.25]);
  translate([183, 56, 0])
    cube([1, 1, 1.22]);
  translate([184, 56, 0])
    cube([1, 1, 1.25]);
  translate([185, 56, 0])
    cube([1, 1, 1.29]);
  translate([186, 56, 0])
    cube([1, 1, 1.22]);
  translate([187, 56, 0])
    cube([1, 1, 1.25]);
  translate([188, 56, 0])
    cube([1, 1, 1.25]);
  translate([189, 56, 0])
    cube([1, 1, 1.25]);
  translate([190, 56, 0])
    cube([1, 1, 1.25]);
  translate([191, 56, 0])
    cube([1, 1, 1.25]);
  translate([192, 56, 0])
    cube([1, 1, 1.25]);
  translate([193, 56, 0])
    cube([1, 1, 1.22]);
  translate([194, 56, 0])
    cube([1, 1, 1.29]);
  translate([195, 56, 0])
    cube([1, 1, 1.22]);
  translate([196, 56, 0])
    cube([1, 1, 1.25]);
  translate([197, 56, 0])
    cube([1, 1, 1.25]);
  translate([198, 56, 0])
    cube([1, 1, 1.25]);
  translate([199, 56, 0])
    cube([1, 1, 1.25]);
  translate([200, 56, 0])
    cube([1, 1, 1.25]);
  translate([201, 56, 0])
    cube([1, 1, 1.25]);
  translate([202, 56, 0])
    cube([1, 1, 1.25]);
  translate([203, 56, 0])
    cube([1, 1, 1.25]);
  translate([204, 56, 0])
    cube([1, 1, 1.25]);
  translate([205, 56, 0])
    cube([1, 1, 1.25]);
  translate([206, 56, 0])
    cube([1, 1, 1.25]);
  translate([207, 56, 0])
    cube([1, 1, 1.25]);
  translate([208, 56, 0])
    cube([1, 1, 1.25]);
  translate([209, 56, 0])
    cube([1, 1, 1.25]);
  translate([210, 56, 0])
    cube([1, 1, 1.25]);
  translate([211, 56, 0])
    cube([1, 1, 1.25]);
  translate([212, 56, 0])
    cube([1, 1, 1.25]);
  translate([213, 56, 0])
    cube([1, 1, 1.25]);
  translate([214, 56, 0])
    cube([1, 1, 1.25]);
  translate([215, 56, 0])
    cube([1, 1, 1.22]);
  translate([216, 56, 0])
    cube([1, 1, 1.25]);
  translate([217, 56, 0])
    cube([1, 1, 1.25]);
  translate([218, 56, 0])
    cube([1, 1, 1.25]);
  translate([219, 56, 0])
    cube([1, 1, 1.25]);
  translate([220, 56, 0])
    cube([1, 1, 1.25]);
  translate([221, 56, 0])
    cube([1, 1, 1.25]);
  translate([222, 56, 0])
    cube([1, 1, 1.25]);
  translate([223, 56, 0])
    cube([1, 1, 1.25]);
  translate([224, 56, 0])
    cube([1, 1, 1.25]);
  translate([225, 56, 0])
    cube([1, 1, 1.25]);
  translate([226, 56, 0])
    cube([1, 1, 1.25]);
  translate([227, 56, 0])
    cube([1, 1, 1.25]);
  translate([228, 56, 0])
    cube([1, 1, 1.25]);
  translate([229, 56, 0])
    cube([1, 1, 1.25]);
  translate([230, 56, 0])
    cube([1, 1, 1.25]);
  translate([231, 56, 0])
    cube([1, 1, 1.25]);
  translate([232, 56, 0])
    cube([1, 1, 1.25]);
  translate([233, 56, 0])
    cube([1, 1, 1.25]);
  translate([234, 56, 0])
    cube([1, 1, 1.25]);
  translate([235, 56, 0])
    cube([1, 1, 1.25]);
  translate([236, 56, 0])
    cube([1, 1, 1.25]);
  translate([237, 56, 0])
    cube([1, 1, 1.25]);
  translate([238, 56, 0])
    cube([1, 1, 1.25]);
  translate([239, 56, 0])
    cube([1, 1, 1.25]);
  translate([240, 56, 0])
    cube([1, 1, 1.25]);
  translate([241, 56, 0])
    cube([1, 1, 1.25]);
  translate([242, 56, 0])
    cube([1, 1, 1.25]);
  translate([243, 56, 0])
    cube([1, 1, 1.25]);
  translate([244, 56, 0])
    cube([1, 1, 1.25]);
  translate([245, 56, 0])
    cube([1, 1, 1.25]);
  translate([246, 56, 0])
    cube([1, 1, 1.25]);
  translate([0, 57, 0])
    cube([1, 1, 1.41]);
  translate([1, 57, 0])
    cube([1, 1, 1.41]);
  translate([2, 57, 0])
    cube([1, 1, 1.41]);
  translate([3, 57, 0])
    cube([1, 1, 1.41]);
  translate([4, 57, 0])
    cube([1, 1, 1.41]);
  translate([5, 57, 0])
    cube([1, 1, 1.41]);
  translate([6, 57, 0])
    cube([1, 1, 1.41]);
  translate([7, 57, 0])
    cube([1, 1, 1.41]);
  translate([8, 57, 0])
    cube([1, 1, 1.41]);
  translate([9, 57, 0])
    cube([1, 1, 1.41]);
  translate([10, 57, 0])
    cube([1, 1, 1.41]);
  translate([11, 57, 0])
    cube([1, 1, 1.41]);
  translate([12, 57, 0])
    cube([1, 1, 1.41]);
  translate([13, 57, 0])
    cube([1, 1, 1.41]);
  translate([14, 57, 0])
    cube([1, 1, 1.41]);
  translate([15, 57, 0])
    cube([1, 1, 1.41]);
  translate([16, 57, 0])
    cube([1, 1, 1.45]);
  translate([17, 57, 0])
    cube([1, 1, 1.10]);
  translate([18, 57, 0])
    cube([1, 1, 5.88]);
  translate([19, 57, 0])
    cube([1, 1, 1.29]);
  translate([20, 57, 0])
    cube([1, 1, 5.69]);
  translate([21, 57, 0])
    cube([1, 1, 1.10]);
  translate([22, 57, 0])
    cube([1, 1, 0.63]);
  translate([23, 57, 0])
    cube([1, 1, 0.47]);
  translate([24, 57, 0])
    cube([1, 1, 0.90]);
  translate([25, 57, 0])
    cube([1, 1, 0.71]);
  translate([26, 57, 0])
    cube([1, 1, 0.67]);
  translate([27, 57, 0])
    cube([1, 1, 0.75]);
  translate([28, 57, 0])
    cube([1, 1, 0.82]);
  translate([29, 57, 0])
    cube([1, 1, 0.82]);
  translate([30, 57, 0])
    cube([1, 1, 1.02]);
  translate([31, 57, 0])
    cube([1, 1, 1.29]);
  translate([32, 57, 0])
    cube([1, 1, 1.45]);
  translate([33, 57, 0])
    cube([1, 1, 1.37]);
  translate([34, 57, 0])
    cube([1, 1, 1.37]);
  translate([35, 57, 0])
    cube([1, 1, 1.37]);
  translate([36, 57, 0])
    cube([1, 1, 1.37]);
  translate([37, 57, 0])
    cube([1, 1, 1.37]);
  translate([38, 57, 0])
    cube([1, 1, 1.37]);
  translate([39, 57, 0])
    cube([1, 1, 1.37]);
  translate([40, 57, 0])
    cube([1, 1, 1.37]);
  translate([41, 57, 0])
    cube([1, 1, 1.37]);
  translate([42, 57, 0])
    cube([1, 1, 1.37]);
  translate([43, 57, 0])
    cube([1, 1, 1.37]);
  translate([44, 57, 0])
    cube([1, 1, 1.37]);
  translate([45, 57, 0])
    cube([1, 1, 1.37]);
  translate([46, 57, 0])
    cube([1, 1, 1.37]);
  translate([47, 57, 0])
    cube([1, 1, 1.37]);
  translate([48, 57, 0])
    cube([1, 1, 1.37]);
  translate([49, 57, 0])
    cube([1, 1, 1.37]);
  translate([50, 57, 0])
    cube([1, 1, 1.37]);
  translate([51, 57, 0])
    cube([1, 1, 1.37]);
  translate([52, 57, 0])
    cube([1, 1, 1.33]);
  translate([53, 57, 0])
    cube([1, 1, 1.33]);
  translate([54, 57, 0])
    cube([1, 1, 1.45]);
  translate([55, 57, 0])
    cube([1, 1, 1.41]);
  translate([56, 57, 0])
    cube([1, 1, 1.37]);
  translate([57, 57, 0])
    cube([1, 1, 1.33]);
  translate([58, 57, 0])
    cube([1, 1, 1.33]);
  translate([59, 57, 0])
    cube([1, 1, 1.33]);
  translate([60, 57, 0])
    cube([1, 1, 1.33]);
  translate([61, 57, 0])
    cube([1, 1, 1.33]);
  translate([62, 57, 0])
    cube([1, 1, 1.33]);
  translate([63, 57, 0])
    cube([1, 1, 1.33]);
  translate([64, 57, 0])
    cube([1, 1, 1.33]);
  translate([65, 57, 0])
    cube([1, 1, 1.33]);
  translate([66, 57, 0])
    cube([1, 1, 1.33]);
  translate([67, 57, 0])
    cube([1, 1, 1.33]);
  translate([68, 57, 0])
    cube([1, 1, 1.33]);
  translate([69, 57, 0])
    cube([1, 1, 1.33]);
  translate([70, 57, 0])
    cube([1, 1, 1.33]);
  translate([71, 57, 0])
    cube([1, 1, 1.33]);
  translate([72, 57, 0])
    cube([1, 1, 1.37]);
  translate([73, 57, 0])
    cube([1, 1, 1.41]);
  translate([74, 57, 0])
    cube([1, 1, 1.06]);
  translate([75, 57, 0])
    cube([1, 1, 6.86]);
  translate([76, 57, 0])
    cube([1, 1, 1.29]);
  translate([77, 57, 0])
    cube([1, 1, 0.78]);
  translate([78, 57, 0])
    cube([1, 1, 0.82]);
  translate([79, 57, 0])
    cube([1, 1, 0.63]);
  translate([80, 57, 0])
    cube([1, 1, 0.24]);
  translate([81, 57, 0])
    cube([1, 1, 7.76]);
  translate([82, 57, 0])
    cube([1, 1, 1.02]);
  translate([83, 57, 0])
    cube([1, 1, 0.75]);
  translate([84, 57, 0])
    cube([1, 1, 0.59]);
  translate([85, 57, 0])
    cube([1, 1, 0.67]);
  translate([86, 57, 0])
    cube([1, 1, 5.25]);
  translate([87, 57, 0])
    cube([1, 1, 1.45]);
  translate([88, 57, 0])
    cube([1, 1, 1.37]);
  translate([89, 57, 0])
    cube([1, 1, 1.14]);
  translate([90, 57, 0])
    cube([1, 1, 1.29]);
  translate([91, 57, 0])
    cube([1, 1, 2.71]);
  translate([92, 57, 0])
    cube([1, 1, 0.94]);
  translate([93, 57, 0])
    cube([1, 1, 0.78]);
  translate([94, 57, 0])
    cube([1, 1, 1.14]);
  translate([95, 57, 0])
    cube([1, 1, 5.73]);
  translate([96, 57, 0])
    cube([1, 1, 6.04]);
  translate([97, 57, 0])
    cube([1, 1, 6.27]);
  translate([98, 57, 0])
    cube([1, 1, 6.55]);
  translate([99, 57, 0])
    cube([1, 1, 6.51]);
  translate([100, 57, 0])
    cube([1, 1, 6.35]);
  translate([101, 57, 0])
    cube([1, 1, 6.08]);
  translate([102, 57, 0])
    cube([1, 1, 5.22]);
  translate([103, 57, 0])
    cube([1, 1, 4.78]);
  translate([104, 57, 0])
    cube([1, 1, 4.31]);
  translate([105, 57, 0])
    cube([1, 1, 4.12]);
  translate([106, 57, 0])
    cube([1, 1, 5.37]);
  translate([107, 57, 0])
    cube([1, 1, 6.35]);
  translate([108, 57, 0])
    cube([1, 1, 5.65]);
  translate([109, 57, 0])
    cube([1, 1, 5.73]);
  translate([110, 57, 0])
    cube([1, 1, 5.84]);
  translate([111, 57, 0])
    cube([1, 1, 5.61]);
  translate([112, 57, 0])
    cube([1, 1, 5.14]);
  translate([113, 57, 0])
    cube([1, 1, 3.80]);
  translate([114, 57, 0])
    cube([1, 1, 1.69]);
  translate([115, 57, 0])
    cube([1, 1, 1.02]);
  translate([116, 57, 0])
    cube([1, 1, 1.76]);
  translate([117, 57, 0])
    cube([1, 1, 1.65]);
  translate([118, 57, 0])
    cube([1, 1, 1.14]);
  translate([119, 57, 0])
    cube([1, 1, 1.53]);
  translate([120, 57, 0])
    cube([1, 1, 1.37]);
  translate([121, 57, 0])
    cube([1, 1, 0.86]);
  translate([122, 57, 0])
    cube([1, 1, 2.20]);
  translate([123, 57, 0])
    cube([1, 1, 1.33]);
  translate([124, 57, 0])
    cube([1, 1, 1.61]);
  translate([125, 57, 0])
    cube([1, 1, 1.22]);
  translate([126, 57, 0])
    cube([1, 1, 1.22]);
  translate([127, 57, 0])
    cube([1, 1, 1.29]);
  translate([128, 57, 0])
    cube([1, 1, 1.29]);
  translate([129, 57, 0])
    cube([1, 1, 1.25]);
  translate([130, 57, 0])
    cube([1, 1, 1.29]);
  translate([131, 57, 0])
    cube([1, 1, 1.25]);
  translate([132, 57, 0])
    cube([1, 1, 1.22]);
  translate([133, 57, 0])
    cube([1, 1, 1.25]);
  translate([134, 57, 0])
    cube([1, 1, 1.29]);
  translate([135, 57, 0])
    cube([1, 1, 1.25]);
  translate([136, 57, 0])
    cube([1, 1, 1.29]);
  translate([137, 57, 0])
    cube([1, 1, 1.33]);
  translate([138, 57, 0])
    cube([1, 1, 1.33]);
  translate([139, 57, 0])
    cube([1, 1, 1.29]);
  translate([140, 57, 0])
    cube([1, 1, 1.29]);
  translate([141, 57, 0])
    cube([1, 1, 1.25]);
  translate([142, 57, 0])
    cube([1, 1, 1.25]);
  translate([143, 57, 0])
    cube([1, 1, 1.29]);
  translate([144, 57, 0])
    cube([1, 1, 1.29]);
  translate([145, 57, 0])
    cube([1, 1, 1.25]);
  translate([146, 57, 0])
    cube([1, 1, 1.29]);
  translate([147, 57, 0])
    cube([1, 1, 1.29]);
  translate([148, 57, 0])
    cube([1, 1, 1.29]);
  translate([149, 57, 0])
    cube([1, 1, 1.29]);
  translate([150, 57, 0])
    cube([1, 1, 1.25]);
  translate([151, 57, 0])
    cube([1, 1, 1.29]);
  translate([152, 57, 0])
    cube([1, 1, 1.29]);
  translate([153, 57, 0])
    cube([1, 1, 1.25]);
  translate([154, 57, 0])
    cube([1, 1, 1.25]);
  translate([155, 57, 0])
    cube([1, 1, 1.29]);
  translate([156, 57, 0])
    cube([1, 1, 1.29]);
  translate([157, 57, 0])
    cube([1, 1, 1.29]);
  translate([158, 57, 0])
    cube([1, 1, 1.29]);
  translate([159, 57, 0])
    cube([1, 1, 1.29]);
  translate([160, 57, 0])
    cube([1, 1, 1.29]);
  translate([161, 57, 0])
    cube([1, 1, 1.29]);
  translate([162, 57, 0])
    cube([1, 1, 1.29]);
  translate([163, 57, 0])
    cube([1, 1, 1.29]);
  translate([164, 57, 0])
    cube([1, 1, 1.29]);
  translate([165, 57, 0])
    cube([1, 1, 1.29]);
  translate([166, 57, 0])
    cube([1, 1, 1.29]);
  translate([167, 57, 0])
    cube([1, 1, 1.29]);
  translate([168, 57, 0])
    cube([1, 1, 1.29]);
  translate([169, 57, 0])
    cube([1, 1, 1.29]);
  translate([170, 57, 0])
    cube([1, 1, 1.29]);
  translate([171, 57, 0])
    cube([1, 1, 1.29]);
  translate([172, 57, 0])
    cube([1, 1, 1.25]);
  translate([173, 57, 0])
    cube([1, 1, 1.25]);
  translate([174, 57, 0])
    cube([1, 1, 1.25]);
  translate([175, 57, 0])
    cube([1, 1, 1.29]);
  translate([176, 57, 0])
    cube([1, 1, 1.29]);
  translate([177, 57, 0])
    cube([1, 1, 1.29]);
  translate([178, 57, 0])
    cube([1, 1, 1.29]);
  translate([179, 57, 0])
    cube([1, 1, 1.29]);
  translate([180, 57, 0])
    cube([1, 1, 1.25]);
  translate([181, 57, 0])
    cube([1, 1, 1.25]);
  translate([182, 57, 0])
    cube([1, 1, 1.25]);
  translate([183, 57, 0])
    cube([1, 1, 1.22]);
  translate([184, 57, 0])
    cube([1, 1, 1.25]);
  translate([185, 57, 0])
    cube([1, 1, 1.25]);
  translate([186, 57, 0])
    cube([1, 1, 1.25]);
  translate([187, 57, 0])
    cube([1, 1, 1.25]);
  translate([188, 57, 0])
    cube([1, 1, 1.25]);
  translate([189, 57, 0])
    cube([1, 1, 1.25]);
  translate([190, 57, 0])
    cube([1, 1, 1.25]);
  translate([191, 57, 0])
    cube([1, 1, 1.25]);
  translate([192, 57, 0])
    cube([1, 1, 1.25]);
  translate([193, 57, 0])
    cube([1, 1, 1.22]);
  translate([194, 57, 0])
    cube([1, 1, 1.29]);
  translate([195, 57, 0])
    cube([1, 1, 1.22]);
  translate([196, 57, 0])
    cube([1, 1, 1.25]);
  translate([197, 57, 0])
    cube([1, 1, 1.25]);
  translate([198, 57, 0])
    cube([1, 1, 1.25]);
  translate([199, 57, 0])
    cube([1, 1, 1.25]);
  translate([200, 57, 0])
    cube([1, 1, 1.25]);
  translate([201, 57, 0])
    cube([1, 1, 1.25]);
  translate([202, 57, 0])
    cube([1, 1, 1.25]);
  translate([203, 57, 0])
    cube([1, 1, 1.25]);
  translate([204, 57, 0])
    cube([1, 1, 1.25]);
  translate([205, 57, 0])
    cube([1, 1, 1.25]);
  translate([206, 57, 0])
    cube([1, 1, 1.25]);
  translate([207, 57, 0])
    cube([1, 1, 1.25]);
  translate([208, 57, 0])
    cube([1, 1, 1.25]);
  translate([209, 57, 0])
    cube([1, 1, 1.25]);
  translate([210, 57, 0])
    cube([1, 1, 1.25]);
  translate([211, 57, 0])
    cube([1, 1, 1.25]);
  translate([212, 57, 0])
    cube([1, 1, 1.25]);
  translate([213, 57, 0])
    cube([1, 1, 1.25]);
  translate([214, 57, 0])
    cube([1, 1, 1.22]);
  translate([215, 57, 0])
    cube([1, 1, 1.29]);
  translate([216, 57, 0])
    cube([1, 1, 1.25]);
  translate([217, 57, 0])
    cube([1, 1, 1.25]);
  translate([218, 57, 0])
    cube([1, 1, 1.25]);
  translate([219, 57, 0])
    cube([1, 1, 1.25]);
  translate([220, 57, 0])
    cube([1, 1, 1.25]);
  translate([221, 57, 0])
    cube([1, 1, 1.25]);
  translate([222, 57, 0])
    cube([1, 1, 1.25]);
  translate([223, 57, 0])
    cube([1, 1, 1.25]);
  translate([224, 57, 0])
    cube([1, 1, 1.25]);
  translate([225, 57, 0])
    cube([1, 1, 1.25]);
  translate([226, 57, 0])
    cube([1, 1, 1.25]);
  translate([227, 57, 0])
    cube([1, 1, 1.25]);
  translate([228, 57, 0])
    cube([1, 1, 1.25]);
  translate([229, 57, 0])
    cube([1, 1, 1.25]);
  translate([230, 57, 0])
    cube([1, 1, 1.25]);
  translate([231, 57, 0])
    cube([1, 1, 1.25]);
  translate([232, 57, 0])
    cube([1, 1, 1.25]);
  translate([233, 57, 0])
    cube([1, 1, 1.25]);
  translate([234, 57, 0])
    cube([1, 1, 1.25]);
  translate([235, 57, 0])
    cube([1, 1, 1.25]);
  translate([236, 57, 0])
    cube([1, 1, 1.25]);
  translate([237, 57, 0])
    cube([1, 1, 1.25]);
  translate([238, 57, 0])
    cube([1, 1, 1.25]);
  translate([239, 57, 0])
    cube([1, 1, 1.25]);
  translate([240, 57, 0])
    cube([1, 1, 1.25]);
  translate([241, 57, 0])
    cube([1, 1, 1.25]);
  translate([242, 57, 0])
    cube([1, 1, 1.25]);
  translate([243, 57, 0])
    cube([1, 1, 1.25]);
  translate([244, 57, 0])
    cube([1, 1, 1.25]);
  translate([245, 57, 0])
    cube([1, 1, 1.25]);
  translate([246, 57, 0])
    cube([1, 1, 1.25]);
  translate([0, 58, 0])
    cube([1, 1, 1.41]);
  translate([1, 58, 0])
    cube([1, 1, 1.37]);
  translate([2, 58, 0])
    cube([1, 1, 1.37]);
  translate([3, 58, 0])
    cube([1, 1, 1.45]);
  translate([4, 58, 0])
    cube([1, 1, 1.41]);
  translate([5, 58, 0])
    cube([1, 1, 1.41]);
  translate([6, 58, 0])
    cube([1, 1, 1.41]);
  translate([7, 58, 0])
    cube([1, 1, 1.41]);
  translate([8, 58, 0])
    cube([1, 1, 1.41]);
  translate([9, 58, 0])
    cube([1, 1, 1.41]);
  translate([10, 58, 0])
    cube([1, 1, 1.41]);
  translate([11, 58, 0])
    cube([1, 1, 1.41]);
  translate([12, 58, 0])
    cube([1, 1, 1.41]);
  translate([13, 58, 0])
    cube([1, 1, 1.41]);
  translate([14, 58, 0])
    cube([1, 1, 1.41]);
  translate([15, 58, 0])
    cube([1, 1, 1.41]);
  translate([16, 58, 0])
    cube([1, 1, 1.41]);
  translate([17, 58, 0])
    cube([1, 1, 1.41]);
  translate([18, 58, 0])
    cube([1, 1, 2.78]);
  translate([19, 58, 0])
    cube([1, 1, 1.49]);
  translate([20, 58, 0])
    cube([1, 1, 1.41]);
  translate([21, 58, 0])
    cube([1, 1, 1.29]);
  translate([22, 58, 0])
    cube([1, 1, 1.14]);
  translate([23, 58, 0])
    cube([1, 1, 1.29]);
  translate([24, 58, 0])
    cube([1, 1, 1.41]);
  translate([25, 58, 0])
    cube([1, 1, 0.51]);
  translate([26, 58, 0])
    cube([1, 1, 0.27]);
  translate([27, 58, 0])
    cube([1, 1, 0.55]);
  translate([28, 58, 0])
    cube([1, 1, 0.71]);
  translate([29, 58, 0])
    cube([1, 1, 0.75]);
  translate([30, 58, 0])
    cube([1, 1, 0.94]);
  translate([31, 58, 0])
    cube([1, 1, 1.37]);
  translate([32, 58, 0])
    cube([1, 1, 1.37]);
  translate([33, 58, 0])
    cube([1, 1, 1.37]);
  translate([34, 58, 0])
    cube([1, 1, 1.37]);
  translate([35, 58, 0])
    cube([1, 1, 1.37]);
  translate([36, 58, 0])
    cube([1, 1, 1.37]);
  translate([37, 58, 0])
    cube([1, 1, 1.37]);
  translate([38, 58, 0])
    cube([1, 1, 1.37]);
  translate([39, 58, 0])
    cube([1, 1, 1.37]);
  translate([40, 58, 0])
    cube([1, 1, 1.37]);
  translate([41, 58, 0])
    cube([1, 1, 1.37]);
  translate([42, 58, 0])
    cube([1, 1, 1.37]);
  translate([43, 58, 0])
    cube([1, 1, 1.37]);
  translate([44, 58, 0])
    cube([1, 1, 1.37]);
  translate([45, 58, 0])
    cube([1, 1, 1.37]);
  translate([46, 58, 0])
    cube([1, 1, 1.33]);
  translate([47, 58, 0])
    cube([1, 1, 1.33]);
  translate([48, 58, 0])
    cube([1, 1, 1.37]);
  translate([49, 58, 0])
    cube([1, 1, 1.37]);
  translate([50, 58, 0])
    cube([1, 1, 1.37]);
  translate([51, 58, 0])
    cube([1, 1, 1.33]);
  translate([52, 58, 0])
    cube([1, 1, 1.33]);
  translate([53, 58, 0])
    cube([1, 1, 1.33]);
  translate([54, 58, 0])
    cube([1, 1, 1.33]);
  translate([55, 58, 0])
    cube([1, 1, 1.37]);
  translate([56, 58, 0])
    cube([1, 1, 1.33]);
  translate([57, 58, 0])
    cube([1, 1, 1.33]);
  translate([58, 58, 0])
    cube([1, 1, 1.33]);
  translate([59, 58, 0])
    cube([1, 1, 1.33]);
  translate([60, 58, 0])
    cube([1, 1, 1.33]);
  translate([61, 58, 0])
    cube([1, 1, 1.33]);
  translate([62, 58, 0])
    cube([1, 1, 1.33]);
  translate([63, 58, 0])
    cube([1, 1, 1.33]);
  translate([64, 58, 0])
    cube([1, 1, 1.33]);
  translate([65, 58, 0])
    cube([1, 1, 1.33]);
  translate([66, 58, 0])
    cube([1, 1, 1.33]);
  translate([67, 58, 0])
    cube([1, 1, 1.33]);
  translate([68, 58, 0])
    cube([1, 1, 1.33]);
  translate([69, 58, 0])
    cube([1, 1, 1.33]);
  translate([70, 58, 0])
    cube([1, 1, 1.33]);
  translate([71, 58, 0])
    cube([1, 1, 1.33]);
  translate([72, 58, 0])
    cube([1, 1, 1.33]);
  translate([73, 58, 0])
    cube([1, 1, 4.08]);
  translate([74, 58, 0])
    cube([1, 1, 0.71]);
  translate([75, 58, 0])
    cube([1, 1, 1.25]);
  translate([76, 58, 0])
    cube([1, 1, 0.94]);
  translate([77, 58, 0])
    cube([1, 1, 0.78]);
  translate([78, 58, 0])
    cube([1, 1, 0.82]);
  translate([79, 58, 0])
    cube([1, 1, 0.47]);
  translate([80, 58, 0])
    cube([1, 1, 7.49]);
  translate([81, 58, 0])
    cube([1, 1, 5.57]);
  translate([82, 58, 0])
    cube([1, 1, 1.02]);
  translate([83, 58, 0])
    cube([1, 1, 0.75]);
  translate([84, 58, 0])
    cube([1, 1, 0.47]);
  translate([85, 58, 0])
    cube([1, 1, 2.82]);
  translate([86, 58, 0])
    cube([1, 1, 2.90]);
  translate([87, 58, 0])
    cube([1, 1, 1.14]);
  translate([88, 58, 0])
    cube([1, 1, 1.33]);
  translate([89, 58, 0])
    cube([1, 1, 1.41]);
  translate([90, 58, 0])
    cube([1, 1, 1.49]);
  translate([91, 58, 0])
    cube([1, 1, 2.47]);
  translate([92, 58, 0])
    cube([1, 1, 1.02]);
  translate([93, 58, 0])
    cube([1, 1, 0.98]);
  translate([94, 58, 0])
    cube([1, 1, 0.86]);
  translate([95, 58, 0])
    cube([1, 1, 5.33]);
  translate([96, 58, 0])
    cube([1, 1, 5.73]);
  translate([97, 58, 0])
    cube([1, 1, 6.20]);
  translate([98, 58, 0])
    cube([1, 1, 6.55]);
  translate([99, 58, 0])
    cube([1, 1, 6.71]);
  translate([100, 58, 0])
    cube([1, 1, 6.20]);
  translate([101, 58, 0])
    cube([1, 1, 5.92]);
  translate([102, 58, 0])
    cube([1, 1, 5.45]);
  translate([103, 58, 0])
    cube([1, 1, 4.47]);
  translate([104, 58, 0])
    cube([1, 1, 4.16]);
  translate([105, 58, 0])
    cube([1, 1, 3.84]);
  translate([106, 58, 0])
    cube([1, 1, 4.90]);
  translate([107, 58, 0])
    cube([1, 1, 6.31]);
  translate([108, 58, 0])
    cube([1, 1, 6.47]);
  translate([109, 58, 0])
    cube([1, 1, 6.08]);
  translate([110, 58, 0])
    cube([1, 1, 5.76]);
  translate([111, 58, 0])
    cube([1, 1, 5.84]);
  translate([112, 58, 0])
    cube([1, 1, 5.29]);
  translate([113, 58, 0])
    cube([1, 1, 4.20]);
  translate([114, 58, 0])
    cube([1, 1, 2.35]);
  translate([115, 58, 0])
    cube([1, 1, 1.25]);
  translate([116, 58, 0])
    cube([1, 1, 2.16]);
  translate([117, 58, 0])
    cube([1, 1, 1.61]);
  translate([118, 58, 0])
    cube([1, 1, 1.14]);
  translate([119, 58, 0])
    cube([1, 1, 1.33]);
  translate([120, 58, 0])
    cube([1, 1, 1.22]);
  translate([121, 58, 0])
    cube([1, 1, 1.61]);
  translate([122, 58, 0])
    cube([1, 1, 2.24]);
  translate([123, 58, 0])
    cube([1, 1, 1.41]);
  translate([124, 58, 0])
    cube([1, 1, 1.53]);
  translate([125, 58, 0])
    cube([1, 1, 1.33]);
  translate([126, 58, 0])
    cube([1, 1, 1.29]);
  translate([127, 58, 0])
    cube([1, 1, 1.29]);
  translate([128, 58, 0])
    cube([1, 1, 1.25]);
  translate([129, 58, 0])
    cube([1, 1, 1.29]);
  translate([130, 58, 0])
    cube([1, 1, 1.22]);
  translate([131, 58, 0])
    cube([1, 1, 1.22]);
  translate([132, 58, 0])
    cube([1, 1, 1.29]);
  translate([133, 58, 0])
    cube([1, 1, 1.29]);
  translate([134, 58, 0])
    cube([1, 1, 1.33]);
  translate([135, 58, 0])
    cube([1, 1, 1.29]);
  translate([136, 58, 0])
    cube([1, 1, 1.29]);
  translate([137, 58, 0])
    cube([1, 1, 1.29]);
  translate([138, 58, 0])
    cube([1, 1, 1.29]);
  translate([139, 58, 0])
    cube([1, 1, 1.29]);
  translate([140, 58, 0])
    cube([1, 1, 1.29]);
  translate([141, 58, 0])
    cube([1, 1, 1.29]);
  translate([142, 58, 0])
    cube([1, 1, 1.25]);
  translate([143, 58, 0])
    cube([1, 1, 1.29]);
  translate([144, 58, 0])
    cube([1, 1, 1.29]);
  translate([145, 58, 0])
    cube([1, 1, 1.29]);
  translate([146, 58, 0])
    cube([1, 1, 1.29]);
  translate([147, 58, 0])
    cube([1, 1, 1.29]);
  translate([148, 58, 0])
    cube([1, 1, 1.25]);
  translate([149, 58, 0])
    cube([1, 1, 1.25]);
  translate([150, 58, 0])
    cube([1, 1, 1.29]);
  translate([151, 58, 0])
    cube([1, 1, 1.25]);
  translate([152, 58, 0])
    cube([1, 1, 1.25]);
  translate([153, 58, 0])
    cube([1, 1, 1.25]);
  translate([154, 58, 0])
    cube([1, 1, 1.29]);
  translate([155, 58, 0])
    cube([1, 1, 1.29]);
  translate([156, 58, 0])
    cube([1, 1, 1.29]);
  translate([157, 58, 0])
    cube([1, 1, 1.33]);
  translate([158, 58, 0])
    cube([1, 1, 1.29]);
  translate([159, 58, 0])
    cube([1, 1, 1.29]);
  translate([160, 58, 0])
    cube([1, 1, 1.29]);
  translate([161, 58, 0])
    cube([1, 1, 1.29]);
  translate([162, 58, 0])
    cube([1, 1, 1.29]);
  translate([163, 58, 0])
    cube([1, 1, 1.29]);
  translate([164, 58, 0])
    cube([1, 1, 1.29]);
  translate([165, 58, 0])
    cube([1, 1, 1.29]);
  translate([166, 58, 0])
    cube([1, 1, 1.25]);
  translate([167, 58, 0])
    cube([1, 1, 1.25]);
  translate([168, 58, 0])
    cube([1, 1, 1.29]);
  translate([169, 58, 0])
    cube([1, 1, 1.29]);
  translate([170, 58, 0])
    cube([1, 1, 1.29]);
  translate([171, 58, 0])
    cube([1, 1, 1.29]);
  translate([172, 58, 0])
    cube([1, 1, 1.29]);
  translate([173, 58, 0])
    cube([1, 1, 1.29]);
  translate([174, 58, 0])
    cube([1, 1, 1.22]);
  translate([175, 58, 0])
    cube([1, 1, 1.25]);
  translate([176, 58, 0])
    cube([1, 1, 1.29]);
  translate([177, 58, 0])
    cube([1, 1, 1.25]);
  translate([178, 58, 0])
    cube([1, 1, 1.29]);
  translate([179, 58, 0])
    cube([1, 1, 1.22]);
  translate([180, 58, 0])
    cube([1, 1, 1.33]);
  translate([181, 58, 0])
    cube([1, 1, 1.33]);
  translate([182, 58, 0])
    cube([1, 1, 1.29]);
  translate([183, 58, 0])
    cube([1, 1, 1.22]);
  translate([184, 58, 0])
    cube([1, 1, 1.33]);
  translate([185, 58, 0])
    cube([1, 1, 1.25]);
  translate([186, 58, 0])
    cube([1, 1, 1.25]);
  translate([187, 58, 0])
    cube([1, 1, 1.25]);
  translate([188, 58, 0])
    cube([1, 1, 1.25]);
  translate([189, 58, 0])
    cube([1, 1, 1.25]);
  translate([190, 58, 0])
    cube([1, 1, 1.25]);
  translate([191, 58, 0])
    cube([1, 1, 1.25]);
  translate([192, 58, 0])
    cube([1, 1, 1.25]);
  translate([193, 58, 0])
    cube([1, 1, 1.25]);
  translate([194, 58, 0])
    cube([1, 1, 1.29]);
  translate([195, 58, 0])
    cube([1, 1, 1.25]);
  translate([196, 58, 0])
    cube([1, 1, 1.25]);
  translate([197, 58, 0])
    cube([1, 1, 1.25]);
  translate([198, 58, 0])
    cube([1, 1, 1.25]);
  translate([199, 58, 0])
    cube([1, 1, 1.25]);
  translate([200, 58, 0])
    cube([1, 1, 1.25]);
  translate([201, 58, 0])
    cube([1, 1, 1.25]);
  translate([202, 58, 0])
    cube([1, 1, 1.25]);
  translate([203, 58, 0])
    cube([1, 1, 1.25]);
  translate([204, 58, 0])
    cube([1, 1, 1.25]);
  translate([205, 58, 0])
    cube([1, 1, 1.25]);
  translate([206, 58, 0])
    cube([1, 1, 1.25]);
  translate([207, 58, 0])
    cube([1, 1, 1.25]);
  translate([208, 58, 0])
    cube([1, 1, 1.25]);
  translate([209, 58, 0])
    cube([1, 1, 1.25]);
  translate([210, 58, 0])
    cube([1, 1, 1.25]);
  translate([211, 58, 0])
    cube([1, 1, 1.25]);
  translate([212, 58, 0])
    cube([1, 1, 1.25]);
  translate([213, 58, 0])
    cube([1, 1, 1.25]);
  translate([214, 58, 0])
    cube([1, 1, 1.25]);
  translate([215, 58, 0])
    cube([1, 1, 1.25]);
  translate([216, 58, 0])
    cube([1, 1, 1.25]);
  translate([217, 58, 0])
    cube([1, 1, 1.25]);
  translate([218, 58, 0])
    cube([1, 1, 1.25]);
  translate([219, 58, 0])
    cube([1, 1, 1.25]);
  translate([220, 58, 0])
    cube([1, 1, 1.25]);
  translate([221, 58, 0])
    cube([1, 1, 1.25]);
  translate([222, 58, 0])
    cube([1, 1, 1.25]);
  translate([223, 58, 0])
    cube([1, 1, 1.25]);
  translate([224, 58, 0])
    cube([1, 1, 1.25]);
  translate([225, 58, 0])
    cube([1, 1, 1.25]);
  translate([226, 58, 0])
    cube([1, 1, 1.25]);
  translate([227, 58, 0])
    cube([1, 1, 1.25]);
  translate([228, 58, 0])
    cube([1, 1, 1.25]);
  translate([229, 58, 0])
    cube([1, 1, 1.25]);
  translate([230, 58, 0])
    cube([1, 1, 1.25]);
  translate([231, 58, 0])
    cube([1, 1, 1.25]);
  translate([232, 58, 0])
    cube([1, 1, 1.25]);
  translate([233, 58, 0])
    cube([1, 1, 1.25]);
  translate([234, 58, 0])
    cube([1, 1, 1.25]);
  translate([235, 58, 0])
    cube([1, 1, 1.25]);
  translate([236, 58, 0])
    cube([1, 1, 1.25]);
  translate([237, 58, 0])
    cube([1, 1, 1.25]);
  translate([238, 58, 0])
    cube([1, 1, 1.25]);
  translate([239, 58, 0])
    cube([1, 1, 1.25]);
  translate([240, 58, 0])
    cube([1, 1, 1.25]);
  translate([241, 58, 0])
    cube([1, 1, 1.25]);
  translate([242, 58, 0])
    cube([1, 1, 1.25]);
  translate([243, 58, 0])
    cube([1, 1, 1.25]);
  translate([244, 58, 0])
    cube([1, 1, 1.25]);
  translate([245, 58, 0])
    cube([1, 1, 1.25]);
  translate([246, 58, 0])
    cube([1, 1, 1.25]);
  translate([0, 59, 0])
    cube([1, 1, 1.41]);
  translate([1, 59, 0])
    cube([1, 1, 1.37]);
  translate([2, 59, 0])
    cube([1, 1, 1.37]);
  translate([3, 59, 0])
    cube([1, 1, 1.45]);
  translate([4, 59, 0])
    cube([1, 1, 1.41]);
  translate([5, 59, 0])
    cube([1, 1, 1.41]);
  translate([6, 59, 0])
    cube([1, 1, 1.41]);
  translate([7, 59, 0])
    cube([1, 1, 1.41]);
  translate([8, 59, 0])
    cube([1, 1, 1.41]);
  translate([9, 59, 0])
    cube([1, 1, 1.41]);
  translate([10, 59, 0])
    cube([1, 1, 1.41]);
  translate([11, 59, 0])
    cube([1, 1, 1.41]);
  translate([12, 59, 0])
    cube([1, 1, 1.41]);
  translate([13, 59, 0])
    cube([1, 1, 1.41]);
  translate([14, 59, 0])
    cube([1, 1, 1.41]);
  translate([15, 59, 0])
    cube([1, 1, 1.41]);
  translate([16, 59, 0])
    cube([1, 1, 1.41]);
  translate([17, 59, 0])
    cube([1, 1, 1.18]);
  translate([18, 59, 0])
    cube([1, 1, 1.49]);
  translate([19, 59, 0])
    cube([1, 1, 1.65]);
  translate([20, 59, 0])
    cube([1, 1, 1.96]);
  translate([21, 59, 0])
    cube([1, 1, 1.65]);
  translate([22, 59, 0])
    cube([1, 1, 0.90]);
  translate([23, 59, 0])
    cube([1, 1, 0.12]);
  translate([25, 59, 0])
    cube([1, 1, 0.75]);
  translate([26, 59, 0])
    cube([1, 1, 0.78]);
  translate([27, 59, 0])
    cube([1, 1, 0.55]);
  translate([28, 59, 0])
    cube([1, 1, 0.55]);
  translate([29, 59, 0])
    cube([1, 1, 0.47]);
  translate([30, 59, 0])
    cube([1, 1, 0.55]);
  translate([31, 59, 0])
    cube([1, 1, 1.02]);
  translate([32, 59, 0])
    cube([1, 1, 1.37]);
  translate([33, 59, 0])
    cube([1, 1, 1.45]);
  translate([34, 59, 0])
    cube([1, 1, 1.45]);
  translate([35, 59, 0])
    cube([1, 1, 1.37]);
  translate([36, 59, 0])
    cube([1, 1, 1.37]);
  translate([37, 59, 0])
    cube([1, 1, 1.37]);
  translate([38, 59, 0])
    cube([1, 1, 1.37]);
  translate([39, 59, 0])
    cube([1, 1, 1.37]);
  translate([40, 59, 0])
    cube([1, 1, 1.37]);
  translate([41, 59, 0])
    cube([1, 1, 1.37]);
  translate([42, 59, 0])
    cube([1, 1, 1.37]);
  translate([43, 59, 0])
    cube([1, 1, 1.37]);
  translate([44, 59, 0])
    cube([1, 1, 1.37]);
  translate([45, 59, 0])
    cube([1, 1, 1.37]);
  translate([46, 59, 0])
    cube([1, 1, 1.33]);
  translate([47, 59, 0])
    cube([1, 1, 1.33]);
  translate([48, 59, 0])
    cube([1, 1, 1.37]);
  translate([49, 59, 0])
    cube([1, 1, 1.37]);
  translate([50, 59, 0])
    cube([1, 1, 1.37]);
  translate([51, 59, 0])
    cube([1, 1, 1.33]);
  translate([52, 59, 0])
    cube([1, 1, 1.33]);
  translate([53, 59, 0])
    cube([1, 1, 1.33]);
  translate([54, 59, 0])
    cube([1, 1, 1.33]);
  translate([55, 59, 0])
    cube([1, 1, 1.37]);
  translate([56, 59, 0])
    cube([1, 1, 1.33]);
  translate([57, 59, 0])
    cube([1, 1, 1.33]);
  translate([58, 59, 0])
    cube([1, 1, 1.33]);
  translate([59, 59, 0])
    cube([1, 1, 1.33]);
  translate([60, 59, 0])
    cube([1, 1, 1.33]);
  translate([61, 59, 0])
    cube([1, 1, 1.33]);
  translate([62, 59, 0])
    cube([1, 1, 1.33]);
  translate([63, 59, 0])
    cube([1, 1, 1.33]);
  translate([64, 59, 0])
    cube([1, 1, 1.33]);
  translate([65, 59, 0])
    cube([1, 1, 1.33]);
  translate([66, 59, 0])
    cube([1, 1, 1.33]);
  translate([67, 59, 0])
    cube([1, 1, 1.33]);
  translate([68, 59, 0])
    cube([1, 1, 1.33]);
  translate([69, 59, 0])
    cube([1, 1, 1.33]);
  translate([70, 59, 0])
    cube([1, 1, 1.33]);
  translate([71, 59, 0])
    cube([1, 1, 1.33]);
  translate([72, 59, 0])
    cube([1, 1, 1.33]);
  translate([73, 59, 0])
    cube([1, 1, 6.90]);
  translate([74, 59, 0])
    cube([1, 1, 0.82]);
  translate([75, 59, 0])
    cube([1, 1, 1.41]);
  translate([76, 59, 0])
    cube([1, 1, 0.94]);
  translate([77, 59, 0])
    cube([1, 1, 0.75]);
  translate([78, 59, 0])
    cube([1, 1, 0.59]);
  translate([79, 59, 0])
    cube([1, 1, 0.31]);
  translate([80, 59, 0])
    cube([1, 1, 7.84]);
  translate([81, 59, 0])
    cube([1, 1, 1.69]);
  translate([82, 59, 0])
    cube([1, 1, 1.22]);
  translate([83, 59, 0])
    cube([1, 1, 0.82]);
  translate([84, 59, 0])
    cube([1, 1, 1.65]);
  translate([85, 59, 0])
    cube([1, 1, 7.96]);
  translate([86, 59, 0])
    cube([1, 1, 1.84]);
  translate([87, 59, 0])
    cube([1, 1, 1.06]);
  translate([88, 59, 0])
    cube([1, 1, 1.02]);
  translate([89, 59, 0])
    cube([1, 1, 1.65]);
  translate([90, 59, 0])
    cube([1, 1, 1.45]);
  translate([91, 59, 0])
    cube([1, 1, 1.84]);
  translate([92, 59, 0])
    cube([1, 1, 1.02]);
  translate([93, 59, 0])
    cube([1, 1, 1.29]);
  translate([94, 59, 0])
    cube([1, 1, 4.86]);
  translate([95, 59, 0])
    cube([1, 1, 5.45]);
  translate([96, 59, 0])
    cube([1, 1, 5.61]);
  translate([97, 59, 0])
    cube([1, 1, 5.69]);
  translate([98, 59, 0])
    cube([1, 1, 6.04]);
  translate([99, 59, 0])
    cube([1, 1, 6.27]);
  translate([100, 59, 0])
    cube([1, 1, 6.20]);
  translate([101, 59, 0])
    cube([1, 1, 5.84]);
  translate([102, 59, 0])
    cube([1, 1, 5.18]);
  translate([103, 59, 0])
    cube([1, 1, 4.08]);
  translate([104, 59, 0])
    cube([1, 1, 3.92]);
  translate([105, 59, 0])
    cube([1, 1, 3.80]);
  translate([106, 59, 0])
    cube([1, 1, 4.55]);
  translate([107, 59, 0])
    cube([1, 1, 6.27]);
  translate([108, 59, 0])
    cube([1, 1, 6.67]);
  translate([109, 59, 0])
    cube([1, 1, 5.76]);
  translate([110, 59, 0])
    cube([1, 1, 5.80]);
  translate([111, 59, 0])
    cube([1, 1, 5.88]);
  translate([112, 59, 0])
    cube([1, 1, 5.65]);
  translate([113, 59, 0])
    cube([1, 1, 4.47]);
  translate([114, 59, 0])
    cube([1, 1, 3.06]);
  translate([115, 59, 0])
    cube([1, 1, 2.00]);
  translate([116, 59, 0])
    cube([1, 1, 2.51]);
  translate([117, 59, 0])
    cube([1, 1, 1.80]);
  translate([118, 59, 0])
    cube([1, 1, 1.14]);
  translate([119, 59, 0])
    cube([1, 1, 1.33]);
  translate([120, 59, 0])
    cube([1, 1, 1.65]);
  translate([121, 59, 0])
    cube([1, 1, 1.76]);
  translate([122, 59, 0])
    cube([1, 1, 1.61]);
  translate([123, 59, 0])
    cube([1, 1, 1.57]);
  translate([124, 59, 0])
    cube([1, 1, 1.88]);
  translate([125, 59, 0])
    cube([1, 1, 1.41]);
  translate([126, 59, 0])
    cube([1, 1, 1.29]);
  translate([127, 59, 0])
    cube([1, 1, 1.29]);
  translate([128, 59, 0])
    cube([1, 1, 1.25]);
  translate([129, 59, 0])
    cube([1, 1, 1.29]);
  translate([130, 59, 0])
    cube([1, 1, 1.22]);
  translate([131, 59, 0])
    cube([1, 1, 1.29]);
  translate([132, 59, 0])
    cube([1, 1, 1.29]);
  translate([133, 59, 0])
    cube([1, 1, 1.29]);
  translate([134, 59, 0])
    cube([1, 1, 1.25]);
  translate([135, 59, 0])
    cube([1, 1, 1.22]);
  translate([136, 59, 0])
    cube([1, 1, 1.29]);
  translate([137, 59, 0])
    cube([1, 1, 1.29]);
  translate([138, 59, 0])
    cube([1, 1, 1.29]);
  translate([139, 59, 0])
    cube([1, 1, 1.29]);
  translate([140, 59, 0])
    cube([1, 1, 1.29]);
  translate([141, 59, 0])
    cube([1, 1, 1.29]);
  translate([142, 59, 0])
    cube([1, 1, 1.25]);
  translate([143, 59, 0])
    cube([1, 1, 1.29]);
  translate([144, 59, 0])
    cube([1, 1, 1.29]);
  translate([145, 59, 0])
    cube([1, 1, 1.29]);
  translate([146, 59, 0])
    cube([1, 1, 1.29]);
  translate([147, 59, 0])
    cube([1, 1, 1.29]);
  translate([148, 59, 0])
    cube([1, 1, 1.33]);
  translate([149, 59, 0])
    cube([1, 1, 1.33]);
  translate([150, 59, 0])
    cube([1, 1, 1.29]);
  translate([151, 59, 0])
    cube([1, 1, 1.25]);
  translate([152, 59, 0])
    cube([1, 1, 1.25]);
  translate([153, 59, 0])
    cube([1, 1, 1.25]);
  translate([154, 59, 0])
    cube([1, 1, 1.29]);
  translate([155, 59, 0])
    cube([1, 1, 1.29]);
  translate([156, 59, 0])
    cube([1, 1, 1.33]);
  translate([157, 59, 0])
    cube([1, 1, 1.29]);
  translate([158, 59, 0])
    cube([1, 1, 1.29]);
  translate([159, 59, 0])
    cube([1, 1, 1.29]);
  translate([160, 59, 0])
    cube([1, 1, 1.29]);
  translate([161, 59, 0])
    cube([1, 1, 1.29]);
  translate([162, 59, 0])
    cube([1, 1, 1.29]);
  translate([163, 59, 0])
    cube([1, 1, 1.29]);
  translate([164, 59, 0])
    cube([1, 1, 1.29]);
  translate([165, 59, 0])
    cube([1, 1, 1.29]);
  translate([166, 59, 0])
    cube([1, 1, 1.29]);
  translate([167, 59, 0])
    cube([1, 1, 1.29]);
  translate([168, 59, 0])
    cube([1, 1, 1.29]);
  translate([169, 59, 0])
    cube([1, 1, 1.29]);
  translate([170, 59, 0])
    cube([1, 1, 1.29]);
  translate([171, 59, 0])
    cube([1, 1, 1.29]);
  translate([172, 59, 0])
    cube([1, 1, 1.29]);
  translate([173, 59, 0])
    cube([1, 1, 1.29]);
  translate([174, 59, 0])
    cube([1, 1, 1.22]);
  translate([175, 59, 0])
    cube([1, 1, 1.25]);
  translate([176, 59, 0])
    cube([1, 1, 1.29]);
  translate([177, 59, 0])
    cube([1, 1, 1.25]);
  translate([178, 59, 0])
    cube([1, 1, 1.29]);
  translate([179, 59, 0])
    cube([1, 1, 1.22]);
  translate([180, 59, 0])
    cube([1, 1, 1.33]);
  translate([181, 59, 0])
    cube([1, 1, 1.33]);
  translate([182, 59, 0])
    cube([1, 1, 1.25]);
  translate([183, 59, 0])
    cube([1, 1, 1.25]);
  translate([184, 59, 0])
    cube([1, 1, 1.22]);
  translate([185, 59, 0])
    cube([1, 1, 1.29]);
  translate([186, 59, 0])
    cube([1, 1, 1.29]);
  translate([187, 59, 0])
    cube([1, 1, 1.25]);
  translate([188, 59, 0])
    cube([1, 1, 1.25]);
  translate([189, 59, 0])
    cube([1, 1, 1.25]);
  translate([190, 59, 0])
    cube([1, 1, 1.25]);
  translate([191, 59, 0])
    cube([1, 1, 1.25]);
  translate([192, 59, 0])
    cube([1, 1, 1.25]);
  translate([193, 59, 0])
    cube([1, 1, 1.25]);
  translate([194, 59, 0])
    cube([1, 1, 1.29]);
  translate([195, 59, 0])
    cube([1, 1, 1.25]);
  translate([196, 59, 0])
    cube([1, 1, 1.25]);
  translate([197, 59, 0])
    cube([1, 1, 1.25]);
  translate([198, 59, 0])
    cube([1, 1, 1.25]);
  translate([199, 59, 0])
    cube([1, 1, 1.25]);
  translate([200, 59, 0])
    cube([1, 1, 1.25]);
  translate([201, 59, 0])
    cube([1, 1, 1.25]);
  translate([202, 59, 0])
    cube([1, 1, 1.25]);
  translate([203, 59, 0])
    cube([1, 1, 1.25]);
  translate([204, 59, 0])
    cube([1, 1, 1.25]);
  translate([205, 59, 0])
    cube([1, 1, 1.25]);
  translate([206, 59, 0])
    cube([1, 1, 1.25]);
  translate([207, 59, 0])
    cube([1, 1, 1.25]);
  translate([208, 59, 0])
    cube([1, 1, 1.25]);
  translate([209, 59, 0])
    cube([1, 1, 1.25]);
  translate([210, 59, 0])
    cube([1, 1, 1.25]);
  translate([211, 59, 0])
    cube([1, 1, 1.25]);
  translate([212, 59, 0])
    cube([1, 1, 1.25]);
  translate([213, 59, 0])
    cube([1, 1, 1.25]);
  translate([214, 59, 0])
    cube([1, 1, 1.25]);
  translate([215, 59, 0])
    cube([1, 1, 1.25]);
  translate([216, 59, 0])
    cube([1, 1, 1.25]);
  translate([217, 59, 0])
    cube([1, 1, 1.25]);
  translate([218, 59, 0])
    cube([1, 1, 1.25]);
  translate([219, 59, 0])
    cube([1, 1, 1.25]);
  translate([220, 59, 0])
    cube([1, 1, 1.25]);
  translate([221, 59, 0])
    cube([1, 1, 1.25]);
  translate([222, 59, 0])
    cube([1, 1, 1.25]);
  translate([223, 59, 0])
    cube([1, 1, 1.25]);
  translate([224, 59, 0])
    cube([1, 1, 1.25]);
  translate([225, 59, 0])
    cube([1, 1, 1.25]);
  translate([226, 59, 0])
    cube([1, 1, 1.25]);
  translate([227, 59, 0])
    cube([1, 1, 1.25]);
  translate([228, 59, 0])
    cube([1, 1, 1.25]);
  translate([229, 59, 0])
    cube([1, 1, 1.25]);
  translate([230, 59, 0])
    cube([1, 1, 1.25]);
  translate([231, 59, 0])
    cube([1, 1, 1.25]);
  translate([232, 59, 0])
    cube([1, 1, 1.25]);
  translate([233, 59, 0])
    cube([1, 1, 1.25]);
  translate([234, 59, 0])
    cube([1, 1, 1.25]);
  translate([235, 59, 0])
    cube([1, 1, 1.25]);
  translate([236, 59, 0])
    cube([1, 1, 1.25]);
  translate([237, 59, 0])
    cube([1, 1, 1.25]);
  translate([238, 59, 0])
    cube([1, 1, 1.25]);
  translate([239, 59, 0])
    cube([1, 1, 1.25]);
  translate([240, 59, 0])
    cube([1, 1, 1.25]);
  translate([241, 59, 0])
    cube([1, 1, 1.25]);
  translate([242, 59, 0])
    cube([1, 1, 1.25]);
  translate([243, 59, 0])
    cube([1, 1, 1.25]);
  translate([244, 59, 0])
    cube([1, 1, 1.25]);
  translate([245, 59, 0])
    cube([1, 1, 1.25]);
  translate([246, 59, 0])
    cube([1, 1, 1.25]);
  translate([0, 60, 0])
    cube([1, 1, 1.41]);
  translate([1, 60, 0])
    cube([1, 1, 1.45]);
  translate([2, 60, 0])
    cube([1, 1, 1.49]);
  translate([3, 60, 0])
    cube([1, 1, 1.45]);
  translate([4, 60, 0])
    cube([1, 1, 1.41]);
  translate([5, 60, 0])
    cube([1, 1, 1.41]);
  translate([6, 60, 0])
    cube([1, 1, 1.45]);
  translate([7, 60, 0])
    cube([1, 1, 1.49]);
  translate([8, 60, 0])
    cube([1, 1, 1.41]);
  translate([9, 60, 0])
    cube([1, 1, 1.41]);
  translate([10, 60, 0])
    cube([1, 1, 1.41]);
  translate([11, 60, 0])
    cube([1, 1, 1.41]);
  translate([12, 60, 0])
    cube([1, 1, 1.41]);
  translate([13, 60, 0])
    cube([1, 1, 1.37]);
  translate([14, 60, 0])
    cube([1, 1, 1.37]);
  translate([15, 60, 0])
    cube([1, 1, 1.41]);
  translate([16, 60, 0])
    cube([1, 1, 1.41]);
  translate([17, 60, 0])
    cube([1, 1, 1.41]);
  translate([18, 60, 0])
    cube([1, 1, 1.41]);
  translate([19, 60, 0])
    cube([1, 1, 4.59]);
  translate([20, 60, 0])
    cube([1, 1, 1.73]);
  translate([21, 60, 0])
    cube([1, 1, 5.92]);
  translate([22, 60, 0])
    cube([1, 1, 1.06]);
  translate([23, 60, 0])
    cube([1, 1, 0.47]);
  translate([24, 60, 0])
    cube([1, 1, 0.31]);
  translate([25, 60, 0])
    cube([1, 1, 0.94]);
  translate([26, 60, 0])
    cube([1, 1, 0.71]);
  translate([27, 60, 0])
    cube([1, 1, 0.63]);
  translate([28, 60, 0])
    cube([1, 1, 0.35]);
  translate([29, 60, 0])
    cube([1, 1, 0.55]);
  translate([30, 60, 0])
    cube([1, 1, 0.75]);
  translate([31, 60, 0])
    cube([1, 1, 0.67]);
  translate([32, 60, 0])
    cube([1, 1, 0.71]);
  translate([33, 60, 0])
    cube([1, 1, 0.67]);
  translate([34, 60, 0])
    cube([1, 1, 1.29]);
  translate([35, 60, 0])
    cube([1, 1, 1.37]);
  translate([36, 60, 0])
    cube([1, 1, 1.37]);
  translate([37, 60, 0])
    cube([1, 1, 1.37]);
  translate([38, 60, 0])
    cube([1, 1, 1.37]);
  translate([39, 60, 0])
    cube([1, 1, 1.37]);
  translate([40, 60, 0])
    cube([1, 1, 1.37]);
  translate([41, 60, 0])
    cube([1, 1, 1.37]);
  translate([42, 60, 0])
    cube([1, 1, 1.37]);
  translate([43, 60, 0])
    cube([1, 1, 1.41]);
  translate([44, 60, 0])
    cube([1, 1, 1.37]);
  translate([45, 60, 0])
    cube([1, 1, 1.37]);
  translate([46, 60, 0])
    cube([1, 1, 1.37]);
  translate([47, 60, 0])
    cube([1, 1, 1.37]);
  translate([48, 60, 0])
    cube([1, 1, 1.37]);
  translate([49, 60, 0])
    cube([1, 1, 1.41]);
  translate([50, 60, 0])
    cube([1, 1, 1.41]);
  translate([51, 60, 0])
    cube([1, 1, 1.37]);
  translate([52, 60, 0])
    cube([1, 1, 1.33]);
  translate([53, 60, 0])
    cube([1, 1, 1.33]);
  translate([54, 60, 0])
    cube([1, 1, 1.33]);
  translate([55, 60, 0])
    cube([1, 1, 1.33]);
  translate([56, 60, 0])
    cube([1, 1, 1.33]);
  translate([57, 60, 0])
    cube([1, 1, 1.33]);
  translate([58, 60, 0])
    cube([1, 1, 1.33]);
  translate([59, 60, 0])
    cube([1, 1, 1.33]);
  translate([60, 60, 0])
    cube([1, 1, 1.33]);
  translate([61, 60, 0])
    cube([1, 1, 1.33]);
  translate([62, 60, 0])
    cube([1, 1, 1.33]);
  translate([63, 60, 0])
    cube([1, 1, 1.33]);
  translate([64, 60, 0])
    cube([1, 1, 1.33]);
  translate([65, 60, 0])
    cube([1, 1, 1.33]);
  translate([66, 60, 0])
    cube([1, 1, 1.33]);
  translate([67, 60, 0])
    cube([1, 1, 1.33]);
  translate([68, 60, 0])
    cube([1, 1, 1.33]);
  translate([69, 60, 0])
    cube([1, 1, 1.33]);
  translate([70, 60, 0])
    cube([1, 1, 1.37]);
  translate([71, 60, 0])
    cube([1, 1, 1.37]);
  translate([72, 60, 0])
    cube([1, 1, 1.37]);
  translate([73, 60, 0])
    cube([1, 1, 4.63]);
  translate([74, 60, 0])
    cube([1, 1, 2.63]);
  translate([75, 60, 0])
    cube([1, 1, 1.14]);
  translate([76, 60, 0])
    cube([1, 1, 0.82]);
  translate([77, 60, 0])
    cube([1, 1, 0.90]);
  translate([78, 60, 0])
    cube([1, 1, 0.55]);
  translate([79, 60, 0])
    cube([1, 1, 7.76]);
  translate([80, 60, 0])
    cube([1, 1, 8.12]);
  translate([81, 60, 0])
    cube([1, 1, 0.75]);
  translate([82, 60, 0])
    cube([1, 1, 0.94]);
  translate([83, 60, 0])
    cube([1, 1, 0.39]);
  translate([84, 60, 0])
    cube([1, 1, 8.16]);
  translate([85, 60, 0])
    cube([1, 1, 8.86]);
  translate([86, 60, 0])
    cube([1, 1, 2.31]);
  translate([87, 60, 0])
    cube([1, 1, 2.94]);
  translate([88, 60, 0])
    cube([1, 1, 1.37]);
  translate([89, 60, 0])
    cube([1, 1, 1.88]);
  translate([90, 60, 0])
    cube([1, 1, 1.65]);
  translate([91, 60, 0])
    cube([1, 1, 1.25]);
  translate([92, 60, 0])
    cube([1, 1, 1.06]);
  translate([93, 60, 0])
    cube([1, 1, 2.51]);
  translate([94, 60, 0])
    cube([1, 1, 4.47]);
  translate([95, 60, 0])
    cube([1, 1, 4.78]);
  translate([96, 60, 0])
    cube([1, 1, 5.37]);
  translate([97, 60, 0])
    cube([1, 1, 5.57]);
  translate([98, 60, 0])
    cube([1, 1, 5.80]);
  translate([99, 60, 0])
    cube([1, 1, 6.00]);
  translate([100, 60, 0])
    cube([1, 1, 5.84]);
  translate([101, 60, 0])
    cube([1, 1, 5.53]);
  translate([102, 60, 0])
    cube([1, 1, 4.63]);
  translate([103, 60, 0])
    cube([1, 1, 3.37]);
  translate([104, 60, 0])
    cube([1, 1, 4.16]);
  translate([105, 60, 0])
    cube([1, 1, 4.16]);
  translate([106, 60, 0])
    cube([1, 1, 4.51]);
  translate([107, 60, 0])
    cube([1, 1, 6.12]);
  translate([108, 60, 0])
    cube([1, 1, 6.43]);
  translate([109, 60, 0])
    cube([1, 1, 5.53]);
  translate([110, 60, 0])
    cube([1, 1, 5.73]);
  translate([111, 60, 0])
    cube([1, 1, 5.80]);
  translate([112, 60, 0])
    cube([1, 1, 5.57]);
  translate([113, 60, 0])
    cube([1, 1, 4.78]);
  translate([114, 60, 0])
    cube([1, 1, 3.53]);
  translate([115, 60, 0])
    cube([1, 1, 2.27]);
  translate([116, 60, 0])
    cube([1, 1, 1.84]);
  translate([117, 60, 0])
    cube([1, 1, 1.41]);
  translate([118, 60, 0])
    cube([1, 1, 1.33]);
  translate([119, 60, 0])
    cube([1, 1, 1.80]);
  translate([120, 60, 0])
    cube([1, 1, 1.33]);
  translate([121, 60, 0])
    cube([1, 1, 1.41]);
  translate([122, 60, 0])
    cube([1, 1, 1.41]);
  translate([123, 60, 0])
    cube([1, 1, 1.45]);
  translate([124, 60, 0])
    cube([1, 1, 3.25]);
  translate([125, 60, 0])
    cube([1, 1, 1.53]);
  translate([126, 60, 0])
    cube([1, 1, 1.25]);
  translate([127, 60, 0])
    cube([1, 1, 1.25]);
  translate([128, 60, 0])
    cube([1, 1, 1.22]);
  translate([129, 60, 0])
    cube([1, 1, 1.22]);
  translate([130, 60, 0])
    cube([1, 1, 1.33]);
  translate([131, 60, 0])
    cube([1, 1, 1.29]);
  translate([132, 60, 0])
    cube([1, 1, 1.25]);
  translate([133, 60, 0])
    cube([1, 1, 1.29]);
  translate([134, 60, 0])
    cube([1, 1, 1.25]);
  translate([135, 60, 0])
    cube([1, 1, 1.33]);
  translate([136, 60, 0])
    cube([1, 1, 1.29]);
  translate([137, 60, 0])
    cube([1, 1, 1.29]);
  translate([138, 60, 0])
    cube([1, 1, 1.29]);
  translate([139, 60, 0])
    cube([1, 1, 1.29]);
  translate([140, 60, 0])
    cube([1, 1, 1.29]);
  translate([141, 60, 0])
    cube([1, 1, 1.29]);
  translate([142, 60, 0])
    cube([1, 1, 1.29]);
  translate([143, 60, 0])
    cube([1, 1, 1.29]);
  translate([144, 60, 0])
    cube([1, 1, 1.25]);
  translate([145, 60, 0])
    cube([1, 1, 1.29]);
  translate([146, 60, 0])
    cube([1, 1, 1.29]);
  translate([147, 60, 0])
    cube([1, 1, 1.29]);
  translate([148, 60, 0])
    cube([1, 1, 1.25]);
  translate([149, 60, 0])
    cube([1, 1, 1.29]);
  translate([150, 60, 0])
    cube([1, 1, 1.29]);
  translate([151, 60, 0])
    cube([1, 1, 1.25]);
  translate([152, 60, 0])
    cube([1, 1, 1.29]);
  translate([153, 60, 0])
    cube([1, 1, 1.29]);
  translate([154, 60, 0])
    cube([1, 1, 1.29]);
  translate([155, 60, 0])
    cube([1, 1, 1.29]);
  translate([156, 60, 0])
    cube([1, 1, 1.25]);
  translate([157, 60, 0])
    cube([1, 1, 1.29]);
  translate([158, 60, 0])
    cube([1, 1, 1.29]);
  translate([159, 60, 0])
    cube([1, 1, 1.29]);
  translate([160, 60, 0])
    cube([1, 1, 1.29]);
  translate([161, 60, 0])
    cube([1, 1, 1.25]);
  translate([162, 60, 0])
    cube([1, 1, 1.29]);
  translate([163, 60, 0])
    cube([1, 1, 1.29]);
  translate([164, 60, 0])
    cube([1, 1, 1.29]);
  translate([165, 60, 0])
    cube([1, 1, 1.29]);
  translate([166, 60, 0])
    cube([1, 1, 1.29]);
  translate([167, 60, 0])
    cube([1, 1, 1.29]);
  translate([168, 60, 0])
    cube([1, 1, 1.29]);
  translate([169, 60, 0])
    cube([1, 1, 1.25]);
  translate([170, 60, 0])
    cube([1, 1, 1.25]);
  translate([171, 60, 0])
    cube([1, 1, 1.29]);
  translate([172, 60, 0])
    cube([1, 1, 1.25]);
  translate([173, 60, 0])
    cube([1, 1, 1.29]);
  translate([174, 60, 0])
    cube([1, 1, 1.25]);
  translate([175, 60, 0])
    cube([1, 1, 1.25]);
  translate([176, 60, 0])
    cube([1, 1, 1.29]);
  translate([177, 60, 0])
    cube([1, 1, 1.22]);
  translate([178, 60, 0])
    cube([1, 1, 1.29]);
  translate([179, 60, 0])
    cube([1, 1, 1.25]);
  translate([180, 60, 0])
    cube([1, 1, 1.22]);
  translate([181, 60, 0])
    cube([1, 1, 1.25]);
  translate([182, 60, 0])
    cube([1, 1, 1.29]);
  translate([183, 60, 0])
    cube([1, 1, 1.29]);
  translate([184, 60, 0])
    cube([1, 1, 1.25]);
  translate([185, 60, 0])
    cube([1, 1, 1.33]);
  translate([186, 60, 0])
    cube([1, 1, 1.33]);
  translate([187, 60, 0])
    cube([1, 1, 1.25]);
  translate([188, 60, 0])
    cube([1, 1, 1.25]);
  translate([189, 60, 0])
    cube([1, 1, 1.25]);
  translate([190, 60, 0])
    cube([1, 1, 1.25]);
  translate([191, 60, 0])
    cube([1, 1, 1.25]);
  translate([192, 60, 0])
    cube([1, 1, 1.25]);
  translate([193, 60, 0])
    cube([1, 1, 1.25]);
  translate([194, 60, 0])
    cube([1, 1, 1.25]);
  translate([195, 60, 0])
    cube([1, 1, 1.29]);
  translate([196, 60, 0])
    cube([1, 1, 1.25]);
  translate([197, 60, 0])
    cube([1, 1, 1.33]);
  translate([198, 60, 0])
    cube([1, 1, 1.25]);
  translate([199, 60, 0])
    cube([1, 1, 1.25]);
  translate([200, 60, 0])
    cube([1, 1, 1.25]);
  translate([201, 60, 0])
    cube([1, 1, 1.25]);
  translate([202, 60, 0])
    cube([1, 1, 1.25]);
  translate([203, 60, 0])
    cube([1, 1, 1.25]);
  translate([204, 60, 0])
    cube([1, 1, 1.25]);
  translate([205, 60, 0])
    cube([1, 1, 1.25]);
  translate([206, 60, 0])
    cube([1, 1, 1.25]);
  translate([207, 60, 0])
    cube([1, 1, 1.25]);
  translate([208, 60, 0])
    cube([1, 1, 1.25]);
  translate([209, 60, 0])
    cube([1, 1, 1.25]);
  translate([210, 60, 0])
    cube([1, 1, 1.25]);
  translate([211, 60, 0])
    cube([1, 1, 1.25]);
  translate([212, 60, 0])
    cube([1, 1, 1.25]);
  translate([213, 60, 0])
    cube([1, 1, 1.25]);
  translate([214, 60, 0])
    cube([1, 1, 1.25]);
  translate([215, 60, 0])
    cube([1, 1, 1.25]);
  translate([216, 60, 0])
    cube([1, 1, 1.25]);
  translate([217, 60, 0])
    cube([1, 1, 1.25]);
  translate([218, 60, 0])
    cube([1, 1, 1.25]);
  translate([219, 60, 0])
    cube([1, 1, 1.25]);
  translate([220, 60, 0])
    cube([1, 1, 1.29]);
  translate([221, 60, 0])
    cube([1, 1, 1.29]);
  translate([222, 60, 0])
    cube([1, 1, 1.25]);
  translate([223, 60, 0])
    cube([1, 1, 1.25]);
  translate([224, 60, 0])
    cube([1, 1, 1.25]);
  translate([225, 60, 0])
    cube([1, 1, 1.25]);
  translate([226, 60, 0])
    cube([1, 1, 1.25]);
  translate([227, 60, 0])
    cube([1, 1, 1.25]);
  translate([228, 60, 0])
    cube([1, 1, 1.25]);
  translate([229, 60, 0])
    cube([1, 1, 1.25]);
  translate([230, 60, 0])
    cube([1, 1, 1.25]);
  translate([231, 60, 0])
    cube([1, 1, 1.25]);
  translate([232, 60, 0])
    cube([1, 1, 1.25]);
  translate([233, 60, 0])
    cube([1, 1, 1.25]);
  translate([234, 60, 0])
    cube([1, 1, 1.25]);
  translate([235, 60, 0])
    cube([1, 1, 1.25]);
  translate([236, 60, 0])
    cube([1, 1, 1.25]);
  translate([237, 60, 0])
    cube([1, 1, 1.25]);
  translate([238, 60, 0])
    cube([1, 1, 1.25]);
  translate([239, 60, 0])
    cube([1, 1, 1.25]);
  translate([240, 60, 0])
    cube([1, 1, 1.25]);
  translate([241, 60, 0])
    cube([1, 1, 1.25]);
  translate([242, 60, 0])
    cube([1, 1, 1.25]);
  translate([243, 60, 0])
    cube([1, 1, 1.25]);
  translate([244, 60, 0])
    cube([1, 1, 1.25]);
  translate([245, 60, 0])
    cube([1, 1, 1.25]);
  translate([246, 60, 0])
    cube([1, 1, 1.25]);
  translate([0, 61, 0])
    cube([1, 1, 1.41]);
  translate([1, 61, 0])
    cube([1, 1, 1.41]);
  translate([2, 61, 0])
    cube([1, 1, 1.41]);
  translate([3, 61, 0])
    cube([1, 1, 1.41]);
  translate([4, 61, 0])
    cube([1, 1, 1.41]);
  translate([5, 61, 0])
    cube([1, 1, 1.45]);
  translate([6, 61, 0])
    cube([1, 1, 1.45]);
  translate([7, 61, 0])
    cube([1, 1, 1.45]);
  translate([8, 61, 0])
    cube([1, 1, 1.41]);
  translate([9, 61, 0])
    cube([1, 1, 1.41]);
  translate([10, 61, 0])
    cube([1, 1, 1.41]);
  translate([11, 61, 0])
    cube([1, 1, 1.41]);
  translate([12, 61, 0])
    cube([1, 1, 1.41]);
  translate([13, 61, 0])
    cube([1, 1, 1.41]);
  translate([14, 61, 0])
    cube([1, 1, 1.37]);
  translate([15, 61, 0])
    cube([1, 1, 1.41]);
  translate([16, 61, 0])
    cube([1, 1, 1.41]);
  translate([17, 61, 0])
    cube([1, 1, 1.41]);
  translate([18, 61, 0])
    cube([1, 1, 1.41]);
  translate([19, 61, 0])
    cube([1, 1, 3.80]);
  translate([20, 61, 0])
    cube([1, 1, 1.45]);
  translate([21, 61, 0])
    cube([1, 1, 1.49]);
  translate([22, 61, 0])
    cube([1, 1, 1.02]);
  translate([23, 61, 0])
    cube([1, 1, 1.10]);
  translate([24, 61, 0])
    cube([1, 1, 1.22]);
  translate([25, 61, 0])
    cube([1, 1, 1.49]);
  translate([26, 61, 0])
    cube([1, 1, 0.82]);
  translate([27, 61, 0])
    cube([1, 1, 0.51]);
  translate([28, 61, 0])
    cube([1, 1, 0.31]);
  translate([29, 61, 0])
    cube([1, 1, 0.39]);
  translate([30, 61, 0])
    cube([1, 1, 0.55]);
  translate([31, 61, 0])
    cube([1, 1, 0.51]);
  translate([32, 61, 0])
    cube([1, 1, 0.78]);
  translate([33, 61, 0])
    cube([1, 1, 0.71]);
  translate([34, 61, 0])
    cube([1, 1, 0.75]);
  translate([35, 61, 0])
    cube([1, 1, 1.25]);
  translate([36, 61, 0])
    cube([1, 1, 1.33]);
  translate([37, 61, 0])
    cube([1, 1, 1.37]);
  translate([38, 61, 0])
    cube([1, 1, 1.37]);
  translate([39, 61, 0])
    cube([1, 1, 1.37]);
  translate([40, 61, 0])
    cube([1, 1, 1.37]);
  translate([41, 61, 0])
    cube([1, 1, 1.37]);
  translate([42, 61, 0])
    cube([1, 1, 1.37]);
  translate([43, 61, 0])
    cube([1, 1, 1.37]);
  translate([44, 61, 0])
    cube([1, 1, 1.37]);
  translate([45, 61, 0])
    cube([1, 1, 1.37]);
  translate([46, 61, 0])
    cube([1, 1, 1.37]);
  translate([47, 61, 0])
    cube([1, 1, 1.37]);
  translate([48, 61, 0])
    cube([1, 1, 1.37]);
  translate([49, 61, 0])
    cube([1, 1, 1.37]);
  translate([50, 61, 0])
    cube([1, 1, 1.37]);
  translate([51, 61, 0])
    cube([1, 1, 1.37]);
  translate([52, 61, 0])
    cube([1, 1, 1.33]);
  translate([53, 61, 0])
    cube([1, 1, 1.33]);
  translate([54, 61, 0])
    cube([1, 1, 1.33]);
  translate([55, 61, 0])
    cube([1, 1, 1.37]);
  translate([56, 61, 0])
    cube([1, 1, 1.33]);
  translate([57, 61, 0])
    cube([1, 1, 1.33]);
  translate([58, 61, 0])
    cube([1, 1, 1.33]);
  translate([59, 61, 0])
    cube([1, 1, 1.33]);
  translate([60, 61, 0])
    cube([1, 1, 1.33]);
  translate([61, 61, 0])
    cube([1, 1, 1.33]);
  translate([62, 61, 0])
    cube([1, 1, 1.33]);
  translate([63, 61, 0])
    cube([1, 1, 1.33]);
  translate([64, 61, 0])
    cube([1, 1, 1.33]);
  translate([65, 61, 0])
    cube([1, 1, 1.33]);
  translate([66, 61, 0])
    cube([1, 1, 1.33]);
  translate([67, 61, 0])
    cube([1, 1, 1.33]);
  translate([68, 61, 0])
    cube([1, 1, 1.33]);
  translate([69, 61, 0])
    cube([1, 1, 1.33]);
  translate([70, 61, 0])
    cube([1, 1, 1.33]);
  translate([71, 61, 0])
    cube([1, 1, 1.33]);
  translate([72, 61, 0])
    cube([1, 1, 1.29]);
  translate([73, 61, 0])
    cube([1, 1, 6.20]);
  translate([74, 61, 0])
    cube([1, 1, 2.24]);
  translate([75, 61, 0])
    cube([1, 1, 0.90]);
  translate([76, 61, 0])
    cube([1, 1, 1.14]);
  translate([77, 61, 0])
    cube([1, 1, 0.43]);
  translate([78, 61, 0])
    cube([1, 1, 5.22]);
  translate([79, 61, 0])
    cube([1, 1, 8.27]);
  translate([80, 61, 0])
    cube([1, 1, 4.04]);
  translate([81, 61, 0])
    cube([1, 1, 3.06]);
  translate([82, 61, 0])
    cube([1, 1, 1.65]);
  translate([83, 61, 0])
    cube([1, 1, 1.10]);
  translate([84, 61, 0])
    cube([1, 1, 7.33]);
  translate([85, 61, 0])
    cube([1, 1, 8.24]);
  translate([86, 61, 0])
    cube([1, 1, 7.29]);
  translate([87, 61, 0])
    cube([1, 1, 2.94]);
  translate([88, 61, 0])
    cube([1, 1, 1.06]);
  translate([89, 61, 0])
    cube([1, 1, 1.02]);
  translate([90, 61, 0])
    cube([1, 1, 1.92]);
  translate([91, 61, 0])
    cube([1, 1, 0.78]);
  translate([92, 61, 0])
    cube([1, 1, 1.02]);
  translate([93, 61, 0])
    cube([1, 1, 3.84]);
  translate([94, 61, 0])
    cube([1, 1, 4.31]);
  translate([95, 61, 0])
    cube([1, 1, 4.78]);
  translate([96, 61, 0])
    cube([1, 1, 5.18]);
  translate([97, 61, 0])
    cube([1, 1, 5.41]);
  translate([98, 61, 0])
    cube([1, 1, 5.61]);
  translate([99, 61, 0])
    cube([1, 1, 5.69]);
  translate([100, 61, 0])
    cube([1, 1, 5.96]);
  translate([101, 61, 0])
    cube([1, 1, 5.73]);
  translate([102, 61, 0])
    cube([1, 1, 3.80]);
  translate([103, 61, 0])
    cube([1, 1, 2.98]);
  translate([104, 61, 0])
    cube([1, 1, 4.20]);
  translate([105, 61, 0])
    cube([1, 1, 4.59]);
  translate([106, 61, 0])
    cube([1, 1, 4.94]);
  translate([107, 61, 0])
    cube([1, 1, 6.27]);
  translate([108, 61, 0])
    cube([1, 1, 6.08]);
  translate([109, 61, 0])
    cube([1, 1, 6.35]);
  translate([110, 61, 0])
    cube([1, 1, 5.84]);
  translate([111, 61, 0])
    cube([1, 1, 5.73]);
  translate([112, 61, 0])
    cube([1, 1, 5.57]);
  translate([113, 61, 0])
    cube([1, 1, 5.10]);
  translate([114, 61, 0])
    cube([1, 1, 4.00]);
  translate([115, 61, 0])
    cube([1, 1, 2.55]);
  translate([116, 61, 0])
    cube([1, 1, 1.25]);
  translate([117, 61, 0])
    cube([1, 1, 1.49]);
  translate([118, 61, 0])
    cube([1, 1, 1.33]);
  translate([119, 61, 0])
    cube([1, 1, 1.92]);
  translate([120, 61, 0])
    cube([1, 1, 1.37]);
  translate([121, 61, 0])
    cube([1, 1, 1.29]);
  translate([122, 61, 0])
    cube([1, 1, 1.37]);
  translate([123, 61, 0])
    cube([1, 1, 1.45]);
  translate([124, 61, 0])
    cube([1, 1, 1.76]);
  translate([125, 61, 0])
    cube([1, 1, 1.25]);
  translate([126, 61, 0])
    cube([1, 1, 1.22]);
  translate([127, 61, 0])
    cube([1, 1, 1.29]);
  translate([128, 61, 0])
    cube([1, 1, 1.33]);
  translate([129, 61, 0])
    cube([1, 1, 1.25]);
  translate([130, 61, 0])
    cube([1, 1, 1.25]);
  translate([131, 61, 0])
    cube([1, 1, 1.25]);
  translate([132, 61, 0])
    cube([1, 1, 1.25]);
  translate([133, 61, 0])
    cube([1, 1, 1.25]);
  translate([134, 61, 0])
    cube([1, 1, 1.25]);
  translate([135, 61, 0])
    cube([1, 1, 1.25]);
  translate([136, 61, 0])
    cube([1, 1, 1.29]);
  translate([137, 61, 0])
    cube([1, 1, 1.22]);
  translate([138, 61, 0])
    cube([1, 1, 1.29]);
  translate([139, 61, 0])
    cube([1, 1, 1.25]);
  translate([140, 61, 0])
    cube([1, 1, 1.25]);
  translate([141, 61, 0])
    cube([1, 1, 1.29]);
  translate([142, 61, 0])
    cube([1, 1, 1.29]);
  translate([143, 61, 0])
    cube([1, 1, 1.25]);
  translate([144, 61, 0])
    cube([1, 1, 1.29]);
  translate([145, 61, 0])
    cube([1, 1, 1.25]);
  translate([146, 61, 0])
    cube([1, 1, 1.25]);
  translate([147, 61, 0])
    cube([1, 1, 1.29]);
  translate([148, 61, 0])
    cube([1, 1, 1.25]);
  translate([149, 61, 0])
    cube([1, 1, 1.29]);
  translate([150, 61, 0])
    cube([1, 1, 1.25]);
  translate([151, 61, 0])
    cube([1, 1, 1.29]);
  translate([152, 61, 0])
    cube([1, 1, 1.29]);
  translate([153, 61, 0])
    cube([1, 1, 1.29]);
  translate([154, 61, 0])
    cube([1, 1, 1.29]);
  translate([155, 61, 0])
    cube([1, 1, 1.29]);
  translate([156, 61, 0])
    cube([1, 1, 1.29]);
  translate([157, 61, 0])
    cube([1, 1, 1.29]);
  translate([158, 61, 0])
    cube([1, 1, 1.29]);
  translate([159, 61, 0])
    cube([1, 1, 1.29]);
  translate([160, 61, 0])
    cube([1, 1, 1.29]);
  translate([161, 61, 0])
    cube([1, 1, 1.29]);
  translate([162, 61, 0])
    cube([1, 1, 1.29]);
  translate([163, 61, 0])
    cube([1, 1, 1.29]);
  translate([164, 61, 0])
    cube([1, 1, 1.29]);
  translate([165, 61, 0])
    cube([1, 1, 1.29]);
  translate([166, 61, 0])
    cube([1, 1, 1.29]);
  translate([167, 61, 0])
    cube([1, 1, 1.29]);
  translate([168, 61, 0])
    cube([1, 1, 1.29]);
  translate([169, 61, 0])
    cube([1, 1, 1.29]);
  translate([170, 61, 0])
    cube([1, 1, 1.29]);
  translate([171, 61, 0])
    cube([1, 1, 1.29]);
  translate([172, 61, 0])
    cube([1, 1, 1.29]);
  translate([173, 61, 0])
    cube([1, 1, 1.29]);
  translate([174, 61, 0])
    cube([1, 1, 1.29]);
  translate([175, 61, 0])
    cube([1, 1, 1.25]);
  translate([176, 61, 0])
    cube([1, 1, 1.29]);
  translate([177, 61, 0])
    cube([1, 1, 1.25]);
  translate([178, 61, 0])
    cube([1, 1, 1.25]);
  translate([179, 61, 0])
    cube([1, 1, 1.29]);
  translate([180, 61, 0])
    cube([1, 1, 1.29]);
  translate([181, 61, 0])
    cube([1, 1, 1.33]);
  translate([182, 61, 0])
    cube([1, 1, 1.29]);
  translate([183, 61, 0])
    cube([1, 1, 1.29]);
  translate([184, 61, 0])
    cube([1, 1, 1.33]);
  translate([185, 61, 0])
    cube([1, 1, 1.25]);
  translate([186, 61, 0])
    cube([1, 1, 1.29]);
  translate([187, 61, 0])
    cube([1, 1, 1.29]);
  translate([188, 61, 0])
    cube([1, 1, 1.25]);
  translate([189, 61, 0])
    cube([1, 1, 1.25]);
  translate([190, 61, 0])
    cube([1, 1, 1.25]);
  translate([191, 61, 0])
    cube([1, 1, 1.25]);
  translate([192, 61, 0])
    cube([1, 1, 1.25]);
  translate([193, 61, 0])
    cube([1, 1, 1.25]);
  translate([194, 61, 0])
    cube([1, 1, 1.25]);
  translate([195, 61, 0])
    cube([1, 1, 1.29]);
  translate([196, 61, 0])
    cube([1, 1, 1.25]);
  translate([197, 61, 0])
    cube([1, 1, 1.25]);
  translate([198, 61, 0])
    cube([1, 1, 1.25]);
  translate([199, 61, 0])
    cube([1, 1, 1.25]);
  translate([200, 61, 0])
    cube([1, 1, 1.25]);
  translate([201, 61, 0])
    cube([1, 1, 1.25]);
  translate([202, 61, 0])
    cube([1, 1, 1.25]);
  translate([203, 61, 0])
    cube([1, 1, 1.25]);
  translate([204, 61, 0])
    cube([1, 1, 1.25]);
  translate([205, 61, 0])
    cube([1, 1, 1.25]);
  translate([206, 61, 0])
    cube([1, 1, 1.25]);
  translate([207, 61, 0])
    cube([1, 1, 1.25]);
  translate([208, 61, 0])
    cube([1, 1, 1.25]);
  translate([209, 61, 0])
    cube([1, 1, 1.25]);
  translate([210, 61, 0])
    cube([1, 1, 1.25]);
  translate([211, 61, 0])
    cube([1, 1, 1.25]);
  translate([212, 61, 0])
    cube([1, 1, 1.25]);
  translate([213, 61, 0])
    cube([1, 1, 1.25]);
  translate([214, 61, 0])
    cube([1, 1, 1.25]);
  translate([215, 61, 0])
    cube([1, 1, 1.25]);
  translate([216, 61, 0])
    cube([1, 1, 1.25]);
  translate([217, 61, 0])
    cube([1, 1, 1.25]);
  translate([218, 61, 0])
    cube([1, 1, 1.25]);
  translate([219, 61, 0])
    cube([1, 1, 1.25]);
  translate([220, 61, 0])
    cube([1, 1, 1.25]);
  translate([221, 61, 0])
    cube([1, 1, 1.25]);
  translate([222, 61, 0])
    cube([1, 1, 1.25]);
  translate([223, 61, 0])
    cube([1, 1, 1.25]);
  translate([224, 61, 0])
    cube([1, 1, 1.25]);
  translate([225, 61, 0])
    cube([1, 1, 1.25]);
  translate([226, 61, 0])
    cube([1, 1, 1.25]);
  translate([227, 61, 0])
    cube([1, 1, 1.25]);
  translate([228, 61, 0])
    cube([1, 1, 1.25]);
  translate([229, 61, 0])
    cube([1, 1, 1.25]);
  translate([230, 61, 0])
    cube([1, 1, 1.25]);
  translate([231, 61, 0])
    cube([1, 1, 1.25]);
  translate([232, 61, 0])
    cube([1, 1, 1.25]);
  translate([233, 61, 0])
    cube([1, 1, 1.25]);
  translate([234, 61, 0])
    cube([1, 1, 1.25]);
  translate([235, 61, 0])
    cube([1, 1, 1.25]);
  translate([236, 61, 0])
    cube([1, 1, 1.25]);
  translate([237, 61, 0])
    cube([1, 1, 1.25]);
  translate([238, 61, 0])
    cube([1, 1, 1.25]);
  translate([239, 61, 0])
    cube([1, 1, 1.25]);
  translate([240, 61, 0])
    cube([1, 1, 1.25]);
  translate([241, 61, 0])
    cube([1, 1, 1.25]);
  translate([242, 61, 0])
    cube([1, 1, 1.25]);
  translate([243, 61, 0])
    cube([1, 1, 1.25]);
  translate([244, 61, 0])
    cube([1, 1, 1.25]);
  translate([245, 61, 0])
    cube([1, 1, 1.25]);
  translate([246, 61, 0])
    cube([1, 1, 1.25]);
  translate([0, 62, 0])
    cube([1, 1, 1.41]);
  translate([1, 62, 0])
    cube([1, 1, 1.41]);
  translate([2, 62, 0])
    cube([1, 1, 1.41]);
  translate([3, 62, 0])
    cube([1, 1, 1.41]);
  translate([4, 62, 0])
    cube([1, 1, 1.41]);
  translate([5, 62, 0])
    cube([1, 1, 1.45]);
  translate([6, 62, 0])
    cube([1, 1, 1.45]);
  translate([7, 62, 0])
    cube([1, 1, 1.45]);
  translate([8, 62, 0])
    cube([1, 1, 1.41]);
  translate([9, 62, 0])
    cube([1, 1, 1.41]);
  translate([10, 62, 0])
    cube([1, 1, 1.41]);
  translate([11, 62, 0])
    cube([1, 1, 1.41]);
  translate([12, 62, 0])
    cube([1, 1, 1.41]);
  translate([13, 62, 0])
    cube([1, 1, 1.41]);
  translate([14, 62, 0])
    cube([1, 1, 1.37]);
  translate([15, 62, 0])
    cube([1, 1, 1.41]);
  translate([16, 62, 0])
    cube([1, 1, 1.41]);
  translate([17, 62, 0])
    cube([1, 1, 1.41]);
  translate([18, 62, 0])
    cube([1, 1, 1.41]);
  translate([19, 62, 0])
    cube([1, 1, 1.18]);
  translate([20, 62, 0])
    cube([1, 1, 1.73]);
  translate([21, 62, 0])
    cube([1, 1, 1.29]);
  translate([22, 62, 0])
    cube([1, 1, 1.41]);
  translate([23, 62, 0])
    cube([1, 1, 1.29]);
  translate([24, 62, 0])
    cube([1, 1, 0.24]);
  translate([25, 62, 0])
    cube([1, 1, 0.12]);
  translate([26, 62, 0])
    cube([1, 1, 0.78]);
  translate([27, 62, 0])
    cube([1, 1, 0.43]);
  translate([28, 62, 0])
    cube([1, 1, 0.43]);
  translate([29, 62, 0])
    cube([1, 1, 0.55]);
  translate([30, 62, 0])
    cube([1, 1, 0.82]);
  translate([31, 62, 0])
    cube([1, 1, 0.71]);
  translate([32, 62, 0])
    cube([1, 1, 0.35]);
  translate([33, 62, 0])
    cube([1, 1, 0.71]);
  translate([34, 62, 0])
    cube([1, 1, 0.75]);
  translate([35, 62, 0])
    cube([1, 1, 0.78]);
  translate([36, 62, 0])
    cube([1, 1, 1.41]);
  translate([37, 62, 0])
    cube([1, 1, 1.37]);
  translate([38, 62, 0])
    cube([1, 1, 1.37]);
  translate([39, 62, 0])
    cube([1, 1, 1.37]);
  translate([40, 62, 0])
    cube([1, 1, 1.37]);
  translate([41, 62, 0])
    cube([1, 1, 1.37]);
  translate([42, 62, 0])
    cube([1, 1, 1.37]);
  translate([43, 62, 0])
    cube([1, 1, 1.37]);
  translate([44, 62, 0])
    cube([1, 1, 1.37]);
  translate([45, 62, 0])
    cube([1, 1, 1.37]);
  translate([46, 62, 0])
    cube([1, 1, 1.37]);
  translate([47, 62, 0])
    cube([1, 1, 1.37]);
  translate([48, 62, 0])
    cube([1, 1, 1.37]);
  translate([49, 62, 0])
    cube([1, 1, 1.37]);
  translate([50, 62, 0])
    cube([1, 1, 1.37]);
  translate([51, 62, 0])
    cube([1, 1, 1.37]);
  translate([52, 62, 0])
    cube([1, 1, 1.33]);
  translate([53, 62, 0])
    cube([1, 1, 1.33]);
  translate([54, 62, 0])
    cube([1, 1, 1.33]);
  translate([55, 62, 0])
    cube([1, 1, 1.37]);
  translate([56, 62, 0])
    cube([1, 1, 1.33]);
  translate([57, 62, 0])
    cube([1, 1, 1.33]);
  translate([58, 62, 0])
    cube([1, 1, 1.33]);
  translate([59, 62, 0])
    cube([1, 1, 1.33]);
  translate([60, 62, 0])
    cube([1, 1, 1.33]);
  translate([61, 62, 0])
    cube([1, 1, 1.33]);
  translate([62, 62, 0])
    cube([1, 1, 1.33]);
  translate([63, 62, 0])
    cube([1, 1, 1.33]);
  translate([64, 62, 0])
    cube([1, 1, 1.33]);
  translate([65, 62, 0])
    cube([1, 1, 1.33]);
  translate([66, 62, 0])
    cube([1, 1, 1.33]);
  translate([67, 62, 0])
    cube([1, 1, 1.33]);
  translate([68, 62, 0])
    cube([1, 1, 1.33]);
  translate([69, 62, 0])
    cube([1, 1, 1.33]);
  translate([70, 62, 0])
    cube([1, 1, 1.33]);
  translate([71, 62, 0])
    cube([1, 1, 1.33]);
  translate([72, 62, 0])
    cube([1, 1, 1.37]);
  translate([73, 62, 0])
    cube([1, 1, 2.90]);
  translate([74, 62, 0])
    cube([1, 1, 0.86]);
  translate([75, 62, 0])
    cube([1, 1, 0.82]);
  translate([76, 62, 0])
    cube([1, 1, 7.25]);
  translate([77, 62, 0])
    cube([1, 1, 7.80]);
  translate([78, 62, 0])
    cube([1, 1, 7.84]);
  translate([79, 62, 0])
    cube([1, 1, 4.08]);
  translate([80, 62, 0])
    cube([1, 1, 4.39]);
  translate([81, 62, 0])
    cube([1, 1, 0.86]);
  translate([82, 62, 0])
    cube([1, 1, 1.37]);
  translate([83, 62, 0])
    cube([1, 1, 7.10]);
  translate([84, 62, 0])
    cube([1, 1, 3.41]);
  translate([85, 62, 0])
    cube([1, 1, 8.12]);
  translate([86, 62, 0])
    cube([1, 1, 7.06]);
  translate([87, 62, 0])
    cube([1, 1, 2.67]);
  translate([88, 62, 0])
    cube([1, 1, 1.33]);
  translate([89, 62, 0])
    cube([1, 1, 1.37]);
  translate([90, 62, 0])
    cube([1, 1, 1.25]);
  translate([91, 62, 0])
    cube([1, 1, 1.14]);
  translate([92, 62, 0])
    cube([1, 1, 1.69]);
  translate([93, 62, 0])
    cube([1, 1, 3.69]);
  translate([94, 62, 0])
    cube([1, 1, 4.20]);
  translate([95, 62, 0])
    cube([1, 1, 4.67]);
  translate([96, 62, 0])
    cube([1, 1, 5.22]);
  translate([97, 62, 0])
    cube([1, 1, 5.22]);
  translate([98, 62, 0])
    cube([1, 1, 5.57]);
  translate([99, 62, 0])
    cube([1, 1, 5.76]);
  translate([100, 62, 0])
    cube([1, 1, 5.84]);
  translate([101, 62, 0])
    cube([1, 1, 6.00]);
  translate([102, 62, 0])
    cube([1, 1, 4.35]);
  translate([103, 62, 0])
    cube([1, 1, 2.55]);
  translate([104, 62, 0])
    cube([1, 1, 2.04]);
  translate([105, 62, 0])
    cube([1, 1, 3.37]);
  translate([106, 62, 0])
    cube([1, 1, 4.47]);
  translate([107, 62, 0])
    cube([1, 1, 5.49]);
  translate([108, 62, 0])
    cube([1, 1, 5.80]);
  translate([109, 62, 0])
    cube([1, 1, 5.92]);
  translate([110, 62, 0])
    cube([1, 1, 5.88]);
  translate([111, 62, 0])
    cube([1, 1, 5.61]);
  translate([112, 62, 0])
    cube([1, 1, 5.49]);
  translate([113, 62, 0])
    cube([1, 1, 5.25]);
  translate([114, 62, 0])
    cube([1, 1, 4.51]);
  translate([115, 62, 0])
    cube([1, 1, 2.63]);
  translate([116, 62, 0])
    cube([1, 1, 1.29]);
  translate([117, 62, 0])
    cube([1, 1, 1.29]);
  translate([118, 62, 0])
    cube([1, 1, 1.49]);
  translate([119, 62, 0])
    cube([1, 1, 1.53]);
  translate([120, 62, 0])
    cube([1, 1, 1.29]);
  translate([121, 62, 0])
    cube([1, 1, 2.63]);
  translate([122, 62, 0])
    cube([1, 1, 1.53]);
  translate([123, 62, 0])
    cube([1, 1, 2.35]);
  translate([124, 62, 0])
    cube([1, 1, 1.22]);
  translate([125, 62, 0])
    cube([1, 1, 1.29]);
  translate([126, 62, 0])
    cube([1, 1, 1.22]);
  translate([127, 62, 0])
    cube([1, 1, 1.29]);
  translate([128, 62, 0])
    cube([1, 1, 1.25]);
  translate([129, 62, 0])
    cube([1, 1, 1.29]);
  translate([130, 62, 0])
    cube([1, 1, 1.29]);
  translate([131, 62, 0])
    cube([1, 1, 1.25]);
  translate([132, 62, 0])
    cube([1, 1, 1.25]);
  translate([133, 62, 0])
    cube([1, 1, 1.25]);
  translate([134, 62, 0])
    cube([1, 1, 1.25]);
  translate([135, 62, 0])
    cube([1, 1, 1.25]);
  translate([136, 62, 0])
    cube([1, 1, 1.29]);
  translate([137, 62, 0])
    cube([1, 1, 1.22]);
  translate([138, 62, 0])
    cube([1, 1, 1.29]);
  translate([139, 62, 0])
    cube([1, 1, 1.25]);
  translate([140, 62, 0])
    cube([1, 1, 1.25]);
  translate([141, 62, 0])
    cube([1, 1, 1.29]);
  translate([142, 62, 0])
    cube([1, 1, 1.29]);
  translate([143, 62, 0])
    cube([1, 1, 1.25]);
  translate([144, 62, 0])
    cube([1, 1, 1.29]);
  translate([145, 62, 0])
    cube([1, 1, 1.25]);
  translate([146, 62, 0])
    cube([1, 1, 1.25]);
  translate([147, 62, 0])
    cube([1, 1, 1.29]);
  translate([148, 62, 0])
    cube([1, 1, 1.25]);
  translate([149, 62, 0])
    cube([1, 1, 1.29]);
  translate([150, 62, 0])
    cube([1, 1, 1.25]);
  translate([151, 62, 0])
    cube([1, 1, 1.29]);
  translate([152, 62, 0])
    cube([1, 1, 1.29]);
  translate([153, 62, 0])
    cube([1, 1, 1.29]);
  translate([154, 62, 0])
    cube([1, 1, 1.29]);
  translate([155, 62, 0])
    cube([1, 1, 1.29]);
  translate([156, 62, 0])
    cube([1, 1, 1.29]);
  translate([157, 62, 0])
    cube([1, 1, 1.29]);
  translate([158, 62, 0])
    cube([1, 1, 1.29]);
  translate([159, 62, 0])
    cube([1, 1, 1.29]);
  translate([160, 62, 0])
    cube([1, 1, 1.29]);
  translate([161, 62, 0])
    cube([1, 1, 1.29]);
  translate([162, 62, 0])
    cube([1, 1, 1.29]);
  translate([163, 62, 0])
    cube([1, 1, 1.29]);
  translate([164, 62, 0])
    cube([1, 1, 1.29]);
  translate([165, 62, 0])
    cube([1, 1, 1.29]);
  translate([166, 62, 0])
    cube([1, 1, 1.29]);
  translate([167, 62, 0])
    cube([1, 1, 1.29]);
  translate([168, 62, 0])
    cube([1, 1, 1.29]);
  translate([169, 62, 0])
    cube([1, 1, 1.29]);
  translate([170, 62, 0])
    cube([1, 1, 1.29]);
  translate([171, 62, 0])
    cube([1, 1, 1.29]);
  translate([172, 62, 0])
    cube([1, 1, 1.29]);
  translate([173, 62, 0])
    cube([1, 1, 1.29]);
  translate([174, 62, 0])
    cube([1, 1, 1.29]);
  translate([175, 62, 0])
    cube([1, 1, 1.25]);
  translate([176, 62, 0])
    cube([1, 1, 1.29]);
  translate([177, 62, 0])
    cube([1, 1, 1.25]);
  translate([178, 62, 0])
    cube([1, 1, 1.25]);
  translate([179, 62, 0])
    cube([1, 1, 1.29]);
  translate([180, 62, 0])
    cube([1, 1, 1.22]);
  translate([181, 62, 0])
    cube([1, 1, 1.25]);
  translate([182, 62, 0])
    cube([1, 1, 1.29]);
  translate([183, 62, 0])
    cube([1, 1, 1.29]);
  translate([184, 62, 0])
    cube([1, 1, 1.29]);
  translate([185, 62, 0])
    cube([1, 1, 1.25]);
  translate([186, 62, 0])
    cube([1, 1, 1.29]);
  translate([187, 62, 0])
    cube([1, 1, 1.29]);
  translate([188, 62, 0])
    cube([1, 1, 1.25]);
  translate([189, 62, 0])
    cube([1, 1, 1.25]);
  translate([190, 62, 0])
    cube([1, 1, 1.25]);
  translate([191, 62, 0])
    cube([1, 1, 1.25]);
  translate([192, 62, 0])
    cube([1, 1, 1.25]);
  translate([193, 62, 0])
    cube([1, 1, 1.25]);
  translate([194, 62, 0])
    cube([1, 1, 1.25]);
  translate([195, 62, 0])
    cube([1, 1, 1.29]);
  translate([196, 62, 0])
    cube([1, 1, 1.25]);
  translate([197, 62, 0])
    cube([1, 1, 1.25]);
  translate([198, 62, 0])
    cube([1, 1, 1.25]);
  translate([199, 62, 0])
    cube([1, 1, 1.25]);
  translate([200, 62, 0])
    cube([1, 1, 1.25]);
  translate([201, 62, 0])
    cube([1, 1, 1.25]);
  translate([202, 62, 0])
    cube([1, 1, 1.25]);
  translate([203, 62, 0])
    cube([1, 1, 1.25]);
  translate([204, 62, 0])
    cube([1, 1, 1.25]);
  translate([205, 62, 0])
    cube([1, 1, 1.25]);
  translate([206, 62, 0])
    cube([1, 1, 1.25]);
  translate([207, 62, 0])
    cube([1, 1, 1.25]);
  translate([208, 62, 0])
    cube([1, 1, 1.25]);
  translate([209, 62, 0])
    cube([1, 1, 1.25]);
  translate([210, 62, 0])
    cube([1, 1, 1.25]);
  translate([211, 62, 0])
    cube([1, 1, 1.25]);
  translate([212, 62, 0])
    cube([1, 1, 1.25]);
  translate([213, 62, 0])
    cube([1, 1, 1.25]);
  translate([214, 62, 0])
    cube([1, 1, 1.25]);
  translate([215, 62, 0])
    cube([1, 1, 1.25]);
  translate([216, 62, 0])
    cube([1, 1, 1.25]);
  translate([217, 62, 0])
    cube([1, 1, 1.25]);
  translate([218, 62, 0])
    cube([1, 1, 1.25]);
  translate([219, 62, 0])
    cube([1, 1, 1.25]);
  translate([220, 62, 0])
    cube([1, 1, 1.25]);
  translate([221, 62, 0])
    cube([1, 1, 1.25]);
  translate([222, 62, 0])
    cube([1, 1, 1.25]);
  translate([223, 62, 0])
    cube([1, 1, 1.25]);
  translate([224, 62, 0])
    cube([1, 1, 1.25]);
  translate([225, 62, 0])
    cube([1, 1, 1.25]);
  translate([226, 62, 0])
    cube([1, 1, 1.25]);
  translate([227, 62, 0])
    cube([1, 1, 1.25]);
  translate([228, 62, 0])
    cube([1, 1, 1.25]);
  translate([229, 62, 0])
    cube([1, 1, 1.25]);
  translate([230, 62, 0])
    cube([1, 1, 1.25]);
  translate([231, 62, 0])
    cube([1, 1, 1.25]);
  translate([232, 62, 0])
    cube([1, 1, 1.25]);
  translate([233, 62, 0])
    cube([1, 1, 1.25]);
  translate([234, 62, 0])
    cube([1, 1, 1.25]);
  translate([235, 62, 0])
    cube([1, 1, 1.25]);
  translate([236, 62, 0])
    cube([1, 1, 1.25]);
  translate([237, 62, 0])
    cube([1, 1, 1.25]);
  translate([238, 62, 0])
    cube([1, 1, 1.25]);
  translate([239, 62, 0])
    cube([1, 1, 1.25]);
  translate([240, 62, 0])
    cube([1, 1, 1.25]);
  translate([241, 62, 0])
    cube([1, 1, 1.25]);
  translate([242, 62, 0])
    cube([1, 1, 1.25]);
  translate([243, 62, 0])
    cube([1, 1, 1.25]);
  translate([244, 62, 0])
    cube([1, 1, 1.25]);
  translate([245, 62, 0])
    cube([1, 1, 1.25]);
  translate([246, 62, 0])
    cube([1, 1, 1.25]);
  translate([0, 63, 0])
    cube([1, 1, 1.41]);
  translate([1, 63, 0])
    cube([1, 1, 1.45]);
  translate([2, 63, 0])
    cube([1, 1, 1.45]);
  translate([3, 63, 0])
    cube([1, 1, 1.41]);
  translate([4, 63, 0])
    cube([1, 1, 1.41]);
  translate([5, 63, 0])
    cube([1, 1, 1.41]);
  translate([6, 63, 0])
    cube([1, 1, 1.41]);
  translate([7, 63, 0])
    cube([1, 1, 1.41]);
  translate([8, 63, 0])
    cube([1, 1, 1.41]);
  translate([9, 63, 0])
    cube([1, 1, 1.41]);
  translate([10, 63, 0])
    cube([1, 1, 1.41]);
  translate([11, 63, 0])
    cube([1, 1, 1.41]);
  translate([12, 63, 0])
    cube([1, 1, 1.41]);
  translate([13, 63, 0])
    cube([1, 1, 1.41]);
  translate([14, 63, 0])
    cube([1, 1, 1.41]);
  translate([15, 63, 0])
    cube([1, 1, 1.41]);
  translate([16, 63, 0])
    cube([1, 1, 1.41]);
  translate([17, 63, 0])
    cube([1, 1, 1.41]);
  translate([18, 63, 0])
    cube([1, 1, 1.41]);
  translate([19, 63, 0])
    cube([1, 1, 1.41]);
  translate([20, 63, 0])
    cube([1, 1, 3.18]);
  translate([21, 63, 0])
    cube([1, 1, 1.37]);
  translate([22, 63, 0])
    cube([1, 1, 5.88]);
  translate([23, 63, 0])
    cube([1, 1, 1.33]);
  translate([24, 63, 0])
    cube([1, 1, 0.47]);
  translate([25, 63, 0])
    cube([1, 1, 1.18]);
  translate([26, 63, 0])
    cube([1, 1, 1.33]);
  translate([27, 63, 0])
    cube([1, 1, 0.55]);
  translate([28, 63, 0])
    cube([1, 1, 0.35]);
  translate([29, 63, 0])
    cube([1, 1, 0.94]);
  translate([30, 63, 0])
    cube([1, 1, 0.43]);
  translate([31, 63, 0])
    cube([1, 1, 1.41]);
  translate([32, 63, 0])
    cube([1, 1, 1.18]);
  translate([33, 63, 0])
    cube([1, 1, 0.59]);
  translate([34, 63, 0])
    cube([1, 1, 0.78]);
  translate([35, 63, 0])
    cube([1, 1, 0.75]);
  translate([36, 63, 0])
    cube([1, 1, 1.37]);
  translate([37, 63, 0])
    cube([1, 1, 1.37]);
  translate([38, 63, 0])
    cube([1, 1, 1.37]);
  translate([39, 63, 0])
    cube([1, 1, 1.37]);
  translate([40, 63, 0])
    cube([1, 1, 1.37]);
  translate([41, 63, 0])
    cube([1, 1, 1.37]);
  translate([42, 63, 0])
    cube([1, 1, 1.37]);
  translate([43, 63, 0])
    cube([1, 1, 1.37]);
  translate([44, 63, 0])
    cube([1, 1, 1.37]);
  translate([45, 63, 0])
    cube([1, 1, 1.37]);
  translate([46, 63, 0])
    cube([1, 1, 1.37]);
  translate([47, 63, 0])
    cube([1, 1, 1.37]);
  translate([48, 63, 0])
    cube([1, 1, 1.37]);
  translate([49, 63, 0])
    cube([1, 1, 1.37]);
  translate([50, 63, 0])
    cube([1, 1, 1.37]);
  translate([51, 63, 0])
    cube([1, 1, 1.33]);
  translate([52, 63, 0])
    cube([1, 1, 1.33]);
  translate([53, 63, 0])
    cube([1, 1, 1.33]);
  translate([54, 63, 0])
    cube([1, 1, 1.33]);
  translate([55, 63, 0])
    cube([1, 1, 1.33]);
  translate([56, 63, 0])
    cube([1, 1, 1.33]);
  translate([57, 63, 0])
    cube([1, 1, 1.33]);
  translate([58, 63, 0])
    cube([1, 1, 1.33]);
  translate([59, 63, 0])
    cube([1, 1, 1.33]);
  translate([60, 63, 0])
    cube([1, 1, 1.33]);
  translate([61, 63, 0])
    cube([1, 1, 1.33]);
  translate([62, 63, 0])
    cube([1, 1, 1.33]);
  translate([63, 63, 0])
    cube([1, 1, 1.33]);
  translate([64, 63, 0])
    cube([1, 1, 1.33]);
  translate([65, 63, 0])
    cube([1, 1, 1.33]);
  translate([66, 63, 0])
    cube([1, 1, 1.33]);
  translate([67, 63, 0])
    cube([1, 1, 1.33]);
  translate([68, 63, 0])
    cube([1, 1, 0.94]);
  translate([69, 63, 0])
    cube([1, 1, 1.41]);
  translate([70, 63, 0])
    cube([1, 1, 2.71]);
  translate([71, 63, 0])
    cube([1, 1, 1.10]);
  translate([72, 63, 0])
    cube([1, 1, 1.06]);
  translate([73, 63, 0])
    cube([1, 1, 1.10]);
  translate([74, 63, 0])
    cube([1, 1, 1.14]);
  translate([75, 63, 0])
    cube([1, 1, 1.02]);
  translate([76, 63, 0])
    cube([1, 1, 0.55]);
  translate([77, 63, 0])
    cube([1, 1, 0.59]);
  translate([78, 63, 0])
    cube([1, 1, 1.84]);
  translate([79, 63, 0])
    cube([1, 1, 1.45]);
  translate([80, 63, 0])
    cube([1, 1, 0.94]);
  translate([81, 63, 0])
    cube([1, 1, 6.59]);
  translate([82, 63, 0])
    cube([1, 1, 7.49]);
  translate([83, 63, 0])
    cube([1, 1, 7.18]);
  translate([84, 63, 0])
    cube([1, 1, 4.47]);
  translate([85, 63, 0])
    cube([1, 1, 7.49]);
  translate([86, 63, 0])
    cube([1, 1, 6.94]);
  translate([87, 63, 0])
    cube([1, 1, 6.00]);
  translate([88, 63, 0])
    cube([1, 1, 1.14]);
  translate([89, 63, 0])
    cube([1, 1, 1.84]);
  translate([90, 63, 0])
    cube([1, 1, 1.92]);
  translate([91, 63, 0])
    cube([1, 1, 2.00]);
  translate([92, 63, 0])
    cube([1, 1, 2.16]);
  translate([93, 63, 0])
    cube([1, 1, 2.98]);
  translate([94, 63, 0])
    cube([1, 1, 3.96]);
  translate([95, 63, 0])
    cube([1, 1, 4.51]);
  translate([96, 63, 0])
    cube([1, 1, 4.94]);
  translate([97, 63, 0])
    cube([1, 1, 5.10]);
  translate([98, 63, 0])
    cube([1, 1, 5.53]);
  translate([99, 63, 0])
    cube([1, 1, 5.88]);
  translate([100, 63, 0])
    cube([1, 1, 6.12]);
  translate([101, 63, 0])
    cube([1, 1, 6.24]);
  translate([102, 63, 0])
    cube([1, 1, 5.41]);
  translate([103, 63, 0])
    cube([1, 1, 4.16]);
  translate([104, 63, 0])
    cube([1, 1, 2.55]);
  translate([105, 63, 0])
    cube([1, 1, 1.65]);
  translate([106, 63, 0])
    cube([1, 1, 3.22]);
  translate([107, 63, 0])
    cube([1, 1, 4.04]);
  translate([108, 63, 0])
    cube([1, 1, 5.88]);
  translate([109, 63, 0])
    cube([1, 1, 6.08]);
  translate([110, 63, 0])
    cube([1, 1, 5.96]);
  translate([111, 63, 0])
    cube([1, 1, 5.84]);
  translate([112, 63, 0])
    cube([1, 1, 5.65]);
  translate([113, 63, 0])
    cube([1, 1, 5.53]);
  translate([114, 63, 0])
    cube([1, 1, 4.55]);
  translate([115, 63, 0])
    cube([1, 1, 1.49]);
  translate([116, 63, 0])
    cube([1, 1, 1.25]);
  translate([117, 63, 0])
    cube([1, 1, 1.25]);
  translate([118, 63, 0])
    cube([1, 1, 1.45]);
  translate([119, 63, 0])
    cube([1, 1, 1.73]);
  translate([120, 63, 0])
    cube([1, 1, 1.41]);
  translate([121, 63, 0])
    cube([1, 1, 1.29]);
  translate([122, 63, 0])
    cube([1, 1, 1.18]);
  translate([123, 63, 0])
    cube([1, 1, 3.18]);
  translate([124, 63, 0])
    cube([1, 1, 1.29]);
  translate([125, 63, 0])
    cube([1, 1, 1.29]);
  translate([126, 63, 0])
    cube([1, 1, 1.25]);
  translate([127, 63, 0])
    cube([1, 1, 1.25]);
  translate([128, 63, 0])
    cube([1, 1, 1.25]);
  translate([129, 63, 0])
    cube([1, 1, 1.29]);
  translate([130, 63, 0])
    cube([1, 1, 1.29]);
  translate([131, 63, 0])
    cube([1, 1, 1.29]);
  translate([132, 63, 0])
    cube([1, 1, 1.22]);
  translate([133, 63, 0])
    cube([1, 1, 1.29]);
  translate([134, 63, 0])
    cube([1, 1, 1.25]);
  translate([135, 63, 0])
    cube([1, 1, 1.25]);
  translate([136, 63, 0])
    cube([1, 1, 1.25]);
  translate([137, 63, 0])
    cube([1, 1, 1.25]);
  translate([138, 63, 0])
    cube([1, 1, 1.25]);
  translate([139, 63, 0])
    cube([1, 1, 1.29]);
  translate([140, 63, 0])
    cube([1, 1, 1.29]);
  translate([141, 63, 0])
    cube([1, 1, 1.25]);
  translate([142, 63, 0])
    cube([1, 1, 1.25]);
  translate([143, 63, 0])
    cube([1, 1, 1.25]);
  translate([144, 63, 0])
    cube([1, 1, 1.33]);
  translate([145, 63, 0])
    cube([1, 1, 1.22]);
  translate([146, 63, 0])
    cube([1, 1, 1.29]);
  translate([147, 63, 0])
    cube([1, 1, 1.29]);
  translate([148, 63, 0])
    cube([1, 1, 1.29]);
  translate([149, 63, 0])
    cube([1, 1, 1.29]);
  translate([150, 63, 0])
    cube([1, 1, 1.29]);
  translate([151, 63, 0])
    cube([1, 1, 1.29]);
  translate([152, 63, 0])
    cube([1, 1, 1.29]);
  translate([153, 63, 0])
    cube([1, 1, 1.25]);
  translate([154, 63, 0])
    cube([1, 1, 1.29]);
  translate([155, 63, 0])
    cube([1, 1, 1.29]);
  translate([156, 63, 0])
    cube([1, 1, 1.29]);
  translate([157, 63, 0])
    cube([1, 1, 1.29]);
  translate([158, 63, 0])
    cube([1, 1, 1.25]);
  translate([159, 63, 0])
    cube([1, 1, 1.29]);
  translate([160, 63, 0])
    cube([1, 1, 1.29]);
  translate([161, 63, 0])
    cube([1, 1, 1.29]);
  translate([162, 63, 0])
    cube([1, 1, 1.29]);
  translate([163, 63, 0])
    cube([1, 1, 1.29]);
  translate([164, 63, 0])
    cube([1, 1, 1.29]);
  translate([165, 63, 0])
    cube([1, 1, 1.29]);
  translate([166, 63, 0])
    cube([1, 1, 1.25]);
  translate([167, 63, 0])
    cube([1, 1, 1.29]);
  translate([168, 63, 0])
    cube([1, 1, 1.29]);
  translate([169, 63, 0])
    cube([1, 1, 1.29]);
  translate([170, 63, 0])
    cube([1, 1, 1.29]);
  translate([171, 63, 0])
    cube([1, 1, 1.29]);
  translate([172, 63, 0])
    cube([1, 1, 1.29]);
  translate([173, 63, 0])
    cube([1, 1, 1.29]);
  translate([174, 63, 0])
    cube([1, 1, 1.29]);
  translate([175, 63, 0])
    cube([1, 1, 1.25]);
  translate([176, 63, 0])
    cube([1, 1, 1.29]);
  translate([177, 63, 0])
    cube([1, 1, 1.25]);
  translate([178, 63, 0])
    cube([1, 1, 1.29]);
  translate([179, 63, 0])
    cube([1, 1, 1.29]);
  translate([180, 63, 0])
    cube([1, 1, 1.22]);
  translate([181, 63, 0])
    cube([1, 1, 1.25]);
  translate([182, 63, 0])
    cube([1, 1, 1.29]);
  translate([183, 63, 0])
    cube([1, 1, 1.29]);
  translate([184, 63, 0])
    cube([1, 1, 1.25]);
  translate([185, 63, 0])
    cube([1, 1, 1.25]);
  translate([186, 63, 0])
    cube([1, 1, 1.25]);
  translate([187, 63, 0])
    cube([1, 1, 1.29]);
  translate([188, 63, 0])
    cube([1, 1, 1.22]);
  translate([189, 63, 0])
    cube([1, 1, 1.29]);
  translate([190, 63, 0])
    cube([1, 1, 1.22]);
  translate([191, 63, 0])
    cube([1, 1, 1.25]);
  translate([192, 63, 0])
    cube([1, 1, 1.29]);
  translate([193, 63, 0])
    cube([1, 1, 1.25]);
  translate([194, 63, 0])
    cube([1, 1, 1.25]);
  translate([195, 63, 0])
    cube([1, 1, 1.25]);
  translate([196, 63, 0])
    cube([1, 1, 1.25]);
  translate([197, 63, 0])
    cube([1, 1, 1.25]);
  translate([198, 63, 0])
    cube([1, 1, 1.25]);
  translate([199, 63, 0])
    cube([1, 1, 1.25]);
  translate([200, 63, 0])
    cube([1, 1, 1.29]);
  translate([201, 63, 0])
    cube([1, 1, 1.25]);
  translate([202, 63, 0])
    cube([1, 1, 1.29]);
  translate([203, 63, 0])
    cube([1, 1, 1.25]);
  translate([204, 63, 0])
    cube([1, 1, 1.22]);
  translate([205, 63, 0])
    cube([1, 1, 1.25]);
  translate([206, 63, 0])
    cube([1, 1, 1.25]);
  translate([207, 63, 0])
    cube([1, 1, 1.25]);
  translate([208, 63, 0])
    cube([1, 1, 1.25]);
  translate([209, 63, 0])
    cube([1, 1, 1.25]);
  translate([210, 63, 0])
    cube([1, 1, 1.25]);
  translate([211, 63, 0])
    cube([1, 1, 1.25]);
  translate([212, 63, 0])
    cube([1, 1, 1.25]);
  translate([213, 63, 0])
    cube([1, 1, 1.25]);
  translate([214, 63, 0])
    cube([1, 1, 1.25]);
  translate([215, 63, 0])
    cube([1, 1, 1.25]);
  translate([216, 63, 0])
    cube([1, 1, 1.25]);
  translate([217, 63, 0])
    cube([1, 1, 1.25]);
  translate([218, 63, 0])
    cube([1, 1, 1.25]);
  translate([219, 63, 0])
    cube([1, 1, 1.25]);
  translate([220, 63, 0])
    cube([1, 1, 1.25]);
  translate([221, 63, 0])
    cube([1, 1, 1.25]);
  translate([222, 63, 0])
    cube([1, 1, 1.25]);
  translate([223, 63, 0])
    cube([1, 1, 1.25]);
  translate([224, 63, 0])
    cube([1, 1, 1.25]);
  translate([225, 63, 0])
    cube([1, 1, 1.25]);
  translate([226, 63, 0])
    cube([1, 1, 1.25]);
  translate([227, 63, 0])
    cube([1, 1, 1.25]);
  translate([228, 63, 0])
    cube([1, 1, 1.25]);
  translate([229, 63, 0])
    cube([1, 1, 1.25]);
  translate([230, 63, 0])
    cube([1, 1, 1.25]);
  translate([231, 63, 0])
    cube([1, 1, 1.25]);
  translate([232, 63, 0])
    cube([1, 1, 1.25]);
  translate([233, 63, 0])
    cube([1, 1, 1.25]);
  translate([234, 63, 0])
    cube([1, 1, 1.25]);
  translate([235, 63, 0])
    cube([1, 1, 1.25]);
  translate([236, 63, 0])
    cube([1, 1, 1.25]);
  translate([237, 63, 0])
    cube([1, 1, 1.25]);
  translate([238, 63, 0])
    cube([1, 1, 1.25]);
  translate([239, 63, 0])
    cube([1, 1, 1.25]);
  translate([240, 63, 0])
    cube([1, 1, 1.25]);
  translate([241, 63, 0])
    cube([1, 1, 1.25]);
  translate([242, 63, 0])
    cube([1, 1, 1.25]);
  translate([243, 63, 0])
    cube([1, 1, 1.25]);
  translate([244, 63, 0])
    cube([1, 1, 1.25]);
  translate([245, 63, 0])
    cube([1, 1, 1.25]);
  translate([246, 63, 0])
    cube([1, 1, 1.25]);
  translate([0, 64, 0])
    cube([1, 1, 1.45]);
  translate([1, 64, 0])
    cube([1, 1, 1.41]);
  translate([2, 64, 0])
    cube([1, 1, 1.41]);
  translate([3, 64, 0])
    cube([1, 1, 1.41]);
  translate([4, 64, 0])
    cube([1, 1, 1.45]);
  translate([5, 64, 0])
    cube([1, 1, 1.45]);
  translate([6, 64, 0])
    cube([1, 1, 1.41]);
  translate([7, 64, 0])
    cube([1, 1, 1.41]);
  translate([8, 64, 0])
    cube([1, 1, 1.37]);
  translate([9, 64, 0])
    cube([1, 1, 1.45]);
  translate([10, 64, 0])
    cube([1, 1, 1.45]);
  translate([11, 64, 0])
    cube([1, 1, 1.41]);
  translate([12, 64, 0])
    cube([1, 1, 1.41]);
  translate([13, 64, 0])
    cube([1, 1, 1.37]);
  translate([14, 64, 0])
    cube([1, 1, 1.41]);
  translate([15, 64, 0])
    cube([1, 1, 1.41]);
  translate([16, 64, 0])
    cube([1, 1, 1.41]);
  translate([17, 64, 0])
    cube([1, 1, 1.41]);
  translate([18, 64, 0])
    cube([1, 1, 1.41]);
  translate([19, 64, 0])
    cube([1, 1, 1.41]);
  translate([20, 64, 0])
    cube([1, 1, 5.37]);
  translate([21, 64, 0])
    cube([1, 1, 1.49]);
  translate([22, 64, 0])
    cube([1, 1, 1.49]);
  translate([23, 64, 0])
    cube([1, 1, 1.29]);
  translate([24, 64, 0])
    cube([1, 1, 0.98]);
  translate([25, 64, 0])
    cube([1, 1, 0.31]);
  translate([26, 64, 0])
    cube([1, 1, 0.43]);
  translate([27, 64, 0])
    cube([1, 1, 0.04]);
  translate([28, 64, 0])
    cube([1, 1, 0.35]);
  translate([29, 64, 0])
    cube([1, 1, 0.75]);
  translate([30, 64, 0])
    cube([1, 1, 0.55]);
  translate([31, 64, 0])
    cube([1, 1, 1.53]);
  translate([32, 64, 0])
    cube([1, 1, 1.33]);
  translate([33, 64, 0])
    cube([1, 1, 0.67]);
  translate([34, 64, 0])
    cube([1, 1, 0.78]);
  translate([35, 64, 0])
    cube([1, 1, 0.75]);
  translate([36, 64, 0])
    cube([1, 1, 1.18]);
  translate([37, 64, 0])
    cube([1, 1, 1.41]);
  translate([38, 64, 0])
    cube([1, 1, 1.37]);
  translate([39, 64, 0])
    cube([1, 1, 1.37]);
  translate([40, 64, 0])
    cube([1, 1, 1.37]);
  translate([41, 64, 0])
    cube([1, 1, 1.37]);
  translate([42, 64, 0])
    cube([1, 1, 1.37]);
  translate([43, 64, 0])
    cube([1, 1, 1.37]);
  translate([44, 64, 0])
    cube([1, 1, 1.37]);
  translate([45, 64, 0])
    cube([1, 1, 1.37]);
  translate([46, 64, 0])
    cube([1, 1, 1.37]);
  translate([47, 64, 0])
    cube([1, 1, 1.37]);
  translate([48, 64, 0])
    cube([1, 1, 1.37]);
  translate([49, 64, 0])
    cube([1, 1, 1.37]);
  translate([50, 64, 0])
    cube([1, 1, 1.37]);
  translate([51, 64, 0])
    cube([1, 1, 1.33]);
  translate([52, 64, 0])
    cube([1, 1, 1.37]);
  translate([53, 64, 0])
    cube([1, 1, 1.33]);
  translate([54, 64, 0])
    cube([1, 1, 1.33]);
  translate([55, 64, 0])
    cube([1, 1, 1.33]);
  translate([56, 64, 0])
    cube([1, 1, 1.33]);
  translate([57, 64, 0])
    cube([1, 1, 1.33]);
  translate([58, 64, 0])
    cube([1, 1, 1.33]);
  translate([59, 64, 0])
    cube([1, 1, 1.33]);
  translate([60, 64, 0])
    cube([1, 1, 1.33]);
  translate([61, 64, 0])
    cube([1, 1, 1.33]);
  translate([62, 64, 0])
    cube([1, 1, 1.33]);
  translate([63, 64, 0])
    cube([1, 1, 1.33]);
  translate([64, 64, 0])
    cube([1, 1, 1.33]);
  translate([65, 64, 0])
    cube([1, 1, 1.33]);
  translate([66, 64, 0])
    cube([1, 1, 1.33]);
  translate([67, 64, 0])
    cube([1, 1, 1.25]);
  translate([68, 64, 0])
    cube([1, 1, 1.29]);
  translate([69, 64, 0])
    cube([1, 1, 1.73]);
  translate([70, 64, 0])
    cube([1, 1, 1.29]);
  translate([71, 64, 0])
    cube([1, 1, 1.06]);
  translate([72, 64, 0])
    cube([1, 1, 0.90]);
  translate([73, 64, 0])
    cube([1, 1, 0.90]);
  translate([74, 64, 0])
    cube([1, 1, 1.02]);
  translate([75, 64, 0])
    cube([1, 1, 0.98]);
  translate([76, 64, 0])
    cube([1, 1, 0.75]);
  translate([77, 64, 0])
    cube([1, 1, 0.94]);
  translate([78, 64, 0])
    cube([1, 1, 0.71]);
  translate([79, 64, 0])
    cube([1, 1, 0.51]);
  translate([80, 64, 0])
    cube([1, 1, 1.80]);
  translate([81, 64, 0])
    cube([1, 1, 3.69]);
  translate([82, 64, 0])
    cube([1, 1, 5.25]);
  translate([83, 64, 0])
    cube([1, 1, 5.84]);
  translate([84, 64, 0])
    cube([1, 1, 4.47]);
  translate([85, 64, 0])
    cube([1, 1, 2.16]);
  translate([86, 64, 0])
    cube([1, 1, 6.63]);
  translate([87, 64, 0])
    cube([1, 1, 6.35]);
  translate([88, 64, 0])
    cube([1, 1, 4.51]);
  translate([89, 64, 0])
    cube([1, 1, 1.25]);
  translate([90, 64, 0])
    cube([1, 1, 0.90]);
  translate([91, 64, 0])
    cube([1, 1, 1.22]);
  translate([92, 64, 0])
    cube([1, 1, 1.80]);
  translate([93, 64, 0])
    cube([1, 1, 2.12]);
  translate([94, 64, 0])
    cube([1, 1, 3.96]);
  translate([95, 64, 0])
    cube([1, 1, 4.43]);
  translate([96, 64, 0])
    cube([1, 1, 4.75]);
  translate([97, 64, 0])
    cube([1, 1, 4.86]);
  translate([98, 64, 0])
    cube([1, 1, 5.25]);
  translate([99, 64, 0])
    cube([1, 1, 5.41]);
  translate([100, 64, 0])
    cube([1, 1, 5.73]);
  translate([101, 64, 0])
    cube([1, 1, 5.80]);
  translate([102, 64, 0])
    cube([1, 1, 5.65]);
  translate([103, 64, 0])
    cube([1, 1, 5.53]);
  translate([104, 64, 0])
    cube([1, 1, 4.75]);
  translate([105, 64, 0])
    cube([1, 1, 4.43]);
  translate([106, 64, 0])
    cube([1, 1, 4.55]);
  translate([107, 64, 0])
    cube([1, 1, 5.92]);
  translate([108, 64, 0])
    cube([1, 1, 6.24]);
  translate([109, 64, 0])
    cube([1, 1, 6.31]);
  translate([110, 64, 0])
    cube([1, 1, 5.92]);
  translate([111, 64, 0])
    cube([1, 1, 5.84]);
  translate([112, 64, 0])
    cube([1, 1, 5.69]);
  translate([113, 64, 0])
    cube([1, 1, 5.45]);
  translate([114, 64, 0])
    cube([1, 1, 4.12]);
  translate([115, 64, 0])
    cube([1, 1, 1.25]);
  translate([116, 64, 0])
    cube([1, 1, 1.29]);
  translate([117, 64, 0])
    cube([1, 1, 1.29]);
  translate([118, 64, 0])
    cube([1, 1, 2.08]);
  translate([119, 64, 0])
    cube([1, 1, 2.00]);
  translate([120, 64, 0])
    cube([1, 1, 3.80]);
  translate([121, 64, 0])
    cube([1, 1, 1.22]);
  translate([122, 64, 0])
    cube([1, 1, 1.41]);
  translate([123, 64, 0])
    cube([1, 1, 1.80]);
  translate([124, 64, 0])
    cube([1, 1, 1.25]);
  translate([125, 64, 0])
    cube([1, 1, 1.25]);
  translate([126, 64, 0])
    cube([1, 1, 1.29]);
  translate([127, 64, 0])
    cube([1, 1, 1.25]);
  translate([128, 64, 0])
    cube([1, 1, 1.25]);
  translate([129, 64, 0])
    cube([1, 1, 1.22]);
  translate([130, 64, 0])
    cube([1, 1, 1.25]);
  translate([131, 64, 0])
    cube([1, 1, 1.33]);
  translate([132, 64, 0])
    cube([1, 1, 1.22]);
  translate([133, 64, 0])
    cube([1, 1, 1.25]);
  translate([134, 64, 0])
    cube([1, 1, 1.25]);
  translate([135, 64, 0])
    cube([1, 1, 1.25]);
  translate([136, 64, 0])
    cube([1, 1, 1.25]);
  translate([137, 64, 0])
    cube([1, 1, 1.25]);
  translate([138, 64, 0])
    cube([1, 1, 1.29]);
  translate([139, 64, 0])
    cube([1, 1, 1.29]);
  translate([140, 64, 0])
    cube([1, 1, 1.25]);
  translate([141, 64, 0])
    cube([1, 1, 1.25]);
  translate([142, 64, 0])
    cube([1, 1, 1.25]);
  translate([143, 64, 0])
    cube([1, 1, 1.29]);
  translate([144, 64, 0])
    cube([1, 1, 1.29]);
  translate([145, 64, 0])
    cube([1, 1, 1.25]);
  translate([146, 64, 0])
    cube([1, 1, 1.25]);
  translate([147, 64, 0])
    cube([1, 1, 1.29]);
  translate([148, 64, 0])
    cube([1, 1, 1.25]);
  translate([149, 64, 0])
    cube([1, 1, 1.25]);
  translate([150, 64, 0])
    cube([1, 1, 1.29]);
  translate([151, 64, 0])
    cube([1, 1, 1.29]);
  translate([152, 64, 0])
    cube([1, 1, 1.33]);
  translate([153, 64, 0])
    cube([1, 1, 1.29]);
  translate([154, 64, 0])
    cube([1, 1, 1.29]);
  translate([155, 64, 0])
    cube([1, 1, 1.29]);
  translate([156, 64, 0])
    cube([1, 1, 1.29]);
  translate([157, 64, 0])
    cube([1, 1, 1.25]);
  translate([158, 64, 0])
    cube([1, 1, 1.29]);
  translate([159, 64, 0])
    cube([1, 1, 1.29]);
  translate([160, 64, 0])
    cube([1, 1, 1.29]);
  translate([161, 64, 0])
    cube([1, 1, 1.29]);
  translate([162, 64, 0])
    cube([1, 1, 1.29]);
  translate([163, 64, 0])
    cube([1, 1, 1.29]);
  translate([164, 64, 0])
    cube([1, 1, 1.29]);
  translate([165, 64, 0])
    cube([1, 1, 1.29]);
  translate([166, 64, 0])
    cube([1, 1, 1.29]);
  translate([167, 64, 0])
    cube([1, 1, 1.29]);
  translate([168, 64, 0])
    cube([1, 1, 1.29]);
  translate([169, 64, 0])
    cube([1, 1, 1.29]);
  translate([170, 64, 0])
    cube([1, 1, 1.29]);
  translate([171, 64, 0])
    cube([1, 1, 1.29]);
  translate([172, 64, 0])
    cube([1, 1, 1.29]);
  translate([173, 64, 0])
    cube([1, 1, 1.29]);
  translate([174, 64, 0])
    cube([1, 1, 1.29]);
  translate([175, 64, 0])
    cube([1, 1, 1.29]);
  translate([176, 64, 0])
    cube([1, 1, 1.29]);
  translate([177, 64, 0])
    cube([1, 1, 1.29]);
  translate([178, 64, 0])
    cube([1, 1, 1.29]);
  translate([179, 64, 0])
    cube([1, 1, 1.25]);
  translate([180, 64, 0])
    cube([1, 1, 1.29]);
  translate([181, 64, 0])
    cube([1, 1, 1.25]);
  translate([182, 64, 0])
    cube([1, 1, 1.33]);
  translate([183, 64, 0])
    cube([1, 1, 1.33]);
  translate([184, 64, 0])
    cube([1, 1, 1.29]);
  translate([185, 64, 0])
    cube([1, 1, 1.25]);
  translate([186, 64, 0])
    cube([1, 1, 1.25]);
  translate([187, 64, 0])
    cube([1, 1, 1.29]);
  translate([188, 64, 0])
    cube([1, 1, 1.25]);
  translate([189, 64, 0])
    cube([1, 1, 1.25]);
  translate([190, 64, 0])
    cube([1, 1, 1.29]);
  translate([191, 64, 0])
    cube([1, 1, 1.29]);
  translate([192, 64, 0])
    cube([1, 1, 1.29]);
  translate([193, 64, 0])
    cube([1, 1, 1.25]);
  translate([194, 64, 0])
    cube([1, 1, 1.25]);
  translate([195, 64, 0])
    cube([1, 1, 1.25]);
  translate([196, 64, 0])
    cube([1, 1, 1.25]);
  translate([197, 64, 0])
    cube([1, 1, 1.25]);
  translate([198, 64, 0])
    cube([1, 1, 1.25]);
  translate([199, 64, 0])
    cube([1, 1, 1.22]);
  translate([200, 64, 0])
    cube([1, 1, 1.25]);
  translate([201, 64, 0])
    cube([1, 1, 1.25]);
  translate([202, 64, 0])
    cube([1, 1, 1.25]);
  translate([203, 64, 0])
    cube([1, 1, 1.25]);
  translate([204, 64, 0])
    cube([1, 1, 1.25]);
  translate([205, 64, 0])
    cube([1, 1, 1.29]);
  translate([206, 64, 0])
    cube([1, 1, 1.25]);
  translate([207, 64, 0])
    cube([1, 1, 1.25]);
  translate([208, 64, 0])
    cube([1, 1, 1.25]);
  translate([209, 64, 0])
    cube([1, 1, 1.25]);
  translate([210, 64, 0])
    cube([1, 1, 1.25]);
  translate([211, 64, 0])
    cube([1, 1, 1.25]);
  translate([212, 64, 0])
    cube([1, 1, 1.25]);
  translate([213, 64, 0])
    cube([1, 1, 1.25]);
  translate([214, 64, 0])
    cube([1, 1, 1.25]);
  translate([215, 64, 0])
    cube([1, 1, 1.25]);
  translate([216, 64, 0])
    cube([1, 1, 1.29]);
  translate([217, 64, 0])
    cube([1, 1, 1.25]);
  translate([218, 64, 0])
    cube([1, 1, 1.25]);
  translate([219, 64, 0])
    cube([1, 1, 1.25]);
  translate([220, 64, 0])
    cube([1, 1, 1.25]);
  translate([221, 64, 0])
    cube([1, 1, 1.25]);
  translate([222, 64, 0])
    cube([1, 1, 1.25]);
  translate([223, 64, 0])
    cube([1, 1, 1.25]);
  translate([224, 64, 0])
    cube([1, 1, 1.25]);
  translate([225, 64, 0])
    cube([1, 1, 1.25]);
  translate([226, 64, 0])
    cube([1, 1, 1.25]);
  translate([227, 64, 0])
    cube([1, 1, 1.25]);
  translate([228, 64, 0])
    cube([1, 1, 1.25]);
  translate([229, 64, 0])
    cube([1, 1, 1.25]);
  translate([230, 64, 0])
    cube([1, 1, 1.25]);
  translate([231, 64, 0])
    cube([1, 1, 1.25]);
  translate([232, 64, 0])
    cube([1, 1, 1.25]);
  translate([233, 64, 0])
    cube([1, 1, 1.25]);
  translate([234, 64, 0])
    cube([1, 1, 1.25]);
  translate([235, 64, 0])
    cube([1, 1, 1.25]);
  translate([236, 64, 0])
    cube([1, 1, 1.25]);
  translate([237, 64, 0])
    cube([1, 1, 1.25]);
  translate([238, 64, 0])
    cube([1, 1, 1.25]);
  translate([239, 64, 0])
    cube([1, 1, 1.25]);
  translate([240, 64, 0])
    cube([1, 1, 1.25]);
  translate([241, 64, 0])
    cube([1, 1, 1.25]);
  translate([242, 64, 0])
    cube([1, 1, 1.25]);
  translate([243, 64, 0])
    cube([1, 1, 1.25]);
  translate([244, 64, 0])
    cube([1, 1, 1.25]);
  translate([245, 64, 0])
    cube([1, 1, 1.25]);
  translate([246, 64, 0])
    cube([1, 1, 1.25]);
  translate([0, 65, 0])
    cube([1, 1, 1.45]);
  translate([1, 65, 0])
    cube([1, 1, 1.41]);
  translate([2, 65, 0])
    cube([1, 1, 1.41]);
  translate([3, 65, 0])
    cube([1, 1, 1.41]);
  translate([4, 65, 0])
    cube([1, 1, 1.45]);
  translate([5, 65, 0])
    cube([1, 1, 1.45]);
  translate([6, 65, 0])
    cube([1, 1, 1.41]);
  translate([7, 65, 0])
    cube([1, 1, 1.41]);
  translate([8, 65, 0])
    cube([1, 1, 1.41]);
  translate([9, 65, 0])
    cube([1, 1, 1.45]);
  translate([10, 65, 0])
    cube([1, 1, 1.45]);
  translate([11, 65, 0])
    cube([1, 1, 1.41]);
  translate([12, 65, 0])
    cube([1, 1, 1.41]);
  translate([13, 65, 0])
    cube([1, 1, 1.37]);
  translate([14, 65, 0])
    cube([1, 1, 1.41]);
  translate([15, 65, 0])
    cube([1, 1, 1.41]);
  translate([16, 65, 0])
    cube([1, 1, 1.41]);
  translate([17, 65, 0])
    cube([1, 1, 1.41]);
  translate([18, 65, 0])
    cube([1, 1, 1.41]);
  translate([19, 65, 0])
    cube([1, 1, 1.45]);
  translate([20, 65, 0])
    cube([1, 1, 1.61]);
  translate([21, 65, 0])
    cube([1, 1, 1.06]);
  translate([22, 65, 0])
    cube([1, 1, 0.90]);
  translate([23, 65, 0])
    cube([1, 1, 1.69]);
  translate([24, 65, 0])
    cube([1, 1, 1.22]);
  translate([25, 65, 0])
    cube([1, 1, 0.78]);
  translate([26, 65, 0])
    cube([1, 1, 0.59]);
  translate([27, 65, 0])
    cube([1, 1, 0.94]);
  translate([28, 65, 0])
    cube([1, 1, 4.55]);
  translate([29, 65, 0])
    cube([1, 1, 4.63]);
  translate([30, 65, 0])
    cube([1, 1, 0.90]);
  translate([31, 65, 0])
    cube([1, 1, 0.78]);
  translate([32, 65, 0])
    cube([1, 1, 1.45]);
  translate([33, 65, 0])
    cube([1, 1, 1.06]);
  translate([34, 65, 0])
    cube([1, 1, 0.75]);
  translate([35, 65, 0])
    cube([1, 1, 0.75]);
  translate([36, 65, 0])
    cube([1, 1, 0.86]);
  translate([37, 65, 0])
    cube([1, 1, 1.37]);
  translate([38, 65, 0])
    cube([1, 1, 1.37]);
  translate([39, 65, 0])
    cube([1, 1, 1.37]);
  translate([40, 65, 0])
    cube([1, 1, 1.37]);
  translate([41, 65, 0])
    cube([1, 1, 1.37]);
  translate([42, 65, 0])
    cube([1, 1, 1.37]);
  translate([43, 65, 0])
    cube([1, 1, 1.37]);
  translate([44, 65, 0])
    cube([1, 1, 1.37]);
  translate([45, 65, 0])
    cube([1, 1, 1.37]);
  translate([46, 65, 0])
    cube([1, 1, 1.37]);
  translate([47, 65, 0])
    cube([1, 1, 1.37]);
  translate([48, 65, 0])
    cube([1, 1, 1.37]);
  translate([49, 65, 0])
    cube([1, 1, 1.37]);
  translate([50, 65, 0])
    cube([1, 1, 1.37]);
  translate([51, 65, 0])
    cube([1, 1, 1.33]);
  translate([52, 65, 0])
    cube([1, 1, 1.29]);
  translate([53, 65, 0])
    cube([1, 1, 1.37]);
  translate([54, 65, 0])
    cube([1, 1, 1.33]);
  translate([55, 65, 0])
    cube([1, 1, 1.33]);
  translate([56, 65, 0])
    cube([1, 1, 1.33]);
  translate([57, 65, 0])
    cube([1, 1, 1.33]);
  translate([58, 65, 0])
    cube([1, 1, 1.33]);
  translate([59, 65, 0])
    cube([1, 1, 1.33]);
  translate([60, 65, 0])
    cube([1, 1, 1.33]);
  translate([61, 65, 0])
    cube([1, 1, 1.33]);
  translate([62, 65, 0])
    cube([1, 1, 1.33]);
  translate([63, 65, 0])
    cube([1, 1, 1.33]);
  translate([64, 65, 0])
    cube([1, 1, 1.33]);
  translate([65, 65, 0])
    cube([1, 1, 1.33]);
  translate([66, 65, 0])
    cube([1, 1, 1.33]);
  translate([67, 65, 0])
    cube([1, 1, 1.29]);
  translate([68, 65, 0])
    cube([1, 1, 2.71]);
  translate([69, 65, 0])
    cube([1, 1, 0.94]);
  translate([70, 65, 0])
    cube([1, 1, 3.41]);
  translate([71, 65, 0])
    cube([1, 1, 0.98]);
  translate([72, 65, 0])
    cube([1, 1, 1.02]);
  translate([73, 65, 0])
    cube([1, 1, 0.71]);
  translate([74, 65, 0])
    cube([1, 1, 1.02]);
  translate([75, 65, 0])
    cube([1, 1, 1.14]);
  translate([76, 65, 0])
    cube([1, 1, 0.98]);
  translate([77, 65, 0])
    cube([1, 1, 1.06]);
  translate([78, 65, 0])
    cube([1, 1, 0.63]);
  translate([79, 65, 0])
    cube([1, 1, 0.35]);
  translate([80, 65, 0])
    cube([1, 1, 1.65]);
  translate([81, 65, 0])
    cube([1, 1, 2.31]);
  translate([82, 65, 0])
    cube([1, 1, 3.02]);
  translate([83, 65, 0])
    cube([1, 1, 3.53]);
  translate([84, 65, 0])
    cube([1, 1, 3.73]);
  translate([85, 65, 0])
    cube([1, 1, 2.16]);
  translate([86, 65, 0])
    cube([1, 1, 4.59]);
  translate([87, 65, 0])
    cube([1, 1, 5.92]);
  translate([88, 65, 0])
    cube([1, 1, 4.90]);
  translate([89, 65, 0])
    cube([1, 1, 0.59]);
  translate([90, 65, 0])
    cube([1, 1, 0.35]);
  translate([91, 65, 0])
    cube([1, 1, 1.92]);
  translate([92, 65, 0])
    cube([1, 1, 1.96]);
  translate([93, 65, 0])
    cube([1, 1, 2.63]);
  translate([94, 65, 0])
    cube([1, 1, 3.65]);
  translate([95, 65, 0])
    cube([1, 1, 4.20]);
  translate([96, 65, 0])
    cube([1, 1, 4.59]);
  translate([97, 65, 0])
    cube([1, 1, 4.90]);
  translate([98, 65, 0])
    cube([1, 1, 5.18]);
  translate([99, 65, 0])
    cube([1, 1, 5.14]);
  translate([100, 65, 0])
    cube([1, 1, 5.22]);
  translate([101, 65, 0])
    cube([1, 1, 5.41]);
  translate([102, 65, 0])
    cube([1, 1, 5.65]);
  translate([103, 65, 0])
    cube([1, 1, 5.73]);
  translate([104, 65, 0])
    cube([1, 1, 5.84]);
  translate([105, 65, 0])
    cube([1, 1, 5.88]);
  translate([106, 65, 0])
    cube([1, 1, 6.08]);
  translate([107, 65, 0])
    cube([1, 1, 6.20]);
  translate([108, 65, 0])
    cube([1, 1, 6.47]);
  translate([109, 65, 0])
    cube([1, 1, 6.59]);
  translate([110, 65, 0])
    cube([1, 1, 6.00]);
  translate([111, 65, 0])
    cube([1, 1, 5.88]);
  translate([112, 65, 0])
    cube([1, 1, 5.61]);
  translate([113, 65, 0])
    cube([1, 1, 5.14]);
  translate([114, 65, 0])
    cube([1, 1, 1.18]);
  translate([115, 65, 0])
    cube([1, 1, 1.25]);
  translate([116, 65, 0])
    cube([1, 1, 1.10]);
  translate([117, 65, 0])
    cube([1, 1, 1.33]);
  translate([118, 65, 0])
    cube([1, 1, 2.27]);
  translate([119, 65, 0])
    cube([1, 1, 1.88]);
  translate([120, 65, 0])
    cube([1, 1, 2.98]);
  translate([121, 65, 0])
    cube([1, 1, 1.37]);
  translate([122, 65, 0])
    cube([1, 1, 1.45]);
  translate([123, 65, 0])
    cube([1, 1, 1.53]);
  translate([124, 65, 0])
    cube([1, 1, 1.25]);
  translate([125, 65, 0])
    cube([1, 1, 1.25]);
  translate([126, 65, 0])
    cube([1, 1, 1.25]);
  translate([127, 65, 0])
    cube([1, 1, 1.33]);
  translate([128, 65, 0])
    cube([1, 1, 1.25]);
  translate([129, 65, 0])
    cube([1, 1, 1.25]);
  translate([130, 65, 0])
    cube([1, 1, 1.33]);
  translate([131, 65, 0])
    cube([1, 1, 1.25]);
  translate([132, 65, 0])
    cube([1, 1, 1.22]);
  translate([133, 65, 0])
    cube([1, 1, 1.25]);
  translate([134, 65, 0])
    cube([1, 1, 1.25]);
  translate([135, 65, 0])
    cube([1, 1, 1.25]);
  translate([136, 65, 0])
    cube([1, 1, 1.25]);
  translate([137, 65, 0])
    cube([1, 1, 1.25]);
  translate([138, 65, 0])
    cube([1, 1, 1.29]);
  translate([139, 65, 0])
    cube([1, 1, 1.29]);
  translate([140, 65, 0])
    cube([1, 1, 1.25]);
  translate([141, 65, 0])
    cube([1, 1, 1.25]);
  translate([142, 65, 0])
    cube([1, 1, 1.25]);
  translate([143, 65, 0])
    cube([1, 1, 1.29]);
  translate([144, 65, 0])
    cube([1, 1, 1.29]);
  translate([145, 65, 0])
    cube([1, 1, 1.29]);
  translate([146, 65, 0])
    cube([1, 1, 1.29]);
  translate([147, 65, 0])
    cube([1, 1, 1.29]);
  translate([148, 65, 0])
    cube([1, 1, 1.29]);
  translate([149, 65, 0])
    cube([1, 1, 1.29]);
  translate([150, 65, 0])
    cube([1, 1, 1.29]);
  translate([151, 65, 0])
    cube([1, 1, 1.29]);
  translate([152, 65, 0])
    cube([1, 1, 1.25]);
  translate([153, 65, 0])
    cube([1, 1, 1.29]);
  translate([154, 65, 0])
    cube([1, 1, 1.29]);
  translate([155, 65, 0])
    cube([1, 1, 1.29]);
  translate([156, 65, 0])
    cube([1, 1, 1.29]);
  translate([157, 65, 0])
    cube([1, 1, 1.25]);
  translate([158, 65, 0])
    cube([1, 1, 1.29]);
  translate([159, 65, 0])
    cube([1, 1, 1.29]);
  translate([160, 65, 0])
    cube([1, 1, 1.29]);
  translate([161, 65, 0])
    cube([1, 1, 1.29]);
  translate([162, 65, 0])
    cube([1, 1, 1.29]);
  translate([163, 65, 0])
    cube([1, 1, 1.29]);
  translate([164, 65, 0])
    cube([1, 1, 1.29]);
  translate([165, 65, 0])
    cube([1, 1, 1.29]);
  translate([166, 65, 0])
    cube([1, 1, 1.29]);
  translate([167, 65, 0])
    cube([1, 1, 1.29]);
  translate([168, 65, 0])
    cube([1, 1, 1.29]);
  translate([169, 65, 0])
    cube([1, 1, 1.29]);
  translate([170, 65, 0])
    cube([1, 1, 1.29]);
  translate([171, 65, 0])
    cube([1, 1, 1.29]);
  translate([172, 65, 0])
    cube([1, 1, 1.29]);
  translate([173, 65, 0])
    cube([1, 1, 1.29]);
  translate([174, 65, 0])
    cube([1, 1, 1.29]);
  translate([175, 65, 0])
    cube([1, 1, 1.29]);
  translate([176, 65, 0])
    cube([1, 1, 1.29]);
  translate([177, 65, 0])
    cube([1, 1, 1.29]);
  translate([178, 65, 0])
    cube([1, 1, 1.29]);
  translate([179, 65, 0])
    cube([1, 1, 1.29]);
  translate([180, 65, 0])
    cube([1, 1, 1.29]);
  translate([181, 65, 0])
    cube([1, 1, 1.25]);
  translate([182, 65, 0])
    cube([1, 1, 1.25]);
  translate([183, 65, 0])
    cube([1, 1, 1.25]);
  translate([184, 65, 0])
    cube([1, 1, 1.29]);
  translate([185, 65, 0])
    cube([1, 1, 1.25]);
  translate([186, 65, 0])
    cube([1, 1, 1.25]);
  translate([187, 65, 0])
    cube([1, 1, 1.29]);
  translate([188, 65, 0])
    cube([1, 1, 1.25]);
  translate([189, 65, 0])
    cube([1, 1, 1.25]);
  translate([190, 65, 0])
    cube([1, 1, 1.29]);
  translate([191, 65, 0])
    cube([1, 1, 1.29]);
  translate([192, 65, 0])
    cube([1, 1, 1.29]);
  translate([193, 65, 0])
    cube([1, 1, 1.25]);
  translate([194, 65, 0])
    cube([1, 1, 1.25]);
  translate([195, 65, 0])
    cube([1, 1, 1.25]);
  translate([196, 65, 0])
    cube([1, 1, 1.25]);
  translate([197, 65, 0])
    cube([1, 1, 1.33]);
  translate([198, 65, 0])
    cube([1, 1, 1.25]);
  translate([199, 65, 0])
    cube([1, 1, 1.22]);
  translate([200, 65, 0])
    cube([1, 1, 1.25]);
  translate([201, 65, 0])
    cube([1, 1, 1.25]);
  translate([202, 65, 0])
    cube([1, 1, 1.25]);
  translate([203, 65, 0])
    cube([1, 1, 1.25]);
  translate([204, 65, 0])
    cube([1, 1, 1.25]);
  translate([205, 65, 0])
    cube([1, 1, 1.29]);
  translate([206, 65, 0])
    cube([1, 1, 1.25]);
  translate([207, 65, 0])
    cube([1, 1, 1.25]);
  translate([208, 65, 0])
    cube([1, 1, 1.25]);
  translate([209, 65, 0])
    cube([1, 1, 1.25]);
  translate([210, 65, 0])
    cube([1, 1, 1.25]);
  translate([211, 65, 0])
    cube([1, 1, 1.25]);
  translate([212, 65, 0])
    cube([1, 1, 1.25]);
  translate([213, 65, 0])
    cube([1, 1, 1.25]);
  translate([214, 65, 0])
    cube([1, 1, 1.25]);
  translate([215, 65, 0])
    cube([1, 1, 1.25]);
  translate([216, 65, 0])
    cube([1, 1, 1.29]);
  translate([217, 65, 0])
    cube([1, 1, 1.25]);
  translate([218, 65, 0])
    cube([1, 1, 1.25]);
  translate([219, 65, 0])
    cube([1, 1, 1.25]);
  translate([220, 65, 0])
    cube([1, 1, 1.25]);
  translate([221, 65, 0])
    cube([1, 1, 1.25]);
  translate([222, 65, 0])
    cube([1, 1, 1.25]);
  translate([223, 65, 0])
    cube([1, 1, 1.25]);
  translate([224, 65, 0])
    cube([1, 1, 1.25]);
  translate([225, 65, 0])
    cube([1, 1, 1.25]);
  translate([226, 65, 0])
    cube([1, 1, 1.25]);
  translate([227, 65, 0])
    cube([1, 1, 1.25]);
  translate([228, 65, 0])
    cube([1, 1, 1.25]);
  translate([229, 65, 0])
    cube([1, 1, 1.25]);
  translate([230, 65, 0])
    cube([1, 1, 1.25]);
  translate([231, 65, 0])
    cube([1, 1, 1.25]);
  translate([232, 65, 0])
    cube([1, 1, 1.25]);
  translate([233, 65, 0])
    cube([1, 1, 1.25]);
  translate([234, 65, 0])
    cube([1, 1, 1.25]);
  translate([235, 65, 0])
    cube([1, 1, 1.25]);
  translate([236, 65, 0])
    cube([1, 1, 1.25]);
  translate([237, 65, 0])
    cube([1, 1, 1.25]);
  translate([238, 65, 0])
    cube([1, 1, 1.25]);
  translate([239, 65, 0])
    cube([1, 1, 1.25]);
  translate([240, 65, 0])
    cube([1, 1, 1.25]);
  translate([241, 65, 0])
    cube([1, 1, 1.25]);
  translate([242, 65, 0])
    cube([1, 1, 1.25]);
  translate([243, 65, 0])
    cube([1, 1, 1.25]);
  translate([244, 65, 0])
    cube([1, 1, 1.25]);
  translate([245, 65, 0])
    cube([1, 1, 1.25]);
  translate([246, 65, 0])
    cube([1, 1, 1.25]);
  translate([0, 66, 0])
    cube([1, 1, 1.41]);
  translate([1, 66, 0])
    cube([1, 1, 1.41]);
  translate([2, 66, 0])
    cube([1, 1, 1.41]);
  translate([3, 66, 0])
    cube([1, 1, 1.45]);
  translate([4, 66, 0])
    cube([1, 1, 1.41]);
  translate([5, 66, 0])
    cube([1, 1, 1.45]);
  translate([6, 66, 0])
    cube([1, 1, 1.41]);
  translate([7, 66, 0])
    cube([1, 1, 1.41]);
  translate([8, 66, 0])
    cube([1, 1, 1.45]);
  translate([9, 66, 0])
    cube([1, 1, 1.41]);
  translate([10, 66, 0])
    cube([1, 1, 1.41]);
  translate([11, 66, 0])
    cube([1, 1, 1.37]);
  translate([12, 66, 0])
    cube([1, 1, 1.41]);
  translate([13, 66, 0])
    cube([1, 1, 1.41]);
  translate([14, 66, 0])
    cube([1, 1, 1.41]);
  translate([15, 66, 0])
    cube([1, 1, 1.41]);
  translate([16, 66, 0])
    cube([1, 1, 1.41]);
  translate([17, 66, 0])
    cube([1, 1, 1.41]);
  translate([18, 66, 0])
    cube([1, 1, 1.41]);
  translate([19, 66, 0])
    cube([1, 1, 1.41]);
  translate([20, 66, 0])
    cube([1, 1, 1.25]);
  translate([21, 66, 0])
    cube([1, 1, 0.63]);
  translate([22, 66, 0])
    cube([1, 1, 0.90]);
  translate([23, 66, 0])
    cube([1, 1, 4.63]);
  translate([24, 66, 0])
    cube([1, 1, 1.10]);
  translate([25, 66, 0])
    cube([1, 1, 0.55]);
  translate([26, 66, 0])
    cube([1, 1, 0.78]);
  translate([27, 66, 0])
    cube([1, 1, 0.51]);
  translate([28, 66, 0])
    cube([1, 1, 5.22]);
  translate([29, 66, 0])
    cube([1, 1, 5.92]);
  translate([30, 66, 0])
    cube([1, 1, 4.94]);
  translate([31, 66, 0])
    cube([1, 1, 0.27]);
  translate([32, 66, 0])
    cube([1, 1, 0.90]);
  translate([33, 66, 0])
    cube([1, 1, 1.25]);
  translate([34, 66, 0])
    cube([1, 1, 0.71]);
  translate([35, 66, 0])
    cube([1, 1, 0.75]);
  translate([36, 66, 0])
    cube([1, 1, 0.78]);
  translate([37, 66, 0])
    cube([1, 1, 1.25]);
  translate([38, 66, 0])
    cube([1, 1, 1.37]);
  translate([39, 66, 0])
    cube([1, 1, 1.37]);
  translate([40, 66, 0])
    cube([1, 1, 1.37]);
  translate([41, 66, 0])
    cube([1, 1, 1.37]);
  translate([42, 66, 0])
    cube([1, 1, 1.37]);
  translate([43, 66, 0])
    cube([1, 1, 1.37]);
  translate([44, 66, 0])
    cube([1, 1, 1.37]);
  translate([45, 66, 0])
    cube([1, 1, 1.37]);
  translate([46, 66, 0])
    cube([1, 1, 1.37]);
  translate([47, 66, 0])
    cube([1, 1, 1.37]);
  translate([48, 66, 0])
    cube([1, 1, 1.37]);
  translate([49, 66, 0])
    cube([1, 1, 1.37]);
  translate([50, 66, 0])
    cube([1, 1, 1.37]);
  translate([51, 66, 0])
    cube([1, 1, 1.37]);
  translate([52, 66, 0])
    cube([1, 1, 1.33]);
  translate([53, 66, 0])
    cube([1, 1, 1.33]);
  translate([54, 66, 0])
    cube([1, 1, 1.33]);
  translate([55, 66, 0])
    cube([1, 1, 1.33]);
  translate([56, 66, 0])
    cube([1, 1, 1.33]);
  translate([57, 66, 0])
    cube([1, 1, 1.33]);
  translate([58, 66, 0])
    cube([1, 1, 1.33]);
  translate([59, 66, 0])
    cube([1, 1, 1.33]);
  translate([60, 66, 0])
    cube([1, 1, 1.33]);
  translate([61, 66, 0])
    cube([1, 1, 1.33]);
  translate([62, 66, 0])
    cube([1, 1, 1.33]);
  translate([63, 66, 0])
    cube([1, 1, 1.33]);
  translate([64, 66, 0])
    cube([1, 1, 1.33]);
  translate([65, 66, 0])
    cube([1, 1, 1.33]);
  translate([66, 66, 0])
    cube([1, 1, 1.33]);
  translate([67, 66, 0])
    cube([1, 1, 1.14]);
  translate([68, 66, 0])
    cube([1, 1, 5.45]);
  translate([69, 66, 0])
    cube([1, 1, 0.59]);
  translate([70, 66, 0])
    cube([1, 1, 1.61]);
  translate([71, 66, 0])
    cube([1, 1, 1.29]);
  translate([72, 66, 0])
    cube([1, 1, 1.02]);
  translate([73, 66, 0])
    cube([1, 1, 0.86]);
  translate([74, 66, 0])
    cube([1, 1, 1.18]);
  translate([75, 66, 0])
    cube([1, 1, 0.86]);
  translate([76, 66, 0])
    cube([1, 1, 0.98]);
  translate([77, 66, 0])
    cube([1, 1, 0.71]);
  translate([78, 66, 0])
    cube([1, 1, 0.31]);
  translate([79, 66, 0])
    cube([1, 1, 0.24]);
  translate([80, 66, 0])
    cube([1, 1, 1.49]);
  translate([81, 66, 0])
    cube([1, 1, 1.61]);
  translate([82, 66, 0])
    cube([1, 1, 2.04]);
  translate([83, 66, 0])
    cube([1, 1, 2.71]);
  translate([84, 66, 0])
    cube([1, 1, 2.55]);
  translate([85, 66, 0])
    cube([1, 1, 2.00]);
  translate([86, 66, 0])
    cube([1, 1, 2.08]);
  translate([87, 66, 0])
    cube([1, 1, 4.67]);
  translate([88, 66, 0])
    cube([1, 1, 4.31]);
  translate([89, 66, 0])
    cube([1, 1, 3.06]);
  translate([90, 66, 0])
    cube([1, 1, 1.88]);
  translate([91, 66, 0])
    cube([1, 1, 1.06]);
  translate([92, 66, 0])
    cube([1, 1, 1.14]);
  translate([93, 66, 0])
    cube([1, 1, 1.84]);
  translate([94, 66, 0])
    cube([1, 1, 3.25]);
  translate([95, 66, 0])
    cube([1, 1, 3.92]);
  translate([96, 66, 0])
    cube([1, 1, 4.20]);
  translate([97, 66, 0])
    cube([1, 1, 4.59]);
  translate([98, 66, 0])
    cube([1, 1, 4.86]);
  translate([99, 66, 0])
    cube([1, 1, 4.75]);
  translate([100, 66, 0])
    cube([1, 1, 4.78]);
  translate([101, 66, 0])
    cube([1, 1, 5.14]);
  translate([102, 66, 0])
    cube([1, 1, 5.29]);
  translate([103, 66, 0])
    cube([1, 1, 5.61]);
  translate([104, 66, 0])
    cube([1, 1, 5.65]);
  translate([105, 66, 0])
    cube([1, 1, 6.20]);
  translate([106, 66, 0])
    cube([1, 1, 6.35]);
  translate([107, 66, 0])
    cube([1, 1, 5.80]);
  translate([108, 66, 0])
    cube([1, 1, 6.86]);
  translate([109, 66, 0])
    cube([1, 1, 7.29]);
  translate([110, 66, 0])
    cube([1, 1, 5.88]);
  translate([111, 66, 0])
    cube([1, 1, 5.80]);
  translate([112, 66, 0])
    cube([1, 1, 5.10]);
  translate([113, 66, 0])
    cube([1, 1, 4.67]);
  translate([114, 66, 0])
    cube([1, 1, 1.96]);
  translate([115, 66, 0])
    cube([1, 1, 1.25]);
  translate([116, 66, 0])
    cube([1, 1, 1.18]);
  translate([117, 66, 0])
    cube([1, 1, 1.84]);
  translate([118, 66, 0])
    cube([1, 1, 2.00]);
  translate([119, 66, 0])
    cube([1, 1, 1.73]);
  translate([120, 66, 0])
    cube([1, 1, 2.94]);
  translate([121, 66, 0])
    cube([1, 1, 1.57]);
  translate([122, 66, 0])
    cube([1, 1, 1.61]);
  translate([123, 66, 0])
    cube([1, 1, 1.22]);
  translate([124, 66, 0])
    cube([1, 1, 1.22]);
  translate([125, 66, 0])
    cube([1, 1, 1.29]);
  translate([126, 66, 0])
    cube([1, 1, 1.25]);
  translate([127, 66, 0])
    cube([1, 1, 1.25]);
  translate([128, 66, 0])
    cube([1, 1, 1.25]);
  translate([129, 66, 0])
    cube([1, 1, 1.25]);
  translate([130, 66, 0])
    cube([1, 1, 1.25]);
  translate([131, 66, 0])
    cube([1, 1, 1.25]);
  translate([132, 66, 0])
    cube([1, 1, 1.25]);
  translate([133, 66, 0])
    cube([1, 1, 1.25]);
  translate([134, 66, 0])
    cube([1, 1, 1.29]);
  translate([135, 66, 0])
    cube([1, 1, 1.29]);
  translate([136, 66, 0])
    cube([1, 1, 1.29]);
  translate([137, 66, 0])
    cube([1, 1, 1.29]);
  translate([138, 66, 0])
    cube([1, 1, 1.29]);
  translate([139, 66, 0])
    cube([1, 1, 1.25]);
  translate([140, 66, 0])
    cube([1, 1, 1.29]);
  translate([141, 66, 0])
    cube([1, 1, 1.29]);
  translate([142, 66, 0])
    cube([1, 1, 1.29]);
  translate([143, 66, 0])
    cube([1, 1, 1.29]);
  translate([144, 66, 0])
    cube([1, 1, 1.29]);
  translate([145, 66, 0])
    cube([1, 1, 1.29]);
  translate([146, 66, 0])
    cube([1, 1, 1.29]);
  translate([147, 66, 0])
    cube([1, 1, 1.29]);
  translate([148, 66, 0])
    cube([1, 1, 1.29]);
  translate([149, 66, 0])
    cube([1, 1, 1.29]);
  translate([150, 66, 0])
    cube([1, 1, 1.29]);
  translate([151, 66, 0])
    cube([1, 1, 1.29]);
  translate([152, 66, 0])
    cube([1, 1, 1.29]);
  translate([153, 66, 0])
    cube([1, 1, 1.25]);
  translate([154, 66, 0])
    cube([1, 1, 1.25]);
  translate([155, 66, 0])
    cube([1, 1, 1.29]);
  translate([156, 66, 0])
    cube([1, 1, 1.29]);
  translate([157, 66, 0])
    cube([1, 1, 1.29]);
  translate([158, 66, 0])
    cube([1, 1, 1.29]);
  translate([159, 66, 0])
    cube([1, 1, 1.29]);
  translate([160, 66, 0])
    cube([1, 1, 1.29]);
  translate([161, 66, 0])
    cube([1, 1, 1.25]);
  translate([162, 66, 0])
    cube([1, 1, 1.33]);
  translate([163, 66, 0])
    cube([1, 1, 1.29]);
  translate([164, 66, 0])
    cube([1, 1, 1.29]);
  translate([165, 66, 0])
    cube([1, 1, 1.29]);
  translate([166, 66, 0])
    cube([1, 1, 1.29]);
  translate([167, 66, 0])
    cube([1, 1, 1.29]);
  translate([168, 66, 0])
    cube([1, 1, 1.29]);
  translate([169, 66, 0])
    cube([1, 1, 1.29]);
  translate([170, 66, 0])
    cube([1, 1, 1.29]);
  translate([171, 66, 0])
    cube([1, 1, 1.29]);
  translate([172, 66, 0])
    cube([1, 1, 1.29]);
  translate([173, 66, 0])
    cube([1, 1, 1.29]);
  translate([174, 66, 0])
    cube([1, 1, 1.29]);
  translate([175, 66, 0])
    cube([1, 1, 1.29]);
  translate([176, 66, 0])
    cube([1, 1, 1.29]);
  translate([177, 66, 0])
    cube([1, 1, 1.29]);
  translate([178, 66, 0])
    cube([1, 1, 1.29]);
  translate([179, 66, 0])
    cube([1, 1, 1.29]);
  translate([180, 66, 0])
    cube([1, 1, 1.29]);
  translate([181, 66, 0])
    cube([1, 1, 1.29]);
  translate([182, 66, 0])
    cube([1, 1, 1.29]);
  translate([183, 66, 0])
    cube([1, 1, 1.29]);
  translate([184, 66, 0])
    cube([1, 1, 1.29]);
  translate([185, 66, 0])
    cube([1, 1, 1.29]);
  translate([186, 66, 0])
    cube([1, 1, 1.29]);
  translate([187, 66, 0])
    cube([1, 1, 1.29]);
  translate([188, 66, 0])
    cube([1, 1, 1.29]);
  translate([189, 66, 0])
    cube([1, 1, 1.29]);
  translate([190, 66, 0])
    cube([1, 1, 1.25]);
  translate([191, 66, 0])
    cube([1, 1, 1.29]);
  translate([192, 66, 0])
    cube([1, 1, 1.29]);
  translate([193, 66, 0])
    cube([1, 1, 1.25]);
  translate([194, 66, 0])
    cube([1, 1, 1.25]);
  translate([195, 66, 0])
    cube([1, 1, 1.25]);
  translate([196, 66, 0])
    cube([1, 1, 1.25]);
  translate([197, 66, 0])
    cube([1, 1, 1.25]);
  translate([198, 66, 0])
    cube([1, 1, 1.22]);
  translate([199, 66, 0])
    cube([1, 1, 1.29]);
  translate([200, 66, 0])
    cube([1, 1, 1.25]);
  translate([201, 66, 0])
    cube([1, 1, 1.25]);
  translate([202, 66, 0])
    cube([1, 1, 1.25]);
  translate([203, 66, 0])
    cube([1, 1, 1.25]);
  translate([204, 66, 0])
    cube([1, 1, 1.25]);
  translate([205, 66, 0])
    cube([1, 1, 1.25]);
  translate([206, 66, 0])
    cube([1, 1, 1.25]);
  translate([207, 66, 0])
    cube([1, 1, 1.25]);
  translate([208, 66, 0])
    cube([1, 1, 1.25]);
  translate([209, 66, 0])
    cube([1, 1, 1.25]);
  translate([210, 66, 0])
    cube([1, 1, 1.25]);
  translate([211, 66, 0])
    cube([1, 1, 1.25]);
  translate([212, 66, 0])
    cube([1, 1, 1.25]);
  translate([213, 66, 0])
    cube([1, 1, 1.25]);
  translate([214, 66, 0])
    cube([1, 1, 1.25]);
  translate([215, 66, 0])
    cube([1, 1, 1.25]);
  translate([216, 66, 0])
    cube([1, 1, 1.25]);
  translate([217, 66, 0])
    cube([1, 1, 1.25]);
  translate([218, 66, 0])
    cube([1, 1, 1.25]);
  translate([219, 66, 0])
    cube([1, 1, 1.25]);
  translate([220, 66, 0])
    cube([1, 1, 1.25]);
  translate([221, 66, 0])
    cube([1, 1, 1.25]);
  translate([222, 66, 0])
    cube([1, 1, 1.25]);
  translate([223, 66, 0])
    cube([1, 1, 1.25]);
  translate([224, 66, 0])
    cube([1, 1, 1.25]);
  translate([225, 66, 0])
    cube([1, 1, 1.25]);
  translate([226, 66, 0])
    cube([1, 1, 1.25]);
  translate([227, 66, 0])
    cube([1, 1, 1.25]);
  translate([228, 66, 0])
    cube([1, 1, 1.25]);
  translate([229, 66, 0])
    cube([1, 1, 1.25]);
  translate([230, 66, 0])
    cube([1, 1, 1.25]);
  translate([231, 66, 0])
    cube([1, 1, 1.25]);
  translate([232, 66, 0])
    cube([1, 1, 1.25]);
  translate([233, 66, 0])
    cube([1, 1, 1.25]);
  translate([234, 66, 0])
    cube([1, 1, 1.25]);
  translate([235, 66, 0])
    cube([1, 1, 1.25]);
  translate([236, 66, 0])
    cube([1, 1, 1.25]);
  translate([237, 66, 0])
    cube([1, 1, 1.25]);
  translate([238, 66, 0])
    cube([1, 1, 1.25]);
  translate([239, 66, 0])
    cube([1, 1, 1.25]);
  translate([240, 66, 0])
    cube([1, 1, 1.25]);
  translate([241, 66, 0])
    cube([1, 1, 1.25]);
  translate([242, 66, 0])
    cube([1, 1, 1.25]);
  translate([243, 66, 0])
    cube([1, 1, 1.25]);
  translate([244, 66, 0])
    cube([1, 1, 1.25]);
  translate([245, 66, 0])
    cube([1, 1, 1.25]);
  translate([246, 66, 0])
    cube([1, 1, 1.25]);
  translate([0, 67, 0])
    cube([1, 1, 1.41]);
  translate([1, 67, 0])
    cube([1, 1, 1.41]);
  translate([2, 67, 0])
    cube([1, 1, 1.41]);
  translate([3, 67, 0])
    cube([1, 1, 1.45]);
  translate([4, 67, 0])
    cube([1, 1, 1.41]);
  translate([5, 67, 0])
    cube([1, 1, 1.45]);
  translate([6, 67, 0])
    cube([1, 1, 1.41]);
  translate([7, 67, 0])
    cube([1, 1, 1.41]);
  translate([8, 67, 0])
    cube([1, 1, 1.45]);
  translate([9, 67, 0])
    cube([1, 1, 1.41]);
  translate([10, 67, 0])
    cube([1, 1, 1.41]);
  translate([11, 67, 0])
    cube([1, 1, 1.37]);
  translate([12, 67, 0])
    cube([1, 1, 1.41]);
  translate([13, 67, 0])
    cube([1, 1, 1.41]);
  translate([14, 67, 0])
    cube([1, 1, 1.41]);
  translate([15, 67, 0])
    cube([1, 1, 1.41]);
  translate([16, 67, 0])
    cube([1, 1, 1.41]);
  translate([17, 67, 0])
    cube([1, 1, 1.41]);
  translate([18, 67, 0])
    cube([1, 1, 1.41]);
  translate([19, 67, 0])
    cube([1, 1, 1.41]);
  translate([20, 67, 0])
    cube([1, 1, 1.41]);
  translate([21, 67, 0])
    cube([1, 1, 1.80]);
  translate([22, 67, 0])
    cube([1, 1, 0.20]);
  translate([23, 67, 0])
    cube([1, 1, 2.86]);
  translate([24, 67, 0])
    cube([1, 1, 1.45]);
  translate([25, 67, 0])
    cube([1, 1, 0.47]);
  translate([26, 67, 0])
    cube([1, 1, 0.47]);
  translate([27, 67, 0])
    cube([1, 1, 0.63]);
  translate([28, 67, 0])
    cube([1, 1, 4.94]);
  translate([29, 67, 0])
    cube([1, 1, 5.45]);
  translate([30, 67, 0])
    cube([1, 1, 6.78]);
  translate([31, 67, 0])
    cube([1, 1, 0.63]);
  translate([32, 67, 0])
    cube([1, 1, 0.86]);
  translate([33, 67, 0])
    cube([1, 1, 1.33]);
  translate([34, 67, 0])
    cube([1, 1, 0.67]);
  translate([35, 67, 0])
    cube([1, 1, 0.75]);
  translate([36, 67, 0])
    cube([1, 1, 0.75]);
  translate([37, 67, 0])
    cube([1, 1, 0.86]);
  translate([38, 67, 0])
    cube([1, 1, 1.37]);
  translate([39, 67, 0])
    cube([1, 1, 1.37]);
  translate([40, 67, 0])
    cube([1, 1, 1.37]);
  translate([41, 67, 0])
    cube([1, 1, 1.37]);
  translate([42, 67, 0])
    cube([1, 1, 1.37]);
  translate([43, 67, 0])
    cube([1, 1, 1.37]);
  translate([44, 67, 0])
    cube([1, 1, 1.37]);
  translate([45, 67, 0])
    cube([1, 1, 1.37]);
  translate([46, 67, 0])
    cube([1, 1, 1.37]);
  translate([47, 67, 0])
    cube([1, 1, 1.37]);
  translate([48, 67, 0])
    cube([1, 1, 1.37]);
  translate([49, 67, 0])
    cube([1, 1, 1.37]);
  translate([50, 67, 0])
    cube([1, 1, 1.37]);
  translate([51, 67, 0])
    cube([1, 1, 1.37]);
  translate([52, 67, 0])
    cube([1, 1, 1.33]);
  translate([53, 67, 0])
    cube([1, 1, 1.33]);
  translate([54, 67, 0])
    cube([1, 1, 1.33]);
  translate([55, 67, 0])
    cube([1, 1, 1.33]);
  translate([56, 67, 0])
    cube([1, 1, 1.33]);
  translate([57, 67, 0])
    cube([1, 1, 1.33]);
  translate([58, 67, 0])
    cube([1, 1, 1.33]);
  translate([59, 67, 0])
    cube([1, 1, 1.33]);
  translate([60, 67, 0])
    cube([1, 1, 1.33]);
  translate([61, 67, 0])
    cube([1, 1, 1.33]);
  translate([62, 67, 0])
    cube([1, 1, 1.33]);
  translate([63, 67, 0])
    cube([1, 1, 1.33]);
  translate([64, 67, 0])
    cube([1, 1, 1.33]);
  translate([65, 67, 0])
    cube([1, 1, 1.33]);
  translate([66, 67, 0])
    cube([1, 1, 1.33]);
  translate([67, 67, 0])
    cube([1, 1, 0.90]);
  translate([68, 67, 0])
    cube([1, 1, 6.24]);
  translate([69, 67, 0])
    cube([1, 1, 6.20]);
  translate([70, 67, 0])
    cube([1, 1, 1.06]);
  translate([71, 67, 0])
    cube([1, 1, 1.41]);
  translate([72, 67, 0])
    cube([1, 1, 1.14]);
  translate([73, 67, 0])
    cube([1, 1, 1.25]);
  translate([74, 67, 0])
    cube([1, 1, 1.25]);
  translate([75, 67, 0])
    cube([1, 1, 1.14]);
  translate([76, 67, 0])
    cube([1, 1, 1.06]);
  translate([77, 67, 0])
    cube([1, 1, 0.82]);
  translate([78, 67, 0])
    cube([1, 1, 0.39]);
  translate([79, 67, 0])
    cube([1, 1, 1.10]);
  translate([80, 67, 0])
    cube([1, 1, 1.18]);
  translate([81, 67, 0])
    cube([1, 1, 1.29]);
  translate([82, 67, 0])
    cube([1, 1, 1.53]);
  translate([83, 67, 0])
    cube([1, 1, 1.61]);
  translate([84, 67, 0])
    cube([1, 1, 1.76]);
  translate([85, 67, 0])
    cube([1, 1, 1.76]);
  translate([86, 67, 0])
    cube([1, 1, 1.37]);
  translate([87, 67, 0])
    cube([1, 1, 1.88]);
  translate([88, 67, 0])
    cube([1, 1, 3.84]);
  translate([89, 67, 0])
    cube([1, 1, 5.41]);
  translate([90, 67, 0])
    cube([1, 1, 1.53]);
  translate([91, 67, 0])
    cube([1, 1, 0.78]);
  translate([92, 67, 0])
    cube([1, 1, 2.27]);
  translate([93, 67, 0])
    cube([1, 1, 1.96]);
  translate([94, 67, 0])
    cube([1, 1, 3.41]);
  translate([95, 67, 0])
    cube([1, 1, 3.57]);
  translate([96, 67, 0])
    cube([1, 1, 4.12]);
  translate([97, 67, 0])
    cube([1, 1, 4.24]);
  translate([98, 67, 0])
    cube([1, 1, 4.51]);
  translate([99, 67, 0])
    cube([1, 1, 4.04]);
  translate([100, 67, 0])
    cube([1, 1, 3.96]);
  translate([101, 67, 0])
    cube([1, 1, 3.76]);
  translate([102, 67, 0])
    cube([1, 1, 3.96]);
  translate([103, 67, 0])
    cube([1, 1, 3.88]);
  translate([104, 67, 0])
    cube([1, 1, 4.04]);
  translate([105, 67, 0])
    cube([1, 1, 4.20]);
  translate([106, 67, 0])
    cube([1, 1, 4.63]);
  translate([107, 67, 0])
    cube([1, 1, 4.86]);
  translate([108, 67, 0])
    cube([1, 1, 4.86]);
  translate([109, 67, 0])
    cube([1, 1, 6.59]);
  translate([110, 67, 0])
    cube([1, 1, 5.29]);
  translate([111, 67, 0])
    cube([1, 1, 5.45]);
  translate([112, 67, 0])
    cube([1, 1, 5.61]);
  translate([113, 67, 0])
    cube([1, 1, 1.14]);
  translate([114, 67, 0])
    cube([1, 1, 1.37]);
  translate([115, 67, 0])
    cube([1, 1, 1.25]);
  translate([116, 67, 0])
    cube([1, 1, 1.33]);
  translate([117, 67, 0])
    cube([1, 1, 2.12]);
  translate([118, 67, 0])
    cube([1, 1, 1.57]);
  translate([119, 67, 0])
    cube([1, 1, 1.80]);
  translate([120, 67, 0])
    cube([1, 1, 2.24]);
  translate([121, 67, 0])
    cube([1, 1, 0.98]);
  translate([122, 67, 0])
    cube([1, 1, 2.39]);
  translate([123, 67, 0])
    cube([1, 1, 1.25]);
  translate([124, 67, 0])
    cube([1, 1, 1.25]);
  translate([125, 67, 0])
    cube([1, 1, 1.33]);
  translate([126, 67, 0])
    cube([1, 1, 1.25]);
  translate([127, 67, 0])
    cube([1, 1, 1.25]);
  translate([128, 67, 0])
    cube([1, 1, 1.25]);
  translate([129, 67, 0])
    cube([1, 1, 1.25]);
  translate([130, 67, 0])
    cube([1, 1, 1.25]);
  translate([131, 67, 0])
    cube([1, 1, 1.25]);
  translate([132, 67, 0])
    cube([1, 1, 1.25]);
  translate([133, 67, 0])
    cube([1, 1, 1.25]);
  translate([134, 67, 0])
    cube([1, 1, 1.29]);
  translate([135, 67, 0])
    cube([1, 1, 1.29]);
  translate([136, 67, 0])
    cube([1, 1, 1.29]);
  translate([137, 67, 0])
    cube([1, 1, 1.29]);
  translate([138, 67, 0])
    cube([1, 1, 1.29]);
  translate([139, 67, 0])
    cube([1, 1, 1.25]);
  translate([140, 67, 0])
    cube([1, 1, 1.29]);
  translate([141, 67, 0])
    cube([1, 1, 1.29]);
  translate([142, 67, 0])
    cube([1, 1, 1.29]);
  translate([143, 67, 0])
    cube([1, 1, 1.29]);
  translate([144, 67, 0])
    cube([1, 1, 1.29]);
  translate([145, 67, 0])
    cube([1, 1, 1.29]);
  translate([146, 67, 0])
    cube([1, 1, 1.29]);
  translate([147, 67, 0])
    cube([1, 1, 1.29]);
  translate([148, 67, 0])
    cube([1, 1, 1.29]);
  translate([149, 67, 0])
    cube([1, 1, 1.29]);
  translate([150, 67, 0])
    cube([1, 1, 1.29]);
  translate([151, 67, 0])
    cube([1, 1, 1.29]);
  translate([152, 67, 0])
    cube([1, 1, 1.29]);
  translate([153, 67, 0])
    cube([1, 1, 1.25]);
  translate([154, 67, 0])
    cube([1, 1, 1.25]);
  translate([155, 67, 0])
    cube([1, 1, 1.29]);
  translate([156, 67, 0])
    cube([1, 1, 1.29]);
  translate([157, 67, 0])
    cube([1, 1, 1.29]);
  translate([158, 67, 0])
    cube([1, 1, 1.29]);
  translate([159, 67, 0])
    cube([1, 1, 1.29]);
  translate([160, 67, 0])
    cube([1, 1, 1.29]);
  translate([161, 67, 0])
    cube([1, 1, 1.25]);
  translate([162, 67, 0])
    cube([1, 1, 1.33]);
  translate([163, 67, 0])
    cube([1, 1, 1.29]);
  translate([164, 67, 0])
    cube([1, 1, 1.29]);
  translate([165, 67, 0])
    cube([1, 1, 1.29]);
  translate([166, 67, 0])
    cube([1, 1, 1.29]);
  translate([167, 67, 0])
    cube([1, 1, 1.29]);
  translate([168, 67, 0])
    cube([1, 1, 1.29]);
  translate([169, 67, 0])
    cube([1, 1, 1.29]);
  translate([170, 67, 0])
    cube([1, 1, 1.29]);
  translate([171, 67, 0])
    cube([1, 1, 1.29]);
  translate([172, 67, 0])
    cube([1, 1, 1.29]);
  translate([173, 67, 0])
    cube([1, 1, 1.29]);
  translate([174, 67, 0])
    cube([1, 1, 1.29]);
  translate([175, 67, 0])
    cube([1, 1, 1.29]);
  translate([176, 67, 0])
    cube([1, 1, 1.29]);
  translate([177, 67, 0])
    cube([1, 1, 1.29]);
  translate([178, 67, 0])
    cube([1, 1, 1.29]);
  translate([179, 67, 0])
    cube([1, 1, 1.29]);
  translate([180, 67, 0])
    cube([1, 1, 1.29]);
  translate([181, 67, 0])
    cube([1, 1, 1.29]);
  translate([182, 67, 0])
    cube([1, 1, 1.29]);
  translate([183, 67, 0])
    cube([1, 1, 1.29]);
  translate([184, 67, 0])
    cube([1, 1, 1.29]);
  translate([185, 67, 0])
    cube([1, 1, 1.29]);
  translate([186, 67, 0])
    cube([1, 1, 1.29]);
  translate([187, 67, 0])
    cube([1, 1, 1.29]);
  translate([188, 67, 0])
    cube([1, 1, 1.29]);
  translate([189, 67, 0])
    cube([1, 1, 1.29]);
  translate([190, 67, 0])
    cube([1, 1, 1.25]);
  translate([191, 67, 0])
    cube([1, 1, 1.29]);
  translate([192, 67, 0])
    cube([1, 1, 1.29]);
  translate([193, 67, 0])
    cube([1, 1, 1.25]);
  translate([194, 67, 0])
    cube([1, 1, 1.25]);
  translate([195, 67, 0])
    cube([1, 1, 1.25]);
  translate([196, 67, 0])
    cube([1, 1, 1.25]);
  translate([197, 67, 0])
    cube([1, 1, 1.25]);
  translate([198, 67, 0])
    cube([1, 1, 1.25]);
  translate([199, 67, 0])
    cube([1, 1, 1.25]);
  translate([200, 67, 0])
    cube([1, 1, 1.25]);
  translate([201, 67, 0])
    cube([1, 1, 1.25]);
  translate([202, 67, 0])
    cube([1, 1, 1.25]);
  translate([203, 67, 0])
    cube([1, 1, 1.25]);
  translate([204, 67, 0])
    cube([1, 1, 1.25]);
  translate([205, 67, 0])
    cube([1, 1, 1.25]);
  translate([206, 67, 0])
    cube([1, 1, 1.25]);
  translate([207, 67, 0])
    cube([1, 1, 1.25]);
  translate([208, 67, 0])
    cube([1, 1, 1.25]);
  translate([209, 67, 0])
    cube([1, 1, 1.25]);
  translate([210, 67, 0])
    cube([1, 1, 1.25]);
  translate([211, 67, 0])
    cube([1, 1, 1.25]);
  translate([212, 67, 0])
    cube([1, 1, 1.25]);
  translate([213, 67, 0])
    cube([1, 1, 1.25]);
  translate([214, 67, 0])
    cube([1, 1, 1.25]);
  translate([215, 67, 0])
    cube([1, 1, 1.25]);
  translate([216, 67, 0])
    cube([1, 1, 1.25]);
  translate([217, 67, 0])
    cube([1, 1, 1.25]);
  translate([218, 67, 0])
    cube([1, 1, 1.25]);
  translate([219, 67, 0])
    cube([1, 1, 1.25]);
  translate([220, 67, 0])
    cube([1, 1, 1.25]);
  translate([221, 67, 0])
    cube([1, 1, 1.25]);
  translate([222, 67, 0])
    cube([1, 1, 1.25]);
  translate([223, 67, 0])
    cube([1, 1, 1.25]);
  translate([224, 67, 0])
    cube([1, 1, 1.25]);
  translate([225, 67, 0])
    cube([1, 1, 1.25]);
  translate([226, 67, 0])
    cube([1, 1, 1.25]);
  translate([227, 67, 0])
    cube([1, 1, 1.25]);
  translate([228, 67, 0])
    cube([1, 1, 1.25]);
  translate([229, 67, 0])
    cube([1, 1, 1.25]);
  translate([230, 67, 0])
    cube([1, 1, 1.25]);
  translate([231, 67, 0])
    cube([1, 1, 1.25]);
  translate([232, 67, 0])
    cube([1, 1, 1.25]);
  translate([233, 67, 0])
    cube([1, 1, 1.25]);
  translate([234, 67, 0])
    cube([1, 1, 1.25]);
  translate([235, 67, 0])
    cube([1, 1, 1.25]);
  translate([236, 67, 0])
    cube([1, 1, 1.25]);
  translate([237, 67, 0])
    cube([1, 1, 1.25]);
  translate([238, 67, 0])
    cube([1, 1, 1.25]);
  translate([239, 67, 0])
    cube([1, 1, 1.25]);
  translate([240, 67, 0])
    cube([1, 1, 1.25]);
  translate([241, 67, 0])
    cube([1, 1, 1.25]);
  translate([242, 67, 0])
    cube([1, 1, 1.25]);
  translate([243, 67, 0])
    cube([1, 1, 1.25]);
  translate([244, 67, 0])
    cube([1, 1, 1.25]);
  translate([245, 67, 0])
    cube([1, 1, 1.25]);
  translate([246, 67, 0])
    cube([1, 1, 1.25]);
  translate([0, 68, 0])
    cube([1, 1, 1.41]);
  translate([1, 68, 0])
    cube([1, 1, 1.41]);
  translate([2, 68, 0])
    cube([1, 1, 1.41]);
  translate([3, 68, 0])
    cube([1, 1, 1.45]);
  translate([4, 68, 0])
    cube([1, 1, 1.41]);
  translate([5, 68, 0])
    cube([1, 1, 1.41]);
  translate([6, 68, 0])
    cube([1, 1, 1.41]);
  translate([7, 68, 0])
    cube([1, 1, 1.41]);
  translate([8, 68, 0])
    cube([1, 1, 1.41]);
  translate([9, 68, 0])
    cube([1, 1, 1.41]);
  translate([10, 68, 0])
    cube([1, 1, 1.41]);
  translate([11, 68, 0])
    cube([1, 1, 1.45]);
  translate([12, 68, 0])
    cube([1, 1, 1.45]);
  translate([13, 68, 0])
    cube([1, 1, 1.45]);
  translate([14, 68, 0])
    cube([1, 1, 1.41]);
  translate([15, 68, 0])
    cube([1, 1, 1.41]);
  translate([16, 68, 0])
    cube([1, 1, 1.41]);
  translate([17, 68, 0])
    cube([1, 1, 1.41]);
  translate([18, 68, 0])
    cube([1, 1, 1.41]);
  translate([19, 68, 0])
    cube([1, 1, 1.41]);
  translate([20, 68, 0])
    cube([1, 1, 1.49]);
  translate([21, 68, 0])
    cube([1, 1, 1.37]);
  translate([22, 68, 0])
    cube([1, 1, 1.10]);
  translate([23, 68, 0])
    cube([1, 1, 0.94]);
  translate([24, 68, 0])
    cube([1, 1, 1.96]);
  translate([25, 68, 0])
    cube([1, 1, 0.90]);
  translate([26, 68, 0])
    cube([1, 1, 0.35]);
  translate([27, 68, 0])
    cube([1, 1, 0.86]);
  translate([28, 68, 0])
    cube([1, 1, 4.12]);
  translate([29, 68, 0])
    cube([1, 1, 5.88]);
  translate([30, 68, 0])
    cube([1, 1, 6.39]);
  translate([31, 68, 0])
    cube([1, 1, 0.47]);
  translate([32, 68, 0])
    cube([1, 1, 0.67]);
  translate([33, 68, 0])
    cube([1, 1, 1.45]);
  translate([34, 68, 0])
    cube([1, 1, 0.63]);
  translate([35, 68, 0])
    cube([1, 1, 0.71]);
  translate([36, 68, 0])
    cube([1, 1, 0.78]);
  translate([37, 68, 0])
    cube([1, 1, 0.86]);
  translate([38, 68, 0])
    cube([1, 1, 1.25]);
  translate([39, 68, 0])
    cube([1, 1, 1.37]);
  translate([40, 68, 0])
    cube([1, 1, 1.37]);
  translate([41, 68, 0])
    cube([1, 1, 1.37]);
  translate([42, 68, 0])
    cube([1, 1, 1.37]);
  translate([43, 68, 0])
    cube([1, 1, 1.37]);
  translate([44, 68, 0])
    cube([1, 1, 1.37]);
  translate([45, 68, 0])
    cube([1, 1, 1.37]);
  translate([46, 68, 0])
    cube([1, 1, 1.33]);
  translate([47, 68, 0])
    cube([1, 1, 1.33]);
  translate([48, 68, 0])
    cube([1, 1, 1.37]);
  translate([49, 68, 0])
    cube([1, 1, 1.37]);
  translate([50, 68, 0])
    cube([1, 1, 1.37]);
  translate([51, 68, 0])
    cube([1, 1, 1.37]);
  translate([52, 68, 0])
    cube([1, 1, 1.33]);
  translate([53, 68, 0])
    cube([1, 1, 1.33]);
  translate([54, 68, 0])
    cube([1, 1, 1.37]);
  translate([55, 68, 0])
    cube([1, 1, 1.37]);
  translate([56, 68, 0])
    cube([1, 1, 1.33]);
  translate([57, 68, 0])
    cube([1, 1, 1.33]);
  translate([58, 68, 0])
    cube([1, 1, 1.33]);
  translate([59, 68, 0])
    cube([1, 1, 1.33]);
  translate([60, 68, 0])
    cube([1, 1, 1.33]);
  translate([61, 68, 0])
    cube([1, 1, 1.33]);
  translate([62, 68, 0])
    cube([1, 1, 1.33]);
  translate([63, 68, 0])
    cube([1, 1, 1.33]);
  translate([64, 68, 0])
    cube([1, 1, 1.33]);
  translate([65, 68, 0])
    cube([1, 1, 1.33]);
  translate([66, 68, 0])
    cube([1, 1, 1.33]);
  translate([67, 68, 0])
    cube([1, 1, 0.98]);
  translate([68, 68, 0])
    cube([1, 1, 5.49]);
  translate([69, 68, 0])
    cube([1, 1, 1.61]);
  translate([70, 68, 0])
    cube([1, 1, 1.06]);
  translate([71, 68, 0])
    cube([1, 1, 2.00]);
  translate([72, 68, 0])
    cube([1, 1, 1.45]);
  translate([73, 68, 0])
    cube([1, 1, 1.45]);
  translate([74, 68, 0])
    cube([1, 1, 1.22]);
  translate([75, 68, 0])
    cube([1, 1, 1.49]);
  translate([76, 68, 0])
    cube([1, 1, 0.94]);
  translate([77, 68, 0])
    cube([1, 1, 0.78]);
  translate([78, 68, 0])
    cube([1, 1, 0.59]);
  translate([79, 68, 0])
    cube([1, 1, 1.14]);
  translate([80, 68, 0])
    cube([1, 1, 1.37]);
  translate([81, 68, 0])
    cube([1, 1, 1.37]);
  translate([82, 68, 0])
    cube([1, 1, 1.53]);
  translate([83, 68, 0])
    cube([1, 1, 1.45]);
  translate([84, 68, 0])
    cube([1, 1, 1.41]);
  translate([85, 68, 0])
    cube([1, 1, 1.45]);
  translate([86, 68, 0])
    cube([1, 1, 1.61]);
  translate([87, 68, 0])
    cube([1, 1, 1.80]);
  translate([88, 68, 0])
    cube([1, 1, 1.76]);
  translate([89, 68, 0])
    cube([1, 1, 3.06]);
  translate([90, 68, 0])
    cube([1, 1, 1.10]);
  translate([91, 68, 0])
    cube([1, 1, 1.02]);
  translate([92, 68, 0])
    cube([1, 1, 1.92]);
  translate([93, 68, 0])
    cube([1, 1, 1.92]);
  translate([94, 68, 0])
    cube([1, 1, 3.06]);
  translate([95, 68, 0])
    cube([1, 1, 3.41]);
  translate([96, 68, 0])
    cube([1, 1, 3.88]);
  translate([97, 68, 0])
    cube([1, 1, 4.16]);
  translate([98, 68, 0])
    cube([1, 1, 4.51]);
  translate([99, 68, 0])
    cube([1, 1, 3.53]);
  translate([100, 68, 0])
    cube([1, 1, 1.61]);
  translate([101, 68, 0])
    cube([1, 1, 1.92]);
  translate([102, 68, 0])
    cube([1, 1, 2.43]);
  translate([103, 68, 0])
    cube([1, 1, 3.02]);
  translate([104, 68, 0])
    cube([1, 1, 2.86]);
  translate([105, 68, 0])
    cube([1, 1, 3.25]);
  translate([106, 68, 0])
    cube([1, 1, 3.06]);
  translate([107, 68, 0])
    cube([1, 1, 3.33]);
  translate([108, 68, 0])
    cube([1, 1, 3.37]);
  translate([109, 68, 0])
    cube([1, 1, 4.35]);
  translate([110, 68, 0])
    cube([1, 1, 5.18]);
  translate([111, 68, 0])
    cube([1, 1, 5.25]);
  translate([112, 68, 0])
    cube([1, 1, 2.20]);
  translate([113, 68, 0])
    cube([1, 1, 1.25]);
  translate([114, 68, 0])
    cube([1, 1, 1.25]);
  translate([115, 68, 0])
    cube([1, 1, 1.25]);
  translate([116, 68, 0])
    cube([1, 1, 1.25]);
  translate([117, 68, 0])
    cube([1, 1, 1.41]);
  translate([118, 68, 0])
    cube([1, 1, 1.37]);
  translate([119, 68, 0])
    cube([1, 1, 1.84]);
  translate([120, 68, 0])
    cube([1, 1, 1.45]);
  translate([121, 68, 0])
    cube([1, 1, 0.82]);
  translate([122, 68, 0])
    cube([1, 1, 1.53]);
  translate([123, 68, 0])
    cube([1, 1, 1.25]);
  translate([124, 68, 0])
    cube([1, 1, 1.25]);
  translate([125, 68, 0])
    cube([1, 1, 1.25]);
  translate([126, 68, 0])
    cube([1, 1, 1.25]);
  translate([127, 68, 0])
    cube([1, 1, 1.25]);
  translate([128, 68, 0])
    cube([1, 1, 1.25]);
  translate([129, 68, 0])
    cube([1, 1, 1.25]);
  translate([130, 68, 0])
    cube([1, 1, 1.25]);
  translate([131, 68, 0])
    cube([1, 1, 1.25]);
  translate([132, 68, 0])
    cube([1, 1, 1.25]);
  translate([133, 68, 0])
    cube([1, 1, 1.25]);
  translate([134, 68, 0])
    cube([1, 1, 1.25]);
  translate([135, 68, 0])
    cube([1, 1, 1.25]);
  translate([136, 68, 0])
    cube([1, 1, 1.25]);
  translate([137, 68, 0])
    cube([1, 1, 1.25]);
  translate([138, 68, 0])
    cube([1, 1, 1.29]);
  translate([139, 68, 0])
    cube([1, 1, 1.22]);
  translate([140, 68, 0])
    cube([1, 1, 1.25]);
  translate([141, 68, 0])
    cube([1, 1, 1.29]);
  translate([142, 68, 0])
    cube([1, 1, 1.25]);
  translate([143, 68, 0])
    cube([1, 1, 1.25]);
  translate([144, 68, 0])
    cube([1, 1, 1.29]);
  translate([145, 68, 0])
    cube([1, 1, 1.25]);
  translate([146, 68, 0])
    cube([1, 1, 1.25]);
  translate([147, 68, 0])
    cube([1, 1, 1.29]);
  translate([148, 68, 0])
    cube([1, 1, 1.29]);
  translate([149, 68, 0])
    cube([1, 1, 1.29]);
  translate([150, 68, 0])
    cube([1, 1, 1.29]);
  translate([151, 68, 0])
    cube([1, 1, 1.29]);
  translate([152, 68, 0])
    cube([1, 1, 1.29]);
  translate([153, 68, 0])
    cube([1, 1, 1.29]);
  translate([154, 68, 0])
    cube([1, 1, 1.29]);
  translate([155, 68, 0])
    cube([1, 1, 1.29]);
  translate([156, 68, 0])
    cube([1, 1, 1.29]);
  translate([157, 68, 0])
    cube([1, 1, 1.29]);
  translate([158, 68, 0])
    cube([1, 1, 1.29]);
  translate([159, 68, 0])
    cube([1, 1, 1.29]);
  translate([160, 68, 0])
    cube([1, 1, 1.29]);
  translate([161, 68, 0])
    cube([1, 1, 1.29]);
  translate([162, 68, 0])
    cube([1, 1, 1.29]);
  translate([163, 68, 0])
    cube([1, 1, 1.29]);
  translate([164, 68, 0])
    cube([1, 1, 1.29]);
  translate([165, 68, 0])
    cube([1, 1, 1.29]);
  translate([166, 68, 0])
    cube([1, 1, 1.29]);
  translate([167, 68, 0])
    cube([1, 1, 1.29]);
  translate([168, 68, 0])
    cube([1, 1, 1.29]);
  translate([169, 68, 0])
    cube([1, 1, 1.29]);
  translate([170, 68, 0])
    cube([1, 1, 1.29]);
  translate([171, 68, 0])
    cube([1, 1, 1.29]);
  translate([172, 68, 0])
    cube([1, 1, 1.29]);
  translate([173, 68, 0])
    cube([1, 1, 1.29]);
  translate([174, 68, 0])
    cube([1, 1, 1.29]);
  translate([175, 68, 0])
    cube([1, 1, 1.29]);
  translate([176, 68, 0])
    cube([1, 1, 1.29]);
  translate([177, 68, 0])
    cube([1, 1, 1.29]);
  translate([178, 68, 0])
    cube([1, 1, 1.29]);
  translate([179, 68, 0])
    cube([1, 1, 1.29]);
  translate([180, 68, 0])
    cube([1, 1, 1.29]);
  translate([181, 68, 0])
    cube([1, 1, 1.29]);
  translate([182, 68, 0])
    cube([1, 1, 1.29]);
  translate([183, 68, 0])
    cube([1, 1, 1.29]);
  translate([184, 68, 0])
    cube([1, 1, 1.29]);
  translate([185, 68, 0])
    cube([1, 1, 1.29]);
  translate([186, 68, 0])
    cube([1, 1, 1.29]);
  translate([187, 68, 0])
    cube([1, 1, 1.29]);
  translate([188, 68, 0])
    cube([1, 1, 1.25]);
  translate([189, 68, 0])
    cube([1, 1, 1.25]);
  translate([190, 68, 0])
    cube([1, 1, 1.29]);
  translate([191, 68, 0])
    cube([1, 1, 1.25]);
  translate([192, 68, 0])
    cube([1, 1, 1.29]);
  translate([193, 68, 0])
    cube([1, 1, 1.25]);
  translate([194, 68, 0])
    cube([1, 1, 1.25]);
  translate([195, 68, 0])
    cube([1, 1, 1.25]);
  translate([196, 68, 0])
    cube([1, 1, 1.29]);
  translate([197, 68, 0])
    cube([1, 1, 1.29]);
  translate([198, 68, 0])
    cube([1, 1, 1.22]);
  translate([199, 68, 0])
    cube([1, 1, 1.29]);
  translate([200, 68, 0])
    cube([1, 1, 1.25]);
  translate([201, 68, 0])
    cube([1, 1, 1.25]);
  translate([202, 68, 0])
    cube([1, 1, 1.25]);
  translate([203, 68, 0])
    cube([1, 1, 1.22]);
  translate([204, 68, 0])
    cube([1, 1, 1.22]);
  translate([205, 68, 0])
    cube([1, 1, 1.25]);
  translate([206, 68, 0])
    cube([1, 1, 1.25]);
  translate([207, 68, 0])
    cube([1, 1, 1.29]);
  translate([208, 68, 0])
    cube([1, 1, 1.25]);
  translate([209, 68, 0])
    cube([1, 1, 1.25]);
  translate([210, 68, 0])
    cube([1, 1, 1.25]);
  translate([211, 68, 0])
    cube([1, 1, 1.25]);
  translate([212, 68, 0])
    cube([1, 1, 1.25]);
  translate([213, 68, 0])
    cube([1, 1, 1.25]);
  translate([214, 68, 0])
    cube([1, 1, 1.25]);
  translate([215, 68, 0])
    cube([1, 1, 1.25]);
  translate([216, 68, 0])
    cube([1, 1, 1.25]);
  translate([217, 68, 0])
    cube([1, 1, 1.25]);
  translate([218, 68, 0])
    cube([1, 1, 1.25]);
  translate([219, 68, 0])
    cube([1, 1, 1.25]);
  translate([220, 68, 0])
    cube([1, 1, 1.25]);
  translate([221, 68, 0])
    cube([1, 1, 1.25]);
  translate([222, 68, 0])
    cube([1, 1, 1.25]);
  translate([223, 68, 0])
    cube([1, 1, 1.25]);
  translate([224, 68, 0])
    cube([1, 1, 1.25]);
  translate([225, 68, 0])
    cube([1, 1, 1.25]);
  translate([226, 68, 0])
    cube([1, 1, 1.25]);
  translate([227, 68, 0])
    cube([1, 1, 1.25]);
  translate([228, 68, 0])
    cube([1, 1, 1.25]);
  translate([229, 68, 0])
    cube([1, 1, 1.25]);
  translate([230, 68, 0])
    cube([1, 1, 1.25]);
  translate([231, 68, 0])
    cube([1, 1, 1.25]);
  translate([232, 68, 0])
    cube([1, 1, 1.25]);
  translate([233, 68, 0])
    cube([1, 1, 1.25]);
  translate([234, 68, 0])
    cube([1, 1, 1.25]);
  translate([235, 68, 0])
    cube([1, 1, 1.25]);
  translate([236, 68, 0])
    cube([1, 1, 1.25]);
  translate([237, 68, 0])
    cube([1, 1, 1.25]);
  translate([238, 68, 0])
    cube([1, 1, 1.25]);
  translate([239, 68, 0])
    cube([1, 1, 1.25]);
  translate([240, 68, 0])
    cube([1, 1, 1.25]);
  translate([241, 68, 0])
    cube([1, 1, 1.25]);
  translate([242, 68, 0])
    cube([1, 1, 1.25]);
  translate([243, 68, 0])
    cube([1, 1, 1.25]);
  translate([244, 68, 0])
    cube([1, 1, 1.25]);
  translate([245, 68, 0])
    cube([1, 1, 1.25]);
  translate([246, 68, 0])
    cube([1, 1, 1.25]);
  translate([0, 69, 0])
    cube([1, 1, 1.45]);
  translate([1, 69, 0])
    cube([1, 1, 1.41]);
  translate([2, 69, 0])
    cube([1, 1, 1.41]);
  translate([3, 69, 0])
    cube([1, 1, 1.41]);
  translate([4, 69, 0])
    cube([1, 1, 1.41]);
  translate([5, 69, 0])
    cube([1, 1, 1.41]);
  translate([6, 69, 0])
    cube([1, 1, 1.37]);
  translate([7, 69, 0])
    cube([1, 1, 1.41]);
  translate([8, 69, 0])
    cube([1, 1, 1.45]);
  translate([9, 69, 0])
    cube([1, 1, 1.37]);
  translate([10, 69, 0])
    cube([1, 1, 1.37]);
  translate([11, 69, 0])
    cube([1, 1, 1.45]);
  translate([12, 69, 0])
    cube([1, 1, 1.41]);
  translate([13, 69, 0])
    cube([1, 1, 1.41]);
  translate([14, 69, 0])
    cube([1, 1, 1.41]);
  translate([15, 69, 0])
    cube([1, 1, 1.41]);
  translate([16, 69, 0])
    cube([1, 1, 1.41]);
  translate([17, 69, 0])
    cube([1, 1, 1.41]);
  translate([18, 69, 0])
    cube([1, 1, 1.41]);
  translate([19, 69, 0])
    cube([1, 1, 1.41]);
  translate([20, 69, 0])
    cube([1, 1, 1.45]);
  translate([21, 69, 0])
    cube([1, 1, 1.45]);
  translate([22, 69, 0])
    cube([1, 1, 0.71]);
  translate([23, 69, 0])
    cube([1, 1, 0.90]);
  translate([24, 69, 0])
    cube([1, 1, 2.71]);
  translate([25, 69, 0])
    cube([1, 1, 1.14]);
  translate([26, 69, 0])
    cube([1, 1, 0.39]);
  translate([27, 69, 0])
    cube([1, 1, 6.16]);
  translate([28, 69, 0])
    cube([1, 1, 4.27]);
  translate([29, 69, 0])
    cube([1, 1, 5.92]);
  translate([30, 69, 0])
    cube([1, 1, 6.35]);
  translate([31, 69, 0])
    cube([1, 1, 0.16]);
  translate([32, 69, 0])
    cube([1, 1, 0.24]);
  translate([33, 69, 0])
    cube([1, 1, 0.67]);
  translate([34, 69, 0])
    cube([1, 1, 0.90]);
  translate([35, 69, 0])
    cube([1, 1, 0.71]);
  translate([36, 69, 0])
    cube([1, 1, 0.78]);
  translate([37, 69, 0])
    cube([1, 1, 0.90]);
  translate([38, 69, 0])
    cube([1, 1, 1.06]);
  translate([39, 69, 0])
    cube([1, 1, 1.37]);
  translate([40, 69, 0])
    cube([1, 1, 1.37]);
  translate([41, 69, 0])
    cube([1, 1, 1.37]);
  translate([42, 69, 0])
    cube([1, 1, 1.37]);
  translate([43, 69, 0])
    cube([1, 1, 1.37]);
  translate([44, 69, 0])
    cube([1, 1, 1.37]);
  translate([45, 69, 0])
    cube([1, 1, 1.37]);
  translate([46, 69, 0])
    cube([1, 1, 1.37]);
  translate([47, 69, 0])
    cube([1, 1, 1.37]);
  translate([48, 69, 0])
    cube([1, 1, 1.37]);
  translate([49, 69, 0])
    cube([1, 1, 1.37]);
  translate([50, 69, 0])
    cube([1, 1, 1.37]);
  translate([51, 69, 0])
    cube([1, 1, 1.37]);
  translate([52, 69, 0])
    cube([1, 1, 1.33]);
  translate([53, 69, 0])
    cube([1, 1, 1.33]);
  translate([54, 69, 0])
    cube([1, 1, 1.37]);
  translate([55, 69, 0])
    cube([1, 1, 1.37]);
  translate([56, 69, 0])
    cube([1, 1, 1.33]);
  translate([57, 69, 0])
    cube([1, 1, 1.33]);
  translate([58, 69, 0])
    cube([1, 1, 1.33]);
  translate([59, 69, 0])
    cube([1, 1, 1.33]);
  translate([60, 69, 0])
    cube([1, 1, 1.33]);
  translate([61, 69, 0])
    cube([1, 1, 1.33]);
  translate([62, 69, 0])
    cube([1, 1, 1.33]);
  translate([63, 69, 0])
    cube([1, 1, 1.33]);
  translate([64, 69, 0])
    cube([1, 1, 1.33]);
  translate([65, 69, 0])
    cube([1, 1, 1.33]);
  translate([66, 69, 0])
    cube([1, 1, 1.33]);
  translate([67, 69, 0])
    cube([1, 1, 1.41]);
  translate([68, 69, 0])
    cube([1, 1, 3.33]);
  translate([69, 69, 0])
    cube([1, 1, 5.80]);
  translate([70, 69, 0])
    cube([1, 1, 1.88]);
  translate([71, 69, 0])
    cube([1, 1, 0.98]);
  translate([72, 69, 0])
    cube([1, 1, 1.37]);
  translate([73, 69, 0])
    cube([1, 1, 1.53]);
  translate([74, 69, 0])
    cube([1, 1, 1.45]);
  translate([75, 69, 0])
    cube([1, 1, 1.29]);
  translate([76, 69, 0])
    cube([1, 1, 1.06]);
  translate([77, 69, 0])
    cube([1, 1, 0.94]);
  translate([78, 69, 0])
    cube([1, 1, 0.59]);
  translate([79, 69, 0])
    cube([1, 1, 1.10]);
  translate([80, 69, 0])
    cube([1, 1, 1.37]);
  translate([81, 69, 0])
    cube([1, 1, 1.49]);
  translate([82, 69, 0])
    cube([1, 1, 1.53]);
  translate([83, 69, 0])
    cube([1, 1, 1.45]);
  translate([84, 69, 0])
    cube([1, 1, 1.37]);
  translate([85, 69, 0])
    cube([1, 1, 1.45]);
  translate([86, 69, 0])
    cube([1, 1, 1.53]);
  translate([87, 69, 0])
    cube([1, 1, 1.73]);
  translate([88, 69, 0])
    cube([1, 1, 1.73]);
  translate([89, 69, 0])
    cube([1, 1, 1.41]);
  translate([90, 69, 0])
    cube([1, 1, 1.02]);
  translate([91, 69, 0])
    cube([1, 1, 1.14]);
  translate([92, 69, 0])
    cube([1, 1, 1.76]);
  translate([93, 69, 0])
    cube([1, 1, 1.57]);
  translate([94, 69, 0])
    cube([1, 1, 2.94]);
  translate([95, 69, 0])
    cube([1, 1, 3.22]);
  translate([96, 69, 0])
    cube([1, 1, 3.65]);
  translate([97, 69, 0])
    cube([1, 1, 4.00]);
  translate([98, 69, 0])
    cube([1, 1, 4.63]);
  translate([99, 69, 0])
    cube([1, 1, 4.24]);
  translate([100, 69, 0])
    cube([1, 1, 3.84]);
  translate([101, 69, 0])
    cube([1, 1, 4.35]);
  translate([102, 69, 0])
    cube([1, 1, 5.18]);
  translate([103, 69, 0])
    cube([1, 1, 5.49]);
  translate([104, 69, 0])
    cube([1, 1, 5.57]);
  translate([105, 69, 0])
    cube([1, 1, 5.57]);
  translate([106, 69, 0])
    cube([1, 1, 5.45]);
  translate([107, 69, 0])
    cube([1, 1, 5.80]);
  translate([108, 69, 0])
    cube([1, 1, 6.04]);
  translate([109, 69, 0])
    cube([1, 1, 5.53]);
  translate([110, 69, 0])
    cube([1, 1, 5.25]);
  translate([111, 69, 0])
    cube([1, 1, 6.39]);
  translate([112, 69, 0])
    cube([1, 1, 1.18]);
  translate([113, 69, 0])
    cube([1, 1, 1.25]);
  translate([114, 69, 0])
    cube([1, 1, 1.25]);
  translate([115, 69, 0])
    cube([1, 1, 1.25]);
  translate([116, 69, 0])
    cube([1, 1, 1.22]);
  translate([117, 69, 0])
    cube([1, 1, 1.25]);
  translate([118, 69, 0])
    cube([1, 1, 1.65]);
  translate([119, 69, 0])
    cube([1, 1, 1.61]);
  translate([120, 69, 0])
    cube([1, 1, 1.29]);
  translate([121, 69, 0])
    cube([1, 1, 2.04]);
  translate([122, 69, 0])
    cube([1, 1, 1.06]);
  translate([123, 69, 0])
    cube([1, 1, 1.25]);
  translate([124, 69, 0])
    cube([1, 1, 1.25]);
  translate([125, 69, 0])
    cube([1, 1, 1.25]);
  translate([126, 69, 0])
    cube([1, 1, 1.25]);
  translate([127, 69, 0])
    cube([1, 1, 1.25]);
  translate([128, 69, 0])
    cube([1, 1, 1.25]);
  translate([129, 69, 0])
    cube([1, 1, 1.25]);
  translate([130, 69, 0])
    cube([1, 1, 1.25]);
  translate([131, 69, 0])
    cube([1, 1, 1.25]);
  translate([132, 69, 0])
    cube([1, 1, 1.25]);
  translate([133, 69, 0])
    cube([1, 1, 1.25]);
  translate([134, 69, 0])
    cube([1, 1, 1.25]);
  translate([135, 69, 0])
    cube([1, 1, 1.25]);
  translate([136, 69, 0])
    cube([1, 1, 1.25]);
  translate([137, 69, 0])
    cube([1, 1, 1.25]);
  translate([138, 69, 0])
    cube([1, 1, 1.25]);
  translate([139, 69, 0])
    cube([1, 1, 1.25]);
  translate([140, 69, 0])
    cube([1, 1, 1.29]);
  translate([141, 69, 0])
    cube([1, 1, 1.25]);
  translate([142, 69, 0])
    cube([1, 1, 1.25]);
  translate([143, 69, 0])
    cube([1, 1, 1.25]);
  translate([144, 69, 0])
    cube([1, 1, 1.29]);
  translate([145, 69, 0])
    cube([1, 1, 1.29]);
  translate([146, 69, 0])
    cube([1, 1, 1.29]);
  translate([147, 69, 0])
    cube([1, 1, 1.29]);
  translate([148, 69, 0])
    cube([1, 1, 1.29]);
  translate([149, 69, 0])
    cube([1, 1, 1.29]);
  translate([150, 69, 0])
    cube([1, 1, 1.29]);
  translate([151, 69, 0])
    cube([1, 1, 1.25]);
  translate([152, 69, 0])
    cube([1, 1, 1.29]);
  translate([153, 69, 0])
    cube([1, 1, 1.29]);
  translate([154, 69, 0])
    cube([1, 1, 1.29]);
  translate([155, 69, 0])
    cube([1, 1, 1.29]);
  translate([156, 69, 0])
    cube([1, 1, 1.29]);
  translate([157, 69, 0])
    cube([1, 1, 1.29]);
  translate([158, 69, 0])
    cube([1, 1, 1.29]);
  translate([159, 69, 0])
    cube([1, 1, 1.29]);
  translate([160, 69, 0])
    cube([1, 1, 1.29]);
  translate([161, 69, 0])
    cube([1, 1, 1.29]);
  translate([162, 69, 0])
    cube([1, 1, 1.29]);
  translate([163, 69, 0])
    cube([1, 1, 1.29]);
  translate([164, 69, 0])
    cube([1, 1, 1.29]);
  translate([165, 69, 0])
    cube([1, 1, 1.29]);
  translate([166, 69, 0])
    cube([1, 1, 1.29]);
  translate([167, 69, 0])
    cube([1, 1, 1.29]);
  translate([168, 69, 0])
    cube([1, 1, 1.29]);
  translate([169, 69, 0])
    cube([1, 1, 1.29]);
  translate([170, 69, 0])
    cube([1, 1, 1.29]);
  translate([171, 69, 0])
    cube([1, 1, 1.29]);
  translate([172, 69, 0])
    cube([1, 1, 1.29]);
  translate([173, 69, 0])
    cube([1, 1, 1.29]);
  translate([174, 69, 0])
    cube([1, 1, 1.29]);
  translate([175, 69, 0])
    cube([1, 1, 1.29]);
  translate([176, 69, 0])
    cube([1, 1, 1.29]);
  translate([177, 69, 0])
    cube([1, 1, 1.25]);
  translate([178, 69, 0])
    cube([1, 1, 1.29]);
  translate([179, 69, 0])
    cube([1, 1, 1.29]);
  translate([180, 69, 0])
    cube([1, 1, 1.29]);
  translate([181, 69, 0])
    cube([1, 1, 1.29]);
  translate([182, 69, 0])
    cube([1, 1, 1.29]);
  translate([183, 69, 0])
    cube([1, 1, 1.29]);
  translate([184, 69, 0])
    cube([1, 1, 1.29]);
  translate([185, 69, 0])
    cube([1, 1, 1.29]);
  translate([186, 69, 0])
    cube([1, 1, 1.29]);
  translate([187, 69, 0])
    cube([1, 1, 1.29]);
  translate([188, 69, 0])
    cube([1, 1, 1.29]);
  translate([189, 69, 0])
    cube([1, 1, 1.29]);
  translate([190, 69, 0])
    cube([1, 1, 1.29]);
  translate([191, 69, 0])
    cube([1, 1, 1.29]);
  translate([192, 69, 0])
    cube([1, 1, 1.29]);
  translate([193, 69, 0])
    cube([1, 1, 1.25]);
  translate([194, 69, 0])
    cube([1, 1, 1.25]);
  translate([195, 69, 0])
    cube([1, 1, 1.29]);
  translate([196, 69, 0])
    cube([1, 1, 1.22]);
  translate([197, 69, 0])
    cube([1, 1, 1.25]);
  translate([198, 69, 0])
    cube([1, 1, 1.29]);
  translate([199, 69, 0])
    cube([1, 1, 1.29]);
  translate([200, 69, 0])
    cube([1, 1, 1.25]);
  translate([201, 69, 0])
    cube([1, 1, 1.29]);
  translate([202, 69, 0])
    cube([1, 1, 1.29]);
  translate([203, 69, 0])
    cube([1, 1, 1.29]);
  translate([204, 69, 0])
    cube([1, 1, 1.22]);
  translate([205, 69, 0])
    cube([1, 1, 1.25]);
  translate([206, 69, 0])
    cube([1, 1, 1.29]);
  translate([207, 69, 0])
    cube([1, 1, 1.33]);
  translate([208, 69, 0])
    cube([1, 1, 1.29]);
  translate([209, 69, 0])
    cube([1, 1, 1.22]);
  translate([210, 69, 0])
    cube([1, 1, 1.29]);
  translate([211, 69, 0])
    cube([1, 1, 1.25]);
  translate([212, 69, 0])
    cube([1, 1, 1.25]);
  translate([213, 69, 0])
    cube([1, 1, 1.25]);
  translate([214, 69, 0])
    cube([1, 1, 1.25]);
  translate([215, 69, 0])
    cube([1, 1, 1.25]);
  translate([216, 69, 0])
    cube([1, 1, 1.25]);
  translate([217, 69, 0])
    cube([1, 1, 1.25]);
  translate([218, 69, 0])
    cube([1, 1, 1.25]);
  translate([219, 69, 0])
    cube([1, 1, 1.25]);
  translate([220, 69, 0])
    cube([1, 1, 1.25]);
  translate([221, 69, 0])
    cube([1, 1, 1.25]);
  translate([222, 69, 0])
    cube([1, 1, 1.25]);
  translate([223, 69, 0])
    cube([1, 1, 1.25]);
  translate([224, 69, 0])
    cube([1, 1, 1.25]);
  translate([225, 69, 0])
    cube([1, 1, 1.25]);
  translate([226, 69, 0])
    cube([1, 1, 1.25]);
  translate([227, 69, 0])
    cube([1, 1, 1.25]);
  translate([228, 69, 0])
    cube([1, 1, 1.25]);
  translate([229, 69, 0])
    cube([1, 1, 1.25]);
  translate([230, 69, 0])
    cube([1, 1, 1.25]);
  translate([231, 69, 0])
    cube([1, 1, 1.25]);
  translate([232, 69, 0])
    cube([1, 1, 1.25]);
  translate([233, 69, 0])
    cube([1, 1, 1.25]);
  translate([234, 69, 0])
    cube([1, 1, 1.25]);
  translate([235, 69, 0])
    cube([1, 1, 1.25]);
  translate([236, 69, 0])
    cube([1, 1, 1.25]);
  translate([237, 69, 0])
    cube([1, 1, 1.25]);
  translate([238, 69, 0])
    cube([1, 1, 1.25]);
  translate([239, 69, 0])
    cube([1, 1, 1.25]);
  translate([240, 69, 0])
    cube([1, 1, 1.25]);
  translate([241, 69, 0])
    cube([1, 1, 1.25]);
  translate([242, 69, 0])
    cube([1, 1, 1.25]);
  translate([243, 69, 0])
    cube([1, 1, 1.25]);
  translate([244, 69, 0])
    cube([1, 1, 1.25]);
  translate([245, 69, 0])
    cube([1, 1, 1.25]);
  translate([246, 69, 0])
    cube([1, 1, 1.25]);
  translate([0, 70, 0])
    cube([1, 1, 1.45]);
  translate([1, 70, 0])
    cube([1, 1, 1.41]);
  translate([2, 70, 0])
    cube([1, 1, 1.41]);
  translate([3, 70, 0])
    cube([1, 1, 1.41]);
  translate([4, 70, 0])
    cube([1, 1, 1.41]);
  translate([5, 70, 0])
    cube([1, 1, 1.41]);
  translate([6, 70, 0])
    cube([1, 1, 1.37]);
  translate([7, 70, 0])
    cube([1, 1, 1.41]);
  translate([8, 70, 0])
    cube([1, 1, 1.45]);
  translate([9, 70, 0])
    cube([1, 1, 1.37]);
  translate([10, 70, 0])
    cube([1, 1, 1.37]);
  translate([11, 70, 0])
    cube([1, 1, 1.45]);
  translate([12, 70, 0])
    cube([1, 1, 1.41]);
  translate([13, 70, 0])
    cube([1, 1, 1.41]);
  translate([14, 70, 0])
    cube([1, 1, 1.41]);
  translate([15, 70, 0])
    cube([1, 1, 1.41]);
  translate([16, 70, 0])
    cube([1, 1, 1.41]);
  translate([17, 70, 0])
    cube([1, 1, 1.41]);
  translate([18, 70, 0])
    cube([1, 1, 1.41]);
  translate([19, 70, 0])
    cube([1, 1, 1.41]);
  translate([20, 70, 0])
    cube([1, 1, 1.45]);
  translate([21, 70, 0])
    cube([1, 1, 1.45]);
  translate([22, 70, 0])
    cube([1, 1, 1.65]);
  translate([23, 70, 0])
    cube([1, 1, 0.82]);
  translate([24, 70, 0])
    cube([1, 1, 4.82]);
  translate([25, 70, 0])
    cube([1, 1, 1.22]);
  translate([26, 70, 0])
    cube([1, 1, 0.55]);
  translate([27, 70, 0])
    cube([1, 1, 5.57]);
  translate([28, 70, 0])
    cube([1, 1, 4.47]);
  translate([29, 70, 0])
    cube([1, 1, 6.00]);
  translate([30, 70, 0])
    cube([1, 1, 6.39]);
  translate([31, 70, 0])
    cube([1, 1, 0.43]);
  translate([32, 70, 0])
    cube([1, 1, 0.55]);
  translate([33, 70, 0])
    cube([1, 1, 1.80]);
  translate([34, 70, 0])
    cube([1, 1, 0.75]);
  translate([35, 70, 0])
    cube([1, 1, 0.71]);
  translate([36, 70, 0])
    cube([1, 1, 0.78]);
  translate([37, 70, 0])
    cube([1, 1, 0.78]);
  translate([38, 70, 0])
    cube([1, 1, 0.98]);
  translate([39, 70, 0])
    cube([1, 1, 1.29]);
  translate([40, 70, 0])
    cube([1, 1, 1.37]);
  translate([41, 70, 0])
    cube([1, 1, 1.37]);
  translate([42, 70, 0])
    cube([1, 1, 1.37]);
  translate([43, 70, 0])
    cube([1, 1, 1.37]);
  translate([44, 70, 0])
    cube([1, 1, 1.37]);
  translate([45, 70, 0])
    cube([1, 1, 1.37]);
  translate([46, 70, 0])
    cube([1, 1, 1.37]);
  translate([47, 70, 0])
    cube([1, 1, 1.37]);
  translate([48, 70, 0])
    cube([1, 1, 1.37]);
  translate([49, 70, 0])
    cube([1, 1, 1.37]);
  translate([50, 70, 0])
    cube([1, 1, 1.37]);
  translate([51, 70, 0])
    cube([1, 1, 1.37]);
  translate([52, 70, 0])
    cube([1, 1, 1.33]);
  translate([53, 70, 0])
    cube([1, 1, 1.33]);
  translate([54, 70, 0])
    cube([1, 1, 1.33]);
  translate([55, 70, 0])
    cube([1, 1, 1.33]);
  translate([56, 70, 0])
    cube([1, 1, 1.33]);
  translate([57, 70, 0])
    cube([1, 1, 1.33]);
  translate([58, 70, 0])
    cube([1, 1, 1.33]);
  translate([59, 70, 0])
    cube([1, 1, 1.33]);
  translate([60, 70, 0])
    cube([1, 1, 1.33]);
  translate([61, 70, 0])
    cube([1, 1, 1.33]);
  translate([62, 70, 0])
    cube([1, 1, 1.33]);
  translate([63, 70, 0])
    cube([1, 1, 1.33]);
  translate([64, 70, 0])
    cube([1, 1, 1.33]);
  translate([65, 70, 0])
    cube([1, 1, 1.33]);
  translate([66, 70, 0])
    cube([1, 1, 1.33]);
  translate([67, 70, 0])
    cube([1, 1, 1.45]);
  translate([68, 70, 0])
    cube([1, 1, 2.12]);
  translate([69, 70, 0])
    cube([1, 1, 1.61]);
  translate([70, 70, 0])
    cube([1, 1, 1.73]);
  translate([71, 70, 0])
    cube([1, 1, 0.78]);
  translate([72, 70, 0])
    cube([1, 1, 1.80]);
  translate([73, 70, 0])
    cube([1, 1, 1.84]);
  translate([74, 70, 0])
    cube([1, 1, 1.57]);
  translate([75, 70, 0])
    cube([1, 1, 1.29]);
  translate([76, 70, 0])
    cube([1, 1, 0.94]);
  translate([77, 70, 0])
    cube([1, 1, 0.82]);
  translate([78, 70, 0])
    cube([1, 1, 0.59]);
  translate([79, 70, 0])
    cube([1, 1, 1.22]);
  translate([80, 70, 0])
    cube([1, 1, 1.49]);
  translate([81, 70, 0])
    cube([1, 1, 1.61]);
  translate([82, 70, 0])
    cube([1, 1, 1.65]);
  translate([83, 70, 0])
    cube([1, 1, 1.65]);
  translate([84, 70, 0])
    cube([1, 1, 1.49]);
  translate([85, 70, 0])
    cube([1, 1, 1.57]);
  translate([86, 70, 0])
    cube([1, 1, 1.65]);
  translate([87, 70, 0])
    cube([1, 1, 1.84]);
  translate([88, 70, 0])
    cube([1, 1, 1.88]);
  translate([89, 70, 0])
    cube([1, 1, 1.76]);
  translate([90, 70, 0])
    cube([1, 1, 1.10]);
  translate([91, 70, 0])
    cube([1, 1, 0.90]);
  translate([92, 70, 0])
    cube([1, 1, 1.88]);
  translate([93, 70, 0])
    cube([1, 1, 1.76]);
  translate([94, 70, 0])
    cube([1, 1, 2.71]);
  translate([95, 70, 0])
    cube([1, 1, 3.02]);
  translate([96, 70, 0])
    cube([1, 1, 3.41]);
  translate([97, 70, 0])
    cube([1, 1, 3.69]);
  translate([98, 70, 0])
    cube([1, 1, 4.08]);
  translate([99, 70, 0])
    cube([1, 1, 3.76]);
  translate([100, 70, 0])
    cube([1, 1, 3.14]);
  translate([101, 70, 0])
    cube([1, 1, 3.76]);
  translate([102, 70, 0])
    cube([1, 1, 4.24]);
  translate([103, 70, 0])
    cube([1, 1, 4.98]);
  translate([104, 70, 0])
    cube([1, 1, 5.10]);
  translate([105, 70, 0])
    cube([1, 1, 5.37]);
  translate([106, 70, 0])
    cube([1, 1, 5.10]);
  translate([107, 70, 0])
    cube([1, 1, 5.33]);
  translate([108, 70, 0])
    cube([1, 1, 5.73]);
  translate([109, 70, 0])
    cube([1, 1, 5.49]);
  translate([110, 70, 0])
    cube([1, 1, 5.69]);
  translate([111, 70, 0])
    cube([1, 1, 1.25]);
  translate([112, 70, 0])
    cube([1, 1, 1.14]);
  translate([113, 70, 0])
    cube([1, 1, 1.25]);
  translate([114, 70, 0])
    cube([1, 1, 1.25]);
  translate([115, 70, 0])
    cube([1, 1, 1.25]);
  translate([116, 70, 0])
    cube([1, 1, 1.22]);
  translate([117, 70, 0])
    cube([1, 1, 1.25]);
  translate([118, 70, 0])
    cube([1, 1, 1.61]);
  translate([119, 70, 0])
    cube([1, 1, 2.08]);
  translate([120, 70, 0])
    cube([1, 1, 1.57]);
  translate([121, 70, 0])
    cube([1, 1, 1.22]);
  translate([122, 70, 0])
    cube([1, 1, 1.41]);
  translate([123, 70, 0])
    cube([1, 1, 1.25]);
  translate([124, 70, 0])
    cube([1, 1, 1.25]);
  translate([125, 70, 0])
    cube([1, 1, 1.25]);
  translate([126, 70, 0])
    cube([1, 1, 1.25]);
  translate([127, 70, 0])
    cube([1, 1, 1.25]);
  translate([128, 70, 0])
    cube([1, 1, 1.25]);
  translate([129, 70, 0])
    cube([1, 1, 1.25]);
  translate([130, 70, 0])
    cube([1, 1, 1.25]);
  translate([131, 70, 0])
    cube([1, 1, 1.25]);
  translate([132, 70, 0])
    cube([1, 1, 1.25]);
  translate([133, 70, 0])
    cube([1, 1, 1.25]);
  translate([134, 70, 0])
    cube([1, 1, 1.25]);
  translate([135, 70, 0])
    cube([1, 1, 1.25]);
  translate([136, 70, 0])
    cube([1, 1, 1.25]);
  translate([137, 70, 0])
    cube([1, 1, 1.25]);
  translate([138, 70, 0])
    cube([1, 1, 1.25]);
  translate([139, 70, 0])
    cube([1, 1, 1.25]);
  translate([140, 70, 0])
    cube([1, 1, 1.29]);
  translate([141, 70, 0])
    cube([1, 1, 1.25]);
  translate([142, 70, 0])
    cube([1, 1, 1.25]);
  translate([143, 70, 0])
    cube([1, 1, 1.25]);
  translate([144, 70, 0])
    cube([1, 1, 1.29]);
  translate([145, 70, 0])
    cube([1, 1, 1.29]);
  translate([146, 70, 0])
    cube([1, 1, 1.29]);
  translate([147, 70, 0])
    cube([1, 1, 1.29]);
  translate([148, 70, 0])
    cube([1, 1, 1.29]);
  translate([149, 70, 0])
    cube([1, 1, 1.29]);
  translate([150, 70, 0])
    cube([1, 1, 1.29]);
  translate([151, 70, 0])
    cube([1, 1, 1.25]);
  translate([152, 70, 0])
    cube([1, 1, 1.29]);
  translate([153, 70, 0])
    cube([1, 1, 1.29]);
  translate([154, 70, 0])
    cube([1, 1, 1.29]);
  translate([155, 70, 0])
    cube([1, 1, 1.29]);
  translate([156, 70, 0])
    cube([1, 1, 1.29]);
  translate([157, 70, 0])
    cube([1, 1, 1.29]);
  translate([158, 70, 0])
    cube([1, 1, 1.29]);
  translate([159, 70, 0])
    cube([1, 1, 1.29]);
  translate([160, 70, 0])
    cube([1, 1, 1.29]);
  translate([161, 70, 0])
    cube([1, 1, 1.29]);
  translate([162, 70, 0])
    cube([1, 1, 1.29]);
  translate([163, 70, 0])
    cube([1, 1, 1.29]);
  translate([164, 70, 0])
    cube([1, 1, 1.29]);
  translate([165, 70, 0])
    cube([1, 1, 1.29]);
  translate([166, 70, 0])
    cube([1, 1, 1.29]);
  translate([167, 70, 0])
    cube([1, 1, 1.29]);
  translate([168, 70, 0])
    cube([1, 1, 1.29]);
  translate([169, 70, 0])
    cube([1, 1, 1.29]);
  translate([170, 70, 0])
    cube([1, 1, 1.29]);
  translate([171, 70, 0])
    cube([1, 1, 1.29]);
  translate([172, 70, 0])
    cube([1, 1, 1.29]);
  translate([173, 70, 0])
    cube([1, 1, 1.29]);
  translate([174, 70, 0])
    cube([1, 1, 1.29]);
  translate([175, 70, 0])
    cube([1, 1, 1.29]);
  translate([176, 70, 0])
    cube([1, 1, 1.29]);
  translate([177, 70, 0])
    cube([1, 1, 1.25]);
  translate([178, 70, 0])
    cube([1, 1, 1.29]);
  translate([179, 70, 0])
    cube([1, 1, 1.29]);
  translate([180, 70, 0])
    cube([1, 1, 1.29]);
  translate([181, 70, 0])
    cube([1, 1, 1.29]);
  translate([182, 70, 0])
    cube([1, 1, 1.29]);
  translate([183, 70, 0])
    cube([1, 1, 1.29]);
  translate([184, 70, 0])
    cube([1, 1, 1.29]);
  translate([185, 70, 0])
    cube([1, 1, 1.29]);
  translate([186, 70, 0])
    cube([1, 1, 1.29]);
  translate([187, 70, 0])
    cube([1, 1, 1.29]);
  translate([188, 70, 0])
    cube([1, 1, 1.29]);
  translate([189, 70, 0])
    cube([1, 1, 1.29]);
  translate([190, 70, 0])
    cube([1, 1, 1.29]);
  translate([191, 70, 0])
    cube([1, 1, 1.29]);
  translate([192, 70, 0])
    cube([1, 1, 1.29]);
  translate([193, 70, 0])
    cube([1, 1, 1.25]);
  translate([194, 70, 0])
    cube([1, 1, 1.25]);
  translate([195, 70, 0])
    cube([1, 1, 1.29]);
  translate([196, 70, 0])
    cube([1, 1, 1.29]);
  translate([197, 70, 0])
    cube([1, 1, 1.25]);
  translate([198, 70, 0])
    cube([1, 1, 1.29]);
  translate([199, 70, 0])
    cube([1, 1, 1.29]);
  translate([200, 70, 0])
    cube([1, 1, 1.25]);
  translate([201, 70, 0])
    cube([1, 1, 1.29]);
  translate([202, 70, 0])
    cube([1, 1, 1.29]);
  translate([203, 70, 0])
    cube([1, 1, 1.22]);
  translate([204, 70, 0])
    cube([1, 1, 1.22]);
  translate([205, 70, 0])
    cube([1, 1, 1.25]);
  translate([206, 70, 0])
    cube([1, 1, 1.25]);
  translate([207, 70, 0])
    cube([1, 1, 1.25]);
  translate([208, 70, 0])
    cube([1, 1, 1.33]);
  translate([209, 70, 0])
    cube([1, 1, 1.22]);
  translate([210, 70, 0])
    cube([1, 1, 1.29]);
  translate([211, 70, 0])
    cube([1, 1, 1.25]);
  translate([212, 70, 0])
    cube([1, 1, 1.25]);
  translate([213, 70, 0])
    cube([1, 1, 1.25]);
  translate([214, 70, 0])
    cube([1, 1, 1.25]);
  translate([215, 70, 0])
    cube([1, 1, 1.25]);
  translate([216, 70, 0])
    cube([1, 1, 1.25]);
  translate([217, 70, 0])
    cube([1, 1, 1.25]);
  translate([218, 70, 0])
    cube([1, 1, 1.25]);
  translate([219, 70, 0])
    cube([1, 1, 1.25]);
  translate([220, 70, 0])
    cube([1, 1, 1.25]);
  translate([221, 70, 0])
    cube([1, 1, 1.25]);
  translate([222, 70, 0])
    cube([1, 1, 1.25]);
  translate([223, 70, 0])
    cube([1, 1, 1.25]);
  translate([224, 70, 0])
    cube([1, 1, 1.25]);
  translate([225, 70, 0])
    cube([1, 1, 1.25]);
  translate([226, 70, 0])
    cube([1, 1, 1.25]);
  translate([227, 70, 0])
    cube([1, 1, 1.25]);
  translate([228, 70, 0])
    cube([1, 1, 1.25]);
  translate([229, 70, 0])
    cube([1, 1, 1.25]);
  translate([230, 70, 0])
    cube([1, 1, 1.25]);
  translate([231, 70, 0])
    cube([1, 1, 1.25]);
  translate([232, 70, 0])
    cube([1, 1, 1.25]);
  translate([233, 70, 0])
    cube([1, 1, 1.25]);
  translate([234, 70, 0])
    cube([1, 1, 1.25]);
  translate([235, 70, 0])
    cube([1, 1, 1.25]);
  translate([236, 70, 0])
    cube([1, 1, 1.25]);
  translate([237, 70, 0])
    cube([1, 1, 1.25]);
  translate([238, 70, 0])
    cube([1, 1, 1.25]);
  translate([239, 70, 0])
    cube([1, 1, 1.25]);
  translate([240, 70, 0])
    cube([1, 1, 1.25]);
  translate([241, 70, 0])
    cube([1, 1, 1.25]);
  translate([242, 70, 0])
    cube([1, 1, 1.25]);
  translate([243, 70, 0])
    cube([1, 1, 1.25]);
  translate([244, 70, 0])
    cube([1, 1, 1.25]);
  translate([245, 70, 0])
    cube([1, 1, 1.25]);
  translate([246, 70, 0])
    cube([1, 1, 1.25]);
  translate([0, 71, 0])
    cube([1, 1, 1.41]);
  translate([1, 71, 0])
    cube([1, 1, 1.41]);
  translate([2, 71, 0])
    cube([1, 1, 1.41]);
  translate([3, 71, 0])
    cube([1, 1, 1.45]);
  translate([4, 71, 0])
    cube([1, 1, 1.41]);
  translate([5, 71, 0])
    cube([1, 1, 1.45]);
  translate([6, 71, 0])
    cube([1, 1, 1.41]);
  translate([7, 71, 0])
    cube([1, 1, 1.41]);
  translate([8, 71, 0])
    cube([1, 1, 1.41]);
  translate([9, 71, 0])
    cube([1, 1, 1.45]);
  translate([10, 71, 0])
    cube([1, 1, 1.45]);
  translate([11, 71, 0])
    cube([1, 1, 1.41]);
  translate([12, 71, 0])
    cube([1, 1, 1.41]);
  translate([13, 71, 0])
    cube([1, 1, 1.41]);
  translate([14, 71, 0])
    cube([1, 1, 1.41]);
  translate([15, 71, 0])
    cube([1, 1, 1.41]);
  translate([16, 71, 0])
    cube([1, 1, 1.41]);
  translate([17, 71, 0])
    cube([1, 1, 1.41]);
  translate([18, 71, 0])
    cube([1, 1, 1.41]);
  translate([19, 71, 0])
    cube([1, 1, 1.41]);
  translate([20, 71, 0])
    cube([1, 1, 1.41]);
  translate([21, 71, 0])
    cube([1, 1, 1.45]);
  translate([22, 71, 0])
    cube([1, 1, 1.76]);
  translate([23, 71, 0])
    cube([1, 1, 1.88]);
  translate([24, 71, 0])
    cube([1, 1, 2.90]);
  translate([25, 71, 0])
    cube([1, 1, 1.49]);
  translate([26, 71, 0])
    cube([1, 1, 0.98]);
  translate([27, 71, 0])
    cube([1, 1, 2.24]);
  translate([28, 71, 0])
    cube([1, 1, 4.27]);
  translate([29, 71, 0])
    cube([1, 1, 6.20]);
  translate([30, 71, 0])
    cube([1, 1, 6.75]);
  translate([31, 71, 0])
    cube([1, 1, 0.67]);
  translate([32, 71, 0])
    cube([1, 1, 0.75]);
  translate([33, 71, 0])
    cube([1, 1, 0.71]);
  translate([34, 71, 0])
    cube([1, 1, 1.22]);
  translate([35, 71, 0])
    cube([1, 1, 0.86]);
  translate([36, 71, 0])
    cube([1, 1, 0.90]);
  translate([37, 71, 0])
    cube([1, 1, 0.82]);
  translate([38, 71, 0])
    cube([1, 1, 1.29]);
  translate([39, 71, 0])
    cube([1, 1, 1.37]);
  translate([40, 71, 0])
    cube([1, 1, 1.37]);
  translate([41, 71, 0])
    cube([1, 1, 1.37]);
  translate([42, 71, 0])
    cube([1, 1, 1.37]);
  translate([43, 71, 0])
    cube([1, 1, 1.37]);
  translate([44, 71, 0])
    cube([1, 1, 1.37]);
  translate([45, 71, 0])
    cube([1, 1, 1.37]);
  translate([46, 71, 0])
    cube([1, 1, 1.37]);
  translate([47, 71, 0])
    cube([1, 1, 1.37]);
  translate([48, 71, 0])
    cube([1, 1, 1.37]);
  translate([49, 71, 0])
    cube([1, 1, 1.29]);
  translate([50, 71, 0])
    cube([1, 1, 1.41]);
  translate([51, 71, 0])
    cube([1, 1, 1.33]);
  translate([52, 71, 0])
    cube([1, 1, 1.33]);
  translate([53, 71, 0])
    cube([1, 1, 1.33]);
  translate([54, 71, 0])
    cube([1, 1, 1.37]);
  translate([55, 71, 0])
    cube([1, 1, 1.33]);
  translate([56, 71, 0])
    cube([1, 1, 1.33]);
  translate([57, 71, 0])
    cube([1, 1, 1.33]);
  translate([58, 71, 0])
    cube([1, 1, 1.33]);
  translate([59, 71, 0])
    cube([1, 1, 1.33]);
  translate([60, 71, 0])
    cube([1, 1, 1.33]);
  translate([61, 71, 0])
    cube([1, 1, 1.33]);
  translate([62, 71, 0])
    cube([1, 1, 1.33]);
  translate([63, 71, 0])
    cube([1, 1, 1.33]);
  translate([64, 71, 0])
    cube([1, 1, 1.33]);
  translate([65, 71, 0])
    cube([1, 1, 0.98]);
  translate([66, 71, 0])
    cube([1, 1, 3.06]);
  translate([67, 71, 0])
    cube([1, 1, 1.29]);
  translate([68, 71, 0])
    cube([1, 1, 1.33]);
  translate([69, 71, 0])
    cube([1, 1, 1.45]);
  translate([70, 71, 0])
    cube([1, 1, 1.53]);
  translate([71, 71, 0])
    cube([1, 1, 1.41]);
  translate([72, 71, 0])
    cube([1, 1, 1.37]);
  translate([73, 71, 0])
    cube([1, 1, 1.45]);
  translate([74, 71, 0])
    cube([1, 1, 1.22]);
  translate([75, 71, 0])
    cube([1, 1, 1.33]);
  translate([76, 71, 0])
    cube([1, 1, 1.65]);
  translate([77, 71, 0])
    cube([1, 1, 1.06]);
  translate([78, 71, 0])
    cube([1, 1, 0.75]);
  translate([79, 71, 0])
    cube([1, 1, 1.33]);
  translate([80, 71, 0])
    cube([1, 1, 1.69]);
  translate([81, 71, 0])
    cube([1, 1, 1.80]);
  translate([82, 71, 0])
    cube([1, 1, 1.84]);
  translate([83, 71, 0])
    cube([1, 1, 1.80]);
  translate([84, 71, 0])
    cube([1, 1, 1.80]);
  translate([85, 71, 0])
    cube([1, 1, 1.84]);
  translate([86, 71, 0])
    cube([1, 1, 1.88]);
  translate([87, 71, 0])
    cube([1, 1, 2.08]);
  translate([88, 71, 0])
    cube([1, 1, 2.24]);
  translate([89, 71, 0])
    cube([1, 1, 1.96]);
  translate([90, 71, 0])
    cube([1, 1, 1.25]);
  translate([91, 71, 0])
    cube([1, 1, 1.29]);
  translate([92, 71, 0])
    cube([1, 1, 1.53]);
  translate([93, 71, 0])
    cube([1, 1, 2.08]);
  translate([94, 71, 0])
    cube([1, 1, 2.43]);
  translate([95, 71, 0])
    cube([1, 1, 2.78]);
  translate([96, 71, 0])
    cube([1, 1, 3.18]);
  translate([97, 71, 0])
    cube([1, 1, 3.61]);
  translate([98, 71, 0])
    cube([1, 1, 3.88]);
  translate([99, 71, 0])
    cube([1, 1, 3.88]);
  translate([100, 71, 0])
    cube([1, 1, 3.61]);
  translate([101, 71, 0])
    cube([1, 1, 3.22]);
  translate([102, 71, 0])
    cube([1, 1, 2.94]);
  translate([103, 71, 0])
    cube([1, 1, 3.37]);
  translate([104, 71, 0])
    cube([1, 1, 4.20]);
  translate([105, 71, 0])
    cube([1, 1, 4.24]);
  translate([106, 71, 0])
    cube([1, 1, 4.51]);
  translate([107, 71, 0])
    cube([1, 1, 5.37]);
  translate([108, 71, 0])
    cube([1, 1, 6.08]);
  translate([109, 71, 0])
    cube([1, 1, 6.39]);
  translate([110, 71, 0])
    cube([1, 1, 1.49]);
  translate([111, 71, 0])
    cube([1, 1, 1.65]);
  translate([112, 71, 0])
    cube([1, 1, 1.25]);
  translate([113, 71, 0])
    cube([1, 1, 1.25]);
  translate([114, 71, 0])
    cube([1, 1, 1.25]);
  translate([115, 71, 0])
    cube([1, 1, 1.25]);
  translate([116, 71, 0])
    cube([1, 1, 1.33]);
  translate([117, 71, 0])
    cube([1, 1, 1.41]);
  translate([118, 71, 0])
    cube([1, 1, 1.49]);
  translate([119, 71, 0])
    cube([1, 1, 1.76]);
  translate([120, 71, 0])
    cube([1, 1, 1.53]);
  translate([121, 71, 0])
    cube([1, 1, 1.25]);
  translate([122, 71, 0])
    cube([1, 1, 1.25]);
  translate([123, 71, 0])
    cube([1, 1, 1.25]);
  translate([124, 71, 0])
    cube([1, 1, 1.25]);
  translate([125, 71, 0])
    cube([1, 1, 1.25]);
  translate([126, 71, 0])
    cube([1, 1, 1.25]);
  translate([127, 71, 0])
    cube([1, 1, 1.25]);
  translate([128, 71, 0])
    cube([1, 1, 1.25]);
  translate([129, 71, 0])
    cube([1, 1, 1.25]);
  translate([130, 71, 0])
    cube([1, 1, 1.25]);
  translate([131, 71, 0])
    cube([1, 1, 1.25]);
  translate([132, 71, 0])
    cube([1, 1, 1.25]);
  translate([133, 71, 0])
    cube([1, 1, 1.25]);
  translate([134, 71, 0])
    cube([1, 1, 1.25]);
  translate([135, 71, 0])
    cube([1, 1, 1.25]);
  translate([136, 71, 0])
    cube([1, 1, 1.25]);
  translate([137, 71, 0])
    cube([1, 1, 1.22]);
  translate([138, 71, 0])
    cube([1, 1, 1.29]);
  translate([139, 71, 0])
    cube([1, 1, 1.29]);
  translate([140, 71, 0])
    cube([1, 1, 1.29]);
  translate([141, 71, 0])
    cube([1, 1, 1.29]);
  translate([142, 71, 0])
    cube([1, 1, 1.25]);
  translate([143, 71, 0])
    cube([1, 1, 1.25]);
  translate([144, 71, 0])
    cube([1, 1, 1.25]);
  translate([145, 71, 0])
    cube([1, 1, 1.25]);
  translate([146, 71, 0])
    cube([1, 1, 1.25]);
  translate([147, 71, 0])
    cube([1, 1, 1.29]);
  translate([148, 71, 0])
    cube([1, 1, 1.29]);
  translate([149, 71, 0])
    cube([1, 1, 1.29]);
  translate([150, 71, 0])
    cube([1, 1, 1.29]);
  translate([151, 71, 0])
    cube([1, 1, 1.29]);
  translate([152, 71, 0])
    cube([1, 1, 1.29]);
  translate([153, 71, 0])
    cube([1, 1, 1.29]);
  translate([154, 71, 0])
    cube([1, 1, 1.29]);
  translate([155, 71, 0])
    cube([1, 1, 1.29]);
  translate([156, 71, 0])
    cube([1, 1, 1.29]);
  translate([157, 71, 0])
    cube([1, 1, 1.29]);
  translate([158, 71, 0])
    cube([1, 1, 1.29]);
  translate([159, 71, 0])
    cube([1, 1, 1.29]);
  translate([160, 71, 0])
    cube([1, 1, 1.29]);
  translate([161, 71, 0])
    cube([1, 1, 1.29]);
  translate([162, 71, 0])
    cube([1, 1, 1.29]);
  translate([163, 71, 0])
    cube([1, 1, 1.29]);
  translate([164, 71, 0])
    cube([1, 1, 1.29]);
  translate([165, 71, 0])
    cube([1, 1, 1.29]);
  translate([166, 71, 0])
    cube([1, 1, 1.29]);
  translate([167, 71, 0])
    cube([1, 1, 1.29]);
  translate([168, 71, 0])
    cube([1, 1, 1.29]);
  translate([169, 71, 0])
    cube([1, 1, 1.29]);
  translate([170, 71, 0])
    cube([1, 1, 1.29]);
  translate([171, 71, 0])
    cube([1, 1, 1.29]);
  translate([172, 71, 0])
    cube([1, 1, 1.29]);
  translate([173, 71, 0])
    cube([1, 1, 1.29]);
  translate([174, 71, 0])
    cube([1, 1, 1.29]);
  translate([175, 71, 0])
    cube([1, 1, 1.29]);
  translate([176, 71, 0])
    cube([1, 1, 1.29]);
  translate([177, 71, 0])
    cube([1, 1, 1.29]);
  translate([178, 71, 0])
    cube([1, 1, 1.29]);
  translate([179, 71, 0])
    cube([1, 1, 1.29]);
  translate([180, 71, 0])
    cube([1, 1, 1.29]);
  translate([181, 71, 0])
    cube([1, 1, 1.29]);
  translate([182, 71, 0])
    cube([1, 1, 1.29]);
  translate([183, 71, 0])
    cube([1, 1, 1.29]);
  translate([184, 71, 0])
    cube([1, 1, 1.29]);
  translate([185, 71, 0])
    cube([1, 1, 1.29]);
  translate([186, 71, 0])
    cube([1, 1, 1.29]);
  translate([187, 71, 0])
    cube([1, 1, 1.29]);
  translate([188, 71, 0])
    cube([1, 1, 1.29]);
  translate([189, 71, 0])
    cube([1, 1, 1.29]);
  translate([190, 71, 0])
    cube([1, 1, 1.29]);
  translate([191, 71, 0])
    cube([1, 1, 1.29]);
  translate([192, 71, 0])
    cube([1, 1, 1.25]);
  translate([193, 71, 0])
    cube([1, 1, 1.29]);
  translate([194, 71, 0])
    cube([1, 1, 1.29]);
  translate([195, 71, 0])
    cube([1, 1, 1.29]);
  translate([196, 71, 0])
    cube([1, 1, 1.25]);
  translate([197, 71, 0])
    cube([1, 1, 1.29]);
  translate([198, 71, 0])
    cube([1, 1, 1.29]);
  translate([199, 71, 0])
    cube([1, 1, 1.29]);
  translate([200, 71, 0])
    cube([1, 1, 1.29]);
  translate([201, 71, 0])
    cube([1, 1, 1.25]);
  translate([202, 71, 0])
    cube([1, 1, 1.29]);
  translate([203, 71, 0])
    cube([1, 1, 1.29]);
  translate([204, 71, 0])
    cube([1, 1, 1.25]);
  translate([205, 71, 0])
    cube([1, 1, 1.29]);
  translate([206, 71, 0])
    cube([1, 1, 1.29]);
  translate([207, 71, 0])
    cube([1, 1, 1.29]);
  translate([208, 71, 0])
    cube([1, 1, 1.33]);
  translate([209, 71, 0])
    cube([1, 1, 1.33]);
  translate([210, 71, 0])
    cube([1, 1, 1.25]);
  translate([211, 71, 0])
    cube([1, 1, 1.29]);
  translate([212, 71, 0])
    cube([1, 1, 1.25]);
  translate([213, 71, 0])
    cube([1, 1, 1.25]);
  translate([214, 71, 0])
    cube([1, 1, 1.25]);
  translate([215, 71, 0])
    cube([1, 1, 1.25]);
  translate([216, 71, 0])
    cube([1, 1, 1.25]);
  translate([217, 71, 0])
    cube([1, 1, 1.22]);
  translate([218, 71, 0])
    cube([1, 1, 1.29]);
  translate([219, 71, 0])
    cube([1, 1, 1.25]);
  translate([220, 71, 0])
    cube([1, 1, 1.25]);
  translate([221, 71, 0])
    cube([1, 1, 1.22]);
  translate([222, 71, 0])
    cube([1, 1, 1.25]);
  translate([223, 71, 0])
    cube([1, 1, 1.25]);
  translate([224, 71, 0])
    cube([1, 1, 1.25]);
  translate([225, 71, 0])
    cube([1, 1, 1.25]);
  translate([226, 71, 0])
    cube([1, 1, 1.25]);
  translate([227, 71, 0])
    cube([1, 1, 1.25]);
  translate([228, 71, 0])
    cube([1, 1, 1.25]);
  translate([229, 71, 0])
    cube([1, 1, 1.25]);
  translate([230, 71, 0])
    cube([1, 1, 1.25]);
  translate([231, 71, 0])
    cube([1, 1, 1.25]);
  translate([232, 71, 0])
    cube([1, 1, 1.25]);
  translate([233, 71, 0])
    cube([1, 1, 1.25]);
  translate([234, 71, 0])
    cube([1, 1, 1.25]);
  translate([235, 71, 0])
    cube([1, 1, 1.25]);
  translate([236, 71, 0])
    cube([1, 1, 1.25]);
  translate([237, 71, 0])
    cube([1, 1, 1.25]);
  translate([238, 71, 0])
    cube([1, 1, 1.25]);
  translate([239, 71, 0])
    cube([1, 1, 1.25]);
  translate([240, 71, 0])
    cube([1, 1, 1.25]);
  translate([241, 71, 0])
    cube([1, 1, 1.25]);
  translate([242, 71, 0])
    cube([1, 1, 1.25]);
  translate([243, 71, 0])
    cube([1, 1, 1.25]);
  translate([244, 71, 0])
    cube([1, 1, 1.25]);
  translate([245, 71, 0])
    cube([1, 1, 1.25]);
  translate([246, 71, 0])
    cube([1, 1, 1.25]);
  translate([0, 72, 0])
    cube([1, 1, 1.41]);
  translate([1, 72, 0])
    cube([1, 1, 1.37]);
  translate([2, 72, 0])
    cube([1, 1, 1.45]);
  translate([3, 72, 0])
    cube([1, 1, 1.45]);
  translate([4, 72, 0])
    cube([1, 1, 1.41]);
  translate([5, 72, 0])
    cube([1, 1, 1.45]);
  translate([6, 72, 0])
    cube([1, 1, 1.41]);
  translate([7, 72, 0])
    cube([1, 1, 1.41]);
  translate([8, 72, 0])
    cube([1, 1, 1.41]);
  translate([9, 72, 0])
    cube([1, 1, 1.41]);
  translate([10, 72, 0])
    cube([1, 1, 1.45]);
  translate([11, 72, 0])
    cube([1, 1, 1.41]);
  translate([12, 72, 0])
    cube([1, 1, 1.41]);
  translate([13, 72, 0])
    cube([1, 1, 1.41]);
  translate([14, 72, 0])
    cube([1, 1, 1.41]);
  translate([15, 72, 0])
    cube([1, 1, 1.41]);
  translate([16, 72, 0])
    cube([1, 1, 1.41]);
  translate([17, 72, 0])
    cube([1, 1, 1.41]);
  translate([18, 72, 0])
    cube([1, 1, 1.41]);
  translate([19, 72, 0])
    cube([1, 1, 1.41]);
  translate([20, 72, 0])
    cube([1, 1, 1.41]);
  translate([21, 72, 0])
    cube([1, 1, 1.41]);
  translate([22, 72, 0])
    cube([1, 1, 1.14]);
  translate([23, 72, 0])
    cube([1, 1, 1.92]);
  translate([24, 72, 0])
    cube([1, 1, 2.67]);
  translate([25, 72, 0])
    cube([1, 1, 1.45]);
  translate([26, 72, 0])
    cube([1, 1, 1.06]);
  translate([27, 72, 0])
    cube([1, 1, 0.35]);
  translate([28, 72, 0])
    cube([1, 1, 4.12]);
  translate([29, 72, 0])
    cube([1, 1, 6.08]);
  translate([30, 72, 0])
    cube([1, 1, 6.90]);
  translate([31, 72, 0])
    cube([1, 1, 6.59]);
  translate([32, 72, 0])
    cube([1, 1, 0.51]);
  translate([33, 72, 0])
    cube([1, 1, 0.67]);
  translate([34, 72, 0])
    cube([1, 1, 2.55]);
  translate([35, 72, 0])
    cube([1, 1, 0.47]);
  translate([36, 72, 0])
    cube([1, 1, 1.02]);
  translate([37, 72, 0])
    cube([1, 1, 0.59]);
  translate([38, 72, 0])
    cube([1, 1, 0.86]);
  translate([39, 72, 0])
    cube([1, 1, 1.49]);
  translate([40, 72, 0])
    cube([1, 1, 1.37]);
  translate([41, 72, 0])
    cube([1, 1, 1.37]);
  translate([42, 72, 0])
    cube([1, 1, 1.14]);
  translate([43, 72, 0])
    cube([1, 1, 1.22]);
  translate([44, 72, 0])
    cube([1, 1, 1.69]);
  translate([45, 72, 0])
    cube([1, 1, 1.53]);
  translate([46, 72, 0])
    cube([1, 1, 1.37]);
  translate([47, 72, 0])
    cube([1, 1, 1.37]);
  translate([48, 72, 0])
    cube([1, 1, 1.37]);
  translate([49, 72, 0])
    cube([1, 1, 1.37]);
  translate([50, 72, 0])
    cube([1, 1, 1.37]);
  translate([51, 72, 0])
    cube([1, 1, 1.33]);
  translate([52, 72, 0])
    cube([1, 1, 1.33]);
  translate([53, 72, 0])
    cube([1, 1, 1.33]);
  translate([54, 72, 0])
    cube([1, 1, 1.29]);
  translate([55, 72, 0])
    cube([1, 1, 1.29]);
  translate([56, 72, 0])
    cube([1, 1, 1.33]);
  translate([57, 72, 0])
    cube([1, 1, 1.33]);
  translate([58, 72, 0])
    cube([1, 1, 1.33]);
  translate([59, 72, 0])
    cube([1, 1, 1.33]);
  translate([60, 72, 0])
    cube([1, 1, 1.33]);
  translate([61, 72, 0])
    cube([1, 1, 1.33]);
  translate([62, 72, 0])
    cube([1, 1, 1.33]);
  translate([63, 72, 0])
    cube([1, 1, 1.33]);
  translate([64, 72, 0])
    cube([1, 1, 1.33]);
  translate([65, 72, 0])
    cube([1, 1, 1.41]);
  translate([66, 72, 0])
    cube([1, 1, 8.39]);
  translate([67, 72, 0])
    cube([1, 1, 3.06]);
  translate([68, 72, 0])
    cube([1, 1, 1.25]);
  translate([69, 72, 0])
    cube([1, 1, 1.65]);
  translate([70, 72, 0])
    cube([1, 1, 1.53]);
  translate([71, 72, 0])
    cube([1, 1, 1.53]);
  translate([72, 72, 0])
    cube([1, 1, 0.90]);
  translate([73, 72, 0])
    cube([1, 1, 1.53]);
  translate([74, 72, 0])
    cube([1, 1, 1.49]);
  translate([75, 72, 0])
    cube([1, 1, 1.65]);
  translate([76, 72, 0])
    cube([1, 1, 1.61]);
  translate([77, 72, 0])
    cube([1, 1, 1.49]);
  translate([78, 72, 0])
    cube([1, 1, 1.18]);
  translate([79, 72, 0])
    cube([1, 1, 1.57]);
  translate([80, 72, 0])
    cube([1, 1, 1.96]);
  translate([81, 72, 0])
    cube([1, 1, 2.00]);
  translate([82, 72, 0])
    cube([1, 1, 2.12]);
  translate([83, 72, 0])
    cube([1, 1, 2.04]);
  translate([84, 72, 0])
    cube([1, 1, 2.16]);
  translate([85, 72, 0])
    cube([1, 1, 2.00]);
  translate([86, 72, 0])
    cube([1, 1, 2.12]);
  translate([87, 72, 0])
    cube([1, 1, 2.31]);
  translate([88, 72, 0])
    cube([1, 1, 2.47]);
  translate([89, 72, 0])
    cube([1, 1, 2.39]);
  translate([90, 72, 0])
    cube([1, 1, 1.65]);
  translate([91, 72, 0])
    cube([1, 1, 1.65]);
  translate([92, 72, 0])
    cube([1, 1, 1.65]);
  translate([93, 72, 0])
    cube([1, 1, 1.84]);
  translate([94, 72, 0])
    cube([1, 1, 2.12]);
  translate([95, 72, 0])
    cube([1, 1, 2.27]);
  translate([96, 72, 0])
    cube([1, 1, 2.94]);
  translate([97, 72, 0])
    cube([1, 1, 3.41]);
  translate([98, 72, 0])
    cube([1, 1, 4.04]);
  translate([99, 72, 0])
    cube([1, 1, 4.35]);
  translate([100, 72, 0])
    cube([1, 1, 4.78]);
  translate([101, 72, 0])
    cube([1, 1, 4.86]);
  translate([102, 72, 0])
    cube([1, 1, 4.55]);
  translate([103, 72, 0])
    cube([1, 1, 4.51]);
  translate([104, 72, 0])
    cube([1, 1, 4.43]);
  translate([105, 72, 0])
    cube([1, 1, 4.82]);
  translate([106, 72, 0])
    cube([1, 1, 5.41]);
  translate([107, 72, 0])
    cube([1, 1, 6.12]);
  translate([108, 72, 0])
    cube([1, 1, 6.35]);
  translate([109, 72, 0])
    cube([1, 1, 0.71]);
  translate([110, 72, 0])
    cube([1, 1, 1.25]);
  translate([111, 72, 0])
    cube([1, 1, 1.25]);
  translate([112, 72, 0])
    cube([1, 1, 1.25]);
  translate([113, 72, 0])
    cube([1, 1, 1.25]);
  translate([114, 72, 0])
    cube([1, 1, 1.25]);
  translate([115, 72, 0])
    cube([1, 1, 1.25]);
  translate([116, 72, 0])
    cube([1, 1, 1.18]);
  translate([117, 72, 0])
    cube([1, 1, 1.22]);
  translate([118, 72, 0])
    cube([1, 1, 0.86]);
  translate([119, 72, 0])
    cube([1, 1, 1.14]);
  translate([120, 72, 0])
    cube([1, 1, 1.25]);
  translate([121, 72, 0])
    cube([1, 1, 1.25]);
  translate([122, 72, 0])
    cube([1, 1, 1.25]);
  translate([123, 72, 0])
    cube([1, 1, 1.25]);
  translate([124, 72, 0])
    cube([1, 1, 1.25]);
  translate([125, 72, 0])
    cube([1, 1, 1.25]);
  translate([126, 72, 0])
    cube([1, 1, 1.25]);
  translate([127, 72, 0])
    cube([1, 1, 1.25]);
  translate([128, 72, 0])
    cube([1, 1, 1.29]);
  translate([129, 72, 0])
    cube([1, 1, 1.25]);
  translate([130, 72, 0])
    cube([1, 1, 1.25]);
  translate([131, 72, 0])
    cube([1, 1, 1.25]);
  translate([132, 72, 0])
    cube([1, 1, 1.25]);
  translate([133, 72, 0])
    cube([1, 1, 1.25]);
  translate([134, 72, 0])
    cube([1, 1, 1.25]);
  translate([135, 72, 0])
    cube([1, 1, 1.25]);
  translate([136, 72, 0])
    cube([1, 1, 1.25]);
  translate([137, 72, 0])
    cube([1, 1, 1.22]);
  translate([138, 72, 0])
    cube([1, 1, 1.29]);
  translate([139, 72, 0])
    cube([1, 1, 1.25]);
  translate([140, 72, 0])
    cube([1, 1, 1.25]);
  translate([141, 72, 0])
    cube([1, 1, 1.29]);
  translate([142, 72, 0])
    cube([1, 1, 1.29]);
  translate([143, 72, 0])
    cube([1, 1, 1.22]);
  translate([144, 72, 0])
    cube([1, 1, 1.29]);
  translate([145, 72, 0])
    cube([1, 1, 1.29]);
  translate([146, 72, 0])
    cube([1, 1, 1.29]);
  translate([147, 72, 0])
    cube([1, 1, 1.29]);
  translate([148, 72, 0])
    cube([1, 1, 1.29]);
  translate([149, 72, 0])
    cube([1, 1, 1.29]);
  translate([150, 72, 0])
    cube([1, 1, 1.29]);
  translate([151, 72, 0])
    cube([1, 1, 1.29]);
  translate([152, 72, 0])
    cube([1, 1, 1.29]);
  translate([153, 72, 0])
    cube([1, 1, 1.29]);
  translate([154, 72, 0])
    cube([1, 1, 1.29]);
  translate([155, 72, 0])
    cube([1, 1, 1.29]);
  translate([156, 72, 0])
    cube([1, 1, 1.29]);
  translate([157, 72, 0])
    cube([1, 1, 1.29]);
  translate([158, 72, 0])
    cube([1, 1, 1.29]);
  translate([159, 72, 0])
    cube([1, 1, 1.29]);
  translate([160, 72, 0])
    cube([1, 1, 1.29]);
  translate([161, 72, 0])
    cube([1, 1, 1.29]);
  translate([162, 72, 0])
    cube([1, 1, 1.29]);
  translate([163, 72, 0])
    cube([1, 1, 1.29]);
  translate([164, 72, 0])
    cube([1, 1, 1.29]);
  translate([165, 72, 0])
    cube([1, 1, 1.29]);
  translate([166, 72, 0])
    cube([1, 1, 1.29]);
  translate([167, 72, 0])
    cube([1, 1, 1.29]);
  translate([168, 72, 0])
    cube([1, 1, 1.29]);
  translate([169, 72, 0])
    cube([1, 1, 1.29]);
  translate([170, 72, 0])
    cube([1, 1, 1.29]);
  translate([171, 72, 0])
    cube([1, 1, 1.29]);
  translate([172, 72, 0])
    cube([1, 1, 1.25]);
  translate([173, 72, 0])
    cube([1, 1, 1.25]);
  translate([174, 72, 0])
    cube([1, 1, 1.29]);
  translate([175, 72, 0])
    cube([1, 1, 1.29]);
  translate([176, 72, 0])
    cube([1, 1, 1.29]);
  translate([177, 72, 0])
    cube([1, 1, 1.29]);
  translate([178, 72, 0])
    cube([1, 1, 1.29]);
  translate([179, 72, 0])
    cube([1, 1, 1.29]);
  translate([180, 72, 0])
    cube([1, 1, 1.29]);
  translate([181, 72, 0])
    cube([1, 1, 1.29]);
  translate([182, 72, 0])
    cube([1, 1, 1.29]);
  translate([183, 72, 0])
    cube([1, 1, 1.29]);
  translate([184, 72, 0])
    cube([1, 1, 1.29]);
  translate([185, 72, 0])
    cube([1, 1, 1.29]);
  translate([186, 72, 0])
    cube([1, 1, 1.29]);
  translate([187, 72, 0])
    cube([1, 1, 1.29]);
  translate([188, 72, 0])
    cube([1, 1, 1.29]);
  translate([189, 72, 0])
    cube([1, 1, 1.29]);
  translate([190, 72, 0])
    cube([1, 1, 1.29]);
  translate([191, 72, 0])
    cube([1, 1, 1.29]);
  translate([192, 72, 0])
    cube([1, 1, 1.29]);
  translate([193, 72, 0])
    cube([1, 1, 1.29]);
  translate([194, 72, 0])
    cube([1, 1, 1.29]);
  translate([195, 72, 0])
    cube([1, 1, 1.29]);
  translate([196, 72, 0])
    cube([1, 1, 1.29]);
  translate([197, 72, 0])
    cube([1, 1, 1.29]);
  translate([198, 72, 0])
    cube([1, 1, 1.29]);
  translate([199, 72, 0])
    cube([1, 1, 1.29]);
  translate([200, 72, 0])
    cube([1, 1, 1.29]);
  translate([201, 72, 0])
    cube([1, 1, 1.25]);
  translate([202, 72, 0])
    cube([1, 1, 1.29]);
  translate([203, 72, 0])
    cube([1, 1, 1.25]);
  translate([204, 72, 0])
    cube([1, 1, 1.18]);
  translate([205, 72, 0])
    cube([1, 1, 1.29]);
  translate([206, 72, 0])
    cube([1, 1, 1.25]);
  translate([207, 72, 0])
    cube([1, 1, 1.22]);
  translate([208, 72, 0])
    cube([1, 1, 1.25]);
  translate([209, 72, 0])
    cube([1, 1, 1.33]);
  translate([210, 72, 0])
    cube([1, 1, 1.33]);
  translate([211, 72, 0])
    cube([1, 1, 1.25]);
  translate([212, 72, 0])
    cube([1, 1, 1.25]);
  translate([213, 72, 0])
    cube([1, 1, 1.29]);
  translate([214, 72, 0])
    cube([1, 1, 1.25]);
  translate([215, 72, 0])
    cube([1, 1, 1.25]);
  translate([216, 72, 0])
    cube([1, 1, 1.29]);
  translate([217, 72, 0])
    cube([1, 1, 1.29]);
  translate([218, 72, 0])
    cube([1, 1, 1.29]);
  translate([219, 72, 0])
    cube([1, 1, 1.25]);
  translate([220, 72, 0])
    cube([1, 1, 1.25]);
  translate([221, 72, 0])
    cube([1, 1, 1.25]);
  translate([222, 72, 0])
    cube([1, 1, 1.22]);
  translate([223, 72, 0])
    cube([1, 1, 1.29]);
  translate([224, 72, 0])
    cube([1, 1, 1.25]);
  translate([225, 72, 0])
    cube([1, 1, 1.25]);
  translate([226, 72, 0])
    cube([1, 1, 1.25]);
  translate([227, 72, 0])
    cube([1, 1, 1.25]);
  translate([228, 72, 0])
    cube([1, 1, 1.25]);
  translate([229, 72, 0])
    cube([1, 1, 1.25]);
  translate([230, 72, 0])
    cube([1, 1, 1.25]);
  translate([231, 72, 0])
    cube([1, 1, 1.25]);
  translate([232, 72, 0])
    cube([1, 1, 1.29]);
  translate([233, 72, 0])
    cube([1, 1, 1.25]);
  translate([234, 72, 0])
    cube([1, 1, 1.25]);
  translate([235, 72, 0])
    cube([1, 1, 1.25]);
  translate([236, 72, 0])
    cube([1, 1, 1.25]);
  translate([237, 72, 0])
    cube([1, 1, 1.25]);
  translate([238, 72, 0])
    cube([1, 1, 1.25]);
  translate([239, 72, 0])
    cube([1, 1, 1.25]);
  translate([240, 72, 0])
    cube([1, 1, 1.25]);
  translate([241, 72, 0])
    cube([1, 1, 1.25]);
  translate([242, 72, 0])
    cube([1, 1, 1.25]);
  translate([243, 72, 0])
    cube([1, 1, 1.25]);
  translate([244, 72, 0])
    cube([1, 1, 1.25]);
  translate([245, 72, 0])
    cube([1, 1, 1.25]);
  translate([246, 72, 0])
    cube([1, 1, 1.25]);
  translate([0, 73, 0])
    cube([1, 1, 1.41]);
  translate([1, 73, 0])
    cube([1, 1, 1.37]);
  translate([2, 73, 0])
    cube([1, 1, 1.45]);
  translate([3, 73, 0])
    cube([1, 1, 1.45]);
  translate([4, 73, 0])
    cube([1, 1, 1.41]);
  translate([5, 73, 0])
    cube([1, 1, 1.45]);
  translate([6, 73, 0])
    cube([1, 1, 1.41]);
  translate([7, 73, 0])
    cube([1, 1, 1.41]);
  translate([8, 73, 0])
    cube([1, 1, 1.41]);
  translate([9, 73, 0])
    cube([1, 1, 1.41]);
  translate([10, 73, 0])
    cube([1, 1, 1.45]);
  translate([11, 73, 0])
    cube([1, 1, 1.41]);
  translate([12, 73, 0])
    cube([1, 1, 1.41]);
  translate([13, 73, 0])
    cube([1, 1, 1.41]);
  translate([14, 73, 0])
    cube([1, 1, 1.41]);
  translate([15, 73, 0])
    cube([1, 1, 1.41]);
  translate([16, 73, 0])
    cube([1, 1, 1.41]);
  translate([17, 73, 0])
    cube([1, 1, 1.41]);
  translate([18, 73, 0])
    cube([1, 1, 1.41]);
  translate([19, 73, 0])
    cube([1, 1, 1.41]);
  translate([20, 73, 0])
    cube([1, 1, 1.41]);
  translate([21, 73, 0])
    cube([1, 1, 1.41]);
  translate([22, 73, 0])
    cube([1, 1, 1.57]);
  translate([23, 73, 0])
    cube([1, 1, 5.33]);
  translate([24, 73, 0])
    cube([1, 1, 1.65]);
  translate([25, 73, 0])
    cube([1, 1, 1.41]);
  translate([26, 73, 0])
    cube([1, 1, 1.18]);
  translate([27, 73, 0])
    cube([1, 1, 0.16]);
  translate([28, 73, 0])
    cube([1, 1, 4.51]);
  translate([29, 73, 0])
    cube([1, 1, 5.76]);
  translate([30, 73, 0])
    cube([1, 1, 6.86]);
  translate([31, 73, 0])
    cube([1, 1, 6.67]);
  translate([32, 73, 0])
    cube([1, 1, 0.75]);
  translate([33, 73, 0])
    cube([1, 1, 0.78]);
  translate([34, 73, 0])
    cube([1, 1, 1.06]);
  translate([35, 73, 0])
    cube([1, 1, 0.39]);
  translate([36, 73, 0])
    cube([1, 1, 0.82]);
  translate([37, 73, 0])
    cube([1, 1, 0.82]);
  translate([38, 73, 0])
    cube([1, 1, 0.55]);
  translate([39, 73, 0])
    cube([1, 1, 5.57]);
  translate([40, 73, 0])
    cube([1, 1, 6.43]);
  translate([41, 73, 0])
    cube([1, 1, 6.35]);
  translate([42, 73, 0])
    cube([1, 1, 6.51]);
  translate([43, 73, 0])
    cube([1, 1, 6.43]);
  translate([44, 73, 0])
    cube([1, 1, 6.12]);
  translate([45, 73, 0])
    cube([1, 1, 0.78]);
  translate([46, 73, 0])
    cube([1, 1, 1.33]);
  translate([47, 73, 0])
    cube([1, 1, 1.33]);
  translate([48, 73, 0])
    cube([1, 1, 1.37]);
  translate([49, 73, 0])
    cube([1, 1, 1.33]);
  translate([50, 73, 0])
    cube([1, 1, 1.33]);
  translate([51, 73, 0])
    cube([1, 1, 1.33]);
  translate([52, 73, 0])
    cube([1, 1, 1.33]);
  translate([53, 73, 0])
    cube([1, 1, 1.33]);
  translate([54, 73, 0])
    cube([1, 1, 1.37]);
  translate([55, 73, 0])
    cube([1, 1, 1.37]);
  translate([56, 73, 0])
    cube([1, 1, 1.33]);
  translate([57, 73, 0])
    cube([1, 1, 1.33]);
  translate([58, 73, 0])
    cube([1, 1, 1.33]);
  translate([59, 73, 0])
    cube([1, 1, 1.33]);
  translate([60, 73, 0])
    cube([1, 1, 1.33]);
  translate([61, 73, 0])
    cube([1, 1, 1.33]);
  translate([62, 73, 0])
    cube([1, 1, 1.33]);
  translate([63, 73, 0])
    cube([1, 1, 1.33]);
  translate([64, 73, 0])
    cube([1, 1, 1.33]);
  translate([65, 73, 0])
    cube([1, 1, 2.86]);
  translate([66, 73, 0])
    cube([1, 1, 6.55]);
  translate([67, 73, 0])
    cube([1, 1, 4.12]);
  translate([68, 73, 0])
    cube([1, 1, 2.08]);
  translate([69, 73, 0])
    cube([1, 1, 1.29]);
  translate([70, 73, 0])
    cube([1, 1, 1.49]);
  translate([71, 73, 0])
    cube([1, 1, 1.45]);
  translate([72, 73, 0])
    cube([1, 1, 0.67]);
  translate([73, 73, 0])
    cube([1, 1, 1.37]);
  translate([74, 73, 0])
    cube([1, 1, 1.65]);
  translate([75, 73, 0])
    cube([1, 1, 1.84]);
  translate([76, 73, 0])
    cube([1, 1, 1.96]);
  translate([77, 73, 0])
    cube([1, 1, 1.41]);
  translate([78, 73, 0])
    cube([1, 1, 1.53]);
  translate([79, 73, 0])
    cube([1, 1, 2.00]);
  translate([80, 73, 0])
    cube([1, 1, 2.31]);
  translate([81, 73, 0])
    cube([1, 1, 2.47]);
  translate([82, 73, 0])
    cube([1, 1, 2.51]);
  translate([83, 73, 0])
    cube([1, 1, 2.63]);
  translate([84, 73, 0])
    cube([1, 1, 2.59]);
  translate([85, 73, 0])
    cube([1, 1, 2.51]);
  translate([86, 73, 0])
    cube([1, 1, 2.39]);
  translate([87, 73, 0])
    cube([1, 1, 2.55]);
  translate([88, 73, 0])
    cube([1, 1, 2.71]);
  translate([89, 73, 0])
    cube([1, 1, 2.78]);
  translate([90, 73, 0])
    cube([1, 1, 1.37]);
  translate([91, 73, 0])
    cube([1, 1, 1.61]);
  translate([92, 73, 0])
    cube([1, 1, 1.65]);
  translate([93, 73, 0])
    cube([1, 1, 1.65]);
  translate([94, 73, 0])
    cube([1, 1, 1.61]);
  translate([95, 73, 0])
    cube([1, 1, 2.12]);
  translate([96, 73, 0])
    cube([1, 1, 2.43]);
  translate([97, 73, 0])
    cube([1, 1, 3.10]);
  translate([98, 73, 0])
    cube([1, 1, 3.88]);
  translate([99, 73, 0])
    cube([1, 1, 4.51]);
  translate([100, 73, 0])
    cube([1, 1, 4.98]);
  translate([101, 73, 0])
    cube([1, 1, 5.41]);
  translate([102, 73, 0])
    cube([1, 1, 5.65]);
  translate([103, 73, 0])
    cube([1, 1, 5.61]);
  translate([104, 73, 0])
    cube([1, 1, 5.49]);
  translate([105, 73, 0])
    cube([1, 1, 5.80]);
  translate([106, 73, 0])
    cube([1, 1, 6.04]);
  translate([107, 73, 0])
    cube([1, 1, 6.39]);
  translate([108, 73, 0])
    cube([1, 1, 3.88]);
  translate([109, 73, 0])
    cube([1, 1, 1.33]);
  translate([110, 73, 0])
    cube([1, 1, 1.25]);
  translate([111, 73, 0])
    cube([1, 1, 1.25]);
  translate([112, 73, 0])
    cube([1, 1, 1.25]);
  translate([113, 73, 0])
    cube([1, 1, 1.25]);
  translate([114, 73, 0])
    cube([1, 1, 1.25]);
  translate([115, 73, 0])
    cube([1, 1, 1.25]);
  translate([116, 73, 0])
    cube([1, 1, 1.45]);
  translate([117, 73, 0])
    cube([1, 1, 1.53]);
  translate([118, 73, 0])
    cube([1, 1, 1.18]);
  translate([119, 73, 0])
    cube([1, 1, 1.49]);
  translate([120, 73, 0])
    cube([1, 1, 1.25]);
  translate([121, 73, 0])
    cube([1, 1, 1.25]);
  translate([122, 73, 0])
    cube([1, 1, 1.25]);
  translate([123, 73, 0])
    cube([1, 1, 1.25]);
  translate([124, 73, 0])
    cube([1, 1, 1.25]);
  translate([125, 73, 0])
    cube([1, 1, 1.25]);
  translate([126, 73, 0])
    cube([1, 1, 1.25]);
  translate([127, 73, 0])
    cube([1, 1, 1.25]);
  translate([128, 73, 0])
    cube([1, 1, 1.29]);
  translate([129, 73, 0])
    cube([1, 1, 1.25]);
  translate([130, 73, 0])
    cube([1, 1, 1.25]);
  translate([131, 73, 0])
    cube([1, 1, 1.25]);
  translate([132, 73, 0])
    cube([1, 1, 1.25]);
  translate([133, 73, 0])
    cube([1, 1, 1.25]);
  translate([134, 73, 0])
    cube([1, 1, 1.29]);
  translate([135, 73, 0])
    cube([1, 1, 1.29]);
  translate([136, 73, 0])
    cube([1, 1, 1.25]);
  translate([137, 73, 0])
    cube([1, 1, 1.22]);
  translate([138, 73, 0])
    cube([1, 1, 1.29]);
  translate([139, 73, 0])
    cube([1, 1, 1.25]);
  translate([140, 73, 0])
    cube([1, 1, 1.25]);
  translate([141, 73, 0])
    cube([1, 1, 1.29]);
  translate([142, 73, 0])
    cube([1, 1, 1.25]);
  translate([143, 73, 0])
    cube([1, 1, 1.33]);
  translate([144, 73, 0])
    cube([1, 1, 1.29]);
  translate([145, 73, 0])
    cube([1, 1, 1.29]);
  translate([146, 73, 0])
    cube([1, 1, 1.29]);
  translate([147, 73, 0])
    cube([1, 1, 1.29]);
  translate([148, 73, 0])
    cube([1, 1, 1.29]);
  translate([149, 73, 0])
    cube([1, 1, 1.29]);
  translate([150, 73, 0])
    cube([1, 1, 1.29]);
  translate([151, 73, 0])
    cube([1, 1, 1.29]);
  translate([152, 73, 0])
    cube([1, 1, 1.29]);
  translate([153, 73, 0])
    cube([1, 1, 1.29]);
  translate([154, 73, 0])
    cube([1, 1, 1.29]);
  translate([155, 73, 0])
    cube([1, 1, 1.29]);
  translate([156, 73, 0])
    cube([1, 1, 1.29]);
  translate([157, 73, 0])
    cube([1, 1, 1.29]);
  translate([158, 73, 0])
    cube([1, 1, 1.29]);
  translate([159, 73, 0])
    cube([1, 1, 1.29]);
  translate([160, 73, 0])
    cube([1, 1, 1.29]);
  translate([161, 73, 0])
    cube([1, 1, 1.29]);
  translate([162, 73, 0])
    cube([1, 1, 1.29]);
  translate([163, 73, 0])
    cube([1, 1, 1.29]);
  translate([164, 73, 0])
    cube([1, 1, 1.29]);
  translate([165, 73, 0])
    cube([1, 1, 1.29]);
  translate([166, 73, 0])
    cube([1, 1, 1.29]);
  translate([167, 73, 0])
    cube([1, 1, 1.29]);
  translate([168, 73, 0])
    cube([1, 1, 1.29]);
  translate([169, 73, 0])
    cube([1, 1, 1.29]);
  translate([170, 73, 0])
    cube([1, 1, 1.29]);
  translate([171, 73, 0])
    cube([1, 1, 1.29]);
  translate([172, 73, 0])
    cube([1, 1, 1.29]);
  translate([173, 73, 0])
    cube([1, 1, 1.29]);
  translate([174, 73, 0])
    cube([1, 1, 1.29]);
  translate([175, 73, 0])
    cube([1, 1, 1.29]);
  translate([176, 73, 0])
    cube([1, 1, 1.29]);
  translate([177, 73, 0])
    cube([1, 1, 1.29]);
  translate([178, 73, 0])
    cube([1, 1, 1.29]);
  translate([179, 73, 0])
    cube([1, 1, 1.29]);
  translate([180, 73, 0])
    cube([1, 1, 1.29]);
  translate([181, 73, 0])
    cube([1, 1, 1.29]);
  translate([182, 73, 0])
    cube([1, 1, 1.29]);
  translate([183, 73, 0])
    cube([1, 1, 1.29]);
  translate([184, 73, 0])
    cube([1, 1, 1.29]);
  translate([185, 73, 0])
    cube([1, 1, 1.29]);
  translate([186, 73, 0])
    cube([1, 1, 1.29]);
  translate([187, 73, 0])
    cube([1, 1, 1.29]);
  translate([188, 73, 0])
    cube([1, 1, 1.29]);
  translate([189, 73, 0])
    cube([1, 1, 1.29]);
  translate([190, 73, 0])
    cube([1, 1, 1.29]);
  translate([191, 73, 0])
    cube([1, 1, 1.29]);
  translate([192, 73, 0])
    cube([1, 1, 1.29]);
  translate([193, 73, 0])
    cube([1, 1, 1.29]);
  translate([194, 73, 0])
    cube([1, 1, 1.29]);
  translate([195, 73, 0])
    cube([1, 1, 1.29]);
  translate([196, 73, 0])
    cube([1, 1, 1.29]);
  translate([197, 73, 0])
    cube([1, 1, 1.29]);
  translate([198, 73, 0])
    cube([1, 1, 1.29]);
  translate([199, 73, 0])
    cube([1, 1, 1.29]);
  translate([200, 73, 0])
    cube([1, 1, 1.29]);
  translate([201, 73, 0])
    cube([1, 1, 1.25]);
  translate([202, 73, 0])
    cube([1, 1, 1.33]);
  translate([203, 73, 0])
    cube([1, 1, 1.25]);
  translate([204, 73, 0])
    cube([1, 1, 1.25]);
  translate([205, 73, 0])
    cube([1, 1, 1.25]);
  translate([206, 73, 0])
    cube([1, 1, 1.25]);
  translate([207, 73, 0])
    cube([1, 1, 1.22]);
  translate([208, 73, 0])
    cube([1, 1, 1.25]);
  translate([209, 73, 0])
    cube([1, 1, 1.25]);
  translate([210, 73, 0])
    cube([1, 1, 1.25]);
  translate([211, 73, 0])
    cube([1, 1, 1.25]);
  translate([212, 73, 0])
    cube([1, 1, 1.25]);
  translate([213, 73, 0])
    cube([1, 1, 1.29]);
  translate([214, 73, 0])
    cube([1, 1, 1.29]);
  translate([215, 73, 0])
    cube([1, 1, 1.29]);
  translate([216, 73, 0])
    cube([1, 1, 1.22]);
  translate([217, 73, 0])
    cube([1, 1, 1.29]);
  translate([218, 73, 0])
    cube([1, 1, 1.29]);
  translate([219, 73, 0])
    cube([1, 1, 1.25]);
  translate([220, 73, 0])
    cube([1, 1, 1.25]);
  translate([221, 73, 0])
    cube([1, 1, 1.25]);
  translate([222, 73, 0])
    cube([1, 1, 1.25]);
  translate([223, 73, 0])
    cube([1, 1, 1.22]);
  translate([224, 73, 0])
    cube([1, 1, 1.25]);
  translate([225, 73, 0])
    cube([1, 1, 1.25]);
  translate([226, 73, 0])
    cube([1, 1, 1.25]);
  translate([227, 73, 0])
    cube([1, 1, 1.25]);
  translate([228, 73, 0])
    cube([1, 1, 1.25]);
  translate([229, 73, 0])
    cube([1, 1, 1.25]);
  translate([230, 73, 0])
    cube([1, 1, 1.25]);
  translate([231, 73, 0])
    cube([1, 1, 1.25]);
  translate([232, 73, 0])
    cube([1, 1, 1.33]);
  translate([233, 73, 0])
    cube([1, 1, 1.25]);
  translate([234, 73, 0])
    cube([1, 1, 1.25]);
  translate([235, 73, 0])
    cube([1, 1, 1.25]);
  translate([236, 73, 0])
    cube([1, 1, 1.25]);
  translate([237, 73, 0])
    cube([1, 1, 1.25]);
  translate([238, 73, 0])
    cube([1, 1, 1.25]);
  translate([239, 73, 0])
    cube([1, 1, 1.25]);
  translate([240, 73, 0])
    cube([1, 1, 1.25]);
  translate([241, 73, 0])
    cube([1, 1, 1.25]);
  translate([242, 73, 0])
    cube([1, 1, 1.25]);
  translate([243, 73, 0])
    cube([1, 1, 1.25]);
  translate([244, 73, 0])
    cube([1, 1, 1.25]);
  translate([245, 73, 0])
    cube([1, 1, 1.25]);
  translate([246, 73, 0])
    cube([1, 1, 1.25]);
  translate([0, 74, 0])
    cube([1, 1, 1.41]);
  translate([1, 74, 0])
    cube([1, 1, 1.45]);
  translate([2, 74, 0])
    cube([1, 1, 1.45]);
  translate([3, 74, 0])
    cube([1, 1, 1.41]);
  translate([4, 74, 0])
    cube([1, 1, 1.37]);
  translate([5, 74, 0])
    cube([1, 1, 1.49]);
  translate([6, 74, 0])
    cube([1, 1, 1.45]);
  translate([7, 74, 0])
    cube([1, 1, 1.45]);
  translate([8, 74, 0])
    cube([1, 1, 1.45]);
  translate([9, 74, 0])
    cube([1, 1, 1.41]);
  translate([10, 74, 0])
    cube([1, 1, 1.41]);
  translate([11, 74, 0])
    cube([1, 1, 1.41]);
  translate([12, 74, 0])
    cube([1, 1, 1.41]);
  translate([13, 74, 0])
    cube([1, 1, 1.41]);
  translate([14, 74, 0])
    cube([1, 1, 1.49]);
  translate([15, 74, 0])
    cube([1, 1, 1.53]);
  translate([16, 74, 0])
    cube([1, 1, 1.41]);
  translate([17, 74, 0])
    cube([1, 1, 1.41]);
  translate([18, 74, 0])
    cube([1, 1, 1.41]);
  translate([19, 74, 0])
    cube([1, 1, 1.41]);
  translate([20, 74, 0])
    cube([1, 1, 1.41]);
  translate([21, 74, 0])
    cube([1, 1, 1.41]);
  translate([22, 74, 0])
    cube([1, 1, 1.45]);
  translate([23, 74, 0])
    cube([1, 1, 2.35]);
  translate([24, 74, 0])
    cube([1, 1, 1.49]);
  translate([25, 74, 0])
    cube([1, 1, 1.33]);
  translate([26, 74, 0])
    cube([1, 1, 1.45]);
  translate([27, 74, 0])
    cube([1, 1, 1.10]);
  translate([28, 74, 0])
    cube([1, 1, 5.69]);
  translate([29, 74, 0])
    cube([1, 1, 5.49]);
  translate([30, 74, 0])
    cube([1, 1, 6.78]);
  translate([31, 74, 0])
    cube([1, 1, 6.55]);
  translate([32, 74, 0])
    cube([1, 1, 0.27]);
  translate([33, 74, 0])
    cube([1, 1, 0.16]);
  translate([34, 74, 0])
    cube([1, 1, 0.67]);
  translate([35, 74, 0])
    cube([1, 1, 0.67]);
  translate([36, 74, 0])
    cube([1, 1, 0.67]);
  translate([37, 74, 0])
    cube([1, 1, 0.16]);
  translate([38, 74, 0])
    cube([1, 1, 4.39]);
  translate([39, 74, 0])
    cube([1, 1, 5.53]);
  translate([40, 74, 0])
    cube([1, 1, 6.27]);
  translate([41, 74, 0])
    cube([1, 1, 5.73]);
  translate([42, 74, 0])
    cube([1, 1, 6.35]);
  translate([43, 74, 0])
    cube([1, 1, 6.16]);
  translate([44, 74, 0])
    cube([1, 1, 5.76]);
  translate([45, 74, 0])
    cube([1, 1, 5.14]);
  translate([46, 74, 0])
    cube([1, 1, 5.22]);
  translate([47, 74, 0])
    cube([1, 1, 5.80]);
  translate([48, 74, 0])
    cube([1, 1, 0.98]);
  translate([49, 74, 0])
    cube([1, 1, 1.37]);
  translate([50, 74, 0])
    cube([1, 1, 1.37]);
  translate([51, 74, 0])
    cube([1, 1, 1.33]);
  translate([52, 74, 0])
    cube([1, 1, 1.33]);
  translate([53, 74, 0])
    cube([1, 1, 1.33]);
  translate([54, 74, 0])
    cube([1, 1, 1.33]);
  translate([55, 74, 0])
    cube([1, 1, 1.33]);
  translate([56, 74, 0])
    cube([1, 1, 1.33]);
  translate([57, 74, 0])
    cube([1, 1, 1.33]);
  translate([58, 74, 0])
    cube([1, 1, 1.33]);
  translate([59, 74, 0])
    cube([1, 1, 1.33]);
  translate([60, 74, 0])
    cube([1, 1, 1.33]);
  translate([61, 74, 0])
    cube([1, 1, 1.33]);
  translate([62, 74, 0])
    cube([1, 1, 1.33]);
  translate([63, 74, 0])
    cube([1, 1, 1.33]);
  translate([64, 74, 0])
    cube([1, 1, 1.33]);
  translate([65, 74, 0])
    cube([1, 1, 1.61]);
  translate([66, 74, 0])
    cube([1, 1, 3.57]);
  translate([67, 74, 0])
    cube([1, 1, 4.04]);
  translate([68, 74, 0])
    cube([1, 1, 1.22]);
  translate([69, 74, 0])
    cube([1, 1, 1.10]);
  translate([70, 74, 0])
    cube([1, 1, 1.10]);
  translate([71, 74, 0])
    cube([1, 1, 1.41]);
  translate([72, 74, 0])
    cube([1, 1, 1.49]);
  translate([73, 74, 0])
    cube([1, 1, 1.49]);
  translate([74, 74, 0])
    cube([1, 1, 1.57]);
  translate([75, 74, 0])
    cube([1, 1, 1.69]);
  translate([76, 74, 0])
    cube([1, 1, 1.65]);
  translate([77, 74, 0])
    cube([1, 1, 1.33]);
  translate([78, 74, 0])
    cube([1, 1, 1.41]);
  translate([79, 74, 0])
    cube([1, 1, 1.88]);
  translate([80, 74, 0])
    cube([1, 1, 2.51]);
  translate([81, 74, 0])
    cube([1, 1, 2.98]);
  translate([82, 74, 0])
    cube([1, 1, 2.82]);
  translate([83, 74, 0])
    cube([1, 1, 3.06]);
  translate([84, 74, 0])
    cube([1, 1, 3.10]);
  translate([85, 74, 0])
    cube([1, 1, 3.06]);
  translate([86, 74, 0])
    cube([1, 1, 2.71]);
  translate([87, 74, 0])
    cube([1, 1, 2.75]);
  translate([88, 74, 0])
    cube([1, 1, 2.94]);
  translate([89, 74, 0])
    cube([1, 1, 1.73]);
  translate([90, 74, 0])
    cube([1, 1, 2.59]);
  translate([91, 74, 0])
    cube([1, 1, 2.51]);
  translate([92, 74, 0])
    cube([1, 1, 2.04]);
  translate([93, 74, 0])
    cube([1, 1, 1.80]);
  translate([94, 74, 0])
    cube([1, 1, 1.73]);
  translate([95, 74, 0])
    cube([1, 1, 1.80]);
  translate([96, 74, 0])
    cube([1, 1, 2.27]);
  translate([97, 74, 0])
    cube([1, 1, 2.31]);
  translate([98, 74, 0])
    cube([1, 1, 3.33]);
  translate([99, 74, 0])
    cube([1, 1, 4.00]);
  translate([100, 74, 0])
    cube([1, 1, 4.82]);
  translate([101, 74, 0])
    cube([1, 1, 5.37]);
  translate([102, 74, 0])
    cube([1, 1, 5.49]);
  translate([103, 74, 0])
    cube([1, 1, 5.53]);
  translate([104, 74, 0])
    cube([1, 1, 5.80]);
  translate([105, 74, 0])
    cube([1, 1, 5.73]);
  translate([106, 74, 0])
    cube([1, 1, 6.16]);
  translate([107, 74, 0])
    cube([1, 1, 6.90]);
  translate([108, 74, 0])
    cube([1, 1, 1.18]);
  translate([109, 74, 0])
    cube([1, 1, 1.18]);
  translate([110, 74, 0])
    cube([1, 1, 1.25]);
  translate([111, 74, 0])
    cube([1, 1, 1.25]);
  translate([112, 74, 0])
    cube([1, 1, 1.25]);
  translate([113, 74, 0])
    cube([1, 1, 1.25]);
  translate([114, 74, 0])
    cube([1, 1, 1.25]);
  translate([115, 74, 0])
    cube([1, 1, 1.25]);
  translate([116, 74, 0])
    cube([1, 1, 1.25]);
  translate([117, 74, 0])
    cube([1, 1, 1.25]);
  translate([118, 74, 0])
    cube([1, 1, 1.25]);
  translate([119, 74, 0])
    cube([1, 1, 1.25]);
  translate([120, 74, 0])
    cube([1, 1, 1.25]);
  translate([121, 74, 0])
    cube([1, 1, 1.25]);
  translate([122, 74, 0])
    cube([1, 1, 1.25]);
  translate([123, 74, 0])
    cube([1, 1, 1.25]);
  translate([124, 74, 0])
    cube([1, 1, 1.25]);
  translate([125, 74, 0])
    cube([1, 1, 1.25]);
  translate([126, 74, 0])
    cube([1, 1, 1.25]);
  translate([127, 74, 0])
    cube([1, 1, 1.25]);
  translate([128, 74, 0])
    cube([1, 1, 1.25]);
  translate([129, 74, 0])
    cube([1, 1, 1.25]);
  translate([130, 74, 0])
    cube([1, 1, 1.25]);
  translate([131, 74, 0])
    cube([1, 1, 1.25]);
  translate([132, 74, 0])
    cube([1, 1, 1.25]);
  translate([133, 74, 0])
    cube([1, 1, 1.25]);
  translate([134, 74, 0])
    cube([1, 1, 1.29]);
  translate([135, 74, 0])
    cube([1, 1, 1.25]);
  translate([136, 74, 0])
    cube([1, 1, 1.25]);
  translate([137, 74, 0])
    cube([1, 1, 1.29]);
  translate([138, 74, 0])
    cube([1, 1, 1.33]);
  translate([139, 74, 0])
    cube([1, 1, 1.25]);
  translate([140, 74, 0])
    cube([1, 1, 1.25]);
  translate([141, 74, 0])
    cube([1, 1, 1.25]);
  translate([142, 74, 0])
    cube([1, 1, 1.25]);
  translate([143, 74, 0])
    cube([1, 1, 1.25]);
  translate([144, 74, 0])
    cube([1, 1, 1.33]);
  translate([145, 74, 0])
    cube([1, 1, 1.29]);
  translate([146, 74, 0])
    cube([1, 1, 1.29]);
  translate([147, 74, 0])
    cube([1, 1, 1.29]);
  translate([148, 74, 0])
    cube([1, 1, 1.29]);
  translate([149, 74, 0])
    cube([1, 1, 1.29]);
  translate([150, 74, 0])
    cube([1, 1, 1.29]);
  translate([151, 74, 0])
    cube([1, 1, 1.29]);
  translate([152, 74, 0])
    cube([1, 1, 1.29]);
  translate([153, 74, 0])
    cube([1, 1, 1.29]);
  translate([154, 74, 0])
    cube([1, 1, 1.29]);
  translate([155, 74, 0])
    cube([1, 1, 1.29]);
  translate([156, 74, 0])
    cube([1, 1, 1.29]);
  translate([157, 74, 0])
    cube([1, 1, 1.29]);
  translate([158, 74, 0])
    cube([1, 1, 1.29]);
  translate([159, 74, 0])
    cube([1, 1, 1.29]);
  translate([160, 74, 0])
    cube([1, 1, 1.29]);
  translate([161, 74, 0])
    cube([1, 1, 1.29]);
  translate([162, 74, 0])
    cube([1, 1, 1.29]);
  translate([163, 74, 0])
    cube([1, 1, 1.29]);
  translate([164, 74, 0])
    cube([1, 1, 1.29]);
  translate([165, 74, 0])
    cube([1, 1, 1.37]);
  translate([166, 74, 0])
    cube([1, 1, 1.29]);
  translate([167, 74, 0])
    cube([1, 1, 1.29]);
  translate([168, 74, 0])
    cube([1, 1, 1.29]);
  translate([169, 74, 0])
    cube([1, 1, 1.25]);
  translate([170, 74, 0])
    cube([1, 1, 1.25]);
  translate([171, 74, 0])
    cube([1, 1, 1.33]);
  translate([172, 74, 0])
    cube([1, 1, 1.29]);
  translate([173, 74, 0])
    cube([1, 1, 1.29]);
  translate([174, 74, 0])
    cube([1, 1, 1.29]);
  translate([175, 74, 0])
    cube([1, 1, 1.29]);
  translate([176, 74, 0])
    cube([1, 1, 1.29]);
  translate([177, 74, 0])
    cube([1, 1, 1.29]);
  translate([178, 74, 0])
    cube([1, 1, 1.29]);
  translate([179, 74, 0])
    cube([1, 1, 1.33]);
  translate([180, 74, 0])
    cube([1, 1, 1.29]);
  translate([181, 74, 0])
    cube([1, 1, 1.29]);
  translate([182, 74, 0])
    cube([1, 1, 1.29]);
  translate([183, 74, 0])
    cube([1, 1, 1.29]);
  translate([184, 74, 0])
    cube([1, 1, 1.29]);
  translate([185, 74, 0])
    cube([1, 1, 1.25]);
  translate([186, 74, 0])
    cube([1, 1, 1.29]);
  translate([187, 74, 0])
    cube([1, 1, 1.29]);
  translate([188, 74, 0])
    cube([1, 1, 1.29]);
  translate([189, 74, 0])
    cube([1, 1, 1.29]);
  translate([190, 74, 0])
    cube([1, 1, 1.25]);
  translate([191, 74, 0])
    cube([1, 1, 1.25]);
  translate([192, 74, 0])
    cube([1, 1, 1.29]);
  translate([193, 74, 0])
    cube([1, 1, 1.29]);
  translate([194, 74, 0])
    cube([1, 1, 1.29]);
  translate([195, 74, 0])
    cube([1, 1, 1.29]);
  translate([196, 74, 0])
    cube([1, 1, 1.29]);
  translate([197, 74, 0])
    cube([1, 1, 1.29]);
  translate([198, 74, 0])
    cube([1, 1, 1.25]);
  translate([199, 74, 0])
    cube([1, 1, 1.29]);
  translate([200, 74, 0])
    cube([1, 1, 1.29]);
  translate([201, 74, 0])
    cube([1, 1, 1.29]);
  translate([202, 74, 0])
    cube([1, 1, 1.29]);
  translate([203, 74, 0])
    cube([1, 1, 1.29]);
  translate([204, 74, 0])
    cube([1, 1, 1.25]);
  translate([205, 74, 0])
    cube([1, 1, 1.29]);
  translate([206, 74, 0])
    cube([1, 1, 1.29]);
  translate([207, 74, 0])
    cube([1, 1, 1.29]);
  translate([208, 74, 0])
    cube([1, 1, 1.25]);
  translate([209, 74, 0])
    cube([1, 1, 1.29]);
  translate([210, 74, 0])
    cube([1, 1, 1.29]);
  translate([211, 74, 0])
    cube([1, 1, 1.25]);
  translate([212, 74, 0])
    cube([1, 1, 1.29]);
  translate([213, 74, 0])
    cube([1, 1, 1.29]);
  translate([214, 74, 0])
    cube([1, 1, 1.29]);
  translate([215, 74, 0])
    cube([1, 1, 1.25]);
  translate([216, 74, 0])
    cube([1, 1, 1.33]);
  translate([217, 74, 0])
    cube([1, 1, 1.22]);
  translate([218, 74, 0])
    cube([1, 1, 1.22]);
  translate([219, 74, 0])
    cube([1, 1, 1.25]);
  translate([220, 74, 0])
    cube([1, 1, 1.25]);
  translate([221, 74, 0])
    cube([1, 1, 1.25]);
  translate([222, 74, 0])
    cube([1, 1, 1.25]);
  translate([223, 74, 0])
    cube([1, 1, 1.22]);
  translate([224, 74, 0])
    cube([1, 1, 1.25]);
  translate([225, 74, 0])
    cube([1, 1, 1.29]);
  translate([226, 74, 0])
    cube([1, 1, 1.33]);
  translate([227, 74, 0])
    cube([1, 1, 1.25]);
  translate([228, 74, 0])
    cube([1, 1, 1.29]);
  translate([229, 74, 0])
    cube([1, 1, 1.25]);
  translate([230, 74, 0])
    cube([1, 1, 1.29]);
  translate([231, 74, 0])
    cube([1, 1, 1.29]);
  translate([232, 74, 0])
    cube([1, 1, 1.25]);
  translate([233, 74, 0])
    cube([1, 1, 1.25]);
  translate([234, 74, 0])
    cube([1, 1, 1.25]);
  translate([235, 74, 0])
    cube([1, 1, 1.25]);
  translate([236, 74, 0])
    cube([1, 1, 1.25]);
  translate([237, 74, 0])
    cube([1, 1, 1.25]);
  translate([238, 74, 0])
    cube([1, 1, 1.25]);
  translate([239, 74, 0])
    cube([1, 1, 1.25]);
  translate([240, 74, 0])
    cube([1, 1, 1.25]);
  translate([241, 74, 0])
    cube([1, 1, 1.25]);
  translate([242, 74, 0])
    cube([1, 1, 1.25]);
  translate([243, 74, 0])
    cube([1, 1, 1.25]);
  translate([244, 74, 0])
    cube([1, 1, 1.25]);
  translate([245, 74, 0])
    cube([1, 1, 1.25]);
  translate([246, 74, 0])
    cube([1, 1, 1.25]);
  translate([0, 75, 0])
    cube([1, 1, 1.49]);
  translate([1, 75, 0])
    cube([1, 1, 1.45]);
  translate([2, 75, 0])
    cube([1, 1, 1.45]);
  translate([3, 75, 0])
    cube([1, 1, 1.49]);
  translate([4, 75, 0])
    cube([1, 1, 1.41]);
  translate([5, 75, 0])
    cube([1, 1, 1.37]);
  translate([6, 75, 0])
    cube([1, 1, 1.45]);
  translate([7, 75, 0])
    cube([1, 1, 1.45]);
  translate([8, 75, 0])
    cube([1, 1, 1.45]);
  translate([9, 75, 0])
    cube([1, 1, 1.41]);
  translate([10, 75, 0])
    cube([1, 1, 1.41]);
  translate([11, 75, 0])
    cube([1, 1, 1.41]);
  translate([12, 75, 0])
    cube([1, 1, 1.41]);
  translate([13, 75, 0])
    cube([1, 1, 1.41]);
  translate([14, 75, 0])
    cube([1, 1, 1.41]);
  translate([15, 75, 0])
    cube([1, 1, 1.45]);
  translate([16, 75, 0])
    cube([1, 1, 1.41]);
  translate([17, 75, 0])
    cube([1, 1, 1.41]);
  translate([18, 75, 0])
    cube([1, 1, 1.41]);
  translate([19, 75, 0])
    cube([1, 1, 1.41]);
  translate([20, 75, 0])
    cube([1, 1, 1.41]);
  translate([21, 75, 0])
    cube([1, 1, 1.41]);
  translate([22, 75, 0])
    cube([1, 1, 1.65]);
  translate([23, 75, 0])
    cube([1, 1, 1.14]);
  translate([24, 75, 0])
    cube([1, 1, 1.06]);
  translate([25, 75, 0])
    cube([1, 1, 1.88]);
  translate([26, 75, 0])
    cube([1, 1, 1.33]);
  translate([27, 75, 0])
    cube([1, 1, 0.82]);
  translate([28, 75, 0])
    cube([1, 1, 6.59]);
  translate([29, 75, 0])
    cube([1, 1, 4.82]);
  translate([30, 75, 0])
    cube([1, 1, 6.51]);
  translate([31, 75, 0])
    cube([1, 1, 6.39]);
  translate([32, 75, 0])
    cube([1, 1, 3.49]);
  translate([33, 75, 0])
    cube([1, 1, 0.55]);
  translate([34, 75, 0])
    cube([1, 1, 0.63]);
  translate([35, 75, 0])
    cube([1, 1, 0.63]);
  translate([36, 75, 0])
    cube([1, 1, 0.47]);
  translate([37, 75, 0])
    cube([1, 1, 2.86]);
  translate([38, 75, 0])
    cube([1, 1, 4.59]);
  translate([39, 75, 0])
    cube([1, 1, 5.96]);
  translate([40, 75, 0])
    cube([1, 1, 6.35]);
  translate([41, 75, 0])
    cube([1, 1, 5.84]);
  translate([42, 75, 0])
    cube([1, 1, 5.65]);
  translate([43, 75, 0])
    cube([1, 1, 5.80]);
  translate([44, 75, 0])
    cube([1, 1, 5.65]);
  translate([45, 75, 0])
    cube([1, 1, 5.80]);
  translate([46, 75, 0])
    cube([1, 1, 5.73]);
  translate([47, 75, 0])
    cube([1, 1, 5.53]);
  translate([48, 75, 0])
    cube([1, 1, 5.61]);
  translate([49, 75, 0])
    cube([1, 1, 1.41]);
  translate([50, 75, 0])
    cube([1, 1, 1.41]);
  translate([51, 75, 0])
    cube([1, 1, 1.33]);
  translate([52, 75, 0])
    cube([1, 1, 1.33]);
  translate([53, 75, 0])
    cube([1, 1, 1.33]);
  translate([54, 75, 0])
    cube([1, 1, 1.37]);
  translate([55, 75, 0])
    cube([1, 1, 1.37]);
  translate([56, 75, 0])
    cube([1, 1, 1.33]);
  translate([57, 75, 0])
    cube([1, 1, 1.33]);
  translate([58, 75, 0])
    cube([1, 1, 1.33]);
  translate([59, 75, 0])
    cube([1, 1, 1.33]);
  translate([60, 75, 0])
    cube([1, 1, 1.33]);
  translate([61, 75, 0])
    cube([1, 1, 1.33]);
  translate([62, 75, 0])
    cube([1, 1, 1.33]);
  translate([63, 75, 0])
    cube([1, 1, 1.33]);
  translate([64, 75, 0])
    cube([1, 1, 1.33]);
  translate([65, 75, 0])
    cube([1, 1, 0.75]);
  translate([66, 75, 0])
    cube([1, 1, 1.25]);
  translate([67, 75, 0])
    cube([1, 1, 2.35]);
  translate([68, 75, 0])
    cube([1, 1, 2.71]);
  translate([69, 75, 0])
    cube([1, 1, 2.00]);
  translate([70, 75, 0])
    cube([1, 1, 4.35]);
  translate([71, 75, 0])
    cube([1, 1, 1.41]);
  translate([72, 75, 0])
    cube([1, 1, 1.53]);
  translate([73, 75, 0])
    cube([1, 1, 1.61]);
  translate([74, 75, 0])
    cube([1, 1, 1.76]);
  translate([75, 75, 0])
    cube([1, 1, 1.65]);
  translate([76, 75, 0])
    cube([1, 1, 1.57]);
  translate([77, 75, 0])
    cube([1, 1, 1.65]);
  translate([78, 75, 0])
    cube([1, 1, 1.76]);
  translate([79, 75, 0])
    cube([1, 1, 1.80]);
  translate([80, 75, 0])
    cube([1, 1, 2.12]);
  translate([81, 75, 0])
    cube([1, 1, 2.90]);
  translate([82, 75, 0])
    cube([1, 1, 3.25]);
  translate([83, 75, 0])
    cube([1, 1, 3.37]);
  translate([84, 75, 0])
    cube([1, 1, 3.49]);
  translate([85, 75, 0])
    cube([1, 1, 3.49]);
  translate([86, 75, 0])
    cube([1, 1, 3.18]);
  translate([87, 75, 0])
    cube([1, 1, 3.10]);
  translate([88, 75, 0])
    cube([1, 1, 3.10]);
  translate([89, 75, 0])
    cube([1, 1, 3.41]);
  translate([90, 75, 0])
    cube([1, 1, 3.18]);
  translate([91, 75, 0])
    cube([1, 1, 3.14]);
  translate([92, 75, 0])
    cube([1, 1, 2.82]);
  translate([93, 75, 0])
    cube([1, 1, 2.24]);
  translate([94, 75, 0])
    cube([1, 1, 2.00]);
  translate([95, 75, 0])
    cube([1, 1, 2.08]);
  translate([96, 75, 0])
    cube([1, 1, 2.00]);
  translate([97, 75, 0])
    cube([1, 1, 2.27]);
  translate([98, 75, 0])
    cube([1, 1, 2.55]);
  translate([99, 75, 0])
    cube([1, 1, 3.18]);
  translate([100, 75, 0])
    cube([1, 1, 3.84]);
  translate([101, 75, 0])
    cube([1, 1, 4.82]);
  translate([102, 75, 0])
    cube([1, 1, 4.98]);
  translate([103, 75, 0])
    cube([1, 1, 5.29]);
  translate([104, 75, 0])
    cube([1, 1, 5.37]);
  translate([105, 75, 0])
    cube([1, 1, 5.49]);
  translate([106, 75, 0])
    cube([1, 1, 6.20]);
  translate([107, 75, 0])
    cube([1, 1, 0.67]);
  translate([108, 75, 0])
    cube([1, 1, 1.25]);
  translate([109, 75, 0])
    cube([1, 1, 1.25]);
  translate([110, 75, 0])
    cube([1, 1, 1.25]);
  translate([111, 75, 0])
    cube([1, 1, 1.25]);
  translate([112, 75, 0])
    cube([1, 1, 1.25]);
  translate([113, 75, 0])
    cube([1, 1, 1.25]);
  translate([114, 75, 0])
    cube([1, 1, 1.25]);
  translate([115, 75, 0])
    cube([1, 1, 1.25]);
  translate([116, 75, 0])
    cube([1, 1, 1.25]);
  translate([117, 75, 0])
    cube([1, 1, 1.25]);
  translate([118, 75, 0])
    cube([1, 1, 1.25]);
  translate([119, 75, 0])
    cube([1, 1, 1.25]);
  translate([120, 75, 0])
    cube([1, 1, 1.25]);
  translate([121, 75, 0])
    cube([1, 1, 1.25]);
  translate([122, 75, 0])
    cube([1, 1, 1.25]);
  translate([123, 75, 0])
    cube([1, 1, 1.25]);
  translate([124, 75, 0])
    cube([1, 1, 1.25]);
  translate([125, 75, 0])
    cube([1, 1, 1.25]);
  translate([126, 75, 0])
    cube([1, 1, 1.25]);
  translate([127, 75, 0])
    cube([1, 1, 1.25]);
  translate([128, 75, 0])
    cube([1, 1, 1.25]);
  translate([129, 75, 0])
    cube([1, 1, 1.25]);
  translate([130, 75, 0])
    cube([1, 1, 1.25]);
  translate([131, 75, 0])
    cube([1, 1, 1.25]);
  translate([132, 75, 0])
    cube([1, 1, 1.25]);
  translate([133, 75, 0])
    cube([1, 1, 1.25]);
  translate([134, 75, 0])
    cube([1, 1, 1.25]);
  translate([135, 75, 0])
    cube([1, 1, 1.33]);
  translate([136, 75, 0])
    cube([1, 1, 1.25]);
  translate([137, 75, 0])
    cube([1, 1, 1.22]);
  translate([138, 75, 0])
    cube([1, 1, 1.25]);
  translate([139, 75, 0])
    cube([1, 1, 1.25]);
  translate([140, 75, 0])
    cube([1, 1, 1.33]);
  translate([141, 75, 0])
    cube([1, 1, 1.33]);
  translate([142, 75, 0])
    cube([1, 1, 1.33]);
  translate([143, 75, 0])
    cube([1, 1, 1.33]);
  translate([144, 75, 0])
    cube([1, 1, 1.22]);
  translate([145, 75, 0])
    cube([1, 1, 1.29]);
  translate([146, 75, 0])
    cube([1, 1, 1.29]);
  translate([147, 75, 0])
    cube([1, 1, 1.29]);
  translate([148, 75, 0])
    cube([1, 1, 1.29]);
  translate([149, 75, 0])
    cube([1, 1, 1.29]);
  translate([150, 75, 0])
    cube([1, 1, 1.29]);
  translate([151, 75, 0])
    cube([1, 1, 1.29]);
  translate([152, 75, 0])
    cube([1, 1, 1.29]);
  translate([153, 75, 0])
    cube([1, 1, 1.29]);
  translate([154, 75, 0])
    cube([1, 1, 1.29]);
  translate([155, 75, 0])
    cube([1, 1, 1.29]);
  translate([156, 75, 0])
    cube([1, 1, 1.29]);
  translate([157, 75, 0])
    cube([1, 1, 1.29]);
  translate([158, 75, 0])
    cube([1, 1, 1.29]);
  translate([159, 75, 0])
    cube([1, 1, 1.29]);
  translate([160, 75, 0])
    cube([1, 1, 1.29]);
  translate([161, 75, 0])
    cube([1, 1, 1.29]);
  translate([162, 75, 0])
    cube([1, 1, 1.29]);
  translate([163, 75, 0])
    cube([1, 1, 1.29]);
  translate([164, 75, 0])
    cube([1, 1, 1.29]);
  translate([165, 75, 0])
    cube([1, 1, 1.37]);
  translate([166, 75, 0])
    cube([1, 1, 1.33]);
  translate([167, 75, 0])
    cube([1, 1, 1.33]);
  translate([168, 75, 0])
    cube([1, 1, 1.29]);
  translate([169, 75, 0])
    cube([1, 1, 1.33]);
  translate([170, 75, 0])
    cube([1, 1, 1.33]);
  translate([171, 75, 0])
    cube([1, 1, 1.33]);
  translate([172, 75, 0])
    cube([1, 1, 1.29]);
  translate([173, 75, 0])
    cube([1, 1, 1.29]);
  translate([174, 75, 0])
    cube([1, 1, 1.29]);
  translate([175, 75, 0])
    cube([1, 1, 1.29]);
  translate([176, 75, 0])
    cube([1, 1, 1.29]);
  translate([177, 75, 0])
    cube([1, 1, 1.29]);
  translate([178, 75, 0])
    cube([1, 1, 1.29]);
  translate([179, 75, 0])
    cube([1, 1, 1.33]);
  translate([180, 75, 0])
    cube([1, 1, 1.29]);
  translate([181, 75, 0])
    cube([1, 1, 1.29]);
  translate([182, 75, 0])
    cube([1, 1, 1.29]);
  translate([183, 75, 0])
    cube([1, 1, 1.29]);
  translate([184, 75, 0])
    cube([1, 1, 1.29]);
  translate([185, 75, 0])
    cube([1, 1, 1.25]);
  translate([186, 75, 0])
    cube([1, 1, 1.29]);
  translate([187, 75, 0])
    cube([1, 1, 1.29]);
  translate([188, 75, 0])
    cube([1, 1, 1.29]);
  translate([189, 75, 0])
    cube([1, 1, 1.29]);
  translate([190, 75, 0])
    cube([1, 1, 1.33]);
  translate([191, 75, 0])
    cube([1, 1, 1.33]);
  translate([192, 75, 0])
    cube([1, 1, 1.29]);
  translate([193, 75, 0])
    cube([1, 1, 1.29]);
  translate([194, 75, 0])
    cube([1, 1, 1.29]);
  translate([195, 75, 0])
    cube([1, 1, 1.29]);
  translate([196, 75, 0])
    cube([1, 1, 1.29]);
  translate([197, 75, 0])
    cube([1, 1, 1.29]);
  translate([198, 75, 0])
    cube([1, 1, 1.25]);
  translate([199, 75, 0])
    cube([1, 1, 1.29]);
  translate([200, 75, 0])
    cube([1, 1, 1.29]);
  translate([201, 75, 0])
    cube([1, 1, 1.29]);
  translate([202, 75, 0])
    cube([1, 1, 1.29]);
  translate([203, 75, 0])
    cube([1, 1, 1.29]);
  translate([204, 75, 0])
    cube([1, 1, 1.25]);
  translate([205, 75, 0])
    cube([1, 1, 1.29]);
  translate([206, 75, 0])
    cube([1, 1, 1.29]);
  translate([207, 75, 0])
    cube([1, 1, 1.29]);
  translate([208, 75, 0])
    cube([1, 1, 1.33]);
  translate([209, 75, 0])
    cube([1, 1, 1.29]);
  translate([210, 75, 0])
    cube([1, 1, 1.29]);
  translate([211, 75, 0])
    cube([1, 1, 1.25]);
  translate([212, 75, 0])
    cube([1, 1, 1.29]);
  translate([213, 75, 0])
    cube([1, 1, 1.29]);
  translate([214, 75, 0])
    cube([1, 1, 1.29]);
  translate([215, 75, 0])
    cube([1, 1, 1.25]);
  translate([216, 75, 0])
    cube([1, 1, 1.33]);
  translate([217, 75, 0])
    cube([1, 1, 1.29]);
  translate([218, 75, 0])
    cube([1, 1, 1.29]);
  translate([219, 75, 0])
    cube([1, 1, 1.25]);
  translate([220, 75, 0])
    cube([1, 1, 1.25]);
  translate([221, 75, 0])
    cube([1, 1, 1.25]);
  translate([222, 75, 0])
    cube([1, 1, 1.25]);
  translate([223, 75, 0])
    cube([1, 1, 1.33]);
  translate([224, 75, 0])
    cube([1, 1, 1.25]);
  translate([225, 75, 0])
    cube([1, 1, 1.29]);
  translate([226, 75, 0])
    cube([1, 1, 1.33]);
  translate([227, 75, 0])
    cube([1, 1, 1.25]);
  translate([228, 75, 0])
    cube([1, 1, 1.29]);
  translate([229, 75, 0])
    cube([1, 1, 1.25]);
  translate([230, 75, 0])
    cube([1, 1, 1.25]);
  translate([231, 75, 0])
    cube([1, 1, 1.25]);
  translate([232, 75, 0])
    cube([1, 1, 1.25]);
  translate([233, 75, 0])
    cube([1, 1, 1.25]);
  translate([234, 75, 0])
    cube([1, 1, 1.25]);
  translate([235, 75, 0])
    cube([1, 1, 1.25]);
  translate([236, 75, 0])
    cube([1, 1, 1.25]);
  translate([237, 75, 0])
    cube([1, 1, 1.25]);
  translate([238, 75, 0])
    cube([1, 1, 1.25]);
  translate([239, 75, 0])
    cube([1, 1, 1.25]);
  translate([240, 75, 0])
    cube([1, 1, 1.25]);
  translate([241, 75, 0])
    cube([1, 1, 1.25]);
  translate([242, 75, 0])
    cube([1, 1, 1.25]);
  translate([243, 75, 0])
    cube([1, 1, 1.25]);
  translate([244, 75, 0])
    cube([1, 1, 1.25]);
  translate([245, 75, 0])
    cube([1, 1, 1.25]);
  translate([246, 75, 0])
    cube([1, 1, 1.25]);
  translate([0, 76, 0])
    cube([1, 1, 1.45]);
  translate([1, 76, 0])
    cube([1, 1, 1.45]);
  translate([2, 76, 0])
    cube([1, 1, 1.45]);
  translate([3, 76, 0])
    cube([1, 1, 1.45]);
  translate([4, 76, 0])
    cube([1, 1, 1.45]);
  translate([5, 76, 0])
    cube([1, 1, 1.45]);
  translate([6, 76, 0])
    cube([1, 1, 1.45]);
  translate([7, 76, 0])
    cube([1, 1, 1.45]);
  translate([8, 76, 0])
    cube([1, 1, 1.41]);
  translate([9, 76, 0])
    cube([1, 1, 1.45]);
  translate([10, 76, 0])
    cube([1, 1, 1.45]);
  translate([11, 76, 0])
    cube([1, 1, 1.45]);
  translate([12, 76, 0])
    cube([1, 1, 1.41]);
  translate([13, 76, 0])
    cube([1, 1, 1.41]);
  translate([14, 76, 0])
    cube([1, 1, 1.41]);
  translate([15, 76, 0])
    cube([1, 1, 1.45]);
  translate([16, 76, 0])
    cube([1, 1, 1.45]);
  translate([17, 76, 0])
    cube([1, 1, 1.45]);
  translate([18, 76, 0])
    cube([1, 1, 1.45]);
  translate([19, 76, 0])
    cube([1, 1, 1.41]);
  translate([20, 76, 0])
    cube([1, 1, 1.41]);
  translate([21, 76, 0])
    cube([1, 1, 1.41]);
  translate([22, 76, 0])
    cube([1, 1, 1.41]);
  translate([23, 76, 0])
    cube([1, 1, 1.41]);
  translate([24, 76, 0])
    cube([1, 1, 5.65]);
  translate([25, 76, 0])
    cube([1, 1, 1.41]);
  translate([26, 76, 0])
    cube([1, 1, 1.45]);
  translate([27, 76, 0])
    cube([1, 1, 0.67]);
  translate([28, 76, 0])
    cube([1, 1, 7.49]);
  translate([29, 76, 0])
    cube([1, 1, 4.51]);
  translate([30, 76, 0])
    cube([1, 1, 5.84]);
  translate([31, 76, 0])
    cube([1, 1, 6.24]);
  translate([32, 76, 0])
    cube([1, 1, 7.02]);
  translate([33, 76, 0])
    cube([1, 1, 0.75]);
  translate([34, 76, 0])
    cube([1, 1, 0.63]);
  translate([35, 76, 0])
    cube([1, 1, 0.59]);
  translate([36, 76, 0])
    cube([1, 1, 0.71]);
  translate([37, 76, 0])
    cube([1, 1, 5.02]);
  translate([38, 76, 0])
    cube([1, 1, 5.49]);
  translate([39, 76, 0])
    cube([1, 1, 6.35]);
  translate([40, 76, 0])
    cube([1, 1, 6.43]);
  translate([41, 76, 0])
    cube([1, 1, 3.02]);
  translate([42, 76, 0])
    cube([1, 1, 4.59]);
  translate([43, 76, 0])
    cube([1, 1, 5.69]);
  translate([44, 76, 0])
    cube([1, 1, 5.76]);
  translate([45, 76, 0])
    cube([1, 1, 5.76]);
  translate([46, 76, 0])
    cube([1, 1, 5.41]);
  translate([47, 76, 0])
    cube([1, 1, 5.22]);
  translate([48, 76, 0])
    cube([1, 1, 5.73]);
  translate([49, 76, 0])
    cube([1, 1, 5.33]);
  translate([50, 76, 0])
    cube([1, 1, 4.75]);
  translate([51, 76, 0])
    cube([1, 1, 1.10]);
  translate([52, 76, 0])
    cube([1, 1, 1.33]);
  translate([53, 76, 0])
    cube([1, 1, 1.33]);
  translate([54, 76, 0])
    cube([1, 1, 1.33]);
  translate([55, 76, 0])
    cube([1, 1, 1.41]);
  translate([56, 76, 0])
    cube([1, 1, 1.37]);
  translate([57, 76, 0])
    cube([1, 1, 1.33]);
  translate([58, 76, 0])
    cube([1, 1, 1.33]);
  translate([59, 76, 0])
    cube([1, 1, 1.33]);
  translate([60, 76, 0])
    cube([1, 1, 1.33]);
  translate([61, 76, 0])
    cube([1, 1, 1.33]);
  translate([62, 76, 0])
    cube([1, 1, 1.33]);
  translate([63, 76, 0])
    cube([1, 1, 1.33]);
  translate([64, 76, 0])
    cube([1, 1, 1.33]);
  translate([65, 76, 0])
    cube([1, 1, 1.33]);
  translate([66, 76, 0])
    cube([1, 1, 1.33]);
  translate([67, 76, 0])
    cube([1, 1, 1.45]);
  translate([68, 76, 0])
    cube([1, 1, 1.25]);
  translate([69, 76, 0])
    cube([1, 1, 7.61]);
  translate([70, 76, 0])
    cube([1, 1, 5.10]);
  translate([71, 76, 0])
    cube([1, 1, 1.53]);
  translate([72, 76, 0])
    cube([1, 1, 1.49]);
  translate([73, 76, 0])
    cube([1, 1, 1.45]);
  translate([74, 76, 0])
    cube([1, 1, 1.84]);
  translate([75, 76, 0])
    cube([1, 1, 1.73]);
  translate([76, 76, 0])
    cube([1, 1, 1.29]);
  translate([77, 76, 0])
    cube([1, 1, 1.61]);
  translate([78, 76, 0])
    cube([1, 1, 2.39]);
  translate([79, 76, 0])
    cube([1, 1, 2.39]);
  translate([80, 76, 0])
    cube([1, 1, 2.98]);
  translate([81, 76, 0])
    cube([1, 1, 2.43]);
  translate([82, 76, 0])
    cube([1, 1, 3.76]);
  translate([83, 76, 0])
    cube([1, 1, 3.65]);
  translate([84, 76, 0])
    cube([1, 1, 3.96]);
  translate([85, 76, 0])
    cube([1, 1, 4.00]);
  translate([86, 76, 0])
    cube([1, 1, 3.65]);
  translate([87, 76, 0])
    cube([1, 1, 3.45]);
  translate([88, 76, 0])
    cube([1, 1, 3.29]);
  translate([89, 76, 0])
    cube([1, 1, 3.33]);
  translate([90, 76, 0])
    cube([1, 1, 3.49]);
  translate([91, 76, 0])
    cube([1, 1, 3.57]);
  translate([92, 76, 0])
    cube([1, 1, 3.37]);
  translate([93, 76, 0])
    cube([1, 1, 3.06]);
  translate([94, 76, 0])
    cube([1, 1, 2.71]);
  translate([95, 76, 0])
    cube([1, 1, 2.63]);
  translate([96, 76, 0])
    cube([1, 1, 2.71]);
  translate([97, 76, 0])
    cube([1, 1, 2.67]);
  translate([98, 76, 0])
    cube([1, 1, 3.02]);
  translate([99, 76, 0])
    cube([1, 1, 3.06]);
  translate([100, 76, 0])
    cube([1, 1, 3.41]);
  translate([101, 76, 0])
    cube([1, 1, 3.33]);
  translate([102, 76, 0])
    cube([1, 1, 3.65]);
  translate([103, 76, 0])
    cube([1, 1, 3.92]);
  translate([104, 76, 0])
    cube([1, 1, 4.04]);
  translate([105, 76, 0])
    cube([1, 1, 3.53]);
  translate([106, 76, 0])
    cube([1, 1, 1.25]);
  translate([107, 76, 0])
    cube([1, 1, 1.29]);
  translate([108, 76, 0])
    cube([1, 1, 1.25]);
  translate([109, 76, 0])
    cube([1, 1, 1.25]);
  translate([110, 76, 0])
    cube([1, 1, 1.25]);
  translate([111, 76, 0])
    cube([1, 1, 1.25]);
  translate([112, 76, 0])
    cube([1, 1, 1.25]);
  translate([113, 76, 0])
    cube([1, 1, 1.25]);
  translate([114, 76, 0])
    cube([1, 1, 1.25]);
  translate([115, 76, 0])
    cube([1, 1, 1.25]);
  translate([116, 76, 0])
    cube([1, 1, 1.25]);
  translate([117, 76, 0])
    cube([1, 1, 1.25]);
  translate([118, 76, 0])
    cube([1, 1, 1.25]);
  translate([119, 76, 0])
    cube([1, 1, 1.25]);
  translate([120, 76, 0])
    cube([1, 1, 1.25]);
  translate([121, 76, 0])
    cube([1, 1, 1.33]);
  translate([122, 76, 0])
    cube([1, 1, 1.33]);
  translate([123, 76, 0])
    cube([1, 1, 1.25]);
  translate([124, 76, 0])
    cube([1, 1, 1.25]);
  translate([125, 76, 0])
    cube([1, 1, 1.25]);
  translate([126, 76, 0])
    cube([1, 1, 1.25]);
  translate([127, 76, 0])
    cube([1, 1, 1.25]);
  translate([128, 76, 0])
    cube([1, 1, 1.25]);
  translate([129, 76, 0])
    cube([1, 1, 1.25]);
  translate([130, 76, 0])
    cube([1, 1, 1.25]);
  translate([131, 76, 0])
    cube([1, 1, 1.25]);
  translate([132, 76, 0])
    cube([1, 1, 1.25]);
  translate([133, 76, 0])
    cube([1, 1, 1.25]);
  translate([134, 76, 0])
    cube([1, 1, 1.25]);
  translate([135, 76, 0])
    cube([1, 1, 1.25]);
  translate([136, 76, 0])
    cube([1, 1, 1.25]);
  translate([137, 76, 0])
    cube([1, 1, 1.25]);
  translate([138, 76, 0])
    cube([1, 1, 1.25]);
  translate([139, 76, 0])
    cube([1, 1, 1.25]);
  translate([140, 76, 0])
    cube([1, 1, 1.29]);
  translate([141, 76, 0])
    cube([1, 1, 1.29]);
  translate([142, 76, 0])
    cube([1, 1, 1.29]);
  translate([143, 76, 0])
    cube([1, 1, 1.33]);
  translate([144, 76, 0])
    cube([1, 1, 1.29]);
  translate([145, 76, 0])
    cube([1, 1, 1.25]);
  translate([146, 76, 0])
    cube([1, 1, 1.25]);
  translate([147, 76, 0])
    cube([1, 1, 1.29]);
  translate([148, 76, 0])
    cube([1, 1, 1.29]);
  translate([149, 76, 0])
    cube([1, 1, 1.29]);
  translate([150, 76, 0])
    cube([1, 1, 1.29]);
  translate([151, 76, 0])
    cube([1, 1, 1.29]);
  translate([152, 76, 0])
    cube([1, 1, 1.29]);
  translate([153, 76, 0])
    cube([1, 1, 1.29]);
  translate([154, 76, 0])
    cube([1, 1, 1.29]);
  translate([155, 76, 0])
    cube([1, 1, 1.29]);
  translate([156, 76, 0])
    cube([1, 1, 1.29]);
  translate([157, 76, 0])
    cube([1, 1, 1.29]);
  translate([158, 76, 0])
    cube([1, 1, 1.29]);
  translate([159, 76, 0])
    cube([1, 1, 1.29]);
  translate([160, 76, 0])
    cube([1, 1, 1.29]);
  translate([161, 76, 0])
    cube([1, 1, 1.29]);
  translate([162, 76, 0])
    cube([1, 1, 1.29]);
  translate([163, 76, 0])
    cube([1, 1, 1.29]);
  translate([164, 76, 0])
    cube([1, 1, 1.29]);
  translate([165, 76, 0])
    cube([1, 1, 1.29]);
  translate([166, 76, 0])
    cube([1, 1, 1.33]);
  translate([167, 76, 0])
    cube([1, 1, 1.33]);
  translate([168, 76, 0])
    cube([1, 1, 1.29]);
  translate([169, 76, 0])
    cube([1, 1, 1.29]);
  translate([170, 76, 0])
    cube([1, 1, 1.29]);
  translate([171, 76, 0])
    cube([1, 1, 1.29]);
  translate([172, 76, 0])
    cube([1, 1, 1.29]);
  translate([173, 76, 0])
    cube([1, 1, 1.29]);
  translate([174, 76, 0])
    cube([1, 1, 1.29]);
  translate([175, 76, 0])
    cube([1, 1, 1.29]);
  translate([176, 76, 0])
    cube([1, 1, 1.33]);
  translate([177, 76, 0])
    cube([1, 1, 1.29]);
  translate([178, 76, 0])
    cube([1, 1, 1.29]);
  translate([179, 76, 0])
    cube([1, 1, 1.29]);
  translate([180, 76, 0])
    cube([1, 1, 1.29]);
  translate([181, 76, 0])
    cube([1, 1, 1.29]);
  translate([182, 76, 0])
    cube([1, 1, 1.29]);
  translate([183, 76, 0])
    cube([1, 1, 1.29]);
  translate([184, 76, 0])
    cube([1, 1, 1.29]);
  translate([185, 76, 0])
    cube([1, 1, 1.29]);
  translate([186, 76, 0])
    cube([1, 1, 1.29]);
  translate([187, 76, 0])
    cube([1, 1, 1.29]);
  translate([188, 76, 0])
    cube([1, 1, 1.29]);
  translate([189, 76, 0])
    cube([1, 1, 1.29]);
  translate([190, 76, 0])
    cube([1, 1, 1.29]);
  translate([191, 76, 0])
    cube([1, 1, 1.29]);
  translate([192, 76, 0])
    cube([1, 1, 1.29]);
  translate([193, 76, 0])
    cube([1, 1, 1.29]);
  translate([194, 76, 0])
    cube([1, 1, 1.29]);
  translate([195, 76, 0])
    cube([1, 1, 1.29]);
  translate([196, 76, 0])
    cube([1, 1, 1.29]);
  translate([197, 76, 0])
    cube([1, 1, 1.29]);
  translate([198, 76, 0])
    cube([1, 1, 1.29]);
  translate([199, 76, 0])
    cube([1, 1, 1.29]);
  translate([200, 76, 0])
    cube([1, 1, 1.29]);
  translate([201, 76, 0])
    cube([1, 1, 1.29]);
  translate([202, 76, 0])
    cube([1, 1, 1.29]);
  translate([203, 76, 0])
    cube([1, 1, 1.29]);
  translate([204, 76, 0])
    cube([1, 1, 1.29]);
  translate([205, 76, 0])
    cube([1, 1, 1.29]);
  translate([206, 76, 0])
    cube([1, 1, 1.29]);
  translate([207, 76, 0])
    cube([1, 1, 1.29]);
  translate([208, 76, 0])
    cube([1, 1, 1.29]);
  translate([209, 76, 0])
    cube([1, 1, 1.29]);
  translate([210, 76, 0])
    cube([1, 1, 1.29]);
  translate([211, 76, 0])
    cube([1, 1, 1.29]);
  translate([212, 76, 0])
    cube([1, 1, 1.29]);
  translate([213, 76, 0])
    cube([1, 1, 1.29]);
  translate([214, 76, 0])
    cube([1, 1, 1.29]);
  translate([215, 76, 0])
    cube([1, 1, 1.29]);
  translate([216, 76, 0])
    cube([1, 1, 1.29]);
  translate([217, 76, 0])
    cube([1, 1, 1.29]);
  translate([218, 76, 0])
    cube([1, 1, 1.29]);
  translate([219, 76, 0])
    cube([1, 1, 1.22]);
  translate([220, 76, 0])
    cube([1, 1, 1.25]);
  translate([221, 76, 0])
    cube([1, 1, 1.29]);
  translate([222, 76, 0])
    cube([1, 1, 1.22]);
  translate([223, 76, 0])
    cube([1, 1, 1.25]);
  translate([224, 76, 0])
    cube([1, 1, 1.25]);
  translate([225, 76, 0])
    cube([1, 1, 1.25]);
  translate([226, 76, 0])
    cube([1, 1, 1.25]);
  translate([227, 76, 0])
    cube([1, 1, 1.25]);
  translate([228, 76, 0])
    cube([1, 1, 1.29]);
  translate([229, 76, 0])
    cube([1, 1, 1.25]);
  translate([230, 76, 0])
    cube([1, 1, 1.25]);
  translate([231, 76, 0])
    cube([1, 1, 1.25]);
  translate([232, 76, 0])
    cube([1, 1, 1.29]);
  translate([233, 76, 0])
    cube([1, 1, 1.29]);
  translate([234, 76, 0])
    cube([1, 1, 1.22]);
  translate([235, 76, 0])
    cube([1, 1, 1.29]);
  translate([236, 76, 0])
    cube([1, 1, 1.25]);
  translate([237, 76, 0])
    cube([1, 1, 1.25]);
  translate([238, 76, 0])
    cube([1, 1, 1.25]);
  translate([239, 76, 0])
    cube([1, 1, 1.25]);
  translate([240, 76, 0])
    cube([1, 1, 1.25]);
  translate([241, 76, 0])
    cube([1, 1, 1.25]);
  translate([242, 76, 0])
    cube([1, 1, 1.25]);
  translate([243, 76, 0])
    cube([1, 1, 1.25]);
  translate([244, 76, 0])
    cube([1, 1, 1.22]);
  translate([245, 76, 0])
    cube([1, 1, 1.25]);
  translate([246, 76, 0])
    cube([1, 1, 1.25]);
  translate([0, 77, 0])
    cube([1, 1, 1.45]);
  translate([1, 77, 0])
    cube([1, 1, 1.45]);
  translate([2, 77, 0])
    cube([1, 1, 1.45]);
  translate([3, 77, 0])
    cube([1, 1, 1.45]);
  translate([4, 77, 0])
    cube([1, 1, 1.45]);
  translate([5, 77, 0])
    cube([1, 1, 1.45]);
  translate([6, 77, 0])
    cube([1, 1, 1.45]);
  translate([7, 77, 0])
    cube([1, 1, 1.45]);
  translate([8, 77, 0])
    cube([1, 1, 1.45]);
  translate([9, 77, 0])
    cube([1, 1, 1.45]);
  translate([10, 77, 0])
    cube([1, 1, 1.45]);
  translate([11, 77, 0])
    cube([1, 1, 1.45]);
  translate([12, 77, 0])
    cube([1, 1, 1.45]);
  translate([13, 77, 0])
    cube([1, 1, 1.41]);
  translate([14, 77, 0])
    cube([1, 1, 1.41]);
  translate([15, 77, 0])
    cube([1, 1, 1.45]);
  translate([16, 77, 0])
    cube([1, 1, 1.45]);
  translate([17, 77, 0])
    cube([1, 1, 1.45]);
  translate([18, 77, 0])
    cube([1, 1, 1.45]);
  translate([19, 77, 0])
    cube([1, 1, 1.41]);
  translate([20, 77, 0])
    cube([1, 1, 1.41]);
  translate([21, 77, 0])
    cube([1, 1, 1.41]);
  translate([22, 77, 0])
    cube([1, 1, 1.41]);
  translate([23, 77, 0])
    cube([1, 1, 1.37]);
  translate([24, 77, 0])
    cube([1, 1, 4.67]);
  translate([25, 77, 0])
    cube([1, 1, 1.76]);
  translate([26, 77, 0])
    cube([1, 1, 1.29]);
  translate([27, 77, 0])
    cube([1, 1, 1.18]);
  translate([28, 77, 0])
    cube([1, 1, 6.78]);
  translate([29, 77, 0])
    cube([1, 1, 3.65]);
  translate([30, 77, 0])
    cube([1, 1, 5.49]);
  translate([31, 77, 0])
    cube([1, 1, 6.16]);
  translate([32, 77, 0])
    cube([1, 1, 6.67]);
  translate([33, 77, 0])
    cube([1, 1, 1.57]);
  translate([34, 77, 0])
    cube([1, 1, 0.94]);
  translate([35, 77, 0])
    cube([1, 1, 0.31]);
  translate([36, 77, 0])
    cube([1, 1, 0.78]);
  translate([37, 77, 0])
    cube([1, 1, 3.88]);
  translate([38, 77, 0])
    cube([1, 1, 5.61]);
  translate([39, 77, 0])
    cube([1, 1, 6.31]);
  translate([40, 77, 0])
    cube([1, 1, 5.57]);
  translate([41, 77, 0])
    cube([1, 1, 3.41]);
  translate([42, 77, 0])
    cube([1, 1, 5.18]);
  translate([43, 77, 0])
    cube([1, 1, 6.04]);
  translate([44, 77, 0])
    cube([1, 1, 6.27]);
  translate([45, 77, 0])
    cube([1, 1, 4.12]);
  translate([46, 77, 0])
    cube([1, 1, 5.02]);
  translate([47, 77, 0])
    cube([1, 1, 5.80]);
  translate([48, 77, 0])
    cube([1, 1, 6.04]);
  translate([49, 77, 0])
    cube([1, 1, 6.35]);
  translate([50, 77, 0])
    cube([1, 1, 6.51]);
  translate([51, 77, 0])
    cube([1, 1, 1.29]);
  translate([52, 77, 0])
    cube([1, 1, 1.33]);
  translate([53, 77, 0])
    cube([1, 1, 1.33]);
  translate([54, 77, 0])
    cube([1, 1, 1.37]);
  translate([55, 77, 0])
    cube([1, 1, 1.33]);
  translate([56, 77, 0])
    cube([1, 1, 1.33]);
  translate([57, 77, 0])
    cube([1, 1, 1.33]);
  translate([58, 77, 0])
    cube([1, 1, 1.33]);
  translate([59, 77, 0])
    cube([1, 1, 1.33]);
  translate([60, 77, 0])
    cube([1, 1, 1.33]);
  translate([61, 77, 0])
    cube([1, 1, 1.33]);
  translate([62, 77, 0])
    cube([1, 1, 1.33]);
  translate([63, 77, 0])
    cube([1, 1, 1.33]);
  translate([64, 77, 0])
    cube([1, 1, 1.33]);
  translate([65, 77, 0])
    cube([1, 1, 1.33]);
  translate([66, 77, 0])
    cube([1, 1, 1.33]);
  translate([67, 77, 0])
    cube([1, 1, 1.33]);
  translate([68, 77, 0])
    cube([1, 1, 1.49]);
  translate([69, 77, 0])
    cube([1, 1, 6.86]);
  translate([70, 77, 0])
    cube([1, 1, 4.16]);
  translate([71, 77, 0])
    cube([1, 1, 2.12]);
  translate([72, 77, 0])
    cube([1, 1, 1.57]);
  translate([73, 77, 0])
    cube([1, 1, 2.27]);
  translate([74, 77, 0])
    cube([1, 1, 1.22]);
  translate([75, 77, 0])
    cube([1, 1, 1.37]);
  translate([76, 77, 0])
    cube([1, 1, 1.73]);
  translate([77, 77, 0])
    cube([1, 1, 1.73]);
  translate([78, 77, 0])
    cube([1, 1, 2.43]);
  translate([79, 77, 0])
    cube([1, 1, 2.63]);
  translate([80, 77, 0])
    cube([1, 1, 3.22]);
  translate([81, 77, 0])
    cube([1, 1, 3.49]);
  translate([82, 77, 0])
    cube([1, 1, 3.80]);
  translate([83, 77, 0])
    cube([1, 1, 3.92]);
  translate([84, 77, 0])
    cube([1, 1, 4.04]);
  translate([85, 77, 0])
    cube([1, 1, 4.35]);
  translate([86, 77, 0])
    cube([1, 1, 4.20]);
  translate([87, 77, 0])
    cube([1, 1, 3.88]);
  translate([88, 77, 0])
    cube([1, 1, 3.61]);
  translate([89, 77, 0])
    cube([1, 1, 3.61]);
  translate([90, 77, 0])
    cube([1, 1, 3.69]);
  translate([91, 77, 0])
    cube([1, 1, 3.88]);
  translate([92, 77, 0])
    cube([1, 1, 4.04]);
  translate([93, 77, 0])
    cube([1, 1, 3.69]);
  translate([94, 77, 0])
    cube([1, 1, 3.41]);
  translate([95, 77, 0])
    cube([1, 1, 3.33]);
  translate([96, 77, 0])
    cube([1, 1, 3.37]);
  translate([97, 77, 0])
    cube([1, 1, 3.45]);
  translate([98, 77, 0])
    cube([1, 1, 3.53]);
  translate([99, 77, 0])
    cube([1, 1, 3.96]);
  translate([100, 77, 0])
    cube([1, 1, 4.90]);
  translate([101, 77, 0])
    cube([1, 1, 6.16]);
  translate([102, 77, 0])
    cube([1, 1, 6.98]);
  translate([103, 77, 0])
    cube([1, 1, 7.33]);
  translate([104, 77, 0])
    cube([1, 1, 1.22]);
  translate([105, 77, 0])
    cube([1, 1, 1.29]);
  translate([106, 77, 0])
    cube([1, 1, 1.14]);
  translate([107, 77, 0])
    cube([1, 1, 1.45]);
  translate([108, 77, 0])
    cube([1, 1, 1.25]);
  translate([109, 77, 0])
    cube([1, 1, 1.25]);
  translate([110, 77, 0])
    cube([1, 1, 1.25]);
  translate([111, 77, 0])
    cube([1, 1, 1.25]);
  translate([112, 77, 0])
    cube([1, 1, 1.25]);
  translate([113, 77, 0])
    cube([1, 1, 1.25]);
  translate([114, 77, 0])
    cube([1, 1, 1.25]);
  translate([115, 77, 0])
    cube([1, 1, 1.25]);
  translate([116, 77, 0])
    cube([1, 1, 1.25]);
  translate([117, 77, 0])
    cube([1, 1, 1.25]);
  translate([118, 77, 0])
    cube([1, 1, 1.25]);
  translate([119, 77, 0])
    cube([1, 1, 1.25]);
  translate([120, 77, 0])
    cube([1, 1, 1.25]);
  translate([121, 77, 0])
    cube([1, 1, 1.25]);
  translate([122, 77, 0])
    cube([1, 1, 1.25]);
  translate([123, 77, 0])
    cube([1, 1, 1.25]);
  translate([124, 77, 0])
    cube([1, 1, 1.25]);
  translate([125, 77, 0])
    cube([1, 1, 1.25]);
  translate([126, 77, 0])
    cube([1, 1, 1.25]);
  translate([127, 77, 0])
    cube([1, 1, 1.25]);
  translate([128, 77, 0])
    cube([1, 1, 1.25]);
  translate([129, 77, 0])
    cube([1, 1, 1.25]);
  translate([130, 77, 0])
    cube([1, 1, 1.25]);
  translate([131, 77, 0])
    cube([1, 1, 1.25]);
  translate([132, 77, 0])
    cube([1, 1, 1.25]);
  translate([133, 77, 0])
    cube([1, 1, 1.25]);
  translate([134, 77, 0])
    cube([1, 1, 1.22]);
  translate([135, 77, 0])
    cube([1, 1, 1.25]);
  translate([136, 77, 0])
    cube([1, 1, 1.25]);
  translate([137, 77, 0])
    cube([1, 1, 1.25]);
  translate([138, 77, 0])
    cube([1, 1, 1.25]);
  translate([139, 77, 0])
    cube([1, 1, 1.25]);
  translate([140, 77, 0])
    cube([1, 1, 1.29]);
  translate([141, 77, 0])
    cube([1, 1, 1.29]);
  translate([142, 77, 0])
    cube([1, 1, 1.29]);
  translate([143, 77, 0])
    cube([1, 1, 1.29]);
  translate([144, 77, 0])
    cube([1, 1, 1.33]);
  translate([145, 77, 0])
    cube([1, 1, 1.25]);
  translate([146, 77, 0])
    cube([1, 1, 1.29]);
  translate([147, 77, 0])
    cube([1, 1, 1.29]);
  translate([148, 77, 0])
    cube([1, 1, 1.29]);
  translate([149, 77, 0])
    cube([1, 1, 1.29]);
  translate([150, 77, 0])
    cube([1, 1, 1.29]);
  translate([151, 77, 0])
    cube([1, 1, 1.29]);
  translate([152, 77, 0])
    cube([1, 1, 1.29]);
  translate([153, 77, 0])
    cube([1, 1, 1.29]);
  translate([154, 77, 0])
    cube([1, 1, 1.29]);
  translate([155, 77, 0])
    cube([1, 1, 1.29]);
  translate([156, 77, 0])
    cube([1, 1, 1.25]);
  translate([157, 77, 0])
    cube([1, 1, 1.33]);
  translate([158, 77, 0])
    cube([1, 1, 1.29]);
  translate([159, 77, 0])
    cube([1, 1, 1.25]);
  translate([160, 77, 0])
    cube([1, 1, 1.29]);
  translate([161, 77, 0])
    cube([1, 1, 1.29]);
  translate([162, 77, 0])
    cube([1, 1, 1.33]);
  translate([163, 77, 0])
    cube([1, 1, 1.29]);
  translate([164, 77, 0])
    cube([1, 1, 1.29]);
  translate([165, 77, 0])
    cube([1, 1, 1.29]);
  translate([166, 77, 0])
    cube([1, 1, 1.29]);
  translate([167, 77, 0])
    cube([1, 1, 1.29]);
  translate([168, 77, 0])
    cube([1, 1, 1.29]);
  translate([169, 77, 0])
    cube([1, 1, 1.25]);
  translate([170, 77, 0])
    cube([1, 1, 1.25]);
  translate([171, 77, 0])
    cube([1, 1, 1.29]);
  translate([172, 77, 0])
    cube([1, 1, 1.29]);
  translate([173, 77, 0])
    cube([1, 1, 1.29]);
  translate([174, 77, 0])
    cube([1, 1, 1.29]);
  translate([175, 77, 0])
    cube([1, 1, 1.29]);
  translate([176, 77, 0])
    cube([1, 1, 1.29]);
  translate([177, 77, 0])
    cube([1, 1, 1.29]);
  translate([178, 77, 0])
    cube([1, 1, 1.29]);
  translate([179, 77, 0])
    cube([1, 1, 1.29]);
  translate([180, 77, 0])
    cube([1, 1, 1.29]);
  translate([181, 77, 0])
    cube([1, 1, 1.29]);
  translate([182, 77, 0])
    cube([1, 1, 1.29]);
  translate([183, 77, 0])
    cube([1, 1, 1.29]);
  translate([184, 77, 0])
    cube([1, 1, 1.29]);
  translate([185, 77, 0])
    cube([1, 1, 1.29]);
  translate([186, 77, 0])
    cube([1, 1, 1.29]);
  translate([187, 77, 0])
    cube([1, 1, 1.33]);
  translate([188, 77, 0])
    cube([1, 1, 1.25]);
  translate([189, 77, 0])
    cube([1, 1, 1.29]);
  translate([190, 77, 0])
    cube([1, 1, 1.29]);
  translate([191, 77, 0])
    cube([1, 1, 1.29]);
  translate([192, 77, 0])
    cube([1, 1, 1.25]);
  translate([193, 77, 0])
    cube([1, 1, 1.25]);
  translate([194, 77, 0])
    cube([1, 1, 1.29]);
  translate([195, 77, 0])
    cube([1, 1, 1.29]);
  translate([196, 77, 0])
    cube([1, 1, 1.29]);
  translate([197, 77, 0])
    cube([1, 1, 1.25]);
  translate([198, 77, 0])
    cube([1, 1, 1.29]);
  translate([199, 77, 0])
    cube([1, 1, 1.33]);
  translate([200, 77, 0])
    cube([1, 1, 1.29]);
  translate([201, 77, 0])
    cube([1, 1, 1.29]);
  translate([202, 77, 0])
    cube([1, 1, 1.29]);
  translate([203, 77, 0])
    cube([1, 1, 1.29]);
  translate([204, 77, 0])
    cube([1, 1, 1.29]);
  translate([205, 77, 0])
    cube([1, 1, 1.29]);
  translate([206, 77, 0])
    cube([1, 1, 1.25]);
  translate([207, 77, 0])
    cube([1, 1, 1.25]);
  translate([208, 77, 0])
    cube([1, 1, 1.29]);
  translate([209, 77, 0])
    cube([1, 1, 1.29]);
  translate([210, 77, 0])
    cube([1, 1, 1.29]);
  translate([211, 77, 0])
    cube([1, 1, 1.29]);
  translate([212, 77, 0])
    cube([1, 1, 1.29]);
  translate([213, 77, 0])
    cube([1, 1, 1.29]);
  translate([214, 77, 0])
    cube([1, 1, 1.29]);
  translate([215, 77, 0])
    cube([1, 1, 1.29]);
  translate([216, 77, 0])
    cube([1, 1, 1.29]);
  translate([217, 77, 0])
    cube([1, 1, 1.29]);
  translate([218, 77, 0])
    cube([1, 1, 1.29]);
  translate([219, 77, 0])
    cube([1, 1, 1.29]);
  translate([220, 77, 0])
    cube([1, 1, 1.25]);
  translate([221, 77, 0])
    cube([1, 1, 1.29]);
  translate([222, 77, 0])
    cube([1, 1, 1.25]);
  translate([223, 77, 0])
    cube([1, 1, 1.25]);
  translate([224, 77, 0])
    cube([1, 1, 1.25]);
  translate([225, 77, 0])
    cube([1, 1, 1.25]);
  translate([226, 77, 0])
    cube([1, 1, 1.25]);
  translate([227, 77, 0])
    cube([1, 1, 1.29]);
  translate([228, 77, 0])
    cube([1, 1, 1.25]);
  translate([229, 77, 0])
    cube([1, 1, 1.25]);
  translate([230, 77, 0])
    cube([1, 1, 1.25]);
  translate([231, 77, 0])
    cube([1, 1, 1.25]);
  translate([232, 77, 0])
    cube([1, 1, 1.33]);
  translate([233, 77, 0])
    cube([1, 1, 1.22]);
  translate([234, 77, 0])
    cube([1, 1, 1.22]);
  translate([235, 77, 0])
    cube([1, 1, 1.25]);
  translate([236, 77, 0])
    cube([1, 1, 1.29]);
  translate([237, 77, 0])
    cube([1, 1, 1.29]);
  translate([238, 77, 0])
    cube([1, 1, 1.29]);
  translate([239, 77, 0])
    cube([1, 1, 1.33]);
  translate([240, 77, 0])
    cube([1, 1, 1.29]);
  translate([241, 77, 0])
    cube([1, 1, 1.22]);
  translate([242, 77, 0])
    cube([1, 1, 1.29]);
  translate([243, 77, 0])
    cube([1, 1, 1.25]);
  translate([244, 77, 0])
    cube([1, 1, 1.25]);
  translate([245, 77, 0])
    cube([1, 1, 1.25]);
  translate([246, 77, 0])
    cube([1, 1, 1.25]);
  translate([0, 78, 0])
    cube([1, 1, 1.45]);
  translate([1, 78, 0])
    cube([1, 1, 1.45]);
  translate([2, 78, 0])
    cube([1, 1, 1.45]);
  translate([3, 78, 0])
    cube([1, 1, 1.45]);
  translate([4, 78, 0])
    cube([1, 1, 1.45]);
  translate([5, 78, 0])
    cube([1, 1, 1.45]);
  translate([6, 78, 0])
    cube([1, 1, 1.45]);
  translate([7, 78, 0])
    cube([1, 1, 1.45]);
  translate([8, 78, 0])
    cube([1, 1, 1.45]);
  translate([9, 78, 0])
    cube([1, 1, 1.45]);
  translate([10, 78, 0])
    cube([1, 1, 1.45]);
  translate([11, 78, 0])
    cube([1, 1, 1.45]);
  translate([12, 78, 0])
    cube([1, 1, 1.45]);
  translate([13, 78, 0])
    cube([1, 1, 1.41]);
  translate([14, 78, 0])
    cube([1, 1, 1.41]);
  translate([15, 78, 0])
    cube([1, 1, 1.45]);
  translate([16, 78, 0])
    cube([1, 1, 1.45]);
  translate([17, 78, 0])
    cube([1, 1, 1.45]);
  translate([18, 78, 0])
    cube([1, 1, 1.45]);
  translate([19, 78, 0])
    cube([1, 1, 1.41]);
  translate([20, 78, 0])
    cube([1, 1, 1.41]);
  translate([21, 78, 0])
    cube([1, 1, 1.41]);
  translate([22, 78, 0])
    cube([1, 1, 1.41]);
  translate([23, 78, 0])
    cube([1, 1, 1.37]);
  translate([24, 78, 0])
    cube([1, 1, 1.61]);
  translate([25, 78, 0])
    cube([1, 1, 0.94]);
  translate([26, 78, 0])
    cube([1, 1, 1.76]);
  translate([27, 78, 0])
    cube([1, 1, 1.41]);
  translate([28, 78, 0])
    cube([1, 1, 1.41]);
  translate([29, 78, 0])
    cube([1, 1, 4.35]);
  translate([30, 78, 0])
    cube([1, 1, 5.10]);
  translate([31, 78, 0])
    cube([1, 1, 5.65]);
  translate([32, 78, 0])
    cube([1, 1, 3.92]);
  translate([33, 78, 0])
    cube([1, 1, 1.84]);
  translate([34, 78, 0])
    cube([1, 1, 0.86]);
  translate([35, 78, 0])
    cube([1, 1, 0.59]);
  translate([36, 78, 0])
    cube([1, 1, 1.37]);
  translate([37, 78, 0])
    cube([1, 1, 1.96]);
  translate([38, 78, 0])
    cube([1, 1, 3.49]);
  translate([39, 78, 0])
    cube([1, 1, 6.31]);
  translate([40, 78, 0])
    cube([1, 1, 3.29]);
  translate([41, 78, 0])
    cube([1, 1, 4.27]);
  translate([42, 78, 0])
    cube([1, 1, 5.53]);
  translate([43, 78, 0])
    cube([1, 1, 6.16]);
  translate([44, 78, 0])
    cube([1, 1, 3.76]);
  translate([45, 78, 0])
    cube([1, 1, 4.78]);
  translate([46, 78, 0])
    cube([1, 1, 5.61]);
  translate([47, 78, 0])
    cube([1, 1, 6.04]);
  translate([48, 78, 0])
    cube([1, 1, 6.27]);
  translate([49, 78, 0])
    cube([1, 1, 3.02]);
  translate([50, 78, 0])
    cube([1, 1, 1.29]);
  translate([51, 78, 0])
    cube([1, 1, 1.22]);
  translate([52, 78, 0])
    cube([1, 1, 1.69]);
  translate([53, 78, 0])
    cube([1, 1, 1.33]);
  translate([54, 78, 0])
    cube([1, 1, 1.41]);
  translate([55, 78, 0])
    cube([1, 1, 1.37]);
  translate([56, 78, 0])
    cube([1, 1, 1.33]);
  translate([57, 78, 0])
    cube([1, 1, 1.33]);
  translate([58, 78, 0])
    cube([1, 1, 1.33]);
  translate([59, 78, 0])
    cube([1, 1, 1.33]);
  translate([60, 78, 0])
    cube([1, 1, 1.33]);
  translate([61, 78, 0])
    cube([1, 1, 1.33]);
  translate([62, 78, 0])
    cube([1, 1, 1.33]);
  translate([63, 78, 0])
    cube([1, 1, 1.33]);
  translate([64, 78, 0])
    cube([1, 1, 1.33]);
  translate([65, 78, 0])
    cube([1, 1, 1.33]);
  translate([66, 78, 0])
    cube([1, 1, 1.33]);
  translate([67, 78, 0])
    cube([1, 1, 1.33]);
  translate([68, 78, 0])
    cube([1, 1, 1.33]);
  translate([69, 78, 0])
    cube([1, 1, 3.14]);
  translate([70, 78, 0])
    cube([1, 1, 2.55]);
  translate([71, 78, 0])
    cube([1, 1, 3.76]);
  translate([72, 78, 0])
    cube([1, 1, 4.98]);
  translate([73, 78, 0])
    cube([1, 1, 3.92]);
  translate([74, 78, 0])
    cube([1, 1, 1.69]);
  translate([75, 78, 0])
    cube([1, 1, 1.76]);
  translate([76, 78, 0])
    cube([1, 1, 2.55]);
  translate([77, 78, 0])
    cube([1, 1, 2.16]);
  translate([78, 78, 0])
    cube([1, 1, 2.47]);
  translate([79, 78, 0])
    cube([1, 1, 3.73]);
  translate([80, 78, 0])
    cube([1, 1, 4.35]);
  translate([81, 78, 0])
    cube([1, 1, 4.43]);
  translate([82, 78, 0])
    cube([1, 1, 4.43]);
  translate([83, 78, 0])
    cube([1, 1, 4.12]);
  translate([84, 78, 0])
    cube([1, 1, 4.35]);
  translate([85, 78, 0])
    cube([1, 1, 4.67]);
  translate([86, 78, 0])
    cube([1, 1, 4.59]);
  translate([87, 78, 0])
    cube([1, 1, 4.39]);
  translate([88, 78, 0])
    cube([1, 1, 4.27]);
  translate([89, 78, 0])
    cube([1, 1, 3.96]);
  translate([90, 78, 0])
    cube([1, 1, 3.88]);
  translate([91, 78, 0])
    cube([1, 1, 4.00]);
  translate([92, 78, 0])
    cube([1, 1, 4.35]);
  translate([93, 78, 0])
    cube([1, 1, 4.27]);
  translate([94, 78, 0])
    cube([1, 1, 4.04]);
  translate([95, 78, 0])
    cube([1, 1, 3.96]);
  translate([96, 78, 0])
    cube([1, 1, 3.76]);
  translate([97, 78, 0])
    cube([1, 1, 4.04]);
  translate([98, 78, 0])
    cube([1, 1, 4.12]);
  translate([99, 78, 0])
    cube([1, 1, 4.43]);
  translate([100, 78, 0])
    cube([1, 1, 5.29]);
  translate([101, 78, 0])
    cube([1, 1, 6.51]);
  translate([102, 78, 0])
    cube([1, 1, 7.14]);
  translate([103, 78, 0])
    cube([1, 1, 7.33]);
  translate([104, 78, 0])
    cube([1, 1, 2.39]);
  translate([105, 78, 0])
    cube([1, 1, 3.69]);
  translate([106, 78, 0])
    cube([1, 1, 3.29]);
  translate([107, 78, 0])
    cube([1, 1, 1.76]);
  translate([108, 78, 0])
    cube([1, 1, 1.25]);
  translate([109, 78, 0])
    cube([1, 1, 1.25]);
  translate([110, 78, 0])
    cube([1, 1, 1.25]);
  translate([111, 78, 0])
    cube([1, 1, 1.25]);
  translate([112, 78, 0])
    cube([1, 1, 1.25]);
  translate([113, 78, 0])
    cube([1, 1, 1.25]);
  translate([114, 78, 0])
    cube([1, 1, 1.25]);
  translate([115, 78, 0])
    cube([1, 1, 1.25]);
  translate([116, 78, 0])
    cube([1, 1, 1.25]);
  translate([117, 78, 0])
    cube([1, 1, 1.25]);
  translate([118, 78, 0])
    cube([1, 1, 1.25]);
  translate([119, 78, 0])
    cube([1, 1, 1.25]);
  translate([120, 78, 0])
    cube([1, 1, 1.25]);
  translate([121, 78, 0])
    cube([1, 1, 1.25]);
  translate([122, 78, 0])
    cube([1, 1, 1.25]);
  translate([123, 78, 0])
    cube([1, 1, 1.25]);
  translate([124, 78, 0])
    cube([1, 1, 1.25]);
  translate([125, 78, 0])
    cube([1, 1, 1.25]);
  translate([126, 78, 0])
    cube([1, 1, 1.25]);
  translate([127, 78, 0])
    cube([1, 1, 1.25]);
  translate([128, 78, 0])
    cube([1, 1, 1.25]);
  translate([129, 78, 0])
    cube([1, 1, 1.25]);
  translate([130, 78, 0])
    cube([1, 1, 1.25]);
  translate([131, 78, 0])
    cube([1, 1, 1.25]);
  translate([132, 78, 0])
    cube([1, 1, 1.25]);
  translate([133, 78, 0])
    cube([1, 1, 1.25]);
  translate([134, 78, 0])
    cube([1, 1, 1.22]);
  translate([135, 78, 0])
    cube([1, 1, 1.25]);
  translate([136, 78, 0])
    cube([1, 1, 1.25]);
  translate([137, 78, 0])
    cube([1, 1, 1.25]);
  translate([138, 78, 0])
    cube([1, 1, 1.25]);
  translate([139, 78, 0])
    cube([1, 1, 1.25]);
  translate([140, 78, 0])
    cube([1, 1, 1.29]);
  translate([141, 78, 0])
    cube([1, 1, 1.29]);
  translate([142, 78, 0])
    cube([1, 1, 1.29]);
  translate([143, 78, 0])
    cube([1, 1, 1.29]);
  translate([144, 78, 0])
    cube([1, 1, 1.33]);
  translate([145, 78, 0])
    cube([1, 1, 1.25]);
  translate([146, 78, 0])
    cube([1, 1, 1.29]);
  translate([147, 78, 0])
    cube([1, 1, 1.29]);
  translate([148, 78, 0])
    cube([1, 1, 1.29]);
  translate([149, 78, 0])
    cube([1, 1, 1.29]);
  translate([150, 78, 0])
    cube([1, 1, 1.29]);
  translate([151, 78, 0])
    cube([1, 1, 1.29]);
  translate([152, 78, 0])
    cube([1, 1, 1.29]);
  translate([153, 78, 0])
    cube([1, 1, 1.29]);
  translate([154, 78, 0])
    cube([1, 1, 1.29]);
  translate([155, 78, 0])
    cube([1, 1, 1.29]);
  translate([156, 78, 0])
    cube([1, 1, 1.25]);
  translate([157, 78, 0])
    cube([1, 1, 1.33]);
  translate([158, 78, 0])
    cube([1, 1, 1.25]);
  translate([159, 78, 0])
    cube([1, 1, 1.33]);
  translate([160, 78, 0])
    cube([1, 1, 1.29]);
  translate([161, 78, 0])
    cube([1, 1, 1.29]);
  translate([162, 78, 0])
    cube([1, 1, 1.33]);
  translate([163, 78, 0])
    cube([1, 1, 1.29]);
  translate([164, 78, 0])
    cube([1, 1, 1.29]);
  translate([165, 78, 0])
    cube([1, 1, 1.29]);
  translate([166, 78, 0])
    cube([1, 1, 1.29]);
  translate([167, 78, 0])
    cube([1, 1, 1.29]);
  translate([168, 78, 0])
    cube([1, 1, 1.29]);
  translate([169, 78, 0])
    cube([1, 1, 1.25]);
  translate([170, 78, 0])
    cube([1, 1, 1.25]);
  translate([171, 78, 0])
    cube([1, 1, 1.29]);
  translate([172, 78, 0])
    cube([1, 1, 1.29]);
  translate([173, 78, 0])
    cube([1, 1, 1.29]);
  translate([174, 78, 0])
    cube([1, 1, 1.29]);
  translate([175, 78, 0])
    cube([1, 1, 1.29]);
  translate([176, 78, 0])
    cube([1, 1, 1.29]);
  translate([177, 78, 0])
    cube([1, 1, 1.29]);
  translate([178, 78, 0])
    cube([1, 1, 1.29]);
  translate([179, 78, 0])
    cube([1, 1, 1.29]);
  translate([180, 78, 0])
    cube([1, 1, 1.29]);
  translate([181, 78, 0])
    cube([1, 1, 1.29]);
  translate([182, 78, 0])
    cube([1, 1, 1.29]);
  translate([183, 78, 0])
    cube([1, 1, 1.29]);
  translate([184, 78, 0])
    cube([1, 1, 1.29]);
  translate([185, 78, 0])
    cube([1, 1, 1.29]);
  translate([186, 78, 0])
    cube([1, 1, 1.29]);
  translate([187, 78, 0])
    cube([1, 1, 1.33]);
  translate([188, 78, 0])
    cube([1, 1, 1.25]);
  translate([189, 78, 0])
    cube([1, 1, 1.29]);
  translate([190, 78, 0])
    cube([1, 1, 1.29]);
  translate([191, 78, 0])
    cube([1, 1, 1.29]);
  translate([192, 78, 0])
    cube([1, 1, 1.25]);
  translate([193, 78, 0])
    cube([1, 1, 1.25]);
  translate([194, 78, 0])
    cube([1, 1, 1.29]);
  translate([195, 78, 0])
    cube([1, 1, 1.29]);
  translate([196, 78, 0])
    cube([1, 1, 1.29]);
  translate([197, 78, 0])
    cube([1, 1, 1.25]);
  translate([198, 78, 0])
    cube([1, 1, 1.29]);
  translate([199, 78, 0])
    cube([1, 1, 1.33]);
  translate([200, 78, 0])
    cube([1, 1, 1.29]);
  translate([201, 78, 0])
    cube([1, 1, 1.29]);
  translate([202, 78, 0])
    cube([1, 1, 1.29]);
  translate([203, 78, 0])
    cube([1, 1, 1.29]);
  translate([204, 78, 0])
    cube([1, 1, 1.29]);
  translate([205, 78, 0])
    cube([1, 1, 1.29]);
  translate([206, 78, 0])
    cube([1, 1, 1.25]);
  translate([207, 78, 0])
    cube([1, 1, 1.25]);
  translate([208, 78, 0])
    cube([1, 1, 1.29]);
  translate([209, 78, 0])
    cube([1, 1, 1.29]);
  translate([210, 78, 0])
    cube([1, 1, 1.29]);
  translate([211, 78, 0])
    cube([1, 1, 1.29]);
  translate([212, 78, 0])
    cube([1, 1, 1.29]);
  translate([213, 78, 0])
    cube([1, 1, 1.29]);
  translate([214, 78, 0])
    cube([1, 1, 1.29]);
  translate([215, 78, 0])
    cube([1, 1, 1.29]);
  translate([216, 78, 0])
    cube([1, 1, 1.29]);
  translate([217, 78, 0])
    cube([1, 1, 1.29]);
  translate([218, 78, 0])
    cube([1, 1, 1.29]);
  translate([219, 78, 0])
    cube([1, 1, 1.29]);
  translate([220, 78, 0])
    cube([1, 1, 1.25]);
  translate([221, 78, 0])
    cube([1, 1, 1.29]);
  translate([222, 78, 0])
    cube([1, 1, 1.29]);
  translate([223, 78, 0])
    cube([1, 1, 1.33]);
  translate([224, 78, 0])
    cube([1, 1, 1.33]);
  translate([225, 78, 0])
    cube([1, 1, 1.33]);
  translate([226, 78, 0])
    cube([1, 1, 1.33]);
  translate([227, 78, 0])
    cube([1, 1, 1.29]);
  translate([228, 78, 0])
    cube([1, 1, 1.25]);
  translate([229, 78, 0])
    cube([1, 1, 1.25]);
  translate([230, 78, 0])
    cube([1, 1, 1.25]);
  translate([231, 78, 0])
    cube([1, 1, 1.25]);
  translate([232, 78, 0])
    cube([1, 1, 1.25]);
  translate([233, 78, 0])
    cube([1, 1, 1.25]);
  translate([234, 78, 0])
    cube([1, 1, 1.25]);
  translate([235, 78, 0])
    cube([1, 1, 1.25]);
  translate([236, 78, 0])
    cube([1, 1, 1.29]);
  translate([237, 78, 0])
    cube([1, 1, 1.29]);
  translate([238, 78, 0])
    cube([1, 1, 1.29]);
  translate([239, 78, 0])
    cube([1, 1, 1.33]);
  translate([240, 78, 0])
    cube([1, 1, 1.29]);
  translate([241, 78, 0])
    cube([1, 1, 1.22]);
  translate([242, 78, 0])
    cube([1, 1, 1.29]);
  translate([243, 78, 0])
    cube([1, 1, 1.25]);
  translate([244, 78, 0])
    cube([1, 1, 1.25]);
  translate([245, 78, 0])
    cube([1, 1, 1.25]);
  translate([246, 78, 0])
    cube([1, 1, 1.25]);
  translate([0, 79, 0])
    cube([1, 1, 1.45]);
  translate([1, 79, 0])
    cube([1, 1, 1.45]);
  translate([2, 79, 0])
    cube([1, 1, 1.45]);
  translate([3, 79, 0])
    cube([1, 1, 1.45]);
  translate([4, 79, 0])
    cube([1, 1, 1.45]);
  translate([5, 79, 0])
    cube([1, 1, 1.45]);
  translate([6, 79, 0])
    cube([1, 1, 1.45]);
  translate([7, 79, 0])
    cube([1, 1, 1.45]);
  translate([8, 79, 0])
    cube([1, 1, 1.49]);
  translate([9, 79, 0])
    cube([1, 1, 1.45]);
  translate([10, 79, 0])
    cube([1, 1, 1.45]);
  translate([11, 79, 0])
    cube([1, 1, 1.45]);
  translate([12, 79, 0])
    cube([1, 1, 1.45]);
  translate([13, 79, 0])
    cube([1, 1, 1.45]);
  translate([14, 79, 0])
    cube([1, 1, 1.41]);
  translate([15, 79, 0])
    cube([1, 1, 1.41]);
  translate([16, 79, 0])
    cube([1, 1, 1.45]);
  translate([17, 79, 0])
    cube([1, 1, 1.45]);
  translate([18, 79, 0])
    cube([1, 1, 1.45]);
  translate([19, 79, 0])
    cube([1, 1, 1.45]);
  translate([20, 79, 0])
    cube([1, 1, 1.41]);
  translate([21, 79, 0])
    cube([1, 1, 1.41]);
  translate([22, 79, 0])
    cube([1, 1, 1.41]);
  translate([23, 79, 0])
    cube([1, 1, 1.41]);
  translate([24, 79, 0])
    cube([1, 1, 1.61]);
  translate([25, 79, 0])
    cube([1, 1, 5.18]);
  translate([26, 79, 0])
    cube([1, 1, 1.41]);
  translate([27, 79, 0])
    cube([1, 1, 1.37]);
  translate([28, 79, 0])
    cube([1, 1, 0.78]);
  translate([29, 79, 0])
    cube([1, 1, 4.35]);
  translate([30, 79, 0])
    cube([1, 1, 1.61]);
  translate([31, 79, 0])
    cube([1, 1, 3.14]);
  translate([32, 79, 0])
    cube([1, 1, 3.25]);
  translate([33, 79, 0])
    cube([1, 1, 1.88]);
  translate([34, 79, 0])
    cube([1, 1, 1.06]);
  translate([35, 79, 0])
    cube([1, 1, 1.06]);
  translate([36, 79, 0])
    cube([1, 1, 1.57]);
  translate([37, 79, 0])
    cube([1, 1, 2.08]);
  translate([38, 79, 0])
    cube([1, 1, 4.08]);
  translate([39, 79, 0])
    cube([1, 1, 2.67]);
  translate([40, 79, 0])
    cube([1, 1, 1.29]);
  translate([41, 79, 0])
    cube([1, 1, 1.88]);
  translate([42, 79, 0])
    cube([1, 1, 4.98]);
  translate([43, 79, 0])
    cube([1, 1, 2.78]);
  translate([44, 79, 0])
    cube([1, 1, 1.49]);
  translate([45, 79, 0])
    cube([1, 1, 3.18]);
  translate([46, 79, 0])
    cube([1, 1, 6.20]);
  translate([47, 79, 0])
    cube([1, 1, 6.51]);
  translate([48, 79, 0])
    cube([1, 1, 0.43]);
  translate([49, 79, 0])
    cube([1, 1, 1.29]);
  translate([50, 79, 0])
    cube([1, 1, 1.41]);
  translate([51, 79, 0])
    cube([1, 1, 1.37]);
  translate([52, 79, 0])
    cube([1, 1, 1.57]);
  translate([53, 79, 0])
    cube([1, 1, 1.96]);
  translate([54, 79, 0])
    cube([1, 1, 1.33]);
  translate([55, 79, 0])
    cube([1, 1, 1.33]);
  translate([56, 79, 0])
    cube([1, 1, 1.33]);
  translate([57, 79, 0])
    cube([1, 1, 1.33]);
  translate([58, 79, 0])
    cube([1, 1, 1.33]);
  translate([59, 79, 0])
    cube([1, 1, 1.33]);
  translate([60, 79, 0])
    cube([1, 1, 1.33]);
  translate([61, 79, 0])
    cube([1, 1, 1.33]);
  translate([62, 79, 0])
    cube([1, 1, 1.33]);
  translate([63, 79, 0])
    cube([1, 1, 1.33]);
  translate([64, 79, 0])
    cube([1, 1, 1.33]);
  translate([65, 79, 0])
    cube([1, 1, 1.33]);
  translate([66, 79, 0])
    cube([1, 1, 1.33]);
  translate([67, 79, 0])
    cube([1, 1, 1.33]);
  translate([68, 79, 0])
    cube([1, 1, 1.25]);
  translate([69, 79, 0])
    cube([1, 1, 1.61]);
  translate([70, 79, 0])
    cube([1, 1, 1.37]);
  translate([71, 79, 0])
    cube([1, 1, 0.75]);
  translate([72, 79, 0])
    cube([1, 1, 5.92]);
  translate([73, 79, 0])
    cube([1, 1, 3.41]);
  translate([74, 79, 0])
    cube([1, 1, 0.67]);
  translate([75, 79, 0])
    cube([1, 1, 2.16]);
  translate([76, 79, 0])
    cube([1, 1, 2.78]);
  translate([77, 79, 0])
    cube([1, 1, 2.27]);
  translate([78, 79, 0])
    cube([1, 1, 2.24]);
  translate([79, 79, 0])
    cube([1, 1, 2.31]);
  translate([80, 79, 0])
    cube([1, 1, 4.04]);
  translate([81, 79, 0])
    cube([1, 1, 4.75]);
  translate([82, 79, 0])
    cube([1, 1, 4.08]);
  translate([83, 79, 0])
    cube([1, 1, 4.24]);
  translate([84, 79, 0])
    cube([1, 1, 4.67]);
  translate([85, 79, 0])
    cube([1, 1, 5.29]);
  translate([86, 79, 0])
    cube([1, 1, 5.02]);
  translate([87, 79, 0])
    cube([1, 1, 4.90]);
  translate([88, 79, 0])
    cube([1, 1, 4.82]);
  translate([89, 79, 0])
    cube([1, 1, 4.55]);
  translate([90, 79, 0])
    cube([1, 1, 4.20]);
  translate([91, 79, 0])
    cube([1, 1, 4.24]);
  translate([92, 79, 0])
    cube([1, 1, 4.55]);
  translate([93, 79, 0])
    cube([1, 1, 4.67]);
  translate([94, 79, 0])
    cube([1, 1, 4.59]);
  translate([95, 79, 0])
    cube([1, 1, 4.51]);
  translate([96, 79, 0])
    cube([1, 1, 4.31]);
  translate([97, 79, 0])
    cube([1, 1, 4.43]);
  translate([98, 79, 0])
    cube([1, 1, 4.63]);
  translate([99, 79, 0])
    cube([1, 1, 4.98]);
  translate([100, 79, 0])
    cube([1, 1, 5.84]);
  translate([101, 79, 0])
    cube([1, 1, 6.71]);
  translate([102, 79, 0])
    cube([1, 1, 7.18]);
  translate([103, 79, 0])
    cube([1, 1, 6.04]);
  translate([104, 79, 0])
    cube([1, 1, 2.43]);
  translate([105, 79, 0])
    cube([1, 1, 2.24]);
  translate([106, 79, 0])
    cube([1, 1, 2.39]);
  translate([107, 79, 0])
    cube([1, 1, 3.84]);
  translate([108, 79, 0])
    cube([1, 1, 3.18]);
  translate([109, 79, 0])
    cube([1, 1, 2.12]);
  translate([110, 79, 0])
    cube([1, 1, 1.25]);
  translate([111, 79, 0])
    cube([1, 1, 1.10]);
  translate([112, 79, 0])
    cube([1, 1, 1.49]);
  translate([113, 79, 0])
    cube([1, 1, 1.25]);
  translate([114, 79, 0])
    cube([1, 1, 1.29]);
  translate([115, 79, 0])
    cube([1, 1, 1.25]);
  translate([116, 79, 0])
    cube([1, 1, 1.25]);
  translate([117, 79, 0])
    cube([1, 1, 1.25]);
  translate([118, 79, 0])
    cube([1, 1, 1.25]);
  translate([119, 79, 0])
    cube([1, 1, 1.25]);
  translate([120, 79, 0])
    cube([1, 1, 1.25]);
  translate([121, 79, 0])
    cube([1, 1, 1.25]);
  translate([122, 79, 0])
    cube([1, 1, 1.25]);
  translate([123, 79, 0])
    cube([1, 1, 1.25]);
  translate([124, 79, 0])
    cube([1, 1, 1.25]);
  translate([125, 79, 0])
    cube([1, 1, 1.25]);
  translate([126, 79, 0])
    cube([1, 1, 1.25]);
  translate([127, 79, 0])
    cube([1, 1, 1.25]);
  translate([128, 79, 0])
    cube([1, 1, 1.25]);
  translate([129, 79, 0])
    cube([1, 1, 1.25]);
  translate([130, 79, 0])
    cube([1, 1, 1.25]);
  translate([131, 79, 0])
    cube([1, 1, 1.25]);
  translate([132, 79, 0])
    cube([1, 1, 1.25]);
  translate([133, 79, 0])
    cube([1, 1, 1.25]);
  translate([134, 79, 0])
    cube([1, 1, 1.25]);
  translate([135, 79, 0])
    cube([1, 1, 1.25]);
  translate([136, 79, 0])
    cube([1, 1, 1.25]);
  translate([137, 79, 0])
    cube([1, 1, 1.25]);
  translate([138, 79, 0])
    cube([1, 1, 1.25]);
  translate([139, 79, 0])
    cube([1, 1, 1.29]);
  translate([140, 79, 0])
    cube([1, 1, 1.33]);
  translate([141, 79, 0])
    cube([1, 1, 1.29]);
  translate([142, 79, 0])
    cube([1, 1, 1.29]);
  translate([143, 79, 0])
    cube([1, 1, 1.29]);
  translate([144, 79, 0])
    cube([1, 1, 1.29]);
  translate([145, 79, 0])
    cube([1, 1, 1.25]);
  translate([146, 79, 0])
    cube([1, 1, 1.29]);
  translate([147, 79, 0])
    cube([1, 1, 1.29]);
  translate([148, 79, 0])
    cube([1, 1, 1.29]);
  translate([149, 79, 0])
    cube([1, 1, 1.29]);
  translate([150, 79, 0])
    cube([1, 1, 1.29]);
  translate([151, 79, 0])
    cube([1, 1, 1.29]);
  translate([152, 79, 0])
    cube([1, 1, 1.29]);
  translate([153, 79, 0])
    cube([1, 1, 1.29]);
  translate([154, 79, 0])
    cube([1, 1, 1.29]);
  translate([155, 79, 0])
    cube([1, 1, 1.29]);
  translate([156, 79, 0])
    cube([1, 1, 1.29]);
  translate([157, 79, 0])
    cube([1, 1, 1.29]);
  translate([158, 79, 0])
    cube([1, 1, 1.29]);
  translate([159, 79, 0])
    cube([1, 1, 1.29]);
  translate([160, 79, 0])
    cube([1, 1, 1.29]);
  translate([161, 79, 0])
    cube([1, 1, 1.29]);
  translate([162, 79, 0])
    cube([1, 1, 1.29]);
  translate([163, 79, 0])
    cube([1, 1, 1.29]);
  translate([164, 79, 0])
    cube([1, 1, 1.29]);
  translate([165, 79, 0])
    cube([1, 1, 1.37]);
  translate([166, 79, 0])
    cube([1, 1, 1.33]);
  translate([167, 79, 0])
    cube([1, 1, 1.33]);
  translate([168, 79, 0])
    cube([1, 1, 1.29]);
  translate([169, 79, 0])
    cube([1, 1, 1.25]);
  translate([170, 79, 0])
    cube([1, 1, 1.25]);
  translate([171, 79, 0])
    cube([1, 1, 1.29]);
  translate([172, 79, 0])
    cube([1, 1, 1.33]);
  translate([173, 79, 0])
    cube([1, 1, 1.33]);
  translate([174, 79, 0])
    cube([1, 1, 1.29]);
  translate([175, 79, 0])
    cube([1, 1, 1.29]);
  translate([176, 79, 0])
    cube([1, 1, 1.29]);
  translate([177, 79, 0])
    cube([1, 1, 1.29]);
  translate([178, 79, 0])
    cube([1, 1, 1.29]);
  translate([179, 79, 0])
    cube([1, 1, 1.29]);
  translate([180, 79, 0])
    cube([1, 1, 1.29]);
  translate([181, 79, 0])
    cube([1, 1, 1.33]);
  translate([182, 79, 0])
    cube([1, 1, 1.29]);
  translate([183, 79, 0])
    cube([1, 1, 1.29]);
  translate([184, 79, 0])
    cube([1, 1, 1.33]);
  translate([185, 79, 0])
    cube([1, 1, 1.33]);
  translate([186, 79, 0])
    cube([1, 1, 1.33]);
  translate([187, 79, 0])
    cube([1, 1, 1.29]);
  translate([188, 79, 0])
    cube([1, 1, 1.25]);
  translate([189, 79, 0])
    cube([1, 1, 1.29]);
  translate([190, 79, 0])
    cube([1, 1, 1.29]);
  translate([191, 79, 0])
    cube([1, 1, 1.29]);
  translate([192, 79, 0])
    cube([1, 1, 1.29]);
  translate([193, 79, 0])
    cube([1, 1, 1.29]);
  translate([194, 79, 0])
    cube([1, 1, 1.29]);
  translate([195, 79, 0])
    cube([1, 1, 1.29]);
  translate([196, 79, 0])
    cube([1, 1, 1.29]);
  translate([197, 79, 0])
    cube([1, 1, 1.29]);
  translate([198, 79, 0])
    cube([1, 1, 1.29]);
  translate([199, 79, 0])
    cube([1, 1, 1.29]);
  translate([200, 79, 0])
    cube([1, 1, 1.29]);
  translate([201, 79, 0])
    cube([1, 1, 1.29]);
  translate([202, 79, 0])
    cube([1, 1, 1.29]);
  translate([203, 79, 0])
    cube([1, 1, 1.29]);
  translate([204, 79, 0])
    cube([1, 1, 1.29]);
  translate([205, 79, 0])
    cube([1, 1, 1.29]);
  translate([206, 79, 0])
    cube([1, 1, 1.29]);
  translate([207, 79, 0])
    cube([1, 1, 1.29]);
  translate([208, 79, 0])
    cube([1, 1, 1.29]);
  translate([209, 79, 0])
    cube([1, 1, 1.25]);
  translate([210, 79, 0])
    cube([1, 1, 1.25]);
  translate([211, 79, 0])
    cube([1, 1, 1.29]);
  translate([212, 79, 0])
    cube([1, 1, 1.29]);
  translate([213, 79, 0])
    cube([1, 1, 1.29]);
  translate([214, 79, 0])
    cube([1, 1, 1.29]);
  translate([215, 79, 0])
    cube([1, 1, 1.29]);
  translate([216, 79, 0])
    cube([1, 1, 1.29]);
  translate([217, 79, 0])
    cube([1, 1, 1.25]);
  translate([218, 79, 0])
    cube([1, 1, 1.29]);
  translate([219, 79, 0])
    cube([1, 1, 1.29]);
  translate([220, 79, 0])
    cube([1, 1, 1.29]);
  translate([221, 79, 0])
    cube([1, 1, 1.29]);
  translate([222, 79, 0])
    cube([1, 1, 1.29]);
  translate([223, 79, 0])
    cube([1, 1, 1.29]);
  translate([224, 79, 0])
    cube([1, 1, 1.29]);
  translate([225, 79, 0])
    cube([1, 1, 1.29]);
  translate([226, 79, 0])
    cube([1, 1, 1.29]);
  translate([227, 79, 0])
    cube([1, 1, 1.29]);
  translate([228, 79, 0])
    cube([1, 1, 1.29]);
  translate([229, 79, 0])
    cube([1, 1, 1.22]);
  translate([230, 79, 0])
    cube([1, 1, 1.29]);
  translate([231, 79, 0])
    cube([1, 1, 1.29]);
  translate([232, 79, 0])
    cube([1, 1, 1.29]);
  translate([233, 79, 0])
    cube([1, 1, 1.29]);
  translate([234, 79, 0])
    cube([1, 1, 1.29]);
  translate([235, 79, 0])
    cube([1, 1, 1.25]);
  translate([236, 79, 0])
    cube([1, 1, 1.25]);
  translate([237, 79, 0])
    cube([1, 1, 1.29]);
  translate([238, 79, 0])
    cube([1, 1, 1.25]);
  translate([239, 79, 0])
    cube([1, 1, 1.29]);
  translate([240, 79, 0])
    cube([1, 1, 1.29]);
  translate([241, 79, 0])
    cube([1, 1, 1.29]);
  translate([242, 79, 0])
    cube([1, 1, 1.29]);
  translate([243, 79, 0])
    cube([1, 1, 1.33]);
  translate([244, 79, 0])
    cube([1, 1, 1.25]);
  translate([245, 79, 0])
    cube([1, 1, 1.29]);
  translate([246, 79, 0])
    cube([1, 1, 1.33]);
  translate([0, 80, 0])
    cube([1, 1, 1.45]);
  translate([1, 80, 0])
    cube([1, 1, 1.45]);
  translate([2, 80, 0])
    cube([1, 1, 1.45]);
  translate([3, 80, 0])
    cube([1, 1, 1.45]);
  translate([4, 80, 0])
    cube([1, 1, 1.45]);
  translate([5, 80, 0])
    cube([1, 1, 1.45]);
  translate([6, 80, 0])
    cube([1, 1, 1.45]);
  translate([7, 80, 0])
    cube([1, 1, 1.45]);
  translate([8, 80, 0])
    cube([1, 1, 1.45]);
  translate([9, 80, 0])
    cube([1, 1, 1.45]);
  translate([10, 80, 0])
    cube([1, 1, 1.45]);
  translate([11, 80, 0])
    cube([1, 1, 1.45]);
  translate([12, 80, 0])
    cube([1, 1, 1.45]);
  translate([13, 80, 0])
    cube([1, 1, 1.45]);
  translate([14, 80, 0])
    cube([1, 1, 1.45]);
  translate([15, 80, 0])
    cube([1, 1, 1.45]);
  translate([16, 80, 0])
    cube([1, 1, 1.45]);
  translate([17, 80, 0])
    cube([1, 1, 1.45]);
  translate([18, 80, 0])
    cube([1, 1, 1.45]);
  translate([19, 80, 0])
    cube([1, 1, 1.45]);
  translate([20, 80, 0])
    cube([1, 1, 1.41]);
  translate([21, 80, 0])
    cube([1, 1, 1.41]);
  translate([22, 80, 0])
    cube([1, 1, 1.41]);
  translate([23, 80, 0])
    cube([1, 1, 1.41]);
  translate([24, 80, 0])
    cube([1, 1, 1.41]);
  translate([25, 80, 0])
    cube([1, 1, 5.29]);
  translate([26, 80, 0])
    cube([1, 1, 1.88]);
  translate([27, 80, 0])
    cube([1, 1, 1.14]);
  translate([28, 80, 0])
    cube([1, 1, 1.18]);
  translate([29, 80, 0])
    cube([1, 1, 6.08]);
  translate([30, 80, 0])
    cube([1, 1, 1.49]);
  translate([31, 80, 0])
    cube([1, 1, 2.51]);
  translate([32, 80, 0])
    cube([1, 1, 3.76]);
  translate([33, 80, 0])
    cube([1, 1, 2.67]);
  translate([34, 80, 0])
    cube([1, 1, 1.06]);
  translate([35, 80, 0])
    cube([1, 1, 1.29]);
  translate([36, 80, 0])
    cube([1, 1, 1.61]);
  translate([37, 80, 0])
    cube([1, 1, 3.02]);
  translate([38, 80, 0])
    cube([1, 1, 2.31]);
  translate([39, 80, 0])
    cube([1, 1, 1.49]);
  translate([40, 80, 0])
    cube([1, 1, 1.76]);
  translate([41, 80, 0])
    cube([1, 1, 2.24]);
  translate([42, 80, 0])
    cube([1, 1, 2.39]);
  translate([43, 80, 0])
    cube([1, 1, 1.84]);
  translate([44, 80, 0])
    cube([1, 1, 1.65]);
  translate([45, 80, 0])
    cube([1, 1, 3.37]);
  translate([46, 80, 0])
    cube([1, 1, 2.55]);
  translate([47, 80, 0])
    cube([1, 1, 1.53]);
  translate([48, 80, 0])
    cube([1, 1, 1.41]);
  translate([49, 80, 0])
    cube([1, 1, 1.45]);
  translate([50, 80, 0])
    cube([1, 1, 1.41]);
  translate([51, 80, 0])
    cube([1, 1, 1.37]);
  translate([52, 80, 0])
    cube([1, 1, 1.37]);
  translate([53, 80, 0])
    cube([1, 1, 1.41]);
  translate([54, 80, 0])
    cube([1, 1, 1.10]);
  translate([55, 80, 0])
    cube([1, 1, 1.49]);
  translate([56, 80, 0])
    cube([1, 1, 1.33]);
  translate([57, 80, 0])
    cube([1, 1, 1.33]);
  translate([58, 80, 0])
    cube([1, 1, 1.33]);
  translate([59, 80, 0])
    cube([1, 1, 1.33]);
  translate([60, 80, 0])
    cube([1, 1, 1.33]);
  translate([61, 80, 0])
    cube([1, 1, 1.33]);
  translate([62, 80, 0])
    cube([1, 1, 1.33]);
  translate([63, 80, 0])
    cube([1, 1, 1.33]);
  translate([64, 80, 0])
    cube([1, 1, 1.33]);
  translate([65, 80, 0])
    cube([1, 1, 1.33]);
  translate([66, 80, 0])
    cube([1, 1, 1.37]);
  translate([67, 80, 0])
    cube([1, 1, 1.49]);
  translate([68, 80, 0])
    cube([1, 1, 1.41]);
  translate([69, 80, 0])
    cube([1, 1, 1.61]);
  translate([70, 80, 0])
    cube([1, 1, 4.27]);
  translate([71, 80, 0])
    cube([1, 1, 3.76]);
  translate([72, 80, 0])
    cube([1, 1, 6.90]);
  translate([73, 80, 0])
    cube([1, 1, 4.78]);
  translate([74, 80, 0])
    cube([1, 1, 2.12]);
  translate([75, 80, 0])
    cube([1, 1, 1.29]);
  translate([76, 80, 0])
    cube([1, 1, 1.61]);
  translate([77, 80, 0])
    cube([1, 1, 3.37]);
  translate([78, 80, 0])
    cube([1, 1, 3.33]);
  translate([79, 80, 0])
    cube([1, 1, 2.67]);
  translate([80, 80, 0])
    cube([1, 1, 1.45]);
  translate([81, 80, 0])
    cube([1, 1, 3.02]);
  translate([82, 80, 0])
    cube([1, 1, 4.31]);
  translate([83, 80, 0])
    cube([1, 1, 4.31]);
  translate([84, 80, 0])
    cube([1, 1, 5.29]);
  translate([85, 80, 0])
    cube([1, 1, 5.65]);
  translate([86, 80, 0])
    cube([1, 1, 5.25]);
  translate([87, 80, 0])
    cube([1, 1, 5.14]);
  translate([88, 80, 0])
    cube([1, 1, 5.41]);
  translate([89, 80, 0])
    cube([1, 1, 5.45]);
  translate([90, 80, 0])
    cube([1, 1, 4.78]);
  translate([91, 80, 0])
    cube([1, 1, 4.47]);
  translate([92, 80, 0])
    cube([1, 1, 4.71]);
  translate([93, 80, 0])
    cube([1, 1, 4.78]);
  translate([94, 80, 0])
    cube([1, 1, 4.90]);
  translate([95, 80, 0])
    cube([1, 1, 4.82]);
  translate([96, 80, 0])
    cube([1, 1, 5.14]);
  translate([97, 80, 0])
    cube([1, 1, 4.75]);
  translate([98, 80, 0])
    cube([1, 1, 5.06]);
  translate([99, 80, 0])
    cube([1, 1, 5.45]);
  translate([100, 80, 0])
    cube([1, 1, 6.43]);
  translate([101, 80, 0])
    cube([1, 1, 6.86]);
  translate([102, 80, 0])
    cube([1, 1, 7.14]);
  translate([103, 80, 0])
    cube([1, 1, 1.45]);
  translate([104, 80, 0])
    cube([1, 1, 2.39]);
  translate([105, 80, 0])
    cube([1, 1, 2.82]);
  translate([106, 80, 0])
    cube([1, 1, 2.00]);
  translate([107, 80, 0])
    cube([1, 1, 3.96]);
  translate([108, 80, 0])
    cube([1, 1, 2.08]);
  translate([109, 80, 0])
    cube([1, 1, 3.53]);
  translate([110, 80, 0])
    cube([1, 1, 4.04]);
  translate([111, 80, 0])
    cube([1, 1, 4.51]);
  translate([112, 80, 0])
    cube([1, 1, 6.16]);
  translate([113, 80, 0])
    cube([1, 1, 2.35]);
  translate([114, 80, 0])
    cube([1, 1, 0.94]);
  translate([115, 80, 0])
    cube([1, 1, 1.22]);
  translate([116, 80, 0])
    cube([1, 1, 0.78]);
  translate([117, 80, 0])
    cube([1, 1, 1.29]);
  translate([118, 80, 0])
    cube([1, 1, 1.14]);
  translate([119, 80, 0])
    cube([1, 1, 1.25]);
  translate([120, 80, 0])
    cube([1, 1, 1.25]);
  translate([121, 80, 0])
    cube([1, 1, 1.25]);
  translate([122, 80, 0])
    cube([1, 1, 1.25]);
  translate([123, 80, 0])
    cube([1, 1, 1.25]);
  translate([124, 80, 0])
    cube([1, 1, 1.25]);
  translate([125, 80, 0])
    cube([1, 1, 1.25]);
  translate([126, 80, 0])
    cube([1, 1, 1.25]);
  translate([127, 80, 0])
    cube([1, 1, 1.25]);
  translate([128, 80, 0])
    cube([1, 1, 1.25]);
  translate([129, 80, 0])
    cube([1, 1, 1.25]);
  translate([130, 80, 0])
    cube([1, 1, 1.25]);
  translate([131, 80, 0])
    cube([1, 1, 1.25]);
  translate([132, 80, 0])
    cube([1, 1, 1.25]);
  translate([133, 80, 0])
    cube([1, 1, 1.25]);
  translate([134, 80, 0])
    cube([1, 1, 1.25]);
  translate([135, 80, 0])
    cube([1, 1, 1.25]);
  translate([136, 80, 0])
    cube([1, 1, 1.25]);
  translate([137, 80, 0])
    cube([1, 1, 1.22]);
  translate([138, 80, 0])
    cube([1, 1, 1.25]);
  translate([139, 80, 0])
    cube([1, 1, 1.25]);
  translate([140, 80, 0])
    cube([1, 1, 1.25]);
  translate([141, 80, 0])
    cube([1, 1, 1.25]);
  translate([142, 80, 0])
    cube([1, 1, 1.29]);
  translate([143, 80, 0])
    cube([1, 1, 1.29]);
  translate([144, 80, 0])
    cube([1, 1, 1.33]);
  translate([145, 80, 0])
    cube([1, 1, 1.29]);
  translate([146, 80, 0])
    cube([1, 1, 1.29]);
  translate([147, 80, 0])
    cube([1, 1, 1.29]);
  translate([148, 80, 0])
    cube([1, 1, 1.29]);
  translate([149, 80, 0])
    cube([1, 1, 1.29]);
  translate([150, 80, 0])
    cube([1, 1, 1.29]);
  translate([151, 80, 0])
    cube([1, 1, 1.29]);
  translate([152, 80, 0])
    cube([1, 1, 1.29]);
  translate([153, 80, 0])
    cube([1, 1, 1.29]);
  translate([154, 80, 0])
    cube([1, 1, 1.29]);
  translate([155, 80, 0])
    cube([1, 1, 1.29]);
  translate([156, 80, 0])
    cube([1, 1, 1.29]);
  translate([157, 80, 0])
    cube([1, 1, 1.29]);
  translate([158, 80, 0])
    cube([1, 1, 1.25]);
  translate([159, 80, 0])
    cube([1, 1, 1.33]);
  translate([160, 80, 0])
    cube([1, 1, 1.29]);
  translate([161, 80, 0])
    cube([1, 1, 1.29]);
  translate([162, 80, 0])
    cube([1, 1, 1.29]);
  translate([163, 80, 0])
    cube([1, 1, 1.29]);
  translate([164, 80, 0])
    cube([1, 1, 1.33]);
  translate([165, 80, 0])
    cube([1, 1, 1.33]);
  translate([166, 80, 0])
    cube([1, 1, 1.29]);
  translate([167, 80, 0])
    cube([1, 1, 1.29]);
  translate([168, 80, 0])
    cube([1, 1, 1.29]);
  translate([169, 80, 0])
    cube([1, 1, 1.25]);
  translate([170, 80, 0])
    cube([1, 1, 1.33]);
  translate([171, 80, 0])
    cube([1, 1, 1.29]);
  translate([172, 80, 0])
    cube([1, 1, 1.33]);
  translate([173, 80, 0])
    cube([1, 1, 1.33]);
  translate([174, 80, 0])
    cube([1, 1, 1.29]);
  translate([175, 80, 0])
    cube([1, 1, 1.29]);
  translate([176, 80, 0])
    cube([1, 1, 1.29]);
  translate([177, 80, 0])
    cube([1, 1, 1.29]);
  translate([178, 80, 0])
    cube([1, 1, 1.29]);
  translate([179, 80, 0])
    cube([1, 1, 1.33]);
  translate([180, 80, 0])
    cube([1, 1, 1.33]);
  translate([181, 80, 0])
    cube([1, 1, 1.33]);
  translate([182, 80, 0])
    cube([1, 1, 1.29]);
  translate([183, 80, 0])
    cube([1, 1, 1.29]);
  translate([184, 80, 0])
    cube([1, 1, 1.25]);
  translate([185, 80, 0])
    cube([1, 1, 1.29]);
  translate([186, 80, 0])
    cube([1, 1, 1.29]);
  translate([187, 80, 0])
    cube([1, 1, 1.29]);
  translate([188, 80, 0])
    cube([1, 1, 1.25]);
  translate([189, 80, 0])
    cube([1, 1, 1.29]);
  translate([190, 80, 0])
    cube([1, 1, 1.29]);
  translate([191, 80, 0])
    cube([1, 1, 1.29]);
  translate([192, 80, 0])
    cube([1, 1, 1.25]);
  translate([193, 80, 0])
    cube([1, 1, 1.29]);
  translate([194, 80, 0])
    cube([1, 1, 1.29]);
  translate([195, 80, 0])
    cube([1, 1, 1.29]);
  translate([196, 80, 0])
    cube([1, 1, 1.29]);
  translate([197, 80, 0])
    cube([1, 1, 1.29]);
  translate([198, 80, 0])
    cube([1, 1, 1.29]);
  translate([199, 80, 0])
    cube([1, 1, 1.29]);
  translate([200, 80, 0])
    cube([1, 1, 1.29]);
  translate([201, 80, 0])
    cube([1, 1, 1.29]);
  translate([202, 80, 0])
    cube([1, 1, 1.29]);
  translate([203, 80, 0])
    cube([1, 1, 1.29]);
  translate([204, 80, 0])
    cube([1, 1, 1.29]);
  translate([205, 80, 0])
    cube([1, 1, 1.29]);
  translate([206, 80, 0])
    cube([1, 1, 1.29]);
  translate([207, 80, 0])
    cube([1, 1, 1.29]);
  translate([208, 80, 0])
    cube([1, 1, 1.29]);
  translate([209, 80, 0])
    cube([1, 1, 1.29]);
  translate([210, 80, 0])
    cube([1, 1, 1.29]);
  translate([211, 80, 0])
    cube([1, 1, 1.25]);
  translate([212, 80, 0])
    cube([1, 1, 1.29]);
  translate([213, 80, 0])
    cube([1, 1, 1.29]);
  translate([214, 80, 0])
    cube([1, 1, 1.29]);
  translate([215, 80, 0])
    cube([1, 1, 1.29]);
  translate([216, 80, 0])
    cube([1, 1, 1.29]);
  translate([217, 80, 0])
    cube([1, 1, 1.25]);
  translate([218, 80, 0])
    cube([1, 1, 1.33]);
  translate([219, 80, 0])
    cube([1, 1, 1.29]);
  translate([220, 80, 0])
    cube([1, 1, 1.29]);
  translate([221, 80, 0])
    cube([1, 1, 1.29]);
  translate([222, 80, 0])
    cube([1, 1, 1.29]);
  translate([223, 80, 0])
    cube([1, 1, 1.29]);
  translate([224, 80, 0])
    cube([1, 1, 1.29]);
  translate([225, 80, 0])
    cube([1, 1, 1.29]);
  translate([226, 80, 0])
    cube([1, 1, 1.29]);
  translate([227, 80, 0])
    cube([1, 1, 1.29]);
  translate([228, 80, 0])
    cube([1, 1, 1.29]);
  translate([229, 80, 0])
    cube([1, 1, 1.29]);
  translate([230, 80, 0])
    cube([1, 1, 1.29]);
  translate([231, 80, 0])
    cube([1, 1, 1.29]);
  translate([232, 80, 0])
    cube([1, 1, 1.29]);
  translate([233, 80, 0])
    cube([1, 1, 1.25]);
  translate([234, 80, 0])
    cube([1, 1, 1.25]);
  translate([235, 80, 0])
    cube([1, 1, 1.29]);
  translate([236, 80, 0])
    cube([1, 1, 1.29]);
  translate([237, 80, 0])
    cube([1, 1, 1.29]);
  translate([238, 80, 0])
    cube([1, 1, 1.29]);
  translate([239, 80, 0])
    cube([1, 1, 1.29]);
  translate([240, 80, 0])
    cube([1, 1, 1.33]);
  translate([241, 80, 0])
    cube([1, 1, 1.29]);
  translate([242, 80, 0])
    cube([1, 1, 1.29]);
  translate([243, 80, 0])
    cube([1, 1, 1.22]);
  translate([244, 80, 0])
    cube([1, 1, 1.29]);
  translate([245, 80, 0])
    cube([1, 1, 1.29]);
  translate([246, 80, 0])
    cube([1, 1, 1.22]);
  translate([0, 81, 0])
    cube([1, 1, 1.45]);
  translate([1, 81, 0])
    cube([1, 1, 1.45]);
  translate([2, 81, 0])
    cube([1, 1, 1.45]);
  translate([3, 81, 0])
    cube([1, 1, 1.45]);
  translate([4, 81, 0])
    cube([1, 1, 1.45]);
  translate([5, 81, 0])
    cube([1, 1, 1.45]);
  translate([6, 81, 0])
    cube([1, 1, 1.45]);
  translate([7, 81, 0])
    cube([1, 1, 1.45]);
  translate([8, 81, 0])
    cube([1, 1, 1.45]);
  translate([9, 81, 0])
    cube([1, 1, 1.45]);
  translate([10, 81, 0])
    cube([1, 1, 1.45]);
  translate([11, 81, 0])
    cube([1, 1, 1.45]);
  translate([12, 81, 0])
    cube([1, 1, 1.45]);
  translate([13, 81, 0])
    cube([1, 1, 1.45]);
  translate([14, 81, 0])
    cube([1, 1, 1.45]);
  translate([15, 81, 0])
    cube([1, 1, 1.45]);
  translate([16, 81, 0])
    cube([1, 1, 1.45]);
  translate([17, 81, 0])
    cube([1, 1, 1.45]);
  translate([18, 81, 0])
    cube([1, 1, 1.45]);
  translate([19, 81, 0])
    cube([1, 1, 1.45]);
  translate([20, 81, 0])
    cube([1, 1, 1.41]);
  translate([21, 81, 0])
    cube([1, 1, 1.41]);
  translate([22, 81, 0])
    cube([1, 1, 1.41]);
  translate([23, 81, 0])
    cube([1, 1, 1.41]);
  translate([24, 81, 0])
    cube([1, 1, 1.49]);
  translate([25, 81, 0])
    cube([1, 1, 1.29]);
  translate([26, 81, 0])
    cube([1, 1, 1.33]);
  translate([27, 81, 0])
    cube([1, 1, 1.25]);
  translate([28, 81, 0])
    cube([1, 1, 1.33]);
  translate([29, 81, 0])
    cube([1, 1, 6.78]);
  translate([30, 81, 0])
    cube([1, 1, 1.10]);
  translate([31, 81, 0])
    cube([1, 1, 1.76]);
  translate([32, 81, 0])
    cube([1, 1, 1.69]);
  translate([33, 81, 0])
    cube([1, 1, 1.18]);
  translate([34, 81, 0])
    cube([1, 1, 1.25]);
  translate([35, 81, 0])
    cube([1, 1, 1.57]);
  translate([36, 81, 0])
    cube([1, 1, 1.53]);
  translate([37, 81, 0])
    cube([1, 1, 3.57]);
  translate([38, 81, 0])
    cube([1, 1, 1.14]);
  translate([39, 81, 0])
    cube([1, 1, 1.45]);
  translate([40, 81, 0])
    cube([1, 1, 2.35]);
  translate([41, 81, 0])
    cube([1, 1, 3.65]);
  translate([42, 81, 0])
    cube([1, 1, 0.75]);
  translate([43, 81, 0])
    cube([1, 1, 1.49]);
  translate([44, 81, 0])
    cube([1, 1, 1.80]);
  translate([45, 81, 0])
    cube([1, 1, 3.10]);
  translate([46, 81, 0])
    cube([1, 1, 2.82]);
  translate([47, 81, 0])
    cube([1, 1, 6.43]);
  translate([48, 81, 0])
    cube([1, 1, 1.22]);
  translate([49, 81, 0])
    cube([1, 1, 1.41]);
  translate([50, 81, 0])
    cube([1, 1, 1.45]);
  translate([51, 81, 0])
    cube([1, 1, 1.41]);
  translate([52, 81, 0])
    cube([1, 1, 1.61]);
  translate([53, 81, 0])
    cube([1, 1, 1.65]);
  translate([54, 81, 0])
    cube([1, 1, 1.41]);
  translate([55, 81, 0])
    cube([1, 1, 1.37]);
  translate([56, 81, 0])
    cube([1, 1, 1.33]);
  translate([57, 81, 0])
    cube([1, 1, 1.33]);
  translate([58, 81, 0])
    cube([1, 1, 1.33]);
  translate([59, 81, 0])
    cube([1, 1, 1.33]);
  translate([60, 81, 0])
    cube([1, 1, 1.33]);
  translate([61, 81, 0])
    cube([1, 1, 1.33]);
  translate([62, 81, 0])
    cube([1, 1, 1.33]);
  translate([63, 81, 0])
    cube([1, 1, 1.33]);
  translate([64, 81, 0])
    cube([1, 1, 1.33]);
  translate([65, 81, 0])
    cube([1, 1, 1.29]);
  translate([66, 81, 0])
    cube([1, 1, 1.37]);
  translate([67, 81, 0])
    cube([1, 1, 1.57]);
  translate([68, 81, 0])
    cube([1, 1, 1.41]);
  translate([69, 81, 0])
    cube([1, 1, 1.06]);
  translate([70, 81, 0])
    cube([1, 1, 0.78]);
  translate([71, 81, 0])
    cube([1, 1, 1.06]);
  translate([72, 81, 0])
    cube([1, 1, 0.82]);
  translate([73, 81, 0])
    cube([1, 1, 6.43]);
  translate([74, 81, 0])
    cube([1, 1, 1.22]);
  translate([75, 81, 0])
    cube([1, 1, 1.22]);
  translate([76, 81, 0])
    cube([1, 1, 2.90]);
  translate([77, 81, 0])
    cube([1, 1, 2.78]);
  translate([78, 81, 0])
    cube([1, 1, 2.39]);
  translate([79, 81, 0])
    cube([1, 1, 1.14]);
  translate([80, 81, 0])
    cube([1, 1, 1.65]);
  translate([81, 81, 0])
    cube([1, 1, 1.22]);
  translate([82, 81, 0])
    cube([1, 1, 4.63]);
  translate([83, 81, 0])
    cube([1, 1, 4.51]);
  translate([84, 81, 0])
    cube([1, 1, 5.45]);
  translate([85, 81, 0])
    cube([1, 1, 5.65]);
  translate([86, 81, 0])
    cube([1, 1, 5.45]);
  translate([87, 81, 0])
    cube([1, 1, 5.29]);
  translate([88, 81, 0])
    cube([1, 1, 5.61]);
  translate([89, 81, 0])
    cube([1, 1, 5.69]);
  translate([90, 81, 0])
    cube([1, 1, 5.65]);
  translate([91, 81, 0])
    cube([1, 1, 5.25]);
  translate([92, 81, 0])
    cube([1, 1, 4.94]);
  translate([93, 81, 0])
    cube([1, 1, 5.14]);
  translate([94, 81, 0])
    cube([1, 1, 5.41]);
  translate([95, 81, 0])
    cube([1, 1, 5.25]);
  translate([96, 81, 0])
    cube([1, 1, 5.92]);
  translate([97, 81, 0])
    cube([1, 1, 5.96]);
  translate([98, 81, 0])
    cube([1, 1, 5.37]);
  translate([99, 81, 0])
    cube([1, 1, 5.88]);
  translate([100, 81, 0])
    cube([1, 1, 6.63]);
  translate([101, 81, 0])
    cube([1, 1, 6.08]);
  translate([102, 81, 0])
    cube([1, 1, 6.51]);
  translate([103, 81, 0])
    cube([1, 1, 6.82]);
  translate([104, 81, 0])
    cube([1, 1, 1.96]);
  translate([105, 81, 0])
    cube([1, 1, 1.45]);
  translate([106, 81, 0])
    cube([1, 1, 2.78]);
  translate([107, 81, 0])
    cube([1, 1, 2.39]);
  translate([108, 81, 0])
    cube([1, 1, 2.90]);
  translate([109, 81, 0])
    cube([1, 1, 4.27]);
  translate([110, 81, 0])
    cube([1, 1, 3.22]);
  translate([111, 81, 0])
    cube([1, 1, 2.43]);
  translate([112, 81, 0])
    cube([1, 1, 3.33]);
  translate([113, 81, 0])
    cube([1, 1, 6.04]);
  translate([114, 81, 0])
    cube([1, 1, 6.63]);
  translate([115, 81, 0])
    cube([1, 1, 6.43]);
  translate([116, 81, 0])
    cube([1, 1, 4.27]);
  translate([117, 81, 0])
    cube([1, 1, 1.29]);
  translate([118, 81, 0])
    cube([1, 1, 1.29]);
  translate([119, 81, 0])
    cube([1, 1, 1.29]);
  translate([120, 81, 0])
    cube([1, 1, 1.25]);
  translate([121, 81, 0])
    cube([1, 1, 1.25]);
  translate([122, 81, 0])
    cube([1, 1, 1.25]);
  translate([123, 81, 0])
    cube([1, 1, 1.25]);
  translate([124, 81, 0])
    cube([1, 1, 1.25]);
  translate([125, 81, 0])
    cube([1, 1, 1.25]);
  translate([126, 81, 0])
    cube([1, 1, 1.25]);
  translate([127, 81, 0])
    cube([1, 1, 1.25]);
  translate([128, 81, 0])
    cube([1, 1, 1.25]);
  translate([129, 81, 0])
    cube([1, 1, 1.25]);
  translate([130, 81, 0])
    cube([1, 1, 1.25]);
  translate([131, 81, 0])
    cube([1, 1, 1.25]);
  translate([132, 81, 0])
    cube([1, 1, 1.25]);
  translate([133, 81, 0])
    cube([1, 1, 1.25]);
  translate([134, 81, 0])
    cube([1, 1, 1.25]);
  translate([135, 81, 0])
    cube([1, 1, 1.25]);
  translate([136, 81, 0])
    cube([1, 1, 1.29]);
  translate([137, 81, 0])
    cube([1, 1, 1.29]);
  translate([138, 81, 0])
    cube([1, 1, 1.33]);
  translate([139, 81, 0])
    cube([1, 1, 1.25]);
  translate([140, 81, 0])
    cube([1, 1, 1.25]);
  translate([141, 81, 0])
    cube([1, 1, 1.25]);
  translate([142, 81, 0])
    cube([1, 1, 1.29]);
  translate([143, 81, 0])
    cube([1, 1, 1.29]);
  translate([144, 81, 0])
    cube([1, 1, 1.25]);
  translate([145, 81, 0])
    cube([1, 1, 1.29]);
  translate([146, 81, 0])
    cube([1, 1, 1.29]);
  translate([147, 81, 0])
    cube([1, 1, 1.29]);
  translate([148, 81, 0])
    cube([1, 1, 1.29]);
  translate([149, 81, 0])
    cube([1, 1, 1.29]);
  translate([150, 81, 0])
    cube([1, 1, 1.29]);
  translate([151, 81, 0])
    cube([1, 1, 1.29]);
  translate([152, 81, 0])
    cube([1, 1, 1.29]);
  translate([153, 81, 0])
    cube([1, 1, 1.29]);
  translate([154, 81, 0])
    cube([1, 1, 1.29]);
  translate([155, 81, 0])
    cube([1, 1, 1.29]);
  translate([156, 81, 0])
    cube([1, 1, 1.29]);
  translate([157, 81, 0])
    cube([1, 1, 1.29]);
  translate([158, 81, 0])
    cube([1, 1, 1.33]);
  translate([159, 81, 0])
    cube([1, 1, 1.29]);
  translate([160, 81, 0])
    cube([1, 1, 1.29]);
  translate([161, 81, 0])
    cube([1, 1, 1.29]);
  translate([162, 81, 0])
    cube([1, 1, 1.29]);
  translate([163, 81, 0])
    cube([1, 1, 1.29]);
  translate([164, 81, 0])
    cube([1, 1, 1.33]);
  translate([165, 81, 0])
    cube([1, 1, 1.33]);
  translate([166, 81, 0])
    cube([1, 1, 1.29]);
  translate([167, 81, 0])
    cube([1, 1, 1.29]);
  translate([168, 81, 0])
    cube([1, 1, 1.29]);
  translate([169, 81, 0])
    cube([1, 1, 1.33]);
  translate([170, 81, 0])
    cube([1, 1, 1.29]);
  translate([171, 81, 0])
    cube([1, 1, 1.29]);
  translate([172, 81, 0])
    cube([1, 1, 1.33]);
  translate([173, 81, 0])
    cube([1, 1, 1.33]);
  translate([174, 81, 0])
    cube([1, 1, 1.29]);
  translate([175, 81, 0])
    cube([1, 1, 1.29]);
  translate([176, 81, 0])
    cube([1, 1, 1.29]);
  translate([177, 81, 0])
    cube([1, 1, 1.33]);
  translate([178, 81, 0])
    cube([1, 1, 1.33]);
  translate([179, 81, 0])
    cube([1, 1, 1.33]);
  translate([180, 81, 0])
    cube([1, 1, 1.33]);
  translate([181, 81, 0])
    cube([1, 1, 1.33]);
  translate([182, 81, 0])
    cube([1, 1, 1.29]);
  translate([183, 81, 0])
    cube([1, 1, 1.29]);
  translate([184, 81, 0])
    cube([1, 1, 1.29]);
  translate([185, 81, 0])
    cube([1, 1, 1.29]);
  translate([186, 81, 0])
    cube([1, 1, 1.29]);
  translate([187, 81, 0])
    cube([1, 1, 1.29]);
  translate([188, 81, 0])
    cube([1, 1, 1.25]);
  translate([189, 81, 0])
    cube([1, 1, 1.29]);
  translate([190, 81, 0])
    cube([1, 1, 1.29]);
  translate([191, 81, 0])
    cube([1, 1, 1.29]);
  translate([192, 81, 0])
    cube([1, 1, 1.33]);
  translate([193, 81, 0])
    cube([1, 1, 1.29]);
  translate([194, 81, 0])
    cube([1, 1, 1.29]);
  translate([195, 81, 0])
    cube([1, 1, 1.29]);
  translate([196, 81, 0])
    cube([1, 1, 1.29]);
  translate([197, 81, 0])
    cube([1, 1, 1.29]);
  translate([198, 81, 0])
    cube([1, 1, 1.29]);
  translate([199, 81, 0])
    cube([1, 1, 1.29]);
  translate([200, 81, 0])
    cube([1, 1, 1.29]);
  translate([201, 81, 0])
    cube([1, 1, 1.29]);
  translate([202, 81, 0])
    cube([1, 1, 1.29]);
  translate([203, 81, 0])
    cube([1, 1, 1.29]);
  translate([204, 81, 0])
    cube([1, 1, 1.29]);
  translate([205, 81, 0])
    cube([1, 1, 1.29]);
  translate([206, 81, 0])
    cube([1, 1, 1.29]);
  translate([207, 81, 0])
    cube([1, 1, 1.29]);
  translate([208, 81, 0])
    cube([1, 1, 1.29]);
  translate([209, 81, 0])
    cube([1, 1, 1.29]);
  translate([210, 81, 0])
    cube([1, 1, 1.29]);
  translate([211, 81, 0])
    cube([1, 1, 1.25]);
  translate([212, 81, 0])
    cube([1, 1, 1.29]);
  translate([213, 81, 0])
    cube([1, 1, 1.29]);
  translate([214, 81, 0])
    cube([1, 1, 1.29]);
  translate([215, 81, 0])
    cube([1, 1, 1.29]);
  translate([216, 81, 0])
    cube([1, 1, 1.29]);
  translate([217, 81, 0])
    cube([1, 1, 1.29]);
  translate([218, 81, 0])
    cube([1, 1, 1.25]);
  translate([219, 81, 0])
    cube([1, 1, 1.29]);
  translate([220, 81, 0])
    cube([1, 1, 1.29]);
  translate([221, 81, 0])
    cube([1, 1, 1.29]);
  translate([222, 81, 0])
    cube([1, 1, 1.29]);
  translate([223, 81, 0])
    cube([1, 1, 1.29]);
  translate([224, 81, 0])
    cube([1, 1, 1.29]);
  translate([225, 81, 0])
    cube([1, 1, 1.29]);
  translate([226, 81, 0])
    cube([1, 1, 1.29]);
  translate([227, 81, 0])
    cube([1, 1, 1.29]);
  translate([228, 81, 0])
    cube([1, 1, 1.29]);
  translate([229, 81, 0])
    cube([1, 1, 1.29]);
  translate([230, 81, 0])
    cube([1, 1, 1.29]);
  translate([231, 81, 0])
    cube([1, 1, 1.29]);
  translate([232, 81, 0])
    cube([1, 1, 1.29]);
  translate([233, 81, 0])
    cube([1, 1, 1.25]);
  translate([234, 81, 0])
    cube([1, 1, 1.25]);
  translate([235, 81, 0])
    cube([1, 1, 1.29]);
  translate([236, 81, 0])
    cube([1, 1, 1.29]);
  translate([237, 81, 0])
    cube([1, 1, 1.29]);
  translate([238, 81, 0])
    cube([1, 1, 1.29]);
  translate([239, 81, 0])
    cube([1, 1, 1.29]);
  translate([240, 81, 0])
    cube([1, 1, 1.25]);
  translate([241, 81, 0])
    cube([1, 1, 1.29]);
  translate([242, 81, 0])
    cube([1, 1, 1.29]);
  translate([243, 81, 0])
    cube([1, 1, 1.22]);
  translate([244, 81, 0])
    cube([1, 1, 1.29]);
  translate([245, 81, 0])
    cube([1, 1, 1.29]);
  translate([246, 81, 0])
    cube([1, 1, 1.22]);
  translate([0, 82, 0])
    cube([1, 1, 1.45]);
  translate([1, 82, 0])
    cube([1, 1, 1.45]);
  translate([2, 82, 0])
    cube([1, 1, 1.45]);
  translate([3, 82, 0])
    cube([1, 1, 1.45]);
  translate([4, 82, 0])
    cube([1, 1, 1.45]);
  translate([5, 82, 0])
    cube([1, 1, 1.45]);
  translate([6, 82, 0])
    cube([1, 1, 1.45]);
  translate([7, 82, 0])
    cube([1, 1, 1.45]);
  translate([8, 82, 0])
    cube([1, 1, 1.45]);
  translate([9, 82, 0])
    cube([1, 1, 1.45]);
  translate([10, 82, 0])
    cube([1, 1, 1.45]);
  translate([11, 82, 0])
    cube([1, 1, 1.45]);
  translate([12, 82, 0])
    cube([1, 1, 1.45]);
  translate([13, 82, 0])
    cube([1, 1, 1.45]);
  translate([14, 82, 0])
    cube([1, 1, 1.45]);
  translate([15, 82, 0])
    cube([1, 1, 1.45]);
  translate([16, 82, 0])
    cube([1, 1, 1.45]);
  translate([17, 82, 0])
    cube([1, 1, 1.45]);
  translate([18, 82, 0])
    cube([1, 1, 1.45]);
  translate([19, 82, 0])
    cube([1, 1, 1.45]);
  translate([20, 82, 0])
    cube([1, 1, 1.41]);
  translate([21, 82, 0])
    cube([1, 1, 1.41]);
  translate([22, 82, 0])
    cube([1, 1, 1.45]);
  translate([23, 82, 0])
    cube([1, 1, 1.45]);
  translate([24, 82, 0])
    cube([1, 1, 1.41]);
  translate([25, 82, 0])
    cube([1, 1, 1.29]);
  translate([26, 82, 0])
    cube([1, 1, 3.49]);
  translate([27, 82, 0])
    cube([1, 1, 1.53]);
  translate([28, 82, 0])
    cube([1, 1, 1.25]);
  translate([29, 82, 0])
    cube([1, 1, 7.57]);
  translate([30, 82, 0])
    cube([1, 1, 2.51]);
  translate([31, 82, 0])
    cube([1, 1, 1.61]);
  translate([32, 82, 0])
    cube([1, 1, 1.49]);
  translate([33, 82, 0])
    cube([1, 1, 1.65]);
  translate([34, 82, 0])
    cube([1, 1, 2.51]);
  translate([35, 82, 0])
    cube([1, 1, 1.49]);
  translate([36, 82, 0])
    cube([1, 1, 1.73]);
  translate([37, 82, 0])
    cube([1, 1, 1.65]);
  translate([38, 82, 0])
    cube([1, 1, 1.22]);
  translate([39, 82, 0])
    cube([1, 1, 1.92]);
  translate([40, 82, 0])
    cube([1, 1, 3.37]);
  translate([41, 82, 0])
    cube([1, 1, 3.41]);
  translate([42, 82, 0])
    cube([1, 1, 0.12]);
  translate([43, 82, 0])
    cube([1, 1, 1.29]);
  translate([44, 82, 0])
    cube([1, 1, 2.08]);
  translate([45, 82, 0])
    cube([1, 1, 2.90]);
  translate([46, 82, 0])
    cube([1, 1, 2.27]);
  translate([47, 82, 0])
    cube([1, 1, 6.08]);
  translate([48, 82, 0])
    cube([1, 1, 1.22]);
  translate([49, 82, 0])
    cube([1, 1, 1.49]);
  translate([50, 82, 0])
    cube([1, 1, 1.29]);
  translate([51, 82, 0])
    cube([1, 1, 1.37]);
  translate([52, 82, 0])
    cube([1, 1, 1.29]);
  translate([53, 82, 0])
    cube([1, 1, 1.57]);
  translate([54, 82, 0])
    cube([1, 1, 1.96]);
  translate([55, 82, 0])
    cube([1, 1, 0.98]);
  translate([56, 82, 0])
    cube([1, 1, 1.33]);
  translate([57, 82, 0])
    cube([1, 1, 1.33]);
  translate([58, 82, 0])
    cube([1, 1, 1.33]);
  translate([59, 82, 0])
    cube([1, 1, 1.33]);
  translate([60, 82, 0])
    cube([1, 1, 1.33]);
  translate([61, 82, 0])
    cube([1, 1, 1.33]);
  translate([62, 82, 0])
    cube([1, 1, 1.33]);
  translate([63, 82, 0])
    cube([1, 1, 1.33]);
  translate([64, 82, 0])
    cube([1, 1, 1.37]);
  translate([65, 82, 0])
    cube([1, 1, 0.75]);
  translate([66, 82, 0])
    cube([1, 1, 0.39]);
  translate([67, 82, 0])
    cube([1, 1, 2.78]);
  translate([68, 82, 0])
    cube([1, 1, 4.71]);
  translate([69, 82, 0])
    cube([1, 1, 2.08]);
  translate([70, 82, 0])
    cube([1, 1, 0.78]);
  translate([71, 82, 0])
    cube([1, 1, 0.59]);
  translate([72, 82, 0])
    cube([1, 1, 1.10]);
  translate([73, 82, 0])
    cube([1, 1, 3.06]);
  translate([74, 82, 0])
    cube([1, 1, 1.53]);
  translate([75, 82, 0])
    cube([1, 1, 1.22]);
  translate([76, 82, 0])
    cube([1, 1, 1.33]);
  translate([77, 82, 0])
    cube([1, 1, 2.51]);
  translate([78, 82, 0])
    cube([1, 1, 1.02]);
  translate([79, 82, 0])
    cube([1, 1, 1.45]);
  translate([80, 82, 0])
    cube([1, 1, 1.57]);
  translate([81, 82, 0])
    cube([1, 1, 2.12]);
  translate([82, 82, 0])
    cube([1, 1, 2.71]);
  translate([83, 82, 0])
    cube([1, 1, 5.76]);
  translate([84, 82, 0])
    cube([1, 1, 4.86]);
  translate([85, 82, 0])
    cube([1, 1, 5.57]);
  translate([86, 82, 0])
    cube([1, 1, 5.10]);
  translate([87, 82, 0])
    cube([1, 1, 5.69]);
  translate([88, 82, 0])
    cube([1, 1, 5.69]);
  translate([89, 82, 0])
    cube([1, 1, 5.73]);
  translate([90, 82, 0])
    cube([1, 1, 5.57]);
  translate([91, 82, 0])
    cube([1, 1, 5.57]);
  translate([92, 82, 0])
    cube([1, 1, 5.49]);
  translate([93, 82, 0])
    cube([1, 1, 5.49]);
  translate([94, 82, 0])
    cube([1, 1, 5.73]);
  translate([95, 82, 0])
    cube([1, 1, 5.76]);
  translate([96, 82, 0])
    cube([1, 1, 5.53]);
  translate([97, 82, 0])
    cube([1, 1, 6.39]);
  translate([98, 82, 0])
    cube([1, 1, 6.12]);
  translate([99, 82, 0])
    cube([1, 1, 6.39]);
  translate([100, 82, 0])
    cube([1, 1, 6.47]);
  translate([101, 82, 0])
    cube([1, 1, 5.76]);
  translate([102, 82, 0])
    cube([1, 1, 5.92]);
  translate([103, 82, 0])
    cube([1, 1, 6.98]);
  translate([104, 82, 0])
    cube([1, 1, 3.37]);
  translate([105, 82, 0])
    cube([1, 1, 2.12]);
  translate([106, 82, 0])
    cube([1, 1, 1.45]);
  translate([107, 82, 0])
    cube([1, 1, 3.14]);
  translate([108, 82, 0])
    cube([1, 1, 3.10]);
  translate([109, 82, 0])
    cube([1, 1, 3.06]);
  translate([110, 82, 0])
    cube([1, 1, 2.31]);
  translate([111, 82, 0])
    cube([1, 1, 3.76]);
  translate([112, 82, 0])
    cube([1, 1, 2.86]);
  translate([113, 82, 0])
    cube([1, 1, 2.71]);
  translate([114, 82, 0])
    cube([1, 1, 5.69]);
  translate([115, 82, 0])
    cube([1, 1, 6.43]);
  translate([116, 82, 0])
    cube([1, 1, 6.35]);
  translate([117, 82, 0])
    cube([1, 1, 7.02]);
  translate([118, 82, 0])
    cube([1, 1, 2.35]);
  translate([119, 82, 0])
    cube([1, 1, 0.71]);
  translate([120, 82, 0])
    cube([1, 1, 1.02]);
  translate([121, 82, 0])
    cube([1, 1, 1.25]);
  translate([122, 82, 0])
    cube([1, 1, 1.25]);
  translate([123, 82, 0])
    cube([1, 1, 1.25]);
  translate([124, 82, 0])
    cube([1, 1, 1.25]);
  translate([125, 82, 0])
    cube([1, 1, 1.25]);
  translate([126, 82, 0])
    cube([1, 1, 1.25]);
  translate([127, 82, 0])
    cube([1, 1, 1.25]);
  translate([128, 82, 0])
    cube([1, 1, 1.25]);
  translate([129, 82, 0])
    cube([1, 1, 1.25]);
  translate([130, 82, 0])
    cube([1, 1, 1.25]);
  translate([131, 82, 0])
    cube([1, 1, 1.25]);
  translate([132, 82, 0])
    cube([1, 1, 1.25]);
  translate([133, 82, 0])
    cube([1, 1, 1.25]);
  translate([134, 82, 0])
    cube([1, 1, 1.25]);
  translate([135, 82, 0])
    cube([1, 1, 1.25]);
  translate([136, 82, 0])
    cube([1, 1, 1.25]);
  translate([137, 82, 0])
    cube([1, 1, 1.22]);
  translate([138, 82, 0])
    cube([1, 1, 1.25]);
  translate([139, 82, 0])
    cube([1, 1, 1.25]);
  translate([140, 82, 0])
    cube([1, 1, 1.29]);
  translate([141, 82, 0])
    cube([1, 1, 1.25]);
  translate([142, 82, 0])
    cube([1, 1, 1.29]);
  translate([143, 82, 0])
    cube([1, 1, 1.29]);
  translate([144, 82, 0])
    cube([1, 1, 1.29]);
  translate([145, 82, 0])
    cube([1, 1, 1.29]);
  translate([146, 82, 0])
    cube([1, 1, 1.29]);
  translate([147, 82, 0])
    cube([1, 1, 1.29]);
  translate([148, 82, 0])
    cube([1, 1, 1.29]);
  translate([149, 82, 0])
    cube([1, 1, 1.29]);
  translate([150, 82, 0])
    cube([1, 1, 1.29]);
  translate([151, 82, 0])
    cube([1, 1, 1.29]);
  translate([152, 82, 0])
    cube([1, 1, 1.29]);
  translate([153, 82, 0])
    cube([1, 1, 1.29]);
  translate([154, 82, 0])
    cube([1, 1, 1.29]);
  translate([155, 82, 0])
    cube([1, 1, 1.29]);
  translate([156, 82, 0])
    cube([1, 1, 1.29]);
  translate([157, 82, 0])
    cube([1, 1, 1.29]);
  translate([158, 82, 0])
    cube([1, 1, 1.29]);
  translate([159, 82, 0])
    cube([1, 1, 1.29]);
  translate([160, 82, 0])
    cube([1, 1, 1.33]);
  translate([161, 82, 0])
    cube([1, 1, 1.29]);
  translate([162, 82, 0])
    cube([1, 1, 1.29]);
  translate([163, 82, 0])
    cube([1, 1, 1.29]);
  translate([164, 82, 0])
    cube([1, 1, 1.29]);
  translate([165, 82, 0])
    cube([1, 1, 1.29]);
  translate([166, 82, 0])
    cube([1, 1, 1.29]);
  translate([167, 82, 0])
    cube([1, 1, 1.29]);
  translate([168, 82, 0])
    cube([1, 1, 1.29]);
  translate([169, 82, 0])
    cube([1, 1, 1.29]);
  translate([170, 82, 0])
    cube([1, 1, 1.33]);
  translate([171, 82, 0])
    cube([1, 1, 1.33]);
  translate([172, 82, 0])
    cube([1, 1, 1.33]);
  translate([173, 82, 0])
    cube([1, 1, 1.33]);
  translate([174, 82, 0])
    cube([1, 1, 1.29]);
  translate([175, 82, 0])
    cube([1, 1, 1.29]);
  translate([176, 82, 0])
    cube([1, 1, 1.29]);
  translate([177, 82, 0])
    cube([1, 1, 1.29]);
  translate([178, 82, 0])
    cube([1, 1, 1.33]);
  translate([179, 82, 0])
    cube([1, 1, 1.29]);
  translate([180, 82, 0])
    cube([1, 1, 1.29]);
  translate([181, 82, 0])
    cube([1, 1, 1.37]);
  translate([182, 82, 0])
    cube([1, 1, 1.33]);
  translate([183, 82, 0])
    cube([1, 1, 1.33]);
  translate([184, 82, 0])
    cube([1, 1, 1.29]);
  translate([185, 82, 0])
    cube([1, 1, 1.22]);
  translate([186, 82, 0])
    cube([1, 1, 1.29]);
  translate([187, 82, 0])
    cube([1, 1, 1.29]);
  translate([188, 82, 0])
    cube([1, 1, 1.29]);
  translate([189, 82, 0])
    cube([1, 1, 1.29]);
  translate([190, 82, 0])
    cube([1, 1, 1.29]);
  translate([191, 82, 0])
    cube([1, 1, 1.29]);
  translate([192, 82, 0])
    cube([1, 1, 1.29]);
  translate([193, 82, 0])
    cube([1, 1, 1.29]);
  translate([194, 82, 0])
    cube([1, 1, 1.29]);
  translate([195, 82, 0])
    cube([1, 1, 1.29]);
  translate([196, 82, 0])
    cube([1, 1, 1.29]);
  translate([197, 82, 0])
    cube([1, 1, 1.29]);
  translate([198, 82, 0])
    cube([1, 1, 1.29]);
  translate([199, 82, 0])
    cube([1, 1, 1.33]);
  translate([200, 82, 0])
    cube([1, 1, 1.29]);
  translate([201, 82, 0])
    cube([1, 1, 1.29]);
  translate([202, 82, 0])
    cube([1, 1, 1.29]);
  translate([203, 82, 0])
    cube([1, 1, 1.29]);
  translate([204, 82, 0])
    cube([1, 1, 1.29]);
  translate([205, 82, 0])
    cube([1, 1, 1.29]);
  translate([206, 82, 0])
    cube([1, 1, 1.29]);
  translate([207, 82, 0])
    cube([1, 1, 1.29]);
  translate([208, 82, 0])
    cube([1, 1, 1.29]);
  translate([209, 82, 0])
    cube([1, 1, 1.29]);
  translate([210, 82, 0])
    cube([1, 1, 1.29]);
  translate([211, 82, 0])
    cube([1, 1, 1.29]);
  translate([212, 82, 0])
    cube([1, 1, 1.29]);
  translate([213, 82, 0])
    cube([1, 1, 1.29]);
  translate([214, 82, 0])
    cube([1, 1, 1.29]);
  translate([215, 82, 0])
    cube([1, 1, 1.29]);
  translate([216, 82, 0])
    cube([1, 1, 1.29]);
  translate([217, 82, 0])
    cube([1, 1, 1.29]);
  translate([218, 82, 0])
    cube([1, 1, 1.29]);
  translate([219, 82, 0])
    cube([1, 1, 1.29]);
  translate([220, 82, 0])
    cube([1, 1, 1.29]);
  translate([221, 82, 0])
    cube([1, 1, 1.29]);
  translate([222, 82, 0])
    cube([1, 1, 1.29]);
  translate([223, 82, 0])
    cube([1, 1, 1.29]);
  translate([224, 82, 0])
    cube([1, 1, 1.29]);
  translate([225, 82, 0])
    cube([1, 1, 1.25]);
  translate([226, 82, 0])
    cube([1, 1, 1.25]);
  translate([227, 82, 0])
    cube([1, 1, 1.25]);
  translate([228, 82, 0])
    cube([1, 1, 1.29]);
  translate([229, 82, 0])
    cube([1, 1, 1.29]);
  translate([230, 82, 0])
    cube([1, 1, 1.29]);
  translate([231, 82, 0])
    cube([1, 1, 1.29]);
  translate([232, 82, 0])
    cube([1, 1, 1.29]);
  translate([233, 82, 0])
    cube([1, 1, 1.29]);
  translate([234, 82, 0])
    cube([1, 1, 1.29]);
  translate([235, 82, 0])
    cube([1, 1, 1.29]);
  translate([236, 82, 0])
    cube([1, 1, 1.29]);
  translate([237, 82, 0])
    cube([1, 1, 1.29]);
  translate([238, 82, 0])
    cube([1, 1, 1.29]);
  translate([239, 82, 0])
    cube([1, 1, 1.29]);
  translate([240, 82, 0])
    cube([1, 1, 1.29]);
  translate([241, 82, 0])
    cube([1, 1, 1.29]);
  translate([242, 82, 0])
    cube([1, 1, 1.29]);
  translate([243, 82, 0])
    cube([1, 1, 1.29]);
  translate([244, 82, 0])
    cube([1, 1, 1.29]);
  translate([245, 82, 0])
    cube([1, 1, 1.29]);
  translate([246, 82, 0])
    cube([1, 1, 1.29]);
  translate([0, 83, 0])
    cube([1, 1, 1.45]);
  translate([1, 83, 0])
    cube([1, 1, 1.45]);
  translate([2, 83, 0])
    cube([1, 1, 1.45]);
  translate([3, 83, 0])
    cube([1, 1, 1.45]);
  translate([4, 83, 0])
    cube([1, 1, 1.45]);
  translate([5, 83, 0])
    cube([1, 1, 1.45]);
  translate([6, 83, 0])
    cube([1, 1, 1.45]);
  translate([7, 83, 0])
    cube([1, 1, 1.45]);
  translate([8, 83, 0])
    cube([1, 1, 1.45]);
  translate([9, 83, 0])
    cube([1, 1, 1.45]);
  translate([10, 83, 0])
    cube([1, 1, 1.45]);
  translate([11, 83, 0])
    cube([1, 1, 1.45]);
  translate([12, 83, 0])
    cube([1, 1, 1.45]);
  translate([13, 83, 0])
    cube([1, 1, 1.45]);
  translate([14, 83, 0])
    cube([1, 1, 1.45]);
  translate([15, 83, 0])
    cube([1, 1, 1.45]);
  translate([16, 83, 0])
    cube([1, 1, 1.45]);
  translate([17, 83, 0])
    cube([1, 1, 1.45]);
  translate([18, 83, 0])
    cube([1, 1, 1.45]);
  translate([19, 83, 0])
    cube([1, 1, 1.45]);
  translate([20, 83, 0])
    cube([1, 1, 1.41]);
  translate([21, 83, 0])
    cube([1, 1, 1.41]);
  translate([22, 83, 0])
    cube([1, 1, 1.45]);
  translate([23, 83, 0])
    cube([1, 1, 1.45]);
  translate([24, 83, 0])
    cube([1, 1, 1.49]);
  translate([25, 83, 0])
    cube([1, 1, 1.37]);
  translate([26, 83, 0])
    cube([1, 1, 5.65]);
  translate([27, 83, 0])
    cube([1, 1, 1.65]);
  translate([28, 83, 0])
    cube([1, 1, 1.33]);
  translate([29, 83, 0])
    cube([1, 1, 3.33]);
  translate([30, 83, 0])
    cube([1, 1, 3.22]);
  translate([31, 83, 0])
    cube([1, 1, 1.25]);
  translate([32, 83, 0])
    cube([1, 1, 2.16]);
  translate([33, 83, 0])
    cube([1, 1, 5.76]);
  translate([34, 83, 0])
    cube([1, 1, 2.27]);
  translate([35, 83, 0])
    cube([1, 1, 1.49]);
  translate([36, 83, 0])
    cube([1, 1, 1.57]);
  translate([37, 83, 0])
    cube([1, 1, 1.33]);
  translate([38, 83, 0])
    cube([1, 1, 1.76]);
  translate([39, 83, 0])
    cube([1, 1, 2.00]);
  translate([40, 83, 0])
    cube([1, 1, 2.16]);
  translate([41, 83, 0])
    cube([1, 1, 1.92]);
  translate([42, 83, 0])
    cube([1, 1, 0.31]);
  translate([43, 83, 0])
    cube([1, 1, 1.69]);
  translate([44, 83, 0])
    cube([1, 1, 2.71]);
  translate([45, 83, 0])
    cube([1, 1, 3.41]);
  translate([46, 83, 0])
    cube([1, 1, 2.47]);
  translate([47, 83, 0])
    cube([1, 1, 5.18]);
  translate([48, 83, 0])
    cube([1, 1, 0.51]);
  translate([49, 83, 0])
    cube([1, 1, 1.45]);
  translate([50, 83, 0])
    cube([1, 1, 1.84]);
  translate([51, 83, 0])
    cube([1, 1, 1.57]);
  translate([52, 83, 0])
    cube([1, 1, 3.22]);
  translate([53, 83, 0])
    cube([1, 1, 1.37]);
  translate([54, 83, 0])
    cube([1, 1, 2.00]);
  translate([55, 83, 0])
    cube([1, 1, 1.49]);
  translate([56, 83, 0])
    cube([1, 1, 1.33]);
  translate([57, 83, 0])
    cube([1, 1, 1.33]);
  translate([58, 83, 0])
    cube([1, 1, 1.33]);
  translate([59, 83, 0])
    cube([1, 1, 1.33]);
  translate([60, 83, 0])
    cube([1, 1, 1.33]);
  translate([61, 83, 0])
    cube([1, 1, 1.33]);
  translate([62, 83, 0])
    cube([1, 1, 1.33]);
  translate([63, 83, 0])
    cube([1, 1, 1.33]);
  translate([64, 83, 0])
    cube([1, 1, 1.33]);
  translate([65, 83, 0])
    cube([1, 1, 1.49]);
  translate([66, 83, 0])
    cube([1, 1, 4.35]);
  translate([67, 83, 0])
    cube([1, 1, 1.61]);
  translate([68, 83, 0])
    cube([1, 1, 1.53]);
  translate([69, 83, 0])
    cube([1, 1, 1.06]);
  translate([70, 83, 0])
    cube([1, 1, 0.47]);
  translate([71, 83, 0])
    cube([1, 1, 1.06]);
  translate([72, 83, 0])
    cube([1, 1, 4.90]);
  translate([73, 83, 0])
    cube([1, 1, 2.75]);
  translate([74, 83, 0])
    cube([1, 1, 2.78]);
  translate([75, 83, 0])
    cube([1, 1, 1.53]);
  translate([76, 83, 0])
    cube([1, 1, 1.18]);
  translate([77, 83, 0])
    cube([1, 1, 1.37]);
  translate([78, 83, 0])
    cube([1, 1, 1.18]);
  translate([79, 83, 0])
    cube([1, 1, 3.18]);
  translate([80, 83, 0])
    cube([1, 1, 2.04]);
  translate([81, 83, 0])
    cube([1, 1, 2.86]);
  translate([82, 83, 0])
    cube([1, 1, 2.55]);
  translate([83, 83, 0])
    cube([1, 1, 4.98]);
  translate([84, 83, 0])
    cube([1, 1, 1.02]);
  translate([85, 83, 0])
    cube([1, 1, 1.37]);
  translate([86, 83, 0])
    cube([1, 1, 4.67]);
  translate([87, 83, 0])
    cube([1, 1, 5.33]);
  translate([88, 83, 0])
    cube([1, 1, 5.41]);
  translate([89, 83, 0])
    cube([1, 1, 5.33]);
  translate([90, 83, 0])
    cube([1, 1, 5.22]);
  translate([91, 83, 0])
    cube([1, 1, 4.98]);
  translate([92, 83, 0])
    cube([1, 1, 4.86]);
  translate([93, 83, 0])
    cube([1, 1, 4.86]);
  translate([94, 83, 0])
    cube([1, 1, 4.78]);
  translate([95, 83, 0])
    cube([1, 1, 5.14]);
  translate([96, 83, 0])
    cube([1, 1, 5.45]);
  translate([97, 83, 0])
    cube([1, 1, 5.69]);
  translate([98, 83, 0])
    cube([1, 1, 6.24]);
  translate([99, 83, 0])
    cube([1, 1, 6.24]);
  translate([100, 83, 0])
    cube([1, 1, 5.76]);
  translate([101, 83, 0])
    cube([1, 1, 5.61]);
  translate([102, 83, 0])
    cube([1, 1, 5.69]);
  translate([103, 83, 0])
    cube([1, 1, 6.86]);
  translate([104, 83, 0])
    cube([1, 1, 6.55]);
  translate([105, 83, 0])
    cube([1, 1, 6.63]);
  translate([106, 83, 0])
    cube([1, 1, 6.08]);
  translate([107, 83, 0])
    cube([1, 1, 1.53]);
  translate([108, 83, 0])
    cube([1, 1, 1.84]);
  translate([109, 83, 0])
    cube([1, 1, 2.55]);
  translate([110, 83, 0])
    cube([1, 1, 2.71]);
  translate([111, 83, 0])
    cube([1, 1, 4.08]);
  translate([112, 83, 0])
    cube([1, 1, 4.00]);
  translate([113, 83, 0])
    cube([1, 1, 3.65]);
  translate([114, 83, 0])
    cube([1, 1, 2.47]);
  translate([115, 83, 0])
    cube([1, 1, 4.16]);
  translate([116, 83, 0])
    cube([1, 1, 6.27]);
  translate([117, 83, 0])
    cube([1, 1, 6.35]);
  translate([118, 83, 0])
    cube([1, 1, 6.75]);
  translate([119, 83, 0])
    cube([1, 1, 7.49]);
  translate([120, 83, 0])
    cube([1, 1, 1.41]);
  translate([121, 83, 0])
    cube([1, 1, 1.25]);
  translate([122, 83, 0])
    cube([1, 1, 1.25]);
  translate([123, 83, 0])
    cube([1, 1, 1.25]);
  translate([124, 83, 0])
    cube([1, 1, 1.25]);
  translate([125, 83, 0])
    cube([1, 1, 1.25]);
  translate([126, 83, 0])
    cube([1, 1, 1.25]);
  translate([127, 83, 0])
    cube([1, 1, 1.25]);
  translate([128, 83, 0])
    cube([1, 1, 1.25]);
  translate([129, 83, 0])
    cube([1, 1, 1.25]);
  translate([130, 83, 0])
    cube([1, 1, 1.25]);
  translate([131, 83, 0])
    cube([1, 1, 1.25]);
  translate([132, 83, 0])
    cube([1, 1, 1.25]);
  translate([133, 83, 0])
    cube([1, 1, 1.25]);
  translate([134, 83, 0])
    cube([1, 1, 1.25]);
  translate([135, 83, 0])
    cube([1, 1, 1.25]);
  translate([136, 83, 0])
    cube([1, 1, 1.25]);
  translate([137, 83, 0])
    cube([1, 1, 1.29]);
  translate([138, 83, 0])
    cube([1, 1, 1.22]);
  translate([139, 83, 0])
    cube([1, 1, 1.25]);
  translate([140, 83, 0])
    cube([1, 1, 1.29]);
  translate([141, 83, 0])
    cube([1, 1, 1.25]);
  translate([142, 83, 0])
    cube([1, 1, 1.29]);
  translate([143, 83, 0])
    cube([1, 1, 1.29]);
  translate([144, 83, 0])
    cube([1, 1, 1.29]);
  translate([145, 83, 0])
    cube([1, 1, 1.29]);
  translate([146, 83, 0])
    cube([1, 1, 1.29]);
  translate([147, 83, 0])
    cube([1, 1, 1.29]);
  translate([148, 83, 0])
    cube([1, 1, 1.29]);
  translate([149, 83, 0])
    cube([1, 1, 1.29]);
  translate([150, 83, 0])
    cube([1, 1, 1.29]);
  translate([151, 83, 0])
    cube([1, 1, 1.29]);
  translate([152, 83, 0])
    cube([1, 1, 1.29]);
  translate([153, 83, 0])
    cube([1, 1, 1.29]);
  translate([154, 83, 0])
    cube([1, 1, 1.29]);
  translate([155, 83, 0])
    cube([1, 1, 1.29]);
  translate([156, 83, 0])
    cube([1, 1, 1.29]);
  translate([157, 83, 0])
    cube([1, 1, 1.29]);
  translate([158, 83, 0])
    cube([1, 1, 1.29]);
  translate([159, 83, 0])
    cube([1, 1, 1.29]);
  translate([160, 83, 0])
    cube([1, 1, 1.29]);
  translate([161, 83, 0])
    cube([1, 1, 1.29]);
  translate([162, 83, 0])
    cube([1, 1, 1.29]);
  translate([163, 83, 0])
    cube([1, 1, 1.29]);
  translate([164, 83, 0])
    cube([1, 1, 1.29]);
  translate([165, 83, 0])
    cube([1, 1, 1.29]);
  translate([166, 83, 0])
    cube([1, 1, 1.29]);
  translate([167, 83, 0])
    cube([1, 1, 1.29]);
  translate([168, 83, 0])
    cube([1, 1, 1.29]);
  translate([169, 83, 0])
    cube([1, 1, 1.29]);
  translate([170, 83, 0])
    cube([1, 1, 1.33]);
  translate([171, 83, 0])
    cube([1, 1, 1.33]);
  translate([172, 83, 0])
    cube([1, 1, 1.29]);
  translate([173, 83, 0])
    cube([1, 1, 1.29]);
  translate([174, 83, 0])
    cube([1, 1, 1.29]);
  translate([175, 83, 0])
    cube([1, 1, 1.29]);
  translate([176, 83, 0])
    cube([1, 1, 1.29]);
  translate([177, 83, 0])
    cube([1, 1, 1.29]);
  translate([178, 83, 0])
    cube([1, 1, 1.33]);
  translate([179, 83, 0])
    cube([1, 1, 1.29]);
  translate([180, 83, 0])
    cube([1, 1, 1.29]);
  translate([181, 83, 0])
    cube([1, 1, 1.37]);
  translate([182, 83, 0])
    cube([1, 1, 1.33]);
  translate([183, 83, 0])
    cube([1, 1, 1.33]);
  translate([184, 83, 0])
    cube([1, 1, 1.29]);
  translate([185, 83, 0])
    cube([1, 1, 1.29]);
  translate([186, 83, 0])
    cube([1, 1, 1.33]);
  translate([187, 83, 0])
    cube([1, 1, 1.29]);
  translate([188, 83, 0])
    cube([1, 1, 1.29]);
  translate([189, 83, 0])
    cube([1, 1, 1.29]);
  translate([190, 83, 0])
    cube([1, 1, 1.29]);
  translate([191, 83, 0])
    cube([1, 1, 1.29]);
  translate([192, 83, 0])
    cube([1, 1, 1.29]);
  translate([193, 83, 0])
    cube([1, 1, 1.29]);
  translate([194, 83, 0])
    cube([1, 1, 1.29]);
  translate([195, 83, 0])
    cube([1, 1, 1.29]);
  translate([196, 83, 0])
    cube([1, 1, 1.29]);
  translate([197, 83, 0])
    cube([1, 1, 1.29]);
  translate([198, 83, 0])
    cube([1, 1, 1.29]);
  translate([199, 83, 0])
    cube([1, 1, 1.33]);
  translate([200, 83, 0])
    cube([1, 1, 1.29]);
  translate([201, 83, 0])
    cube([1, 1, 1.29]);
  translate([202, 83, 0])
    cube([1, 1, 1.29]);
  translate([203, 83, 0])
    cube([1, 1, 1.29]);
  translate([204, 83, 0])
    cube([1, 1, 1.29]);
  translate([205, 83, 0])
    cube([1, 1, 1.29]);
  translate([206, 83, 0])
    cube([1, 1, 1.29]);
  translate([207, 83, 0])
    cube([1, 1, 1.29]);
  translate([208, 83, 0])
    cube([1, 1, 1.29]);
  translate([209, 83, 0])
    cube([1, 1, 1.29]);
  translate([210, 83, 0])
    cube([1, 1, 1.29]);
  translate([211, 83, 0])
    cube([1, 1, 1.29]);
  translate([212, 83, 0])
    cube([1, 1, 1.29]);
  translate([213, 83, 0])
    cube([1, 1, 1.29]);
  translate([214, 83, 0])
    cube([1, 1, 1.29]);
  translate([215, 83, 0])
    cube([1, 1, 1.29]);
  translate([216, 83, 0])
    cube([1, 1, 1.29]);
  translate([217, 83, 0])
    cube([1, 1, 1.29]);
  translate([218, 83, 0])
    cube([1, 1, 1.29]);
  translate([219, 83, 0])
    cube([1, 1, 1.29]);
  translate([220, 83, 0])
    cube([1, 1, 1.29]);
  translate([221, 83, 0])
    cube([1, 1, 1.29]);
  translate([222, 83, 0])
    cube([1, 1, 1.29]);
  translate([223, 83, 0])
    cube([1, 1, 1.29]);
  translate([224, 83, 0])
    cube([1, 1, 1.29]);
  translate([225, 83, 0])
    cube([1, 1, 1.25]);
  translate([226, 83, 0])
    cube([1, 1, 1.25]);
  translate([227, 83, 0])
    cube([1, 1, 1.33]);
  translate([228, 83, 0])
    cube([1, 1, 1.29]);
  translate([229, 83, 0])
    cube([1, 1, 1.29]);
  translate([230, 83, 0])
    cube([1, 1, 1.29]);
  translate([231, 83, 0])
    cube([1, 1, 1.29]);
  translate([232, 83, 0])
    cube([1, 1, 1.29]);
  translate([233, 83, 0])
    cube([1, 1, 1.29]);
  translate([234, 83, 0])
    cube([1, 1, 1.29]);
  translate([235, 83, 0])
    cube([1, 1, 1.29]);
  translate([236, 83, 0])
    cube([1, 1, 1.29]);
  translate([237, 83, 0])
    cube([1, 1, 1.29]);
  translate([238, 83, 0])
    cube([1, 1, 1.29]);
  translate([239, 83, 0])
    cube([1, 1, 1.29]);
  translate([240, 83, 0])
    cube([1, 1, 1.29]);
  translate([241, 83, 0])
    cube([1, 1, 1.29]);
  translate([242, 83, 0])
    cube([1, 1, 1.29]);
  translate([243, 83, 0])
    cube([1, 1, 1.29]);
  translate([244, 83, 0])
    cube([1, 1, 1.29]);
  translate([245, 83, 0])
    cube([1, 1, 1.29]);
  translate([246, 83, 0])
    cube([1, 1, 1.29]);
  translate([0, 84, 0])
    cube([1, 1, 1.45]);
  translate([1, 84, 0])
    cube([1, 1, 1.45]);
  translate([2, 84, 0])
    cube([1, 1, 1.45]);
  translate([3, 84, 0])
    cube([1, 1, 1.45]);
  translate([4, 84, 0])
    cube([1, 1, 1.45]);
  translate([5, 84, 0])
    cube([1, 1, 1.45]);
  translate([6, 84, 0])
    cube([1, 1, 1.45]);
  translate([7, 84, 0])
    cube([1, 1, 1.45]);
  translate([8, 84, 0])
    cube([1, 1, 1.45]);
  translate([9, 84, 0])
    cube([1, 1, 1.45]);
  translate([10, 84, 0])
    cube([1, 1, 1.45]);
  translate([11, 84, 0])
    cube([1, 1, 1.45]);
  translate([12, 84, 0])
    cube([1, 1, 1.45]);
  translate([13, 84, 0])
    cube([1, 1, 1.45]);
  translate([14, 84, 0])
    cube([1, 1, 1.41]);
  translate([15, 84, 0])
    cube([1, 1, 1.45]);
  translate([16, 84, 0])
    cube([1, 1, 1.45]);
  translate([17, 84, 0])
    cube([1, 1, 1.45]);
  translate([18, 84, 0])
    cube([1, 1, 1.45]);
  translate([19, 84, 0])
    cube([1, 1, 1.45]);
  translate([20, 84, 0])
    cube([1, 1, 1.45]);
  translate([21, 84, 0])
    cube([1, 1, 1.45]);
  translate([22, 84, 0])
    cube([1, 1, 1.41]);
  translate([23, 84, 0])
    cube([1, 1, 1.45]);
  translate([24, 84, 0])
    cube([1, 1, 1.45]);
  translate([25, 84, 0])
    cube([1, 1, 1.45]);
  translate([26, 84, 0])
    cube([1, 1, 3.02]);
  translate([27, 84, 0])
    cube([1, 1, 1.18]);
  translate([28, 84, 0])
    cube([1, 1, 1.22]);
  translate([29, 84, 0])
    cube([1, 1, 1.29]);
  translate([30, 84, 0])
    cube([1, 1, 6.00]);
  translate([31, 84, 0])
    cube([1, 1, 4.27]);
  translate([32, 84, 0])
    cube([1, 1, 6.90]);
  translate([33, 84, 0])
    cube([1, 1, 5.76]);
  translate([34, 84, 0])
    cube([1, 1, 2.31]);
  translate([35, 84, 0])
    cube([1, 1, 1.37]);
  translate([36, 84, 0])
    cube([1, 1, 1.41]);
  translate([37, 84, 0])
    cube([1, 1, 1.53]);
  translate([38, 84, 0])
    cube([1, 1, 1.61]);
  translate([39, 84, 0])
    cube([1, 1, 1.88]);
  translate([40, 84, 0])
    cube([1, 1, 1.76]);
  translate([41, 84, 0])
    cube([1, 1, 1.33]);
  translate([42, 84, 0])
    cube([1, 1, 1.53]);
  translate([43, 84, 0])
    cube([1, 1, 2.12]);
  translate([44, 84, 0])
    cube([1, 1, 3.06]);
  translate([45, 84, 0])
    cube([1, 1, 3.61]);
  translate([46, 84, 0])
    cube([1, 1, 2.31]);
  translate([47, 84, 0])
    cube([1, 1, 3.65]);
  translate([48, 84, 0])
    cube([1, 1, 0.39]);
  translate([49, 84, 0])
    cube([1, 1, 1.22]);
  translate([50, 84, 0])
    cube([1, 1, 1.25]);
  translate([51, 84, 0])
    cube([1, 1, 1.29]);
  translate([52, 84, 0])
    cube([1, 1, 1.33]);
  translate([53, 84, 0])
    cube([1, 1, 1.49]);
  translate([54, 84, 0])
    cube([1, 1, 1.61]);
  translate([55, 84, 0])
    cube([1, 1, 1.33]);
  translate([56, 84, 0])
    cube([1, 1, 1.37]);
  translate([57, 84, 0])
    cube([1, 1, 1.33]);
  translate([58, 84, 0])
    cube([1, 1, 1.33]);
  translate([59, 84, 0])
    cube([1, 1, 1.33]);
  translate([60, 84, 0])
    cube([1, 1, 1.33]);
  translate([61, 84, 0])
    cube([1, 1, 1.33]);
  translate([62, 84, 0])
    cube([1, 1, 1.22]);
  translate([63, 84, 0])
    cube([1, 1, 1.14]);
  translate([64, 84, 0])
    cube([1, 1, 1.14]);
  translate([65, 84, 0])
    cube([1, 1, 2.82]);
  translate([66, 84, 0])
    cube([1, 1, 0.27]);
  translate([67, 84, 0])
    cube([1, 1, 2.20]);
  translate([68, 84, 0])
    cube([1, 1, 3.22]);
  translate([69, 84, 0])
    cube([1, 1, 2.31]);
  translate([70, 84, 0])
    cube([1, 1, 1.02]);
  translate([71, 84, 0])
    cube([1, 1, 0.63]);
  translate([72, 84, 0])
    cube([1, 1, 7.96]);
  translate([73, 84, 0])
    cube([1, 1, 7.29]);
  translate([74, 84, 0])
    cube([1, 1, 5.49]);
  translate([75, 84, 0])
    cube([1, 1, 1.80]);
  translate([76, 84, 0])
    cube([1, 1, 0.98]);
  translate([77, 84, 0])
    cube([1, 1, 2.20]);
  translate([78, 84, 0])
    cube([1, 1, 2.16]);
  translate([79, 84, 0])
    cube([1, 1, 2.00]);
  translate([80, 84, 0])
    cube([1, 1, 3.76]);
  translate([81, 84, 0])
    cube([1, 1, 2.31]);
  translate([82, 84, 0])
    cube([1, 1, 2.39]);
  translate([83, 84, 0])
    cube([1, 1, 1.10]);
  translate([84, 84, 0])
    cube([1, 1, 1.06]);
  translate([85, 84, 0])
    cube([1, 1, 1.06]);
  translate([86, 84, 0])
    cube([1, 1, 1.06]);
  translate([87, 84, 0])
    cube([1, 1, 1.49]);
  translate([88, 84, 0])
    cube([1, 1, 0.98]);
  translate([89, 84, 0])
    cube([1, 1, 1.49]);
  translate([90, 84, 0])
    cube([1, 1, 1.45]);
  translate([91, 84, 0])
    cube([1, 1, 3.80]);
  translate([92, 84, 0])
    cube([1, 1, 4.47]);
  translate([93, 84, 0])
    cube([1, 1, 5.06]);
  translate([94, 84, 0])
    cube([1, 1, 4.55]);
  translate([95, 84, 0])
    cube([1, 1, 4.67]);
  translate([96, 84, 0])
    cube([1, 1, 4.86]);
  translate([97, 84, 0])
    cube([1, 1, 5.10]);
  translate([98, 84, 0])
    cube([1, 1, 6.12]);
  translate([99, 84, 0])
    cube([1, 1, 5.76]);
  translate([100, 84, 0])
    cube([1, 1, 5.65]);
  translate([101, 84, 0])
    cube([1, 1, 5.61]);
  translate([102, 84, 0])
    cube([1, 1, 5.61]);
  translate([103, 84, 0])
    cube([1, 1, 5.84]);
  translate([104, 84, 0])
    cube([1, 1, 6.39]);
  translate([105, 84, 0])
    cube([1, 1, 6.43]);
  translate([106, 84, 0])
    cube([1, 1, 6.51]);
  translate([107, 84, 0])
    cube([1, 1, 5.69]);
  translate([108, 84, 0])
    cube([1, 1, 2.31]);
  translate([109, 84, 0])
    cube([1, 1, 3.73]);
  translate([110, 84, 0])
    cube([1, 1, 2.67]);
  translate([111, 84, 0])
    cube([1, 1, 1.49]);
  translate([112, 84, 0])
    cube([1, 1, 1.45]);
  translate([113, 84, 0])
    cube([1, 1, 2.16]);
  translate([114, 84, 0])
    cube([1, 1, 2.55]);
  translate([115, 84, 0])
    cube([1, 1, 2.86]);
  translate([116, 84, 0])
    cube([1, 1, 4.59]);
  translate([117, 84, 0])
    cube([1, 1, 6.24]);
  translate([118, 84, 0])
    cube([1, 1, 6.71]);
  translate([119, 84, 0])
    cube([1, 1, 7.10]);
  translate([120, 84, 0])
    cube([1, 1, 7.45]);
  translate([121, 84, 0])
    cube([1, 1, 2.12]);
  translate([122, 84, 0])
    cube([1, 1, 1.14]);
  translate([123, 84, 0])
    cube([1, 1, 1.25]);
  translate([124, 84, 0])
    cube([1, 1, 1.25]);
  translate([125, 84, 0])
    cube([1, 1, 1.25]);
  translate([126, 84, 0])
    cube([1, 1, 1.25]);
  translate([127, 84, 0])
    cube([1, 1, 1.25]);
  translate([128, 84, 0])
    cube([1, 1, 1.25]);
  translate([129, 84, 0])
    cube([1, 1, 1.25]);
  translate([130, 84, 0])
    cube([1, 1, 1.25]);
  translate([131, 84, 0])
    cube([1, 1, 1.25]);
  translate([132, 84, 0])
    cube([1, 1, 1.22]);
  translate([133, 84, 0])
    cube([1, 1, 1.25]);
  translate([134, 84, 0])
    cube([1, 1, 1.25]);
  translate([135, 84, 0])
    cube([1, 1, 1.25]);
  translate([136, 84, 0])
    cube([1, 1, 1.29]);
  translate([137, 84, 0])
    cube([1, 1, 1.25]);
  translate([138, 84, 0])
    cube([1, 1, 1.25]);
  translate([139, 84, 0])
    cube([1, 1, 1.25]);
  translate([140, 84, 0])
    cube([1, 1, 1.25]);
  translate([141, 84, 0])
    cube([1, 1, 1.29]);
  translate([142, 84, 0])
    cube([1, 1, 1.25]);
  translate([143, 84, 0])
    cube([1, 1, 1.29]);
  translate([144, 84, 0])
    cube([1, 1, 1.33]);
  translate([145, 84, 0])
    cube([1, 1, 1.29]);
  translate([146, 84, 0])
    cube([1, 1, 1.29]);
  translate([147, 84, 0])
    cube([1, 1, 1.29]);
  translate([148, 84, 0])
    cube([1, 1, 1.29]);
  translate([149, 84, 0])
    cube([1, 1, 1.29]);
  translate([150, 84, 0])
    cube([1, 1, 1.29]);
  translate([151, 84, 0])
    cube([1, 1, 1.29]);
  translate([152, 84, 0])
    cube([1, 1, 1.29]);
  translate([153, 84, 0])
    cube([1, 1, 1.29]);
  translate([154, 84, 0])
    cube([1, 1, 1.29]);
  translate([155, 84, 0])
    cube([1, 1, 1.29]);
  translate([156, 84, 0])
    cube([1, 1, 1.29]);
  translate([157, 84, 0])
    cube([1, 1, 1.29]);
  translate([158, 84, 0])
    cube([1, 1, 1.29]);
  translate([159, 84, 0])
    cube([1, 1, 1.29]);
  translate([160, 84, 0])
    cube([1, 1, 1.29]);
  translate([161, 84, 0])
    cube([1, 1, 1.29]);
  translate([162, 84, 0])
    cube([1, 1, 1.29]);
  translate([163, 84, 0])
    cube([1, 1, 1.29]);
  translate([164, 84, 0])
    cube([1, 1, 1.29]);
  translate([165, 84, 0])
    cube([1, 1, 1.29]);
  translate([166, 84, 0])
    cube([1, 1, 1.29]);
  translate([167, 84, 0])
    cube([1, 1, 1.29]);
  translate([168, 84, 0])
    cube([1, 1, 1.29]);
  translate([169, 84, 0])
    cube([1, 1, 1.29]);
  translate([170, 84, 0])
    cube([1, 1, 1.29]);
  translate([171, 84, 0])
    cube([1, 1, 1.29]);
  translate([172, 84, 0])
    cube([1, 1, 1.29]);
  translate([173, 84, 0])
    cube([1, 1, 1.33]);
  translate([174, 84, 0])
    cube([1, 1, 1.33]);
  translate([175, 84, 0])
    cube([1, 1, 1.33]);
  translate([176, 84, 0])
    cube([1, 1, 1.33]);
  translate([177, 84, 0])
    cube([1, 1, 1.29]);
  translate([178, 84, 0])
    cube([1, 1, 1.29]);
  translate([179, 84, 0])
    cube([1, 1, 1.33]);
  translate([180, 84, 0])
    cube([1, 1, 1.33]);
  translate([181, 84, 0])
    cube([1, 1, 1.33]);
  translate([182, 84, 0])
    cube([1, 1, 1.33]);
  translate([183, 84, 0])
    cube([1, 1, 1.33]);
  translate([184, 84, 0])
    cube([1, 1, 1.33]);
  translate([185, 84, 0])
    cube([1, 1, 1.29]);
  translate([186, 84, 0])
    cube([1, 1, 1.33]);
  translate([187, 84, 0])
    cube([1, 1, 1.33]);
  translate([188, 84, 0])
    cube([1, 1, 1.29]);
  translate([189, 84, 0])
    cube([1, 1, 1.29]);
  translate([190, 84, 0])
    cube([1, 1, 1.29]);
  translate([191, 84, 0])
    cube([1, 1, 1.29]);
  translate([192, 84, 0])
    cube([1, 1, 1.33]);
  translate([193, 84, 0])
    cube([1, 1, 1.29]);
  translate([194, 84, 0])
    cube([1, 1, 1.33]);
  translate([195, 84, 0])
    cube([1, 1, 1.25]);
  translate([196, 84, 0])
    cube([1, 1, 1.29]);
  translate([197, 84, 0])
    cube([1, 1, 1.33]);
  translate([198, 84, 0])
    cube([1, 1, 1.33]);
  translate([199, 84, 0])
    cube([1, 1, 1.33]);
  translate([200, 84, 0])
    cube([1, 1, 1.29]);
  translate([201, 84, 0])
    cube([1, 1, 1.29]);
  translate([202, 84, 0])
    cube([1, 1, 1.29]);
  translate([203, 84, 0])
    cube([1, 1, 1.29]);
  translate([204, 84, 0])
    cube([1, 1, 1.29]);
  translate([205, 84, 0])
    cube([1, 1, 1.29]);
  translate([206, 84, 0])
    cube([1, 1, 1.29]);
  translate([207, 84, 0])
    cube([1, 1, 1.33]);
  translate([208, 84, 0])
    cube([1, 1, 1.29]);
  translate([209, 84, 0])
    cube([1, 1, 1.29]);
  translate([210, 84, 0])
    cube([1, 1, 1.29]);
  translate([211, 84, 0])
    cube([1, 1, 1.25]);
  translate([212, 84, 0])
    cube([1, 1, 1.29]);
  translate([213, 84, 0])
    cube([1, 1, 1.29]);
  translate([214, 84, 0])
    cube([1, 1, 1.25]);
  translate([215, 84, 0])
    cube([1, 1, 1.29]);
  translate([216, 84, 0])
    cube([1, 1, 1.33]);
  translate([217, 84, 0])
    cube([1, 1, 1.29]);
  translate([218, 84, 0])
    cube([1, 1, 1.29]);
  translate([219, 84, 0])
    cube([1, 1, 1.29]);
  translate([220, 84, 0])
    cube([1, 1, 1.29]);
  translate([221, 84, 0])
    cube([1, 1, 1.29]);
  translate([222, 84, 0])
    cube([1, 1, 1.29]);
  translate([223, 84, 0])
    cube([1, 1, 1.29]);
  translate([224, 84, 0])
    cube([1, 1, 1.29]);
  translate([225, 84, 0])
    cube([1, 1, 1.25]);
  translate([226, 84, 0])
    cube([1, 1, 1.25]);
  translate([227, 84, 0])
    cube([1, 1, 1.29]);
  translate([228, 84, 0])
    cube([1, 1, 1.29]);
  translate([229, 84, 0])
    cube([1, 1, 1.29]);
  translate([230, 84, 0])
    cube([1, 1, 1.29]);
  translate([231, 84, 0])
    cube([1, 1, 1.29]);
  translate([232, 84, 0])
    cube([1, 1, 1.29]);
  translate([233, 84, 0])
    cube([1, 1, 1.29]);
  translate([234, 84, 0])
    cube([1, 1, 1.29]);
  translate([235, 84, 0])
    cube([1, 1, 1.29]);
  translate([236, 84, 0])
    cube([1, 1, 1.29]);
  translate([237, 84, 0])
    cube([1, 1, 1.29]);
  translate([238, 84, 0])
    cube([1, 1, 1.29]);
  translate([239, 84, 0])
    cube([1, 1, 1.29]);
  translate([240, 84, 0])
    cube([1, 1, 1.29]);
  translate([241, 84, 0])
    cube([1, 1, 1.29]);
  translate([242, 84, 0])
    cube([1, 1, 1.29]);
  translate([243, 84, 0])
    cube([1, 1, 1.29]);
  translate([244, 84, 0])
    cube([1, 1, 1.29]);
  translate([245, 84, 0])
    cube([1, 1, 1.29]);
  translate([246, 84, 0])
    cube([1, 1, 1.25]);
  translate([0, 85, 0])
    cube([1, 1, 1.45]);
  translate([1, 85, 0])
    cube([1, 1, 1.45]);
  translate([2, 85, 0])
    cube([1, 1, 1.45]);
  translate([3, 85, 0])
    cube([1, 1, 1.45]);
  translate([4, 85, 0])
    cube([1, 1, 1.45]);
  translate([5, 85, 0])
    cube([1, 1, 1.45]);
  translate([6, 85, 0])
    cube([1, 1, 1.45]);
  translate([7, 85, 0])
    cube([1, 1, 1.45]);
  translate([8, 85, 0])
    cube([1, 1, 1.45]);
  translate([9, 85, 0])
    cube([1, 1, 1.45]);
  translate([10, 85, 0])
    cube([1, 1, 1.45]);
  translate([11, 85, 0])
    cube([1, 1, 1.45]);
  translate([12, 85, 0])
    cube([1, 1, 1.45]);
  translate([13, 85, 0])
    cube([1, 1, 1.45]);
  translate([14, 85, 0])
    cube([1, 1, 1.45]);
  translate([15, 85, 0])
    cube([1, 1, 1.45]);
  translate([16, 85, 0])
    cube([1, 1, 1.45]);
  translate([17, 85, 0])
    cube([1, 1, 1.41]);
  translate([18, 85, 0])
    cube([1, 1, 1.45]);
  translate([19, 85, 0])
    cube([1, 1, 1.41]);
  translate([20, 85, 0])
    cube([1, 1, 1.41]);
  translate([21, 85, 0])
    cube([1, 1, 1.41]);
  translate([22, 85, 0])
    cube([1, 1, 1.37]);
  translate([23, 85, 0])
    cube([1, 1, 1.41]);
  translate([24, 85, 0])
    cube([1, 1, 1.45]);
  translate([25, 85, 0])
    cube([1, 1, 1.41]);
  translate([26, 85, 0])
    cube([1, 1, 1.37]);
  translate([27, 85, 0])
    cube([1, 1, 1.53]);
  translate([28, 85, 0])
    cube([1, 1, 1.18]);
  translate([29, 85, 0])
    cube([1, 1, 1.29]);
  translate([30, 85, 0])
    cube([1, 1, 6.51]);
  translate([31, 85, 0])
    cube([1, 1, 6.98]);
  translate([32, 85, 0])
    cube([1, 1, 8.20]);
  translate([33, 85, 0])
    cube([1, 1, 6.24]);
  translate([34, 85, 0])
    cube([1, 1, 1.65]);
  translate([35, 85, 0])
    cube([1, 1, 1.65]);
  translate([36, 85, 0])
    cube([1, 1, 1.49]);
  translate([37, 85, 0])
    cube([1, 1, 1.45]);
  translate([38, 85, 0])
    cube([1, 1, 1.53]);
  translate([39, 85, 0])
    cube([1, 1, 1.73]);
  translate([40, 85, 0])
    cube([1, 1, 1.96]);
  translate([41, 85, 0])
    cube([1, 1, 2.08]);
  translate([42, 85, 0])
    cube([1, 1, 2.16]);
  translate([43, 85, 0])
    cube([1, 1, 2.39]);
  translate([44, 85, 0])
    cube([1, 1, 3.10]);
  translate([45, 85, 0])
    cube([1, 1, 3.49]);
  translate([46, 85, 0])
    cube([1, 1, 2.75]);
  translate([47, 85, 0])
    cube([1, 1, 3.69]);
  translate([48, 85, 0])
    cube([1, 1, 0.31]);
  translate([49, 85, 0])
    cube([1, 1, 1.41]);
  translate([50, 85, 0])
    cube([1, 1, 1.41]);
  translate([51, 85, 0])
    cube([1, 1, 1.41]);
  translate([52, 85, 0])
    cube([1, 1, 1.37]);
  translate([53, 85, 0])
    cube([1, 1, 1.45]);
  translate([54, 85, 0])
    cube([1, 1, 1.53]);
  translate([55, 85, 0])
    cube([1, 1, 1.22]);
  translate([56, 85, 0])
    cube([1, 1, 1.33]);
  translate([57, 85, 0])
    cube([1, 1, 1.33]);
  translate([58, 85, 0])
    cube([1, 1, 1.33]);
  translate([59, 85, 0])
    cube([1, 1, 1.33]);
  translate([60, 85, 0])
    cube([1, 1, 1.37]);
  translate([61, 85, 0])
    cube([1, 1, 1.33]);
  translate([62, 85, 0])
    cube([1, 1, 0.86]);
  translate([63, 85, 0])
    cube([1, 1, 2.31]);
  translate([64, 85, 0])
    cube([1, 1, 2.04]);
  translate([65, 85, 0])
    cube([1, 1, 4.08]);
  translate([66, 85, 0])
    cube([1, 1, 2.75]);
  translate([67, 85, 0])
    cube([1, 1, 2.71]);
  translate([68, 85, 0])
    cube([1, 1, 1.92]);
  translate([69, 85, 0])
    cube([1, 1, 1.10]);
  translate([70, 85, 0])
    cube([1, 1, 1.10]);
  translate([71, 85, 0])
    cube([1, 1, 0.98]);
  translate([72, 85, 0])
    cube([1, 1, 2.43]);
  translate([73, 85, 0])
    cube([1, 1, 4.16]);
  translate([74, 85, 0])
    cube([1, 1, 3.65]);
  translate([75, 85, 0])
    cube([1, 1, 2.16]);
  translate([76, 85, 0])
    cube([1, 1, 1.37]);
  translate([77, 85, 0])
    cube([1, 1, 3.06]);
  translate([78, 85, 0])
    cube([1, 1, 2.12]);
  translate([79, 85, 0])
    cube([1, 1, 2.55]);
  translate([80, 85, 0])
    cube([1, 1, 2.31]);
  translate([81, 85, 0])
    cube([1, 1, 2.27]);
  translate([82, 85, 0])
    cube([1, 1, 2.16]);
  translate([83, 85, 0])
    cube([1, 1, 3.45]);
  translate([84, 85, 0])
    cube([1, 1, 2.75]);
  translate([85, 85, 0])
    cube([1, 1, 2.35]);
  translate([86, 85, 0])
    cube([1, 1, 3.10]);
  translate([87, 85, 0])
    cube([1, 1, 3.84]);
  translate([88, 85, 0])
    cube([1, 1, 3.88]);
  translate([89, 85, 0])
    cube([1, 1, 2.67]);
  translate([90, 85, 0])
    cube([1, 1, 1.41]);
  translate([91, 85, 0])
    cube([1, 1, 1.10]);
  translate([92, 85, 0])
    cube([1, 1, 2.16]);
  translate([93, 85, 0])
    cube([1, 1, 1.92]);
  translate([94, 85, 0])
    cube([1, 1, 2.59]);
  translate([95, 85, 0])
    cube([1, 1, 4.63]);
  translate([96, 85, 0])
    cube([1, 1, 4.71]);
  translate([97, 85, 0])
    cube([1, 1, 5.41]);
  translate([98, 85, 0])
    cube([1, 1, 5.57]);
  translate([99, 85, 0])
    cube([1, 1, 6.12]);
  translate([100, 85, 0])
    cube([1, 1, 5.69]);
  translate([101, 85, 0])
    cube([1, 1, 5.45]);
  translate([102, 85, 0])
    cube([1, 1, 5.53]);
  translate([103, 85, 0])
    cube([1, 1, 5.53]);
  translate([104, 85, 0])
    cube([1, 1, 5.80]);
  translate([105, 85, 0])
    cube([1, 1, 6.16]);
  translate([106, 85, 0])
    cube([1, 1, 6.47]);
  translate([107, 85, 0])
    cube([1, 1, 6.59]);
  translate([108, 85, 0])
    cube([1, 1, 3.45]);
  translate([109, 85, 0])
    cube([1, 1, 3.06]);
  translate([110, 85, 0])
    cube([1, 1, 2.51]);
  translate([111, 85, 0])
    cube([1, 1, 2.86]);
  translate([112, 85, 0])
    cube([1, 1, 1.25]);
  translate([113, 85, 0])
    cube([1, 1, 1.29]);
  translate([114, 85, 0])
    cube([1, 1, 4.24]);
  translate([115, 85, 0])
    cube([1, 1, 3.14]);
  translate([116, 85, 0])
    cube([1, 1, 3.33]);
  translate([117, 85, 0])
    cube([1, 1, 3.14]);
  translate([118, 85, 0])
    cube([1, 1, 6.00]);
  translate([119, 85, 0])
    cube([1, 1, 6.00]);
  translate([120, 85, 0])
    cube([1, 1, 7.57]);
  translate([121, 85, 0])
    cube([1, 1, 6.78]);
  translate([122, 85, 0])
    cube([1, 1, 1.37]);
  translate([123, 85, 0])
    cube([1, 1, 0.82]);
  translate([124, 85, 0])
    cube([1, 1, 1.25]);
  translate([125, 85, 0])
    cube([1, 1, 1.25]);
  translate([126, 85, 0])
    cube([1, 1, 1.25]);
  translate([127, 85, 0])
    cube([1, 1, 1.25]);
  translate([128, 85, 0])
    cube([1, 1, 1.25]);
  translate([129, 85, 0])
    cube([1, 1, 1.25]);
  translate([130, 85, 0])
    cube([1, 1, 1.25]);
  translate([131, 85, 0])
    cube([1, 1, 1.25]);
  translate([132, 85, 0])
    cube([1, 1, 1.25]);
  translate([133, 85, 0])
    cube([1, 1, 1.25]);
  translate([134, 85, 0])
    cube([1, 1, 1.29]);
  translate([135, 85, 0])
    cube([1, 1, 1.29]);
  translate([136, 85, 0])
    cube([1, 1, 1.29]);
  translate([137, 85, 0])
    cube([1, 1, 1.22]);
  translate([138, 85, 0])
    cube([1, 1, 1.25]);
  translate([139, 85, 0])
    cube([1, 1, 1.18]);
  translate([140, 85, 0])
    cube([1, 1, 1.29]);
  translate([141, 85, 0])
    cube([1, 1, 1.29]);
  translate([142, 85, 0])
    cube([1, 1, 1.29]);
  translate([143, 85, 0])
    cube([1, 1, 1.29]);
  translate([144, 85, 0])
    cube([1, 1, 1.29]);
  translate([145, 85, 0])
    cube([1, 1, 1.29]);
  translate([146, 85, 0])
    cube([1, 1, 1.29]);
  translate([147, 85, 0])
    cube([1, 1, 1.25]);
  translate([148, 85, 0])
    cube([1, 1, 1.29]);
  translate([149, 85, 0])
    cube([1, 1, 1.29]);
  translate([150, 85, 0])
    cube([1, 1, 1.29]);
  translate([151, 85, 0])
    cube([1, 1, 1.29]);
  translate([152, 85, 0])
    cube([1, 1, 1.29]);
  translate([153, 85, 0])
    cube([1, 1, 1.29]);
  translate([154, 85, 0])
    cube([1, 1, 1.29]);
  translate([155, 85, 0])
    cube([1, 1, 1.29]);
  translate([156, 85, 0])
    cube([1, 1, 1.29]);
  translate([157, 85, 0])
    cube([1, 1, 1.29]);
  translate([158, 85, 0])
    cube([1, 1, 1.29]);
  translate([159, 85, 0])
    cube([1, 1, 1.29]);
  translate([160, 85, 0])
    cube([1, 1, 1.29]);
  translate([161, 85, 0])
    cube([1, 1, 1.29]);
  translate([162, 85, 0])
    cube([1, 1, 1.29]);
  translate([163, 85, 0])
    cube([1, 1, 1.29]);
  translate([164, 85, 0])
    cube([1, 1, 1.29]);
  translate([165, 85, 0])
    cube([1, 1, 1.29]);
  translate([166, 85, 0])
    cube([1, 1, 1.29]);
  translate([167, 85, 0])
    cube([1, 1, 1.29]);
  translate([168, 85, 0])
    cube([1, 1, 1.33]);
  translate([169, 85, 0])
    cube([1, 1, 1.29]);
  translate([170, 85, 0])
    cube([1, 1, 1.33]);
  translate([171, 85, 0])
    cube([1, 1, 1.29]);
  translate([172, 85, 0])
    cube([1, 1, 1.25]);
  translate([173, 85, 0])
    cube([1, 1, 1.29]);
  translate([174, 85, 0])
    cube([1, 1, 1.33]);
  translate([175, 85, 0])
    cube([1, 1, 1.33]);
  translate([176, 85, 0])
    cube([1, 1, 1.33]);
  translate([177, 85, 0])
    cube([1, 1, 1.29]);
  translate([178, 85, 0])
    cube([1, 1, 1.29]);
  translate([179, 85, 0])
    cube([1, 1, 1.29]);
  translate([180, 85, 0])
    cube([1, 1, 1.33]);
  translate([181, 85, 0])
    cube([1, 1, 1.33]);
  translate([182, 85, 0])
    cube([1, 1, 1.33]);
  translate([183, 85, 0])
    cube([1, 1, 1.33]);
  translate([184, 85, 0])
    cube([1, 1, 1.29]);
  translate([185, 85, 0])
    cube([1, 1, 1.29]);
  translate([186, 85, 0])
    cube([1, 1, 1.33]);
  translate([187, 85, 0])
    cube([1, 1, 1.33]);
  translate([188, 85, 0])
    cube([1, 1, 1.29]);
  translate([189, 85, 0])
    cube([1, 1, 1.33]);
  translate([190, 85, 0])
    cube([1, 1, 1.29]);
  translate([191, 85, 0])
    cube([1, 1, 1.33]);
  translate([192, 85, 0])
    cube([1, 1, 1.29]);
  translate([193, 85, 0])
    cube([1, 1, 1.25]);
  translate([194, 85, 0])
    cube([1, 1, 1.29]);
  translate([195, 85, 0])
    cube([1, 1, 1.33]);
  translate([196, 85, 0])
    cube([1, 1, 1.29]);
  translate([197, 85, 0])
    cube([1, 1, 1.33]);
  translate([198, 85, 0])
    cube([1, 1, 1.29]);
  translate([199, 85, 0])
    cube([1, 1, 1.29]);
  translate([200, 85, 0])
    cube([1, 1, 1.29]);
  translate([201, 85, 0])
    cube([1, 1, 1.29]);
  translate([202, 85, 0])
    cube([1, 1, 1.29]);
  translate([203, 85, 0])
    cube([1, 1, 1.25]);
  translate([204, 85, 0])
    cube([1, 1, 1.33]);
  translate([205, 85, 0])
    cube([1, 1, 1.33]);
  translate([206, 85, 0])
    cube([1, 1, 1.29]);
  translate([207, 85, 0])
    cube([1, 1, 1.29]);
  translate([208, 85, 0])
    cube([1, 1, 1.29]);
  translate([209, 85, 0])
    cube([1, 1, 1.29]);
  translate([210, 85, 0])
    cube([1, 1, 1.29]);
  translate([211, 85, 0])
    cube([1, 1, 1.22]);
  translate([212, 85, 0])
    cube([1, 1, 1.29]);
  translate([213, 85, 0])
    cube([1, 1, 1.29]);
  translate([214, 85, 0])
    cube([1, 1, 1.29]);
  translate([215, 85, 0])
    cube([1, 1, 1.29]);
  translate([216, 85, 0])
    cube([1, 1, 1.29]);
  translate([217, 85, 0])
    cube([1, 1, 1.29]);
  translate([218, 85, 0])
    cube([1, 1, 1.29]);
  translate([219, 85, 0])
    cube([1, 1, 1.25]);
  translate([220, 85, 0])
    cube([1, 1, 1.25]);
  translate([221, 85, 0])
    cube([1, 1, 1.25]);
  translate([222, 85, 0])
    cube([1, 1, 1.29]);
  translate([223, 85, 0])
    cube([1, 1, 1.29]);
  translate([224, 85, 0])
    cube([1, 1, 1.29]);
  translate([225, 85, 0])
    cube([1, 1, 1.25]);
  translate([226, 85, 0])
    cube([1, 1, 1.29]);
  translate([227, 85, 0])
    cube([1, 1, 1.29]);
  translate([228, 85, 0])
    cube([1, 1, 1.25]);
  translate([229, 85, 0])
    cube([1, 1, 1.29]);
  translate([230, 85, 0])
    cube([1, 1, 1.29]);
  translate([231, 85, 0])
    cube([1, 1, 1.29]);
  translate([232, 85, 0])
    cube([1, 1, 1.25]);
  translate([233, 85, 0])
    cube([1, 1, 1.29]);
  translate([234, 85, 0])
    cube([1, 1, 1.29]);
  translate([235, 85, 0])
    cube([1, 1, 1.29]);
  translate([236, 85, 0])
    cube([1, 1, 1.29]);
  translate([237, 85, 0])
    cube([1, 1, 1.29]);
  translate([238, 85, 0])
    cube([1, 1, 1.29]);
  translate([239, 85, 0])
    cube([1, 1, 1.29]);
  translate([240, 85, 0])
    cube([1, 1, 1.29]);
  translate([241, 85, 0])
    cube([1, 1, 1.29]);
  translate([242, 85, 0])
    cube([1, 1, 1.29]);
  translate([243, 85, 0])
    cube([1, 1, 1.29]);
  translate([244, 85, 0])
    cube([1, 1, 1.29]);
  translate([245, 85, 0])
    cube([1, 1, 1.29]);
  translate([246, 85, 0])
    cube([1, 1, 1.29]);
  translate([0, 86, 0])
    cube([1, 1, 1.45]);
  translate([1, 86, 0])
    cube([1, 1, 1.45]);
  translate([2, 86, 0])
    cube([1, 1, 1.45]);
  translate([3, 86, 0])
    cube([1, 1, 1.45]);
  translate([4, 86, 0])
    cube([1, 1, 1.45]);
  translate([5, 86, 0])
    cube([1, 1, 1.45]);
  translate([6, 86, 0])
    cube([1, 1, 1.45]);
  translate([7, 86, 0])
    cube([1, 1, 1.45]);
  translate([8, 86, 0])
    cube([1, 1, 1.45]);
  translate([9, 86, 0])
    cube([1, 1, 1.45]);
  translate([10, 86, 0])
    cube([1, 1, 1.45]);
  translate([11, 86, 0])
    cube([1, 1, 1.45]);
  translate([12, 86, 0])
    cube([1, 1, 1.45]);
  translate([13, 86, 0])
    cube([1, 1, 1.45]);
  translate([14, 86, 0])
    cube([1, 1, 1.45]);
  translate([15, 86, 0])
    cube([1, 1, 1.45]);
  translate([16, 86, 0])
    cube([1, 1, 1.45]);
  translate([17, 86, 0])
    cube([1, 1, 1.41]);
  translate([18, 86, 0])
    cube([1, 1, 1.45]);
  translate([19, 86, 0])
    cube([1, 1, 1.41]);
  translate([20, 86, 0])
    cube([1, 1, 1.41]);
  translate([21, 86, 0])
    cube([1, 1, 1.41]);
  translate([22, 86, 0])
    cube([1, 1, 1.37]);
  translate([23, 86, 0])
    cube([1, 1, 1.41]);
  translate([24, 86, 0])
    cube([1, 1, 1.45]);
  translate([25, 86, 0])
    cube([1, 1, 1.53]);
  translate([26, 86, 0])
    cube([1, 1, 1.33]);
  translate([27, 86, 0])
    cube([1, 1, 6.24]);
  translate([28, 86, 0])
    cube([1, 1, 1.33]);
  translate([29, 86, 0])
    cube([1, 1, 1.33]);
  translate([30, 86, 0])
    cube([1, 1, 6.47]);
  translate([31, 86, 0])
    cube([1, 1, 6.75]);
  translate([32, 86, 0])
    cube([1, 1, 7.45]);
  translate([33, 86, 0])
    cube([1, 1, 6.35]);
  translate([34, 86, 0])
    cube([1, 1, 4.94]);
  translate([35, 86, 0])
    cube([1, 1, 1.18]);
  translate([36, 86, 0])
    cube([1, 1, 1.37]);
  translate([37, 86, 0])
    cube([1, 1, 1.33]);
  translate([38, 86, 0])
    cube([1, 1, 1.49]);
  translate([39, 86, 0])
    cube([1, 1, 1.57]);
  translate([40, 86, 0])
    cube([1, 1, 2.12]);
  translate([41, 86, 0])
    cube([1, 1, 2.08]);
  translate([42, 86, 0])
    cube([1, 1, 1.76]);
  translate([43, 86, 0])
    cube([1, 1, 2.20]);
  translate([44, 86, 0])
    cube([1, 1, 2.63]);
  translate([45, 86, 0])
    cube([1, 1, 3.25]);
  translate([46, 86, 0])
    cube([1, 1, 2.78]);
  translate([47, 86, 0])
    cube([1, 1, 2.86]);
  translate([48, 86, 0])
    cube([1, 1, 2.35]);
  translate([49, 86, 0])
    cube([1, 1, 0.82]);
  translate([50, 86, 0])
    cube([1, 1, 1.41]);
  translate([51, 86, 0])
    cube([1, 1, 1.41]);
  translate([52, 86, 0])
    cube([1, 1, 1.37]);
  translate([53, 86, 0])
    cube([1, 1, 1.45]);
  translate([54, 86, 0])
    cube([1, 1, 1.45]);
  translate([55, 86, 0])
    cube([1, 1, 3.92]);
  translate([56, 86, 0])
    cube([1, 1, 1.33]);
  translate([57, 86, 0])
    cube([1, 1, 1.33]);
  translate([58, 86, 0])
    cube([1, 1, 1.33]);
  translate([59, 86, 0])
    cube([1, 1, 1.33]);
  translate([60, 86, 0])
    cube([1, 1, 1.37]);
  translate([61, 86, 0])
    cube([1, 1, 1.33]);
  translate([62, 86, 0])
    cube([1, 1, 1.84]);
  translate([63, 86, 0])
    cube([1, 1, 5.22]);
  translate([64, 86, 0])
    cube([1, 1, 5.25]);
  translate([65, 86, 0])
    cube([1, 1, 4.82]);
  translate([66, 86, 0])
    cube([1, 1, 4.35]);
  translate([67, 86, 0])
    cube([1, 1, 3.84]);
  translate([68, 86, 0])
    cube([1, 1, 3.06]);
  translate([69, 86, 0])
    cube([1, 1, 2.04]);
  translate([70, 86, 0])
    cube([1, 1, 0.78]);
  translate([71, 86, 0])
    cube([1, 1, 1.06]);
  translate([72, 86, 0])
    cube([1, 1, 0.51]);
  translate([73, 86, 0])
    cube([1, 1, 0.31]);
  translate([74, 86, 0])
    cube([1, 1, 0.86]);
  translate([75, 86, 0])
    cube([1, 1, 3.06]);
  translate([76, 86, 0])
    cube([1, 1, 2.35]);
  translate([77, 86, 0])
    cube([1, 1, 1.61]);
  translate([78, 86, 0])
    cube([1, 1, 2.59]);
  translate([79, 86, 0])
    cube([1, 1, 2.12]);
  translate([80, 86, 0])
    cube([1, 1, 2.82]);
  translate([81, 86, 0])
    cube([1, 1, 3.57]);
  translate([82, 86, 0])
    cube([1, 1, 2.90]);
  translate([83, 86, 0])
    cube([1, 1, 2.08]);
  translate([84, 86, 0])
    cube([1, 1, 2.51]);
  translate([85, 86, 0])
    cube([1, 1, 4.98]);
  translate([86, 86, 0])
    cube([1, 1, 5.25]);
  translate([87, 86, 0])
    cube([1, 1, 5.18]);
  translate([88, 86, 0])
    cube([1, 1, 5.41]);
  translate([89, 86, 0])
    cube([1, 1, 5.69]);
  translate([90, 86, 0])
    cube([1, 1, 5.37]);
  translate([91, 86, 0])
    cube([1, 1, 5.18]);
  translate([92, 86, 0])
    cube([1, 1, 3.69]);
  translate([93, 86, 0])
    cube([1, 1, 1.49]);
  translate([94, 86, 0])
    cube([1, 1, 2.08]);
  translate([95, 86, 0])
    cube([1, 1, 4.00]);
  translate([96, 86, 0])
    cube([1, 1, 3.92]);
  translate([97, 86, 0])
    cube([1, 1, 2.63]);
  translate([98, 86, 0])
    cube([1, 1, 2.31]);
  translate([99, 86, 0])
    cube([1, 1, 1.84]);
  translate([100, 86, 0])
    cube([1, 1, 5.92]);
  translate([101, 86, 0])
    cube([1, 1, 5.96]);
  translate([102, 86, 0])
    cube([1, 1, 5.65]);
  translate([103, 86, 0])
    cube([1, 1, 5.69]);
  translate([104, 86, 0])
    cube([1, 1, 5.53]);
  translate([105, 86, 0])
    cube([1, 1, 5.61]);
  translate([106, 86, 0])
    cube([1, 1, 6.12]);
  translate([107, 86, 0])
    cube([1, 1, 6.59]);
  translate([108, 86, 0])
    cube([1, 1, 2.43]);
  translate([109, 86, 0])
    cube([1, 1, 2.67]);
  translate([110, 86, 0])
    cube([1, 1, 5.61]);
  translate([111, 86, 0])
    cube([1, 1, 1.84]);
  translate([112, 86, 0])
    cube([1, 1, 1.84]);
  translate([113, 86, 0])
    cube([1, 1, 1.45]);
  translate([114, 86, 0])
    cube([1, 1, 1.57]);
  translate([115, 86, 0])
    cube([1, 1, 2.08]);
  translate([116, 86, 0])
    cube([1, 1, 1.80]);
  translate([117, 86, 0])
    cube([1, 1, 1.49]);
  translate([118, 86, 0])
    cube([1, 1, 2.08]);
  translate([119, 86, 0])
    cube([1, 1, 0.71]);
  translate([120, 86, 0])
    cube([1, 1, 7.41]);
  translate([121, 86, 0])
    cube([1, 1, 8.20]);
  translate([122, 86, 0])
    cube([1, 1, 7.29]);
  translate([123, 86, 0])
    cube([1, 1, 1.41]);
  translate([124, 86, 0])
    cube([1, 1, 1.25]);
  translate([125, 86, 0])
    cube([1, 1, 1.25]);
  translate([126, 86, 0])
    cube([1, 1, 1.25]);
  translate([127, 86, 0])
    cube([1, 1, 1.25]);
  translate([128, 86, 0])
    cube([1, 1, 1.25]);
  translate([129, 86, 0])
    cube([1, 1, 1.25]);
  translate([130, 86, 0])
    cube([1, 1, 1.25]);
  translate([131, 86, 0])
    cube([1, 1, 1.25]);
  translate([132, 86, 0])
    cube([1, 1, 1.25]);
  translate([133, 86, 0])
    cube([1, 1, 1.25]);
  translate([134, 86, 0])
    cube([1, 1, 1.29]);
  translate([135, 86, 0])
    cube([1, 1, 1.29]);
  translate([136, 86, 0])
    cube([1, 1, 1.29]);
  translate([137, 86, 0])
    cube([1, 1, 1.22]);
  translate([138, 86, 0])
    cube([1, 1, 1.25]);
  translate([139, 86, 0])
    cube([1, 1, 1.33]);
  translate([140, 86, 0])
    cube([1, 1, 1.29]);
  translate([141, 86, 0])
    cube([1, 1, 1.29]);
  translate([142, 86, 0])
    cube([1, 1, 1.29]);
  translate([143, 86, 0])
    cube([1, 1, 1.29]);
  translate([144, 86, 0])
    cube([1, 1, 1.29]);
  translate([145, 86, 0])
    cube([1, 1, 1.29]);
  translate([146, 86, 0])
    cube([1, 1, 1.29]);
  translate([147, 86, 0])
    cube([1, 1, 1.29]);
  translate([148, 86, 0])
    cube([1, 1, 1.29]);
  translate([149, 86, 0])
    cube([1, 1, 1.29]);
  translate([150, 86, 0])
    cube([1, 1, 1.29]);
  translate([151, 86, 0])
    cube([1, 1, 1.29]);
  translate([152, 86, 0])
    cube([1, 1, 1.29]);
  translate([153, 86, 0])
    cube([1, 1, 1.29]);
  translate([154, 86, 0])
    cube([1, 1, 1.29]);
  translate([155, 86, 0])
    cube([1, 1, 1.29]);
  translate([156, 86, 0])
    cube([1, 1, 1.29]);
  translate([157, 86, 0])
    cube([1, 1, 1.29]);
  translate([158, 86, 0])
    cube([1, 1, 1.29]);
  translate([159, 86, 0])
    cube([1, 1, 1.29]);
  translate([160, 86, 0])
    cube([1, 1, 1.29]);
  translate([161, 86, 0])
    cube([1, 1, 1.29]);
  translate([162, 86, 0])
    cube([1, 1, 1.29]);
  translate([163, 86, 0])
    cube([1, 1, 1.29]);
  translate([164, 86, 0])
    cube([1, 1, 1.29]);
  translate([165, 86, 0])
    cube([1, 1, 1.29]);
  translate([166, 86, 0])
    cube([1, 1, 1.29]);
  translate([167, 86, 0])
    cube([1, 1, 1.29]);
  translate([168, 86, 0])
    cube([1, 1, 1.33]);
  translate([169, 86, 0])
    cube([1, 1, 1.29]);
  translate([170, 86, 0])
    cube([1, 1, 1.33]);
  translate([171, 86, 0])
    cube([1, 1, 1.29]);
  translate([172, 86, 0])
    cube([1, 1, 1.33]);
  translate([173, 86, 0])
    cube([1, 1, 1.37]);
  translate([174, 86, 0])
    cube([1, 1, 1.33]);
  translate([175, 86, 0])
    cube([1, 1, 1.33]);
  translate([176, 86, 0])
    cube([1, 1, 1.33]);
  translate([177, 86, 0])
    cube([1, 1, 1.29]);
  translate([178, 86, 0])
    cube([1, 1, 1.29]);
  translate([179, 86, 0])
    cube([1, 1, 1.29]);
  translate([180, 86, 0])
    cube([1, 1, 1.33]);
  translate([181, 86, 0])
    cube([1, 1, 1.33]);
  translate([182, 86, 0])
    cube([1, 1, 1.33]);
  translate([183, 86, 0])
    cube([1, 1, 1.33]);
  translate([184, 86, 0])
    cube([1, 1, 1.29]);
  translate([185, 86, 0])
    cube([1, 1, 1.29]);
  translate([186, 86, 0])
    cube([1, 1, 1.33]);
  translate([187, 86, 0])
    cube([1, 1, 1.33]);
  translate([188, 86, 0])
    cube([1, 1, 1.29]);
  translate([189, 86, 0])
    cube([1, 1, 1.33]);
  translate([190, 86, 0])
    cube([1, 1, 1.29]);
  translate([191, 86, 0])
    cube([1, 1, 1.33]);
  translate([192, 86, 0])
    cube([1, 1, 1.29]);
  translate([193, 86, 0])
    cube([1, 1, 1.25]);
  translate([194, 86, 0])
    cube([1, 1, 1.29]);
  translate([195, 86, 0])
    cube([1, 1, 1.33]);
  translate([196, 86, 0])
    cube([1, 1, 1.29]);
  translate([197, 86, 0])
    cube([1, 1, 1.33]);
  translate([198, 86, 0])
    cube([1, 1, 1.29]);
  translate([199, 86, 0])
    cube([1, 1, 1.29]);
  translate([200, 86, 0])
    cube([1, 1, 1.29]);
  translate([201, 86, 0])
    cube([1, 1, 1.29]);
  translate([202, 86, 0])
    cube([1, 1, 1.29]);
  translate([203, 86, 0])
    cube([1, 1, 1.25]);
  translate([204, 86, 0])
    cube([1, 1, 1.33]);
  translate([205, 86, 0])
    cube([1, 1, 1.33]);
  translate([206, 86, 0])
    cube([1, 1, 1.29]);
  translate([207, 86, 0])
    cube([1, 1, 1.29]);
  translate([208, 86, 0])
    cube([1, 1, 1.29]);
  translate([209, 86, 0])
    cube([1, 1, 1.29]);
  translate([210, 86, 0])
    cube([1, 1, 1.29]);
  translate([211, 86, 0])
    cube([1, 1, 1.29]);
  translate([212, 86, 0])
    cube([1, 1, 1.29]);
  translate([213, 86, 0])
    cube([1, 1, 1.29]);
  translate([214, 86, 0])
    cube([1, 1, 1.29]);
  translate([215, 86, 0])
    cube([1, 1, 1.29]);
  translate([216, 86, 0])
    cube([1, 1, 1.29]);
  translate([217, 86, 0])
    cube([1, 1, 1.29]);
  translate([218, 86, 0])
    cube([1, 1, 1.29]);
  translate([219, 86, 0])
    cube([1, 1, 1.25]);
  translate([220, 86, 0])
    cube([1, 1, 1.25]);
  translate([221, 86, 0])
    cube([1, 1, 1.25]);
  translate([222, 86, 0])
    cube([1, 1, 1.29]);
  translate([223, 86, 0])
    cube([1, 1, 1.29]);
  translate([224, 86, 0])
    cube([1, 1, 1.29]);
  translate([225, 86, 0])
    cube([1, 1, 1.25]);
  translate([226, 86, 0])
    cube([1, 1, 1.29]);
  translate([227, 86, 0])
    cube([1, 1, 1.29]);
  translate([228, 86, 0])
    cube([1, 1, 1.25]);
  translate([229, 86, 0])
    cube([1, 1, 1.29]);
  translate([230, 86, 0])
    cube([1, 1, 1.29]);
  translate([231, 86, 0])
    cube([1, 1, 1.29]);
  translate([232, 86, 0])
    cube([1, 1, 1.33]);
  translate([233, 86, 0])
    cube([1, 1, 1.29]);
  translate([234, 86, 0])
    cube([1, 1, 1.29]);
  translate([235, 86, 0])
    cube([1, 1, 1.29]);
  translate([236, 86, 0])
    cube([1, 1, 1.29]);
  translate([237, 86, 0])
    cube([1, 1, 1.29]);
  translate([238, 86, 0])
    cube([1, 1, 1.29]);
  translate([239, 86, 0])
    cube([1, 1, 1.29]);
  translate([240, 86, 0])
    cube([1, 1, 1.29]);
  translate([241, 86, 0])
    cube([1, 1, 1.29]);
  translate([242, 86, 0])
    cube([1, 1, 1.29]);
  translate([243, 86, 0])
    cube([1, 1, 1.29]);
  translate([244, 86, 0])
    cube([1, 1, 1.29]);
  translate([245, 86, 0])
    cube([1, 1, 1.29]);
  translate([246, 86, 0])
    cube([1, 1, 1.29]);
  translate([0, 87, 0])
    cube([1, 1, 1.45]);
  translate([1, 87, 0])
    cube([1, 1, 1.45]);
  translate([2, 87, 0])
    cube([1, 1, 1.45]);
  translate([3, 87, 0])
    cube([1, 1, 1.45]);
  translate([4, 87, 0])
    cube([1, 1, 1.45]);
  translate([5, 87, 0])
    cube([1, 1, 1.45]);
  translate([6, 87, 0])
    cube([1, 1, 1.45]);
  translate([7, 87, 0])
    cube([1, 1, 1.45]);
  translate([8, 87, 0])
    cube([1, 1, 1.45]);
  translate([9, 87, 0])
    cube([1, 1, 1.45]);
  translate([10, 87, 0])
    cube([1, 1, 1.45]);
  translate([11, 87, 0])
    cube([1, 1, 1.45]);
  translate([12, 87, 0])
    cube([1, 1, 1.45]);
  translate([13, 87, 0])
    cube([1, 1, 1.45]);
  translate([14, 87, 0])
    cube([1, 1, 1.45]);
  translate([15, 87, 0])
    cube([1, 1, 1.49]);
  translate([16, 87, 0])
    cube([1, 1, 1.45]);
  translate([17, 87, 0])
    cube([1, 1, 1.45]);
  translate([18, 87, 0])
    cube([1, 1, 1.45]);
  translate([19, 87, 0])
    cube([1, 1, 1.45]);
  translate([20, 87, 0])
    cube([1, 1, 1.45]);
  translate([21, 87, 0])
    cube([1, 1, 1.45]);
  translate([22, 87, 0])
    cube([1, 1, 1.41]);
  translate([23, 87, 0])
    cube([1, 1, 1.45]);
  translate([24, 87, 0])
    cube([1, 1, 1.45]);
  translate([25, 87, 0])
    cube([1, 1, 1.37]);
  translate([26, 87, 0])
    cube([1, 1, 1.45]);
  translate([27, 87, 0])
    cube([1, 1, 1.18]);
  translate([28, 87, 0])
    cube([1, 1, 1.25]);
  translate([29, 87, 0])
    cube([1, 1, 1.25]);
  translate([30, 87, 0])
    cube([1, 1, 2.00]);
  translate([31, 87, 0])
    cube([1, 1, 6.16]);
  translate([32, 87, 0])
    cube([1, 1, 6.86]);
  translate([33, 87, 0])
    cube([1, 1, 5.92]);
  translate([34, 87, 0])
    cube([1, 1, 3.92]);
  translate([35, 87, 0])
    cube([1, 1, 2.71]);
  translate([36, 87, 0])
    cube([1, 1, 1.10]);
  translate([37, 87, 0])
    cube([1, 1, 1.18]);
  translate([38, 87, 0])
    cube([1, 1, 1.25]);
  translate([39, 87, 0])
    cube([1, 1, 1.69]);
  translate([40, 87, 0])
    cube([1, 1, 1.84]);
  translate([41, 87, 0])
    cube([1, 1, 1.69]);
  translate([42, 87, 0])
    cube([1, 1, 1.61]);
  translate([43, 87, 0])
    cube([1, 1, 1.84]);
  translate([44, 87, 0])
    cube([1, 1, 2.00]);
  translate([45, 87, 0])
    cube([1, 1, 2.43]);
  translate([46, 87, 0])
    cube([1, 1, 2.31]);
  translate([47, 87, 0])
    cube([1, 1, 2.31]);
  translate([48, 87, 0])
    cube([1, 1, 6.35]);
  translate([49, 87, 0])
    cube([1, 1, 0.04]);
  translate([50, 87, 0])
    cube([1, 1, 1.37]);
  translate([51, 87, 0])
    cube([1, 1, 1.45]);
  translate([52, 87, 0])
    cube([1, 1, 1.45]);
  translate([53, 87, 0])
    cube([1, 1, 1.41]);
  translate([54, 87, 0])
    cube([1, 1, 1.53]);
  translate([55, 87, 0])
    cube([1, 1, 2.27]);
  translate([56, 87, 0])
    cube([1, 1, 1.29]);
  translate([57, 87, 0])
    cube([1, 1, 1.33]);
  translate([58, 87, 0])
    cube([1, 1, 1.33]);
  translate([59, 87, 0])
    cube([1, 1, 1.41]);
  translate([60, 87, 0])
    cube([1, 1, 0.82]);
  translate([61, 87, 0])
    cube([1, 1, 1.84]);
  translate([62, 87, 0])
    cube([1, 1, 5.76]);
  translate([63, 87, 0])
    cube([1, 1, 5.53]);
  translate([64, 87, 0])
    cube([1, 1, 4.75]);
  translate([65, 87, 0])
    cube([1, 1, 4.71]);
  translate([66, 87, 0])
    cube([1, 1, 4.71]);
  translate([67, 87, 0])
    cube([1, 1, 4.51]);
  translate([68, 87, 0])
    cube([1, 1, 3.96]);
  translate([69, 87, 0])
    cube([1, 1, 2.71]);
  translate([70, 87, 0])
    cube([1, 1, 1.22]);
  translate([71, 87, 0])
    cube([1, 1, 0.82]);
  translate([72, 87, 0])
    cube([1, 1, 1.10]);
  translate([73, 87, 0])
    cube([1, 1, 0.12]);
  translate([74, 87, 0])
    cube([1, 1, 0.86]);
  translate([75, 87, 0])
    cube([1, 1, 3.53]);
  translate([76, 87, 0])
    cube([1, 1, 1.41]);
  translate([77, 87, 0])
    cube([1, 1, 1.45]);
  translate([78, 87, 0])
    cube([1, 1, 1.29]);
  translate([79, 87, 0])
    cube([1, 1, 2.59]);
  translate([80, 87, 0])
    cube([1, 1, 2.39]);
  translate([81, 87, 0])
    cube([1, 1, 1.29]);
  translate([82, 87, 0])
    cube([1, 1, 2.31]);
  translate([83, 87, 0])
    cube([1, 1, 3.96]);
  translate([84, 87, 0])
    cube([1, 1, 2.08]);
  translate([85, 87, 0])
    cube([1, 1, 3.25]);
  translate([86, 87, 0])
    cube([1, 1, 5.49]);
  translate([87, 87, 0])
    cube([1, 1, 5.65]);
  translate([88, 87, 0])
    cube([1, 1, 5.61]);
  translate([89, 87, 0])
    cube([1, 1, 5.65]);
  translate([90, 87, 0])
    cube([1, 1, 5.73]);
  translate([91, 87, 0])
    cube([1, 1, 5.65]);
  translate([92, 87, 0])
    cube([1, 1, 5.65]);
  translate([93, 87, 0])
    cube([1, 1, 5.22]);
  translate([94, 87, 0])
    cube([1, 1, 4.75]);
  translate([95, 87, 0])
    cube([1, 1, 4.47]);
  translate([96, 87, 0])
    cube([1, 1, 3.76]);
  translate([97, 87, 0])
    cube([1, 1, 1.57]);
  translate([98, 87, 0])
    cube([1, 1, 2.00]);
  translate([99, 87, 0])
    cube([1, 1, 1.96]);
  translate([100, 87, 0])
    cube([1, 1, 1.96]);
  translate([101, 87, 0])
    cube([1, 1, 2.51]);
  translate([102, 87, 0])
    cube([1, 1, 2.67]);
  translate([103, 87, 0])
    cube([1, 1, 6.04]);
  translate([104, 87, 0])
    cube([1, 1, 5.65]);
  translate([105, 87, 0])
    cube([1, 1, 4.94]);
  translate([106, 87, 0])
    cube([1, 1, 1.73]);
  translate([107, 87, 0])
    cube([1, 1, 4.31]);
  translate([108, 87, 0])
    cube([1, 1, 1.29]);
  translate([109, 87, 0])
    cube([1, 1, 5.61]);
  translate([110, 87, 0])
    cube([1, 1, 6.59]);
  translate([111, 87, 0])
    cube([1, 1, 5.49]);
  translate([112, 87, 0])
    cube([1, 1, 2.16]);
  translate([113, 87, 0])
    cube([1, 1, 1.22]);
  translate([114, 87, 0])
    cube([1, 1, 1.45]);
  translate([115, 87, 0])
    cube([1, 1, 1.18]);
  translate([116, 87, 0])
    cube([1, 1, 2.59]);
  translate([117, 87, 0])
    cube([1, 1, 3.69]);
  translate([118, 87, 0])
    cube([1, 1, 3.73]);
  translate([119, 87, 0])
    cube([1, 1, 3.22]);
  translate([120, 87, 0])
    cube([1, 1, 2.16]);
  translate([121, 87, 0])
    cube([1, 1, 6.75]);
  translate([122, 87, 0])
    cube([1, 1, 7.76]);
  translate([123, 87, 0])
    cube([1, 1, 2.94]);
  translate([124, 87, 0])
    cube([1, 1, 1.25]);
  translate([125, 87, 0])
    cube([1, 1, 1.25]);
  translate([126, 87, 0])
    cube([1, 1, 1.25]);
  translate([127, 87, 0])
    cube([1, 1, 1.25]);
  translate([128, 87, 0])
    cube([1, 1, 1.25]);
  translate([129, 87, 0])
    cube([1, 1, 1.22]);
  translate([130, 87, 0])
    cube([1, 1, 1.29]);
  translate([131, 87, 0])
    cube([1, 1, 1.22]);
  translate([132, 87, 0])
    cube([1, 1, 1.22]);
  translate([133, 87, 0])
    cube([1, 1, 1.25]);
  translate([134, 87, 0])
    cube([1, 1, 1.29]);
  translate([135, 87, 0])
    cube([1, 1, 1.29]);
  translate([136, 87, 0])
    cube([1, 1, 1.29]);
  translate([137, 87, 0])
    cube([1, 1, 1.25]);
  translate([138, 87, 0])
    cube([1, 1, 1.25]);
  translate([139, 87, 0])
    cube([1, 1, 1.29]);
  translate([140, 87, 0])
    cube([1, 1, 1.29]);
  translate([141, 87, 0])
    cube([1, 1, 1.29]);
  translate([142, 87, 0])
    cube([1, 1, 1.29]);
  translate([143, 87, 0])
    cube([1, 1, 1.29]);
  translate([144, 87, 0])
    cube([1, 1, 1.25]);
  translate([145, 87, 0])
    cube([1, 1, 1.29]);
  translate([146, 87, 0])
    cube([1, 1, 1.29]);
  translate([147, 87, 0])
    cube([1, 1, 1.29]);
  translate([148, 87, 0])
    cube([1, 1, 1.29]);
  translate([149, 87, 0])
    cube([1, 1, 1.29]);
  translate([150, 87, 0])
    cube([1, 1, 1.29]);
  translate([151, 87, 0])
    cube([1, 1, 1.29]);
  translate([152, 87, 0])
    cube([1, 1, 1.29]);
  translate([153, 87, 0])
    cube([1, 1, 1.29]);
  translate([154, 87, 0])
    cube([1, 1, 1.29]);
  translate([155, 87, 0])
    cube([1, 1, 1.29]);
  translate([156, 87, 0])
    cube([1, 1, 1.29]);
  translate([157, 87, 0])
    cube([1, 1, 1.33]);
  translate([158, 87, 0])
    cube([1, 1, 1.29]);
  translate([159, 87, 0])
    cube([1, 1, 1.29]);
  translate([160, 87, 0])
    cube([1, 1, 1.29]);
  translate([161, 87, 0])
    cube([1, 1, 1.25]);
  translate([162, 87, 0])
    cube([1, 1, 1.29]);
  translate([163, 87, 0])
    cube([1, 1, 1.29]);
  translate([164, 87, 0])
    cube([1, 1, 1.33]);
  translate([165, 87, 0])
    cube([1, 1, 1.33]);
  translate([166, 87, 0])
    cube([1, 1, 1.33]);
  translate([167, 87, 0])
    cube([1, 1, 1.33]);
  translate([168, 87, 0])
    cube([1, 1, 1.33]);
  translate([169, 87, 0])
    cube([1, 1, 1.29]);
  translate([170, 87, 0])
    cube([1, 1, 1.33]);
  translate([171, 87, 0])
    cube([1, 1, 1.33]);
  translate([172, 87, 0])
    cube([1, 1, 1.29]);
  translate([173, 87, 0])
    cube([1, 1, 1.33]);
  translate([174, 87, 0])
    cube([1, 1, 1.33]);
  translate([175, 87, 0])
    cube([1, 1, 1.33]);
  translate([176, 87, 0])
    cube([1, 1, 1.29]);
  translate([177, 87, 0])
    cube([1, 1, 1.33]);
  translate([178, 87, 0])
    cube([1, 1, 1.37]);
  translate([179, 87, 0])
    cube([1, 1, 1.33]);
  translate([180, 87, 0])
    cube([1, 1, 1.33]);
  translate([181, 87, 0])
    cube([1, 1, 1.33]);
  translate([182, 87, 0])
    cube([1, 1, 1.33]);
  translate([183, 87, 0])
    cube([1, 1, 1.29]);
  translate([184, 87, 0])
    cube([1, 1, 1.33]);
  translate([185, 87, 0])
    cube([1, 1, 1.33]);
  translate([186, 87, 0])
    cube([1, 1, 1.33]);
  translate([187, 87, 0])
    cube([1, 1, 1.29]);
  translate([188, 87, 0])
    cube([1, 1, 1.25]);
  translate([189, 87, 0])
    cube([1, 1, 1.29]);
  translate([190, 87, 0])
    cube([1, 1, 1.33]);
  translate([191, 87, 0])
    cube([1, 1, 1.33]);
  translate([192, 87, 0])
    cube([1, 1, 1.33]);
  translate([193, 87, 0])
    cube([1, 1, 1.33]);
  translate([194, 87, 0])
    cube([1, 1, 1.37]);
  translate([195, 87, 0])
    cube([1, 1, 1.33]);
  translate([196, 87, 0])
    cube([1, 1, 1.29]);
  translate([197, 87, 0])
    cube([1, 1, 1.33]);
  translate([198, 87, 0])
    cube([1, 1, 1.29]);
  translate([199, 87, 0])
    cube([1, 1, 1.29]);
  translate([200, 87, 0])
    cube([1, 1, 1.29]);
  translate([201, 87, 0])
    cube([1, 1, 1.33]);
  translate([202, 87, 0])
    cube([1, 1, 1.33]);
  translate([203, 87, 0])
    cube([1, 1, 1.29]);
  translate([204, 87, 0])
    cube([1, 1, 1.29]);
  translate([205, 87, 0])
    cube([1, 1, 1.33]);
  translate([206, 87, 0])
    cube([1, 1, 1.25]);
  translate([207, 87, 0])
    cube([1, 1, 1.29]);
  translate([208, 87, 0])
    cube([1, 1, 1.29]);
  translate([209, 87, 0])
    cube([1, 1, 1.29]);
  translate([210, 87, 0])
    cube([1, 1, 1.29]);
  translate([211, 87, 0])
    cube([1, 1, 1.33]);
  translate([212, 87, 0])
    cube([1, 1, 1.29]);
  translate([213, 87, 0])
    cube([1, 1, 1.29]);
  translate([214, 87, 0])
    cube([1, 1, 1.29]);
  translate([215, 87, 0])
    cube([1, 1, 1.29]);
  translate([216, 87, 0])
    cube([1, 1, 1.29]);
  translate([217, 87, 0])
    cube([1, 1, 1.29]);
  translate([218, 87, 0])
    cube([1, 1, 1.29]);
  translate([219, 87, 0])
    cube([1, 1, 1.29]);
  translate([220, 87, 0])
    cube([1, 1, 1.29]);
  translate([221, 87, 0])
    cube([1, 1, 1.29]);
  translate([222, 87, 0])
    cube([1, 1, 1.29]);
  translate([223, 87, 0])
    cube([1, 1, 1.29]);
  translate([224, 87, 0])
    cube([1, 1, 1.25]);
  translate([225, 87, 0])
    cube([1, 1, 1.29]);
  translate([226, 87, 0])
    cube([1, 1, 1.29]);
  translate([227, 87, 0])
    cube([1, 1, 1.29]);
  translate([228, 87, 0])
    cube([1, 1, 1.29]);
  translate([229, 87, 0])
    cube([1, 1, 1.29]);
  translate([230, 87, 0])
    cube([1, 1, 1.29]);
  translate([231, 87, 0])
    cube([1, 1, 1.29]);
  translate([232, 87, 0])
    cube([1, 1, 1.29]);
  translate([233, 87, 0])
    cube([1, 1, 1.29]);
  translate([234, 87, 0])
    cube([1, 1, 1.29]);
  translate([235, 87, 0])
    cube([1, 1, 1.29]);
  translate([236, 87, 0])
    cube([1, 1, 1.29]);
  translate([237, 87, 0])
    cube([1, 1, 1.29]);
  translate([238, 87, 0])
    cube([1, 1, 1.29]);
  translate([239, 87, 0])
    cube([1, 1, 1.29]);
  translate([240, 87, 0])
    cube([1, 1, 1.29]);
  translate([241, 87, 0])
    cube([1, 1, 1.29]);
  translate([242, 87, 0])
    cube([1, 1, 1.29]);
  translate([243, 87, 0])
    cube([1, 1, 1.29]);
  translate([244, 87, 0])
    cube([1, 1, 1.29]);
  translate([245, 87, 0])
    cube([1, 1, 1.29]);
  translate([246, 87, 0])
    cube([1, 1, 1.29]);
  translate([0, 88, 0])
    cube([1, 1, 1.45]);
  translate([1, 88, 0])
    cube([1, 1, 1.45]);
  translate([2, 88, 0])
    cube([1, 1, 1.45]);
  translate([3, 88, 0])
    cube([1, 1, 1.45]);
  translate([4, 88, 0])
    cube([1, 1, 1.45]);
  translate([5, 88, 0])
    cube([1, 1, 1.45]);
  translate([6, 88, 0])
    cube([1, 1, 1.45]);
  translate([7, 88, 0])
    cube([1, 1, 1.45]);
  translate([8, 88, 0])
    cube([1, 1, 1.45]);
  translate([9, 88, 0])
    cube([1, 1, 1.45]);
  translate([10, 88, 0])
    cube([1, 1, 1.41]);
  translate([11, 88, 0])
    cube([1, 1, 1.45]);
  translate([12, 88, 0])
    cube([1, 1, 1.45]);
  translate([13, 88, 0])
    cube([1, 1, 1.45]);
  translate([14, 88, 0])
    cube([1, 1, 1.41]);
  translate([15, 88, 0])
    cube([1, 1, 1.45]);
  translate([16, 88, 0])
    cube([1, 1, 1.45]);
  translate([17, 88, 0])
    cube([1, 1, 1.45]);
  translate([18, 88, 0])
    cube([1, 1, 1.45]);
  translate([19, 88, 0])
    cube([1, 1, 1.45]);
  translate([20, 88, 0])
    cube([1, 1, 1.45]);
  translate([21, 88, 0])
    cube([1, 1, 1.45]);
  translate([22, 88, 0])
    cube([1, 1, 1.45]);
  translate([23, 88, 0])
    cube([1, 1, 1.41]);
  translate([24, 88, 0])
    cube([1, 1, 1.45]);
  translate([25, 88, 0])
    cube([1, 1, 1.41]);
  translate([26, 88, 0])
    cube([1, 1, 1.49]);
  translate([27, 88, 0])
    cube([1, 1, 0.94]);
  translate([28, 88, 0])
    cube([1, 1, 1.80]);
  translate([29, 88, 0])
    cube([1, 1, 0.94]);
  translate([30, 88, 0])
    cube([1, 1, 1.14]);
  translate([31, 88, 0])
    cube([1, 1, 5.61]);
  translate([32, 88, 0])
    cube([1, 1, 5.25]);
  translate([33, 88, 0])
    cube([1, 1, 5.29]);
  translate([34, 88, 0])
    cube([1, 1, 3.92]);
  translate([35, 88, 0])
    cube([1, 1, 2.51]);
  translate([36, 88, 0])
    cube([1, 1, 0.98]);
  translate([37, 88, 0])
    cube([1, 1, 1.10]);
  translate([38, 88, 0])
    cube([1, 1, 1.10]);
  translate([39, 88, 0])
    cube([1, 1, 1.53]);
  translate([40, 88, 0])
    cube([1, 1, 1.61]);
  translate([41, 88, 0])
    cube([1, 1, 1.69]);
  translate([42, 88, 0])
    cube([1, 1, 1.45]);
  translate([43, 88, 0])
    cube([1, 1, 1.45]);
  translate([44, 88, 0])
    cube([1, 1, 1.61]);
  translate([45, 88, 0])
    cube([1, 1, 2.24]);
  translate([46, 88, 0])
    cube([1, 1, 1.92]);
  translate([47, 88, 0])
    cube([1, 1, 2.35]);
  translate([48, 88, 0])
    cube([1, 1, 1.45]);
  translate([49, 88, 0])
    cube([1, 1, 0.16]);
  translate([50, 88, 0])
    cube([1, 1, 1.76]);
  translate([51, 88, 0])
    cube([1, 1, 1.41]);
  translate([52, 88, 0])
    cube([1, 1, 1.14]);
  translate([53, 88, 0])
    cube([1, 1, 1.37]);
  translate([54, 88, 0])
    cube([1, 1, 1.37]);
  translate([55, 88, 0])
    cube([1, 1, 1.18]);
  translate([56, 88, 0])
    cube([1, 1, 1.53]);
  translate([57, 88, 0])
    cube([1, 1, 1.45]);
  translate([58, 88, 0])
    cube([1, 1, 1.33]);
  translate([59, 88, 0])
    cube([1, 1, 1.18]);
  translate([60, 88, 0])
    cube([1, 1, 6.04]);
  translate([61, 88, 0])
    cube([1, 1, 5.10]);
  translate([62, 88, 0])
    cube([1, 1, 4.55]);
  translate([63, 88, 0])
    cube([1, 1, 4.63]);
  translate([64, 88, 0])
    cube([1, 1, 4.63]);
  translate([65, 88, 0])
    cube([1, 1, 4.78]);
  translate([66, 88, 0])
    cube([1, 1, 5.02]);
  translate([67, 88, 0])
    cube([1, 1, 5.06]);
  translate([68, 88, 0])
    cube([1, 1, 4.51]);
  translate([69, 88, 0])
    cube([1, 1, 3.73]);
  translate([70, 88, 0])
    cube([1, 1, 2.04]);
  translate([71, 88, 0])
    cube([1, 1, 0.94]);
  translate([72, 88, 0])
    cube([1, 1, 0.78]);
  translate([73, 88, 0])
    cube([1, 1, 0.59]);
  translate([74, 88, 0])
    cube([1, 1, 0.51]);
  translate([75, 88, 0])
    cube([1, 1, 1.10]);
  translate([76, 88, 0])
    cube([1, 1, 2.00]);
  translate([77, 88, 0])
    cube([1, 1, 1.96]);
  translate([78, 88, 0])
    cube([1, 1, 1.84]);
  translate([79, 88, 0])
    cube([1, 1, 1.92]);
  translate([80, 88, 0])
    cube([1, 1, 1.96]);
  translate([81, 88, 0])
    cube([1, 1, 1.33]);
  translate([82, 88, 0])
    cube([1, 1, 1.61]);
  translate([83, 88, 0])
    cube([1, 1, 1.73]);
  translate([84, 88, 0])
    cube([1, 1, 2.16]);
  translate([85, 88, 0])
    cube([1, 1, 1.14]);
  translate([86, 88, 0])
    cube([1, 1, 1.25]);
  translate([87, 88, 0])
    cube([1, 1, 4.35]);
  translate([88, 88, 0])
    cube([1, 1, 5.29]);
  translate([89, 88, 0])
    cube([1, 1, 5.65]);
  translate([90, 88, 0])
    cube([1, 1, 5.41]);
  translate([91, 88, 0])
    cube([1, 1, 5.61]);
  translate([92, 88, 0])
    cube([1, 1, 5.49]);
  translate([93, 88, 0])
    cube([1, 1, 5.49]);
  translate([94, 88, 0])
    cube([1, 1, 5.45]);
  translate([95, 88, 0])
    cube([1, 1, 5.41]);
  translate([96, 88, 0])
    cube([1, 1, 5.37]);
  translate([97, 88, 0])
    cube([1, 1, 5.49]);
  translate([98, 88, 0])
    cube([1, 1, 3.41]);
  translate([99, 88, 0])
    cube([1, 1, 1.73]);
  translate([100, 88, 0])
    cube([1, 1, 3.80]);
  translate([101, 88, 0])
    cube([1, 1, 3.45]);
  translate([102, 88, 0])
    cube([1, 1, 1.69]);
  translate([103, 88, 0])
    cube([1, 1, 2.39]);
  translate([104, 88, 0])
    cube([1, 1, 2.39]);
  translate([105, 88, 0])
    cube([1, 1, 2.24]);
  translate([106, 88, 0])
    cube([1, 1, 5.18]);
  translate([107, 88, 0])
    cube([1, 1, 5.73]);
  translate([108, 88, 0])
    cube([1, 1, 1.57]);
  translate([109, 88, 0])
    cube([1, 1, 6.12]);
  translate([110, 88, 0])
    cube([1, 1, 6.71]);
  translate([111, 88, 0])
    cube([1, 1, 6.35]);
  translate([112, 88, 0])
    cube([1, 1, 5.37]);
  translate([113, 88, 0])
    cube([1, 1, 1.18]);
  translate([114, 88, 0])
    cube([1, 1, 1.25]);
  translate([115, 88, 0])
    cube([1, 1, 2.00]);
  translate([116, 88, 0])
    cube([1, 1, 1.45]);
  translate([117, 88, 0])
    cube([1, 1, 1.96]);
  translate([118, 88, 0])
    cube([1, 1, 3.92]);
  translate([119, 88, 0])
    cube([1, 1, 3.18]);
  translate([120, 88, 0])
    cube([1, 1, 2.12]);
  translate([121, 88, 0])
    cube([1, 1, 2.04]);
  translate([122, 88, 0])
    cube([1, 1, 1.45]);
  translate([123, 88, 0])
    cube([1, 1, 7.53]);
  translate([124, 88, 0])
    cube([1, 1, 1.18]);
  translate([125, 88, 0])
    cube([1, 1, 1.29]);
  translate([126, 88, 0])
    cube([1, 1, 1.25]);
  translate([127, 88, 0])
    cube([1, 1, 1.25]);
  translate([128, 88, 0])
    cube([1, 1, 1.33]);
  translate([129, 88, 0])
    cube([1, 1, 1.25]);
  translate([130, 88, 0])
    cube([1, 1, 1.25]);
  translate([131, 88, 0])
    cube([1, 1, 1.25]);
  translate([132, 88, 0])
    cube([1, 1, 1.22]);
  translate([133, 88, 0])
    cube([1, 1, 1.25]);
  translate([134, 88, 0])
    cube([1, 1, 1.29]);
  translate([135, 88, 0])
    cube([1, 1, 1.25]);
  translate([136, 88, 0])
    cube([1, 1, 1.25]);
  translate([137, 88, 0])
    cube([1, 1, 1.29]);
  translate([138, 88, 0])
    cube([1, 1, 1.29]);
  translate([139, 88, 0])
    cube([1, 1, 1.22]);
  translate([140, 88, 0])
    cube([1, 1, 1.29]);
  translate([141, 88, 0])
    cube([1, 1, 1.29]);
  translate([142, 88, 0])
    cube([1, 1, 1.29]);
  translate([143, 88, 0])
    cube([1, 1, 1.29]);
  translate([144, 88, 0])
    cube([1, 1, 1.29]);
  translate([145, 88, 0])
    cube([1, 1, 1.29]);
  translate([146, 88, 0])
    cube([1, 1, 1.29]);
  translate([147, 88, 0])
    cube([1, 1, 1.29]);
  translate([148, 88, 0])
    cube([1, 1, 1.29]);
  translate([149, 88, 0])
    cube([1, 1, 1.29]);
  translate([150, 88, 0])
    cube([1, 1, 1.29]);
  translate([151, 88, 0])
    cube([1, 1, 1.29]);
  translate([152, 88, 0])
    cube([1, 1, 1.29]);
  translate([153, 88, 0])
    cube([1, 1, 1.29]);
  translate([154, 88, 0])
    cube([1, 1, 1.29]);
  translate([155, 88, 0])
    cube([1, 1, 1.29]);
  translate([156, 88, 0])
    cube([1, 1, 1.29]);
  translate([157, 88, 0])
    cube([1, 1, 1.25]);
  translate([158, 88, 0])
    cube([1, 1, 1.29]);
  translate([159, 88, 0])
    cube([1, 1, 1.29]);
  translate([160, 88, 0])
    cube([1, 1, 1.29]);
  translate([161, 88, 0])
    cube([1, 1, 1.37]);
  translate([162, 88, 0])
    cube([1, 1, 1.25]);
  translate([163, 88, 0])
    cube([1, 1, 1.33]);
  translate([164, 88, 0])
    cube([1, 1, 1.25]);
  translate([165, 88, 0])
    cube([1, 1, 1.29]);
  translate([166, 88, 0])
    cube([1, 1, 1.29]);
  translate([167, 88, 0])
    cube([1, 1, 1.25]);
  translate([168, 88, 0])
    cube([1, 1, 1.33]);
  translate([169, 88, 0])
    cube([1, 1, 1.33]);
  translate([170, 88, 0])
    cube([1, 1, 1.33]);
  translate([171, 88, 0])
    cube([1, 1, 1.29]);
  translate([172, 88, 0])
    cube([1, 1, 1.29]);
  translate([173, 88, 0])
    cube([1, 1, 1.33]);
  translate([174, 88, 0])
    cube([1, 1, 1.33]);
  translate([175, 88, 0])
    cube([1, 1, 1.33]);
  translate([176, 88, 0])
    cube([1, 1, 1.33]);
  translate([177, 88, 0])
    cube([1, 1, 1.29]);
  translate([178, 88, 0])
    cube([1, 1, 1.33]);
  translate([179, 88, 0])
    cube([1, 1, 1.33]);
  translate([180, 88, 0])
    cube([1, 1, 1.29]);
  translate([181, 88, 0])
    cube([1, 1, 1.29]);
  translate([182, 88, 0])
    cube([1, 1, 1.33]);
  translate([183, 88, 0])
    cube([1, 1, 1.33]);
  translate([184, 88, 0])
    cube([1, 1, 1.33]);
  translate([185, 88, 0])
    cube([1, 1, 1.33]);
  translate([186, 88, 0])
    cube([1, 1, 1.33]);
  translate([187, 88, 0])
    cube([1, 1, 1.33]);
  translate([188, 88, 0])
    cube([1, 1, 1.33]);
  translate([189, 88, 0])
    cube([1, 1, 1.33]);
  translate([190, 88, 0])
    cube([1, 1, 1.33]);
  translate([191, 88, 0])
    cube([1, 1, 1.33]);
  translate([192, 88, 0])
    cube([1, 1, 1.33]);
  translate([193, 88, 0])
    cube([1, 1, 1.25]);
  translate([194, 88, 0])
    cube([1, 1, 1.29]);
  translate([195, 88, 0])
    cube([1, 1, 1.33]);
  translate([196, 88, 0])
    cube([1, 1, 1.33]);
  translate([197, 88, 0])
    cube([1, 1, 1.33]);
  translate([198, 88, 0])
    cube([1, 1, 1.33]);
  translate([199, 88, 0])
    cube([1, 1, 1.33]);
  translate([200, 88, 0])
    cube([1, 1, 1.33]);
  translate([201, 88, 0])
    cube([1, 1, 1.29]);
  translate([202, 88, 0])
    cube([1, 1, 1.29]);
  translate([203, 88, 0])
    cube([1, 1, 1.29]);
  translate([204, 88, 0])
    cube([1, 1, 1.33]);
  translate([205, 88, 0])
    cube([1, 1, 1.33]);
  translate([206, 88, 0])
    cube([1, 1, 1.29]);
  translate([207, 88, 0])
    cube([1, 1, 1.37]);
  translate([208, 88, 0])
    cube([1, 1, 1.33]);
  translate([209, 88, 0])
    cube([1, 1, 1.33]);
  translate([210, 88, 0])
    cube([1, 1, 1.33]);
  translate([211, 88, 0])
    cube([1, 1, 1.29]);
  translate([212, 88, 0])
    cube([1, 1, 1.37]);
  translate([213, 88, 0])
    cube([1, 1, 1.29]);
  translate([214, 88, 0])
    cube([1, 1, 1.29]);
  translate([215, 88, 0])
    cube([1, 1, 1.29]);
  translate([216, 88, 0])
    cube([1, 1, 1.33]);
  translate([217, 88, 0])
    cube([1, 1, 1.29]);
  translate([218, 88, 0])
    cube([1, 1, 1.33]);
  translate([219, 88, 0])
    cube([1, 1, 1.29]);
  translate([220, 88, 0])
    cube([1, 1, 1.33]);
  translate([221, 88, 0])
    cube([1, 1, 1.33]);
  translate([222, 88, 0])
    cube([1, 1, 1.25]);
  translate([223, 88, 0])
    cube([1, 1, 1.29]);
  translate([224, 88, 0])
    cube([1, 1, 1.33]);
  translate([225, 88, 0])
    cube([1, 1, 1.25]);
  translate([226, 88, 0])
    cube([1, 1, 1.25]);
  translate([227, 88, 0])
    cube([1, 1, 1.29]);
  translate([228, 88, 0])
    cube([1, 1, 1.29]);
  translate([229, 88, 0])
    cube([1, 1, 1.29]);
  translate([230, 88, 0])
    cube([1, 1, 1.29]);
  translate([231, 88, 0])
    cube([1, 1, 1.29]);
  translate([232, 88, 0])
    cube([1, 1, 1.29]);
  translate([233, 88, 0])
    cube([1, 1, 1.29]);
  translate([234, 88, 0])
    cube([1, 1, 1.29]);
  translate([235, 88, 0])
    cube([1, 1, 1.29]);
  translate([236, 88, 0])
    cube([1, 1, 1.29]);
  translate([237, 88, 0])
    cube([1, 1, 1.29]);
  translate([238, 88, 0])
    cube([1, 1, 1.29]);
  translate([239, 88, 0])
    cube([1, 1, 1.29]);
  translate([240, 88, 0])
    cube([1, 1, 1.29]);
  translate([241, 88, 0])
    cube([1, 1, 1.29]);
  translate([242, 88, 0])
    cube([1, 1, 1.29]);
  translate([243, 88, 0])
    cube([1, 1, 1.29]);
  translate([244, 88, 0])
    cube([1, 1, 1.29]);
  translate([245, 88, 0])
    cube([1, 1, 1.29]);
  translate([246, 88, 0])
    cube([1, 1, 1.29]);
  translate([0, 89, 0])
    cube([1, 1, 1.45]);
  translate([1, 89, 0])
    cube([1, 1, 1.45]);
  translate([2, 89, 0])
    cube([1, 1, 1.45]);
  translate([3, 89, 0])
    cube([1, 1, 1.45]);
  translate([4, 89, 0])
    cube([1, 1, 1.45]);
  translate([5, 89, 0])
    cube([1, 1, 1.45]);
  translate([6, 89, 0])
    cube([1, 1, 1.45]);
  translate([7, 89, 0])
    cube([1, 1, 1.45]);
  translate([8, 89, 0])
    cube([1, 1, 1.45]);
  translate([9, 89, 0])
    cube([1, 1, 1.45]);
  translate([10, 89, 0])
    cube([1, 1, 1.41]);
  translate([11, 89, 0])
    cube([1, 1, 1.45]);
  translate([12, 89, 0])
    cube([1, 1, 1.45]);
  translate([13, 89, 0])
    cube([1, 1, 1.45]);
  translate([14, 89, 0])
    cube([1, 1, 1.41]);
  translate([15, 89, 0])
    cube([1, 1, 1.45]);
  translate([16, 89, 0])
    cube([1, 1, 1.45]);
  translate([17, 89, 0])
    cube([1, 1, 1.45]);
  translate([18, 89, 0])
    cube([1, 1, 1.45]);
  translate([19, 89, 0])
    cube([1, 1, 1.45]);
  translate([20, 89, 0])
    cube([1, 1, 1.45]);
  translate([21, 89, 0])
    cube([1, 1, 1.45]);
  translate([22, 89, 0])
    cube([1, 1, 1.45]);
  translate([23, 89, 0])
    cube([1, 1, 1.41]);
  translate([24, 89, 0])
    cube([1, 1, 1.41]);
  translate([25, 89, 0])
    cube([1, 1, 1.41]);
  translate([26, 89, 0])
    cube([1, 1, 1.45]);
  translate([27, 89, 0])
    cube([1, 1, 1.06]);
  translate([28, 89, 0])
    cube([1, 1, 2.51]);
  translate([29, 89, 0])
    cube([1, 1, 1.18]);
  translate([30, 89, 0])
    cube([1, 1, 1.41]);
  translate([31, 89, 0])
    cube([1, 1, 2.12]);
  translate([32, 89, 0])
    cube([1, 1, 5.61]);
  translate([33, 89, 0])
    cube([1, 1, 4.20]);
  translate([34, 89, 0])
    cube([1, 1, 3.69]);
  translate([35, 89, 0])
    cube([1, 1, 2.51]);
  translate([36, 89, 0])
    cube([1, 1, 1.10]);
  translate([37, 89, 0])
    cube([1, 1, 1.06]);
  translate([38, 89, 0])
    cube([1, 1, 1.06]);
  translate([39, 89, 0])
    cube([1, 1, 1.18]);
  translate([40, 89, 0])
    cube([1, 1, 1.57]);
  translate([41, 89, 0])
    cube([1, 1, 1.65]);
  translate([42, 89, 0])
    cube([1, 1, 1.41]);
  translate([43, 89, 0])
    cube([1, 1, 1.37]);
  translate([44, 89, 0])
    cube([1, 1, 1.49]);
  translate([45, 89, 0])
    cube([1, 1, 1.76]);
  translate([46, 89, 0])
    cube([1, 1, 1.84]);
  translate([47, 89, 0])
    cube([1, 1, 1.96]);
  translate([48, 89, 0])
    cube([1, 1, 4.20]);
  translate([49, 89, 0])
    cube([1, 1, 4.08]);
  translate([50, 89, 0])
    cube([1, 1, 0.43]);
  translate([51, 89, 0])
    cube([1, 1, 1.49]);
  translate([52, 89, 0])
    cube([1, 1, 1.57]);
  translate([53, 89, 0])
    cube([1, 1, 1.02]);
  translate([54, 89, 0])
    cube([1, 1, 1.61]);
  translate([55, 89, 0])
    cube([1, 1, 1.61]);
  translate([56, 89, 0])
    cube([1, 1, 1.57]);
  translate([57, 89, 0])
    cube([1, 1, 1.29]);
  translate([58, 89, 0])
    cube([1, 1, 0.90]);
  translate([59, 89, 0])
    cube([1, 1, 5.57]);
  translate([60, 89, 0])
    cube([1, 1, 4.86]);
  translate([61, 89, 0])
    cube([1, 1, 4.47]);
  translate([62, 89, 0])
    cube([1, 1, 4.35]);
  translate([63, 89, 0])
    cube([1, 1, 4.51]);
  translate([64, 89, 0])
    cube([1, 1, 4.86]);
  translate([65, 89, 0])
    cube([1, 1, 5.02]);
  translate([66, 89, 0])
    cube([1, 1, 5.25]);
  translate([67, 89, 0])
    cube([1, 1, 5.29]);
  translate([68, 89, 0])
    cube([1, 1, 5.02]);
  translate([69, 89, 0])
    cube([1, 1, 4.31]);
  translate([70, 89, 0])
    cube([1, 1, 3.10]);
  translate([71, 89, 0])
    cube([1, 1, 1.41]);
  translate([72, 89, 0])
    cube([1, 1, 0.82]);
  translate([73, 89, 0])
    cube([1, 1, 0.47]);
  translate([74, 89, 0])
    cube([1, 1, 2.20]);
  translate([75, 89, 0])
    cube([1, 1, 2.47]);
  translate([76, 89, 0])
    cube([1, 1, 1.80]);
  translate([77, 89, 0])
    cube([1, 1, 1.41]);
  translate([78, 89, 0])
    cube([1, 1, 2.04]);
  translate([79, 89, 0])
    cube([1, 1, 1.96]);
  translate([80, 89, 0])
    cube([1, 1, 2.00]);
  translate([81, 89, 0])
    cube([1, 1, 1.22]);
  translate([82, 89, 0])
    cube([1, 1, 1.92]);
  translate([83, 89, 0])
    cube([1, 1, 1.80]);
  translate([84, 89, 0])
    cube([1, 1, 3.25]);
  translate([85, 89, 0])
    cube([1, 1, 3.29]);
  translate([86, 89, 0])
    cube([1, 1, 1.02]);
  translate([87, 89, 0])
    cube([1, 1, 0.98]);
  translate([88, 89, 0])
    cube([1, 1, 1.61]);
  translate([89, 89, 0])
    cube([1, 1, 5.57]);
  translate([90, 89, 0])
    cube([1, 1, 5.06]);
  translate([91, 89, 0])
    cube([1, 1, 5.37]);
  translate([92, 89, 0])
    cube([1, 1, 5.29]);
  translate([93, 89, 0])
    cube([1, 1, 5.25]);
  translate([94, 89, 0])
    cube([1, 1, 5.22]);
  translate([95, 89, 0])
    cube([1, 1, 5.18]);
  translate([96, 89, 0])
    cube([1, 1, 5.29]);
  translate([97, 89, 0])
    cube([1, 1, 5.53]);
  translate([98, 89, 0])
    cube([1, 1, 5.33]);
  translate([99, 89, 0])
    cube([1, 1, 5.73]);
  translate([100, 89, 0])
    cube([1, 1, 5.80]);
  translate([101, 89, 0])
    cube([1, 1, 5.37]);
  translate([102, 89, 0])
    cube([1, 1, 1.73]);
  translate([103, 89, 0])
    cube([1, 1, 2.51]);
  translate([104, 89, 0])
    cube([1, 1, 2.31]);
  translate([105, 89, 0])
    cube([1, 1, 5.57]);
  translate([106, 89, 0])
    cube([1, 1, 5.53]);
  translate([107, 89, 0])
    cube([1, 1, 5.53]);
  translate([108, 89, 0])
    cube([1, 1, 2.47]);
  translate([109, 89, 0])
    cube([1, 1, 6.67]);
  translate([110, 89, 0])
    cube([1, 1, 6.43]);
  translate([111, 89, 0])
    cube([1, 1, 6.55]);
  translate([112, 89, 0])
    cube([1, 1, 6.35]);
  translate([113, 89, 0])
    cube([1, 1, 5.41]);
  translate([114, 89, 0])
    cube([1, 1, 2.08]);
  translate([115, 89, 0])
    cube([1, 1, 1.45]);
  translate([116, 89, 0])
    cube([1, 1, 1.53]);
  translate([117, 89, 0])
    cube([1, 1, 1.18]);
  translate([118, 89, 0])
    cube([1, 1, 1.80]);
  translate([119, 89, 0])
    cube([1, 1, 1.84]);
  translate([120, 89, 0])
    cube([1, 1, 2.16]);
  translate([121, 89, 0])
    cube([1, 1, 1.76]);
  translate([122, 89, 0])
    cube([1, 1, 1.88]);
  translate([123, 89, 0])
    cube([1, 1, 2.43]);
  translate([124, 89, 0])
    cube([1, 1, 7.33]);
  translate([125, 89, 0])
    cube([1, 1, 1.25]);
  translate([126, 89, 0])
    cube([1, 1, 1.25]);
  translate([127, 89, 0])
    cube([1, 1, 1.25]);
  translate([128, 89, 0])
    cube([1, 1, 1.25]);
  translate([129, 89, 0])
    cube([1, 1, 1.25]);
  translate([130, 89, 0])
    cube([1, 1, 1.25]);
  translate([131, 89, 0])
    cube([1, 1, 1.25]);
  translate([132, 89, 0])
    cube([1, 1, 1.22]);
  translate([133, 89, 0])
    cube([1, 1, 1.25]);
  translate([134, 89, 0])
    cube([1, 1, 1.29]);
  translate([135, 89, 0])
    cube([1, 1, 1.25]);
  translate([136, 89, 0])
    cube([1, 1, 1.25]);
  translate([137, 89, 0])
    cube([1, 1, 1.29]);
  translate([138, 89, 0])
    cube([1, 1, 1.29]);
  translate([139, 89, 0])
    cube([1, 1, 1.22]);
  translate([140, 89, 0])
    cube([1, 1, 1.29]);
  translate([141, 89, 0])
    cube([1, 1, 1.29]);
  translate([142, 89, 0])
    cube([1, 1, 1.29]);
  translate([143, 89, 0])
    cube([1, 1, 1.29]);
  translate([144, 89, 0])
    cube([1, 1, 1.29]);
  translate([145, 89, 0])
    cube([1, 1, 1.29]);
  translate([146, 89, 0])
    cube([1, 1, 1.29]);
  translate([147, 89, 0])
    cube([1, 1, 1.29]);
  translate([148, 89, 0])
    cube([1, 1, 1.29]);
  translate([149, 89, 0])
    cube([1, 1, 1.29]);
  translate([150, 89, 0])
    cube([1, 1, 1.29]);
  translate([151, 89, 0])
    cube([1, 1, 1.29]);
  translate([152, 89, 0])
    cube([1, 1, 1.29]);
  translate([153, 89, 0])
    cube([1, 1, 1.29]);
  translate([154, 89, 0])
    cube([1, 1, 1.29]);
  translate([155, 89, 0])
    cube([1, 1, 1.29]);
  translate([156, 89, 0])
    cube([1, 1, 1.37]);
  translate([157, 89, 0])
    cube([1, 1, 1.33]);
  translate([158, 89, 0])
    cube([1, 1, 1.29]);
  translate([159, 89, 0])
    cube([1, 1, 1.29]);
  translate([160, 89, 0])
    cube([1, 1, 1.29]);
  translate([161, 89, 0])
    cube([1, 1, 1.29]);
  translate([162, 89, 0])
    cube([1, 1, 1.33]);
  translate([163, 89, 0])
    cube([1, 1, 1.33]);
  translate([164, 89, 0])
    cube([1, 1, 1.25]);
  translate([165, 89, 0])
    cube([1, 1, 1.29]);
  translate([166, 89, 0])
    cube([1, 1, 1.33]);
  translate([167, 89, 0])
    cube([1, 1, 1.29]);
  translate([168, 89, 0])
    cube([1, 1, 1.33]);
  translate([169, 89, 0])
    cube([1, 1, 1.33]);
  translate([170, 89, 0])
    cube([1, 1, 1.33]);
  translate([171, 89, 0])
    cube([1, 1, 1.33]);
  translate([172, 89, 0])
    cube([1, 1, 1.29]);
  translate([173, 89, 0])
    cube([1, 1, 1.33]);
  translate([174, 89, 0])
    cube([1, 1, 1.33]);
  translate([175, 89, 0])
    cube([1, 1, 1.33]);
  translate([176, 89, 0])
    cube([1, 1, 1.33]);
  translate([177, 89, 0])
    cube([1, 1, 1.29]);
  translate([178, 89, 0])
    cube([1, 1, 1.33]);
  translate([179, 89, 0])
    cube([1, 1, 1.33]);
  translate([180, 89, 0])
    cube([1, 1, 1.25]);
  translate([181, 89, 0])
    cube([1, 1, 1.25]);
  translate([182, 89, 0])
    cube([1, 1, 1.33]);
  translate([183, 89, 0])
    cube([1, 1, 1.33]);
  translate([184, 89, 0])
    cube([1, 1, 1.33]);
  translate([185, 89, 0])
    cube([1, 1, 1.33]);
  translate([186, 89, 0])
    cube([1, 1, 1.33]);
  translate([187, 89, 0])
    cube([1, 1, 1.33]);
  translate([188, 89, 0])
    cube([1, 1, 1.33]);
  translate([189, 89, 0])
    cube([1, 1, 1.33]);
  translate([190, 89, 0])
    cube([1, 1, 1.33]);
  translate([191, 89, 0])
    cube([1, 1, 1.33]);
  translate([192, 89, 0])
    cube([1, 1, 1.33]);
  translate([193, 89, 0])
    cube([1, 1, 1.33]);
  translate([194, 89, 0])
    cube([1, 1, 1.37]);
  translate([195, 89, 0])
    cube([1, 1, 1.33]);
  translate([196, 89, 0])
    cube([1, 1, 1.33]);
  translate([197, 89, 0])
    cube([1, 1, 1.33]);
  translate([198, 89, 0])
    cube([1, 1, 1.33]);
  translate([199, 89, 0])
    cube([1, 1, 1.33]);
  translate([200, 89, 0])
    cube([1, 1, 1.33]);
  translate([201, 89, 0])
    cube([1, 1, 1.25]);
  translate([202, 89, 0])
    cube([1, 1, 1.25]);
  translate([203, 89, 0])
    cube([1, 1, 1.33]);
  translate([204, 89, 0])
    cube([1, 1, 1.33]);
  translate([205, 89, 0])
    cube([1, 1, 1.33]);
  translate([206, 89, 0])
    cube([1, 1, 1.33]);
  translate([207, 89, 0])
    cube([1, 1, 1.29]);
  translate([208, 89, 0])
    cube([1, 1, 1.33]);
  translate([209, 89, 0])
    cube([1, 1, 1.29]);
  translate([210, 89, 0])
    cube([1, 1, 1.29]);
  translate([211, 89, 0])
    cube([1, 1, 1.29]);
  translate([212, 89, 0])
    cube([1, 1, 1.29]);
  translate([213, 89, 0])
    cube([1, 1, 1.33]);
  translate([214, 89, 0])
    cube([1, 1, 1.29]);
  translate([215, 89, 0])
    cube([1, 1, 1.29]);
  translate([216, 89, 0])
    cube([1, 1, 1.33]);
  translate([217, 89, 0])
    cube([1, 1, 1.29]);
  translate([218, 89, 0])
    cube([1, 1, 1.33]);
  translate([219, 89, 0])
    cube([1, 1, 1.29]);
  translate([220, 89, 0])
    cube([1, 1, 1.33]);
  translate([221, 89, 0])
    cube([1, 1, 1.33]);
  translate([222, 89, 0])
    cube([1, 1, 1.25]);
  translate([223, 89, 0])
    cube([1, 1, 1.29]);
  translate([224, 89, 0])
    cube([1, 1, 1.33]);
  translate([225, 89, 0])
    cube([1, 1, 1.25]);
  translate([226, 89, 0])
    cube([1, 1, 1.25]);
  translate([227, 89, 0])
    cube([1, 1, 1.33]);
  translate([228, 89, 0])
    cube([1, 1, 1.29]);
  translate([229, 89, 0])
    cube([1, 1, 1.29]);
  translate([230, 89, 0])
    cube([1, 1, 1.29]);
  translate([231, 89, 0])
    cube([1, 1, 1.29]);
  translate([232, 89, 0])
    cube([1, 1, 1.29]);
  translate([233, 89, 0])
    cube([1, 1, 1.29]);
  translate([234, 89, 0])
    cube([1, 1, 1.29]);
  translate([235, 89, 0])
    cube([1, 1, 1.29]);
  translate([236, 89, 0])
    cube([1, 1, 1.29]);
  translate([237, 89, 0])
    cube([1, 1, 1.29]);
  translate([238, 89, 0])
    cube([1, 1, 1.29]);
  translate([239, 89, 0])
    cube([1, 1, 1.29]);
  translate([240, 89, 0])
    cube([1, 1, 1.29]);
  translate([241, 89, 0])
    cube([1, 1, 1.29]);
  translate([242, 89, 0])
    cube([1, 1, 1.29]);
  translate([243, 89, 0])
    cube([1, 1, 1.29]);
  translate([244, 89, 0])
    cube([1, 1, 1.29]);
  translate([245, 89, 0])
    cube([1, 1, 1.29]);
  translate([246, 89, 0])
    cube([1, 1, 1.29]);
  translate([0, 90, 0])
    cube([1, 1, 1.45]);
  translate([1, 90, 0])
    cube([1, 1, 1.45]);
  translate([2, 90, 0])
    cube([1, 1, 1.45]);
  translate([3, 90, 0])
    cube([1, 1, 1.45]);
  translate([4, 90, 0])
    cube([1, 1, 1.45]);
  translate([5, 90, 0])
    cube([1, 1, 1.45]);
  translate([6, 90, 0])
    cube([1, 1, 1.45]);
  translate([7, 90, 0])
    cube([1, 1, 1.45]);
  translate([8, 90, 0])
    cube([1, 1, 1.45]);
  translate([9, 90, 0])
    cube([1, 1, 1.45]);
  translate([10, 90, 0])
    cube([1, 1, 1.45]);
  translate([11, 90, 0])
    cube([1, 1, 1.45]);
  translate([12, 90, 0])
    cube([1, 1, 1.45]);
  translate([13, 90, 0])
    cube([1, 1, 1.45]);
  translate([14, 90, 0])
    cube([1, 1, 1.45]);
  translate([15, 90, 0])
    cube([1, 1, 1.45]);
  translate([16, 90, 0])
    cube([1, 1, 1.41]);
  translate([17, 90, 0])
    cube([1, 1, 1.41]);
  translate([18, 90, 0])
    cube([1, 1, 1.45]);
  translate([19, 90, 0])
    cube([1, 1, 1.45]);
  translate([20, 90, 0])
    cube([1, 1, 1.45]);
  translate([21, 90, 0])
    cube([1, 1, 1.45]);
  translate([22, 90, 0])
    cube([1, 1, 1.45]);
  translate([23, 90, 0])
    cube([1, 1, 1.41]);
  translate([24, 90, 0])
    cube([1, 1, 1.45]);
  translate([25, 90, 0])
    cube([1, 1, 1.41]);
  translate([26, 90, 0])
    cube([1, 1, 1.41]);
  translate([27, 90, 0])
    cube([1, 1, 1.41]);
  translate([28, 90, 0])
    cube([1, 1, 1.45]);
  translate([29, 90, 0])
    cube([1, 1, 1.45]);
  translate([30, 90, 0])
    cube([1, 1, 1.10]);
  translate([31, 90, 0])
    cube([1, 1, 1.49]);
  translate([32, 90, 0])
    cube([1, 1, 4.08]);
  translate([33, 90, 0])
    cube([1, 1, 4.16]);
  translate([34, 90, 0])
    cube([1, 1, 4.55]);
  translate([35, 90, 0])
    cube([1, 1, 3.18]);
  translate([36, 90, 0])
    cube([1, 1, 1.18]);
  translate([37, 90, 0])
    cube([1, 1, 0.90]);
  translate([38, 90, 0])
    cube([1, 1, 0.94]);
  translate([39, 90, 0])
    cube([1, 1, 1.06]);
  translate([40, 90, 0])
    cube([1, 1, 1.33]);
  translate([41, 90, 0])
    cube([1, 1, 1.41]);
  translate([42, 90, 0])
    cube([1, 1, 1.33]);
  translate([43, 90, 0])
    cube([1, 1, 1.33]);
  translate([44, 90, 0])
    cube([1, 1, 1.57]);
  translate([45, 90, 0])
    cube([1, 1, 1.76]);
  translate([46, 90, 0])
    cube([1, 1, 2.12]);
  translate([47, 90, 0])
    cube([1, 1, 2.00]);
  translate([48, 90, 0])
    cube([1, 1, 3.14]);
  translate([49, 90, 0])
    cube([1, 1, 4.63]);
  translate([50, 90, 0])
    cube([1, 1, 0.31]);
  translate([51, 90, 0])
    cube([1, 1, 1.33]);
  translate([52, 90, 0])
    cube([1, 1, 0.71]);
  translate([53, 90, 0])
    cube([1, 1, 1.57]);
  translate([54, 90, 0])
    cube([1, 1, 1.49]);
  translate([55, 90, 0])
    cube([1, 1, 1.49]);
  translate([56, 90, 0])
    cube([1, 1, 1.33]);
  translate([57, 90, 0])
    cube([1, 1, 1.53]);
  translate([58, 90, 0])
    cube([1, 1, 6.63]);
  translate([59, 90, 0])
    cube([1, 1, 5.06]);
  translate([60, 90, 0])
    cube([1, 1, 4.59]);
  translate([61, 90, 0])
    cube([1, 1, 4.39]);
  translate([62, 90, 0])
    cube([1, 1, 4.55]);
  translate([63, 90, 0])
    cube([1, 1, 4.82]);
  translate([64, 90, 0])
    cube([1, 1, 5.14]);
  translate([65, 90, 0])
    cube([1, 1, 5.22]);
  translate([66, 90, 0])
    cube([1, 1, 5.37]);
  translate([67, 90, 0])
    cube([1, 1, 5.45]);
  translate([68, 90, 0])
    cube([1, 1, 5.29]);
  translate([69, 90, 0])
    cube([1, 1, 5.06]);
  translate([70, 90, 0])
    cube([1, 1, 3.80]);
  translate([71, 90, 0])
    cube([1, 1, 2.24]);
  translate([72, 90, 0])
    cube([1, 1, 0.90]);
  translate([73, 90, 0])
    cube([1, 1, 0.59]);
  translate([74, 90, 0])
    cube([1, 1, 2.12]);
  translate([75, 90, 0])
    cube([1, 1, 1.14]);
  translate([76, 90, 0])
    cube([1, 1, 1.33]);
  translate([77, 90, 0])
    cube([1, 1, 1.41]);
  translate([78, 90, 0])
    cube([1, 1, 1.25]);
  translate([79, 90, 0])
    cube([1, 1, 2.16]);
  translate([80, 90, 0])
    cube([1, 1, 1.02]);
  translate([81, 90, 0])
    cube([1, 1, 2.24]);
  translate([82, 90, 0])
    cube([1, 1, 2.20]);
  translate([83, 90, 0])
    cube([1, 1, 2.75]);
  translate([84, 90, 0])
    cube([1, 1, 3.06]);
  translate([85, 90, 0])
    cube([1, 1, 1.37]);
  translate([86, 90, 0])
    cube([1, 1, 1.14]);
  translate([87, 90, 0])
    cube([1, 1, 0.55]);
  translate([88, 90, 0])
    cube([1, 1, 1.49]);
  translate([89, 90, 0])
    cube([1, 1, 1.10]);
  translate([90, 90, 0])
    cube([1, 1, 5.14]);
  translate([91, 90, 0])
    cube([1, 1, 4.94]);
  translate([92, 90, 0])
    cube([1, 1, 5.10]);
  translate([93, 90, 0])
    cube([1, 1, 5.10]);
  translate([94, 90, 0])
    cube([1, 1, 5.06]);
  translate([95, 90, 0])
    cube([1, 1, 5.14]);
  translate([96, 90, 0])
    cube([1, 1, 5.18]);
  translate([97, 90, 0])
    cube([1, 1, 5.22]);
  translate([98, 90, 0])
    cube([1, 1, 5.33]);
  translate([99, 90, 0])
    cube([1, 1, 5.45]);
  translate([100, 90, 0])
    cube([1, 1, 5.53]);
  translate([101, 90, 0])
    cube([1, 1, 5.76]);
  translate([102, 90, 0])
    cube([1, 1, 5.92]);
  translate([103, 90, 0])
    cube([1, 1, 1.29]);
  translate([104, 90, 0])
    cube([1, 1, 2.59]);
  translate([105, 90, 0])
    cube([1, 1, 5.92]);
  translate([106, 90, 0])
    cube([1, 1, 5.49]);
  translate([107, 90, 0])
    cube([1, 1, 2.08]);
  translate([108, 90, 0])
    cube([1, 1, 6.82]);
  translate([109, 90, 0])
    cube([1, 1, 5.88]);
  translate([110, 90, 0])
    cube([1, 1, 6.16]);
  translate([111, 90, 0])
    cube([1, 1, 6.27]);
  translate([112, 90, 0])
    cube([1, 1, 6.27]);
  translate([113, 90, 0])
    cube([1, 1, 6.20]);
  translate([114, 90, 0])
    cube([1, 1, 5.69]);
  translate([115, 90, 0])
    cube([1, 1, 3.76]);
  translate([116, 90, 0])
    cube([1, 1, 1.45]);
  translate([117, 90, 0])
    cube([1, 1, 2.04]);
  translate([118, 90, 0])
    cube([1, 1, 1.73]);
  translate([119, 90, 0])
    cube([1, 1, 0.75]);
  translate([120, 90, 0])
    cube([1, 1, 1.92]);
  translate([121, 90, 0])
    cube([1, 1, 3.41]);
  translate([122, 90, 0])
    cube([1, 1, 1.92]);
  translate([123, 90, 0])
    cube([1, 1, 3.25]);
  translate([124, 90, 0])
    cube([1, 1, 4.20]);
  translate([125, 90, 0])
    cube([1, 1, 1.25]);
  translate([126, 90, 0])
    cube([1, 1, 1.37]);
  translate([127, 90, 0])
    cube([1, 1, 1.29]);
  translate([128, 90, 0])
    cube([1, 1, 1.25]);
  translate([129, 90, 0])
    cube([1, 1, 1.25]);
  translate([130, 90, 0])
    cube([1, 1, 1.25]);
  translate([131, 90, 0])
    cube([1, 1, 1.25]);
  translate([132, 90, 0])
    cube([1, 1, 1.22]);
  translate([133, 90, 0])
    cube([1, 1, 1.29]);
  translate([134, 90, 0])
    cube([1, 1, 1.22]);
  translate([135, 90, 0])
    cube([1, 1, 1.25]);
  translate([136, 90, 0])
    cube([1, 1, 1.22]);
  translate([137, 90, 0])
    cube([1, 1, 1.25]);
  translate([138, 90, 0])
    cube([1, 1, 1.25]);
  translate([139, 90, 0])
    cube([1, 1, 1.29]);
  translate([140, 90, 0])
    cube([1, 1, 1.29]);
  translate([141, 90, 0])
    cube([1, 1, 1.29]);
  translate([142, 90, 0])
    cube([1, 1, 1.29]);
  translate([143, 90, 0])
    cube([1, 1, 1.29]);
  translate([144, 90, 0])
    cube([1, 1, 1.29]);
  translate([145, 90, 0])
    cube([1, 1, 1.25]);
  translate([146, 90, 0])
    cube([1, 1, 1.25]);
  translate([147, 90, 0])
    cube([1, 1, 1.29]);
  translate([148, 90, 0])
    cube([1, 1, 1.29]);
  translate([149, 90, 0])
    cube([1, 1, 1.29]);
  translate([150, 90, 0])
    cube([1, 1, 1.33]);
  translate([151, 90, 0])
    cube([1, 1, 1.33]);
  translate([152, 90, 0])
    cube([1, 1, 1.29]);
  translate([153, 90, 0])
    cube([1, 1, 1.29]);
  translate([154, 90, 0])
    cube([1, 1, 1.29]);
  translate([155, 90, 0])
    cube([1, 1, 1.29]);
  translate([156, 90, 0])
    cube([1, 1, 1.33]);
  translate([157, 90, 0])
    cube([1, 1, 1.33]);
  translate([158, 90, 0])
    cube([1, 1, 1.33]);
  translate([159, 90, 0])
    cube([1, 1, 1.33]);
  translate([160, 90, 0])
    cube([1, 1, 1.29]);
  translate([161, 90, 0])
    cube([1, 1, 1.33]);
  translate([162, 90, 0])
    cube([1, 1, 1.29]);
  translate([163, 90, 0])
    cube([1, 1, 1.33]);
  translate([164, 90, 0])
    cube([1, 1, 1.33]);
  translate([165, 90, 0])
    cube([1, 1, 1.33]);
  translate([166, 90, 0])
    cube([1, 1, 1.29]);
  translate([167, 90, 0])
    cube([1, 1, 1.33]);
  translate([168, 90, 0])
    cube([1, 1, 1.33]);
  translate([169, 90, 0])
    cube([1, 1, 1.33]);
  translate([170, 90, 0])
    cube([1, 1, 1.33]);
  translate([171, 90, 0])
    cube([1, 1, 1.25]);
  translate([172, 90, 0])
    cube([1, 1, 1.33]);
  translate([173, 90, 0])
    cube([1, 1, 1.33]);
  translate([174, 90, 0])
    cube([1, 1, 1.29]);
  translate([175, 90, 0])
    cube([1, 1, 1.33]);
  translate([176, 90, 0])
    cube([1, 1, 1.33]);
  translate([177, 90, 0])
    cube([1, 1, 1.33]);
  translate([178, 90, 0])
    cube([1, 1, 1.33]);
  translate([179, 90, 0])
    cube([1, 1, 1.29]);
  translate([180, 90, 0])
    cube([1, 1, 1.33]);
  translate([181, 90, 0])
    cube([1, 1, 1.33]);
  translate([182, 90, 0])
    cube([1, 1, 1.29]);
  translate([183, 90, 0])
    cube([1, 1, 1.33]);
  translate([184, 90, 0])
    cube([1, 1, 1.33]);
  translate([185, 90, 0])
    cube([1, 1, 1.33]);
  translate([186, 90, 0])
    cube([1, 1, 1.33]);
  translate([187, 90, 0])
    cube([1, 1, 1.29]);
  translate([188, 90, 0])
    cube([1, 1, 1.33]);
  translate([189, 90, 0])
    cube([1, 1, 1.33]);
  translate([190, 90, 0])
    cube([1, 1, 1.33]);
  translate([191, 90, 0])
    cube([1, 1, 1.33]);
  translate([192, 90, 0])
    cube([1, 1, 1.33]);
  translate([193, 90, 0])
    cube([1, 1, 1.33]);
  translate([194, 90, 0])
    cube([1, 1, 1.33]);
  translate([195, 90, 0])
    cube([1, 1, 1.29]);
  translate([196, 90, 0])
    cube([1, 1, 1.29]);
  translate([197, 90, 0])
    cube([1, 1, 1.33]);
  translate([198, 90, 0])
    cube([1, 1, 1.25]);
  translate([199, 90, 0])
    cube([1, 1, 1.25]);
  translate([200, 90, 0])
    cube([1, 1, 1.25]);
  translate([201, 90, 0])
    cube([1, 1, 1.33]);
  translate([202, 90, 0])
    cube([1, 1, 1.33]);
  translate([203, 90, 0])
    cube([1, 1, 1.33]);
  translate([204, 90, 0])
    cube([1, 1, 1.33]);
  translate([205, 90, 0])
    cube([1, 1, 1.33]);
  translate([206, 90, 0])
    cube([1, 1, 1.33]);
  translate([207, 90, 0])
    cube([1, 1, 1.33]);
  translate([208, 90, 0])
    cube([1, 1, 1.33]);
  translate([209, 90, 0])
    cube([1, 1, 1.33]);
  translate([210, 90, 0])
    cube([1, 1, 1.33]);
  translate([211, 90, 0])
    cube([1, 1, 1.33]);
  translate([212, 90, 0])
    cube([1, 1, 1.33]);
  translate([213, 90, 0])
    cube([1, 1, 1.33]);
  translate([214, 90, 0])
    cube([1, 1, 1.29]);
  translate([215, 90, 0])
    cube([1, 1, 1.33]);
  translate([216, 90, 0])
    cube([1, 1, 1.33]);
  translate([217, 90, 0])
    cube([1, 1, 1.29]);
  translate([218, 90, 0])
    cube([1, 1, 1.29]);
  translate([219, 90, 0])
    cube([1, 1, 1.29]);
  translate([220, 90, 0])
    cube([1, 1, 1.29]);
  translate([221, 90, 0])
    cube([1, 1, 1.33]);
  translate([222, 90, 0])
    cube([1, 1, 1.29]);
  translate([223, 90, 0])
    cube([1, 1, 1.29]);
  translate([224, 90, 0])
    cube([1, 1, 1.29]);
  translate([225, 90, 0])
    cube([1, 1, 1.33]);
  translate([226, 90, 0])
    cube([1, 1, 1.33]);
  translate([227, 90, 0])
    cube([1, 1, 1.29]);
  translate([228, 90, 0])
    cube([1, 1, 1.33]);
  translate([229, 90, 0])
    cube([1, 1, 1.33]);
  translate([230, 90, 0])
    cube([1, 1, 1.29]);
  translate([231, 90, 0])
    cube([1, 1, 1.33]);
  translate([232, 90, 0])
    cube([1, 1, 1.29]);
  translate([233, 90, 0])
    cube([1, 1, 1.29]);
  translate([234, 90, 0])
    cube([1, 1, 1.29]);
  translate([235, 90, 0])
    cube([1, 1, 1.29]);
  translate([236, 90, 0])
    cube([1, 1, 1.29]);
  translate([237, 90, 0])
    cube([1, 1, 1.29]);
  translate([238, 90, 0])
    cube([1, 1, 1.29]);
  translate([239, 90, 0])
    cube([1, 1, 1.29]);
  translate([240, 90, 0])
    cube([1, 1, 1.29]);
  translate([241, 90, 0])
    cube([1, 1, 1.29]);
  translate([242, 90, 0])
    cube([1, 1, 1.29]);
  translate([243, 90, 0])
    cube([1, 1, 1.29]);
  translate([244, 90, 0])
    cube([1, 1, 1.29]);
  translate([245, 90, 0])
    cube([1, 1, 1.29]);
  translate([246, 90, 0])
    cube([1, 1, 1.29]);
  translate([0, 91, 0])
    cube([1, 1, 1.45]);
  translate([1, 91, 0])
    cube([1, 1, 1.45]);
  translate([2, 91, 0])
    cube([1, 1, 1.45]);
  translate([3, 91, 0])
    cube([1, 1, 1.45]);
  translate([4, 91, 0])
    cube([1, 1, 1.45]);
  translate([5, 91, 0])
    cube([1, 1, 1.45]);
  translate([6, 91, 0])
    cube([1, 1, 1.45]);
  translate([7, 91, 0])
    cube([1, 1, 1.45]);
  translate([8, 91, 0])
    cube([1, 1, 1.45]);
  translate([9, 91, 0])
    cube([1, 1, 1.45]);
  translate([10, 91, 0])
    cube([1, 1, 1.45]);
  translate([11, 91, 0])
    cube([1, 1, 1.45]);
  translate([12, 91, 0])
    cube([1, 1, 1.45]);
  translate([13, 91, 0])
    cube([1, 1, 1.45]);
  translate([14, 91, 0])
    cube([1, 1, 1.45]);
  translate([15, 91, 0])
    cube([1, 1, 1.45]);
  translate([16, 91, 0])
    cube([1, 1, 1.41]);
  translate([17, 91, 0])
    cube([1, 1, 1.41]);
  translate([18, 91, 0])
    cube([1, 1, 1.45]);
  translate([19, 91, 0])
    cube([1, 1, 1.45]);
  translate([20, 91, 0])
    cube([1, 1, 1.45]);
  translate([21, 91, 0])
    cube([1, 1, 1.45]);
  translate([22, 91, 0])
    cube([1, 1, 1.45]);
  translate([23, 91, 0])
    cube([1, 1, 1.41]);
  translate([24, 91, 0])
    cube([1, 1, 1.45]);
  translate([25, 91, 0])
    cube([1, 1, 1.41]);
  translate([26, 91, 0])
    cube([1, 1, 1.41]);
  translate([27, 91, 0])
    cube([1, 1, 1.41]);
  translate([28, 91, 0])
    cube([1, 1, 1.41]);
  translate([29, 91, 0])
    cube([1, 1, 1.41]);
  translate([30, 91, 0])
    cube([1, 1, 1.37]);
  translate([31, 91, 0])
    cube([1, 1, 1.37]);
  translate([32, 91, 0])
    cube([1, 1, 4.04]);
  translate([33, 91, 0])
    cube([1, 1, 0.86]);
  translate([34, 91, 0])
    cube([1, 1, 3.14]);
  translate([35, 91, 0])
    cube([1, 1, 2.71]);
  translate([36, 91, 0])
    cube([1, 1, 1.37]);
  translate([37, 91, 0])
    cube([1, 1, 0.86]);
  translate([38, 91, 0])
    cube([1, 1, 0.94]);
  translate([39, 91, 0])
    cube([1, 1, 0.94]);
  translate([40, 91, 0])
    cube([1, 1, 1.02]);
  translate([41, 91, 0])
    cube([1, 1, 1.02]);
  translate([42, 91, 0])
    cube([1, 1, 1.29]);
  translate([43, 91, 0])
    cube([1, 1, 1.25]);
  translate([44, 91, 0])
    cube([1, 1, 1.45]);
  translate([45, 91, 0])
    cube([1, 1, 1.53]);
  translate([46, 91, 0])
    cube([1, 1, 1.96]);
  translate([47, 91, 0])
    cube([1, 1, 2.12]);
  translate([48, 91, 0])
    cube([1, 1, 2.43]);
  translate([49, 91, 0])
    cube([1, 1, 3.10]);
  translate([50, 91, 0])
    cube([1, 1, 2.55]);
  translate([51, 91, 0])
    cube([1, 1, 0.82]);
  translate([52, 91, 0])
    cube([1, 1, 1.49]);
  translate([53, 91, 0])
    cube([1, 1, 1.65]);
  translate([54, 91, 0])
    cube([1, 1, 1.14]);
  translate([55, 91, 0])
    cube([1, 1, 1.45]);
  translate([56, 91, 0])
    cube([1, 1, 1.25]);
  translate([57, 91, 0])
    cube([1, 1, 5.06]);
  translate([58, 91, 0])
    cube([1, 1, 6.08]);
  translate([59, 91, 0])
    cube([1, 1, 4.90]);
  translate([60, 91, 0])
    cube([1, 1, 4.51]);
  translate([61, 91, 0])
    cube([1, 1, 4.43]);
  translate([62, 91, 0])
    cube([1, 1, 4.63]);
  translate([63, 91, 0])
    cube([1, 1, 4.94]);
  translate([64, 91, 0])
    cube([1, 1, 5.29]);
  translate([65, 91, 0])
    cube([1, 1, 5.33]);
  translate([66, 91, 0])
    cube([1, 1, 5.45]);
  translate([67, 91, 0])
    cube([1, 1, 5.57]);
  translate([68, 91, 0])
    cube([1, 1, 5.45]);
  translate([69, 91, 0])
    cube([1, 1, 5.37]);
  translate([70, 91, 0])
    cube([1, 1, 4.71]);
  translate([71, 91, 0])
    cube([1, 1, 3.06]);
  translate([72, 91, 0])
    cube([1, 1, 1.18]);
  translate([73, 91, 0])
    cube([1, 1, 0.47]);
  translate([74, 91, 0])
    cube([1, 1, 1.65]);
  translate([75, 91, 0])
    cube([1, 1, 1.22]);
  translate([76, 91, 0])
    cube([1, 1, 1.53]);
  translate([77, 91, 0])
    cube([1, 1, 1.37]);
  translate([78, 91, 0])
    cube([1, 1, 1.53]);
  translate([79, 91, 0])
    cube([1, 1, 1.18]);
  translate([80, 91, 0])
    cube([1, 1, 2.12]);
  translate([81, 91, 0])
    cube([1, 1, 2.67]);
  translate([82, 91, 0])
    cube([1, 1, 2.86]);
  translate([83, 91, 0])
    cube([1, 1, 1.88]);
  translate([84, 91, 0])
    cube([1, 1, 1.53]);
  translate([85, 91, 0])
    cube([1, 1, 2.51]);
  translate([86, 91, 0])
    cube([1, 1, 4.51]);
  translate([87, 91, 0])
    cube([1, 1, 2.08]);
  translate([88, 91, 0])
    cube([1, 1, 1.10]);
  translate([89, 91, 0])
    cube([1, 1, 0.82]);
  translate([90, 91, 0])
    cube([1, 1, 1.22]);
  translate([91, 91, 0])
    cube([1, 1, 4.90]);
  translate([92, 91, 0])
    cube([1, 1, 5.06]);
  translate([93, 91, 0])
    cube([1, 1, 5.06]);
  translate([94, 91, 0])
    cube([1, 1, 5.02]);
  translate([95, 91, 0])
    cube([1, 1, 5.06]);
  translate([96, 91, 0])
    cube([1, 1, 5.18]);
  translate([97, 91, 0])
    cube([1, 1, 5.18]);
  translate([98, 91, 0])
    cube([1, 1, 5.29]);
  translate([99, 91, 0])
    cube([1, 1, 5.37]);
  translate([100, 91, 0])
    cube([1, 1, 5.53]);
  translate([101, 91, 0])
    cube([1, 1, 5.84]);
  translate([102, 91, 0])
    cube([1, 1, 5.92]);
  translate([103, 91, 0])
    cube([1, 1, 5.96]);
  translate([104, 91, 0])
    cube([1, 1, 1.33]);
  translate([105, 91, 0])
    cube([1, 1, 3.92]);
  translate([106, 91, 0])
    cube([1, 1, 5.84]);
  translate([107, 91, 0])
    cube([1, 1, 1.57]);
  translate([108, 91, 0])
    cube([1, 1, 5.37]);
  translate([109, 91, 0])
    cube([1, 1, 5.92]);
  translate([110, 91, 0])
    cube([1, 1, 5.84]);
  translate([111, 91, 0])
    cube([1, 1, 6.12]);
  translate([112, 91, 0])
    cube([1, 1, 6.08]);
  translate([113, 91, 0])
    cube([1, 1, 6.08]);
  translate([114, 91, 0])
    cube([1, 1, 6.00]);
  translate([115, 91, 0])
    cube([1, 1, 5.88]);
  translate([116, 91, 0])
    cube([1, 1, 4.39]);
  translate([117, 91, 0])
    cube([1, 1, 1.37]);
  translate([118, 91, 0])
    cube([1, 1, 1.65]);
  translate([119, 91, 0])
    cube([1, 1, 2.20]);
  translate([120, 91, 0])
    cube([1, 1, 1.41]);
  translate([121, 91, 0])
    cube([1, 1, 1.41]);
  translate([122, 91, 0])
    cube([1, 1, 3.76]);
  translate([123, 91, 0])
    cube([1, 1, 2.43]);
  translate([124, 91, 0])
    cube([1, 1, 3.37]);
  translate([125, 91, 0])
    cube([1, 1, 4.20]);
  translate([126, 91, 0])
    cube([1, 1, 2.78]);
  translate([127, 91, 0])
    cube([1, 1, 1.14]);
  translate([128, 91, 0])
    cube([1, 1, 1.25]);
  translate([129, 91, 0])
    cube([1, 1, 1.25]);
  translate([130, 91, 0])
    cube([1, 1, 1.25]);
  translate([131, 91, 0])
    cube([1, 1, 1.25]);
  translate([132, 91, 0])
    cube([1, 1, 1.29]);
  translate([133, 91, 0])
    cube([1, 1, 1.25]);
  translate([134, 91, 0])
    cube([1, 1, 1.22]);
  translate([135, 91, 0])
    cube([1, 1, 1.25]);
  translate([136, 91, 0])
    cube([1, 1, 1.22]);
  translate([137, 91, 0])
    cube([1, 1, 1.25]);
  translate([138, 91, 0])
    cube([1, 1, 1.25]);
  translate([139, 91, 0])
    cube([1, 1, 1.29]);
  translate([140, 91, 0])
    cube([1, 1, 1.29]);
  translate([141, 91, 0])
    cube([1, 1, 1.29]);
  translate([142, 91, 0])
    cube([1, 1, 1.29]);
  translate([143, 91, 0])
    cube([1, 1, 1.29]);
  translate([144, 91, 0])
    cube([1, 1, 1.29]);
  translate([145, 91, 0])
    cube([1, 1, 1.33]);
  translate([146, 91, 0])
    cube([1, 1, 1.33]);
  translate([147, 91, 0])
    cube([1, 1, 1.29]);
  translate([148, 91, 0])
    cube([1, 1, 1.29]);
  translate([149, 91, 0])
    cube([1, 1, 1.29]);
  translate([150, 91, 0])
    cube([1, 1, 1.25]);
  translate([151, 91, 0])
    cube([1, 1, 1.29]);
  translate([152, 91, 0])
    cube([1, 1, 1.29]);
  translate([153, 91, 0])
    cube([1, 1, 1.29]);
  translate([154, 91, 0])
    cube([1, 1, 1.29]);
  translate([155, 91, 0])
    cube([1, 1, 1.29]);
  translate([156, 91, 0])
    cube([1, 1, 1.33]);
  translate([157, 91, 0])
    cube([1, 1, 1.33]);
  translate([158, 91, 0])
    cube([1, 1, 1.33]);
  translate([159, 91, 0])
    cube([1, 1, 1.33]);
  translate([160, 91, 0])
    cube([1, 1, 1.37]);
  translate([161, 91, 0])
    cube([1, 1, 1.29]);
  translate([162, 91, 0])
    cube([1, 1, 1.33]);
  translate([163, 91, 0])
    cube([1, 1, 1.25]);
  translate([164, 91, 0])
    cube([1, 1, 1.33]);
  translate([165, 91, 0])
    cube([1, 1, 1.33]);
  translate([166, 91, 0])
    cube([1, 1, 1.29]);
  translate([167, 91, 0])
    cube([1, 1, 1.33]);
  translate([168, 91, 0])
    cube([1, 1, 1.33]);
  translate([169, 91, 0])
    cube([1, 1, 1.33]);
  translate([170, 91, 0])
    cube([1, 1, 1.33]);
  translate([171, 91, 0])
    cube([1, 1, 1.29]);
  translate([172, 91, 0])
    cube([1, 1, 1.33]);
  translate([173, 91, 0])
    cube([1, 1, 1.33]);
  translate([174, 91, 0])
    cube([1, 1, 1.29]);
  translate([175, 91, 0])
    cube([1, 1, 1.33]);
  translate([176, 91, 0])
    cube([1, 1, 1.33]);
  translate([177, 91, 0])
    cube([1, 1, 1.33]);
  translate([178, 91, 0])
    cube([1, 1, 1.33]);
  translate([179, 91, 0])
    cube([1, 1, 1.33]);
  translate([180, 91, 0])
    cube([1, 1, 1.33]);
  translate([181, 91, 0])
    cube([1, 1, 1.33]);
  translate([182, 91, 0])
    cube([1, 1, 1.29]);
  translate([183, 91, 0])
    cube([1, 1, 1.33]);
  translate([184, 91, 0])
    cube([1, 1, 1.33]);
  translate([185, 91, 0])
    cube([1, 1, 1.33]);
  translate([186, 91, 0])
    cube([1, 1, 1.33]);
  translate([187, 91, 0])
    cube([1, 1, 1.29]);
  translate([188, 91, 0])
    cube([1, 1, 1.33]);
  translate([189, 91, 0])
    cube([1, 1, 1.33]);
  translate([190, 91, 0])
    cube([1, 1, 1.33]);
  translate([191, 91, 0])
    cube([1, 1, 1.33]);
  translate([192, 91, 0])
    cube([1, 1, 1.33]);
  translate([193, 91, 0])
    cube([1, 1, 1.33]);
  translate([194, 91, 0])
    cube([1, 1, 1.33]);
  translate([195, 91, 0])
    cube([1, 1, 1.33]);
  translate([196, 91, 0])
    cube([1, 1, 1.29]);
  translate([197, 91, 0])
    cube([1, 1, 1.33]);
  translate([198, 91, 0])
    cube([1, 1, 1.29]);
  translate([199, 91, 0])
    cube([1, 1, 1.29]);
  translate([200, 91, 0])
    cube([1, 1, 1.25]);
  translate([201, 91, 0])
    cube([1, 1, 1.33]);
  translate([202, 91, 0])
    cube([1, 1, 1.33]);
  translate([203, 91, 0])
    cube([1, 1, 1.33]);
  translate([204, 91, 0])
    cube([1, 1, 1.33]);
  translate([205, 91, 0])
    cube([1, 1, 1.33]);
  translate([206, 91, 0])
    cube([1, 1, 1.33]);
  translate([207, 91, 0])
    cube([1, 1, 1.33]);
  translate([208, 91, 0])
    cube([1, 1, 1.33]);
  translate([209, 91, 0])
    cube([1, 1, 1.33]);
  translate([210, 91, 0])
    cube([1, 1, 1.33]);
  translate([211, 91, 0])
    cube([1, 1, 1.33]);
  translate([212, 91, 0])
    cube([1, 1, 1.33]);
  translate([213, 91, 0])
    cube([1, 1, 1.33]);
  translate([214, 91, 0])
    cube([1, 1, 1.29]);
  translate([215, 91, 0])
    cube([1, 1, 1.33]);
  translate([216, 91, 0])
    cube([1, 1, 1.33]);
  translate([217, 91, 0])
    cube([1, 1, 1.29]);
  translate([218, 91, 0])
    cube([1, 1, 1.29]);
  translate([219, 91, 0])
    cube([1, 1, 1.29]);
  translate([220, 91, 0])
    cube([1, 1, 1.25]);
  translate([221, 91, 0])
    cube([1, 1, 1.29]);
  translate([222, 91, 0])
    cube([1, 1, 1.29]);
  translate([223, 91, 0])
    cube([1, 1, 1.29]);
  translate([224, 91, 0])
    cube([1, 1, 1.29]);
  translate([225, 91, 0])
    cube([1, 1, 1.29]);
  translate([226, 91, 0])
    cube([1, 1, 1.29]);
  translate([227, 91, 0])
    cube([1, 1, 1.29]);
  translate([228, 91, 0])
    cube([1, 1, 1.33]);
  translate([229, 91, 0])
    cube([1, 1, 1.33]);
  translate([230, 91, 0])
    cube([1, 1, 1.29]);
  translate([231, 91, 0])
    cube([1, 1, 1.33]);
  translate([232, 91, 0])
    cube([1, 1, 1.29]);
  translate([233, 91, 0])
    cube([1, 1, 1.29]);
  translate([234, 91, 0])
    cube([1, 1, 1.29]);
  translate([235, 91, 0])
    cube([1, 1, 1.29]);
  translate([236, 91, 0])
    cube([1, 1, 1.29]);
  translate([237, 91, 0])
    cube([1, 1, 1.29]);
  translate([238, 91, 0])
    cube([1, 1, 1.29]);
  translate([239, 91, 0])
    cube([1, 1, 1.29]);
  translate([240, 91, 0])
    cube([1, 1, 1.29]);
  translate([241, 91, 0])
    cube([1, 1, 1.29]);
  translate([242, 91, 0])
    cube([1, 1, 1.29]);
  translate([243, 91, 0])
    cube([1, 1, 1.29]);
  translate([244, 91, 0])
    cube([1, 1, 1.29]);
  translate([245, 91, 0])
    cube([1, 1, 1.29]);
  translate([246, 91, 0])
    cube([1, 1, 1.29]);
  translate([0, 92, 0])
    cube([1, 1, 1.45]);
  translate([1, 92, 0])
    cube([1, 1, 1.45]);
  translate([2, 92, 0])
    cube([1, 1, 1.45]);
  translate([3, 92, 0])
    cube([1, 1, 1.45]);
  translate([4, 92, 0])
    cube([1, 1, 1.45]);
  translate([5, 92, 0])
    cube([1, 1, 1.45]);
  translate([6, 92, 0])
    cube([1, 1, 1.45]);
  translate([7, 92, 0])
    cube([1, 1, 1.45]);
  translate([8, 92, 0])
    cube([1, 1, 1.45]);
  translate([9, 92, 0])
    cube([1, 1, 1.45]);
  translate([10, 92, 0])
    cube([1, 1, 1.45]);
  translate([11, 92, 0])
    cube([1, 1, 1.45]);
  translate([12, 92, 0])
    cube([1, 1, 1.45]);
  translate([13, 92, 0])
    cube([1, 1, 1.45]);
  translate([14, 92, 0])
    cube([1, 1, 1.45]);
  translate([15, 92, 0])
    cube([1, 1, 1.45]);
  translate([16, 92, 0])
    cube([1, 1, 1.45]);
  translate([17, 92, 0])
    cube([1, 1, 1.45]);
  translate([18, 92, 0])
    cube([1, 1, 1.45]);
  translate([19, 92, 0])
    cube([1, 1, 1.45]);
  translate([20, 92, 0])
    cube([1, 1, 1.45]);
  translate([21, 92, 0])
    cube([1, 1, 1.45]);
  translate([22, 92, 0])
    cube([1, 1, 1.45]);
  translate([23, 92, 0])
    cube([1, 1, 1.45]);
  translate([24, 92, 0])
    cube([1, 1, 1.41]);
  translate([25, 92, 0])
    cube([1, 1, 1.41]);
  translate([26, 92, 0])
    cube([1, 1, 1.41]);
  translate([27, 92, 0])
    cube([1, 1, 1.41]);
  translate([28, 92, 0])
    cube([1, 1, 1.41]);
  translate([29, 92, 0])
    cube([1, 1, 1.41]);
  translate([30, 92, 0])
    cube([1, 1, 1.45]);
  translate([31, 92, 0])
    cube([1, 1, 1.45]);
  translate([32, 92, 0])
    cube([1, 1, 1.61]);
  translate([33, 92, 0])
    cube([1, 1, 0.08]);
  translate([34, 92, 0])
    cube([1, 1, 4.90]);
  translate([35, 92, 0])
    cube([1, 1, 3.49]);
  translate([36, 92, 0])
    cube([1, 1, 1.45]);
  translate([37, 92, 0])
    cube([1, 1, 1.22]);
  translate([38, 92, 0])
    cube([1, 1, 0.90]);
  translate([39, 92, 0])
    cube([1, 1, 0.82]);
  translate([40, 92, 0])
    cube([1, 1, 0.90]);
  translate([41, 92, 0])
    cube([1, 1, 0.98]);
  translate([42, 92, 0])
    cube([1, 1, 0.82]);
  translate([43, 92, 0])
    cube([1, 1, 1.18]);
  translate([44, 92, 0])
    cube([1, 1, 1.37]);
  translate([45, 92, 0])
    cube([1, 1, 1.61]);
  translate([46, 92, 0])
    cube([1, 1, 1.80]);
  translate([47, 92, 0])
    cube([1, 1, 1.96]);
  translate([48, 92, 0])
    cube([1, 1, 2.16]);
  translate([49, 92, 0])
    cube([1, 1, 2.63]);
  translate([50, 92, 0])
    cube([1, 1, 5.41]);
  translate([51, 92, 0])
    cube([1, 1, 1.37]);
  translate([52, 92, 0])
    cube([1, 1, 1.29]);
  translate([53, 92, 0])
    cube([1, 1, 1.45]);
  translate([54, 92, 0])
    cube([1, 1, 1.33]);
  translate([55, 92, 0])
    cube([1, 1, 1.33]);
  translate([56, 92, 0])
    cube([1, 1, 2.04]);
  translate([57, 92, 0])
    cube([1, 1, 6.27]);
  translate([58, 92, 0])
    cube([1, 1, 4.94]);
  translate([59, 92, 0])
    cube([1, 1, 4.86]);
  translate([60, 92, 0])
    cube([1, 1, 4.51]);
  translate([61, 92, 0])
    cube([1, 1, 4.59]);
  translate([62, 92, 0])
    cube([1, 1, 4.82]);
  translate([63, 92, 0])
    cube([1, 1, 5.10]);
  translate([64, 92, 0])
    cube([1, 1, 5.25]);
  translate([65, 92, 0])
    cube([1, 1, 5.37]);
  translate([66, 92, 0])
    cube([1, 1, 5.53]);
  translate([67, 92, 0])
    cube([1, 1, 5.65]);
  translate([68, 92, 0])
    cube([1, 1, 5.53]);
  translate([69, 92, 0])
    cube([1, 1, 5.53]);
  translate([70, 92, 0])
    cube([1, 1, 4.82]);
  translate([71, 92, 0])
    cube([1, 1, 3.41]);
  translate([72, 92, 0])
    cube([1, 1, 1.18]);
  translate([73, 92, 0])
    cube([1, 1, 0.67]);
  translate([74, 92, 0])
    cube([1, 1, 1.02]);
  translate([75, 92, 0])
    cube([1, 1, 1.45]);
  translate([76, 92, 0])
    cube([1, 1, 1.41]);
  translate([77, 92, 0])
    cube([1, 1, 1.41]);
  translate([78, 92, 0])
    cube([1, 1, 1.65]);
  translate([79, 92, 0])
    cube([1, 1, 1.73]);
  translate([80, 92, 0])
    cube([1, 1, 1.88]);
  translate([81, 92, 0])
    cube([1, 1, 2.04]);
  translate([82, 92, 0])
    cube([1, 1, 1.76]);
  translate([83, 92, 0])
    cube([1, 1, 1.22]);
  translate([84, 92, 0])
    cube([1, 1, 3.53]);
  translate([85, 92, 0])
    cube([1, 1, 1.33]);
  translate([86, 92, 0])
    cube([1, 1, 3.73]);
  translate([87, 92, 0])
    cube([1, 1, 3.22]);
  translate([88, 92, 0])
    cube([1, 1, 3.33]);
  translate([89, 92, 0])
    cube([1, 1, 1.29]);
  translate([90, 92, 0])
    cube([1, 1, 1.22]);
  translate([91, 92, 0])
    cube([1, 1, 1.14]);
  translate([92, 92, 0])
    cube([1, 1, 1.10]);
  translate([93, 92, 0])
    cube([1, 1, 5.18]);
  translate([94, 92, 0])
    cube([1, 1, 4.78]);
  translate([95, 92, 0])
    cube([1, 1, 4.90]);
  translate([96, 92, 0])
    cube([1, 1, 5.06]);
  translate([97, 92, 0])
    cube([1, 1, 5.02]);
  translate([98, 92, 0])
    cube([1, 1, 5.10]);
  translate([99, 92, 0])
    cube([1, 1, 5.29]);
  translate([100, 92, 0])
    cube([1, 1, 5.45]);
  translate([101, 92, 0])
    cube([1, 1, 5.84]);
  translate([102, 92, 0])
    cube([1, 1, 5.92]);
  translate([103, 92, 0])
    cube([1, 1, 6.16]);
  translate([104, 92, 0])
    cube([1, 1, 6.08]);
  translate([105, 92, 0])
    cube([1, 1, 0.82]);
  translate([106, 92, 0])
    cube([1, 1, 2.20]);
  translate([107, 92, 0])
    cube([1, 1, 2.08]);
  translate([108, 92, 0])
    cube([1, 1, 5.76]);
  translate([109, 92, 0])
    cube([1, 1, 5.65]);
  translate([110, 92, 0])
    cube([1, 1, 5.69]);
  translate([111, 92, 0])
    cube([1, 1, 5.65]);
  translate([112, 92, 0])
    cube([1, 1, 5.96]);
  translate([113, 92, 0])
    cube([1, 1, 6.00]);
  translate([114, 92, 0])
    cube([1, 1, 6.04]);
  translate([115, 92, 0])
    cube([1, 1, 5.80]);
  translate([116, 92, 0])
    cube([1, 1, 5.84]);
  translate([117, 92, 0])
    cube([1, 1, 4.20]);
  translate([118, 92, 0])
    cube([1, 1, 1.53]);
  translate([119, 92, 0])
    cube([1, 1, 1.76]);
  translate([120, 92, 0])
    cube([1, 1, 2.20]);
  translate([121, 92, 0])
    cube([1, 1, 1.57]);
  translate([122, 92, 0])
    cube([1, 1, 2.04]);
  translate([123, 92, 0])
    cube([1, 1, 3.06]);
  translate([124, 92, 0])
    cube([1, 1, 3.53]);
  translate([125, 92, 0])
    cube([1, 1, 3.06]);
  translate([126, 92, 0])
    cube([1, 1, 6.00]);
  translate([127, 92, 0])
    cube([1, 1, 3.57]);
  translate([128, 92, 0])
    cube([1, 1, 1.69]);
  translate([129, 92, 0])
    cube([1, 1, 1.25]);
  translate([130, 92, 0])
    cube([1, 1, 1.25]);
  translate([131, 92, 0])
    cube([1, 1, 1.25]);
  translate([132, 92, 0])
    cube([1, 1, 1.29]);
  translate([133, 92, 0])
    cube([1, 1, 1.33]);
  translate([134, 92, 0])
    cube([1, 1, 1.22]);
  translate([135, 92, 0])
    cube([1, 1, 1.22]);
  translate([136, 92, 0])
    cube([1, 1, 1.29]);
  translate([137, 92, 0])
    cube([1, 1, 1.29]);
  translate([138, 92, 0])
    cube([1, 1, 1.29]);
  translate([139, 92, 0])
    cube([1, 1, 1.29]);
  translate([140, 92, 0])
    cube([1, 1, 1.29]);
  translate([141, 92, 0])
    cube([1, 1, 1.29]);
  translate([142, 92, 0])
    cube([1, 1, 1.29]);
  translate([143, 92, 0])
    cube([1, 1, 1.29]);
  translate([144, 92, 0])
    cube([1, 1, 1.29]);
  translate([145, 92, 0])
    cube([1, 1, 1.29]);
  translate([146, 92, 0])
    cube([1, 1, 1.29]);
  translate([147, 92, 0])
    cube([1, 1, 1.29]);
  translate([148, 92, 0])
    cube([1, 1, 1.29]);
  translate([149, 92, 0])
    cube([1, 1, 1.29]);
  translate([150, 92, 0])
    cube([1, 1, 1.29]);
  translate([151, 92, 0])
    cube([1, 1, 1.29]);
  translate([152, 92, 0])
    cube([1, 1, 1.29]);
  translate([153, 92, 0])
    cube([1, 1, 1.29]);
  translate([154, 92, 0])
    cube([1, 1, 1.29]);
  translate([155, 92, 0])
    cube([1, 1, 1.29]);
  translate([156, 92, 0])
    cube([1, 1, 1.25]);
  translate([157, 92, 0])
    cube([1, 1, 1.29]);
  translate([158, 92, 0])
    cube([1, 1, 1.33]);
  translate([159, 92, 0])
    cube([1, 1, 1.33]);
  translate([160, 92, 0])
    cube([1, 1, 1.33]);
  translate([161, 92, 0])
    cube([1, 1, 1.29]);
  translate([162, 92, 0])
    cube([1, 1, 1.33]);
  translate([163, 92, 0])
    cube([1, 1, 1.29]);
  translate([164, 92, 0])
    cube([1, 1, 1.33]);
  translate([165, 92, 0])
    cube([1, 1, 1.37]);
  translate([166, 92, 0])
    cube([1, 1, 1.33]);
  translate([167, 92, 0])
    cube([1, 1, 1.33]);
  translate([168, 92, 0])
    cube([1, 1, 1.33]);
  translate([169, 92, 0])
    cube([1, 1, 1.33]);
  translate([170, 92, 0])
    cube([1, 1, 1.33]);
  translate([171, 92, 0])
    cube([1, 1, 1.29]);
  translate([172, 92, 0])
    cube([1, 1, 1.33]);
  translate([173, 92, 0])
    cube([1, 1, 1.37]);
  translate([174, 92, 0])
    cube([1, 1, 1.25]);
  translate([175, 92, 0])
    cube([1, 1, 1.29]);
  translate([176, 92, 0])
    cube([1, 1, 1.33]);
  translate([177, 92, 0])
    cube([1, 1, 1.33]);
  translate([178, 92, 0])
    cube([1, 1, 1.33]);
  translate([179, 92, 0])
    cube([1, 1, 1.33]);
  translate([180, 92, 0])
    cube([1, 1, 1.33]);
  translate([181, 92, 0])
    cube([1, 1, 1.33]);
  translate([182, 92, 0])
    cube([1, 1, 1.33]);
  translate([183, 92, 0])
    cube([1, 1, 1.33]);
  translate([184, 92, 0])
    cube([1, 1, 1.33]);
  translate([185, 92, 0])
    cube([1, 1, 1.33]);
  translate([186, 92, 0])
    cube([1, 1, 1.33]);
  translate([187, 92, 0])
    cube([1, 1, 1.33]);
  translate([188, 92, 0])
    cube([1, 1, 1.33]);
  translate([189, 92, 0])
    cube([1, 1, 1.33]);
  translate([190, 92, 0])
    cube([1, 1, 1.33]);
  translate([191, 92, 0])
    cube([1, 1, 1.33]);
  translate([192, 92, 0])
    cube([1, 1, 1.33]);
  translate([193, 92, 0])
    cube([1, 1, 1.33]);
  translate([194, 92, 0])
    cube([1, 1, 1.33]);
  translate([195, 92, 0])
    cube([1, 1, 1.22]);
  translate([196, 92, 0])
    cube([1, 1, 1.33]);
  translate([197, 92, 0])
    cube([1, 1, 1.33]);
  translate([198, 92, 0])
    cube([1, 1, 1.33]);
  translate([199, 92, 0])
    cube([1, 1, 1.33]);
  translate([200, 92, 0])
    cube([1, 1, 1.33]);
  translate([201, 92, 0])
    cube([1, 1, 1.33]);
  translate([202, 92, 0])
    cube([1, 1, 1.33]);
  translate([203, 92, 0])
    cube([1, 1, 1.33]);
  translate([204, 92, 0])
    cube([1, 1, 1.25]);
  translate([205, 92, 0])
    cube([1, 1, 1.33]);
  translate([206, 92, 0])
    cube([1, 1, 1.33]);
  translate([207, 92, 0])
    cube([1, 1, 1.33]);
  translate([208, 92, 0])
    cube([1, 1, 1.33]);
  translate([209, 92, 0])
    cube([1, 1, 1.33]);
  translate([210, 92, 0])
    cube([1, 1, 1.33]);
  translate([211, 92, 0])
    cube([1, 1, 1.33]);
  translate([212, 92, 0])
    cube([1, 1, 1.33]);
  translate([213, 92, 0])
    cube([1, 1, 1.33]);
  translate([214, 92, 0])
    cube([1, 1, 1.33]);
  translate([215, 92, 0])
    cube([1, 1, 1.37]);
  translate([216, 92, 0])
    cube([1, 1, 1.33]);
  translate([217, 92, 0])
    cube([1, 1, 1.25]);
  translate([218, 92, 0])
    cube([1, 1, 1.37]);
  translate([219, 92, 0])
    cube([1, 1, 1.33]);
  translate([220, 92, 0])
    cube([1, 1, 1.33]);
  translate([221, 92, 0])
    cube([1, 1, 1.33]);
  translate([222, 92, 0])
    cube([1, 1, 1.29]);
  translate([223, 92, 0])
    cube([1, 1, 1.29]);
  translate([224, 92, 0])
    cube([1, 1, 1.29]);
  translate([225, 92, 0])
    cube([1, 1, 1.29]);
  translate([226, 92, 0])
    cube([1, 1, 1.29]);
  translate([227, 92, 0])
    cube([1, 1, 1.29]);
  translate([228, 92, 0])
    cube([1, 1, 1.33]);
  translate([229, 92, 0])
    cube([1, 1, 1.33]);
  translate([230, 92, 0])
    cube([1, 1, 1.29]);
  translate([231, 92, 0])
    cube([1, 1, 1.29]);
  translate([232, 92, 0])
    cube([1, 1, 1.33]);
  translate([233, 92, 0])
    cube([1, 1, 1.29]);
  translate([234, 92, 0])
    cube([1, 1, 1.29]);
  translate([235, 92, 0])
    cube([1, 1, 1.29]);
  translate([236, 92, 0])
    cube([1, 1, 1.29]);
  translate([237, 92, 0])
    cube([1, 1, 1.29]);
  translate([238, 92, 0])
    cube([1, 1, 1.29]);
  translate([239, 92, 0])
    cube([1, 1, 1.29]);
  translate([240, 92, 0])
    cube([1, 1, 1.29]);
  translate([241, 92, 0])
    cube([1, 1, 1.29]);
  translate([242, 92, 0])
    cube([1, 1, 1.33]);
  translate([243, 92, 0])
    cube([1, 1, 1.29]);
  translate([244, 92, 0])
    cube([1, 1, 1.29]);
  translate([245, 92, 0])
    cube([1, 1, 1.29]);
  translate([246, 92, 0])
    cube([1, 1, 1.29]);
  translate([0, 93, 0])
    cube([1, 1, 1.45]);
  translate([1, 93, 0])
    cube([1, 1, 1.45]);
  translate([2, 93, 0])
    cube([1, 1, 1.45]);
  translate([3, 93, 0])
    cube([1, 1, 1.45]);
  translate([4, 93, 0])
    cube([1, 1, 1.45]);
  translate([5, 93, 0])
    cube([1, 1, 1.45]);
  translate([6, 93, 0])
    cube([1, 1, 1.45]);
  translate([7, 93, 0])
    cube([1, 1, 1.45]);
  translate([8, 93, 0])
    cube([1, 1, 1.45]);
  translate([9, 93, 0])
    cube([1, 1, 1.45]);
  translate([10, 93, 0])
    cube([1, 1, 1.45]);
  translate([11, 93, 0])
    cube([1, 1, 1.45]);
  translate([12, 93, 0])
    cube([1, 1, 1.45]);
  translate([13, 93, 0])
    cube([1, 1, 1.45]);
  translate([14, 93, 0])
    cube([1, 1, 1.41]);
  translate([15, 93, 0])
    cube([1, 1, 1.45]);
  translate([16, 93, 0])
    cube([1, 1, 1.45]);
  translate([17, 93, 0])
    cube([1, 1, 1.45]);
  translate([18, 93, 0])
    cube([1, 1, 1.45]);
  translate([19, 93, 0])
    cube([1, 1, 1.45]);
  translate([20, 93, 0])
    cube([1, 1, 1.45]);
  translate([21, 93, 0])
    cube([1, 1, 1.45]);
  translate([22, 93, 0])
    cube([1, 1, 1.45]);
  translate([23, 93, 0])
    cube([1, 1, 1.45]);
  translate([24, 93, 0])
    cube([1, 1, 1.45]);
  translate([25, 93, 0])
    cube([1, 1, 1.45]);
  translate([26, 93, 0])
    cube([1, 1, 1.45]);
  translate([27, 93, 0])
    cube([1, 1, 1.41]);
  translate([28, 93, 0])
    cube([1, 1, 1.45]);
  translate([29, 93, 0])
    cube([1, 1, 1.45]);
  translate([30, 93, 0])
    cube([1, 1, 1.41]);
  translate([31, 93, 0])
    cube([1, 1, 1.41]);
  translate([32, 93, 0])
    cube([1, 1, 1.41]);
  translate([33, 93, 0])
    cube([1, 1, 4.43]);
  translate([34, 93, 0])
    cube([1, 1, 4.59]);
  translate([35, 93, 0])
    cube([1, 1, 4.12]);
  translate([36, 93, 0])
    cube([1, 1, 1.84]);
  translate([37, 93, 0])
    cube([1, 1, 1.22]);
  translate([38, 93, 0])
    cube([1, 1, 0.86]);
  translate([39, 93, 0])
    cube([1, 1, 0.86]);
  translate([40, 93, 0])
    cube([1, 1, 0.94]);
  translate([41, 93, 0])
    cube([1, 1, 1.02]);
  translate([42, 93, 0])
    cube([1, 1, 1.02]);
  translate([43, 93, 0])
    cube([1, 1, 0.71]);
  translate([44, 93, 0])
    cube([1, 1, 1.37]);
  translate([45, 93, 0])
    cube([1, 1, 1.45]);
  translate([46, 93, 0])
    cube([1, 1, 1.57]);
  translate([47, 93, 0])
    cube([1, 1, 1.92]);
  translate([48, 93, 0])
    cube([1, 1, 2.31]);
  translate([49, 93, 0])
    cube([1, 1, 1.92]);
  translate([50, 93, 0])
    cube([1, 1, 1.92]);
  translate([51, 93, 0])
    cube([1, 1, 4.35]);
  translate([52, 93, 0])
    cube([1, 1, 1.33]);
  translate([53, 93, 0])
    cube([1, 1, 1.37]);
  translate([54, 93, 0])
    cube([1, 1, 1.33]);
  translate([55, 93, 0])
    cube([1, 1, 1.33]);
  translate([56, 93, 0])
    cube([1, 1, 6.51]);
  translate([57, 93, 0])
    cube([1, 1, 6.20]);
  translate([58, 93, 0])
    cube([1, 1, 5.29]);
  translate([59, 93, 0])
    cube([1, 1, 4.94]);
  translate([60, 93, 0])
    cube([1, 1, 4.47]);
  translate([61, 93, 0])
    cube([1, 1, 4.71]);
  translate([62, 93, 0])
    cube([1, 1, 4.98]);
  translate([63, 93, 0])
    cube([1, 1, 5.29]);
  translate([64, 93, 0])
    cube([1, 1, 5.41]);
  translate([65, 93, 0])
    cube([1, 1, 5.57]);
  translate([66, 93, 0])
    cube([1, 1, 5.65]);
  translate([67, 93, 0])
    cube([1, 1, 5.61]);
  translate([68, 93, 0])
    cube([1, 1, 5.65]);
  translate([69, 93, 0])
    cube([1, 1, 5.61]);
  translate([70, 93, 0])
    cube([1, 1, 5.18]);
  translate([71, 93, 0])
    cube([1, 1, 3.84]);
  translate([72, 93, 0])
    cube([1, 1, 1.76]);
  translate([73, 93, 0])
    cube([1, 1, 0.75]);
  translate([74, 93, 0])
    cube([1, 1, 0.67]);
  translate([75, 93, 0])
    cube([1, 1, 0.86]);
  translate([76, 93, 0])
    cube([1, 1, 1.29]);
  translate([77, 93, 0])
    cube([1, 1, 1.33]);
  translate([78, 93, 0])
    cube([1, 1, 2.35]);
  translate([79, 93, 0])
    cube([1, 1, 2.59]);
  translate([80, 93, 0])
    cube([1, 1, 1.88]);
  translate([81, 93, 0])
    cube([1, 1, 2.43]);
  translate([82, 93, 0])
    cube([1, 1, 1.41]);
  translate([83, 93, 0])
    cube([1, 1, 1.29]);
  translate([84, 93, 0])
    cube([1, 1, 0.90]);
  translate([85, 93, 0])
    cube([1, 1, 1.37]);
  translate([86, 93, 0])
    cube([1, 1, 3.37]);
  translate([87, 93, 0])
    cube([1, 1, 2.20]);
  translate([88, 93, 0])
    cube([1, 1, 3.49]);
  translate([89, 93, 0])
    cube([1, 1, 1.80]);
  translate([90, 93, 0])
    cube([1, 1, 2.94]);
  translate([91, 93, 0])
    cube([1, 1, 0.71]);
  translate([92, 93, 0])
    cube([1, 1, 0.98]);
  translate([93, 93, 0])
    cube([1, 1, 0.94]);
  translate([94, 93, 0])
    cube([1, 1, 1.22]);
  translate([95, 93, 0])
    cube([1, 1, 4.47]);
  translate([96, 93, 0])
    cube([1, 1, 4.90]);
  translate([97, 93, 0])
    cube([1, 1, 5.06]);
  translate([98, 93, 0])
    cube([1, 1, 5.10]);
  translate([99, 93, 0])
    cube([1, 1, 5.10]);
  translate([100, 93, 0])
    cube([1, 1, 5.37]);
  translate([101, 93, 0])
    cube([1, 1, 5.76]);
  translate([102, 93, 0])
    cube([1, 1, 5.96]);
  translate([103, 93, 0])
    cube([1, 1, 6.24]);
  translate([104, 93, 0])
    cube([1, 1, 6.12]);
  translate([105, 93, 0])
    cube([1, 1, 5.10]);
  translate([106, 93, 0])
    cube([1, 1, 4.71]);
  translate([107, 93, 0])
    cube([1, 1, 3.96]);
  translate([108, 93, 0])
    cube([1, 1, 4.47]);
  translate([109, 93, 0])
    cube([1, 1, 5.69]);
  translate([110, 93, 0])
    cube([1, 1, 5.69]);
  translate([111, 93, 0])
    cube([1, 1, 5.65]);
  translate([112, 93, 0])
    cube([1, 1, 5.65]);
  translate([113, 93, 0])
    cube([1, 1, 5.69]);
  translate([114, 93, 0])
    cube([1, 1, 5.88]);
  translate([115, 93, 0])
    cube([1, 1, 6.04]);
  translate([116, 93, 0])
    cube([1, 1, 6.04]);
  translate([117, 93, 0])
    cube([1, 1, 5.02]);
  translate([118, 93, 0])
    cube([1, 1, 1.22]);
  translate([119, 93, 0])
    cube([1, 1, 1.73]);
  translate([120, 93, 0])
    cube([1, 1, 1.76]);
  translate([121, 93, 0])
    cube([1, 1, 1.76]);
  translate([122, 93, 0])
    cube([1, 1, 1.29]);
  translate([123, 93, 0])
    cube([1, 1, 2.16]);
  translate([124, 93, 0])
    cube([1, 1, 1.53]);
  translate([125, 93, 0])
    cube([1, 1, 1.18]);
  translate([126, 93, 0])
    cube([1, 1, 1.92]);
  translate([127, 93, 0])
    cube([1, 1, 2.51]);
  translate([128, 93, 0])
    cube([1, 1, 1.37]);
  translate([129, 93, 0])
    cube([1, 1, 1.53]);
  translate([130, 93, 0])
    cube([1, 1, 1.10]);
  translate([131, 93, 0])
    cube([1, 1, 1.33]);
  translate([132, 93, 0])
    cube([1, 1, 1.25]);
  translate([133, 93, 0])
    cube([1, 1, 1.29]);
  translate([134, 93, 0])
    cube([1, 1, 1.25]);
  translate([135, 93, 0])
    cube([1, 1, 1.37]);
  translate([136, 93, 0])
    cube([1, 1, 1.29]);
  translate([137, 93, 0])
    cube([1, 1, 1.29]);
  translate([138, 93, 0])
    cube([1, 1, 1.29]);
  translate([139, 93, 0])
    cube([1, 1, 1.29]);
  translate([140, 93, 0])
    cube([1, 1, 1.29]);
  translate([141, 93, 0])
    cube([1, 1, 1.29]);
  translate([142, 93, 0])
    cube([1, 1, 1.29]);
  translate([143, 93, 0])
    cube([1, 1, 1.29]);
  translate([144, 93, 0])
    cube([1, 1, 1.29]);
  translate([145, 93, 0])
    cube([1, 1, 1.29]);
  translate([146, 93, 0])
    cube([1, 1, 1.29]);
  translate([147, 93, 0])
    cube([1, 1, 1.29]);
  translate([148, 93, 0])
    cube([1, 1, 1.29]);
  translate([149, 93, 0])
    cube([1, 1, 1.29]);
  translate([150, 93, 0])
    cube([1, 1, 1.29]);
  translate([151, 93, 0])
    cube([1, 1, 1.29]);
  translate([152, 93, 0])
    cube([1, 1, 1.33]);
  translate([153, 93, 0])
    cube([1, 1, 1.29]);
  translate([154, 93, 0])
    cube([1, 1, 1.33]);
  translate([155, 93, 0])
    cube([1, 1, 1.33]);
  translate([156, 93, 0])
    cube([1, 1, 1.33]);
  translate([157, 93, 0])
    cube([1, 1, 1.33]);
  translate([158, 93, 0])
    cube([1, 1, 1.29]);
  translate([159, 93, 0])
    cube([1, 1, 1.29]);
  translate([160, 93, 0])
    cube([1, 1, 1.37]);
  translate([161, 93, 0])
    cube([1, 1, 1.33]);
  translate([162, 93, 0])
    cube([1, 1, 1.33]);
  translate([163, 93, 0])
    cube([1, 1, 1.33]);
  translate([164, 93, 0])
    cube([1, 1, 1.33]);
  translate([165, 93, 0])
    cube([1, 1, 1.33]);
  translate([166, 93, 0])
    cube([1, 1, 1.33]);
  translate([167, 93, 0])
    cube([1, 1, 1.33]);
  translate([168, 93, 0])
    cube([1, 1, 1.33]);
  translate([169, 93, 0])
    cube([1, 1, 1.33]);
  translate([170, 93, 0])
    cube([1, 1, 1.33]);
  translate([171, 93, 0])
    cube([1, 1, 1.33]);
  translate([172, 93, 0])
    cube([1, 1, 1.33]);
  translate([173, 93, 0])
    cube([1, 1, 1.33]);
  translate([174, 93, 0])
    cube([1, 1, 1.33]);
  translate([175, 93, 0])
    cube([1, 1, 1.33]);
  translate([176, 93, 0])
    cube([1, 1, 1.33]);
  translate([177, 93, 0])
    cube([1, 1, 1.29]);
  translate([178, 93, 0])
    cube([1, 1, 1.33]);
  translate([179, 93, 0])
    cube([1, 1, 1.33]);
  translate([180, 93, 0])
    cube([1, 1, 1.33]);
  translate([181, 93, 0])
    cube([1, 1, 1.33]);
  translate([182, 93, 0])
    cube([1, 1, 1.33]);
  translate([183, 93, 0])
    cube([1, 1, 1.33]);
  translate([184, 93, 0])
    cube([1, 1, 1.33]);
  translate([185, 93, 0])
    cube([1, 1, 1.33]);
  translate([186, 93, 0])
    cube([1, 1, 1.33]);
  translate([187, 93, 0])
    cube([1, 1, 1.33]);
  translate([188, 93, 0])
    cube([1, 1, 1.33]);
  translate([189, 93, 0])
    cube([1, 1, 1.33]);
  translate([190, 93, 0])
    cube([1, 1, 1.33]);
  translate([191, 93, 0])
    cube([1, 1, 1.33]);
  translate([192, 93, 0])
    cube([1, 1, 1.33]);
  translate([193, 93, 0])
    cube([1, 1, 1.33]);
  translate([194, 93, 0])
    cube([1, 1, 1.33]);
  translate([195, 93, 0])
    cube([1, 1, 1.33]);
  translate([196, 93, 0])
    cube([1, 1, 1.33]);
  translate([197, 93, 0])
    cube([1, 1, 1.33]);
  translate([198, 93, 0])
    cube([1, 1, 1.29]);
  translate([199, 93, 0])
    cube([1, 1, 1.29]);
  translate([200, 93, 0])
    cube([1, 1, 1.33]);
  translate([201, 93, 0])
    cube([1, 1, 1.33]);
  translate([202, 93, 0])
    cube([1, 1, 1.33]);
  translate([203, 93, 0])
    cube([1, 1, 1.33]);
  translate([204, 93, 0])
    cube([1, 1, 1.33]);
  translate([205, 93, 0])
    cube([1, 1, 1.33]);
  translate([206, 93, 0])
    cube([1, 1, 1.29]);
  translate([207, 93, 0])
    cube([1, 1, 1.29]);
  translate([208, 93, 0])
    cube([1, 1, 1.33]);
  translate([209, 93, 0])
    cube([1, 1, 1.33]);
  translate([210, 93, 0])
    cube([1, 1, 1.33]);
  translate([211, 93, 0])
    cube([1, 1, 1.29]);
  translate([212, 93, 0])
    cube([1, 1, 1.33]);
  translate([213, 93, 0])
    cube([1, 1, 1.33]);
  translate([214, 93, 0])
    cube([1, 1, 1.33]);
  translate([215, 93, 0])
    cube([1, 1, 1.33]);
  translate([216, 93, 0])
    cube([1, 1, 1.33]);
  translate([217, 93, 0])
    cube([1, 1, 1.33]);
  translate([218, 93, 0])
    cube([1, 1, 1.33]);
  translate([219, 93, 0])
    cube([1, 1, 1.33]);
  translate([220, 93, 0])
    cube([1, 1, 1.33]);
  translate([221, 93, 0])
    cube([1, 1, 1.33]);
  translate([222, 93, 0])
    cube([1, 1, 1.33]);
  translate([223, 93, 0])
    cube([1, 1, 1.33]);
  translate([224, 93, 0])
    cube([1, 1, 1.29]);
  translate([225, 93, 0])
    cube([1, 1, 1.29]);
  translate([226, 93, 0])
    cube([1, 1, 1.29]);
  translate([227, 93, 0])
    cube([1, 1, 1.33]);
  translate([228, 93, 0])
    cube([1, 1, 1.29]);
  translate([229, 93, 0])
    cube([1, 1, 1.29]);
  translate([230, 93, 0])
    cube([1, 1, 1.29]);
  translate([231, 93, 0])
    cube([1, 1, 1.33]);
  translate([232, 93, 0])
    cube([1, 1, 1.33]);
  translate([233, 93, 0])
    cube([1, 1, 1.29]);
  translate([234, 93, 0])
    cube([1, 1, 1.29]);
  translate([235, 93, 0])
    cube([1, 1, 1.29]);
  translate([236, 93, 0])
    cube([1, 1, 1.25]);
  translate([237, 93, 0])
    cube([1, 1, 1.29]);
  translate([238, 93, 0])
    cube([1, 1, 1.29]);
  translate([239, 93, 0])
    cube([1, 1, 1.29]);
  translate([240, 93, 0])
    cube([1, 1, 1.29]);
  translate([241, 93, 0])
    cube([1, 1, 1.33]);
  translate([242, 93, 0])
    cube([1, 1, 1.33]);
  translate([243, 93, 0])
    cube([1, 1, 1.33]);
  translate([244, 93, 0])
    cube([1, 1, 1.25]);
  translate([245, 93, 0])
    cube([1, 1, 1.29]);
  translate([246, 93, 0])
    cube([1, 1, 1.29]);
  translate([0, 94, 0])
    cube([1, 1, 1.45]);
  translate([1, 94, 0])
    cube([1, 1, 1.45]);
  translate([2, 94, 0])
    cube([1, 1, 1.45]);
  translate([3, 94, 0])
    cube([1, 1, 1.45]);
  translate([4, 94, 0])
    cube([1, 1, 1.45]);
  translate([5, 94, 0])
    cube([1, 1, 1.45]);
  translate([6, 94, 0])
    cube([1, 1, 1.45]);
  translate([7, 94, 0])
    cube([1, 1, 1.45]);
  translate([8, 94, 0])
    cube([1, 1, 1.45]);
  translate([9, 94, 0])
    cube([1, 1, 1.45]);
  translate([10, 94, 0])
    cube([1, 1, 1.45]);
  translate([11, 94, 0])
    cube([1, 1, 1.45]);
  translate([12, 94, 0])
    cube([1, 1, 1.45]);
  translate([13, 94, 0])
    cube([1, 1, 1.45]);
  translate([14, 94, 0])
    cube([1, 1, 1.41]);
  translate([15, 94, 0])
    cube([1, 1, 1.45]);
  translate([16, 94, 0])
    cube([1, 1, 1.45]);
  translate([17, 94, 0])
    cube([1, 1, 1.41]);
  translate([18, 94, 0])
    cube([1, 1, 1.41]);
  translate([19, 94, 0])
    cube([1, 1, 1.45]);
  translate([20, 94, 0])
    cube([1, 1, 1.45]);
  translate([21, 94, 0])
    cube([1, 1, 1.45]);
  translate([22, 94, 0])
    cube([1, 1, 1.45]);
  translate([23, 94, 0])
    cube([1, 1, 1.45]);
  translate([24, 94, 0])
    cube([1, 1, 1.45]);
  translate([25, 94, 0])
    cube([1, 1, 1.45]);
  translate([26, 94, 0])
    cube([1, 1, 1.45]);
  translate([27, 94, 0])
    cube([1, 1, 1.41]);
  translate([28, 94, 0])
    cube([1, 1, 1.45]);
  translate([29, 94, 0])
    cube([1, 1, 1.45]);
  translate([30, 94, 0])
    cube([1, 1, 1.41]);
  translate([31, 94, 0])
    cube([1, 1, 1.41]);
  translate([32, 94, 0])
    cube([1, 1, 1.45]);
  translate([33, 94, 0])
    cube([1, 1, 1.02]);
  translate([34, 94, 0])
    cube([1, 1, 1.18]);
  translate([35, 94, 0])
    cube([1, 1, 4.31]);
  translate([36, 94, 0])
    cube([1, 1, 1.84]);
  translate([37, 94, 0])
    cube([1, 1, 1.22]);
  translate([38, 94, 0])
    cube([1, 1, 0.90]);
  translate([39, 94, 0])
    cube([1, 1, 0.78]);
  translate([40, 94, 0])
    cube([1, 1, 0.90]);
  translate([41, 94, 0])
    cube([1, 1, 0.94]);
  translate([42, 94, 0])
    cube([1, 1, 1.10]);
  translate([43, 94, 0])
    cube([1, 1, 0.71]);
  translate([44, 94, 0])
    cube([1, 1, 1.25]);
  translate([45, 94, 0])
    cube([1, 1, 1.45]);
  translate([46, 94, 0])
    cube([1, 1, 1.41]);
  translate([47, 94, 0])
    cube([1, 1, 1.76]);
  translate([48, 94, 0])
    cube([1, 1, 2.16]);
  translate([49, 94, 0])
    cube([1, 1, 1.80]);
  translate([50, 94, 0])
    cube([1, 1, 2.51]);
  translate([51, 94, 0])
    cube([1, 1, 5.33]);
  translate([52, 94, 0])
    cube([1, 1, 1.57]);
  translate([53, 94, 0])
    cube([1, 1, 1.37]);
  translate([54, 94, 0])
    cube([1, 1, 1.33]);
  translate([55, 94, 0])
    cube([1, 1, 1.33]);
  translate([56, 94, 0])
    cube([1, 1, 6.82]);
  translate([57, 94, 0])
    cube([1, 1, 6.16]);
  translate([58, 94, 0])
    cube([1, 1, 5.22]);
  translate([59, 94, 0])
    cube([1, 1, 4.82]);
  translate([60, 94, 0])
    cube([1, 1, 4.55]);
  translate([61, 94, 0])
    cube([1, 1, 4.82]);
  translate([62, 94, 0])
    cube([1, 1, 5.18]);
  translate([63, 94, 0])
    cube([1, 1, 5.37]);
  translate([64, 94, 0])
    cube([1, 1, 5.53]);
  translate([65, 94, 0])
    cube([1, 1, 5.61]);
  translate([66, 94, 0])
    cube([1, 1, 5.73]);
  translate([67, 94, 0])
    cube([1, 1, 5.65]);
  translate([68, 94, 0])
    cube([1, 1, 5.76]);
  translate([69, 94, 0])
    cube([1, 1, 5.73]);
  translate([70, 94, 0])
    cube([1, 1, 5.37]);
  translate([71, 94, 0])
    cube([1, 1, 4.47]);
  translate([72, 94, 0])
    cube([1, 1, 2.63]);
  translate([73, 94, 0])
    cube([1, 1, 1.14]);
  translate([74, 94, 0])
    cube([1, 1, 0.63]);
  translate([75, 94, 0])
    cube([1, 1, 0.67]);
  translate([76, 94, 0])
    cube([1, 1, 1.06]);
  translate([77, 94, 0])
    cube([1, 1, 1.76]);
  translate([78, 94, 0])
    cube([1, 1, 1.25]);
  translate([79, 94, 0])
    cube([1, 1, 2.35]);
  translate([80, 94, 0])
    cube([1, 1, 2.27]);
  translate([81, 94, 0])
    cube([1, 1, 2.98]);
  translate([82, 94, 0])
    cube([1, 1, 2.24]);
  translate([83, 94, 0])
    cube([1, 1, 0.86]);
  translate([84, 94, 0])
    cube([1, 1, 1.18]);
  translate([85, 94, 0])
    cube([1, 1, 1.49]);
  translate([86, 94, 0])
    cube([1, 1, 2.39]);
  translate([87, 94, 0])
    cube([1, 1, 2.24]);
  translate([88, 94, 0])
    cube([1, 1, 2.39]);
  translate([89, 94, 0])
    cube([1, 1, 3.65]);
  translate([90, 94, 0])
    cube([1, 1, 3.80]);
  translate([91, 94, 0])
    cube([1, 1, 3.84]);
  translate([92, 94, 0])
    cube([1, 1, 0.82]);
  translate([93, 94, 0])
    cube([1, 1, 1.06]);
  translate([94, 94, 0])
    cube([1, 1, 1.73]);
  translate([95, 94, 0])
    cube([1, 1, 1.57]);
  translate([96, 94, 0])
    cube([1, 1, 2.04]);
  translate([97, 94, 0])
    cube([1, 1, 4.98]);
  translate([98, 94, 0])
    cube([1, 1, 5.02]);
  translate([99, 94, 0])
    cube([1, 1, 5.02]);
  translate([100, 94, 0])
    cube([1, 1, 5.33]);
  translate([101, 94, 0])
    cube([1, 1, 5.65]);
  translate([102, 94, 0])
    cube([1, 1, 5.88]);
  translate([103, 94, 0])
    cube([1, 1, 6.04]);
  translate([104, 94, 0])
    cube([1, 1, 6.12]);
  translate([105, 94, 0])
    cube([1, 1, 6.04]);
  translate([106, 94, 0])
    cube([1, 1, 4.47]);
  translate([107, 94, 0])
    cube([1, 1, 3.33]);
  translate([108, 94, 0])
    cube([1, 1, 3.73]);
  translate([109, 94, 0])
    cube([1, 1, 4.20]);
  translate([110, 94, 0])
    cube([1, 1, 5.69]);
  translate([111, 94, 0])
    cube([1, 1, 5.65]);
  translate([112, 94, 0])
    cube([1, 1, 5.57]);
  translate([113, 94, 0])
    cube([1, 1, 5.53]);
  translate([114, 94, 0])
    cube([1, 1, 5.73]);
  translate([115, 94, 0])
    cube([1, 1, 5.84]);
  translate([116, 94, 0])
    cube([1, 1, 5.49]);
  translate([117, 94, 0])
    cube([1, 1, 3.45]);
  translate([118, 94, 0])
    cube([1, 1, 2.04]);
  translate([119, 94, 0])
    cube([1, 1, 2.20]);
  translate([120, 94, 0])
    cube([1, 1, 1.33]);
  translate([121, 94, 0])
    cube([1, 1, 1.76]);
  translate([122, 94, 0])
    cube([1, 1, 1.80]);
  translate([123, 94, 0])
    cube([1, 1, 1.49]);
  translate([124, 94, 0])
    cube([1, 1, 5.25]);
  translate([125, 94, 0])
    cube([1, 1, 1.41]);
  translate([126, 94, 0])
    cube([1, 1, 1.76]);
  translate([127, 94, 0])
    cube([1, 1, 3.14]);
  translate([128, 94, 0])
    cube([1, 1, 3.76]);
  translate([129, 94, 0])
    cube([1, 1, 1.02]);
  translate([130, 94, 0])
    cube([1, 1, 1.41]);
  translate([131, 94, 0])
    cube([1, 1, 1.25]);
  translate([132, 94, 0])
    cube([1, 1, 1.25]);
  translate([133, 94, 0])
    cube([1, 1, 1.29]);
  translate([134, 94, 0])
    cube([1, 1, 1.29]);
  translate([135, 94, 0])
    cube([1, 1, 1.25]);
  translate([136, 94, 0])
    cube([1, 1, 1.29]);
  translate([137, 94, 0])
    cube([1, 1, 1.29]);
  translate([138, 94, 0])
    cube([1, 1, 1.29]);
  translate([139, 94, 0])
    cube([1, 1, 1.29]);
  translate([140, 94, 0])
    cube([1, 1, 1.29]);
  translate([141, 94, 0])
    cube([1, 1, 1.29]);
  translate([142, 94, 0])
    cube([1, 1, 1.29]);
  translate([143, 94, 0])
    cube([1, 1, 1.29]);
  translate([144, 94, 0])
    cube([1, 1, 1.29]);
  translate([145, 94, 0])
    cube([1, 1, 1.29]);
  translate([146, 94, 0])
    cube([1, 1, 1.29]);
  translate([147, 94, 0])
    cube([1, 1, 1.29]);
  translate([148, 94, 0])
    cube([1, 1, 1.29]);
  translate([149, 94, 0])
    cube([1, 1, 1.29]);
  translate([150, 94, 0])
    cube([1, 1, 1.29]);
  translate([151, 94, 0])
    cube([1, 1, 1.29]);
  translate([152, 94, 0])
    cube([1, 1, 1.33]);
  translate([153, 94, 0])
    cube([1, 1, 1.29]);
  translate([154, 94, 0])
    cube([1, 1, 1.33]);
  translate([155, 94, 0])
    cube([1, 1, 1.33]);
  translate([156, 94, 0])
    cube([1, 1, 1.33]);
  translate([157, 94, 0])
    cube([1, 1, 1.33]);
  translate([158, 94, 0])
    cube([1, 1, 1.29]);
  translate([159, 94, 0])
    cube([1, 1, 1.29]);
  translate([160, 94, 0])
    cube([1, 1, 1.37]);
  translate([161, 94, 0])
    cube([1, 1, 1.33]);
  translate([162, 94, 0])
    cube([1, 1, 1.33]);
  translate([163, 94, 0])
    cube([1, 1, 1.33]);
  translate([164, 94, 0])
    cube([1, 1, 1.33]);
  translate([165, 94, 0])
    cube([1, 1, 1.33]);
  translate([166, 94, 0])
    cube([1, 1, 1.33]);
  translate([167, 94, 0])
    cube([1, 1, 1.33]);
  translate([168, 94, 0])
    cube([1, 1, 1.33]);
  translate([169, 94, 0])
    cube([1, 1, 1.33]);
  translate([170, 94, 0])
    cube([1, 1, 1.33]);
  translate([171, 94, 0])
    cube([1, 1, 1.33]);
  translate([172, 94, 0])
    cube([1, 1, 1.33]);
  translate([173, 94, 0])
    cube([1, 1, 1.33]);
  translate([174, 94, 0])
    cube([1, 1, 1.33]);
  translate([175, 94, 0])
    cube([1, 1, 1.33]);
  translate([176, 94, 0])
    cube([1, 1, 1.33]);
  translate([177, 94, 0])
    cube([1, 1, 1.29]);
  translate([178, 94, 0])
    cube([1, 1, 1.33]);
  translate([179, 94, 0])
    cube([1, 1, 1.33]);
  translate([180, 94, 0])
    cube([1, 1, 1.33]);
  translate([181, 94, 0])
    cube([1, 1, 1.33]);
  translate([182, 94, 0])
    cube([1, 1, 1.33]);
  translate([183, 94, 0])
    cube([1, 1, 1.33]);
  translate([184, 94, 0])
    cube([1, 1, 1.33]);
  translate([185, 94, 0])
    cube([1, 1, 1.33]);
  translate([186, 94, 0])
    cube([1, 1, 1.33]);
  translate([187, 94, 0])
    cube([1, 1, 1.33]);
  translate([188, 94, 0])
    cube([1, 1, 1.33]);
  translate([189, 94, 0])
    cube([1, 1, 1.33]);
  translate([190, 94, 0])
    cube([1, 1, 1.33]);
  translate([191, 94, 0])
    cube([1, 1, 1.33]);
  translate([192, 94, 0])
    cube([1, 1, 1.33]);
  translate([193, 94, 0])
    cube([1, 1, 1.33]);
  translate([194, 94, 0])
    cube([1, 1, 1.33]);
  translate([195, 94, 0])
    cube([1, 1, 1.33]);
  translate([196, 94, 0])
    cube([1, 1, 1.33]);
  translate([197, 94, 0])
    cube([1, 1, 1.33]);
  translate([198, 94, 0])
    cube([1, 1, 1.33]);
  translate([199, 94, 0])
    cube([1, 1, 1.33]);
  translate([200, 94, 0])
    cube([1, 1, 1.33]);
  translate([201, 94, 0])
    cube([1, 1, 1.33]);
  translate([202, 94, 0])
    cube([1, 1, 1.33]);
  translate([203, 94, 0])
    cube([1, 1, 1.33]);
  translate([204, 94, 0])
    cube([1, 1, 1.33]);
  translate([205, 94, 0])
    cube([1, 1, 1.33]);
  translate([206, 94, 0])
    cube([1, 1, 1.25]);
  translate([207, 94, 0])
    cube([1, 1, 1.25]);
  translate([208, 94, 0])
    cube([1, 1, 1.33]);
  translate([209, 94, 0])
    cube([1, 1, 1.33]);
  translate([210, 94, 0])
    cube([1, 1, 1.33]);
  translate([211, 94, 0])
    cube([1, 1, 1.29]);
  translate([212, 94, 0])
    cube([1, 1, 1.33]);
  translate([213, 94, 0])
    cube([1, 1, 1.33]);
  translate([214, 94, 0])
    cube([1, 1, 1.33]);
  translate([215, 94, 0])
    cube([1, 1, 1.33]);
  translate([216, 94, 0])
    cube([1, 1, 1.33]);
  translate([217, 94, 0])
    cube([1, 1, 1.33]);
  translate([218, 94, 0])
    cube([1, 1, 1.33]);
  translate([219, 94, 0])
    cube([1, 1, 1.33]);
  translate([220, 94, 0])
    cube([1, 1, 1.29]);
  translate([221, 94, 0])
    cube([1, 1, 1.29]);
  translate([222, 94, 0])
    cube([1, 1, 1.33]);
  translate([223, 94, 0])
    cube([1, 1, 1.33]);
  translate([224, 94, 0])
    cube([1, 1, 1.29]);
  translate([225, 94, 0])
    cube([1, 1, 1.29]);
  translate([226, 94, 0])
    cube([1, 1, 1.29]);
  translate([227, 94, 0])
    cube([1, 1, 1.33]);
  translate([228, 94, 0])
    cube([1, 1, 1.29]);
  translate([229, 94, 0])
    cube([1, 1, 1.29]);
  translate([230, 94, 0])
    cube([1, 1, 1.29]);
  translate([231, 94, 0])
    cube([1, 1, 1.33]);
  translate([232, 94, 0])
    cube([1, 1, 1.33]);
  translate([233, 94, 0])
    cube([1, 1, 1.29]);
  translate([234, 94, 0])
    cube([1, 1, 1.29]);
  translate([235, 94, 0])
    cube([1, 1, 1.29]);
  translate([236, 94, 0])
    cube([1, 1, 1.25]);
  translate([237, 94, 0])
    cube([1, 1, 1.29]);
  translate([238, 94, 0])
    cube([1, 1, 1.29]);
  translate([239, 94, 0])
    cube([1, 1, 1.29]);
  translate([240, 94, 0])
    cube([1, 1, 1.29]);
  translate([241, 94, 0])
    cube([1, 1, 1.33]);
  translate([242, 94, 0])
    cube([1, 1, 1.33]);
  translate([243, 94, 0])
    cube([1, 1, 1.33]);
  translate([244, 94, 0])
    cube([1, 1, 1.25]);
  translate([245, 94, 0])
    cube([1, 1, 1.29]);
  translate([246, 94, 0])
    cube([1, 1, 1.29]);
  translate([0, 95, 0])
    cube([1, 1, 1.45]);
  translate([1, 95, 0])
    cube([1, 1, 1.45]);
  translate([2, 95, 0])
    cube([1, 1, 1.45]);
  translate([3, 95, 0])
    cube([1, 1, 1.45]);
  translate([4, 95, 0])
    cube([1, 1, 1.45]);
  translate([5, 95, 0])
    cube([1, 1, 1.45]);
  translate([6, 95, 0])
    cube([1, 1, 1.45]);
  translate([7, 95, 0])
    cube([1, 1, 1.45]);
  translate([8, 95, 0])
    cube([1, 1, 1.45]);
  translate([9, 95, 0])
    cube([1, 1, 1.41]);
  translate([10, 95, 0])
    cube([1, 1, 1.45]);
  translate([11, 95, 0])
    cube([1, 1, 1.45]);
  translate([12, 95, 0])
    cube([1, 1, 1.45]);
  translate([13, 95, 0])
    cube([1, 1, 1.45]);
  translate([14, 95, 0])
    cube([1, 1, 1.45]);
  translate([15, 95, 0])
    cube([1, 1, 1.45]);
  translate([16, 95, 0])
    cube([1, 1, 1.45]);
  translate([17, 95, 0])
    cube([1, 1, 1.45]);
  translate([18, 95, 0])
    cube([1, 1, 1.45]);
  translate([19, 95, 0])
    cube([1, 1, 1.41]);
  translate([20, 95, 0])
    cube([1, 1, 1.41]);
  translate([21, 95, 0])
    cube([1, 1, 1.45]);
  translate([22, 95, 0])
    cube([1, 1, 1.45]);
  translate([23, 95, 0])
    cube([1, 1, 1.45]);
  translate([24, 95, 0])
    cube([1, 1, 1.45]);
  translate([25, 95, 0])
    cube([1, 1, 1.41]);
  translate([26, 95, 0])
    cube([1, 1, 1.45]);
  translate([27, 95, 0])
    cube([1, 1, 1.45]);
  translate([28, 95, 0])
    cube([1, 1, 1.41]);
  translate([29, 95, 0])
    cube([1, 1, 1.41]);
  translate([30, 95, 0])
    cube([1, 1, 1.41]);
  translate([31, 95, 0])
    cube([1, 1, 1.41]);
  translate([32, 95, 0])
    cube([1, 1, 1.41]);
  translate([33, 95, 0])
    cube([1, 1, 1.49]);
  translate([34, 95, 0])
    cube([1, 1, 5.06]);
  translate([35, 95, 0])
    cube([1, 1, 3.73]);
  translate([36, 95, 0])
    cube([1, 1, 2.35]);
  translate([37, 95, 0])
    cube([1, 1, 1.29]);
  translate([38, 95, 0])
    cube([1, 1, 1.18]);
  translate([39, 95, 0])
    cube([1, 1, 0.90]);
  translate([40, 95, 0])
    cube([1, 1, 0.86]);
  translate([41, 95, 0])
    cube([1, 1, 0.86]);
  translate([42, 95, 0])
    cube([1, 1, 1.06]);
  translate([43, 95, 0])
    cube([1, 1, 0.86]);
  translate([44, 95, 0])
    cube([1, 1, 1.25]);
  translate([45, 95, 0])
    cube([1, 1, 1.33]);
  translate([46, 95, 0])
    cube([1, 1, 1.45]);
  translate([47, 95, 0])
    cube([1, 1, 1.53]);
  translate([48, 95, 0])
    cube([1, 1, 1.65]);
  translate([49, 95, 0])
    cube([1, 1, 1.45]);
  translate([50, 95, 0])
    cube([1, 1, 2.08]);
  translate([51, 95, 0])
    cube([1, 1, 5.92]);
  translate([52, 95, 0])
    cube([1, 1, 4.63]);
  translate([53, 95, 0])
    cube([1, 1, 1.37]);
  translate([54, 95, 0])
    cube([1, 1, 1.29]);
  translate([55, 95, 0])
    cube([1, 1, 3.22]);
  translate([56, 95, 0])
    cube([1, 1, 6.90]);
  translate([57, 95, 0])
    cube([1, 1, 6.00]);
  translate([58, 95, 0])
    cube([1, 1, 5.25]);
  translate([59, 95, 0])
    cube([1, 1, 4.71]);
  translate([60, 95, 0])
    cube([1, 1, 4.59]);
  translate([61, 95, 0])
    cube([1, 1, 4.94]);
  translate([62, 95, 0])
    cube([1, 1, 5.14]);
  translate([63, 95, 0])
    cube([1, 1, 5.53]);
  translate([64, 95, 0])
    cube([1, 1, 5.73]);
  translate([65, 95, 0])
    cube([1, 1, 5.69]);
  translate([66, 95, 0])
    cube([1, 1, 5.76]);
  translate([67, 95, 0])
    cube([1, 1, 5.80]);
  translate([68, 95, 0])
    cube([1, 1, 5.84]);
  translate([69, 95, 0])
    cube([1, 1, 5.80]);
  translate([70, 95, 0])
    cube([1, 1, 5.65]);
  translate([71, 95, 0])
    cube([1, 1, 5.06]);
  translate([72, 95, 0])
    cube([1, 1, 3.45]);
  translate([73, 95, 0])
    cube([1, 1, 1.92]);
  translate([74, 95, 0])
    cube([1, 1, 0.82]);
  translate([75, 95, 0])
    cube([1, 1, 0.59]);
  translate([76, 95, 0])
    cube([1, 1, 0.67]);
  translate([77, 95, 0])
    cube([1, 1, 1.02]);
  translate([78, 95, 0])
    cube([1, 1, 1.22]);
  translate([79, 95, 0])
    cube([1, 1, 1.45]);
  translate([80, 95, 0])
    cube([1, 1, 1.73]);
  translate([81, 95, 0])
    cube([1, 1, 3.02]);
  translate([82, 95, 0])
    cube([1, 1, 1.45]);
  translate([83, 95, 0])
    cube([1, 1, 1.88]);
  translate([84, 95, 0])
    cube([1, 1, 0.55]);
  translate([85, 95, 0])
    cube([1, 1, 1.10]);
  translate([86, 95, 0])
    cube([1, 1, 1.18]);
  translate([87, 95, 0])
    cube([1, 1, 1.22]);
  translate([88, 95, 0])
    cube([1, 1, 2.59]);
  translate([89, 95, 0])
    cube([1, 1, 1.25]);
  translate([90, 95, 0])
    cube([1, 1, 0.82]);
  translate([91, 95, 0])
    cube([1, 1, 2.47]);
  translate([92, 95, 0])
    cube([1, 1, 2.47]);
  translate([93, 95, 0])
    cube([1, 1, 1.29]);
  translate([94, 95, 0])
    cube([1, 1, 0.75]);
  translate([95, 95, 0])
    cube([1, 1, 1.29]);
  translate([96, 95, 0])
    cube([1, 1, 2.16]);
  translate([97, 95, 0])
    cube([1, 1, 1.45]);
  translate([98, 95, 0])
    cube([1, 1, 3.49]);
  translate([99, 95, 0])
    cube([1, 1, 5.06]);
  translate([100, 95, 0])
    cube([1, 1, 5.37]);
  translate([101, 95, 0])
    cube([1, 1, 5.37]);
  translate([102, 95, 0])
    cube([1, 1, 5.61]);
  translate([103, 95, 0])
    cube([1, 1, 5.92]);
  translate([104, 95, 0])
    cube([1, 1, 6.00]);
  translate([105, 95, 0])
    cube([1, 1, 5.88]);
  translate([106, 95, 0])
    cube([1, 1, 5.37]);
  translate([107, 95, 0])
    cube([1, 1, 3.25]);
  translate([108, 95, 0])
    cube([1, 1, 3.76]);
  translate([109, 95, 0])
    cube([1, 1, 4.16]);
  translate([110, 95, 0])
    cube([1, 1, 5.41]);
  translate([111, 95, 0])
    cube([1, 1, 5.84]);
  translate([112, 95, 0])
    cube([1, 1, 5.37]);
  translate([113, 95, 0])
    cube([1, 1, 5.65]);
  translate([114, 95, 0])
    cube([1, 1, 2.90]);
  translate([115, 95, 0])
    cube([1, 1, 2.47]);
  translate([116, 95, 0])
    cube([1, 1, 2.47]);
  translate([117, 95, 0])
    cube([1, 1, 2.67]);
  translate([118, 95, 0])
    cube([1, 1, 2.55]);
  translate([119, 95, 0])
    cube([1, 1, 2.59]);
  translate([120, 95, 0])
    cube([1, 1, 2.16]);
  translate([121, 95, 0])
    cube([1, 1, 1.29]);
  translate([122, 95, 0])
    cube([1, 1, 1.73]);
  translate([123, 95, 0])
    cube([1, 1, 1.65]);
  translate([124, 95, 0])
    cube([1, 1, 1.57]);
  translate([125, 95, 0])
    cube([1, 1, 1.49]);
  translate([126, 95, 0])
    cube([1, 1, 2.00]);
  translate([127, 95, 0])
    cube([1, 1, 2.16]);
  translate([128, 95, 0])
    cube([1, 1, 7.33]);
  translate([129, 95, 0])
    cube([1, 1, 6.43]);
  translate([130, 95, 0])
    cube([1, 1, 1.37]);
  translate([131, 95, 0])
    cube([1, 1, 1.25]);
  translate([132, 95, 0])
    cube([1, 1, 1.25]);
  translate([133, 95, 0])
    cube([1, 1, 1.25]);
  translate([134, 95, 0])
    cube([1, 1, 1.22]);
  translate([135, 95, 0])
    cube([1, 1, 1.18]);
  translate([136, 95, 0])
    cube([1, 1, 1.33]);
  translate([137, 95, 0])
    cube([1, 1, 1.29]);
  translate([138, 95, 0])
    cube([1, 1, 1.29]);
  translate([139, 95, 0])
    cube([1, 1, 1.29]);
  translate([140, 95, 0])
    cube([1, 1, 1.29]);
  translate([141, 95, 0])
    cube([1, 1, 1.25]);
  translate([142, 95, 0])
    cube([1, 1, 1.29]);
  translate([143, 95, 0])
    cube([1, 1, 1.29]);
  translate([144, 95, 0])
    cube([1, 1, 1.29]);
  translate([145, 95, 0])
    cube([1, 1, 1.29]);
  translate([146, 95, 0])
    cube([1, 1, 1.29]);
  translate([147, 95, 0])
    cube([1, 1, 1.29]);
  translate([148, 95, 0])
    cube([1, 1, 1.29]);
  translate([149, 95, 0])
    cube([1, 1, 1.29]);
  translate([150, 95, 0])
    cube([1, 1, 1.29]);
  translate([151, 95, 0])
    cube([1, 1, 1.29]);
  translate([152, 95, 0])
    cube([1, 1, 1.33]);
  translate([153, 95, 0])
    cube([1, 1, 1.25]);
  translate([154, 95, 0])
    cube([1, 1, 1.29]);
  translate([155, 95, 0])
    cube([1, 1, 1.33]);
  translate([156, 95, 0])
    cube([1, 1, 1.25]);
  translate([157, 95, 0])
    cube([1, 1, 1.37]);
  translate([158, 95, 0])
    cube([1, 1, 1.29]);
  translate([159, 95, 0])
    cube([1, 1, 1.37]);
  translate([160, 95, 0])
    cube([1, 1, 1.29]);
  translate([161, 95, 0])
    cube([1, 1, 1.33]);
  translate([162, 95, 0])
    cube([1, 1, 1.33]);
  translate([163, 95, 0])
    cube([1, 1, 1.29]);
  translate([164, 95, 0])
    cube([1, 1, 1.33]);
  translate([165, 95, 0])
    cube([1, 1, 1.33]);
  translate([166, 95, 0])
    cube([1, 1, 1.33]);
  translate([167, 95, 0])
    cube([1, 1, 1.33]);
  translate([168, 95, 0])
    cube([1, 1, 1.33]);
  translate([169, 95, 0])
    cube([1, 1, 1.33]);
  translate([170, 95, 0])
    cube([1, 1, 1.33]);
  translate([171, 95, 0])
    cube([1, 1, 1.29]);
  translate([172, 95, 0])
    cube([1, 1, 1.33]);
  translate([173, 95, 0])
    cube([1, 1, 1.33]);
  translate([174, 95, 0])
    cube([1, 1, 1.33]);
  translate([175, 95, 0])
    cube([1, 1, 1.33]);
  translate([176, 95, 0])
    cube([1, 1, 1.33]);
  translate([177, 95, 0])
    cube([1, 1, 1.33]);
  translate([178, 95, 0])
    cube([1, 1, 1.33]);
  translate([179, 95, 0])
    cube([1, 1, 1.33]);
  translate([180, 95, 0])
    cube([1, 1, 1.33]);
  translate([181, 95, 0])
    cube([1, 1, 1.33]);
  translate([182, 95, 0])
    cube([1, 1, 1.33]);
  translate([183, 95, 0])
    cube([1, 1, 1.33]);
  translate([184, 95, 0])
    cube([1, 1, 1.33]);
  translate([185, 95, 0])
    cube([1, 1, 1.33]);
  translate([186, 95, 0])
    cube([1, 1, 1.33]);
  translate([187, 95, 0])
    cube([1, 1, 1.33]);
  translate([188, 95, 0])
    cube([1, 1, 1.33]);
  translate([189, 95, 0])
    cube([1, 1, 1.33]);
  translate([190, 95, 0])
    cube([1, 1, 1.33]);
  translate([191, 95, 0])
    cube([1, 1, 1.33]);
  translate([192, 95, 0])
    cube([1, 1, 1.33]);
  translate([193, 95, 0])
    cube([1, 1, 1.33]);
  translate([194, 95, 0])
    cube([1, 1, 1.33]);
  translate([195, 95, 0])
    cube([1, 1, 1.33]);
  translate([196, 95, 0])
    cube([1, 1, 1.33]);
  translate([197, 95, 0])
    cube([1, 1, 1.33]);
  translate([198, 95, 0])
    cube([1, 1, 1.33]);
  translate([199, 95, 0])
    cube([1, 1, 1.33]);
  translate([200, 95, 0])
    cube([1, 1, 1.33]);
  translate([201, 95, 0])
    cube([1, 1, 1.33]);
  translate([202, 95, 0])
    cube([1, 1, 1.33]);
  translate([203, 95, 0])
    cube([1, 1, 1.33]);
  translate([204, 95, 0])
    cube([1, 1, 1.33]);
  translate([205, 95, 0])
    cube([1, 1, 1.33]);
  translate([206, 95, 0])
    cube([1, 1, 1.33]);
  translate([207, 95, 0])
    cube([1, 1, 1.33]);
  translate([208, 95, 0])
    cube([1, 1, 1.33]);
  translate([209, 95, 0])
    cube([1, 1, 1.33]);
  translate([210, 95, 0])
    cube([1, 1, 1.33]);
  translate([211, 95, 0])
    cube([1, 1, 1.33]);
  translate([212, 95, 0])
    cube([1, 1, 1.33]);
  translate([213, 95, 0])
    cube([1, 1, 1.33]);
  translate([214, 95, 0])
    cube([1, 1, 1.33]);
  translate([215, 95, 0])
    cube([1, 1, 1.33]);
  translate([216, 95, 0])
    cube([1, 1, 1.33]);
  translate([217, 95, 0])
    cube([1, 1, 1.33]);
  translate([218, 95, 0])
    cube([1, 1, 1.29]);
  translate([219, 95, 0])
    cube([1, 1, 1.33]);
  translate([220, 95, 0])
    cube([1, 1, 1.25]);
  translate([221, 95, 0])
    cube([1, 1, 1.33]);
  translate([222, 95, 0])
    cube([1, 1, 1.33]);
  translate([223, 95, 0])
    cube([1, 1, 1.37]);
  translate([224, 95, 0])
    cube([1, 1, 1.33]);
  translate([225, 95, 0])
    cube([1, 1, 1.29]);
  translate([226, 95, 0])
    cube([1, 1, 1.29]);
  translate([227, 95, 0])
    cube([1, 1, 1.33]);
  translate([228, 95, 0])
    cube([1, 1, 1.33]);
  translate([229, 95, 0])
    cube([1, 1, 1.33]);
  translate([230, 95, 0])
    cube([1, 1, 1.33]);
  translate([231, 95, 0])
    cube([1, 1, 1.29]);
  translate([232, 95, 0])
    cube([1, 1, 1.29]);
  translate([233, 95, 0])
    cube([1, 1, 1.29]);
  translate([234, 95, 0])
    cube([1, 1, 1.29]);
  translate([235, 95, 0])
    cube([1, 1, 1.29]);
  translate([236, 95, 0])
    cube([1, 1, 1.33]);
  translate([237, 95, 0])
    cube([1, 1, 1.33]);
  translate([238, 95, 0])
    cube([1, 1, 1.29]);
  translate([239, 95, 0])
    cube([1, 1, 1.37]);
  translate([240, 95, 0])
    cube([1, 1, 1.33]);
  translate([241, 95, 0])
    cube([1, 1, 1.29]);
  translate([242, 95, 0])
    cube([1, 1, 1.29]);
  translate([243, 95, 0])
    cube([1, 1, 1.29]);
  translate([244, 95, 0])
    cube([1, 1, 1.29]);
  translate([245, 95, 0])
    cube([1, 1, 1.33]);
  translate([246, 95, 0])
    cube([1, 1, 1.33]);
  translate([0, 96, 0])
    cube([1, 1, 1.45]);
  translate([1, 96, 0])
    cube([1, 1, 1.45]);
  translate([2, 96, 0])
    cube([1, 1, 1.45]);
  translate([3, 96, 0])
    cube([1, 1, 1.45]);
  translate([4, 96, 0])
    cube([1, 1, 1.45]);
  translate([5, 96, 0])
    cube([1, 1, 1.45]);
  translate([6, 96, 0])
    cube([1, 1, 1.45]);
  translate([7, 96, 0])
    cube([1, 1, 1.45]);
  translate([8, 96, 0])
    cube([1, 1, 1.45]);
  translate([9, 96, 0])
    cube([1, 1, 1.45]);
  translate([10, 96, 0])
    cube([1, 1, 1.45]);
  translate([11, 96, 0])
    cube([1, 1, 1.45]);
  translate([12, 96, 0])
    cube([1, 1, 1.45]);
  translate([13, 96, 0])
    cube([1, 1, 1.45]);
  translate([14, 96, 0])
    cube([1, 1, 1.45]);
  translate([15, 96, 0])
    cube([1, 1, 1.45]);
  translate([16, 96, 0])
    cube([1, 1, 1.45]);
  translate([17, 96, 0])
    cube([1, 1, 1.45]);
  translate([18, 96, 0])
    cube([1, 1, 1.45]);
  translate([19, 96, 0])
    cube([1, 1, 1.37]);
  translate([20, 96, 0])
    cube([1, 1, 1.37]);
  translate([21, 96, 0])
    cube([1, 1, 1.49]);
  translate([22, 96, 0])
    cube([1, 1, 1.45]);
  translate([23, 96, 0])
    cube([1, 1, 1.45]);
  translate([24, 96, 0])
    cube([1, 1, 1.45]);
  translate([25, 96, 0])
    cube([1, 1, 1.41]);
  translate([26, 96, 0])
    cube([1, 1, 1.49]);
  translate([27, 96, 0])
    cube([1, 1, 1.41]);
  translate([28, 96, 0])
    cube([1, 1, 1.41]);
  translate([29, 96, 0])
    cube([1, 1, 1.41]);
  translate([30, 96, 0])
    cube([1, 1, 1.41]);
  translate([31, 96, 0])
    cube([1, 1, 1.41]);
  translate([32, 96, 0])
    cube([1, 1, 1.41]);
  translate([33, 96, 0])
    cube([1, 1, 1.37]);
  translate([34, 96, 0])
    cube([1, 1, 1.73]);
  translate([35, 96, 0])
    cube([1, 1, 0.67]);
  translate([36, 96, 0])
    cube([1, 1, 2.63]);
  translate([37, 96, 0])
    cube([1, 1, 1.22]);
  translate([38, 96, 0])
    cube([1, 1, 1.25]);
  translate([39, 96, 0])
    cube([1, 1, 1.14]);
  translate([40, 96, 0])
    cube([1, 1, 0.82]);
  translate([41, 96, 0])
    cube([1, 1, 0.90]);
  translate([42, 96, 0])
    cube([1, 1, 0.90]);
  translate([43, 96, 0])
    cube([1, 1, 1.06]);
  translate([44, 96, 0])
    cube([1, 1, 1.33]);
  translate([45, 96, 0])
    cube([1, 1, 1.29]);
  translate([46, 96, 0])
    cube([1, 1, 1.29]);
  translate([47, 96, 0])
    cube([1, 1, 1.37]);
  translate([48, 96, 0])
    cube([1, 1, 1.61]);
  translate([49, 96, 0])
    cube([1, 1, 1.41]);
  translate([50, 96, 0])
    cube([1, 1, 1.65]);
  translate([51, 96, 0])
    cube([1, 1, 1.25]);
  translate([52, 96, 0])
    cube([1, 1, 5.41]);
  translate([53, 96, 0])
    cube([1, 1, 1.33]);
  translate([54, 96, 0])
    cube([1, 1, 1.49]);
  translate([55, 96, 0])
    cube([1, 1, 7.37]);
  translate([56, 96, 0])
    cube([1, 1, 7.02]);
  translate([57, 96, 0])
    cube([1, 1, 6.08]);
  translate([58, 96, 0])
    cube([1, 1, 5.22]);
  translate([59, 96, 0])
    cube([1, 1, 4.67]);
  translate([60, 96, 0])
    cube([1, 1, 4.67]);
  translate([61, 96, 0])
    cube([1, 1, 5.06]);
  translate([62, 96, 0])
    cube([1, 1, 5.25]);
  translate([63, 96, 0])
    cube([1, 1, 5.53]);
  translate([64, 96, 0])
    cube([1, 1, 5.76]);
  translate([65, 96, 0])
    cube([1, 1, 5.76]);
  translate([66, 96, 0])
    cube([1, 1, 5.88]);
  translate([67, 96, 0])
    cube([1, 1, 5.88]);
  translate([68, 96, 0])
    cube([1, 1, 5.92]);
  translate([69, 96, 0])
    cube([1, 1, 5.88]);
  translate([70, 96, 0])
    cube([1, 1, 5.84]);
  translate([71, 96, 0])
    cube([1, 1, 5.53]);
  translate([72, 96, 0])
    cube([1, 1, 4.55]);
  translate([73, 96, 0])
    cube([1, 1, 2.78]);
  translate([74, 96, 0])
    cube([1, 1, 1.06]);
  translate([75, 96, 0])
    cube([1, 1, 0.43]);
  translate([76, 96, 0])
    cube([1, 1, 1.02]);
  translate([77, 96, 0])
    cube([1, 1, 0.94]);
  translate([78, 96, 0])
    cube([1, 1, 1.10]);
  translate([79, 96, 0])
    cube([1, 1, 1.49]);
  translate([80, 96, 0])
    cube([1, 1, 1.53]);
  translate([81, 96, 0])
    cube([1, 1, 1.33]);
  translate([82, 96, 0])
    cube([1, 1, 1.73]);
  translate([83, 96, 0])
    cube([1, 1, 1.37]);
  translate([84, 96, 0])
    cube([1, 1, 1.37]);
  translate([85, 96, 0])
    cube([1, 1, 0.75]);
  translate([86, 96, 0])
    cube([1, 1, 0.94]);
  translate([87, 96, 0])
    cube([1, 1, 0.90]);
  translate([88, 96, 0])
    cube([1, 1, 0.90]);
  translate([89, 96, 0])
    cube([1, 1, 0.55]);
  translate([90, 96, 0])
    cube([1, 1, 0.86]);
  translate([91, 96, 0])
    cube([1, 1, 0.75]);
  translate([92, 96, 0])
    cube([1, 1, 1.06]);
  translate([93, 96, 0])
    cube([1, 1, 1.22]);
  translate([94, 96, 0])
    cube([1, 1, 2.94]);
  translate([95, 96, 0])
    cube([1, 1, 1.57]);
  translate([96, 96, 0])
    cube([1, 1, 1.73]);
  translate([97, 96, 0])
    cube([1, 1, 1.14]);
  translate([98, 96, 0])
    cube([1, 1, 2.47]);
  translate([99, 96, 0])
    cube([1, 1, 2.00]);
  translate([100, 96, 0])
    cube([1, 1, 1.76]);
  translate([101, 96, 0])
    cube([1, 1, 4.27]);
  translate([102, 96, 0])
    cube([1, 1, 5.14]);
  translate([103, 96, 0])
    cube([1, 1, 5.69]);
  translate([104, 96, 0])
    cube([1, 1, 5.49]);
  translate([105, 96, 0])
    cube([1, 1, 5.49]);
  translate([106, 96, 0])
    cube([1, 1, 3.73]);
  translate([107, 96, 0])
    cube([1, 1, 1.02]);
  translate([108, 96, 0])
    cube([1, 1, 1.29]);
  translate([109, 96, 0])
    cube([1, 1, 1.76]);
  translate([110, 96, 0])
    cube([1, 1, 1.57]);
  translate([111, 96, 0])
    cube([1, 1, 1.69]);
  translate([112, 96, 0])
    cube([1, 1, 2.98]);
  translate([113, 96, 0])
    cube([1, 1, 2.75]);
  translate([114, 96, 0])
    cube([1, 1, 2.71]);
  translate([115, 96, 0])
    cube([1, 1, 2.39]);
  translate([116, 96, 0])
    cube([1, 1, 2.35]);
  translate([117, 96, 0])
    cube([1, 1, 2.16]);
  translate([118, 96, 0])
    cube([1, 1, 2.20]);
  translate([119, 96, 0])
    cube([1, 1, 2.55]);
  translate([120, 96, 0])
    cube([1, 1, 3.02]);
  translate([121, 96, 0])
    cube([1, 1, 2.31]);
  translate([122, 96, 0])
    cube([1, 1, 1.33]);
  translate([123, 96, 0])
    cube([1, 1, 1.80]);
  translate([124, 96, 0])
    cube([1, 1, 1.88]);
  translate([125, 96, 0])
    cube([1, 1, 1.22]);
  translate([126, 96, 0])
    cube([1, 1, 1.41]);
  translate([127, 96, 0])
    cube([1, 1, 0.78]);
  translate([128, 96, 0])
    cube([1, 1, 3.25]);
  translate([129, 96, 0])
    cube([1, 1, 1.25]);
  translate([130, 96, 0])
    cube([1, 1, 1.29]);
  translate([131, 96, 0])
    cube([1, 1, 1.25]);
  translate([132, 96, 0])
    cube([1, 1, 1.25]);
  translate([133, 96, 0])
    cube([1, 1, 1.25]);
  translate([134, 96, 0])
    cube([1, 1, 1.25]);
  translate([135, 96, 0])
    cube([1, 1, 1.29]);
  translate([136, 96, 0])
    cube([1, 1, 1.29]);
  translate([137, 96, 0])
    cube([1, 1, 1.33]);
  translate([138, 96, 0])
    cube([1, 1, 1.33]);
  translate([139, 96, 0])
    cube([1, 1, 1.29]);
  translate([140, 96, 0])
    cube([1, 1, 1.29]);
  translate([141, 96, 0])
    cube([1, 1, 1.29]);
  translate([142, 96, 0])
    cube([1, 1, 1.29]);
  translate([143, 96, 0])
    cube([1, 1, 1.29]);
  translate([144, 96, 0])
    cube([1, 1, 1.29]);
  translate([145, 96, 0])
    cube([1, 1, 1.25]);
  translate([146, 96, 0])
    cube([1, 1, 1.29]);
  translate([147, 96, 0])
    cube([1, 1, 1.29]);
  translate([148, 96, 0])
    cube([1, 1, 1.29]);
  translate([149, 96, 0])
    cube([1, 1, 1.29]);
  translate([150, 96, 0])
    cube([1, 1, 1.33]);
  translate([151, 96, 0])
    cube([1, 1, 1.29]);
  translate([152, 96, 0])
    cube([1, 1, 1.29]);
  translate([153, 96, 0])
    cube([1, 1, 1.33]);
  translate([154, 96, 0])
    cube([1, 1, 1.33]);
  translate([155, 96, 0])
    cube([1, 1, 1.33]);
  translate([156, 96, 0])
    cube([1, 1, 1.29]);
  translate([157, 96, 0])
    cube([1, 1, 1.33]);
  translate([158, 96, 0])
    cube([1, 1, 1.33]);
  translate([159, 96, 0])
    cube([1, 1, 1.33]);
  translate([160, 96, 0])
    cube([1, 1, 1.33]);
  translate([161, 96, 0])
    cube([1, 1, 1.33]);
  translate([162, 96, 0])
    cube([1, 1, 1.33]);
  translate([163, 96, 0])
    cube([1, 1, 1.37]);
  translate([164, 96, 0])
    cube([1, 1, 1.33]);
  translate([165, 96, 0])
    cube([1, 1, 1.33]);
  translate([166, 96, 0])
    cube([1, 1, 1.33]);
  translate([167, 96, 0])
    cube([1, 1, 1.33]);
  translate([168, 96, 0])
    cube([1, 1, 1.33]);
  translate([169, 96, 0])
    cube([1, 1, 1.33]);
  translate([170, 96, 0])
    cube([1, 1, 1.33]);
  translate([171, 96, 0])
    cube([1, 1, 1.29]);
  translate([172, 96, 0])
    cube([1, 1, 1.33]);
  translate([173, 96, 0])
    cube([1, 1, 1.33]);
  translate([174, 96, 0])
    cube([1, 1, 1.33]);
  translate([175, 96, 0])
    cube([1, 1, 1.33]);
  translate([176, 96, 0])
    cube([1, 1, 1.33]);
  translate([177, 96, 0])
    cube([1, 1, 1.33]);
  translate([178, 96, 0])
    cube([1, 1, 1.33]);
  translate([179, 96, 0])
    cube([1, 1, 1.33]);
  translate([180, 96, 0])
    cube([1, 1, 1.33]);
  translate([181, 96, 0])
    cube([1, 1, 1.33]);
  translate([182, 96, 0])
    cube([1, 1, 1.33]);
  translate([183, 96, 0])
    cube([1, 1, 1.33]);
  translate([184, 96, 0])
    cube([1, 1, 1.33]);
  translate([185, 96, 0])
    cube([1, 1, 1.33]);
  translate([186, 96, 0])
    cube([1, 1, 1.33]);
  translate([187, 96, 0])
    cube([1, 1, 1.33]);
  translate([188, 96, 0])
    cube([1, 1, 1.33]);
  translate([189, 96, 0])
    cube([1, 1, 1.33]);
  translate([190, 96, 0])
    cube([1, 1, 1.33]);
  translate([191, 96, 0])
    cube([1, 1, 1.33]);
  translate([192, 96, 0])
    cube([1, 1, 1.33]);
  translate([193, 96, 0])
    cube([1, 1, 1.33]);
  translate([194, 96, 0])
    cube([1, 1, 1.33]);
  translate([195, 96, 0])
    cube([1, 1, 1.33]);
  translate([196, 96, 0])
    cube([1, 1, 1.33]);
  translate([197, 96, 0])
    cube([1, 1, 1.33]);
  translate([198, 96, 0])
    cube([1, 1, 1.33]);
  translate([199, 96, 0])
    cube([1, 1, 1.33]);
  translate([200, 96, 0])
    cube([1, 1, 1.33]);
  translate([201, 96, 0])
    cube([1, 1, 1.33]);
  translate([202, 96, 0])
    cube([1, 1, 1.33]);
  translate([203, 96, 0])
    cube([1, 1, 1.33]);
  translate([204, 96, 0])
    cube([1, 1, 1.33]);
  translate([205, 96, 0])
    cube([1, 1, 1.33]);
  translate([206, 96, 0])
    cube([1, 1, 1.33]);
  translate([207, 96, 0])
    cube([1, 1, 1.33]);
  translate([208, 96, 0])
    cube([1, 1, 1.33]);
  translate([209, 96, 0])
    cube([1, 1, 1.33]);
  translate([210, 96, 0])
    cube([1, 1, 1.33]);
  translate([211, 96, 0])
    cube([1, 1, 1.33]);
  translate([212, 96, 0])
    cube([1, 1, 1.33]);
  translate([213, 96, 0])
    cube([1, 1, 1.33]);
  translate([214, 96, 0])
    cube([1, 1, 1.33]);
  translate([215, 96, 0])
    cube([1, 1, 1.33]);
  translate([216, 96, 0])
    cube([1, 1, 1.33]);
  translate([217, 96, 0])
    cube([1, 1, 1.33]);
  translate([218, 96, 0])
    cube([1, 1, 1.33]);
  translate([219, 96, 0])
    cube([1, 1, 1.33]);
  translate([220, 96, 0])
    cube([1, 1, 1.33]);
  translate([221, 96, 0])
    cube([1, 1, 1.33]);
  translate([222, 96, 0])
    cube([1, 1, 1.33]);
  translate([223, 96, 0])
    cube([1, 1, 1.33]);
  translate([224, 96, 0])
    cube([1, 1, 1.33]);
  translate([225, 96, 0])
    cube([1, 1, 1.33]);
  translate([226, 96, 0])
    cube([1, 1, 1.33]);
  translate([227, 96, 0])
    cube([1, 1, 1.33]);
  translate([228, 96, 0])
    cube([1, 1, 1.33]);
  translate([229, 96, 0])
    cube([1, 1, 1.33]);
  translate([230, 96, 0])
    cube([1, 1, 1.33]);
  translate([231, 96, 0])
    cube([1, 1, 1.33]);
  translate([232, 96, 0])
    cube([1, 1, 1.29]);
  translate([233, 96, 0])
    cube([1, 1, 1.25]);
  translate([234, 96, 0])
    cube([1, 1, 1.37]);
  translate([235, 96, 0])
    cube([1, 1, 1.25]);
  translate([236, 96, 0])
    cube([1, 1, 1.33]);
  translate([237, 96, 0])
    cube([1, 1, 1.29]);
  translate([238, 96, 0])
    cube([1, 1, 1.33]);
  translate([239, 96, 0])
    cube([1, 1, 1.33]);
  translate([240, 96, 0])
    cube([1, 1, 1.25]);
  translate([241, 96, 0])
    cube([1, 1, 1.29]);
  translate([242, 96, 0])
    cube([1, 1, 1.33]);
  translate([243, 96, 0])
    cube([1, 1, 1.29]);
  translate([244, 96, 0])
    cube([1, 1, 1.29]);
  translate([245, 96, 0])
    cube([1, 1, 1.29]);
  translate([246, 96, 0])
    cube([1, 1, 1.29]);
  translate([0, 97, 0])
    cube([1, 1, 1.45]);
  translate([1, 97, 0])
    cube([1, 1, 1.45]);
  translate([2, 97, 0])
    cube([1, 1, 1.45]);
  translate([3, 97, 0])
    cube([1, 1, 1.45]);
  translate([4, 97, 0])
    cube([1, 1, 1.45]);
  translate([5, 97, 0])
    cube([1, 1, 1.45]);
  translate([6, 97, 0])
    cube([1, 1, 1.45]);
  translate([7, 97, 0])
    cube([1, 1, 1.45]);
  translate([8, 97, 0])
    cube([1, 1, 1.45]);
  translate([9, 97, 0])
    cube([1, 1, 1.45]);
  translate([10, 97, 0])
    cube([1, 1, 1.45]);
  translate([11, 97, 0])
    cube([1, 1, 1.45]);
  translate([12, 97, 0])
    cube([1, 1, 1.45]);
  translate([13, 97, 0])
    cube([1, 1, 1.45]);
  translate([14, 97, 0])
    cube([1, 1, 1.45]);
  translate([15, 97, 0])
    cube([1, 1, 1.45]);
  translate([16, 97, 0])
    cube([1, 1, 1.41]);
  translate([17, 97, 0])
    cube([1, 1, 1.45]);
  translate([18, 97, 0])
    cube([1, 1, 1.45]);
  translate([19, 97, 0])
    cube([1, 1, 1.45]);
  translate([20, 97, 0])
    cube([1, 1, 1.41]);
  translate([21, 97, 0])
    cube([1, 1, 1.45]);
  translate([22, 97, 0])
    cube([1, 1, 1.41]);
  translate([23, 97, 0])
    cube([1, 1, 1.41]);
  translate([24, 97, 0])
    cube([1, 1, 1.41]);
  translate([25, 97, 0])
    cube([1, 1, 1.41]);
  translate([26, 97, 0])
    cube([1, 1, 1.45]);
  translate([27, 97, 0])
    cube([1, 1, 1.45]);
  translate([28, 97, 0])
    cube([1, 1, 1.41]);
  translate([29, 97, 0])
    cube([1, 1, 1.41]);
  translate([30, 97, 0])
    cube([1, 1, 1.41]);
  translate([31, 97, 0])
    cube([1, 1, 1.41]);
  translate([32, 97, 0])
    cube([1, 1, 1.41]);
  translate([33, 97, 0])
    cube([1, 1, 1.29]);
  translate([34, 97, 0])
    cube([1, 1, 1.41]);
  translate([35, 97, 0])
    cube([1, 1, 5.14]);
  translate([36, 97, 0])
    cube([1, 1, 2.86]);
  translate([37, 97, 0])
    cube([1, 1, 2.47]);
  translate([38, 97, 0])
    cube([1, 1, 1.57]);
  translate([39, 97, 0])
    cube([1, 1, 1.37]);
  translate([40, 97, 0])
    cube([1, 1, 1.22]);
  translate([41, 97, 0])
    cube([1, 1, 0.90]);
  translate([42, 97, 0])
    cube([1, 1, 0.90]);
  translate([43, 97, 0])
    cube([1, 1, 1.61]);
  translate([44, 97, 0])
    cube([1, 1, 1.22]);
  translate([45, 97, 0])
    cube([1, 1, 1.25]);
  translate([46, 97, 0])
    cube([1, 1, 1.29]);
  translate([47, 97, 0])
    cube([1, 1, 1.37]);
  translate([48, 97, 0])
    cube([1, 1, 1.41]);
  translate([49, 97, 0])
    cube([1, 1, 1.57]);
  translate([50, 97, 0])
    cube([1, 1, 1.65]);
  translate([51, 97, 0])
    cube([1, 1, 1.76]);
  translate([52, 97, 0])
    cube([1, 1, 5.65]);
  translate([53, 97, 0])
    cube([1, 1, 2.35]);
  translate([54, 97, 0])
    cube([1, 1, 1.49]);
  translate([55, 97, 0])
    cube([1, 1, 7.69]);
  translate([56, 97, 0])
    cube([1, 1, 7.18]);
  translate([57, 97, 0])
    cube([1, 1, 6.12]);
  translate([58, 97, 0])
    cube([1, 1, 5.18]);
  translate([59, 97, 0])
    cube([1, 1, 4.51]);
  translate([60, 97, 0])
    cube([1, 1, 4.75]);
  translate([61, 97, 0])
    cube([1, 1, 5.18]);
  translate([62, 97, 0])
    cube([1, 1, 5.37]);
  translate([63, 97, 0])
    cube([1, 1, 5.65]);
  translate([64, 97, 0])
    cube([1, 1, 5.80]);
  translate([65, 97, 0])
    cube([1, 1, 5.84]);
  translate([66, 97, 0])
    cube([1, 1, 5.92]);
  translate([67, 97, 0])
    cube([1, 1, 6.00]);
  translate([68, 97, 0])
    cube([1, 1, 6.04]);
  translate([69, 97, 0])
    cube([1, 1, 6.00]);
  translate([70, 97, 0])
    cube([1, 1, 5.88]);
  translate([71, 97, 0])
    cube([1, 1, 5.92]);
  translate([72, 97, 0])
    cube([1, 1, 5.33]);
  translate([73, 97, 0])
    cube([1, 1, 3.80]);
  translate([74, 97, 0])
    cube([1, 1, 1.41]);
  translate([75, 97, 0])
    cube([1, 1, 0.75]);
  translate([76, 97, 0])
    cube([1, 1, 1.33]);
  translate([77, 97, 0])
    cube([1, 1, 1.96]);
  translate([78, 97, 0])
    cube([1, 1, 1.29]);
  translate([79, 97, 0])
    cube([1, 1, 1.37]);
  translate([80, 97, 0])
    cube([1, 1, 1.41]);
  translate([81, 97, 0])
    cube([1, 1, 1.41]);
  translate([82, 97, 0])
    cube([1, 1, 1.96]);
  translate([83, 97, 0])
    cube([1, 1, 1.69]);
  translate([84, 97, 0])
    cube([1, 1, 1.73]);
  translate([85, 97, 0])
    cube([1, 1, 1.10]);
  translate([86, 97, 0])
    cube([1, 1, 1.25]);
  translate([87, 97, 0])
    cube([1, 1, 1.14]);
  translate([88, 97, 0])
    cube([1, 1, 1.92]);
  translate([89, 97, 0])
    cube([1, 1, 1.02]);
  translate([90, 97, 0])
    cube([1, 1, 1.14]);
  translate([91, 97, 0])
    cube([1, 1, 2.16]);
  translate([92, 97, 0])
    cube([1, 1, 3.22]);
  translate([93, 97, 0])
    cube([1, 1, 1.76]);
  translate([94, 97, 0])
    cube([1, 1, 3.80]);
  translate([95, 97, 0])
    cube([1, 1, 2.20]);
  translate([96, 97, 0])
    cube([1, 1, 1.37]);
  translate([97, 97, 0])
    cube([1, 1, 1.49]);
  translate([98, 97, 0])
    cube([1, 1, 1.33]);
  translate([99, 97, 0])
    cube([1, 1, 1.96]);
  translate([100, 97, 0])
    cube([1, 1, 1.84]);
  translate([101, 97, 0])
    cube([1, 1, 1.88]);
  translate([102, 97, 0])
    cube([1, 1, 2.43]);
  translate([103, 97, 0])
    cube([1, 1, 1.88]);
  translate([104, 97, 0])
    cube([1, 1, 2.51]);
  translate([105, 97, 0])
    cube([1, 1, 2.24]);
  translate([106, 97, 0])
    cube([1, 1, 2.24]);
  translate([107, 97, 0])
    cube([1, 1, 2.24]);
  translate([108, 97, 0])
    cube([1, 1, 1.06]);
  translate([109, 97, 0])
    cube([1, 1, 1.65]);
  translate([110, 97, 0])
    cube([1, 1, 1.84]);
  translate([111, 97, 0])
    cube([1, 1, 2.00]);
  translate([112, 97, 0])
    cube([1, 1, 1.73]);
  translate([113, 97, 0])
    cube([1, 1, 2.63]);
  translate([114, 97, 0])
    cube([1, 1, 2.55]);
  translate([115, 97, 0])
    cube([1, 1, 2.51]);
  translate([116, 97, 0])
    cube([1, 1, 3.10]);
  translate([117, 97, 0])
    cube([1, 1, 3.14]);
  translate([118, 97, 0])
    cube([1, 1, 2.04]);
  translate([119, 97, 0])
    cube([1, 1, 4.00]);
  translate([120, 97, 0])
    cube([1, 1, 5.45]);
  translate([121, 97, 0])
    cube([1, 1, 5.29]);
  translate([122, 97, 0])
    cube([1, 1, 3.25]);
  translate([123, 97, 0])
    cube([1, 1, 3.53]);
  translate([124, 97, 0])
    cube([1, 1, 4.31]);
  translate([125, 97, 0])
    cube([1, 1, 8.27]);
  translate([126, 97, 0])
    cube([1, 1, 1.49]);
  translate([127, 97, 0])
    cube([1, 1, 2.43]);
  translate([128, 97, 0])
    cube([1, 1, 1.96]);
  translate([129, 97, 0])
    cube([1, 1, 2.12]);
  translate([130, 97, 0])
    cube([1, 1, 2.59]);
  translate([131, 97, 0])
    cube([1, 1, 1.29]);
  translate([132, 97, 0])
    cube([1, 1, 1.25]);
  translate([133, 97, 0])
    cube([1, 1, 1.25]);
  translate([134, 97, 0])
    cube([1, 1, 1.25]);
  translate([135, 97, 0])
    cube([1, 1, 1.29]);
  translate([136, 97, 0])
    cube([1, 1, 1.29]);
  translate([137, 97, 0])
    cube([1, 1, 1.33]);
  translate([138, 97, 0])
    cube([1, 1, 1.33]);
  translate([139, 97, 0])
    cube([1, 1, 1.29]);
  translate([140, 97, 0])
    cube([1, 1, 1.29]);
  translate([141, 97, 0])
    cube([1, 1, 1.29]);
  translate([142, 97, 0])
    cube([1, 1, 1.29]);
  translate([143, 97, 0])
    cube([1, 1, 1.29]);
  translate([144, 97, 0])
    cube([1, 1, 1.29]);
  translate([145, 97, 0])
    cube([1, 1, 1.25]);
  translate([146, 97, 0])
    cube([1, 1, 1.29]);
  translate([147, 97, 0])
    cube([1, 1, 1.29]);
  translate([148, 97, 0])
    cube([1, 1, 1.29]);
  translate([149, 97, 0])
    cube([1, 1, 1.29]);
  translate([150, 97, 0])
    cube([1, 1, 1.33]);
  translate([151, 97, 0])
    cube([1, 1, 1.29]);
  translate([152, 97, 0])
    cube([1, 1, 1.29]);
  translate([153, 97, 0])
    cube([1, 1, 1.33]);
  translate([154, 97, 0])
    cube([1, 1, 1.33]);
  translate([155, 97, 0])
    cube([1, 1, 1.29]);
  translate([156, 97, 0])
    cube([1, 1, 1.29]);
  translate([157, 97, 0])
    cube([1, 1, 1.33]);
  translate([158, 97, 0])
    cube([1, 1, 1.33]);
  translate([159, 97, 0])
    cube([1, 1, 1.33]);
  translate([160, 97, 0])
    cube([1, 1, 1.33]);
  translate([161, 97, 0])
    cube([1, 1, 1.33]);
  translate([162, 97, 0])
    cube([1, 1, 1.33]);
  translate([163, 97, 0])
    cube([1, 1, 1.29]);
  translate([164, 97, 0])
    cube([1, 1, 1.33]);
  translate([165, 97, 0])
    cube([1, 1, 1.33]);
  translate([166, 97, 0])
    cube([1, 1, 1.33]);
  translate([167, 97, 0])
    cube([1, 1, 1.33]);
  translate([168, 97, 0])
    cube([1, 1, 1.33]);
  translate([169, 97, 0])
    cube([1, 1, 1.33]);
  translate([170, 97, 0])
    cube([1, 1, 1.33]);
  translate([171, 97, 0])
    cube([1, 1, 1.29]);
  translate([172, 97, 0])
    cube([1, 1, 1.33]);
  translate([173, 97, 0])
    cube([1, 1, 1.33]);
  translate([174, 97, 0])
    cube([1, 1, 1.33]);
  translate([175, 97, 0])
    cube([1, 1, 1.33]);
  translate([176, 97, 0])
    cube([1, 1, 1.33]);
  translate([177, 97, 0])
    cube([1, 1, 1.33]);
  translate([178, 97, 0])
    cube([1, 1, 1.33]);
  translate([179, 97, 0])
    cube([1, 1, 1.33]);
  translate([180, 97, 0])
    cube([1, 1, 1.33]);
  translate([181, 97, 0])
    cube([1, 1, 1.33]);
  translate([182, 97, 0])
    cube([1, 1, 1.33]);
  translate([183, 97, 0])
    cube([1, 1, 1.33]);
  translate([184, 97, 0])
    cube([1, 1, 1.33]);
  translate([185, 97, 0])
    cube([1, 1, 1.33]);
  translate([186, 97, 0])
    cube([1, 1, 1.33]);
  translate([187, 97, 0])
    cube([1, 1, 1.33]);
  translate([188, 97, 0])
    cube([1, 1, 1.33]);
  translate([189, 97, 0])
    cube([1, 1, 1.33]);
  translate([190, 97, 0])
    cube([1, 1, 1.33]);
  translate([191, 97, 0])
    cube([1, 1, 1.33]);
  translate([192, 97, 0])
    cube([1, 1, 1.33]);
  translate([193, 97, 0])
    cube([1, 1, 1.33]);
  translate([194, 97, 0])
    cube([1, 1, 1.33]);
  translate([195, 97, 0])
    cube([1, 1, 1.33]);
  translate([196, 97, 0])
    cube([1, 1, 1.33]);
  translate([197, 97, 0])
    cube([1, 1, 1.33]);
  translate([198, 97, 0])
    cube([1, 1, 1.33]);
  translate([199, 97, 0])
    cube([1, 1, 1.33]);
  translate([200, 97, 0])
    cube([1, 1, 1.33]);
  translate([201, 97, 0])
    cube([1, 1, 1.33]);
  translate([202, 97, 0])
    cube([1, 1, 1.33]);
  translate([203, 97, 0])
    cube([1, 1, 1.33]);
  translate([204, 97, 0])
    cube([1, 1, 1.33]);
  translate([205, 97, 0])
    cube([1, 1, 1.33]);
  translate([206, 97, 0])
    cube([1, 1, 1.33]);
  translate([207, 97, 0])
    cube([1, 1, 1.33]);
  translate([208, 97, 0])
    cube([1, 1, 1.33]);
  translate([209, 97, 0])
    cube([1, 1, 1.33]);
  translate([210, 97, 0])
    cube([1, 1, 1.33]);
  translate([211, 97, 0])
    cube([1, 1, 1.33]);
  translate([212, 97, 0])
    cube([1, 1, 1.33]);
  translate([213, 97, 0])
    cube([1, 1, 1.33]);
  translate([214, 97, 0])
    cube([1, 1, 1.33]);
  translate([215, 97, 0])
    cube([1, 1, 1.33]);
  translate([216, 97, 0])
    cube([1, 1, 1.33]);
  translate([217, 97, 0])
    cube([1, 1, 1.33]);
  translate([218, 97, 0])
    cube([1, 1, 1.33]);
  translate([219, 97, 0])
    cube([1, 1, 1.33]);
  translate([220, 97, 0])
    cube([1, 1, 1.33]);
  translate([221, 97, 0])
    cube([1, 1, 1.33]);
  translate([222, 97, 0])
    cube([1, 1, 1.33]);
  translate([223, 97, 0])
    cube([1, 1, 1.33]);
  translate([224, 97, 0])
    cube([1, 1, 1.33]);
  translate([225, 97, 0])
    cube([1, 1, 1.33]);
  translate([226, 97, 0])
    cube([1, 1, 1.33]);
  translate([227, 97, 0])
    cube([1, 1, 1.33]);
  translate([228, 97, 0])
    cube([1, 1, 1.33]);
  translate([229, 97, 0])
    cube([1, 1, 1.33]);
  translate([230, 97, 0])
    cube([1, 1, 1.33]);
  translate([231, 97, 0])
    cube([1, 1, 1.33]);
  translate([232, 97, 0])
    cube([1, 1, 1.33]);
  translate([233, 97, 0])
    cube([1, 1, 1.33]);
  translate([234, 97, 0])
    cube([1, 1, 1.33]);
  translate([235, 97, 0])
    cube([1, 1, 1.33]);
  translate([236, 97, 0])
    cube([1, 1, 1.25]);
  translate([237, 97, 0])
    cube([1, 1, 1.33]);
  translate([238, 97, 0])
    cube([1, 1, 1.33]);
  translate([239, 97, 0])
    cube([1, 1, 1.33]);
  translate([240, 97, 0])
    cube([1, 1, 1.37]);
  translate([241, 97, 0])
    cube([1, 1, 1.29]);
  translate([242, 97, 0])
    cube([1, 1, 1.33]);
  translate([243, 97, 0])
    cube([1, 1, 1.33]);
  translate([244, 97, 0])
    cube([1, 1, 1.33]);
  translate([245, 97, 0])
    cube([1, 1, 1.33]);
  translate([246, 97, 0])
    cube([1, 1, 1.33]);
  translate([0, 98, 0])
    cube([1, 1, 1.45]);
  translate([1, 98, 0])
    cube([1, 1, 1.45]);
  translate([2, 98, 0])
    cube([1, 1, 1.45]);
  translate([3, 98, 0])
    cube([1, 1, 1.45]);
  translate([4, 98, 0])
    cube([1, 1, 1.45]);
  translate([5, 98, 0])
    cube([1, 1, 1.45]);
  translate([6, 98, 0])
    cube([1, 1, 1.45]);
  translate([7, 98, 0])
    cube([1, 1, 1.45]);
  translate([8, 98, 0])
    cube([1, 1, 1.45]);
  translate([9, 98, 0])
    cube([1, 1, 1.45]);
  translate([10, 98, 0])
    cube([1, 1, 1.45]);
  translate([11, 98, 0])
    cube([1, 1, 1.45]);
  translate([12, 98, 0])
    cube([1, 1, 1.45]);
  translate([13, 98, 0])
    cube([1, 1, 1.45]);
  translate([14, 98, 0])
    cube([1, 1, 1.45]);
  translate([15, 98, 0])
    cube([1, 1, 1.45]);
  translate([16, 98, 0])
    cube([1, 1, 1.45]);
  translate([17, 98, 0])
    cube([1, 1, 1.45]);
  translate([18, 98, 0])
    cube([1, 1, 1.37]);
  translate([19, 98, 0])
    cube([1, 1, 1.45]);
  translate([20, 98, 0])
    cube([1, 1, 1.45]);
  translate([21, 98, 0])
    cube([1, 1, 1.45]);
  translate([22, 98, 0])
    cube([1, 1, 1.41]);
  translate([23, 98, 0])
    cube([1, 1, 1.45]);
  translate([24, 98, 0])
    cube([1, 1, 1.45]);
  translate([25, 98, 0])
    cube([1, 1, 1.45]);
  translate([26, 98, 0])
    cube([1, 1, 1.45]);
  translate([27, 98, 0])
    cube([1, 1, 1.41]);
  translate([28, 98, 0])
    cube([1, 1, 1.41]);
  translate([29, 98, 0])
    cube([1, 1, 1.41]);
  translate([30, 98, 0])
    cube([1, 1, 1.41]);
  translate([31, 98, 0])
    cube([1, 1, 1.41]);
  translate([32, 98, 0])
    cube([1, 1, 1.41]);
  translate([33, 98, 0])
    cube([1, 1, 1.41]);
  translate([34, 98, 0])
    cube([1, 1, 1.41]);
  translate([35, 98, 0])
    cube([1, 1, 1.37]);
  translate([36, 98, 0])
    cube([1, 1, 0.98]);
  translate([37, 98, 0])
    cube([1, 1, 3.37]);
  translate([38, 98, 0])
    cube([1, 1, 2.47]);
  translate([39, 98, 0])
    cube([1, 1, 1.22]);
  translate([40, 98, 0])
    cube([1, 1, 1.45]);
  translate([41, 98, 0])
    cube([1, 1, 1.06]);
  translate([42, 98, 0])
    cube([1, 1, 0.90]);
  translate([43, 98, 0])
    cube([1, 1, 2.94]);
  translate([44, 98, 0])
    cube([1, 1, 1.22]);
  translate([45, 98, 0])
    cube([1, 1, 1.25]);
  translate([46, 98, 0])
    cube([1, 1, 1.29]);
  translate([47, 98, 0])
    cube([1, 1, 1.41]);
  translate([48, 98, 0])
    cube([1, 1, 1.61]);
  translate([49, 98, 0])
    cube([1, 1, 1.53]);
  translate([50, 98, 0])
    cube([1, 1, 1.69]);
  translate([51, 98, 0])
    cube([1, 1, 1.57]);
  translate([52, 98, 0])
    cube([1, 1, 3.88]);
  translate([53, 98, 0])
    cube([1, 1, 3.88]);
  translate([54, 98, 0])
    cube([1, 1, 1.14]);
  translate([55, 98, 0])
    cube([1, 1, 8.08]);
  translate([56, 98, 0])
    cube([1, 1, 7.18]);
  translate([57, 98, 0])
    cube([1, 1, 6.27]);
  translate([58, 98, 0])
    cube([1, 1, 5.10]);
  translate([59, 98, 0])
    cube([1, 1, 4.59]);
  translate([60, 98, 0])
    cube([1, 1, 4.90]);
  translate([61, 98, 0])
    cube([1, 1, 5.22]);
  translate([62, 98, 0])
    cube([1, 1, 5.45]);
  translate([63, 98, 0])
    cube([1, 1, 5.69]);
  translate([64, 98, 0])
    cube([1, 1, 5.84]);
  translate([65, 98, 0])
    cube([1, 1, 5.80]);
  translate([66, 98, 0])
    cube([1, 1, 6.00]);
  translate([67, 98, 0])
    cube([1, 1, 6.04]);
  translate([68, 98, 0])
    cube([1, 1, 5.92]);
  translate([69, 98, 0])
    cube([1, 1, 6.08]);
  translate([70, 98, 0])
    cube([1, 1, 6.00]);
  translate([71, 98, 0])
    cube([1, 1, 6.00]);
  translate([72, 98, 0])
    cube([1, 1, 5.69]);
  translate([73, 98, 0])
    cube([1, 1, 4.31]);
  translate([74, 98, 0])
    cube([1, 1, 1.49]);
  translate([75, 98, 0])
    cube([1, 1, 0.59]);
  translate([76, 98, 0])
    cube([1, 1, 1.33]);
  translate([77, 98, 0])
    cube([1, 1, 1.69]);
  translate([78, 98, 0])
    cube([1, 1, 2.04]);
  translate([79, 98, 0])
    cube([1, 1, 2.43]);
  translate([80, 98, 0])
    cube([1, 1, 1.80]);
  translate([81, 98, 0])
    cube([1, 1, 1.41]);
  translate([82, 98, 0])
    cube([1, 1, 2.47]);
  translate([83, 98, 0])
    cube([1, 1, 2.39]);
  translate([84, 98, 0])
    cube([1, 1, 1.61]);
  translate([85, 98, 0])
    cube([1, 1, 1.06]);
  translate([86, 98, 0])
    cube([1, 1, 0.86]);
  translate([87, 98, 0])
    cube([1, 1, 1.18]);
  translate([88, 98, 0])
    cube([1, 1, 0.75]);
  translate([89, 98, 0])
    cube([1, 1, 1.02]);
  translate([90, 98, 0])
    cube([1, 1, 1.18]);
  translate([91, 98, 0])
    cube([1, 1, 0.98]);
  translate([92, 98, 0])
    cube([1, 1, 1.88]);
  translate([93, 98, 0])
    cube([1, 1, 1.69]);
  translate([94, 98, 0])
    cube([1, 1, 3.49]);
  translate([95, 98, 0])
    cube([1, 1, 3.14]);
  translate([96, 98, 0])
    cube([1, 1, 2.51]);
  translate([97, 98, 0])
    cube([1, 1, 2.82]);
  translate([98, 98, 0])
    cube([1, 1, 1.33]);
  translate([99, 98, 0])
    cube([1, 1, 1.25]);
  translate([100, 98, 0])
    cube([1, 1, 1.49]);
  translate([101, 98, 0])
    cube([1, 1, 1.57]);
  translate([102, 98, 0])
    cube([1, 1, 1.96]);
  translate([103, 98, 0])
    cube([1, 1, 2.04]);
  translate([104, 98, 0])
    cube([1, 1, 2.00]);
  translate([105, 98, 0])
    cube([1, 1, 2.27]);
  translate([106, 98, 0])
    cube([1, 1, 2.35]);
  translate([107, 98, 0])
    cube([1, 1, 2.24]);
  translate([108, 98, 0])
    cube([1, 1, 1.73]);
  translate([109, 98, 0])
    cube([1, 1, 0.75]);
  translate([110, 98, 0])
    cube([1, 1, 1.49]);
  translate([111, 98, 0])
    cube([1, 1, 2.98]);
  translate([112, 98, 0])
    cube([1, 1, 1.73]);
  translate([113, 98, 0])
    cube([1, 1, 2.00]);
  translate([114, 98, 0])
    cube([1, 1, 2.98]);
  translate([115, 98, 0])
    cube([1, 1, 3.37]);
  translate([116, 98, 0])
    cube([1, 1, 5.80]);
  translate([117, 98, 0])
    cube([1, 1, 5.69]);
  translate([118, 98, 0])
    cube([1, 1, 5.69]);
  translate([119, 98, 0])
    cube([1, 1, 5.73]);
  translate([120, 98, 0])
    cube([1, 1, 5.57]);
  translate([121, 98, 0])
    cube([1, 1, 5.53]);
  translate([122, 98, 0])
    cube([1, 1, 5.65]);
  translate([123, 98, 0])
    cube([1, 1, 5.88]);
  translate([124, 98, 0])
    cube([1, 1, 6.04]);
  translate([125, 98, 0])
    cube([1, 1, 6.04]);
  translate([126, 98, 0])
    cube([1, 1, 5.49]);
  translate([127, 98, 0])
    cube([1, 1, 2.08]);
  translate([128, 98, 0])
    cube([1, 1, 2.39]);
  translate([129, 98, 0])
    cube([1, 1, 2.78]);
  translate([130, 98, 0])
    cube([1, 1, 1.53]);
  translate([131, 98, 0])
    cube([1, 1, 4.08]);
  translate([132, 98, 0])
    cube([1, 1, 1.25]);
  translate([133, 98, 0])
    cube([1, 1, 1.22]);
  translate([134, 98, 0])
    cube([1, 1, 1.29]);
  translate([135, 98, 0])
    cube([1, 1, 1.29]);
  translate([136, 98, 0])
    cube([1, 1, 1.25]);
  translate([137, 98, 0])
    cube([1, 1, 1.25]);
  translate([138, 98, 0])
    cube([1, 1, 1.29]);
  translate([139, 98, 0])
    cube([1, 1, 1.29]);
  translate([140, 98, 0])
    cube([1, 1, 1.29]);
  translate([141, 98, 0])
    cube([1, 1, 1.29]);
  translate([142, 98, 0])
    cube([1, 1, 1.29]);
  translate([143, 98, 0])
    cube([1, 1, 1.29]);
  translate([144, 98, 0])
    cube([1, 1, 1.29]);
  translate([145, 98, 0])
    cube([1, 1, 1.29]);
  translate([146, 98, 0])
    cube([1, 1, 1.29]);
  translate([147, 98, 0])
    cube([1, 1, 1.29]);
  translate([148, 98, 0])
    cube([1, 1, 1.29]);
  translate([149, 98, 0])
    cube([1, 1, 1.29]);
  translate([150, 98, 0])
    cube([1, 1, 1.29]);
  translate([151, 98, 0])
    cube([1, 1, 1.29]);
  translate([152, 98, 0])
    cube([1, 1, 1.33]);
  translate([153, 98, 0])
    cube([1, 1, 1.33]);
  translate([154, 98, 0])
    cube([1, 1, 1.33]);
  translate([155, 98, 0])
    cube([1, 1, 1.29]);
  translate([156, 98, 0])
    cube([1, 1, 1.29]);
  translate([157, 98, 0])
    cube([1, 1, 1.33]);
  translate([158, 98, 0])
    cube([1, 1, 1.33]);
  translate([159, 98, 0])
    cube([1, 1, 1.33]);
  translate([160, 98, 0])
    cube([1, 1, 1.33]);
  translate([161, 98, 0])
    cube([1, 1, 1.33]);
  translate([162, 98, 0])
    cube([1, 1, 1.33]);
  translate([163, 98, 0])
    cube([1, 1, 1.33]);
  translate([164, 98, 0])
    cube([1, 1, 1.33]);
  translate([165, 98, 0])
    cube([1, 1, 1.33]);
  translate([166, 98, 0])
    cube([1, 1, 1.33]);
  translate([167, 98, 0])
    cube([1, 1, 1.33]);
  translate([168, 98, 0])
    cube([1, 1, 1.33]);
  translate([169, 98, 0])
    cube([1, 1, 1.33]);
  translate([170, 98, 0])
    cube([1, 1, 1.33]);
  translate([171, 98, 0])
    cube([1, 1, 1.33]);
  translate([172, 98, 0])
    cube([1, 1, 1.33]);
  translate([173, 98, 0])
    cube([1, 1, 1.33]);
  translate([174, 98, 0])
    cube([1, 1, 1.33]);
  translate([175, 98, 0])
    cube([1, 1, 1.33]);
  translate([176, 98, 0])
    cube([1, 1, 1.33]);
  translate([177, 98, 0])
    cube([1, 1, 1.33]);
  translate([178, 98, 0])
    cube([1, 1, 1.33]);
  translate([179, 98, 0])
    cube([1, 1, 1.33]);
  translate([180, 98, 0])
    cube([1, 1, 1.33]);
  translate([181, 98, 0])
    cube([1, 1, 1.33]);
  translate([182, 98, 0])
    cube([1, 1, 1.33]);
  translate([183, 98, 0])
    cube([1, 1, 1.33]);
  translate([184, 98, 0])
    cube([1, 1, 1.33]);
  translate([185, 98, 0])
    cube([1, 1, 1.33]);
  translate([186, 98, 0])
    cube([1, 1, 1.33]);
  translate([187, 98, 0])
    cube([1, 1, 1.33]);
  translate([188, 98, 0])
    cube([1, 1, 1.33]);
  translate([189, 98, 0])
    cube([1, 1, 1.33]);
  translate([190, 98, 0])
    cube([1, 1, 1.33]);
  translate([191, 98, 0])
    cube([1, 1, 1.33]);
  translate([192, 98, 0])
    cube([1, 1, 1.33]);
  translate([193, 98, 0])
    cube([1, 1, 1.33]);
  translate([194, 98, 0])
    cube([1, 1, 1.33]);
  translate([195, 98, 0])
    cube([1, 1, 1.33]);
  translate([196, 98, 0])
    cube([1, 1, 1.33]);
  translate([197, 98, 0])
    cube([1, 1, 1.33]);
  translate([198, 98, 0])
    cube([1, 1, 1.33]);
  translate([199, 98, 0])
    cube([1, 1, 1.33]);
  translate([200, 98, 0])
    cube([1, 1, 1.33]);
  translate([201, 98, 0])
    cube([1, 1, 1.33]);
  translate([202, 98, 0])
    cube([1, 1, 1.33]);
  translate([203, 98, 0])
    cube([1, 1, 1.33]);
  translate([204, 98, 0])
    cube([1, 1, 1.33]);
  translate([205, 98, 0])
    cube([1, 1, 1.33]);
  translate([206, 98, 0])
    cube([1, 1, 1.33]);
  translate([207, 98, 0])
    cube([1, 1, 1.33]);
  translate([208, 98, 0])
    cube([1, 1, 1.33]);
  translate([209, 98, 0])
    cube([1, 1, 1.33]);
  translate([210, 98, 0])
    cube([1, 1, 1.33]);
  translate([211, 98, 0])
    cube([1, 1, 1.33]);
  translate([212, 98, 0])
    cube([1, 1, 1.33]);
  translate([213, 98, 0])
    cube([1, 1, 1.33]);
  translate([214, 98, 0])
    cube([1, 1, 1.33]);
  translate([215, 98, 0])
    cube([1, 1, 1.33]);
  translate([216, 98, 0])
    cube([1, 1, 1.33]);
  translate([217, 98, 0])
    cube([1, 1, 1.37]);
  translate([218, 98, 0])
    cube([1, 1, 1.37]);
  translate([219, 98, 0])
    cube([1, 1, 1.33]);
  translate([220, 98, 0])
    cube([1, 1, 1.33]);
  translate([221, 98, 0])
    cube([1, 1, 1.33]);
  translate([222, 98, 0])
    cube([1, 1, 1.33]);
  translate([223, 98, 0])
    cube([1, 1, 1.33]);
  translate([224, 98, 0])
    cube([1, 1, 1.33]);
  translate([225, 98, 0])
    cube([1, 1, 1.33]);
  translate([226, 98, 0])
    cube([1, 1, 1.33]);
  translate([227, 98, 0])
    cube([1, 1, 1.33]);
  translate([228, 98, 0])
    cube([1, 1, 1.33]);
  translate([229, 98, 0])
    cube([1, 1, 1.33]);
  translate([230, 98, 0])
    cube([1, 1, 1.33]);
  translate([231, 98, 0])
    cube([1, 1, 1.33]);
  translate([232, 98, 0])
    cube([1, 1, 1.33]);
  translate([233, 98, 0])
    cube([1, 1, 1.33]);
  translate([234, 98, 0])
    cube([1, 1, 1.33]);
  translate([235, 98, 0])
    cube([1, 1, 1.33]);
  translate([236, 98, 0])
    cube([1, 1, 1.33]);
  translate([237, 98, 0])
    cube([1, 1, 1.29]);
  translate([238, 98, 0])
    cube([1, 1, 1.29]);
  translate([239, 98, 0])
    cube([1, 1, 1.33]);
  translate([240, 98, 0])
    cube([1, 1, 1.29]);
  translate([241, 98, 0])
    cube([1, 1, 1.33]);
  translate([242, 98, 0])
    cube([1, 1, 1.33]);
  translate([243, 98, 0])
    cube([1, 1, 1.33]);
  translate([244, 98, 0])
    cube([1, 1, 1.29]);
  translate([245, 98, 0])
    cube([1, 1, 1.33]);
  translate([246, 98, 0])
    cube([1, 1, 1.33]);
  translate([0, 99, 0])
    cube([1, 1, 1.45]);
  translate([1, 99, 0])
    cube([1, 1, 1.45]);
  translate([2, 99, 0])
    cube([1, 1, 1.45]);
  translate([3, 99, 0])
    cube([1, 1, 1.45]);
  translate([4, 99, 0])
    cube([1, 1, 1.45]);
  translate([5, 99, 0])
    cube([1, 1, 1.45]);
  translate([6, 99, 0])
    cube([1, 1, 1.45]);
  translate([7, 99, 0])
    cube([1, 1, 1.45]);
  translate([8, 99, 0])
    cube([1, 1, 1.45]);
  translate([9, 99, 0])
    cube([1, 1, 1.45]);
  translate([10, 99, 0])
    cube([1, 1, 1.45]);
  translate([11, 99, 0])
    cube([1, 1, 1.45]);
  translate([12, 99, 0])
    cube([1, 1, 1.45]);
  translate([13, 99, 0])
    cube([1, 1, 1.45]);
  translate([14, 99, 0])
    cube([1, 1, 1.45]);
  translate([15, 99, 0])
    cube([1, 1, 1.45]);
  translate([16, 99, 0])
    cube([1, 1, 1.45]);
  translate([17, 99, 0])
    cube([1, 1, 1.49]);
  translate([18, 99, 0])
    cube([1, 1, 1.45]);
  translate([19, 99, 0])
    cube([1, 1, 1.45]);
  translate([20, 99, 0])
    cube([1, 1, 1.45]);
  translate([21, 99, 0])
    cube([1, 1, 1.45]);
  translate([22, 99, 0])
    cube([1, 1, 1.41]);
  translate([23, 99, 0])
    cube([1, 1, 1.45]);
  translate([24, 99, 0])
    cube([1, 1, 1.45]);
  translate([25, 99, 0])
    cube([1, 1, 1.45]);
  translate([26, 99, 0])
    cube([1, 1, 1.45]);
  translate([27, 99, 0])
    cube([1, 1, 1.41]);
  translate([28, 99, 0])
    cube([1, 1, 1.41]);
  translate([29, 99, 0])
    cube([1, 1, 1.41]);
  translate([30, 99, 0])
    cube([1, 1, 1.41]);
  translate([31, 99, 0])
    cube([1, 1, 1.41]);
  translate([32, 99, 0])
    cube([1, 1, 1.41]);
  translate([33, 99, 0])
    cube([1, 1, 1.41]);
  translate([34, 99, 0])
    cube([1, 1, 1.41]);
  translate([35, 99, 0])
    cube([1, 1, 1.45]);
  translate([36, 99, 0])
    cube([1, 1, 4.75]);
  translate([37, 99, 0])
    cube([1, 1, 3.29]);
  translate([38, 99, 0])
    cube([1, 1, 2.63]);
  translate([39, 99, 0])
    cube([1, 1, 1.69]);
  translate([40, 99, 0])
    cube([1, 1, 1.45]);
  translate([41, 99, 0])
    cube([1, 1, 1.14]);
  translate([42, 99, 0])
    cube([1, 1, 0.86]);
  translate([43, 99, 0])
    cube([1, 1, 4.20]);
  translate([44, 99, 0])
    cube([1, 1, 1.14]);
  translate([45, 99, 0])
    cube([1, 1, 1.29]);
  translate([46, 99, 0])
    cube([1, 1, 1.41]);
  translate([47, 99, 0])
    cube([1, 1, 1.45]);
  translate([48, 99, 0])
    cube([1, 1, 1.69]);
  translate([49, 99, 0])
    cube([1, 1, 1.80]);
  translate([50, 99, 0])
    cube([1, 1, 1.76]);
  translate([51, 99, 0])
    cube([1, 1, 1.96]);
  translate([52, 99, 0])
    cube([1, 1, 1.73]);
  translate([53, 99, 0])
    cube([1, 1, 3.33]);
  translate([54, 99, 0])
    cube([1, 1, 6.08]);
  translate([55, 99, 0])
    cube([1, 1, 8.04]);
  translate([56, 99, 0])
    cube([1, 1, 7.33]);
  translate([57, 99, 0])
    cube([1, 1, 6.12]);
  translate([58, 99, 0])
    cube([1, 1, 5.02]);
  translate([59, 99, 0])
    cube([1, 1, 4.59]);
  translate([60, 99, 0])
    cube([1, 1, 4.90]);
  translate([61, 99, 0])
    cube([1, 1, 5.29]);
  translate([62, 99, 0])
    cube([1, 1, 5.49]);
  translate([63, 99, 0])
    cube([1, 1, 5.76]);
  translate([64, 99, 0])
    cube([1, 1, 5.96]);
  translate([65, 99, 0])
    cube([1, 1, 5.88]);
  translate([66, 99, 0])
    cube([1, 1, 5.92]);
  translate([67, 99, 0])
    cube([1, 1, 6.04]);
  translate([68, 99, 0])
    cube([1, 1, 6.00]);
  translate([69, 99, 0])
    cube([1, 1, 6.04]);
  translate([70, 99, 0])
    cube([1, 1, 6.12]);
  translate([71, 99, 0])
    cube([1, 1, 6.12]);
  translate([72, 99, 0])
    cube([1, 1, 6.00]);
  translate([73, 99, 0])
    cube([1, 1, 4.71]);
  translate([74, 99, 0])
    cube([1, 1, 1.65]);
  translate([75, 99, 0])
    cube([1, 1, 0.55]);
  translate([76, 99, 0])
    cube([1, 1, 1.49]);
  translate([77, 99, 0])
    cube([1, 1, 1.53]);
  translate([78, 99, 0])
    cube([1, 1, 1.45]);
  translate([79, 99, 0])
    cube([1, 1, 1.69]);
  translate([80, 99, 0])
    cube([1, 1, 1.18]);
  translate([81, 99, 0])
    cube([1, 1, 0.63]);
  translate([82, 99, 0])
    cube([1, 1, 3.10]);
  translate([83, 99, 0])
    cube([1, 1, 2.94]);
  translate([84, 99, 0])
    cube([1, 1, 1.41]);
  translate([85, 99, 0])
    cube([1, 1, 3.80]);
  translate([86, 99, 0])
    cube([1, 1, 0.82]);
  translate([87, 99, 0])
    cube([1, 1, 1.06]);
  translate([88, 99, 0])
    cube([1, 1, 1.10]);
  translate([89, 99, 0])
    cube([1, 1, 1.10]);
  translate([90, 99, 0])
    cube([1, 1, 1.02]);
  translate([91, 99, 0])
    cube([1, 1, 1.06]);
  translate([92, 99, 0])
    cube([1, 1, 1.10]);
  translate([93, 99, 0])
    cube([1, 1, 1.37]);
  translate([94, 99, 0])
    cube([1, 1, 2.00]);
  translate([95, 99, 0])
    cube([1, 1, 4.12]);
  translate([96, 99, 0])
    cube([1, 1, 3.84]);
  translate([97, 99, 0])
    cube([1, 1, 2.20]);
  translate([98, 99, 0])
    cube([1, 1, 1.49]);
  translate([99, 99, 0])
    cube([1, 1, 2.08]);
  translate([100, 99, 0])
    cube([1, 1, 2.16]);
  translate([101, 99, 0])
    cube([1, 1, 1.69]);
  translate([102, 99, 0])
    cube([1, 1, 1.69]);
  translate([103, 99, 0])
    cube([1, 1, 1.41]);
  translate([104, 99, 0])
    cube([1, 1, 2.00]);
  translate([105, 99, 0])
    cube([1, 1, 2.08]);
  translate([106, 99, 0])
    cube([1, 1, 3.41]);
  translate([107, 99, 0])
    cube([1, 1, 3.06]);
  translate([108, 99, 0])
    cube([1, 1, 3.45]);
  translate([109, 99, 0])
    cube([1, 1, 1.41]);
  translate([110, 99, 0])
    cube([1, 1, 1.10]);
  translate([111, 99, 0])
    cube([1, 1, 3.88]);
  translate([112, 99, 0])
    cube([1, 1, 1.57]);
  translate([113, 99, 0])
    cube([1, 1, 2.59]);
  translate([114, 99, 0])
    cube([1, 1, 3.14]);
  translate([115, 99, 0])
    cube([1, 1, 5.96]);
  translate([116, 99, 0])
    cube([1, 1, 5.69]);
  translate([117, 99, 0])
    cube([1, 1, 5.69]);
  translate([118, 99, 0])
    cube([1, 1, 5.61]);
  translate([119, 99, 0])
    cube([1, 1, 5.61]);
  translate([120, 99, 0])
    cube([1, 1, 5.57]);
  translate([121, 99, 0])
    cube([1, 1, 5.65]);
  translate([122, 99, 0])
    cube([1, 1, 5.73]);
  translate([123, 99, 0])
    cube([1, 1, 5.92]);
  translate([124, 99, 0])
    cube([1, 1, 6.12]);
  translate([125, 99, 0])
    cube([1, 1, 6.35]);
  translate([126, 99, 0])
    cube([1, 1, 6.04]);
  translate([127, 99, 0])
    cube([1, 1, 6.12]);
  translate([128, 99, 0])
    cube([1, 1, 5.88]);
  translate([129, 99, 0])
    cube([1, 1, 2.78]);
  translate([130, 99, 0])
    cube([1, 1, 2.71]);
  translate([131, 99, 0])
    cube([1, 1, 1.33]);
  translate([132, 99, 0])
    cube([1, 1, 2.75]);
  translate([133, 99, 0])
    cube([1, 1, 1.61]);
  translate([134, 99, 0])
    cube([1, 1, 1.29]);
  translate([135, 99, 0])
    cube([1, 1, 1.29]);
  translate([136, 99, 0])
    cube([1, 1, 1.33]);
  translate([137, 99, 0])
    cube([1, 1, 1.25]);
  translate([138, 99, 0])
    cube([1, 1, 1.29]);
  translate([139, 99, 0])
    cube([1, 1, 1.29]);
  translate([140, 99, 0])
    cube([1, 1, 1.29]);
  translate([141, 99, 0])
    cube([1, 1, 1.29]);
  translate([142, 99, 0])
    cube([1, 1, 1.29]);
  translate([143, 99, 0])
    cube([1, 1, 1.29]);
  translate([144, 99, 0])
    cube([1, 1, 1.29]);
  translate([145, 99, 0])
    cube([1, 1, 1.29]);
  translate([146, 99, 0])
    cube([1, 1, 1.29]);
  translate([147, 99, 0])
    cube([1, 1, 1.29]);
  translate([148, 99, 0])
    cube([1, 1, 1.29]);
  translate([149, 99, 0])
    cube([1, 1, 1.29]);
  translate([150, 99, 0])
    cube([1, 1, 1.29]);
  translate([151, 99, 0])
    cube([1, 1, 1.29]);
  translate([152, 99, 0])
    cube([1, 1, 1.33]);
  translate([153, 99, 0])
    cube([1, 1, 1.33]);
  translate([154, 99, 0])
    cube([1, 1, 1.33]);
  translate([155, 99, 0])
    cube([1, 1, 1.29]);
  translate([156, 99, 0])
    cube([1, 1, 1.29]);
  translate([157, 99, 0])
    cube([1, 1, 1.33]);
  translate([158, 99, 0])
    cube([1, 1, 1.33]);
  translate([159, 99, 0])
    cube([1, 1, 1.33]);
  translate([160, 99, 0])
    cube([1, 1, 1.33]);
  translate([161, 99, 0])
    cube([1, 1, 1.33]);
  translate([162, 99, 0])
    cube([1, 1, 1.33]);
  translate([163, 99, 0])
    cube([1, 1, 1.33]);
  translate([164, 99, 0])
    cube([1, 1, 1.33]);
  translate([165, 99, 0])
    cube([1, 1, 1.33]);
  translate([166, 99, 0])
    cube([1, 1, 1.33]);
  translate([167, 99, 0])
    cube([1, 1, 1.33]);
  translate([168, 99, 0])
    cube([1, 1, 1.33]);
  translate([169, 99, 0])
    cube([1, 1, 1.33]);
  translate([170, 99, 0])
    cube([1, 1, 1.33]);
  translate([171, 99, 0])
    cube([1, 1, 1.33]);
  translate([172, 99, 0])
    cube([1, 1, 1.33]);
  translate([173, 99, 0])
    cube([1, 1, 1.33]);
  translate([174, 99, 0])
    cube([1, 1, 1.33]);
  translate([175, 99, 0])
    cube([1, 1, 1.33]);
  translate([176, 99, 0])
    cube([1, 1, 1.33]);
  translate([177, 99, 0])
    cube([1, 1, 1.33]);
  translate([178, 99, 0])
    cube([1, 1, 1.33]);
  translate([179, 99, 0])
    cube([1, 1, 1.33]);
  translate([180, 99, 0])
    cube([1, 1, 1.33]);
  translate([181, 99, 0])
    cube([1, 1, 1.33]);
  translate([182, 99, 0])
    cube([1, 1, 1.33]);
  translate([183, 99, 0])
    cube([1, 1, 1.33]);
  translate([184, 99, 0])
    cube([1, 1, 1.33]);
  translate([185, 99, 0])
    cube([1, 1, 1.33]);
  translate([186, 99, 0])
    cube([1, 1, 1.33]);
  translate([187, 99, 0])
    cube([1, 1, 1.33]);
  translate([188, 99, 0])
    cube([1, 1, 1.33]);
  translate([189, 99, 0])
    cube([1, 1, 1.33]);
  translate([190, 99, 0])
    cube([1, 1, 1.33]);
  translate([191, 99, 0])
    cube([1, 1, 1.33]);
  translate([192, 99, 0])
    cube([1, 1, 1.33]);
  translate([193, 99, 0])
    cube([1, 1, 1.33]);
  translate([194, 99, 0])
    cube([1, 1, 1.33]);
  translate([195, 99, 0])
    cube([1, 1, 1.33]);
  translate([196, 99, 0])
    cube([1, 1, 1.33]);
  translate([197, 99, 0])
    cube([1, 1, 1.33]);
  translate([198, 99, 0])
    cube([1, 1, 1.33]);
  translate([199, 99, 0])
    cube([1, 1, 1.33]);
  translate([200, 99, 0])
    cube([1, 1, 1.33]);
  translate([201, 99, 0])
    cube([1, 1, 1.33]);
  translate([202, 99, 0])
    cube([1, 1, 1.33]);
  translate([203, 99, 0])
    cube([1, 1, 1.33]);
  translate([204, 99, 0])
    cube([1, 1, 1.33]);
  translate([205, 99, 0])
    cube([1, 1, 1.33]);
  translate([206, 99, 0])
    cube([1, 1, 1.33]);
  translate([207, 99, 0])
    cube([1, 1, 1.33]);
  translate([208, 99, 0])
    cube([1, 1, 1.33]);
  translate([209, 99, 0])
    cube([1, 1, 1.33]);
  translate([210, 99, 0])
    cube([1, 1, 1.33]);
  translate([211, 99, 0])
    cube([1, 1, 1.33]);
  translate([212, 99, 0])
    cube([1, 1, 1.33]);
  translate([213, 99, 0])
    cube([1, 1, 1.33]);
  translate([214, 99, 0])
    cube([1, 1, 1.33]);
  translate([215, 99, 0])
    cube([1, 1, 1.33]);
  translate([216, 99, 0])
    cube([1, 1, 1.33]);
  translate([217, 99, 0])
    cube([1, 1, 1.33]);
  translate([218, 99, 0])
    cube([1, 1, 1.33]);
  translate([219, 99, 0])
    cube([1, 1, 1.33]);
  translate([220, 99, 0])
    cube([1, 1, 1.33]);
  translate([221, 99, 0])
    cube([1, 1, 1.33]);
  translate([222, 99, 0])
    cube([1, 1, 1.33]);
  translate([223, 99, 0])
    cube([1, 1, 1.33]);
  translate([224, 99, 0])
    cube([1, 1, 1.33]);
  translate([225, 99, 0])
    cube([1, 1, 1.33]);
  translate([226, 99, 0])
    cube([1, 1, 1.33]);
  translate([227, 99, 0])
    cube([1, 1, 1.33]);
  translate([228, 99, 0])
    cube([1, 1, 1.25]);
  translate([229, 99, 0])
    cube([1, 1, 1.37]);
  translate([230, 99, 0])
    cube([1, 1, 1.33]);
  translate([231, 99, 0])
    cube([1, 1, 1.33]);
  translate([232, 99, 0])
    cube([1, 1, 1.33]);
  translate([233, 99, 0])
    cube([1, 1, 1.33]);
  translate([234, 99, 0])
    cube([1, 1, 1.33]);
  translate([235, 99, 0])
    cube([1, 1, 1.33]);
  translate([236, 99, 0])
    cube([1, 1, 1.37]);
  translate([237, 99, 0])
    cube([1, 1, 1.33]);
  translate([238, 99, 0])
    cube([1, 1, 1.29]);
  translate([239, 99, 0])
    cube([1, 1, 1.33]);
  translate([240, 99, 0])
    cube([1, 1, 1.37]);
  translate([241, 99, 0])
    cube([1, 1, 1.33]);
  translate([242, 99, 0])
    cube([1, 1, 1.33]);
  translate([243, 99, 0])
    cube([1, 1, 1.33]);
  translate([244, 99, 0])
    cube([1, 1, 1.29]);
  translate([245, 99, 0])
    cube([1, 1, 1.33]);
  translate([246, 99, 0])
    cube([1, 1, 1.33]);
  translate([0, 100, 0])
    cube([1, 1, 1.45]);
  translate([1, 100, 0])
    cube([1, 1, 1.45]);
  translate([2, 100, 0])
    cube([1, 1, 1.45]);
  translate([3, 100, 0])
    cube([1, 1, 1.45]);
  translate([4, 100, 0])
    cube([1, 1, 1.45]);
  translate([5, 100, 0])
    cube([1, 1, 1.45]);
  translate([6, 100, 0])
    cube([1, 1, 1.45]);
  translate([7, 100, 0])
    cube([1, 1, 1.45]);
  translate([8, 100, 0])
    cube([1, 1, 1.45]);
  translate([9, 100, 0])
    cube([1, 1, 1.45]);
  translate([10, 100, 0])
    cube([1, 1, 1.45]);
  translate([11, 100, 0])
    cube([1, 1, 1.45]);
  translate([12, 100, 0])
    cube([1, 1, 1.45]);
  translate([13, 100, 0])
    cube([1, 1, 1.45]);
  translate([14, 100, 0])
    cube([1, 1, 1.45]);
  translate([15, 100, 0])
    cube([1, 1, 1.45]);
  translate([16, 100, 0])
    cube([1, 1, 1.45]);
  translate([17, 100, 0])
    cube([1, 1, 1.45]);
  translate([18, 100, 0])
    cube([1, 1, 1.45]);
  translate([19, 100, 0])
    cube([1, 1, 1.45]);
  translate([20, 100, 0])
    cube([1, 1, 1.45]);
  translate([21, 100, 0])
    cube([1, 1, 1.45]);
  translate([22, 100, 0])
    cube([1, 1, 1.45]);
  translate([23, 100, 0])
    cube([1, 1, 1.45]);
  translate([24, 100, 0])
    cube([1, 1, 1.45]);
  translate([25, 100, 0])
    cube([1, 1, 1.41]);
  translate([26, 100, 0])
    cube([1, 1, 1.41]);
  translate([27, 100, 0])
    cube([1, 1, 1.45]);
  translate([28, 100, 0])
    cube([1, 1, 1.45]);
  translate([29, 100, 0])
    cube([1, 1, 1.45]);
  translate([30, 100, 0])
    cube([1, 1, 1.41]);
  translate([31, 100, 0])
    cube([1, 1, 1.41]);
  translate([32, 100, 0])
    cube([1, 1, 1.41]);
  translate([33, 100, 0])
    cube([1, 1, 1.41]);
  translate([34, 100, 0])
    cube([1, 1, 1.41]);
  translate([35, 100, 0])
    cube([1, 1, 1.37]);
  translate([36, 100, 0])
    cube([1, 1, 1.61]);
  translate([37, 100, 0])
    cube([1, 1, 3.57]);
  translate([38, 100, 0])
    cube([1, 1, 3.14]);
  translate([39, 100, 0])
    cube([1, 1, 1.41]);
  translate([40, 100, 0])
    cube([1, 1, 1.65]);
  translate([41, 100, 0])
    cube([1, 1, 1.29]);
  translate([42, 100, 0])
    cube([1, 1, 0.94]);
  translate([43, 100, 0])
    cube([1, 1, 3.53]);
  translate([44, 100, 0])
    cube([1, 1, 1.02]);
  translate([45, 100, 0])
    cube([1, 1, 1.29]);
  translate([46, 100, 0])
    cube([1, 1, 1.37]);
  translate([47, 100, 0])
    cube([1, 1, 1.65]);
  translate([48, 100, 0])
    cube([1, 1, 1.73]);
  translate([49, 100, 0])
    cube([1, 1, 1.69]);
  translate([50, 100, 0])
    cube([1, 1, 1.76]);
  translate([51, 100, 0])
    cube([1, 1, 1.84]);
  translate([52, 100, 0])
    cube([1, 1, 1.76]);
  translate([53, 100, 0])
    cube([1, 1, 2.94]);
  translate([54, 100, 0])
    cube([1, 1, 8.24]);
  translate([55, 100, 0])
    cube([1, 1, 8.16]);
  translate([56, 100, 0])
    cube([1, 1, 7.37]);
  translate([57, 100, 0])
    cube([1, 1, 6.24]);
  translate([58, 100, 0])
    cube([1, 1, 4.94]);
  translate([59, 100, 0])
    cube([1, 1, 4.63]);
  translate([60, 100, 0])
    cube([1, 1, 4.90]);
  translate([61, 100, 0])
    cube([1, 1, 5.33]);
  translate([62, 100, 0])
    cube([1, 1, 5.49]);
  translate([63, 100, 0])
    cube([1, 1, 5.73]);
  translate([64, 100, 0])
    cube([1, 1, 5.96]);
  translate([65, 100, 0])
    cube([1, 1, 5.96]);
  translate([66, 100, 0])
    cube([1, 1, 5.96]);
  translate([67, 100, 0])
    cube([1, 1, 6.04]);
  translate([68, 100, 0])
    cube([1, 1, 6.04]);
  translate([69, 100, 0])
    cube([1, 1, 6.12]);
  translate([70, 100, 0])
    cube([1, 1, 6.27]);
  translate([71, 100, 0])
    cube([1, 1, 6.27]);
  translate([72, 100, 0])
    cube([1, 1, 6.00]);
  translate([73, 100, 0])
    cube([1, 1, 5.02]);
  translate([74, 100, 0])
    cube([1, 1, 1.69]);
  translate([75, 100, 0])
    cube([1, 1, 0.71]);
  translate([76, 100, 0])
    cube([1, 1, 1.53]);
  translate([77, 100, 0])
    cube([1, 1, 1.22]);
  translate([78, 100, 0])
    cube([1, 1, 1.53]);
  translate([79, 100, 0])
    cube([1, 1, 1.57]);
  translate([80, 100, 0])
    cube([1, 1, 1.45]);
  translate([81, 100, 0])
    cube([1, 1, 1.22]);
  translate([82, 100, 0])
    cube([1, 1, 2.67]);
  translate([83, 100, 0])
    cube([1, 1, 1.61]);
  translate([84, 100, 0])
    cube([1, 1, 2.27]);
  translate([85, 100, 0])
    cube([1, 1, 0.59]);
  translate([86, 100, 0])
    cube([1, 1, 3.92]);
  translate([87, 100, 0])
    cube([1, 1, 0.31]);
  translate([88, 100, 0])
    cube([1, 1, 1.37]);
  translate([89, 100, 0])
    cube([1, 1, 1.37]);
  translate([90, 100, 0])
    cube([1, 1, 1.37]);
  translate([91, 100, 0])
    cube([1, 1, 0.47]);
  translate([92, 100, 0])
    cube([1, 1, 1.49]);
  translate([93, 100, 0])
    cube([1, 1, 1.06]);
  translate([94, 100, 0])
    cube([1, 1, 0.82]);
  translate([95, 100, 0])
    cube([1, 1, 1.53]);
  translate([96, 100, 0])
    cube([1, 1, 1.22]);
  translate([97, 100, 0])
    cube([1, 1, 1.61]);
  translate([98, 100, 0])
    cube([1, 1, 1.84]);
  translate([99, 100, 0])
    cube([1, 1, 1.73]);
  translate([100, 100, 0])
    cube([1, 1, 3.06]);
  translate([101, 100, 0])
    cube([1, 1, 1.69]);
  translate([102, 100, 0])
    cube([1, 1, 1.29]);
  translate([103, 100, 0])
    cube([1, 1, 1.29]);
  translate([104, 100, 0])
    cube([1, 1, 2.12]);
  translate([105, 100, 0])
    cube([1, 1, 2.98]);
  translate([106, 100, 0])
    cube([1, 1, 5.45]);
  translate([107, 100, 0])
    cube([1, 1, 5.49]);
  translate([108, 100, 0])
    cube([1, 1, 5.22]);
  translate([109, 100, 0])
    cube([1, 1, 1.92]);
  translate([110, 100, 0])
    cube([1, 1, 2.31]);
  translate([111, 100, 0])
    cube([1, 1, 2.43]);
  translate([112, 100, 0])
    cube([1, 1, 3.18]);
  translate([113, 100, 0])
    cube([1, 1, 5.53]);
  translate([114, 100, 0])
    cube([1, 1, 6.08]);
  translate([115, 100, 0])
    cube([1, 1, 5.96]);
  translate([116, 100, 0])
    cube([1, 1, 5.80]);
  translate([117, 100, 0])
    cube([1, 1, 5.92]);
  translate([118, 100, 0])
    cube([1, 1, 5.80]);
  translate([119, 100, 0])
    cube([1, 1, 5.69]);
  translate([120, 100, 0])
    cube([1, 1, 5.65]);
  translate([121, 100, 0])
    cube([1, 1, 5.69]);
  translate([122, 100, 0])
    cube([1, 1, 5.76]);
  translate([123, 100, 0])
    cube([1, 1, 5.84]);
  translate([124, 100, 0])
    cube([1, 1, 6.08]);
  translate([125, 100, 0])
    cube([1, 1, 6.16]);
  translate([126, 100, 0])
    cube([1, 1, 6.35]);
  translate([127, 100, 0])
    cube([1, 1, 6.35]);
  translate([128, 100, 0])
    cube([1, 1, 6.47]);
  translate([129, 100, 0])
    cube([1, 1, 6.43]);
  translate([130, 100, 0])
    cube([1, 1, 6.24]);
  translate([131, 100, 0])
    cube([1, 1, 2.94]);
  translate([132, 100, 0])
    cube([1, 1, 2.08]);
  translate([133, 100, 0])
    cube([1, 1, 2.82]);
  translate([134, 100, 0])
    cube([1, 1, 1.10]);
  translate([135, 100, 0])
    cube([1, 1, 1.80]);
  translate([136, 100, 0])
    cube([1, 1, 1.29]);
  translate([137, 100, 0])
    cube([1, 1, 1.29]);
  translate([138, 100, 0])
    cube([1, 1, 1.29]);
  translate([139, 100, 0])
    cube([1, 1, 1.29]);
  translate([140, 100, 0])
    cube([1, 1, 1.29]);
  translate([141, 100, 0])
    cube([1, 1, 1.29]);
  translate([142, 100, 0])
    cube([1, 1, 1.29]);
  translate([143, 100, 0])
    cube([1, 1, 1.29]);
  translate([144, 100, 0])
    cube([1, 1, 1.29]);
  translate([145, 100, 0])
    cube([1, 1, 1.29]);
  translate([146, 100, 0])
    cube([1, 1, 1.29]);
  translate([147, 100, 0])
    cube([1, 1, 1.29]);
  translate([148, 100, 0])
    cube([1, 1, 1.29]);
  translate([149, 100, 0])
    cube([1, 1, 1.29]);
  translate([150, 100, 0])
    cube([1, 1, 1.29]);
  translate([151, 100, 0])
    cube([1, 1, 1.29]);
  translate([152, 100, 0])
    cube([1, 1, 1.33]);
  translate([153, 100, 0])
    cube([1, 1, 1.29]);
  translate([154, 100, 0])
    cube([1, 1, 1.33]);
  translate([155, 100, 0])
    cube([1, 1, 1.33]);
  translate([156, 100, 0])
    cube([1, 1, 1.33]);
  translate([157, 100, 0])
    cube([1, 1, 1.33]);
  translate([158, 100, 0])
    cube([1, 1, 1.33]);
  translate([159, 100, 0])
    cube([1, 1, 1.33]);
  translate([160, 100, 0])
    cube([1, 1, 1.33]);
  translate([161, 100, 0])
    cube([1, 1, 1.33]);
  translate([162, 100, 0])
    cube([1, 1, 1.33]);
  translate([163, 100, 0])
    cube([1, 1, 1.33]);
  translate([164, 100, 0])
    cube([1, 1, 1.33]);
  translate([165, 100, 0])
    cube([1, 1, 1.33]);
  translate([166, 100, 0])
    cube([1, 1, 1.33]);
  translate([167, 100, 0])
    cube([1, 1, 1.33]);
  translate([168, 100, 0])
    cube([1, 1, 1.33]);
  translate([169, 100, 0])
    cube([1, 1, 1.33]);
  translate([170, 100, 0])
    cube([1, 1, 1.33]);
  translate([171, 100, 0])
    cube([1, 1, 1.33]);
  translate([172, 100, 0])
    cube([1, 1, 1.33]);
  translate([173, 100, 0])
    cube([1, 1, 1.33]);
  translate([174, 100, 0])
    cube([1, 1, 1.33]);
  translate([175, 100, 0])
    cube([1, 1, 1.33]);
  translate([176, 100, 0])
    cube([1, 1, 1.33]);
  translate([177, 100, 0])
    cube([1, 1, 1.33]);
  translate([178, 100, 0])
    cube([1, 1, 1.33]);
  translate([179, 100, 0])
    cube([1, 1, 1.33]);
  translate([180, 100, 0])
    cube([1, 1, 1.33]);
  translate([181, 100, 0])
    cube([1, 1, 1.33]);
  translate([182, 100, 0])
    cube([1, 1, 1.33]);
  translate([183, 100, 0])
    cube([1, 1, 1.33]);
  translate([184, 100, 0])
    cube([1, 1, 1.33]);
  translate([185, 100, 0])
    cube([1, 1, 1.33]);
  translate([186, 100, 0])
    cube([1, 1, 1.33]);
  translate([187, 100, 0])
    cube([1, 1, 1.33]);
  translate([188, 100, 0])
    cube([1, 1, 1.33]);
  translate([189, 100, 0])
    cube([1, 1, 1.33]);
  translate([190, 100, 0])
    cube([1, 1, 1.33]);
  translate([191, 100, 0])
    cube([1, 1, 1.33]);
  translate([192, 100, 0])
    cube([1, 1, 1.33]);
  translate([193, 100, 0])
    cube([1, 1, 1.33]);
  translate([194, 100, 0])
    cube([1, 1, 1.33]);
  translate([195, 100, 0])
    cube([1, 1, 1.33]);
  translate([196, 100, 0])
    cube([1, 1, 1.33]);
  translate([197, 100, 0])
    cube([1, 1, 1.33]);
  translate([198, 100, 0])
    cube([1, 1, 1.33]);
  translate([199, 100, 0])
    cube([1, 1, 1.33]);
  translate([200, 100, 0])
    cube([1, 1, 1.33]);
  translate([201, 100, 0])
    cube([1, 1, 1.33]);
  translate([202, 100, 0])
    cube([1, 1, 1.33]);
  translate([203, 100, 0])
    cube([1, 1, 1.33]);
  translate([204, 100, 0])
    cube([1, 1, 1.33]);
  translate([205, 100, 0])
    cube([1, 1, 1.33]);
  translate([206, 100, 0])
    cube([1, 1, 1.33]);
  translate([207, 100, 0])
    cube([1, 1, 1.33]);
  translate([208, 100, 0])
    cube([1, 1, 1.33]);
  translate([209, 100, 0])
    cube([1, 1, 1.33]);
  translate([210, 100, 0])
    cube([1, 1, 1.33]);
  translate([211, 100, 0])
    cube([1, 1, 1.33]);
  translate([212, 100, 0])
    cube([1, 1, 1.33]);
  translate([213, 100, 0])
    cube([1, 1, 1.33]);
  translate([214, 100, 0])
    cube([1, 1, 1.33]);
  translate([215, 100, 0])
    cube([1, 1, 1.33]);
  translate([216, 100, 0])
    cube([1, 1, 1.33]);
  translate([217, 100, 0])
    cube([1, 1, 1.33]);
  translate([218, 100, 0])
    cube([1, 1, 1.33]);
  translate([219, 100, 0])
    cube([1, 1, 1.33]);
  translate([220, 100, 0])
    cube([1, 1, 1.33]);
  translate([221, 100, 0])
    cube([1, 1, 1.33]);
  translate([222, 100, 0])
    cube([1, 1, 1.33]);
  translate([223, 100, 0])
    cube([1, 1, 1.33]);
  translate([224, 100, 0])
    cube([1, 1, 1.33]);
  translate([225, 100, 0])
    cube([1, 1, 1.33]);
  translate([226, 100, 0])
    cube([1, 1, 1.33]);
  translate([227, 100, 0])
    cube([1, 1, 1.33]);
  translate([228, 100, 0])
    cube([1, 1, 1.33]);
  translate([229, 100, 0])
    cube([1, 1, 1.33]);
  translate([230, 100, 0])
    cube([1, 1, 1.33]);
  translate([231, 100, 0])
    cube([1, 1, 1.33]);
  translate([232, 100, 0])
    cube([1, 1, 1.33]);
  translate([233, 100, 0])
    cube([1, 1, 1.33]);
  translate([234, 100, 0])
    cube([1, 1, 1.33]);
  translate([235, 100, 0])
    cube([1, 1, 1.33]);
  translate([236, 100, 0])
    cube([1, 1, 1.33]);
  translate([237, 100, 0])
    cube([1, 1, 1.33]);
  translate([238, 100, 0])
    cube([1, 1, 1.29]);
  translate([239, 100, 0])
    cube([1, 1, 1.29]);
  translate([240, 100, 0])
    cube([1, 1, 1.33]);
  translate([241, 100, 0])
    cube([1, 1, 1.29]);
  translate([242, 100, 0])
    cube([1, 1, 1.29]);
  translate([243, 100, 0])
    cube([1, 1, 1.33]);
  translate([244, 100, 0])
    cube([1, 1, 1.33]);
  translate([245, 100, 0])
    cube([1, 1, 1.33]);
  translate([246, 100, 0])
    cube([1, 1, 1.33]);
  translate([0, 101, 0])
    cube([1, 1, 1.45]);
  translate([1, 101, 0])
    cube([1, 1, 1.45]);
  translate([2, 101, 0])
    cube([1, 1, 1.45]);
  translate([3, 101, 0])
    cube([1, 1, 1.45]);
  translate([4, 101, 0])
    cube([1, 1, 1.45]);
  translate([5, 101, 0])
    cube([1, 1, 1.45]);
  translate([6, 101, 0])
    cube([1, 1, 1.45]);
  translate([7, 101, 0])
    cube([1, 1, 1.45]);
  translate([8, 101, 0])
    cube([1, 1, 1.45]);
  translate([9, 101, 0])
    cube([1, 1, 1.45]);
  translate([10, 101, 0])
    cube([1, 1, 1.45]);
  translate([11, 101, 0])
    cube([1, 1, 1.45]);
  translate([12, 101, 0])
    cube([1, 1, 1.45]);
  translate([13, 101, 0])
    cube([1, 1, 1.45]);
  translate([14, 101, 0])
    cube([1, 1, 1.45]);
  translate([15, 101, 0])
    cube([1, 1, 1.45]);
  translate([16, 101, 0])
    cube([1, 1, 1.45]);
  translate([17, 101, 0])
    cube([1, 1, 1.45]);
  translate([18, 101, 0])
    cube([1, 1, 1.45]);
  translate([19, 101, 0])
    cube([1, 1, 1.45]);
  translate([20, 101, 0])
    cube([1, 1, 1.45]);
  translate([21, 101, 0])
    cube([1, 1, 1.45]);
  translate([22, 101, 0])
    cube([1, 1, 1.45]);
  translate([23, 101, 0])
    cube([1, 1, 1.45]);
  translate([24, 101, 0])
    cube([1, 1, 1.41]);
  translate([25, 101, 0])
    cube([1, 1, 1.45]);
  translate([26, 101, 0])
    cube([1, 1, 1.41]);
  translate([27, 101, 0])
    cube([1, 1, 1.41]);
  translate([28, 101, 0])
    cube([1, 1, 1.41]);
  translate([29, 101, 0])
    cube([1, 1, 1.45]);
  translate([30, 101, 0])
    cube([1, 1, 1.41]);
  translate([31, 101, 0])
    cube([1, 1, 1.41]);
  translate([32, 101, 0])
    cube([1, 1, 1.41]);
  translate([33, 101, 0])
    cube([1, 1, 1.41]);
  translate([34, 101, 0])
    cube([1, 1, 1.41]);
  translate([35, 101, 0])
    cube([1, 1, 1.41]);
  translate([36, 101, 0])
    cube([1, 1, 1.49]);
  translate([37, 101, 0])
    cube([1, 1, 4.98]);
  translate([38, 101, 0])
    cube([1, 1, 0.67]);
  translate([39, 101, 0])
    cube([1, 1, 2.16]);
  translate([40, 101, 0])
    cube([1, 1, 2.24]);
  translate([41, 101, 0])
    cube([1, 1, 1.45]);
  translate([42, 101, 0])
    cube([1, 1, 0.71]);
  translate([43, 101, 0])
    cube([1, 1, 1.06]);
  translate([44, 101, 0])
    cube([1, 1, 1.06]);
  translate([45, 101, 0])
    cube([1, 1, 1.22]);
  translate([46, 101, 0])
    cube([1, 1, 1.53]);
  translate([47, 101, 0])
    cube([1, 1, 1.69]);
  translate([48, 101, 0])
    cube([1, 1, 2.00]);
  translate([49, 101, 0])
    cube([1, 1, 2.08]);
  translate([50, 101, 0])
    cube([1, 1, 1.73]);
  translate([51, 101, 0])
    cube([1, 1, 1.80]);
  translate([52, 101, 0])
    cube([1, 1, 1.57]);
  translate([53, 101, 0])
    cube([1, 1, 2.51]);
  translate([54, 101, 0])
    cube([1, 1, 7.96]);
  translate([55, 101, 0])
    cube([1, 1, 8.31]);
  translate([56, 101, 0])
    cube([1, 1, 7.45]);
  translate([57, 101, 0])
    cube([1, 1, 6.27]);
  translate([58, 101, 0])
    cube([1, 1, 4.94]);
  translate([59, 101, 0])
    cube([1, 1, 4.59]);
  translate([60, 101, 0])
    cube([1, 1, 4.90]);
  translate([61, 101, 0])
    cube([1, 1, 5.37]);
  translate([62, 101, 0])
    cube([1, 1, 5.49]);
  translate([63, 101, 0])
    cube([1, 1, 5.80]);
  translate([64, 101, 0])
    cube([1, 1, 5.96]);
  translate([65, 101, 0])
    cube([1, 1, 6.00]);
  translate([66, 101, 0])
    cube([1, 1, 6.04]);
  translate([67, 101, 0])
    cube([1, 1, 6.00]);
  translate([68, 101, 0])
    cube([1, 1, 6.04]);
  translate([69, 101, 0])
    cube([1, 1, 6.20]);
  translate([70, 101, 0])
    cube([1, 1, 6.31]);
  translate([71, 101, 0])
    cube([1, 1, 6.35]);
  translate([72, 101, 0])
    cube([1, 1, 6.12]);
  translate([73, 101, 0])
    cube([1, 1, 5.29]);
  translate([74, 101, 0])
    cube([1, 1, 2.20]);
  translate([75, 101, 0])
    cube([1, 1, 0.75]);
  translate([76, 101, 0])
    cube([1, 1, 0.51]);
  translate([77, 101, 0])
    cube([1, 1, 1.22]);
  translate([78, 101, 0])
    cube([1, 1, 1.25]);
  translate([79, 101, 0])
    cube([1, 1, 2.00]);
  translate([80, 101, 0])
    cube([1, 1, 1.92]);
  translate([81, 101, 0])
    cube([1, 1, 1.84]);
  translate([82, 101, 0])
    cube([1, 1, 1.84]);
  translate([83, 101, 0])
    cube([1, 1, 1.02]);
  translate([84, 101, 0])
    cube([1, 1, 3.76]);
  translate([85, 101, 0])
    cube([1, 1, 1.45]);
  translate([86, 101, 0])
    cube([1, 1, 0.63]);
  translate([87, 101, 0])
    cube([1, 1, 1.33]);
  translate([88, 101, 0])
    cube([1, 1, 1.37]);
  translate([89, 101, 0])
    cube([1, 1, 1.41]);
  translate([90, 101, 0])
    cube([1, 1, 1.33]);
  translate([91, 101, 0])
    cube([1, 1, 1.41]);
  translate([92, 101, 0])
    cube([1, 1, 1.45]);
  translate([93, 101, 0])
    cube([1, 1, 1.18]);
  translate([94, 101, 0])
    cube([1, 1, 1.14]);
  translate([95, 101, 0])
    cube([1, 1, 1.18]);
  translate([96, 101, 0])
    cube([1, 1, 2.24]);
  translate([97, 101, 0])
    cube([1, 1, 1.53]);
  translate([98, 101, 0])
    cube([1, 1, 1.49]);
  translate([99, 101, 0])
    cube([1, 1, 1.65]);
  translate([100, 101, 0])
    cube([1, 1, 1.69]);
  translate([101, 101, 0])
    cube([1, 1, 1.45]);
  translate([102, 101, 0])
    cube([1, 1, 1.22]);
  translate([103, 101, 0])
    cube([1, 1, 1.96]);
  translate([104, 101, 0])
    cube([1, 1, 4.86]);
  translate([105, 101, 0])
    cube([1, 1, 5.06]);
  translate([106, 101, 0])
    cube([1, 1, 5.41]);
  translate([107, 101, 0])
    cube([1, 1, 5.57]);
  translate([108, 101, 0])
    cube([1, 1, 5.61]);
  translate([109, 101, 0])
    cube([1, 1, 5.76]);
  translate([110, 101, 0])
    cube([1, 1, 5.88]);
  translate([111, 101, 0])
    cube([1, 1, 6.24]);
  translate([112, 101, 0])
    cube([1, 1, 6.31]);
  translate([113, 101, 0])
    cube([1, 1, 6.20]);
  translate([114, 101, 0])
    cube([1, 1, 6.08]);
  translate([115, 101, 0])
    cube([1, 1, 6.00]);
  translate([116, 101, 0])
    cube([1, 1, 5.96]);
  translate([117, 101, 0])
    cube([1, 1, 5.92]);
  translate([118, 101, 0])
    cube([1, 1, 5.88]);
  translate([119, 101, 0])
    cube([1, 1, 5.80]);
  translate([120, 101, 0])
    cube([1, 1, 5.69]);
  translate([121, 101, 0])
    cube([1, 1, 5.69]);
  translate([122, 101, 0])
    cube([1, 1, 5.69]);
  translate([123, 101, 0])
    cube([1, 1, 5.65]);
  translate([124, 101, 0])
    cube([1, 1, 5.69]);
  translate([125, 101, 0])
    cube([1, 1, 6.00]);
  translate([126, 101, 0])
    cube([1, 1, 6.12]);
  translate([127, 101, 0])
    cube([1, 1, 6.24]);
  translate([128, 101, 0])
    cube([1, 1, 6.43]);
  translate([129, 101, 0])
    cube([1, 1, 6.55]);
  translate([130, 101, 0])
    cube([1, 1, 6.67]);
  translate([131, 101, 0])
    cube([1, 1, 6.78]);
  translate([132, 101, 0])
    cube([1, 1, 6.47]);
  translate([133, 101, 0])
    cube([1, 1, 3.80]);
  translate([134, 101, 0])
    cube([1, 1, 1.65]);
  translate([135, 101, 0])
    cube([1, 1, 3.14]);
  translate([136, 101, 0])
    cube([1, 1, 1.29]);
  translate([137, 101, 0])
    cube([1, 1, 1.25]);
  translate([138, 101, 0])
    cube([1, 1, 1.29]);
  translate([139, 101, 0])
    cube([1, 1, 1.29]);
  translate([140, 101, 0])
    cube([1, 1, 1.29]);
  translate([141, 101, 0])
    cube([1, 1, 1.29]);
  translate([142, 101, 0])
    cube([1, 1, 1.29]);
  translate([143, 101, 0])
    cube([1, 1, 1.29]);
  translate([144, 101, 0])
    cube([1, 1, 1.29]);
  translate([145, 101, 0])
    cube([1, 1, 1.29]);
  translate([146, 101, 0])
    cube([1, 1, 1.29]);
  translate([147, 101, 0])
    cube([1, 1, 1.29]);
  translate([148, 101, 0])
    cube([1, 1, 1.29]);
  translate([149, 101, 0])
    cube([1, 1, 1.29]);
  translate([150, 101, 0])
    cube([1, 1, 1.29]);
  translate([151, 101, 0])
    cube([1, 1, 1.29]);
  translate([152, 101, 0])
    cube([1, 1, 1.29]);
  translate([153, 101, 0])
    cube([1, 1, 1.29]);
  translate([154, 101, 0])
    cube([1, 1, 1.33]);
  translate([155, 101, 0])
    cube([1, 1, 1.29]);
  translate([156, 101, 0])
    cube([1, 1, 1.33]);
  translate([157, 101, 0])
    cube([1, 1, 1.33]);
  translate([158, 101, 0])
    cube([1, 1, 1.33]);
  translate([159, 101, 0])
    cube([1, 1, 1.33]);
  translate([160, 101, 0])
    cube([1, 1, 1.33]);
  translate([161, 101, 0])
    cube([1, 1, 1.33]);
  translate([162, 101, 0])
    cube([1, 1, 1.33]);
  translate([163, 101, 0])
    cube([1, 1, 1.33]);
  translate([164, 101, 0])
    cube([1, 1, 1.33]);
  translate([165, 101, 0])
    cube([1, 1, 1.33]);
  translate([166, 101, 0])
    cube([1, 1, 1.33]);
  translate([167, 101, 0])
    cube([1, 1, 1.33]);
  translate([168, 101, 0])
    cube([1, 1, 1.33]);
  translate([169, 101, 0])
    cube([1, 1, 1.33]);
  translate([170, 101, 0])
    cube([1, 1, 1.33]);
  translate([171, 101, 0])
    cube([1, 1, 1.33]);
  translate([172, 101, 0])
    cube([1, 1, 1.33]);
  translate([173, 101, 0])
    cube([1, 1, 1.33]);
  translate([174, 101, 0])
    cube([1, 1, 1.33]);
  translate([175, 101, 0])
    cube([1, 1, 1.33]);
  translate([176, 101, 0])
    cube([1, 1, 1.33]);
  translate([177, 101, 0])
    cube([1, 1, 1.33]);
  translate([178, 101, 0])
    cube([1, 1, 1.33]);
  translate([179, 101, 0])
    cube([1, 1, 1.33]);
  translate([180, 101, 0])
    cube([1, 1, 1.33]);
  translate([181, 101, 0])
    cube([1, 1, 1.33]);
  translate([182, 101, 0])
    cube([1, 1, 1.33]);
  translate([183, 101, 0])
    cube([1, 1, 1.33]);
  translate([184, 101, 0])
    cube([1, 1, 1.33]);
  translate([185, 101, 0])
    cube([1, 1, 1.33]);
  translate([186, 101, 0])
    cube([1, 1, 1.33]);
  translate([187, 101, 0])
    cube([1, 1, 1.33]);
  translate([188, 101, 0])
    cube([1, 1, 1.33]);
  translate([189, 101, 0])
    cube([1, 1, 1.33]);
  translate([190, 101, 0])
    cube([1, 1, 1.33]);
  translate([191, 101, 0])
    cube([1, 1, 1.33]);
  translate([192, 101, 0])
    cube([1, 1, 1.33]);
  translate([193, 101, 0])
    cube([1, 1, 1.33]);
  translate([194, 101, 0])
    cube([1, 1, 1.33]);
  translate([195, 101, 0])
    cube([1, 1, 1.33]);
  translate([196, 101, 0])
    cube([1, 1, 1.33]);
  translate([197, 101, 0])
    cube([1, 1, 1.33]);
  translate([198, 101, 0])
    cube([1, 1, 1.33]);
  translate([199, 101, 0])
    cube([1, 1, 1.33]);
  translate([200, 101, 0])
    cube([1, 1, 1.33]);
  translate([201, 101, 0])
    cube([1, 1, 1.33]);
  translate([202, 101, 0])
    cube([1, 1, 1.33]);
  translate([203, 101, 0])
    cube([1, 1, 1.33]);
  translate([204, 101, 0])
    cube([1, 1, 1.33]);
  translate([205, 101, 0])
    cube([1, 1, 1.33]);
  translate([206, 101, 0])
    cube([1, 1, 1.33]);
  translate([207, 101, 0])
    cube([1, 1, 1.33]);
  translate([208, 101, 0])
    cube([1, 1, 1.33]);
  translate([209, 101, 0])
    cube([1, 1, 1.33]);
  translate([210, 101, 0])
    cube([1, 1, 1.33]);
  translate([211, 101, 0])
    cube([1, 1, 1.33]);
  translate([212, 101, 0])
    cube([1, 1, 1.33]);
  translate([213, 101, 0])
    cube([1, 1, 1.33]);
  translate([214, 101, 0])
    cube([1, 1, 1.33]);
  translate([215, 101, 0])
    cube([1, 1, 1.33]);
  translate([216, 101, 0])
    cube([1, 1, 1.33]);
  translate([217, 101, 0])
    cube([1, 1, 1.33]);
  translate([218, 101, 0])
    cube([1, 1, 1.33]);
  translate([219, 101, 0])
    cube([1, 1, 1.33]);
  translate([220, 101, 0])
    cube([1, 1, 1.33]);
  translate([221, 101, 0])
    cube([1, 1, 1.33]);
  translate([222, 101, 0])
    cube([1, 1, 1.33]);
  translate([223, 101, 0])
    cube([1, 1, 1.33]);
  translate([224, 101, 0])
    cube([1, 1, 1.33]);
  translate([225, 101, 0])
    cube([1, 1, 1.33]);
  translate([226, 101, 0])
    cube([1, 1, 1.33]);
  translate([227, 101, 0])
    cube([1, 1, 1.33]);
  translate([228, 101, 0])
    cube([1, 1, 1.33]);
  translate([229, 101, 0])
    cube([1, 1, 1.33]);
  translate([230, 101, 0])
    cube([1, 1, 1.33]);
  translate([231, 101, 0])
    cube([1, 1, 1.33]);
  translate([232, 101, 0])
    cube([1, 1, 1.33]);
  translate([233, 101, 0])
    cube([1, 1, 1.33]);
  translate([234, 101, 0])
    cube([1, 1, 1.33]);
  translate([235, 101, 0])
    cube([1, 1, 1.33]);
  translate([236, 101, 0])
    cube([1, 1, 1.33]);
  translate([237, 101, 0])
    cube([1, 1, 1.33]);
  translate([238, 101, 0])
    cube([1, 1, 1.33]);
  translate([239, 101, 0])
    cube([1, 1, 1.33]);
  translate([240, 101, 0])
    cube([1, 1, 1.33]);
  translate([241, 101, 0])
    cube([1, 1, 1.33]);
  translate([242, 101, 0])
    cube([1, 1, 1.33]);
  translate([243, 101, 0])
    cube([1, 1, 1.33]);
  translate([244, 101, 0])
    cube([1, 1, 1.29]);
  translate([245, 101, 0])
    cube([1, 1, 1.33]);
  translate([246, 101, 0])
    cube([1, 1, 1.33]);
  translate([0, 102, 0])
    cube([1, 1, 1.45]);
  translate([1, 102, 0])
    cube([1, 1, 1.45]);
  translate([2, 102, 0])
    cube([1, 1, 1.45]);
  translate([3, 102, 0])
    cube([1, 1, 1.49]);
  translate([4, 102, 0])
    cube([1, 1, 1.45]);
  translate([5, 102, 0])
    cube([1, 1, 1.45]);
  translate([6, 102, 0])
    cube([1, 1, 1.45]);
  translate([7, 102, 0])
    cube([1, 1, 1.45]);
  translate([8, 102, 0])
    cube([1, 1, 1.45]);
  translate([9, 102, 0])
    cube([1, 1, 1.45]);
  translate([10, 102, 0])
    cube([1, 1, 1.45]);
  translate([11, 102, 0])
    cube([1, 1, 1.45]);
  translate([12, 102, 0])
    cube([1, 1, 1.45]);
  translate([13, 102, 0])
    cube([1, 1, 1.45]);
  translate([14, 102, 0])
    cube([1, 1, 1.45]);
  translate([15, 102, 0])
    cube([1, 1, 1.45]);
  translate([16, 102, 0])
    cube([1, 1, 1.45]);
  translate([17, 102, 0])
    cube([1, 1, 1.45]);
  translate([18, 102, 0])
    cube([1, 1, 1.45]);
  translate([19, 102, 0])
    cube([1, 1, 1.45]);
  translate([20, 102, 0])
    cube([1, 1, 1.45]);
  translate([21, 102, 0])
    cube([1, 1, 1.45]);
  translate([22, 102, 0])
    cube([1, 1, 1.45]);
  translate([23, 102, 0])
    cube([1, 1, 1.45]);
  translate([24, 102, 0])
    cube([1, 1, 1.41]);
  translate([25, 102, 0])
    cube([1, 1, 1.45]);
  translate([26, 102, 0])
    cube([1, 1, 1.41]);
  translate([27, 102, 0])
    cube([1, 1, 1.41]);
  translate([28, 102, 0])
    cube([1, 1, 1.41]);
  translate([29, 102, 0])
    cube([1, 1, 1.45]);
  translate([30, 102, 0])
    cube([1, 1, 1.41]);
  translate([31, 102, 0])
    cube([1, 1, 1.41]);
  translate([32, 102, 0])
    cube([1, 1, 1.41]);
  translate([33, 102, 0])
    cube([1, 1, 1.41]);
  translate([34, 102, 0])
    cube([1, 1, 1.41]);
  translate([35, 102, 0])
    cube([1, 1, 1.41]);
  translate([36, 102, 0])
    cube([1, 1, 1.29]);
  translate([37, 102, 0])
    cube([1, 1, 2.04]);
  translate([38, 102, 0])
    cube([1, 1, 5.29]);
  translate([39, 102, 0])
    cube([1, 1, 2.12]);
  translate([40, 102, 0])
    cube([1, 1, 1.45]);
  translate([41, 102, 0])
    cube([1, 1, 0.98]);
  translate([42, 102, 0])
    cube([1, 1, 5.33]);
  translate([43, 102, 0])
    cube([1, 1, 0.78]);
  translate([44, 102, 0])
    cube([1, 1, 0.94]);
  translate([45, 102, 0])
    cube([1, 1, 1.14]);
  translate([46, 102, 0])
    cube([1, 1, 1.45]);
  translate([47, 102, 0])
    cube([1, 1, 1.65]);
  translate([48, 102, 0])
    cube([1, 1, 1.76]);
  translate([49, 102, 0])
    cube([1, 1, 1.80]);
  translate([50, 102, 0])
    cube([1, 1, 2.04]);
  translate([51, 102, 0])
    cube([1, 1, 1.80]);
  translate([52, 102, 0])
    cube([1, 1, 1.88]);
  translate([53, 102, 0])
    cube([1, 1, 1.96]);
  translate([54, 102, 0])
    cube([1, 1, 8.39]);
  translate([55, 102, 0])
    cube([1, 1, 8.35]);
  translate([56, 102, 0])
    cube([1, 1, 7.49]);
  translate([57, 102, 0])
    cube([1, 1, 6.35]);
  translate([58, 102, 0])
    cube([1, 1, 4.98]);
  translate([59, 102, 0])
    cube([1, 1, 4.59]);
  translate([60, 102, 0])
    cube([1, 1, 4.98]);
  translate([61, 102, 0])
    cube([1, 1, 5.33]);
  translate([62, 102, 0])
    cube([1, 1, 5.61]);
  translate([63, 102, 0])
    cube([1, 1, 5.80]);
  translate([64, 102, 0])
    cube([1, 1, 5.96]);
  translate([65, 102, 0])
    cube([1, 1, 6.00]);
  translate([66, 102, 0])
    cube([1, 1, 6.04]);
  translate([67, 102, 0])
    cube([1, 1, 6.08]);
  translate([68, 102, 0])
    cube([1, 1, 6.16]);
  translate([69, 102, 0])
    cube([1, 1, 6.31]);
  translate([70, 102, 0])
    cube([1, 1, 6.39]);
  translate([71, 102, 0])
    cube([1, 1, 6.43]);
  translate([72, 102, 0])
    cube([1, 1, 6.31]);
  translate([73, 102, 0])
    cube([1, 1, 5.37]);
  translate([74, 102, 0])
    cube([1, 1, 2.78]);
  translate([75, 102, 0])
    cube([1, 1, 0.75]);
  translate([76, 102, 0])
    cube([1, 1, 0.59]);
  translate([77, 102, 0])
    cube([1, 1, 1.06]);
  translate([78, 102, 0])
    cube([1, 1, 1.45]);
  translate([79, 102, 0])
    cube([1, 1, 1.92]);
  translate([80, 102, 0])
    cube([1, 1, 3.10]);
  translate([81, 102, 0])
    cube([1, 1, 1.69]);
  translate([82, 102, 0])
    cube([1, 1, 1.57]);
  translate([83, 102, 0])
    cube([1, 1, 1.37]);
  translate([84, 102, 0])
    cube([1, 1, 4.04]);
  translate([85, 102, 0])
    cube([1, 1, 3.10]);
  translate([86, 102, 0])
    cube([1, 1, 0.86]);
  translate([87, 102, 0])
    cube([1, 1, 0.55]);
  translate([88, 102, 0])
    cube([1, 1, 1.29]);
  translate([89, 102, 0])
    cube([1, 1, 1.41]);
  translate([90, 102, 0])
    cube([1, 1, 1.33]);
  translate([91, 102, 0])
    cube([1, 1, 1.41]);
  translate([92, 102, 0])
    cube([1, 1, 1.22]);
  translate([93, 102, 0])
    cube([1, 1, 1.45]);
  translate([94, 102, 0])
    cube([1, 1, 1.33]);
  translate([95, 102, 0])
    cube([1, 1, 1.49]);
  translate([96, 102, 0])
    cube([1, 1, 1.65]);
  translate([97, 102, 0])
    cube([1, 1, 1.10]);
  translate([98, 102, 0])
    cube([1, 1, 1.33]);
  translate([99, 102, 0])
    cube([1, 1, 1.25]);
  translate([100, 102, 0])
    cube([1, 1, 1.69]);
  translate([101, 102, 0])
    cube([1, 1, 2.00]);
  translate([102, 102, 0])
    cube([1, 1, 2.04]);
  translate([103, 102, 0])
    cube([1, 1, 4.78]);
  translate([104, 102, 0])
    cube([1, 1, 5.14]);
  translate([105, 102, 0])
    cube([1, 1, 5.29]);
  translate([106, 102, 0])
    cube([1, 1, 5.65]);
  translate([107, 102, 0])
    cube([1, 1, 5.80]);
  translate([108, 102, 0])
    cube([1, 1, 5.80]);
  translate([109, 102, 0])
    cube([1, 1, 5.76]);
  translate([110, 102, 0])
    cube([1, 1, 5.84]);
  translate([111, 102, 0])
    cube([1, 1, 6.35]);
  translate([112, 102, 0])
    cube([1, 1, 6.39]);
  translate([113, 102, 0])
    cube([1, 1, 6.27]);
  translate([114, 102, 0])
    cube([1, 1, 6.04]);
  translate([115, 102, 0])
    cube([1, 1, 5.96]);
  translate([116, 102, 0])
    cube([1, 1, 5.92]);
  translate([117, 102, 0])
    cube([1, 1, 5.84]);
  translate([118, 102, 0])
    cube([1, 1, 5.88]);
  translate([119, 102, 0])
    cube([1, 1, 5.80]);
  translate([120, 102, 0])
    cube([1, 1, 5.76]);
  translate([121, 102, 0])
    cube([1, 1, 5.80]);
  translate([122, 102, 0])
    cube([1, 1, 5.80]);
  translate([123, 102, 0])
    cube([1, 1, 5.73]);
  translate([124, 102, 0])
    cube([1, 1, 5.61]);
  translate([125, 102, 0])
    cube([1, 1, 5.69]);
  translate([126, 102, 0])
    cube([1, 1, 5.76]);
  translate([127, 102, 0])
    cube([1, 1, 5.92]);
  translate([128, 102, 0])
    cube([1, 1, 6.08]);
  translate([129, 102, 0])
    cube([1, 1, 6.20]);
  translate([130, 102, 0])
    cube([1, 1, 6.47]);
  translate([131, 102, 0])
    cube([1, 1, 6.63]);
  translate([132, 102, 0])
    cube([1, 1, 6.98]);
  translate([133, 102, 0])
    cube([1, 1, 6.71]);
  translate([134, 102, 0])
    cube([1, 1, 6.78]);
  translate([135, 102, 0])
    cube([1, 1, 0.90]);
  translate([136, 102, 0])
    cube([1, 1, 4.47]);
  translate([137, 102, 0])
    cube([1, 1, 1.25]);
  translate([138, 102, 0])
    cube([1, 1, 1.29]);
  translate([139, 102, 0])
    cube([1, 1, 1.29]);
  translate([140, 102, 0])
    cube([1, 1, 1.29]);
  translate([141, 102, 0])
    cube([1, 1, 1.29]);
  translate([142, 102, 0])
    cube([1, 1, 1.29]);
  translate([143, 102, 0])
    cube([1, 1, 1.29]);
  translate([144, 102, 0])
    cube([1, 1, 1.29]);
  translate([145, 102, 0])
    cube([1, 1, 1.29]);
  translate([146, 102, 0])
    cube([1, 1, 1.29]);
  translate([147, 102, 0])
    cube([1, 1, 1.29]);
  translate([148, 102, 0])
    cube([1, 1, 1.29]);
  translate([149, 102, 0])
    cube([1, 1, 1.29]);
  translate([150, 102, 0])
    cube([1, 1, 1.29]);
  translate([151, 102, 0])
    cube([1, 1, 1.29]);
  translate([152, 102, 0])
    cube([1, 1, 1.29]);
  translate([153, 102, 0])
    cube([1, 1, 1.29]);
  translate([154, 102, 0])
    cube([1, 1, 1.33]);
  translate([155, 102, 0])
    cube([1, 1, 1.29]);
  translate([156, 102, 0])
    cube([1, 1, 1.33]);
  translate([157, 102, 0])
    cube([1, 1, 1.33]);
  translate([158, 102, 0])
    cube([1, 1, 1.33]);
  translate([159, 102, 0])
    cube([1, 1, 1.33]);
  translate([160, 102, 0])
    cube([1, 1, 1.33]);
  translate([161, 102, 0])
    cube([1, 1, 1.33]);
  translate([162, 102, 0])
    cube([1, 1, 1.33]);
  translate([163, 102, 0])
    cube([1, 1, 1.33]);
  translate([164, 102, 0])
    cube([1, 1, 1.33]);
  translate([165, 102, 0])
    cube([1, 1, 1.33]);
  translate([166, 102, 0])
    cube([1, 1, 1.33]);
  translate([167, 102, 0])
    cube([1, 1, 1.33]);
  translate([168, 102, 0])
    cube([1, 1, 1.33]);
  translate([169, 102, 0])
    cube([1, 1, 1.33]);
  translate([170, 102, 0])
    cube([1, 1, 1.33]);
  translate([171, 102, 0])
    cube([1, 1, 1.33]);
  translate([172, 102, 0])
    cube([1, 1, 1.33]);
  translate([173, 102, 0])
    cube([1, 1, 1.33]);
  translate([174, 102, 0])
    cube([1, 1, 1.33]);
  translate([175, 102, 0])
    cube([1, 1, 1.33]);
  translate([176, 102, 0])
    cube([1, 1, 1.33]);
  translate([177, 102, 0])
    cube([1, 1, 1.33]);
  translate([178, 102, 0])
    cube([1, 1, 1.33]);
  translate([179, 102, 0])
    cube([1, 1, 1.33]);
  translate([180, 102, 0])
    cube([1, 1, 1.33]);
  translate([181, 102, 0])
    cube([1, 1, 1.33]);
  translate([182, 102, 0])
    cube([1, 1, 1.33]);
  translate([183, 102, 0])
    cube([1, 1, 1.33]);
  translate([184, 102, 0])
    cube([1, 1, 1.33]);
  translate([185, 102, 0])
    cube([1, 1, 1.33]);
  translate([186, 102, 0])
    cube([1, 1, 1.33]);
  translate([187, 102, 0])
    cube([1, 1, 1.33]);
  translate([188, 102, 0])
    cube([1, 1, 1.33]);
  translate([189, 102, 0])
    cube([1, 1, 1.33]);
  translate([190, 102, 0])
    cube([1, 1, 1.33]);
  translate([191, 102, 0])
    cube([1, 1, 1.33]);
  translate([192, 102, 0])
    cube([1, 1, 1.33]);
  translate([193, 102, 0])
    cube([1, 1, 1.33]);
  translate([194, 102, 0])
    cube([1, 1, 1.33]);
  translate([195, 102, 0])
    cube([1, 1, 1.33]);
  translate([196, 102, 0])
    cube([1, 1, 1.33]);
  translate([197, 102, 0])
    cube([1, 1, 1.33]);
  translate([198, 102, 0])
    cube([1, 1, 1.33]);
  translate([199, 102, 0])
    cube([1, 1, 1.33]);
  translate([200, 102, 0])
    cube([1, 1, 1.33]);
  translate([201, 102, 0])
    cube([1, 1, 1.33]);
  translate([202, 102, 0])
    cube([1, 1, 1.33]);
  translate([203, 102, 0])
    cube([1, 1, 1.33]);
  translate([204, 102, 0])
    cube([1, 1, 1.33]);
  translate([205, 102, 0])
    cube([1, 1, 1.33]);
  translate([206, 102, 0])
    cube([1, 1, 1.33]);
  translate([207, 102, 0])
    cube([1, 1, 1.33]);
  translate([208, 102, 0])
    cube([1, 1, 1.33]);
  translate([209, 102, 0])
    cube([1, 1, 1.33]);
  translate([210, 102, 0])
    cube([1, 1, 1.33]);
  translate([211, 102, 0])
    cube([1, 1, 1.33]);
  translate([212, 102, 0])
    cube([1, 1, 1.33]);
  translate([213, 102, 0])
    cube([1, 1, 1.33]);
  translate([214, 102, 0])
    cube([1, 1, 1.33]);
  translate([215, 102, 0])
    cube([1, 1, 1.33]);
  translate([216, 102, 0])
    cube([1, 1, 1.33]);
  translate([217, 102, 0])
    cube([1, 1, 1.33]);
  translate([218, 102, 0])
    cube([1, 1, 1.33]);
  translate([219, 102, 0])
    cube([1, 1, 1.33]);
  translate([220, 102, 0])
    cube([1, 1, 1.33]);
  translate([221, 102, 0])
    cube([1, 1, 1.33]);
  translate([222, 102, 0])
    cube([1, 1, 1.33]);
  translate([223, 102, 0])
    cube([1, 1, 1.33]);
  translate([224, 102, 0])
    cube([1, 1, 1.33]);
  translate([225, 102, 0])
    cube([1, 1, 1.33]);
  translate([226, 102, 0])
    cube([1, 1, 1.33]);
  translate([227, 102, 0])
    cube([1, 1, 1.33]);
  translate([228, 102, 0])
    cube([1, 1, 1.33]);
  translate([229, 102, 0])
    cube([1, 1, 1.33]);
  translate([230, 102, 0])
    cube([1, 1, 1.33]);
  translate([231, 102, 0])
    cube([1, 1, 1.33]);
  translate([232, 102, 0])
    cube([1, 1, 1.33]);
  translate([233, 102, 0])
    cube([1, 1, 1.33]);
  translate([234, 102, 0])
    cube([1, 1, 1.33]);
  translate([235, 102, 0])
    cube([1, 1, 1.33]);
  translate([236, 102, 0])
    cube([1, 1, 1.33]);
  translate([237, 102, 0])
    cube([1, 1, 1.33]);
  translate([238, 102, 0])
    cube([1, 1, 1.33]);
  translate([239, 102, 0])
    cube([1, 1, 1.33]);
  translate([240, 102, 0])
    cube([1, 1, 1.33]);
  translate([241, 102, 0])
    cube([1, 1, 1.33]);
  translate([242, 102, 0])
    cube([1, 1, 1.33]);
  translate([243, 102, 0])
    cube([1, 1, 1.33]);
  translate([244, 102, 0])
    cube([1, 1, 1.29]);
  translate([245, 102, 0])
    cube([1, 1, 1.33]);
  translate([246, 102, 0])
    cube([1, 1, 1.33]);
  translate([0, 103, 0])
    cube([1, 1, 1.45]);
  translate([1, 103, 0])
    cube([1, 1, 1.45]);
  translate([2, 103, 0])
    cube([1, 1, 1.49]);
  translate([3, 103, 0])
    cube([1, 1, 1.45]);
  translate([4, 103, 0])
    cube([1, 1, 1.45]);
  translate([5, 103, 0])
    cube([1, 1, 1.45]);
  translate([6, 103, 0])
    cube([1, 1, 1.45]);
  translate([7, 103, 0])
    cube([1, 1, 1.49]);
  translate([8, 103, 0])
    cube([1, 1, 1.45]);
  translate([9, 103, 0])
    cube([1, 1, 1.45]);
  translate([10, 103, 0])
    cube([1, 1, 1.45]);
  translate([11, 103, 0])
    cube([1, 1, 1.45]);
  translate([12, 103, 0])
    cube([1, 1, 1.45]);
  translate([13, 103, 0])
    cube([1, 1, 1.45]);
  translate([14, 103, 0])
    cube([1, 1, 1.45]);
  translate([15, 103, 0])
    cube([1, 1, 1.45]);
  translate([16, 103, 0])
    cube([1, 1, 1.45]);
  translate([17, 103, 0])
    cube([1, 1, 1.41]);
  translate([18, 103, 0])
    cube([1, 1, 1.45]);
  translate([19, 103, 0])
    cube([1, 1, 1.45]);
  translate([20, 103, 0])
    cube([1, 1, 1.45]);
  translate([21, 103, 0])
    cube([1, 1, 1.45]);
  translate([22, 103, 0])
    cube([1, 1, 1.41]);
  translate([23, 103, 0])
    cube([1, 1, 1.45]);
  translate([24, 103, 0])
    cube([1, 1, 1.45]);
  translate([25, 103, 0])
    cube([1, 1, 1.37]);
  translate([26, 103, 0])
    cube([1, 1, 1.37]);
  translate([27, 103, 0])
    cube([1, 1, 1.45]);
  translate([28, 103, 0])
    cube([1, 1, 1.41]);
  translate([29, 103, 0])
    cube([1, 1, 1.41]);
  translate([30, 103, 0])
    cube([1, 1, 1.41]);
  translate([31, 103, 0])
    cube([1, 1, 1.41]);
  translate([32, 103, 0])
    cube([1, 1, 1.41]);
  translate([33, 103, 0])
    cube([1, 1, 1.37]);
  translate([34, 103, 0])
    cube([1, 1, 1.37]);
  translate([35, 103, 0])
    cube([1, 1, 1.41]);
  translate([36, 103, 0])
    cube([1, 1, 1.22]);
  translate([37, 103, 0])
    cube([1, 1, 1.65]);
  translate([38, 103, 0])
    cube([1, 1, 6.71]);
  translate([39, 103, 0])
    cube([1, 1, 3.02]);
  translate([40, 103, 0])
    cube([1, 1, 1.65]);
  translate([41, 103, 0])
    cube([1, 1, 1.61]);
  translate([42, 103, 0])
    cube([1, 1, 1.06]);
  translate([43, 103, 0])
    cube([1, 1, 0.86]);
  translate([44, 103, 0])
    cube([1, 1, 0.90]);
  translate([45, 103, 0])
    cube([1, 1, 1.06]);
  translate([46, 103, 0])
    cube([1, 1, 1.29]);
  translate([47, 103, 0])
    cube([1, 1, 1.65]);
  translate([48, 103, 0])
    cube([1, 1, 1.88]);
  translate([49, 103, 0])
    cube([1, 1, 1.92]);
  translate([50, 103, 0])
    cube([1, 1, 1.92]);
  translate([51, 103, 0])
    cube([1, 1, 1.73]);
  translate([52, 103, 0])
    cube([1, 1, 2.71]);
  translate([53, 103, 0])
    cube([1, 1, 2.20]);
  translate([54, 103, 0])
    cube([1, 1, 8.55]);
  translate([55, 103, 0])
    cube([1, 1, 8.51]);
  translate([56, 103, 0])
    cube([1, 1, 7.61]);
  translate([57, 103, 0])
    cube([1, 1, 6.47]);
  translate([58, 103, 0])
    cube([1, 1, 5.02]);
  translate([59, 103, 0])
    cube([1, 1, 4.67]);
  translate([60, 103, 0])
    cube([1, 1, 4.98]);
  translate([61, 103, 0])
    cube([1, 1, 5.33]);
  translate([62, 103, 0])
    cube([1, 1, 5.53]);
  translate([63, 103, 0])
    cube([1, 1, 5.88]);
  translate([64, 103, 0])
    cube([1, 1, 6.00]);
  translate([65, 103, 0])
    cube([1, 1, 5.92]);
  translate([66, 103, 0])
    cube([1, 1, 6.04]);
  translate([67, 103, 0])
    cube([1, 1, 6.08]);
  translate([68, 103, 0])
    cube([1, 1, 6.16]);
  translate([69, 103, 0])
    cube([1, 1, 6.39]);
  translate([70, 103, 0])
    cube([1, 1, 6.43]);
  translate([71, 103, 0])
    cube([1, 1, 6.47]);
  translate([72, 103, 0])
    cube([1, 1, 6.39]);
  translate([73, 103, 0])
    cube([1, 1, 5.65]);
  translate([74, 103, 0])
    cube([1, 1, 3.45]);
  translate([75, 103, 0])
    cube([1, 1, 1.25]);
  translate([76, 103, 0])
    cube([1, 1, 0.59]);
  translate([77, 103, 0])
    cube([1, 1, 0.63]);
  translate([78, 103, 0])
    cube([1, 1, 1.18]);
  translate([79, 103, 0])
    cube([1, 1, 1.57]);
  translate([80, 103, 0])
    cube([1, 1, 2.24]);
  translate([81, 103, 0])
    cube([1, 1, 2.51]);
  translate([82, 103, 0])
    cube([1, 1, 1.96]);
  translate([83, 103, 0])
    cube([1, 1, 1.53]);
  translate([84, 103, 0])
    cube([1, 1, 3.41]);
  translate([85, 103, 0])
    cube([1, 1, 3.57]);
  translate([86, 103, 0])
    cube([1, 1, 2.00]);
  translate([87, 103, 0])
    cube([1, 1, 0.67]);
  translate([88, 103, 0])
    cube([1, 1, 1.02]);
  translate([89, 103, 0])
    cube([1, 1, 1.14]);
  translate([90, 103, 0])
    cube([1, 1, 1.37]);
  translate([91, 103, 0])
    cube([1, 1, 1.29]);
  translate([92, 103, 0])
    cube([1, 1, 1.33]);
  translate([93, 103, 0])
    cube([1, 1, 1.25]);
  translate([94, 103, 0])
    cube([1, 1, 1.14]);
  translate([95, 103, 0])
    cube([1, 1, 0.94]);
  translate([96, 103, 0])
    cube([1, 1, 2.98]);
  translate([97, 103, 0])
    cube([1, 1, 1.37]);
  translate([98, 103, 0])
    cube([1, 1, 1.84]);
  translate([99, 103, 0])
    cube([1, 1, 2.16]);
  translate([100, 103, 0])
    cube([1, 1, 3.45]);
  translate([101, 103, 0])
    cube([1, 1, 4.71]);
  translate([102, 103, 0])
    cube([1, 1, 4.78]);
  translate([103, 103, 0])
    cube([1, 1, 4.78]);
  translate([104, 103, 0])
    cube([1, 1, 5.02]);
  translate([105, 103, 0])
    cube([1, 1, 5.33]);
  translate([106, 103, 0])
    cube([1, 1, 5.65]);
  translate([107, 103, 0])
    cube([1, 1, 5.80]);
  translate([108, 103, 0])
    cube([1, 1, 6.08]);
  translate([109, 103, 0])
    cube([1, 1, 6.04]);
  translate([110, 103, 0])
    cube([1, 1, 5.80]);
  translate([111, 103, 0])
    cube([1, 1, 5.88]);
  translate([112, 103, 0])
    cube([1, 1, 6.67]);
  translate([113, 103, 0])
    cube([1, 1, 6.16]);
  translate([114, 103, 0])
    cube([1, 1, 6.16]);
  translate([115, 103, 0])
    cube([1, 1, 5.96]);
  translate([116, 103, 0])
    cube([1, 1, 6.00]);
  translate([117, 103, 0])
    cube([1, 1, 6.04]);
  translate([118, 103, 0])
    cube([1, 1, 5.84]);
  translate([119, 103, 0])
    cube([1, 1, 5.84]);
  translate([120, 103, 0])
    cube([1, 1, 5.84]);
  translate([121, 103, 0])
    cube([1, 1, 5.84]);
  translate([122, 103, 0])
    cube([1, 1, 5.80]);
  translate([123, 103, 0])
    cube([1, 1, 5.69]);
  translate([124, 103, 0])
    cube([1, 1, 5.84]);
  translate([125, 103, 0])
    cube([1, 1, 5.84]);
  translate([126, 103, 0])
    cube([1, 1, 5.80]);
  translate([127, 103, 0])
    cube([1, 1, 5.80]);
  translate([128, 103, 0])
    cube([1, 1, 5.80]);
  translate([129, 103, 0])
    cube([1, 1, 5.80]);
  translate([130, 103, 0])
    cube([1, 1, 6.00]);
  translate([131, 103, 0])
    cube([1, 1, 6.24]);
  translate([132, 103, 0])
    cube([1, 1, 6.39]);
  translate([133, 103, 0])
    cube([1, 1, 6.63]);
  translate([134, 103, 0])
    cube([1, 1, 6.67]);
  translate([135, 103, 0])
    cube([1, 1, 5.96]);
  translate([136, 103, 0])
    cube([1, 1, 1.92]);
  translate([137, 103, 0])
    cube([1, 1, 4.94]);
  translate([138, 103, 0])
    cube([1, 1, 0.98]);
  translate([139, 103, 0])
    cube([1, 1, 1.25]);
  translate([140, 103, 0])
    cube([1, 1, 1.25]);
  translate([141, 103, 0])
    cube([1, 1, 1.29]);
  translate([142, 103, 0])
    cube([1, 1, 1.25]);
  translate([143, 103, 0])
    cube([1, 1, 1.29]);
  translate([144, 103, 0])
    cube([1, 1, 1.29]);
  translate([145, 103, 0])
    cube([1, 1, 1.29]);
  translate([146, 103, 0])
    cube([1, 1, 1.29]);
  translate([147, 103, 0])
    cube([1, 1, 1.29]);
  translate([148, 103, 0])
    cube([1, 1, 1.29]);
  translate([149, 103, 0])
    cube([1, 1, 1.29]);
  translate([150, 103, 0])
    cube([1, 1, 1.29]);
  translate([151, 103, 0])
    cube([1, 1, 1.33]);
  translate([152, 103, 0])
    cube([1, 1, 1.33]);
  translate([153, 103, 0])
    cube([1, 1, 1.33]);
  translate([154, 103, 0])
    cube([1, 1, 1.33]);
  translate([155, 103, 0])
    cube([1, 1, 1.29]);
  translate([156, 103, 0])
    cube([1, 1, 1.29]);
  translate([157, 103, 0])
    cube([1, 1, 1.33]);
  translate([158, 103, 0])
    cube([1, 1, 1.33]);
  translate([159, 103, 0])
    cube([1, 1, 1.29]);
  translate([160, 103, 0])
    cube([1, 1, 1.33]);
  translate([161, 103, 0])
    cube([1, 1, 1.33]);
  translate([162, 103, 0])
    cube([1, 1, 1.33]);
  translate([163, 103, 0])
    cube([1, 1, 1.33]);
  translate([164, 103, 0])
    cube([1, 1, 1.33]);
  translate([165, 103, 0])
    cube([1, 1, 1.33]);
  translate([166, 103, 0])
    cube([1, 1, 1.33]);
  translate([167, 103, 0])
    cube([1, 1, 1.37]);
  translate([168, 103, 0])
    cube([1, 1, 1.33]);
  translate([169, 103, 0])
    cube([1, 1, 1.33]);
  translate([170, 103, 0])
    cube([1, 1, 1.33]);
  translate([171, 103, 0])
    cube([1, 1, 1.33]);
  translate([172, 103, 0])
    cube([1, 1, 1.33]);
  translate([173, 103, 0])
    cube([1, 1, 1.33]);
  translate([174, 103, 0])
    cube([1, 1, 1.33]);
  translate([175, 103, 0])
    cube([1, 1, 1.33]);
  translate([176, 103, 0])
    cube([1, 1, 1.33]);
  translate([177, 103, 0])
    cube([1, 1, 1.33]);
  translate([178, 103, 0])
    cube([1, 1, 1.33]);
  translate([179, 103, 0])
    cube([1, 1, 1.33]);
  translate([180, 103, 0])
    cube([1, 1, 1.33]);
  translate([181, 103, 0])
    cube([1, 1, 1.33]);
  translate([182, 103, 0])
    cube([1, 1, 1.33]);
  translate([183, 103, 0])
    cube([1, 1, 1.33]);
  translate([184, 103, 0])
    cube([1, 1, 1.33]);
  translate([185, 103, 0])
    cube([1, 1, 1.33]);
  translate([186, 103, 0])
    cube([1, 1, 1.33]);
  translate([187, 103, 0])
    cube([1, 1, 1.33]);
  translate([188, 103, 0])
    cube([1, 1, 1.33]);
  translate([189, 103, 0])
    cube([1, 1, 1.33]);
  translate([190, 103, 0])
    cube([1, 1, 1.33]);
  translate([191, 103, 0])
    cube([1, 1, 1.33]);
  translate([192, 103, 0])
    cube([1, 1, 1.33]);
  translate([193, 103, 0])
    cube([1, 1, 1.33]);
  translate([194, 103, 0])
    cube([1, 1, 1.33]);
  translate([195, 103, 0])
    cube([1, 1, 1.33]);
  translate([196, 103, 0])
    cube([1, 1, 1.33]);
  translate([197, 103, 0])
    cube([1, 1, 1.33]);
  translate([198, 103, 0])
    cube([1, 1, 1.33]);
  translate([199, 103, 0])
    cube([1, 1, 1.33]);
  translate([200, 103, 0])
    cube([1, 1, 1.33]);
  translate([201, 103, 0])
    cube([1, 1, 1.33]);
  translate([202, 103, 0])
    cube([1, 1, 1.33]);
  translate([203, 103, 0])
    cube([1, 1, 1.33]);
  translate([204, 103, 0])
    cube([1, 1, 1.33]);
  translate([205, 103, 0])
    cube([1, 1, 1.33]);
  translate([206, 103, 0])
    cube([1, 1, 1.33]);
  translate([207, 103, 0])
    cube([1, 1, 1.33]);
  translate([208, 103, 0])
    cube([1, 1, 1.33]);
  translate([209, 103, 0])
    cube([1, 1, 1.33]);
  translate([210, 103, 0])
    cube([1, 1, 1.33]);
  translate([211, 103, 0])
    cube([1, 1, 1.33]);
  translate([212, 103, 0])
    cube([1, 1, 1.33]);
  translate([213, 103, 0])
    cube([1, 1, 1.33]);
  translate([214, 103, 0])
    cube([1, 1, 1.33]);
  translate([215, 103, 0])
    cube([1, 1, 1.33]);
  translate([216, 103, 0])
    cube([1, 1, 1.33]);
  translate([217, 103, 0])
    cube([1, 1, 1.33]);
  translate([218, 103, 0])
    cube([1, 1, 1.33]);
  translate([219, 103, 0])
    cube([1, 1, 1.33]);
  translate([220, 103, 0])
    cube([1, 1, 1.33]);
  translate([221, 103, 0])
    cube([1, 1, 1.33]);
  translate([222, 103, 0])
    cube([1, 1, 1.33]);
  translate([223, 103, 0])
    cube([1, 1, 1.33]);
  translate([224, 103, 0])
    cube([1, 1, 1.33]);
  translate([225, 103, 0])
    cube([1, 1, 1.33]);
  translate([226, 103, 0])
    cube([1, 1, 1.33]);
  translate([227, 103, 0])
    cube([1, 1, 1.33]);
  translate([228, 103, 0])
    cube([1, 1, 1.33]);
  translate([229, 103, 0])
    cube([1, 1, 1.33]);
  translate([230, 103, 0])
    cube([1, 1, 1.33]);
  translate([231, 103, 0])
    cube([1, 1, 1.33]);
  translate([232, 103, 0])
    cube([1, 1, 1.33]);
  translate([233, 103, 0])
    cube([1, 1, 1.33]);
  translate([234, 103, 0])
    cube([1, 1, 1.33]);
  translate([235, 103, 0])
    cube([1, 1, 1.33]);
  translate([236, 103, 0])
    cube([1, 1, 1.33]);
  translate([237, 103, 0])
    cube([1, 1, 1.33]);
  translate([238, 103, 0])
    cube([1, 1, 1.33]);
  translate([239, 103, 0])
    cube([1, 1, 1.33]);
  translate([240, 103, 0])
    cube([1, 1, 1.33]);
  translate([241, 103, 0])
    cube([1, 1, 1.33]);
  translate([242, 103, 0])
    cube([1, 1, 1.33]);
  translate([243, 103, 0])
    cube([1, 1, 1.33]);
  translate([244, 103, 0])
    cube([1, 1, 1.33]);
  translate([245, 103, 0])
    cube([1, 1, 1.33]);
  translate([246, 103, 0])
    cube([1, 1, 1.33]);
  translate([0, 104, 0])
    cube([1, 1, 1.49]);
  translate([1, 104, 0])
    cube([1, 1, 1.45]);
  translate([2, 104, 0])
    cube([1, 1, 1.49]);
  translate([3, 104, 0])
    cube([1, 1, 1.49]);
  translate([4, 104, 0])
    cube([1, 1, 1.53]);
  translate([5, 104, 0])
    cube([1, 1, 1.49]);
  translate([6, 104, 0])
    cube([1, 1, 1.45]);
  translate([7, 104, 0])
    cube([1, 1, 1.45]);
  translate([8, 104, 0])
    cube([1, 1, 1.45]);
  translate([9, 104, 0])
    cube([1, 1, 1.45]);
  translate([10, 104, 0])
    cube([1, 1, 1.45]);
  translate([11, 104, 0])
    cube([1, 1, 1.45]);
  translate([12, 104, 0])
    cube([1, 1, 1.45]);
  translate([13, 104, 0])
    cube([1, 1, 1.45]);
  translate([14, 104, 0])
    cube([1, 1, 1.45]);
  translate([15, 104, 0])
    cube([1, 1, 1.45]);
  translate([16, 104, 0])
    cube([1, 1, 1.45]);
  translate([17, 104, 0])
    cube([1, 1, 1.45]);
  translate([18, 104, 0])
    cube([1, 1, 1.45]);
  translate([19, 104, 0])
    cube([1, 1, 1.45]);
  translate([20, 104, 0])
    cube([1, 1, 1.41]);
  translate([21, 104, 0])
    cube([1, 1, 1.41]);
  translate([22, 104, 0])
    cube([1, 1, 1.45]);
  translate([23, 104, 0])
    cube([1, 1, 1.45]);
  translate([24, 104, 0])
    cube([1, 1, 1.45]);
  translate([25, 104, 0])
    cube([1, 1, 1.45]);
  translate([26, 104, 0])
    cube([1, 1, 1.45]);
  translate([27, 104, 0])
    cube([1, 1, 1.45]);
  translate([28, 104, 0])
    cube([1, 1, 1.37]);
  translate([29, 104, 0])
    cube([1, 1, 1.37]);
  translate([30, 104, 0])
    cube([1, 1, 1.41]);
  translate([31, 104, 0])
    cube([1, 1, 1.41]);
  translate([32, 104, 0])
    cube([1, 1, 1.41]);
  translate([33, 104, 0])
    cube([1, 1, 1.41]);
  translate([34, 104, 0])
    cube([1, 1, 1.41]);
  translate([35, 104, 0])
    cube([1, 1, 1.37]);
  translate([36, 104, 0])
    cube([1, 1, 1.22]);
  translate([37, 104, 0])
    cube([1, 1, 1.33]);
  translate([38, 104, 0])
    cube([1, 1, 5.45]);
  translate([39, 104, 0])
    cube([1, 1, 6.16]);
  translate([40, 104, 0])
    cube([1, 1, 2.98]);
  translate([41, 104, 0])
    cube([1, 1, 1.61]);
  translate([42, 104, 0])
    cube([1, 1, 1.49]);
  translate([43, 104, 0])
    cube([1, 1, 0.94]);
  translate([44, 104, 0])
    cube([1, 1, 0.86]);
  translate([45, 104, 0])
    cube([1, 1, 1.02]);
  translate([46, 104, 0])
    cube([1, 1, 1.22]);
  translate([47, 104, 0])
    cube([1, 1, 1.53]);
  translate([48, 104, 0])
    cube([1, 1, 2.12]);
  translate([49, 104, 0])
    cube([1, 1, 1.76]);
  translate([50, 104, 0])
    cube([1, 1, 1.49]);
  translate([51, 104, 0])
    cube([1, 1, 2.47]);
  translate([52, 104, 0])
    cube([1, 1, 1.92]);
  translate([53, 104, 0])
    cube([1, 1, 2.20]);
  translate([54, 104, 0])
    cube([1, 1, 8.31]);
  translate([55, 104, 0])
    cube([1, 1, 8.55]);
  translate([56, 104, 0])
    cube([1, 1, 7.69]);
  translate([57, 104, 0])
    cube([1, 1, 6.51]);
  translate([58, 104, 0])
    cube([1, 1, 5.02]);
  translate([59, 104, 0])
    cube([1, 1, 4.75]);
  translate([60, 104, 0])
    cube([1, 1, 4.98]);
  translate([61, 104, 0])
    cube([1, 1, 5.37]);
  translate([62, 104, 0])
    cube([1, 1, 5.69]);
  translate([63, 104, 0])
    cube([1, 1, 5.76]);
  translate([64, 104, 0])
    cube([1, 1, 5.96]);
  translate([65, 104, 0])
    cube([1, 1, 6.04]);
  translate([66, 104, 0])
    cube([1, 1, 6.04]);
  translate([67, 104, 0])
    cube([1, 1, 6.08]);
  translate([68, 104, 0])
    cube([1, 1, 6.12]);
  translate([69, 104, 0])
    cube([1, 1, 6.51]);
  translate([70, 104, 0])
    cube([1, 1, 6.47]);
  translate([71, 104, 0])
    cube([1, 1, 6.47]);
  translate([72, 104, 0])
    cube([1, 1, 6.24]);
  translate([73, 104, 0])
    cube([1, 1, 5.76]);
  translate([74, 104, 0])
    cube([1, 1, 4.24]);
  translate([75, 104, 0])
    cube([1, 1, 1.96]);
  translate([76, 104, 0])
    cube([1, 1, 0.78]);
  translate([77, 104, 0])
    cube([1, 1, 0.78]);
  translate([78, 104, 0])
    cube([1, 1, 1.14]);
  translate([79, 104, 0])
    cube([1, 1, 1.14]);
  translate([80, 104, 0])
    cube([1, 1, 1.45]);
  translate([81, 104, 0])
    cube([1, 1, 1.29]);
  translate([82, 104, 0])
    cube([1, 1, 1.92]);
  translate([83, 104, 0])
    cube([1, 1, 1.61]);
  translate([84, 104, 0])
    cube([1, 1, 1.57]);
  translate([85, 104, 0])
    cube([1, 1, 3.10]);
  translate([86, 104, 0])
    cube([1, 1, 2.39]);
  translate([87, 104, 0])
    cube([1, 1, 0.86]);
  translate([88, 104, 0])
    cube([1, 1, 0.75]);
  translate([89, 104, 0])
    cube([1, 1, 1.41]);
  translate([90, 104, 0])
    cube([1, 1, 0.59]);
  translate([91, 104, 0])
    cube([1, 1, 1.33]);
  translate([92, 104, 0])
    cube([1, 1, 1.29]);
  translate([93, 104, 0])
    cube([1, 1, 1.14]);
  translate([94, 104, 0])
    cube([1, 1, 1.41]);
  translate([95, 104, 0])
    cube([1, 1, 1.02]);
  translate([96, 104, 0])
    cube([1, 1, 1.65]);
  translate([97, 104, 0])
    cube([1, 1, 3.37]);
  translate([98, 104, 0])
    cube([1, 1, 3.33]);
  translate([99, 104, 0])
    cube([1, 1, 4.59]);
  translate([100, 104, 0])
    cube([1, 1, 4.39]);
  translate([101, 104, 0])
    cube([1, 1, 4.78]);
  translate([102, 104, 0])
    cube([1, 1, 4.82]);
  translate([103, 104, 0])
    cube([1, 1, 4.94]);
  translate([104, 104, 0])
    cube([1, 1, 5.29]);
  translate([105, 104, 0])
    cube([1, 1, 5.29]);
  translate([106, 104, 0])
    cube([1, 1, 5.57]);
  translate([107, 104, 0])
    cube([1, 1, 5.76]);
  translate([108, 104, 0])
    cube([1, 1, 6.00]);
  translate([109, 104, 0])
    cube([1, 1, 6.08]);
  translate([110, 104, 0])
    cube([1, 1, 6.00]);
  translate([111, 104, 0])
    cube([1, 1, 6.04]);
  translate([112, 104, 0])
    cube([1, 1, 6.16]);
  translate([113, 104, 0])
    cube([1, 1, 6.20]);
  translate([114, 104, 0])
    cube([1, 1, 6.04]);
  translate([115, 104, 0])
    cube([1, 1, 5.96]);
  translate([116, 104, 0])
    cube([1, 1, 5.96]);
  translate([117, 104, 0])
    cube([1, 1, 5.92]);
  translate([118, 104, 0])
    cube([1, 1, 5.80]);
  translate([119, 104, 0])
    cube([1, 1, 5.84]);
  translate([120, 104, 0])
    cube([1, 1, 5.84]);
  translate([121, 104, 0])
    cube([1, 1, 5.80]);
  translate([122, 104, 0])
    cube([1, 1, 5.80]);
  translate([123, 104, 0])
    cube([1, 1, 5.88]);
  translate([124, 104, 0])
    cube([1, 1, 5.73]);
  translate([125, 104, 0])
    cube([1, 1, 5.61]);
  translate([126, 104, 0])
    cube([1, 1, 5.96]);
  translate([127, 104, 0])
    cube([1, 1, 5.80]);
  translate([128, 104, 0])
    cube([1, 1, 5.80]);
  translate([129, 104, 0])
    cube([1, 1, 5.88]);
  translate([130, 104, 0])
    cube([1, 1, 5.88]);
  translate([131, 104, 0])
    cube([1, 1, 5.92]);
  translate([132, 104, 0])
    cube([1, 1, 6.08]);
  translate([133, 104, 0])
    cube([1, 1, 6.20]);
  translate([134, 104, 0])
    cube([1, 1, 6.31]);
  translate([135, 104, 0])
    cube([1, 1, 6.47]);
  translate([136, 104, 0])
    cube([1, 1, 5.76]);
  translate([137, 104, 0])
    cube([1, 1, 2.67]);
  translate([138, 104, 0])
    cube([1, 1, 4.31]);
  translate([139, 104, 0])
    cube([1, 1, 1.29]);
  translate([140, 104, 0])
    cube([1, 1, 1.29]);
  translate([141, 104, 0])
    cube([1, 1, 1.14]);
  translate([142, 104, 0])
    cube([1, 1, 1.29]);
  translate([143, 104, 0])
    cube([1, 1, 1.29]);
  translate([144, 104, 0])
    cube([1, 1, 1.25]);
  translate([145, 104, 0])
    cube([1, 1, 1.29]);
  translate([146, 104, 0])
    cube([1, 1, 1.29]);
  translate([147, 104, 0])
    cube([1, 1, 1.29]);
  translate([148, 104, 0])
    cube([1, 1, 1.29]);
  translate([149, 104, 0])
    cube([1, 1, 1.29]);
  translate([150, 104, 0])
    cube([1, 1, 1.29]);
  translate([151, 104, 0])
    cube([1, 1, 1.29]);
  translate([152, 104, 0])
    cube([1, 1, 1.33]);
  translate([153, 104, 0])
    cube([1, 1, 1.33]);
  translate([154, 104, 0])
    cube([1, 1, 1.33]);
  translate([155, 104, 0])
    cube([1, 1, 1.33]);
  translate([156, 104, 0])
    cube([1, 1, 1.29]);
  translate([157, 104, 0])
    cube([1, 1, 1.29]);
  translate([158, 104, 0])
    cube([1, 1, 1.33]);
  translate([159, 104, 0])
    cube([1, 1, 1.33]);
  translate([160, 104, 0])
    cube([1, 1, 1.33]);
  translate([161, 104, 0])
    cube([1, 1, 1.33]);
  translate([162, 104, 0])
    cube([1, 1, 1.33]);
  translate([163, 104, 0])
    cube([1, 1, 1.33]);
  translate([164, 104, 0])
    cube([1, 1, 1.33]);
  translate([165, 104, 0])
    cube([1, 1, 1.33]);
  translate([166, 104, 0])
    cube([1, 1, 1.33]);
  translate([167, 104, 0])
    cube([1, 1, 1.33]);
  translate([168, 104, 0])
    cube([1, 1, 1.33]);
  translate([169, 104, 0])
    cube([1, 1, 1.33]);
  translate([170, 104, 0])
    cube([1, 1, 1.33]);
  translate([171, 104, 0])
    cube([1, 1, 1.33]);
  translate([172, 104, 0])
    cube([1, 1, 1.33]);
  translate([173, 104, 0])
    cube([1, 1, 1.33]);
  translate([174, 104, 0])
    cube([1, 1, 1.33]);
  translate([175, 104, 0])
    cube([1, 1, 1.33]);
  translate([176, 104, 0])
    cube([1, 1, 1.33]);
  translate([177, 104, 0])
    cube([1, 1, 1.33]);
  translate([178, 104, 0])
    cube([1, 1, 1.33]);
  translate([179, 104, 0])
    cube([1, 1, 1.33]);
  translate([180, 104, 0])
    cube([1, 1, 1.33]);
  translate([181, 104, 0])
    cube([1, 1, 1.33]);
  translate([182, 104, 0])
    cube([1, 1, 1.33]);
  translate([183, 104, 0])
    cube([1, 1, 1.33]);
  translate([184, 104, 0])
    cube([1, 1, 1.33]);
  translate([185, 104, 0])
    cube([1, 1, 1.33]);
  translate([186, 104, 0])
    cube([1, 1, 1.33]);
  translate([187, 104, 0])
    cube([1, 1, 1.33]);
  translate([188, 104, 0])
    cube([1, 1, 1.33]);
  translate([189, 104, 0])
    cube([1, 1, 1.33]);
  translate([190, 104, 0])
    cube([1, 1, 1.33]);
  translate([191, 104, 0])
    cube([1, 1, 1.33]);
  translate([192, 104, 0])
    cube([1, 1, 1.33]);
  translate([193, 104, 0])
    cube([1, 1, 1.33]);
  translate([194, 104, 0])
    cube([1, 1, 1.33]);
  translate([195, 104, 0])
    cube([1, 1, 1.33]);
  translate([196, 104, 0])
    cube([1, 1, 1.33]);
  translate([197, 104, 0])
    cube([1, 1, 1.33]);
  translate([198, 104, 0])
    cube([1, 1, 1.33]);
  translate([199, 104, 0])
    cube([1, 1, 1.33]);
  translate([200, 104, 0])
    cube([1, 1, 1.33]);
  translate([201, 104, 0])
    cube([1, 1, 1.33]);
  translate([202, 104, 0])
    cube([1, 1, 1.33]);
  translate([203, 104, 0])
    cube([1, 1, 1.33]);
  translate([204, 104, 0])
    cube([1, 1, 1.33]);
  translate([205, 104, 0])
    cube([1, 1, 1.33]);
  translate([206, 104, 0])
    cube([1, 1, 1.33]);
  translate([207, 104, 0])
    cube([1, 1, 1.33]);
  translate([208, 104, 0])
    cube([1, 1, 1.33]);
  translate([209, 104, 0])
    cube([1, 1, 1.33]);
  translate([210, 104, 0])
    cube([1, 1, 1.33]);
  translate([211, 104, 0])
    cube([1, 1, 1.33]);
  translate([212, 104, 0])
    cube([1, 1, 1.33]);
  translate([213, 104, 0])
    cube([1, 1, 1.33]);
  translate([214, 104, 0])
    cube([1, 1, 1.33]);
  translate([215, 104, 0])
    cube([1, 1, 1.33]);
  translate([216, 104, 0])
    cube([1, 1, 1.33]);
  translate([217, 104, 0])
    cube([1, 1, 1.33]);
  translate([218, 104, 0])
    cube([1, 1, 1.33]);
  translate([219, 104, 0])
    cube([1, 1, 1.33]);
  translate([220, 104, 0])
    cube([1, 1, 1.33]);
  translate([221, 104, 0])
    cube([1, 1, 1.33]);
  translate([222, 104, 0])
    cube([1, 1, 1.33]);
  translate([223, 104, 0])
    cube([1, 1, 1.33]);
  translate([224, 104, 0])
    cube([1, 1, 1.33]);
  translate([225, 104, 0])
    cube([1, 1, 1.33]);
  translate([226, 104, 0])
    cube([1, 1, 1.33]);
  translate([227, 104, 0])
    cube([1, 1, 1.33]);
  translate([228, 104, 0])
    cube([1, 1, 1.33]);
  translate([229, 104, 0])
    cube([1, 1, 1.33]);
  translate([230, 104, 0])
    cube([1, 1, 1.33]);
  translate([231, 104, 0])
    cube([1, 1, 1.33]);
  translate([232, 104, 0])
    cube([1, 1, 1.33]);
  translate([233, 104, 0])
    cube([1, 1, 1.33]);
  translate([234, 104, 0])
    cube([1, 1, 1.33]);
  translate([235, 104, 0])
    cube([1, 1, 1.33]);
  translate([236, 104, 0])
    cube([1, 1, 1.33]);
  translate([237, 104, 0])
    cube([1, 1, 1.33]);
  translate([238, 104, 0])
    cube([1, 1, 1.33]);
  translate([239, 104, 0])
    cube([1, 1, 1.33]);
  translate([240, 104, 0])
    cube([1, 1, 1.33]);
  translate([241, 104, 0])
    cube([1, 1, 1.33]);
  translate([242, 104, 0])
    cube([1, 1, 1.33]);
  translate([243, 104, 0])
    cube([1, 1, 1.33]);
  translate([244, 104, 0])
    cube([1, 1, 1.33]);
  translate([245, 104, 0])
    cube([1, 1, 1.33]);
  translate([246, 104, 0])
    cube([1, 1, 1.33]);
  translate([0, 105, 0])
    cube([1, 1, 1.49]);
  translate([1, 105, 0])
    cube([1, 1, 1.45]);
  translate([2, 105, 0])
    cube([1, 1, 1.49]);
  translate([3, 105, 0])
    cube([1, 1, 1.49]);
  translate([4, 105, 0])
    cube([1, 1, 1.53]);
  translate([5, 105, 0])
    cube([1, 1, 1.49]);
  translate([6, 105, 0])
    cube([1, 1, 1.45]);
  translate([7, 105, 0])
    cube([1, 1, 1.45]);
  translate([8, 105, 0])
    cube([1, 1, 1.45]);
  translate([9, 105, 0])
    cube([1, 1, 1.45]);
  translate([10, 105, 0])
    cube([1, 1, 1.45]);
  translate([11, 105, 0])
    cube([1, 1, 1.45]);
  translate([12, 105, 0])
    cube([1, 1, 1.45]);
  translate([13, 105, 0])
    cube([1, 1, 1.45]);
  translate([14, 105, 0])
    cube([1, 1, 1.45]);
  translate([15, 105, 0])
    cube([1, 1, 1.45]);
  translate([16, 105, 0])
    cube([1, 1, 1.45]);
  translate([17, 105, 0])
    cube([1, 1, 1.45]);
  translate([18, 105, 0])
    cube([1, 1, 1.45]);
  translate([19, 105, 0])
    cube([1, 1, 1.45]);
  translate([20, 105, 0])
    cube([1, 1, 1.45]);
  translate([21, 105, 0])
    cube([1, 1, 1.45]);
  translate([22, 105, 0])
    cube([1, 1, 1.45]);
  translate([23, 105, 0])
    cube([1, 1, 1.45]);
  translate([24, 105, 0])
    cube([1, 1, 1.45]);
  translate([25, 105, 0])
    cube([1, 1, 1.45]);
  translate([26, 105, 0])
    cube([1, 1, 1.45]);
  translate([27, 105, 0])
    cube([1, 1, 1.45]);
  translate([28, 105, 0])
    cube([1, 1, 1.49]);
  translate([29, 105, 0])
    cube([1, 1, 1.49]);
  translate([30, 105, 0])
    cube([1, 1, 1.41]);
  translate([31, 105, 0])
    cube([1, 1, 1.41]);
  translate([32, 105, 0])
    cube([1, 1, 1.41]);
  translate([33, 105, 0])
    cube([1, 1, 1.41]);
  translate([34, 105, 0])
    cube([1, 1, 1.41]);
  translate([35, 105, 0])
    cube([1, 1, 1.41]);
  translate([36, 105, 0])
    cube([1, 1, 1.45]);
  translate([37, 105, 0])
    cube([1, 1, 1.45]);
  translate([38, 105, 0])
    cube([1, 1, 1.33]);
  translate([39, 105, 0])
    cube([1, 1, 6.90]);
  translate([40, 105, 0])
    cube([1, 1, 2.94]);
  translate([41, 105, 0])
    cube([1, 1, 1.29]);
  translate([42, 105, 0])
    cube([1, 1, 0.98]);
  translate([43, 105, 0])
    cube([1, 1, 0.98]);
  translate([44, 105, 0])
    cube([1, 1, 0.94]);
  translate([45, 105, 0])
    cube([1, 1, 0.98]);
  translate([46, 105, 0])
    cube([1, 1, 1.10]);
  translate([47, 105, 0])
    cube([1, 1, 1.29]);
  translate([48, 105, 0])
    cube([1, 1, 1.76]);
  translate([49, 105, 0])
    cube([1, 1, 3.88]);
  translate([50, 105, 0])
    cube([1, 1, 2.00]);
  translate([51, 105, 0])
    cube([1, 1, 1.84]);
  translate([52, 105, 0])
    cube([1, 1, 2.04]);
  translate([53, 105, 0])
    cube([1, 1, 2.27]);
  translate([54, 105, 0])
    cube([1, 1, 8.39]);
  translate([55, 105, 0])
    cube([1, 1, 8.51]);
  translate([56, 105, 0])
    cube([1, 1, 7.80]);
  translate([57, 105, 0])
    cube([1, 1, 6.55]);
  translate([58, 105, 0])
    cube([1, 1, 5.10]);
  translate([59, 105, 0])
    cube([1, 1, 4.78]);
  translate([60, 105, 0])
    cube([1, 1, 5.10]);
  translate([61, 105, 0])
    cube([1, 1, 5.49]);
  translate([62, 105, 0])
    cube([1, 1, 5.61]);
  translate([63, 105, 0])
    cube([1, 1, 5.92]);
  translate([64, 105, 0])
    cube([1, 1, 5.96]);
  translate([65, 105, 0])
    cube([1, 1, 6.04]);
  translate([66, 105, 0])
    cube([1, 1, 6.04]);
  translate([67, 105, 0])
    cube([1, 1, 6.04]);
  translate([68, 105, 0])
    cube([1, 1, 6.20]);
  translate([69, 105, 0])
    cube([1, 1, 6.47]);
  translate([70, 105, 0])
    cube([1, 1, 6.47]);
  translate([71, 105, 0])
    cube([1, 1, 6.47]);
  translate([72, 105, 0])
    cube([1, 1, 6.35]);
  translate([73, 105, 0])
    cube([1, 1, 5.92]);
  translate([74, 105, 0])
    cube([1, 1, 4.63]);
  translate([75, 105, 0])
    cube([1, 1, 2.47]);
  translate([76, 105, 0])
    cube([1, 1, 0.90]);
  translate([77, 105, 0])
    cube([1, 1, 0.78]);
  translate([78, 105, 0])
    cube([1, 1, 0.98]);
  translate([79, 105, 0])
    cube([1, 1, 1.10]);
  translate([80, 105, 0])
    cube([1, 1, 1.22]);
  translate([81, 105, 0])
    cube([1, 1, 1.49]);
  translate([82, 105, 0])
    cube([1, 1, 1.45]);
  translate([83, 105, 0])
    cube([1, 1, 1.61]);
  translate([84, 105, 0])
    cube([1, 1, 1.73]);
  translate([85, 105, 0])
    cube([1, 1, 3.22]);
  translate([86, 105, 0])
    cube([1, 1, 2.47]);
  translate([87, 105, 0])
    cube([1, 1, 0.98]);
  translate([88, 105, 0])
    cube([1, 1, 1.41]);
  translate([89, 105, 0])
    cube([1, 1, 1.65]);
  translate([90, 105, 0])
    cube([1, 1, 1.84]);
  translate([91, 105, 0])
    cube([1, 1, 1.61]);
  translate([92, 105, 0])
    cube([1, 1, 1.06]);
  translate([93, 105, 0])
    cube([1, 1, 0.94]);
  translate([94, 105, 0])
    cube([1, 1, 1.41]);
  translate([95, 105, 0])
    cube([1, 1, 4.75]);
  translate([96, 105, 0])
    cube([1, 1, 5.18]);
  translate([97, 105, 0])
    cube([1, 1, 4.31]);
  translate([98, 105, 0])
    cube([1, 1, 2.82]);
  translate([99, 105, 0])
    cube([1, 1, 3.80]);
  translate([100, 105, 0])
    cube([1, 1, 4.47]);
  translate([101, 105, 0])
    cube([1, 1, 5.06]);
  translate([102, 105, 0])
    cube([1, 1, 5.06]);
  translate([103, 105, 0])
    cube([1, 1, 5.10]);
  translate([104, 105, 0])
    cube([1, 1, 5.41]);
  translate([105, 105, 0])
    cube([1, 1, 5.41]);
  translate([106, 105, 0])
    cube([1, 1, 5.57]);
  translate([107, 105, 0])
    cube([1, 1, 5.73]);
  translate([108, 105, 0])
    cube([1, 1, 5.92]);
  translate([109, 105, 0])
    cube([1, 1, 6.12]);
  translate([110, 105, 0])
    cube([1, 1, 6.16]);
  translate([111, 105, 0])
    cube([1, 1, 6.20]);
  translate([112, 105, 0])
    cube([1, 1, 6.20]);
  translate([113, 105, 0])
    cube([1, 1, 6.16]);
  translate([114, 105, 0])
    cube([1, 1, 5.96]);
  translate([115, 105, 0])
    cube([1, 1, 5.88]);
  translate([116, 105, 0])
    cube([1, 1, 5.84]);
  translate([117, 105, 0])
    cube([1, 1, 5.80]);
  translate([118, 105, 0])
    cube([1, 1, 5.84]);
  translate([119, 105, 0])
    cube([1, 1, 5.76]);
  translate([120, 105, 0])
    cube([1, 1, 5.80]);
  translate([121, 105, 0])
    cube([1, 1, 5.73]);
  translate([122, 105, 0])
    cube([1, 1, 5.80]);
  translate([123, 105, 0])
    cube([1, 1, 5.80]);
  translate([124, 105, 0])
    cube([1, 1, 5.61]);
  translate([125, 105, 0])
    cube([1, 1, 5.73]);
  translate([126, 105, 0])
    cube([1, 1, 5.84]);
  translate([127, 105, 0])
    cube([1, 1, 5.84]);
  translate([128, 105, 0])
    cube([1, 1, 5.88]);
  translate([129, 105, 0])
    cube([1, 1, 5.92]);
  translate([130, 105, 0])
    cube([1, 1, 5.92]);
  translate([131, 105, 0])
    cube([1, 1, 5.88]);
  translate([132, 105, 0])
    cube([1, 1, 5.88]);
  translate([133, 105, 0])
    cube([1, 1, 6.00]);
  translate([134, 105, 0])
    cube([1, 1, 6.08]);
  translate([135, 105, 0])
    cube([1, 1, 6.16]);
  translate([136, 105, 0])
    cube([1, 1, 5.80]);
  translate([137, 105, 0])
    cube([1, 1, 2.47]);
  translate([138, 105, 0])
    cube([1, 1, 5.02]);
  translate([139, 105, 0])
    cube([1, 1, 4.16]);
  translate([140, 105, 0])
    cube([1, 1, 2.16]);
  translate([141, 105, 0])
    cube([1, 1, 1.22]);
  translate([142, 105, 0])
    cube([1, 1, 1.29]);
  translate([143, 105, 0])
    cube([1, 1, 1.29]);
  translate([144, 105, 0])
    cube([1, 1, 1.29]);
  translate([145, 105, 0])
    cube([1, 1, 1.29]);
  translate([146, 105, 0])
    cube([1, 1, 1.29]);
  translate([147, 105, 0])
    cube([1, 1, 1.29]);
  translate([148, 105, 0])
    cube([1, 1, 1.29]);
  translate([149, 105, 0])
    cube([1, 1, 1.29]);
  translate([150, 105, 0])
    cube([1, 1, 1.29]);
  translate([151, 105, 0])
    cube([1, 1, 1.29]);
  translate([152, 105, 0])
    cube([1, 1, 1.33]);
  translate([153, 105, 0])
    cube([1, 1, 1.33]);
  translate([154, 105, 0])
    cube([1, 1, 1.33]);
  translate([155, 105, 0])
    cube([1, 1, 1.33]);
  translate([156, 105, 0])
    cube([1, 1, 1.33]);
  translate([157, 105, 0])
    cube([1, 1, 1.33]);
  translate([158, 105, 0])
    cube([1, 1, 1.33]);
  translate([159, 105, 0])
    cube([1, 1, 1.33]);
  translate([160, 105, 0])
    cube([1, 1, 1.33]);
  translate([161, 105, 0])
    cube([1, 1, 1.33]);
  translate([162, 105, 0])
    cube([1, 1, 1.33]);
  translate([163, 105, 0])
    cube([1, 1, 1.33]);
  translate([164, 105, 0])
    cube([1, 1, 1.33]);
  translate([165, 105, 0])
    cube([1, 1, 1.33]);
  translate([166, 105, 0])
    cube([1, 1, 1.33]);
  translate([167, 105, 0])
    cube([1, 1, 1.33]);
  translate([168, 105, 0])
    cube([1, 1, 1.33]);
  translate([169, 105, 0])
    cube([1, 1, 1.33]);
  translate([170, 105, 0])
    cube([1, 1, 1.33]);
  translate([171, 105, 0])
    cube([1, 1, 1.33]);
  translate([172, 105, 0])
    cube([1, 1, 1.33]);
  translate([173, 105, 0])
    cube([1, 1, 1.33]);
  translate([174, 105, 0])
    cube([1, 1, 1.33]);
  translate([175, 105, 0])
    cube([1, 1, 1.33]);
  translate([176, 105, 0])
    cube([1, 1, 1.33]);
  translate([177, 105, 0])
    cube([1, 1, 1.33]);
  translate([178, 105, 0])
    cube([1, 1, 1.33]);
  translate([179, 105, 0])
    cube([1, 1, 1.33]);
  translate([180, 105, 0])
    cube([1, 1, 1.33]);
  translate([181, 105, 0])
    cube([1, 1, 1.33]);
  translate([182, 105, 0])
    cube([1, 1, 1.33]);
  translate([183, 105, 0])
    cube([1, 1, 1.33]);
  translate([184, 105, 0])
    cube([1, 1, 1.33]);
  translate([185, 105, 0])
    cube([1, 1, 1.33]);
  translate([186, 105, 0])
    cube([1, 1, 1.33]);
  translate([187, 105, 0])
    cube([1, 1, 1.33]);
  translate([188, 105, 0])
    cube([1, 1, 1.33]);
  translate([189, 105, 0])
    cube([1, 1, 1.33]);
  translate([190, 105, 0])
    cube([1, 1, 1.33]);
  translate([191, 105, 0])
    cube([1, 1, 1.33]);
  translate([192, 105, 0])
    cube([1, 1, 1.33]);
  translate([193, 105, 0])
    cube([1, 1, 1.33]);
  translate([194, 105, 0])
    cube([1, 1, 1.33]);
  translate([195, 105, 0])
    cube([1, 1, 1.33]);
  translate([196, 105, 0])
    cube([1, 1, 1.33]);
  translate([197, 105, 0])
    cube([1, 1, 1.33]);
  translate([198, 105, 0])
    cube([1, 1, 1.33]);
  translate([199, 105, 0])
    cube([1, 1, 1.33]);
  translate([200, 105, 0])
    cube([1, 1, 1.33]);
  translate([201, 105, 0])
    cube([1, 1, 1.33]);
  translate([202, 105, 0])
    cube([1, 1, 1.33]);
  translate([203, 105, 0])
    cube([1, 1, 1.33]);
  translate([204, 105, 0])
    cube([1, 1, 1.33]);
  translate([205, 105, 0])
    cube([1, 1, 1.33]);
  translate([206, 105, 0])
    cube([1, 1, 1.33]);
  translate([207, 105, 0])
    cube([1, 1, 1.33]);
  translate([208, 105, 0])
    cube([1, 1, 1.33]);
  translate([209, 105, 0])
    cube([1, 1, 1.33]);
  translate([210, 105, 0])
    cube([1, 1, 1.33]);
  translate([211, 105, 0])
    cube([1, 1, 1.33]);
  translate([212, 105, 0])
    cube([1, 1, 1.33]);
  translate([213, 105, 0])
    cube([1, 1, 1.33]);
  translate([214, 105, 0])
    cube([1, 1, 1.33]);
  translate([215, 105, 0])
    cube([1, 1, 1.33]);
  translate([216, 105, 0])
    cube([1, 1, 1.33]);
  translate([217, 105, 0])
    cube([1, 1, 1.33]);
  translate([218, 105, 0])
    cube([1, 1, 1.33]);
  translate([219, 105, 0])
    cube([1, 1, 1.33]);
  translate([220, 105, 0])
    cube([1, 1, 1.33]);
  translate([221, 105, 0])
    cube([1, 1, 1.33]);
  translate([222, 105, 0])
    cube([1, 1, 1.33]);
  translate([223, 105, 0])
    cube([1, 1, 1.33]);
  translate([224, 105, 0])
    cube([1, 1, 1.33]);
  translate([225, 105, 0])
    cube([1, 1, 1.33]);
  translate([226, 105, 0])
    cube([1, 1, 1.33]);
  translate([227, 105, 0])
    cube([1, 1, 1.33]);
  translate([228, 105, 0])
    cube([1, 1, 1.33]);
  translate([229, 105, 0])
    cube([1, 1, 1.33]);
  translate([230, 105, 0])
    cube([1, 1, 1.33]);
  translate([231, 105, 0])
    cube([1, 1, 1.33]);
  translate([232, 105, 0])
    cube([1, 1, 1.33]);
  translate([233, 105, 0])
    cube([1, 1, 1.33]);
  translate([234, 105, 0])
    cube([1, 1, 1.33]);
  translate([235, 105, 0])
    cube([1, 1, 1.33]);
  translate([236, 105, 0])
    cube([1, 1, 1.33]);
  translate([237, 105, 0])
    cube([1, 1, 1.33]);
  translate([238, 105, 0])
    cube([1, 1, 1.33]);
  translate([239, 105, 0])
    cube([1, 1, 1.33]);
  translate([240, 105, 0])
    cube([1, 1, 1.33]);
  translate([241, 105, 0])
    cube([1, 1, 1.33]);
  translate([242, 105, 0])
    cube([1, 1, 1.33]);
  translate([243, 105, 0])
    cube([1, 1, 1.33]);
  translate([244, 105, 0])
    cube([1, 1, 1.33]);
  translate([245, 105, 0])
    cube([1, 1, 1.33]);
  translate([246, 105, 0])
    cube([1, 1, 1.33]);
  translate([0, 106, 0])
    cube([1, 1, 1.49]);
  translate([1, 106, 0])
    cube([1, 1, 1.41]);
  translate([2, 106, 0])
    cube([1, 1, 1.45]);
  translate([3, 106, 0])
    cube([1, 1, 1.49]);
  translate([4, 106, 0])
    cube([1, 1, 1.49]);
  translate([5, 106, 0])
    cube([1, 1, 1.49]);
  translate([6, 106, 0])
    cube([1, 1, 1.45]);
  translate([7, 106, 0])
    cube([1, 1, 1.45]);
  translate([8, 106, 0])
    cube([1, 1, 1.45]);
  translate([9, 106, 0])
    cube([1, 1, 1.45]);
  translate([10, 106, 0])
    cube([1, 1, 1.45]);
  translate([11, 106, 0])
    cube([1, 1, 1.49]);
  translate([12, 106, 0])
    cube([1, 1, 1.45]);
  translate([13, 106, 0])
    cube([1, 1, 1.45]);
  translate([14, 106, 0])
    cube([1, 1, 1.45]);
  translate([15, 106, 0])
    cube([1, 1, 1.45]);
  translate([16, 106, 0])
    cube([1, 1, 1.45]);
  translate([17, 106, 0])
    cube([1, 1, 1.45]);
  translate([18, 106, 0])
    cube([1, 1, 1.45]);
  translate([19, 106, 0])
    cube([1, 1, 1.45]);
  translate([20, 106, 0])
    cube([1, 1, 1.45]);
  translate([21, 106, 0])
    cube([1, 1, 1.45]);
  translate([22, 106, 0])
    cube([1, 1, 1.45]);
  translate([23, 106, 0])
    cube([1, 1, 1.45]);
  translate([24, 106, 0])
    cube([1, 1, 1.45]);
  translate([25, 106, 0])
    cube([1, 1, 1.45]);
  translate([26, 106, 0])
    cube([1, 1, 1.45]);
  translate([27, 106, 0])
    cube([1, 1, 1.45]);
  translate([28, 106, 0])
    cube([1, 1, 1.41]);
  translate([29, 106, 0])
    cube([1, 1, 1.45]);
  translate([30, 106, 0])
    cube([1, 1, 1.45]);
  translate([31, 106, 0])
    cube([1, 1, 1.45]);
  translate([32, 106, 0])
    cube([1, 1, 1.41]);
  translate([33, 106, 0])
    cube([1, 1, 1.41]);
  translate([34, 106, 0])
    cube([1, 1, 1.41]);
  translate([35, 106, 0])
    cube([1, 1, 1.37]);
  translate([36, 106, 0])
    cube([1, 1, 1.37]);
  translate([37, 106, 0])
    cube([1, 1, 1.37]);
  translate([38, 106, 0])
    cube([1, 1, 4.24]);
  translate([39, 106, 0])
    cube([1, 1, 1.25]);
  translate([40, 106, 0])
    cube([1, 1, 2.51]);
  translate([41, 106, 0])
    cube([1, 1, 3.29]);
  translate([42, 106, 0])
    cube([1, 1, 1.65]);
  translate([43, 106, 0])
    cube([1, 1, 1.37]);
  translate([44, 106, 0])
    cube([1, 1, 1.06]);
  translate([45, 106, 0])
    cube([1, 1, 0.94]);
  translate([46, 106, 0])
    cube([1, 1, 1.10]);
  translate([47, 106, 0])
    cube([1, 1, 2.00]);
  translate([48, 106, 0])
    cube([1, 1, 2.16]);
  translate([49, 106, 0])
    cube([1, 1, 2.75]);
  translate([50, 106, 0])
    cube([1, 1, 2.04]);
  translate([51, 106, 0])
    cube([1, 1, 2.00]);
  translate([52, 106, 0])
    cube([1, 1, 2.08]);
  translate([53, 106, 0])
    cube([1, 1, 2.08]);
  translate([54, 106, 0])
    cube([1, 1, 8.20]);
  translate([55, 106, 0])
    cube([1, 1, 8.51]);
  translate([56, 106, 0])
    cube([1, 1, 7.92]);
  translate([57, 106, 0])
    cube([1, 1, 6.75]);
  translate([58, 106, 0])
    cube([1, 1, 5.18]);
  translate([59, 106, 0])
    cube([1, 1, 4.59]);
  translate([60, 106, 0])
    cube([1, 1, 4.98]);
  translate([61, 106, 0])
    cube([1, 1, 5.45]);
  translate([62, 106, 0])
    cube([1, 1, 5.65]);
  translate([63, 106, 0])
    cube([1, 1, 5.88]);
  translate([64, 106, 0])
    cube([1, 1, 6.00]);
  translate([65, 106, 0])
    cube([1, 1, 6.00]);
  translate([66, 106, 0])
    cube([1, 1, 6.08]);
  translate([67, 106, 0])
    cube([1, 1, 6.04]);
  translate([68, 106, 0])
    cube([1, 1, 6.27]);
  translate([69, 106, 0])
    cube([1, 1, 6.55]);
  translate([70, 106, 0])
    cube([1, 1, 6.51]);
  translate([71, 106, 0])
    cube([1, 1, 6.43]);
  translate([72, 106, 0])
    cube([1, 1, 6.16]);
  translate([73, 106, 0])
    cube([1, 1, 5.76]);
  translate([74, 106, 0])
    cube([1, 1, 4.55]);
  translate([75, 106, 0])
    cube([1, 1, 2.43]);
  translate([76, 106, 0])
    cube([1, 1, 0.82]);
  translate([77, 106, 0])
    cube([1, 1, 1.10]);
  translate([78, 106, 0])
    cube([1, 1, 1.14]);
  translate([79, 106, 0])
    cube([1, 1, 1.92]);
  translate([80, 106, 0])
    cube([1, 1, 1.10]);
  translate([81, 106, 0])
    cube([1, 1, 1.18]);
  translate([82, 106, 0])
    cube([1, 1, 1.49]);
  translate([83, 106, 0])
    cube([1, 1, 2.00]);
  translate([84, 106, 0])
    cube([1, 1, 2.20]);
  translate([85, 106, 0])
    cube([1, 1, 3.14]);
  translate([86, 106, 0])
    cube([1, 1, 2.35]);
  translate([87, 106, 0])
    cube([1, 1, 0.94]);
  translate([88, 106, 0])
    cube([1, 1, 1.57]);
  translate([89, 106, 0])
    cube([1, 1, 1.53]);
  translate([90, 106, 0])
    cube([1, 1, 1.65]);
  translate([91, 106, 0])
    cube([1, 1, 1.76]);
  translate([92, 106, 0])
    cube([1, 1, 1.80]);
  translate([93, 106, 0])
    cube([1, 1, 2.04]);
  translate([94, 106, 0])
    cube([1, 1, 3.76]);
  translate([95, 106, 0])
    cube([1, 1, 2.90]);
  translate([96, 106, 0])
    cube([1, 1, 3.18]);
  translate([97, 106, 0])
    cube([1, 1, 2.63]);
  translate([98, 106, 0])
    cube([1, 1, 2.86]);
  translate([99, 106, 0])
    cube([1, 1, 3.25]);
  translate([100, 106, 0])
    cube([1, 1, 3.61]);
  translate([101, 106, 0])
    cube([1, 1, 3.57]);
  translate([102, 106, 0])
    cube([1, 1, 5.33]);
  translate([103, 106, 0])
    cube([1, 1, 5.45]);
  translate([104, 106, 0])
    cube([1, 1, 5.37]);
  translate([105, 106, 0])
    cube([1, 1, 5.41]);
  translate([106, 106, 0])
    cube([1, 1, 5.65]);
  translate([107, 106, 0])
    cube([1, 1, 5.73]);
  translate([108, 106, 0])
    cube([1, 1, 5.96]);
  translate([109, 106, 0])
    cube([1, 1, 6.12]);
  translate([110, 106, 0])
    cube([1, 1, 6.20]);
  translate([111, 106, 0])
    cube([1, 1, 6.31]);
  translate([112, 106, 0])
    cube([1, 1, 6.31]);
  translate([113, 106, 0])
    cube([1, 1, 6.20]);
  translate([114, 106, 0])
    cube([1, 1, 6.16]);
  translate([115, 106, 0])
    cube([1, 1, 5.92]);
  translate([116, 106, 0])
    cube([1, 1, 5.84]);
  translate([117, 106, 0])
    cube([1, 1, 5.76]);
  translate([118, 106, 0])
    cube([1, 1, 5.88]);
  translate([119, 106, 0])
    cube([1, 1, 5.84]);
  translate([120, 106, 0])
    cube([1, 1, 5.84]);
  translate([121, 106, 0])
    cube([1, 1, 5.80]);
  translate([122, 106, 0])
    cube([1, 1, 5.84]);
  translate([123, 106, 0])
    cube([1, 1, 5.80]);
  translate([124, 106, 0])
    cube([1, 1, 5.76]);
  translate([125, 106, 0])
    cube([1, 1, 5.88]);
  translate([126, 106, 0])
    cube([1, 1, 5.80]);
  translate([127, 106, 0])
    cube([1, 1, 5.92]);
  translate([128, 106, 0])
    cube([1, 1, 5.96]);
  translate([129, 106, 0])
    cube([1, 1, 5.92]);
  translate([130, 106, 0])
    cube([1, 1, 5.96]);
  translate([131, 106, 0])
    cube([1, 1, 6.00]);
  translate([132, 106, 0])
    cube([1, 1, 6.08]);
  translate([133, 106, 0])
    cube([1, 1, 6.04]);
  translate([134, 106, 0])
    cube([1, 1, 5.96]);
  translate([135, 106, 0])
    cube([1, 1, 5.96]);
  translate([136, 106, 0])
    cube([1, 1, 5.49]);
  translate([137, 106, 0])
    cube([1, 1, 3.69]);
  translate([138, 106, 0])
    cube([1, 1, 4.59]);
  translate([139, 106, 0])
    cube([1, 1, 4.27]);
  translate([140, 106, 0])
    cube([1, 1, 3.53]);
  translate([141, 106, 0])
    cube([1, 1, 3.18]);
  translate([142, 106, 0])
    cube([1, 1, 1.76]);
  translate([143, 106, 0])
    cube([1, 1, 1.41]);
  translate([144, 106, 0])
    cube([1, 1, 1.29]);
  translate([145, 106, 0])
    cube([1, 1, 1.29]);
  translate([146, 106, 0])
    cube([1, 1, 1.29]);
  translate([147, 106, 0])
    cube([1, 1, 1.29]);
  translate([148, 106, 0])
    cube([1, 1, 1.29]);
  translate([149, 106, 0])
    cube([1, 1, 1.29]);
  translate([150, 106, 0])
    cube([1, 1, 1.25]);
  translate([151, 106, 0])
    cube([1, 1, 1.29]);
  translate([152, 106, 0])
    cube([1, 1, 1.29]);
  translate([153, 106, 0])
    cube([1, 1, 1.29]);
  translate([154, 106, 0])
    cube([1, 1, 1.29]);
  translate([155, 106, 0])
    cube([1, 1, 1.33]);
  translate([156, 106, 0])
    cube([1, 1, 1.33]);
  translate([157, 106, 0])
    cube([1, 1, 1.37]);
  translate([158, 106, 0])
    cube([1, 1, 1.33]);
  translate([159, 106, 0])
    cube([1, 1, 1.33]);
  translate([160, 106, 0])
    cube([1, 1, 1.33]);
  translate([161, 106, 0])
    cube([1, 1, 1.33]);
  translate([162, 106, 0])
    cube([1, 1, 1.33]);
  translate([163, 106, 0])
    cube([1, 1, 1.33]);
  translate([164, 106, 0])
    cube([1, 1, 1.33]);
  translate([165, 106, 0])
    cube([1, 1, 1.33]);
  translate([166, 106, 0])
    cube([1, 1, 1.33]);
  translate([167, 106, 0])
    cube([1, 1, 1.33]);
  translate([168, 106, 0])
    cube([1, 1, 1.33]);
  translate([169, 106, 0])
    cube([1, 1, 1.33]);
  translate([170, 106, 0])
    cube([1, 1, 1.33]);
  translate([171, 106, 0])
    cube([1, 1, 1.33]);
  translate([172, 106, 0])
    cube([1, 1, 1.33]);
  translate([173, 106, 0])
    cube([1, 1, 1.33]);
  translate([174, 106, 0])
    cube([1, 1, 1.33]);
  translate([175, 106, 0])
    cube([1, 1, 1.33]);
  translate([176, 106, 0])
    cube([1, 1, 1.33]);
  translate([177, 106, 0])
    cube([1, 1, 1.33]);
  translate([178, 106, 0])
    cube([1, 1, 1.33]);
  translate([179, 106, 0])
    cube([1, 1, 1.33]);
  translate([180, 106, 0])
    cube([1, 1, 1.33]);
  translate([181, 106, 0])
    cube([1, 1, 1.33]);
  translate([182, 106, 0])
    cube([1, 1, 1.33]);
  translate([183, 106, 0])
    cube([1, 1, 1.33]);
  translate([184, 106, 0])
    cube([1, 1, 1.33]);
  translate([185, 106, 0])
    cube([1, 1, 1.33]);
  translate([186, 106, 0])
    cube([1, 1, 1.33]);
  translate([187, 106, 0])
    cube([1, 1, 1.33]);
  translate([188, 106, 0])
    cube([1, 1, 1.33]);
  translate([189, 106, 0])
    cube([1, 1, 1.33]);
  translate([190, 106, 0])
    cube([1, 1, 1.33]);
  translate([191, 106, 0])
    cube([1, 1, 1.33]);
  translate([192, 106, 0])
    cube([1, 1, 1.33]);
  translate([193, 106, 0])
    cube([1, 1, 1.33]);
  translate([194, 106, 0])
    cube([1, 1, 1.33]);
  translate([195, 106, 0])
    cube([1, 1, 1.29]);
  translate([196, 106, 0])
    cube([1, 1, 1.33]);
  translate([197, 106, 0])
    cube([1, 1, 1.33]);
  translate([198, 106, 0])
    cube([1, 1, 1.33]);
  translate([199, 106, 0])
    cube([1, 1, 1.33]);
  translate([200, 106, 0])
    cube([1, 1, 1.37]);
  translate([201, 106, 0])
    cube([1, 1, 1.33]);
  translate([202, 106, 0])
    cube([1, 1, 1.33]);
  translate([203, 106, 0])
    cube([1, 1, 1.33]);
  translate([204, 106, 0])
    cube([1, 1, 1.33]);
  translate([205, 106, 0])
    cube([1, 1, 1.33]);
  translate([206, 106, 0])
    cube([1, 1, 1.33]);
  translate([207, 106, 0])
    cube([1, 1, 1.33]);
  translate([208, 106, 0])
    cube([1, 1, 1.33]);
  translate([209, 106, 0])
    cube([1, 1, 1.33]);
  translate([210, 106, 0])
    cube([1, 1, 1.33]);
  translate([211, 106, 0])
    cube([1, 1, 1.33]);
  translate([212, 106, 0])
    cube([1, 1, 1.33]);
  translate([213, 106, 0])
    cube([1, 1, 1.33]);
  translate([214, 106, 0])
    cube([1, 1, 1.33]);
  translate([215, 106, 0])
    cube([1, 1, 1.33]);
  translate([216, 106, 0])
    cube([1, 1, 1.33]);
  translate([217, 106, 0])
    cube([1, 1, 1.33]);
  translate([218, 106, 0])
    cube([1, 1, 1.37]);
  translate([219, 106, 0])
    cube([1, 1, 1.33]);
  translate([220, 106, 0])
    cube([1, 1, 1.33]);
  translate([221, 106, 0])
    cube([1, 1, 1.33]);
  translate([222, 106, 0])
    cube([1, 1, 1.33]);
  translate([223, 106, 0])
    cube([1, 1, 1.33]);
  translate([224, 106, 0])
    cube([1, 1, 1.33]);
  translate([225, 106, 0])
    cube([1, 1, 1.33]);
  translate([226, 106, 0])
    cube([1, 1, 1.33]);
  translate([227, 106, 0])
    cube([1, 1, 1.33]);
  translate([228, 106, 0])
    cube([1, 1, 1.33]);
  translate([229, 106, 0])
    cube([1, 1, 1.33]);
  translate([230, 106, 0])
    cube([1, 1, 1.33]);
  translate([231, 106, 0])
    cube([1, 1, 1.33]);
  translate([232, 106, 0])
    cube([1, 1, 1.33]);
  translate([233, 106, 0])
    cube([1, 1, 1.33]);
  translate([234, 106, 0])
    cube([1, 1, 1.33]);
  translate([235, 106, 0])
    cube([1, 1, 1.33]);
  translate([236, 106, 0])
    cube([1, 1, 1.33]);
  translate([237, 106, 0])
    cube([1, 1, 1.33]);
  translate([238, 106, 0])
    cube([1, 1, 1.33]);
  translate([239, 106, 0])
    cube([1, 1, 1.33]);
  translate([240, 106, 0])
    cube([1, 1, 1.33]);
  translate([241, 106, 0])
    cube([1, 1, 1.33]);
  translate([242, 106, 0])
    cube([1, 1, 1.33]);
  translate([243, 106, 0])
    cube([1, 1, 1.33]);
  translate([244, 106, 0])
    cube([1, 1, 1.33]);
  translate([245, 106, 0])
    cube([1, 1, 1.33]);
  translate([246, 106, 0])
    cube([1, 1, 1.33]);
  translate([0, 107, 0])
    cube([1, 1, 1.41]);
  translate([1, 107, 0])
    cube([1, 1, 1.41]);
  translate([2, 107, 0])
    cube([1, 1, 1.45]);
  translate([3, 107, 0])
    cube([1, 1, 1.49]);
  translate([4, 107, 0])
    cube([1, 1, 1.49]);
  translate([5, 107, 0])
    cube([1, 1, 1.49]);
  translate([6, 107, 0])
    cube([1, 1, 1.45]);
  translate([7, 107, 0])
    cube([1, 1, 1.45]);
  translate([8, 107, 0])
    cube([1, 1, 1.45]);
  translate([9, 107, 0])
    cube([1, 1, 1.45]);
  translate([10, 107, 0])
    cube([1, 1, 1.45]);
  translate([11, 107, 0])
    cube([1, 1, 1.49]);
  translate([12, 107, 0])
    cube([1, 1, 1.45]);
  translate([13, 107, 0])
    cube([1, 1, 1.45]);
  translate([14, 107, 0])
    cube([1, 1, 1.45]);
  translate([15, 107, 0])
    cube([1, 1, 1.45]);
  translate([16, 107, 0])
    cube([1, 1, 1.45]);
  translate([17, 107, 0])
    cube([1, 1, 1.45]);
  translate([18, 107, 0])
    cube([1, 1, 1.45]);
  translate([19, 107, 0])
    cube([1, 1, 1.45]);
  translate([20, 107, 0])
    cube([1, 1, 1.45]);
  translate([21, 107, 0])
    cube([1, 1, 1.45]);
  translate([22, 107, 0])
    cube([1, 1, 1.45]);
  translate([23, 107, 0])
    cube([1, 1, 1.45]);
  translate([24, 107, 0])
    cube([1, 1, 1.45]);
  translate([25, 107, 0])
    cube([1, 1, 1.45]);
  translate([26, 107, 0])
    cube([1, 1, 1.45]);
  translate([27, 107, 0])
    cube([1, 1, 1.45]);
  translate([28, 107, 0])
    cube([1, 1, 1.41]);
  translate([29, 107, 0])
    cube([1, 1, 1.45]);
  translate([30, 107, 0])
    cube([1, 1, 1.45]);
  translate([31, 107, 0])
    cube([1, 1, 1.45]);
  translate([32, 107, 0])
    cube([1, 1, 1.41]);
  translate([33, 107, 0])
    cube([1, 1, 1.41]);
  translate([34, 107, 0])
    cube([1, 1, 1.41]);
  translate([35, 107, 0])
    cube([1, 1, 1.37]);
  translate([36, 107, 0])
    cube([1, 1, 1.37]);
  translate([37, 107, 0])
    cube([1, 1, 1.37]);
  translate([38, 107, 0])
    cube([1, 1, 1.57]);
  translate([39, 107, 0])
    cube([1, 1, 4.35]);
  translate([40, 107, 0])
    cube([1, 1, 2.39]);
  translate([41, 107, 0])
    cube([1, 1, 1.33]);
  translate([42, 107, 0])
    cube([1, 1, 0.90]);
  translate([43, 107, 0])
    cube([1, 1, 0.86]);
  translate([44, 107, 0])
    cube([1, 1, 0.71]);
  translate([45, 107, 0])
    cube([1, 1, 0.98]);
  translate([46, 107, 0])
    cube([1, 1, 0.90]);
  translate([47, 107, 0])
    cube([1, 1, 1.73]);
  translate([48, 107, 0])
    cube([1, 1, 1.80]);
  translate([49, 107, 0])
    cube([1, 1, 2.51]);
  translate([50, 107, 0])
    cube([1, 1, 2.12]);
  translate([51, 107, 0])
    cube([1, 1, 1.88]);
  translate([52, 107, 0])
    cube([1, 1, 1.96]);
  translate([53, 107, 0])
    cube([1, 1, 5.92]);
  translate([54, 107, 0])
    cube([1, 1, 8.31]);
  translate([55, 107, 0])
    cube([1, 1, 8.59]);
  translate([56, 107, 0])
    cube([1, 1, 7.96]);
  translate([57, 107, 0])
    cube([1, 1, 6.82]);
  translate([58, 107, 0])
    cube([1, 1, 5.22]);
  translate([59, 107, 0])
    cube([1, 1, 4.63]);
  translate([60, 107, 0])
    cube([1, 1, 5.14]);
  translate([61, 107, 0])
    cube([1, 1, 5.33]);
  translate([62, 107, 0])
    cube([1, 1, 5.65]);
  translate([63, 107, 0])
    cube([1, 1, 5.84]);
  translate([64, 107, 0])
    cube([1, 1, 6.08]);
  translate([65, 107, 0])
    cube([1, 1, 6.00]);
  translate([66, 107, 0])
    cube([1, 1, 6.20]);
  translate([67, 107, 0])
    cube([1, 1, 6.12]);
  translate([68, 107, 0])
    cube([1, 1, 6.43]);
  translate([69, 107, 0])
    cube([1, 1, 6.47]);
  translate([70, 107, 0])
    cube([1, 1, 6.35]);
  translate([71, 107, 0])
    cube([1, 1, 6.16]);
  translate([72, 107, 0])
    cube([1, 1, 5.96]);
  translate([73, 107, 0])
    cube([1, 1, 5.65]);
  translate([74, 107, 0])
    cube([1, 1, 4.27]);
  translate([75, 107, 0])
    cube([1, 1, 2.16]);
  translate([76, 107, 0])
    cube([1, 1, 0.98]);
  translate([77, 107, 0])
    cube([1, 1, 1.41]);
  translate([78, 107, 0])
    cube([1, 1, 1.80]);
  translate([79, 107, 0])
    cube([1, 1, 2.31]);
  translate([80, 107, 0])
    cube([1, 1, 2.86]);
  translate([81, 107, 0])
    cube([1, 1, 1.33]);
  translate([82, 107, 0])
    cube([1, 1, 1.10]);
  translate([83, 107, 0])
    cube([1, 1, 2.20]);
  translate([84, 107, 0])
    cube([1, 1, 2.82]);
  translate([85, 107, 0])
    cube([1, 1, 2.94]);
  translate([86, 107, 0])
    cube([1, 1, 1.57]);
  translate([87, 107, 0])
    cube([1, 1, 1.45]);
  translate([88, 107, 0])
    cube([1, 1, 1.49]);
  translate([89, 107, 0])
    cube([1, 1, 1.65]);
  translate([90, 107, 0])
    cube([1, 1, 1.65]);
  translate([91, 107, 0])
    cube([1, 1, 1.73]);
  translate([92, 107, 0])
    cube([1, 1, 2.43]);
  translate([93, 107, 0])
    cube([1, 1, 4.20]);
  translate([94, 107, 0])
    cube([1, 1, 4.35]);
  translate([95, 107, 0])
    cube([1, 1, 4.94]);
  translate([96, 107, 0])
    cube([1, 1, 4.94]);
  translate([97, 107, 0])
    cube([1, 1, 4.51]);
  translate([98, 107, 0])
    cube([1, 1, 5.73]);
  translate([99, 107, 0])
    cube([1, 1, 5.18]);
  translate([100, 107, 0])
    cube([1, 1, 4.75]);
  translate([101, 107, 0])
    cube([1, 1, 3.22]);
  translate([102, 107, 0])
    cube([1, 1, 3.69]);
  translate([103, 107, 0])
    cube([1, 1, 3.92]);
  translate([104, 107, 0])
    cube([1, 1, 5.14]);
  translate([105, 107, 0])
    cube([1, 1, 5.25]);
  translate([106, 107, 0])
    cube([1, 1, 5.49]);
  translate([107, 107, 0])
    cube([1, 1, 5.65]);
  translate([108, 107, 0])
    cube([1, 1, 5.84]);
  translate([109, 107, 0])
    cube([1, 1, 6.04]);
  translate([110, 107, 0])
    cube([1, 1, 6.12]);
  translate([111, 107, 0])
    cube([1, 1, 6.24]);
  translate([112, 107, 0])
    cube([1, 1, 6.31]);
  translate([113, 107, 0])
    cube([1, 1, 6.31]);
  translate([114, 107, 0])
    cube([1, 1, 6.27]);
  translate([115, 107, 0])
    cube([1, 1, 6.35]);
  translate([116, 107, 0])
    cube([1, 1, 5.45]);
  translate([117, 107, 0])
    cube([1, 1, 5.61]);
  translate([118, 107, 0])
    cube([1, 1, 5.69]);
  translate([119, 107, 0])
    cube([1, 1, 5.69]);
  translate([120, 107, 0])
    cube([1, 1, 5.73]);
  translate([121, 107, 0])
    cube([1, 1, 5.73]);
  translate([122, 107, 0])
    cube([1, 1, 5.84]);
  translate([123, 107, 0])
    cube([1, 1, 5.80]);
  translate([124, 107, 0])
    cube([1, 1, 5.76]);
  translate([125, 107, 0])
    cube([1, 1, 5.80]);
  translate([126, 107, 0])
    cube([1, 1, 5.80]);
  translate([127, 107, 0])
    cube([1, 1, 5.84]);
  translate([128, 107, 0])
    cube([1, 1, 5.96]);
  translate([129, 107, 0])
    cube([1, 1, 5.92]);
  translate([130, 107, 0])
    cube([1, 1, 6.08]);
  translate([131, 107, 0])
    cube([1, 1, 6.04]);
  translate([132, 107, 0])
    cube([1, 1, 6.12]);
  translate([133, 107, 0])
    cube([1, 1, 6.08]);
  translate([134, 107, 0])
    cube([1, 1, 5.92]);
  translate([135, 107, 0])
    cube([1, 1, 5.73]);
  translate([136, 107, 0])
    cube([1, 1, 3.22]);
  translate([137, 107, 0])
    cube([1, 1, 5.25]);
  translate([138, 107, 0])
    cube([1, 1, 4.47]);
  translate([139, 107, 0])
    cube([1, 1, 4.24]);
  translate([140, 107, 0])
    cube([1, 1, 4.43]);
  translate([141, 107, 0])
    cube([1, 1, 3.96]);
  translate([142, 107, 0])
    cube([1, 1, 4.47]);
  translate([143, 107, 0])
    cube([1, 1, 1.02]);
  translate([144, 107, 0])
    cube([1, 1, 1.29]);
  translate([145, 107, 0])
    cube([1, 1, 1.29]);
  translate([146, 107, 0])
    cube([1, 1, 1.29]);
  translate([147, 107, 0])
    cube([1, 1, 1.29]);
  translate([148, 107, 0])
    cube([1, 1, 1.29]);
  translate([149, 107, 0])
    cube([1, 1, 1.29]);
  translate([150, 107, 0])
    cube([1, 1, 1.25]);
  translate([151, 107, 0])
    cube([1, 1, 1.29]);
  translate([152, 107, 0])
    cube([1, 1, 1.37]);
  translate([153, 107, 0])
    cube([1, 1, 1.33]);
  translate([154, 107, 0])
    cube([1, 1, 1.33]);
  translate([155, 107, 0])
    cube([1, 1, 1.33]);
  translate([156, 107, 0])
    cube([1, 1, 1.33]);
  translate([157, 107, 0])
    cube([1, 1, 1.37]);
  translate([158, 107, 0])
    cube([1, 1, 1.33]);
  translate([159, 107, 0])
    cube([1, 1, 1.33]);
  translate([160, 107, 0])
    cube([1, 1, 1.33]);
  translate([161, 107, 0])
    cube([1, 1, 1.33]);
  translate([162, 107, 0])
    cube([1, 1, 1.33]);
  translate([163, 107, 0])
    cube([1, 1, 1.33]);
  translate([164, 107, 0])
    cube([1, 1, 1.33]);
  translate([165, 107, 0])
    cube([1, 1, 1.33]);
  translate([166, 107, 0])
    cube([1, 1, 1.33]);
  translate([167, 107, 0])
    cube([1, 1, 1.33]);
  translate([168, 107, 0])
    cube([1, 1, 1.33]);
  translate([169, 107, 0])
    cube([1, 1, 1.33]);
  translate([170, 107, 0])
    cube([1, 1, 1.33]);
  translate([171, 107, 0])
    cube([1, 1, 1.33]);
  translate([172, 107, 0])
    cube([1, 1, 1.33]);
  translate([173, 107, 0])
    cube([1, 1, 1.33]);
  translate([174, 107, 0])
    cube([1, 1, 1.33]);
  translate([175, 107, 0])
    cube([1, 1, 1.33]);
  translate([176, 107, 0])
    cube([1, 1, 1.33]);
  translate([177, 107, 0])
    cube([1, 1, 1.33]);
  translate([178, 107, 0])
    cube([1, 1, 1.33]);
  translate([179, 107, 0])
    cube([1, 1, 1.33]);
  translate([180, 107, 0])
    cube([1, 1, 1.33]);
  translate([181, 107, 0])
    cube([1, 1, 1.33]);
  translate([182, 107, 0])
    cube([1, 1, 1.33]);
  translate([183, 107, 0])
    cube([1, 1, 1.33]);
  translate([184, 107, 0])
    cube([1, 1, 1.33]);
  translate([185, 107, 0])
    cube([1, 1, 1.33]);
  translate([186, 107, 0])
    cube([1, 1, 1.33]);
  translate([187, 107, 0])
    cube([1, 1, 1.33]);
  translate([188, 107, 0])
    cube([1, 1, 1.33]);
  translate([189, 107, 0])
    cube([1, 1, 1.33]);
  translate([190, 107, 0])
    cube([1, 1, 1.33]);
  translate([191, 107, 0])
    cube([1, 1, 1.33]);
  translate([192, 107, 0])
    cube([1, 1, 1.33]);
  translate([193, 107, 0])
    cube([1, 1, 1.33]);
  translate([194, 107, 0])
    cube([1, 1, 1.33]);
  translate([195, 107, 0])
    cube([1, 1, 1.33]);
  translate([196, 107, 0])
    cube([1, 1, 1.33]);
  translate([197, 107, 0])
    cube([1, 1, 1.33]);
  translate([198, 107, 0])
    cube([1, 1, 1.33]);
  translate([199, 107, 0])
    cube([1, 1, 1.33]);
  translate([200, 107, 0])
    cube([1, 1, 1.37]);
  translate([201, 107, 0])
    cube([1, 1, 1.33]);
  translate([202, 107, 0])
    cube([1, 1, 1.33]);
  translate([203, 107, 0])
    cube([1, 1, 1.33]);
  translate([204, 107, 0])
    cube([1, 1, 1.33]);
  translate([205, 107, 0])
    cube([1, 1, 1.33]);
  translate([206, 107, 0])
    cube([1, 1, 1.33]);
  translate([207, 107, 0])
    cube([1, 1, 1.33]);
  translate([208, 107, 0])
    cube([1, 1, 1.33]);
  translate([209, 107, 0])
    cube([1, 1, 1.33]);
  translate([210, 107, 0])
    cube([1, 1, 1.33]);
  translate([211, 107, 0])
    cube([1, 1, 1.33]);
  translate([212, 107, 0])
    cube([1, 1, 1.33]);
  translate([213, 107, 0])
    cube([1, 1, 1.33]);
  translate([214, 107, 0])
    cube([1, 1, 1.33]);
  translate([215, 107, 0])
    cube([1, 1, 1.33]);
  translate([216, 107, 0])
    cube([1, 1, 1.33]);
  translate([217, 107, 0])
    cube([1, 1, 1.33]);
  translate([218, 107, 0])
    cube([1, 1, 1.37]);
  translate([219, 107, 0])
    cube([1, 1, 1.33]);
  translate([220, 107, 0])
    cube([1, 1, 1.33]);
  translate([221, 107, 0])
    cube([1, 1, 1.33]);
  translate([222, 107, 0])
    cube([1, 1, 1.33]);
  translate([223, 107, 0])
    cube([1, 1, 1.33]);
  translate([224, 107, 0])
    cube([1, 1, 1.33]);
  translate([225, 107, 0])
    cube([1, 1, 1.33]);
  translate([226, 107, 0])
    cube([1, 1, 1.33]);
  translate([227, 107, 0])
    cube([1, 1, 1.33]);
  translate([228, 107, 0])
    cube([1, 1, 1.33]);
  translate([229, 107, 0])
    cube([1, 1, 1.33]);
  translate([230, 107, 0])
    cube([1, 1, 1.33]);
  translate([231, 107, 0])
    cube([1, 1, 1.33]);
  translate([232, 107, 0])
    cube([1, 1, 1.33]);
  translate([233, 107, 0])
    cube([1, 1, 1.33]);
  translate([234, 107, 0])
    cube([1, 1, 1.33]);
  translate([235, 107, 0])
    cube([1, 1, 1.33]);
  translate([236, 107, 0])
    cube([1, 1, 1.33]);
  translate([237, 107, 0])
    cube([1, 1, 1.33]);
  translate([238, 107, 0])
    cube([1, 1, 1.33]);
  translate([239, 107, 0])
    cube([1, 1, 1.33]);
  translate([240, 107, 0])
    cube([1, 1, 1.33]);
  translate([241, 107, 0])
    cube([1, 1, 1.33]);
  translate([242, 107, 0])
    cube([1, 1, 1.33]);
  translate([243, 107, 0])
    cube([1, 1, 1.33]);
  translate([244, 107, 0])
    cube([1, 1, 1.33]);
  translate([245, 107, 0])
    cube([1, 1, 1.33]);
  translate([246, 107, 0])
    cube([1, 1, 1.33]);
  translate([0, 108, 0])
    cube([1, 1, 1.49]);
  translate([1, 108, 0])
    cube([1, 1, 1.41]);
  translate([2, 108, 0])
    cube([1, 1, 1.49]);
  translate([3, 108, 0])
    cube([1, 1, 1.49]);
  translate([4, 108, 0])
    cube([1, 1, 1.45]);
  translate([5, 108, 0])
    cube([1, 1, 1.53]);
  translate([6, 108, 0])
    cube([1, 1, 1.45]);
  translate([7, 108, 0])
    cube([1, 1, 1.45]);
  translate([8, 108, 0])
    cube([1, 1, 1.45]);
  translate([9, 108, 0])
    cube([1, 1, 1.45]);
  translate([10, 108, 0])
    cube([1, 1, 1.45]);
  translate([11, 108, 0])
    cube([1, 1, 1.45]);
  translate([12, 108, 0])
    cube([1, 1, 1.45]);
  translate([13, 108, 0])
    cube([1, 1, 1.45]);
  translate([14, 108, 0])
    cube([1, 1, 1.45]);
  translate([15, 108, 0])
    cube([1, 1, 1.45]);
  translate([16, 108, 0])
    cube([1, 1, 1.45]);
  translate([17, 108, 0])
    cube([1, 1, 1.45]);
  translate([18, 108, 0])
    cube([1, 1, 1.45]);
  translate([19, 108, 0])
    cube([1, 1, 1.45]);
  translate([20, 108, 0])
    cube([1, 1, 1.45]);
  translate([21, 108, 0])
    cube([1, 1, 1.45]);
  translate([22, 108, 0])
    cube([1, 1, 1.45]);
  translate([23, 108, 0])
    cube([1, 1, 1.45]);
  translate([24, 108, 0])
    cube([1, 1, 1.45]);
  translate([25, 108, 0])
    cube([1, 1, 1.45]);
  translate([26, 108, 0])
    cube([1, 1, 1.45]);
  translate([27, 108, 0])
    cube([1, 1, 1.45]);
  translate([28, 108, 0])
    cube([1, 1, 1.41]);
  translate([29, 108, 0])
    cube([1, 1, 1.45]);
  translate([30, 108, 0])
    cube([1, 1, 1.41]);
  translate([31, 108, 0])
    cube([1, 1, 1.41]);
  translate([32, 108, 0])
    cube([1, 1, 1.41]);
  translate([33, 108, 0])
    cube([1, 1, 1.41]);
  translate([34, 108, 0])
    cube([1, 1, 1.41]);
  translate([35, 108, 0])
    cube([1, 1, 1.41]);
  translate([36, 108, 0])
    cube([1, 1, 1.41]);
  translate([37, 108, 0])
    cube([1, 1, 1.41]);
  translate([38, 108, 0])
    cube([1, 1, 1.80]);
  translate([39, 108, 0])
    cube([1, 1, 5.49]);
  translate([40, 108, 0])
    cube([1, 1, 2.82]);
  translate([41, 108, 0])
    cube([1, 1, 1.80]);
  translate([42, 108, 0])
    cube([1, 1, 1.37]);
  translate([43, 108, 0])
    cube([1, 1, 0.86]);
  translate([44, 108, 0])
    cube([1, 1, 0.98]);
  translate([45, 108, 0])
    cube([1, 1, 1.02]);
  translate([46, 108, 0])
    cube([1, 1, 1.18]);
  translate([47, 108, 0])
    cube([1, 1, 1.49]);
  translate([48, 108, 0])
    cube([1, 1, 1.49]);
  translate([49, 108, 0])
    cube([1, 1, 1.96]);
  translate([50, 108, 0])
    cube([1, 1, 2.08]);
  translate([51, 108, 0])
    cube([1, 1, 1.73]);
  translate([52, 108, 0])
    cube([1, 1, 5.96]);
  translate([53, 108, 0])
    cube([1, 1, 5.88]);
  translate([54, 108, 0])
    cube([1, 1, 7.92]);
  translate([55, 108, 0])
    cube([1, 1, 8.63]);
  translate([56, 108, 0])
    cube([1, 1, 8.12]);
  translate([57, 108, 0])
    cube([1, 1, 7.02]);
  translate([58, 108, 0])
    cube([1, 1, 5.33]);
  translate([59, 108, 0])
    cube([1, 1, 4.71]);
  translate([60, 108, 0])
    cube([1, 1, 5.06]);
  translate([61, 108, 0])
    cube([1, 1, 5.41]);
  translate([62, 108, 0])
    cube([1, 1, 5.73]);
  translate([63, 108, 0])
    cube([1, 1, 5.88]);
  translate([64, 108, 0])
    cube([1, 1, 6.00]);
  translate([65, 108, 0])
    cube([1, 1, 6.08]);
  translate([66, 108, 0])
    cube([1, 1, 6.24]);
  translate([67, 108, 0])
    cube([1, 1, 6.24]);
  translate([68, 108, 0])
    cube([1, 1, 6.47]);
  translate([69, 108, 0])
    cube([1, 1, 6.35]);
  translate([70, 108, 0])
    cube([1, 1, 6.24]);
  translate([71, 108, 0])
    cube([1, 1, 5.96]);
  translate([72, 108, 0])
    cube([1, 1, 5.69]);
  translate([73, 108, 0])
    cube([1, 1, 5.29]);
  translate([74, 108, 0])
    cube([1, 1, 3.73]);
  translate([75, 108, 0])
    cube([1, 1, 1.61]);
  translate([76, 108, 0])
    cube([1, 1, 1.22]);
  translate([77, 108, 0])
    cube([1, 1, 1.37]);
  translate([78, 108, 0])
    cube([1, 1, 1.18]);
  translate([79, 108, 0])
    cube([1, 1, 2.35]);
  translate([80, 108, 0])
    cube([1, 1, 2.16]);
  translate([81, 108, 0])
    cube([1, 1, 1.22]);
  translate([82, 108, 0])
    cube([1, 1, 1.49]);
  translate([83, 108, 0])
    cube([1, 1, 2.94]);
  translate([84, 108, 0])
    cube([1, 1, 1.84]);
  translate([85, 108, 0])
    cube([1, 1, 2.43]);
  translate([86, 108, 0])
    cube([1, 1, 0.94]);
  translate([87, 108, 0])
    cube([1, 1, 1.41]);
  translate([88, 108, 0])
    cube([1, 1, 1.53]);
  translate([89, 108, 0])
    cube([1, 1, 1.57]);
  translate([90, 108, 0])
    cube([1, 1, 1.65]);
  translate([91, 108, 0])
    cube([1, 1, 1.84]);
  translate([92, 108, 0])
    cube([1, 1, 0.86]);
  translate([93, 108, 0])
    cube([1, 1, 3.57]);
  translate([94, 108, 0])
    cube([1, 1, 4.31]);
  translate([95, 108, 0])
    cube([1, 1, 3.84]);
  translate([96, 108, 0])
    cube([1, 1, 2.43]);
  translate([97, 108, 0])
    cube([1, 1, 2.39]);
  translate([98, 108, 0])
    cube([1, 1, 2.90]);
  translate([99, 108, 0])
    cube([1, 1, 3.25]);
  translate([100, 108, 0])
    cube([1, 1, 4.04]);
  translate([101, 108, 0])
    cube([1, 1, 3.92]);
  translate([102, 108, 0])
    cube([1, 1, 4.63]);
  translate([103, 108, 0])
    cube([1, 1, 3.41]);
  translate([104, 108, 0])
    cube([1, 1, 3.53]);
  translate([105, 108, 0])
    cube([1, 1, 3.92]);
  translate([106, 108, 0])
    cube([1, 1, 5.53]);
  translate([107, 108, 0])
    cube([1, 1, 5.37]);
  translate([108, 108, 0])
    cube([1, 1, 5.69]);
  translate([109, 108, 0])
    cube([1, 1, 5.88]);
  translate([110, 108, 0])
    cube([1, 1, 5.88]);
  translate([111, 108, 0])
    cube([1, 1, 6.20]);
  translate([112, 108, 0])
    cube([1, 1, 6.31]);
  translate([113, 108, 0])
    cube([1, 1, 6.27]);
  translate([114, 108, 0])
    cube([1, 1, 6.39]);
  translate([115, 108, 0])
    cube([1, 1, 6.35]);
  translate([116, 108, 0])
    cube([1, 1, 6.16]);
  translate([117, 108, 0])
    cube([1, 1, 5.53]);
  translate([118, 108, 0])
    cube([1, 1, 5.45]);
  translate([119, 108, 0])
    cube([1, 1, 5.49]);
  translate([120, 108, 0])
    cube([1, 1, 5.57]);
  translate([121, 108, 0])
    cube([1, 1, 5.69]);
  translate([122, 108, 0])
    cube([1, 1, 5.84]);
  translate([123, 108, 0])
    cube([1, 1, 5.80]);
  translate([124, 108, 0])
    cube([1, 1, 5.65]);
  translate([125, 108, 0])
    cube([1, 1, 5.80]);
  translate([126, 108, 0])
    cube([1, 1, 5.80]);
  translate([127, 108, 0])
    cube([1, 1, 5.88]);
  translate([128, 108, 0])
    cube([1, 1, 6.04]);
  translate([129, 108, 0])
    cube([1, 1, 6.00]);
  translate([130, 108, 0])
    cube([1, 1, 6.04]);
  translate([131, 108, 0])
    cube([1, 1, 6.08]);
  translate([132, 108, 0])
    cube([1, 1, 6.00]);
  translate([133, 108, 0])
    cube([1, 1, 6.12]);
  translate([134, 108, 0])
    cube([1, 1, 5.53]);
  translate([135, 108, 0])
    cube([1, 1, 3.73]);
  translate([136, 108, 0])
    cube([1, 1, 4.31]);
  translate([137, 108, 0])
    cube([1, 1, 3.41]);
  translate([138, 108, 0])
    cube([1, 1, 4.24]);
  translate([139, 108, 0])
    cube([1, 1, 4.16]);
  translate([140, 108, 0])
    cube([1, 1, 4.20]);
  translate([141, 108, 0])
    cube([1, 1, 4.04]);
  translate([142, 108, 0])
    cube([1, 1, 3.88]);
  translate([143, 108, 0])
    cube([1, 1, 4.43]);
  translate([144, 108, 0])
    cube([1, 1, 1.61]);
  translate([145, 108, 0])
    cube([1, 1, 1.29]);
  translate([146, 108, 0])
    cube([1, 1, 1.29]);
  translate([147, 108, 0])
    cube([1, 1, 1.29]);
  translate([148, 108, 0])
    cube([1, 1, 1.29]);
  translate([149, 108, 0])
    cube([1, 1, 1.29]);
  translate([150, 108, 0])
    cube([1, 1, 1.29]);
  translate([151, 108, 0])
    cube([1, 1, 1.29]);
  translate([152, 108, 0])
    cube([1, 1, 1.33]);
  translate([153, 108, 0])
    cube([1, 1, 1.33]);
  translate([154, 108, 0])
    cube([1, 1, 1.33]);
  translate([155, 108, 0])
    cube([1, 1, 1.29]);
  translate([156, 108, 0])
    cube([1, 1, 1.33]);
  translate([157, 108, 0])
    cube([1, 1, 1.33]);
  translate([158, 108, 0])
    cube([1, 1, 1.33]);
  translate([159, 108, 0])
    cube([1, 1, 1.33]);
  translate([160, 108, 0])
    cube([1, 1, 1.33]);
  translate([161, 108, 0])
    cube([1, 1, 1.29]);
  translate([162, 108, 0])
    cube([1, 1, 1.33]);
  translate([163, 108, 0])
    cube([1, 1, 1.33]);
  translate([164, 108, 0])
    cube([1, 1, 1.33]);
  translate([165, 108, 0])
    cube([1, 1, 1.33]);
  translate([166, 108, 0])
    cube([1, 1, 1.33]);
  translate([167, 108, 0])
    cube([1, 1, 1.33]);
  translate([168, 108, 0])
    cube([1, 1, 1.33]);
  translate([169, 108, 0])
    cube([1, 1, 1.33]);
  translate([170, 108, 0])
    cube([1, 1, 1.33]);
  translate([171, 108, 0])
    cube([1, 1, 1.33]);
  translate([172, 108, 0])
    cube([1, 1, 1.33]);
  translate([173, 108, 0])
    cube([1, 1, 1.33]);
  translate([174, 108, 0])
    cube([1, 1, 1.33]);
  translate([175, 108, 0])
    cube([1, 1, 1.33]);
  translate([176, 108, 0])
    cube([1, 1, 1.33]);
  translate([177, 108, 0])
    cube([1, 1, 1.33]);
  translate([178, 108, 0])
    cube([1, 1, 1.33]);
  translate([179, 108, 0])
    cube([1, 1, 1.33]);
  translate([180, 108, 0])
    cube([1, 1, 1.33]);
  translate([181, 108, 0])
    cube([1, 1, 1.33]);
  translate([182, 108, 0])
    cube([1, 1, 1.33]);
  translate([183, 108, 0])
    cube([1, 1, 1.33]);
  translate([184, 108, 0])
    cube([1, 1, 1.33]);
  translate([185, 108, 0])
    cube([1, 1, 1.33]);
  translate([186, 108, 0])
    cube([1, 1, 1.33]);
  translate([187, 108, 0])
    cube([1, 1, 1.33]);
  translate([188, 108, 0])
    cube([1, 1, 1.33]);
  translate([189, 108, 0])
    cube([1, 1, 1.33]);
  translate([190, 108, 0])
    cube([1, 1, 1.33]);
  translate([191, 108, 0])
    cube([1, 1, 1.33]);
  translate([192, 108, 0])
    cube([1, 1, 1.33]);
  translate([193, 108, 0])
    cube([1, 1, 1.33]);
  translate([194, 108, 0])
    cube([1, 1, 1.33]);
  translate([195, 108, 0])
    cube([1, 1, 1.33]);
  translate([196, 108, 0])
    cube([1, 1, 1.37]);
  translate([197, 108, 0])
    cube([1, 1, 1.37]);
  translate([198, 108, 0])
    cube([1, 1, 1.33]);
  translate([199, 108, 0])
    cube([1, 1, 1.33]);
  translate([200, 108, 0])
    cube([1, 1, 1.33]);
  translate([201, 108, 0])
    cube([1, 1, 1.33]);
  translate([202, 108, 0])
    cube([1, 1, 1.33]);
  translate([203, 108, 0])
    cube([1, 1, 1.33]);
  translate([204, 108, 0])
    cube([1, 1, 1.33]);
  translate([205, 108, 0])
    cube([1, 1, 1.33]);
  translate([206, 108, 0])
    cube([1, 1, 1.33]);
  translate([207, 108, 0])
    cube([1, 1, 1.33]);
  translate([208, 108, 0])
    cube([1, 1, 1.33]);
  translate([209, 108, 0])
    cube([1, 1, 1.33]);
  translate([210, 108, 0])
    cube([1, 1, 1.33]);
  translate([211, 108, 0])
    cube([1, 1, 1.33]);
  translate([212, 108, 0])
    cube([1, 1, 1.33]);
  translate([213, 108, 0])
    cube([1, 1, 1.33]);
  translate([214, 108, 0])
    cube([1, 1, 1.33]);
  translate([215, 108, 0])
    cube([1, 1, 1.33]);
  translate([216, 108, 0])
    cube([1, 1, 1.33]);
  translate([217, 108, 0])
    cube([1, 1, 1.33]);
  translate([218, 108, 0])
    cube([1, 1, 1.33]);
  translate([219, 108, 0])
    cube([1, 1, 1.33]);
  translate([220, 108, 0])
    cube([1, 1, 1.33]);
  translate([221, 108, 0])
    cube([1, 1, 1.33]);
  translate([222, 108, 0])
    cube([1, 1, 1.33]);
  translate([223, 108, 0])
    cube([1, 1, 1.33]);
  translate([224, 108, 0])
    cube([1, 1, 1.33]);
  translate([225, 108, 0])
    cube([1, 1, 1.33]);
  translate([226, 108, 0])
    cube([1, 1, 1.33]);
  translate([227, 108, 0])
    cube([1, 1, 1.33]);
  translate([228, 108, 0])
    cube([1, 1, 1.33]);
  translate([229, 108, 0])
    cube([1, 1, 1.33]);
  translate([230, 108, 0])
    cube([1, 1, 1.33]);
  translate([231, 108, 0])
    cube([1, 1, 1.33]);
  translate([232, 108, 0])
    cube([1, 1, 1.33]);
  translate([233, 108, 0])
    cube([1, 1, 1.33]);
  translate([234, 108, 0])
    cube([1, 1, 1.33]);
  translate([235, 108, 0])
    cube([1, 1, 1.33]);
  translate([236, 108, 0])
    cube([1, 1, 1.33]);
  translate([237, 108, 0])
    cube([1, 1, 1.33]);
  translate([238, 108, 0])
    cube([1, 1, 1.33]);
  translate([239, 108, 0])
    cube([1, 1, 1.33]);
  translate([240, 108, 0])
    cube([1, 1, 1.33]);
  translate([241, 108, 0])
    cube([1, 1, 1.33]);
  translate([242, 108, 0])
    cube([1, 1, 1.33]);
  translate([243, 108, 0])
    cube([1, 1, 1.33]);
  translate([244, 108, 0])
    cube([1, 1, 1.33]);
  translate([245, 108, 0])
    cube([1, 1, 1.33]);
  translate([246, 108, 0])
    cube([1, 1, 1.33]);
  translate([0, 109, 0])
    cube([1, 1, 1.49]);
  translate([1, 109, 0])
    cube([1, 1, 1.49]);
  translate([2, 109, 0])
    cube([1, 1, 1.49]);
  translate([3, 109, 0])
    cube([1, 1, 1.49]);
  translate([4, 109, 0])
    cube([1, 1, 1.49]);
  translate([5, 109, 0])
    cube([1, 1, 1.49]);
  translate([6, 109, 0])
    cube([1, 1, 1.45]);
  translate([7, 109, 0])
    cube([1, 1, 1.45]);
  translate([8, 109, 0])
    cube([1, 1, 1.45]);
  translate([9, 109, 0])
    cube([1, 1, 1.45]);
  translate([10, 109, 0])
    cube([1, 1, 1.49]);
  translate([11, 109, 0])
    cube([1, 1, 1.45]);
  translate([12, 109, 0])
    cube([1, 1, 1.45]);
  translate([13, 109, 0])
    cube([1, 1, 1.45]);
  translate([14, 109, 0])
    cube([1, 1, 1.45]);
  translate([15, 109, 0])
    cube([1, 1, 1.45]);
  translate([16, 109, 0])
    cube([1, 1, 1.45]);
  translate([17, 109, 0])
    cube([1, 1, 1.45]);
  translate([18, 109, 0])
    cube([1, 1, 1.45]);
  translate([19, 109, 0])
    cube([1, 1, 1.45]);
  translate([20, 109, 0])
    cube([1, 1, 1.45]);
  translate([21, 109, 0])
    cube([1, 1, 1.45]);
  translate([22, 109, 0])
    cube([1, 1, 1.45]);
  translate([23, 109, 0])
    cube([1, 1, 1.45]);
  translate([24, 109, 0])
    cube([1, 1, 1.45]);
  translate([25, 109, 0])
    cube([1, 1, 1.45]);
  translate([26, 109, 0])
    cube([1, 1, 1.45]);
  translate([27, 109, 0])
    cube([1, 1, 1.45]);
  translate([28, 109, 0])
    cube([1, 1, 1.49]);
  translate([29, 109, 0])
    cube([1, 1, 1.41]);
  translate([30, 109, 0])
    cube([1, 1, 1.41]);
  translate([31, 109, 0])
    cube([1, 1, 1.41]);
  translate([32, 109, 0])
    cube([1, 1, 1.41]);
  translate([33, 109, 0])
    cube([1, 1, 1.41]);
  translate([34, 109, 0])
    cube([1, 1, 1.41]);
  translate([35, 109, 0])
    cube([1, 1, 1.41]);
  translate([36, 109, 0])
    cube([1, 1, 1.41]);
  translate([37, 109, 0])
    cube([1, 1, 1.41]);
  translate([38, 109, 0])
    cube([1, 1, 1.18]);
  translate([39, 109, 0])
    cube([1, 1, 1.80]);
  translate([40, 109, 0])
    cube([1, 1, 4.59]);
  translate([41, 109, 0])
    cube([1, 1, 2.08]);
  translate([42, 109, 0])
    cube([1, 1, 2.00]);
  translate([43, 109, 0])
    cube([1, 1, 1.25]);
  translate([44, 109, 0])
    cube([1, 1, 0.94]);
  translate([45, 109, 0])
    cube([1, 1, 0.94]);
  translate([46, 109, 0])
    cube([1, 1, 1.06]);
  translate([47, 109, 0])
    cube([1, 1, 1.33]);
  translate([48, 109, 0])
    cube([1, 1, 1.65]);
  translate([49, 109, 0])
    cube([1, 1, 1.57]);
  translate([50, 109, 0])
    cube([1, 1, 3.84]);
  translate([51, 109, 0])
    cube([1, 1, 6.08]);
  translate([52, 109, 0])
    cube([1, 1, 6.04]);
  translate([53, 109, 0])
    cube([1, 1, 6.08]);
  translate([54, 109, 0])
    cube([1, 1, 6.20]);
  translate([55, 109, 0])
    cube([1, 1, 8.55]);
  translate([56, 109, 0])
    cube([1, 1, 8.24]);
  translate([57, 109, 0])
    cube([1, 1, 7.02]);
  translate([58, 109, 0])
    cube([1, 1, 5.53]);
  translate([59, 109, 0])
    cube([1, 1, 4.71]);
  translate([60, 109, 0])
    cube([1, 1, 4.98]);
  translate([61, 109, 0])
    cube([1, 1, 5.41]);
  translate([62, 109, 0])
    cube([1, 1, 5.65]);
  translate([63, 109, 0])
    cube([1, 1, 5.84]);
  translate([64, 109, 0])
    cube([1, 1, 5.96]);
  translate([65, 109, 0])
    cube([1, 1, 6.04]);
  translate([66, 109, 0])
    cube([1, 1, 6.24]);
  translate([67, 109, 0])
    cube([1, 1, 6.27]);
  translate([68, 109, 0])
    cube([1, 1, 6.35]);
  translate([69, 109, 0])
    cube([1, 1, 6.35]);
  translate([70, 109, 0])
    cube([1, 1, 6.04]);
  translate([71, 109, 0])
    cube([1, 1, 5.73]);
  translate([72, 109, 0])
    cube([1, 1, 5.57]);
  translate([73, 109, 0])
    cube([1, 1, 5.10]);
  translate([74, 109, 0])
    cube([1, 1, 2.98]);
  translate([75, 109, 0])
    cube([1, 1, 1.22]);
  translate([76, 109, 0])
    cube([1, 1, 1.45]);
  translate([77, 109, 0])
    cube([1, 1, 1.57]);
  translate([78, 109, 0])
    cube([1, 1, 1.22]);
  translate([79, 109, 0])
    cube([1, 1, 1.73]);
  translate([80, 109, 0])
    cube([1, 1, 1.76]);
  translate([81, 109, 0])
    cube([1, 1, 1.49]);
  translate([82, 109, 0])
    cube([1, 1, 1.41]);
  translate([83, 109, 0])
    cube([1, 1, 1.65]);
  translate([84, 109, 0])
    cube([1, 1, 1.29]);
  translate([85, 109, 0])
    cube([1, 1, 1.33]);
  translate([86, 109, 0])
    cube([1, 1, 1.18]);
  translate([87, 109, 0])
    cube([1, 1, 1.45]);
  translate([88, 109, 0])
    cube([1, 1, 1.49]);
  translate([89, 109, 0])
    cube([1, 1, 1.73]);
  translate([90, 109, 0])
    cube([1, 1, 1.53]);
  translate([91, 109, 0])
    cube([1, 1, 2.08]);
  translate([92, 109, 0])
    cube([1, 1, 1.33]);
  translate([93, 109, 0])
    cube([1, 1, 0.27]);
  translate([94, 109, 0])
    cube([1, 1, 3.92]);
  translate([95, 109, 0])
    cube([1, 1, 4.00]);
  translate([96, 109, 0])
    cube([1, 1, 4.63]);
  translate([97, 109, 0])
    cube([1, 1, 4.27]);
  translate([98, 109, 0])
    cube([1, 1, 4.39]);
  translate([99, 109, 0])
    cube([1, 1, 4.67]);
  translate([100, 109, 0])
    cube([1, 1, 4.27]);
  translate([101, 109, 0])
    cube([1, 1, 3.84]);
  translate([102, 109, 0])
    cube([1, 1, 3.33]);
  translate([103, 109, 0])
    cube([1, 1, 3.22]);
  translate([104, 109, 0])
    cube([1, 1, 2.82]);
  translate([105, 109, 0])
    cube([1, 1, 3.53]);
  translate([106, 109, 0])
    cube([1, 1, 3.69]);
  translate([107, 109, 0])
    cube([1, 1, 3.57]);
  translate([108, 109, 0])
    cube([1, 1, 5.25]);
  translate([109, 109, 0])
    cube([1, 1, 5.69]);
  translate([110, 109, 0])
    cube([1, 1, 5.76]);
  translate([111, 109, 0])
    cube([1, 1, 6.00]);
  translate([112, 109, 0])
    cube([1, 1, 6.20]);
  translate([113, 109, 0])
    cube([1, 1, 6.20]);
  translate([114, 109, 0])
    cube([1, 1, 6.43]);
  translate([115, 109, 0])
    cube([1, 1, 6.47]);
  translate([116, 109, 0])
    cube([1, 1, 6.27]);
  translate([117, 109, 0])
    cube([1, 1, 6.35]);
  translate([118, 109, 0])
    cube([1, 1, 5.88]);
  translate([119, 109, 0])
    cube([1, 1, 5.22]);
  translate([120, 109, 0])
    cube([1, 1, 5.57]);
  translate([121, 109, 0])
    cube([1, 1, 5.65]);
  translate([122, 109, 0])
    cube([1, 1, 5.80]);
  translate([123, 109, 0])
    cube([1, 1, 5.84]);
  translate([124, 109, 0])
    cube([1, 1, 5.92]);
  translate([125, 109, 0])
    cube([1, 1, 6.00]);
  translate([126, 109, 0])
    cube([1, 1, 5.84]);
  translate([127, 109, 0])
    cube([1, 1, 6.00]);
  translate([128, 109, 0])
    cube([1, 1, 6.12]);
  translate([129, 109, 0])
    cube([1, 1, 6.08]);
  translate([130, 109, 0])
    cube([1, 1, 6.20]);
  translate([131, 109, 0])
    cube([1, 1, 5.96]);
  translate([132, 109, 0])
    cube([1, 1, 6.04]);
  translate([133, 109, 0])
    cube([1, 1, 5.06]);
  translate([134, 109, 0])
    cube([1, 1, 4.78]);
  translate([135, 109, 0])
    cube([1, 1, 4.51]);
  translate([136, 109, 0])
    cube([1, 1, 3.92]);
  translate([137, 109, 0])
    cube([1, 1, 3.61]);
  translate([138, 109, 0])
    cube([1, 1, 3.69]);
  translate([139, 109, 0])
    cube([1, 1, 3.45]);
  translate([140, 109, 0])
    cube([1, 1, 3.96]);
  translate([141, 109, 0])
    cube([1, 1, 4.63]);
  translate([142, 109, 0])
    cube([1, 1, 4.59]);
  translate([143, 109, 0])
    cube([1, 1, 3.96]);
  translate([144, 109, 0])
    cube([1, 1, 4.24]);
  translate([145, 109, 0])
    cube([1, 1, 1.14]);
  translate([146, 109, 0])
    cube([1, 1, 0.98]);
  translate([147, 109, 0])
    cube([1, 1, 1.29]);
  translate([148, 109, 0])
    cube([1, 1, 1.29]);
  translate([149, 109, 0])
    cube([1, 1, 1.29]);
  translate([150, 109, 0])
    cube([1, 1, 1.29]);
  translate([151, 109, 0])
    cube([1, 1, 1.33]);
  translate([152, 109, 0])
    cube([1, 1, 1.33]);
  translate([153, 109, 0])
    cube([1, 1, 1.33]);
  translate([154, 109, 0])
    cube([1, 1, 1.33]);
  translate([155, 109, 0])
    cube([1, 1, 1.25]);
  translate([156, 109, 0])
    cube([1, 1, 1.33]);
  translate([157, 109, 0])
    cube([1, 1, 1.33]);
  translate([158, 109, 0])
    cube([1, 1, 1.33]);
  translate([159, 109, 0])
    cube([1, 1, 1.33]);
  translate([160, 109, 0])
    cube([1, 1, 1.33]);
  translate([161, 109, 0])
    cube([1, 1, 1.33]);
  translate([162, 109, 0])
    cube([1, 1, 1.33]);
  translate([163, 109, 0])
    cube([1, 1, 1.33]);
  translate([164, 109, 0])
    cube([1, 1, 1.33]);
  translate([165, 109, 0])
    cube([1, 1, 1.33]);
  translate([166, 109, 0])
    cube([1, 1, 1.33]);
  translate([167, 109, 0])
    cube([1, 1, 1.33]);
  translate([168, 109, 0])
    cube([1, 1, 1.33]);
  translate([169, 109, 0])
    cube([1, 1, 1.33]);
  translate([170, 109, 0])
    cube([1, 1, 1.33]);
  translate([171, 109, 0])
    cube([1, 1, 1.33]);
  translate([172, 109, 0])
    cube([1, 1, 1.33]);
  translate([173, 109, 0])
    cube([1, 1, 1.33]);
  translate([174, 109, 0])
    cube([1, 1, 1.33]);
  translate([175, 109, 0])
    cube([1, 1, 1.33]);
  translate([176, 109, 0])
    cube([1, 1, 1.33]);
  translate([177, 109, 0])
    cube([1, 1, 1.33]);
  translate([178, 109, 0])
    cube([1, 1, 1.33]);
  translate([179, 109, 0])
    cube([1, 1, 1.33]);
  translate([180, 109, 0])
    cube([1, 1, 1.33]);
  translate([181, 109, 0])
    cube([1, 1, 1.33]);
  translate([182, 109, 0])
    cube([1, 1, 1.33]);
  translate([183, 109, 0])
    cube([1, 1, 1.33]);
  translate([184, 109, 0])
    cube([1, 1, 1.33]);
  translate([185, 109, 0])
    cube([1, 1, 1.33]);
  translate([186, 109, 0])
    cube([1, 1, 1.33]);
  translate([187, 109, 0])
    cube([1, 1, 1.33]);
  translate([188, 109, 0])
    cube([1, 1, 1.33]);
  translate([189, 109, 0])
    cube([1, 1, 1.33]);
  translate([190, 109, 0])
    cube([1, 1, 1.33]);
  translate([191, 109, 0])
    cube([1, 1, 1.33]);
  translate([192, 109, 0])
    cube([1, 1, 1.33]);
  translate([193, 109, 0])
    cube([1, 1, 1.37]);
  translate([194, 109, 0])
    cube([1, 1, 1.37]);
  translate([195, 109, 0])
    cube([1, 1, 1.37]);
  translate([196, 109, 0])
    cube([1, 1, 1.33]);
  translate([197, 109, 0])
    cube([1, 1, 1.37]);
  translate([198, 109, 0])
    cube([1, 1, 1.33]);
  translate([199, 109, 0])
    cube([1, 1, 1.33]);
  translate([200, 109, 0])
    cube([1, 1, 1.37]);
  translate([201, 109, 0])
    cube([1, 1, 1.33]);
  translate([202, 109, 0])
    cube([1, 1, 1.33]);
  translate([203, 109, 0])
    cube([1, 1, 1.33]);
  translate([204, 109, 0])
    cube([1, 1, 1.33]);
  translate([205, 109, 0])
    cube([1, 1, 1.33]);
  translate([206, 109, 0])
    cube([1, 1, 1.33]);
  translate([207, 109, 0])
    cube([1, 1, 1.33]);
  translate([208, 109, 0])
    cube([1, 1, 1.33]);
  translate([209, 109, 0])
    cube([1, 1, 1.33]);
  translate([210, 109, 0])
    cube([1, 1, 1.33]);
  translate([211, 109, 0])
    cube([1, 1, 1.33]);
  translate([212, 109, 0])
    cube([1, 1, 1.33]);
  translate([213, 109, 0])
    cube([1, 1, 1.33]);
  translate([214, 109, 0])
    cube([1, 1, 1.33]);
  translate([215, 109, 0])
    cube([1, 1, 1.33]);
  translate([216, 109, 0])
    cube([1, 1, 1.33]);
  translate([217, 109, 0])
    cube([1, 1, 1.33]);
  translate([218, 109, 0])
    cube([1, 1, 1.33]);
  translate([219, 109, 0])
    cube([1, 1, 1.33]);
  translate([220, 109, 0])
    cube([1, 1, 1.33]);
  translate([221, 109, 0])
    cube([1, 1, 1.33]);
  translate([222, 109, 0])
    cube([1, 1, 1.33]);
  translate([223, 109, 0])
    cube([1, 1, 1.33]);
  translate([224, 109, 0])
    cube([1, 1, 1.33]);
  translate([225, 109, 0])
    cube([1, 1, 1.33]);
  translate([226, 109, 0])
    cube([1, 1, 1.33]);
  translate([227, 109, 0])
    cube([1, 1, 1.33]);
  translate([228, 109, 0])
    cube([1, 1, 1.33]);
  translate([229, 109, 0])
    cube([1, 1, 1.33]);
  translate([230, 109, 0])
    cube([1, 1, 1.33]);
  translate([231, 109, 0])
    cube([1, 1, 1.33]);
  translate([232, 109, 0])
    cube([1, 1, 1.33]);
  translate([233, 109, 0])
    cube([1, 1, 1.33]);
  translate([234, 109, 0])
    cube([1, 1, 1.33]);
  translate([235, 109, 0])
    cube([1, 1, 1.33]);
  translate([236, 109, 0])
    cube([1, 1, 1.33]);
  translate([237, 109, 0])
    cube([1, 1, 1.33]);
  translate([238, 109, 0])
    cube([1, 1, 1.33]);
  translate([239, 109, 0])
    cube([1, 1, 1.33]);
  translate([240, 109, 0])
    cube([1, 1, 1.33]);
  translate([241, 109, 0])
    cube([1, 1, 1.33]);
  translate([242, 109, 0])
    cube([1, 1, 1.33]);
  translate([243, 109, 0])
    cube([1, 1, 1.33]);
  translate([244, 109, 0])
    cube([1, 1, 1.33]);
  translate([245, 109, 0])
    cube([1, 1, 1.33]);
  translate([246, 109, 0])
    cube([1, 1, 1.33]);
  translate([0, 110, 0])
    cube([1, 1, 1.49]);
  translate([1, 110, 0])
    cube([1, 1, 1.49]);
  translate([2, 110, 0])
    cube([1, 1, 1.49]);
  translate([3, 110, 0])
    cube([1, 1, 1.49]);
  translate([4, 110, 0])
    cube([1, 1, 1.49]);
  translate([5, 110, 0])
    cube([1, 1, 1.49]);
  translate([6, 110, 0])
    cube([1, 1, 1.45]);
  translate([7, 110, 0])
    cube([1, 1, 1.45]);
  translate([8, 110, 0])
    cube([1, 1, 1.45]);
  translate([9, 110, 0])
    cube([1, 1, 1.45]);
  translate([10, 110, 0])
    cube([1, 1, 1.49]);
  translate([11, 110, 0])
    cube([1, 1, 1.45]);
  translate([12, 110, 0])
    cube([1, 1, 1.45]);
  translate([13, 110, 0])
    cube([1, 1, 1.45]);
  translate([14, 110, 0])
    cube([1, 1, 1.45]);
  translate([15, 110, 0])
    cube([1, 1, 1.45]);
  translate([16, 110, 0])
    cube([1, 1, 1.45]);
  translate([17, 110, 0])
    cube([1, 1, 1.45]);
  translate([18, 110, 0])
    cube([1, 1, 1.45]);
  translate([19, 110, 0])
    cube([1, 1, 1.45]);
  translate([20, 110, 0])
    cube([1, 1, 1.45]);
  translate([21, 110, 0])
    cube([1, 1, 1.45]);
  translate([22, 110, 0])
    cube([1, 1, 1.45]);
  translate([23, 110, 0])
    cube([1, 1, 1.45]);
  translate([24, 110, 0])
    cube([1, 1, 1.45]);
  translate([25, 110, 0])
    cube([1, 1, 1.45]);
  translate([26, 110, 0])
    cube([1, 1, 1.45]);
  translate([27, 110, 0])
    cube([1, 1, 1.45]);
  translate([28, 110, 0])
    cube([1, 1, 1.37]);
  translate([29, 110, 0])
    cube([1, 1, 1.45]);
  translate([30, 110, 0])
    cube([1, 1, 1.41]);
  translate([31, 110, 0])
    cube([1, 1, 1.41]);
  translate([32, 110, 0])
    cube([1, 1, 1.41]);
  translate([33, 110, 0])
    cube([1, 1, 1.41]);
  translate([34, 110, 0])
    cube([1, 1, 1.41]);
  translate([35, 110, 0])
    cube([1, 1, 1.41]);
  translate([36, 110, 0])
    cube([1, 1, 1.41]);
  translate([37, 110, 0])
    cube([1, 1, 1.41]);
  translate([38, 110, 0])
    cube([1, 1, 1.33]);
  translate([39, 110, 0])
    cube([1, 1, 1.33]);
  translate([40, 110, 0])
    cube([1, 1, 5.88]);
  translate([41, 110, 0])
    cube([1, 1, 2.59]);
  translate([42, 110, 0])
    cube([1, 1, 2.31]);
  translate([43, 110, 0])
    cube([1, 1, 1.49]);
  translate([44, 110, 0])
    cube([1, 1, 1.02]);
  translate([45, 110, 0])
    cube([1, 1, 0.90]);
  translate([46, 110, 0])
    cube([1, 1, 0.82]);
  translate([47, 110, 0])
    cube([1, 1, 1.41]);
  translate([48, 110, 0])
    cube([1, 1, 4.55]);
  translate([49, 110, 0])
    cube([1, 1, 5.88]);
  translate([50, 110, 0])
    cube([1, 1, 6.12]);
  translate([51, 110, 0])
    cube([1, 1, 6.16]);
  translate([52, 110, 0])
    cube([1, 1, 6.04]);
  translate([53, 110, 0])
    cube([1, 1, 6.08]);
  translate([54, 110, 0])
    cube([1, 1, 5.69]);
  translate([55, 110, 0])
    cube([1, 1, 8.31]);
  translate([56, 110, 0])
    cube([1, 1, 8.31]);
  translate([57, 110, 0])
    cube([1, 1, 7.22]);
  translate([58, 110, 0])
    cube([1, 1, 5.73]);
  translate([59, 110, 0])
    cube([1, 1, 4.59]);
  translate([60, 110, 0])
    cube([1, 1, 4.98]);
  translate([61, 110, 0])
    cube([1, 1, 5.41]);
  translate([62, 110, 0])
    cube([1, 1, 5.65]);
  translate([63, 110, 0])
    cube([1, 1, 5.84]);
  translate([64, 110, 0])
    cube([1, 1, 5.96]);
  translate([65, 110, 0])
    cube([1, 1, 6.08]);
  translate([66, 110, 0])
    cube([1, 1, 6.27]);
  translate([67, 110, 0])
    cube([1, 1, 6.27]);
  translate([68, 110, 0])
    cube([1, 1, 6.31]);
  translate([69, 110, 0])
    cube([1, 1, 6.20]);
  translate([70, 110, 0])
    cube([1, 1, 5.92]);
  translate([71, 110, 0])
    cube([1, 1, 5.61]);
  translate([72, 110, 0])
    cube([1, 1, 5.41]);
  translate([73, 110, 0])
    cube([1, 1, 4.55]);
  translate([74, 110, 0])
    cube([1, 1, 1.69]);
  translate([75, 110, 0])
    cube([1, 1, 1.18]);
  translate([76, 110, 0])
    cube([1, 1, 1.25]);
  translate([77, 110, 0])
    cube([1, 1, 1.49]);
  translate([78, 110, 0])
    cube([1, 1, 1.29]);
  translate([79, 110, 0])
    cube([1, 1, 1.22]);
  translate([80, 110, 0])
    cube([1, 1, 2.31]);
  translate([81, 110, 0])
    cube([1, 1, 1.69]);
  translate([82, 110, 0])
    cube([1, 1, 2.43]);
  translate([83, 110, 0])
    cube([1, 1, 1.69]);
  translate([84, 110, 0])
    cube([1, 1, 1.88]);
  translate([85, 110, 0])
    cube([1, 1, 1.10]);
  translate([86, 110, 0])
    cube([1, 1, 1.29]);
  translate([87, 110, 0])
    cube([1, 1, 1.45]);
  translate([88, 110, 0])
    cube([1, 1, 1.49]);
  translate([89, 110, 0])
    cube([1, 1, 1.53]);
  translate([90, 110, 0])
    cube([1, 1, 2.51]);
  translate([91, 110, 0])
    cube([1, 1, 3.57]);
  translate([92, 110, 0])
    cube([1, 1, 2.51]);
  translate([93, 110, 0])
    cube([1, 1, 1.18]);
  translate([94, 110, 0])
    cube([1, 1, 0.98]);
  translate([95, 110, 0])
    cube([1, 1, 3.65]);
  translate([96, 110, 0])
    cube([1, 1, 4.24]);
  translate([97, 110, 0])
    cube([1, 1, 3.29]);
  translate([98, 110, 0])
    cube([1, 1, 2.51]);
  translate([99, 110, 0])
    cube([1, 1, 2.98]);
  translate([100, 110, 0])
    cube([1, 1, 2.67]);
  translate([101, 110, 0])
    cube([1, 1, 3.57]);
  translate([102, 110, 0])
    cube([1, 1, 4.16]);
  translate([103, 110, 0])
    cube([1, 1, 4.51]);
  translate([104, 110, 0])
    cube([1, 1, 4.59]);
  translate([105, 110, 0])
    cube([1, 1, 3.76]);
  translate([106, 110, 0])
    cube([1, 1, 2.78]);
  translate([107, 110, 0])
    cube([1, 1, 2.39]);
  translate([108, 110, 0])
    cube([1, 1, 3.29]);
  translate([109, 110, 0])
    cube([1, 1, 3.45]);
  translate([110, 110, 0])
    cube([1, 1, 4.51]);
  translate([111, 110, 0])
    cube([1, 1, 5.61]);
  translate([112, 110, 0])
    cube([1, 1, 5.92]);
  translate([113, 110, 0])
    cube([1, 1, 6.04]);
  translate([114, 110, 0])
    cube([1, 1, 6.24]);
  translate([115, 110, 0])
    cube([1, 1, 6.43]);
  translate([116, 110, 0])
    cube([1, 1, 6.51]);
  translate([117, 110, 0])
    cube([1, 1, 6.47]);
  translate([118, 110, 0])
    cube([1, 1, 6.35]);
  translate([119, 110, 0])
    cube([1, 1, 5.73]);
  translate([120, 110, 0])
    cube([1, 1, 5.25]);
  translate([121, 110, 0])
    cube([1, 1, 5.53]);
  translate([122, 110, 0])
    cube([1, 1, 5.69]);
  translate([123, 110, 0])
    cube([1, 1, 5.76]);
  translate([124, 110, 0])
    cube([1, 1, 5.92]);
  translate([125, 110, 0])
    cube([1, 1, 6.00]);
  translate([126, 110, 0])
    cube([1, 1, 5.88]);
  translate([127, 110, 0])
    cube([1, 1, 5.92]);
  translate([128, 110, 0])
    cube([1, 1, 6.00]);
  translate([129, 110, 0])
    cube([1, 1, 5.96]);
  translate([130, 110, 0])
    cube([1, 1, 5.73]);
  translate([131, 110, 0])
    cube([1, 1, 5.69]);
  translate([132, 110, 0])
    cube([1, 1, 3.73]);
  translate([133, 110, 0])
    cube([1, 1, 4.39]);
  translate([134, 110, 0])
    cube([1, 1, 4.78]);
  translate([135, 110, 0])
    cube([1, 1, 4.04]);
  translate([136, 110, 0])
    cube([1, 1, 3.33]);
  translate([137, 110, 0])
    cube([1, 1, 3.84]);
  translate([138, 110, 0])
    cube([1, 1, 3.37]);
  translate([139, 110, 0])
    cube([1, 1, 3.80]);
  translate([140, 110, 0])
    cube([1, 1, 3.06]);
  translate([141, 110, 0])
    cube([1, 1, 3.37]);
  translate([142, 110, 0])
    cube([1, 1, 4.12]);
  translate([143, 110, 0])
    cube([1, 1, 4.27]);
  translate([144, 110, 0])
    cube([1, 1, 4.43]);
  translate([145, 110, 0])
    cube([1, 1, 1.25]);
  translate([146, 110, 0])
    cube([1, 1, 1.14]);
  translate([147, 110, 0])
    cube([1, 1, 1.29]);
  translate([148, 110, 0])
    cube([1, 1, 1.22]);
  translate([149, 110, 0])
    cube([1, 1, 1.29]);
  translate([150, 110, 0])
    cube([1, 1, 1.29]);
  translate([151, 110, 0])
    cube([1, 1, 1.33]);
  translate([152, 110, 0])
    cube([1, 1, 1.33]);
  translate([153, 110, 0])
    cube([1, 1, 1.33]);
  translate([154, 110, 0])
    cube([1, 1, 1.33]);
  translate([155, 110, 0])
    cube([1, 1, 1.37]);
  translate([156, 110, 0])
    cube([1, 1, 1.33]);
  translate([157, 110, 0])
    cube([1, 1, 1.33]);
  translate([158, 110, 0])
    cube([1, 1, 1.33]);
  translate([159, 110, 0])
    cube([1, 1, 1.33]);
  translate([160, 110, 0])
    cube([1, 1, 1.33]);
  translate([161, 110, 0])
    cube([1, 1, 1.33]);
  translate([162, 110, 0])
    cube([1, 1, 1.33]);
  translate([163, 110, 0])
    cube([1, 1, 1.33]);
  translate([164, 110, 0])
    cube([1, 1, 1.33]);
  translate([165, 110, 0])
    cube([1, 1, 1.33]);
  translate([166, 110, 0])
    cube([1, 1, 1.33]);
  translate([167, 110, 0])
    cube([1, 1, 1.33]);
  translate([168, 110, 0])
    cube([1, 1, 1.33]);
  translate([169, 110, 0])
    cube([1, 1, 1.33]);
  translate([170, 110, 0])
    cube([1, 1, 1.33]);
  translate([171, 110, 0])
    cube([1, 1, 1.33]);
  translate([172, 110, 0])
    cube([1, 1, 1.33]);
  translate([173, 110, 0])
    cube([1, 1, 1.33]);
  translate([174, 110, 0])
    cube([1, 1, 1.33]);
  translate([175, 110, 0])
    cube([1, 1, 1.33]);
  translate([176, 110, 0])
    cube([1, 1, 1.33]);
  translate([177, 110, 0])
    cube([1, 1, 1.33]);
  translate([178, 110, 0])
    cube([1, 1, 1.33]);
  translate([179, 110, 0])
    cube([1, 1, 1.33]);
  translate([180, 110, 0])
    cube([1, 1, 1.33]);
  translate([181, 110, 0])
    cube([1, 1, 1.33]);
  translate([182, 110, 0])
    cube([1, 1, 1.33]);
  translate([183, 110, 0])
    cube([1, 1, 1.33]);
  translate([184, 110, 0])
    cube([1, 1, 1.33]);
  translate([185, 110, 0])
    cube([1, 1, 1.33]);
  translate([186, 110, 0])
    cube([1, 1, 1.33]);
  translate([187, 110, 0])
    cube([1, 1, 1.33]);
  translate([188, 110, 0])
    cube([1, 1, 1.33]);
  translate([189, 110, 0])
    cube([1, 1, 1.33]);
  translate([190, 110, 0])
    cube([1, 1, 1.33]);
  translate([191, 110, 0])
    cube([1, 1, 1.33]);
  translate([192, 110, 0])
    cube([1, 1, 1.33]);
  translate([193, 110, 0])
    cube([1, 1, 1.29]);
  translate([194, 110, 0])
    cube([1, 1, 1.29]);
  translate([195, 110, 0])
    cube([1, 1, 1.37]);
  translate([196, 110, 0])
    cube([1, 1, 1.33]);
  translate([197, 110, 0])
    cube([1, 1, 1.37]);
  translate([198, 110, 0])
    cube([1, 1, 1.33]);
  translate([199, 110, 0])
    cube([1, 1, 1.33]);
  translate([200, 110, 0])
    cube([1, 1, 1.37]);
  translate([201, 110, 0])
    cube([1, 1, 1.33]);
  translate([202, 110, 0])
    cube([1, 1, 1.33]);
  translate([203, 110, 0])
    cube([1, 1, 1.33]);
  translate([204, 110, 0])
    cube([1, 1, 1.33]);
  translate([205, 110, 0])
    cube([1, 1, 1.33]);
  translate([206, 110, 0])
    cube([1, 1, 1.33]);
  translate([207, 110, 0])
    cube([1, 1, 1.33]);
  translate([208, 110, 0])
    cube([1, 1, 1.33]);
  translate([209, 110, 0])
    cube([1, 1, 1.33]);
  translate([210, 110, 0])
    cube([1, 1, 1.33]);
  translate([211, 110, 0])
    cube([1, 1, 1.33]);
  translate([212, 110, 0])
    cube([1, 1, 1.33]);
  translate([213, 110, 0])
    cube([1, 1, 1.33]);
  translate([214, 110, 0])
    cube([1, 1, 1.33]);
  translate([215, 110, 0])
    cube([1, 1, 1.33]);
  translate([216, 110, 0])
    cube([1, 1, 1.33]);
  translate([217, 110, 0])
    cube([1, 1, 1.33]);
  translate([218, 110, 0])
    cube([1, 1, 1.33]);
  translate([219, 110, 0])
    cube([1, 1, 1.33]);
  translate([220, 110, 0])
    cube([1, 1, 1.33]);
  translate([221, 110, 0])
    cube([1, 1, 1.33]);
  translate([222, 110, 0])
    cube([1, 1, 1.33]);
  translate([223, 110, 0])
    cube([1, 1, 1.33]);
  translate([224, 110, 0])
    cube([1, 1, 1.33]);
  translate([225, 110, 0])
    cube([1, 1, 1.33]);
  translate([226, 110, 0])
    cube([1, 1, 1.33]);
  translate([227, 110, 0])
    cube([1, 1, 1.33]);
  translate([228, 110, 0])
    cube([1, 1, 1.33]);
  translate([229, 110, 0])
    cube([1, 1, 1.33]);
  translate([230, 110, 0])
    cube([1, 1, 1.33]);
  translate([231, 110, 0])
    cube([1, 1, 1.33]);
  translate([232, 110, 0])
    cube([1, 1, 1.33]);
  translate([233, 110, 0])
    cube([1, 1, 1.33]);
  translate([234, 110, 0])
    cube([1, 1, 1.33]);
  translate([235, 110, 0])
    cube([1, 1, 1.33]);
  translate([236, 110, 0])
    cube([1, 1, 1.33]);
  translate([237, 110, 0])
    cube([1, 1, 1.33]);
  translate([238, 110, 0])
    cube([1, 1, 1.33]);
  translate([239, 110, 0])
    cube([1, 1, 1.33]);
  translate([240, 110, 0])
    cube([1, 1, 1.33]);
  translate([241, 110, 0])
    cube([1, 1, 1.33]);
  translate([242, 110, 0])
    cube([1, 1, 1.33]);
  translate([243, 110, 0])
    cube([1, 1, 1.33]);
  translate([244, 110, 0])
    cube([1, 1, 1.33]);
  translate([245, 110, 0])
    cube([1, 1, 1.33]);
  translate([246, 110, 0])
    cube([1, 1, 1.33]);
  translate([0, 111, 0])
    cube([1, 1, 1.49]);
  translate([1, 111, 0])
    cube([1, 1, 1.49]);
  translate([2, 111, 0])
    cube([1, 1, 1.49]);
  translate([3, 111, 0])
    cube([1, 1, 1.49]);
  translate([4, 111, 0])
    cube([1, 1, 1.45]);
  translate([5, 111, 0])
    cube([1, 1, 1.49]);
  translate([6, 111, 0])
    cube([1, 1, 1.45]);
  translate([7, 111, 0])
    cube([1, 1, 1.49]);
  translate([8, 111, 0])
    cube([1, 1, 1.45]);
  translate([9, 111, 0])
    cube([1, 1, 1.45]);
  translate([10, 111, 0])
    cube([1, 1, 1.49]);
  translate([11, 111, 0])
    cube([1, 1, 1.45]);
  translate([12, 111, 0])
    cube([1, 1, 1.45]);
  translate([13, 111, 0])
    cube([1, 1, 1.49]);
  translate([14, 111, 0])
    cube([1, 1, 1.45]);
  translate([15, 111, 0])
    cube([1, 1, 1.49]);
  translate([16, 111, 0])
    cube([1, 1, 1.45]);
  translate([17, 111, 0])
    cube([1, 1, 1.45]);
  translate([18, 111, 0])
    cube([1, 1, 1.45]);
  translate([19, 111, 0])
    cube([1, 1, 1.45]);
  translate([20, 111, 0])
    cube([1, 1, 1.45]);
  translate([21, 111, 0])
    cube([1, 1, 1.45]);
  translate([22, 111, 0])
    cube([1, 1, 1.45]);
  translate([23, 111, 0])
    cube([1, 1, 1.45]);
  translate([24, 111, 0])
    cube([1, 1, 1.45]);
  translate([25, 111, 0])
    cube([1, 1, 1.45]);
  translate([26, 111, 0])
    cube([1, 1, 1.45]);
  translate([27, 111, 0])
    cube([1, 1, 1.45]);
  translate([28, 111, 0])
    cube([1, 1, 1.49]);
  translate([29, 111, 0])
    cube([1, 1, 1.45]);
  translate([30, 111, 0])
    cube([1, 1, 1.45]);
  translate([31, 111, 0])
    cube([1, 1, 1.45]);
  translate([32, 111, 0])
    cube([1, 1, 1.41]);
  translate([33, 111, 0])
    cube([1, 1, 1.41]);
  translate([34, 111, 0])
    cube([1, 1, 1.41]);
  translate([35, 111, 0])
    cube([1, 1, 1.41]);
  translate([36, 111, 0])
    cube([1, 1, 1.41]);
  translate([37, 111, 0])
    cube([1, 1, 1.41]);
  translate([38, 111, 0])
    cube([1, 1, 1.41]);
  translate([39, 111, 0])
    cube([1, 1, 1.37]);
  translate([40, 111, 0])
    cube([1, 1, 1.37]);
  translate([41, 111, 0])
    cube([1, 1, 1.84]);
  translate([42, 111, 0])
    cube([1, 1, 6.67]);
  translate([43, 111, 0])
    cube([1, 1, 3.69]);
  translate([44, 111, 0])
    cube([1, 1, 2.86]);
  translate([45, 111, 0])
    cube([1, 1, 2.82]);
  translate([46, 111, 0])
    cube([1, 1, 2.90]);
  translate([47, 111, 0])
    cube([1, 1, 3.92]);
  translate([48, 111, 0])
    cube([1, 1, 4.98]);
  translate([49, 111, 0])
    cube([1, 1, 5.88]);
  translate([50, 111, 0])
    cube([1, 1, 6.24]);
  translate([51, 111, 0])
    cube([1, 1, 6.24]);
  translate([52, 111, 0])
    cube([1, 1, 6.20]);
  translate([53, 111, 0])
    cube([1, 1, 6.12]);
  translate([54, 111, 0])
    cube([1, 1, 5.96]);
  translate([55, 111, 0])
    cube([1, 1, 6.31]);
  translate([56, 111, 0])
    cube([1, 1, 8.59]);
  translate([57, 111, 0])
    cube([1, 1, 7.41]);
  translate([58, 111, 0])
    cube([1, 1, 5.73]);
  translate([59, 111, 0])
    cube([1, 1, 4.67]);
  translate([60, 111, 0])
    cube([1, 1, 4.98]);
  translate([61, 111, 0])
    cube([1, 1, 5.41]);
  translate([62, 111, 0])
    cube([1, 1, 5.61]);
  translate([63, 111, 0])
    cube([1, 1, 5.84]);
  translate([64, 111, 0])
    cube([1, 1, 6.00]);
  translate([65, 111, 0])
    cube([1, 1, 6.12]);
  translate([66, 111, 0])
    cube([1, 1, 6.31]);
  translate([67, 111, 0])
    cube([1, 1, 6.39]);
  translate([68, 111, 0])
    cube([1, 1, 6.31]);
  translate([69, 111, 0])
    cube([1, 1, 6.08]);
  translate([70, 111, 0])
    cube([1, 1, 5.76]);
  translate([71, 111, 0])
    cube([1, 1, 5.53]);
  translate([72, 111, 0])
    cube([1, 1, 5.29]);
  translate([73, 111, 0])
    cube([1, 1, 3.37]);
  translate([74, 111, 0])
    cube([1, 1, 1.18]);
  translate([75, 111, 0])
    cube([1, 1, 1.10]);
  translate([76, 111, 0])
    cube([1, 1, 1.29]);
  translate([77, 111, 0])
    cube([1, 1, 1.49]);
  translate([78, 111, 0])
    cube([1, 1, 1.65]);
  translate([79, 111, 0])
    cube([1, 1, 1.33]);
  translate([80, 111, 0])
    cube([1, 1, 2.00]);
  translate([81, 111, 0])
    cube([1, 1, 2.94]);
  translate([82, 111, 0])
    cube([1, 1, 1.80]);
  translate([83, 111, 0])
    cube([1, 1, 1.25]);
  translate([84, 111, 0])
    cube([1, 1, 1.65]);
  translate([85, 111, 0])
    cube([1, 1, 1.18]);
  translate([86, 111, 0])
    cube([1, 1, 1.22]);
  translate([87, 111, 0])
    cube([1, 1, 1.45]);
  translate([88, 111, 0])
    cube([1, 1, 1.49]);
  translate([89, 111, 0])
    cube([1, 1, 1.45]);
  translate([90, 111, 0])
    cube([1, 1, 2.20]);
  translate([91, 111, 0])
    cube([1, 1, 3.80]);
  translate([92, 111, 0])
    cube([1, 1, 3.73]);
  translate([93, 111, 0])
    cube([1, 1, 2.71]);
  translate([94, 111, 0])
    cube([1, 1, 0.82]);
  translate([95, 111, 0])
    cube([1, 1, 2.63]);
  translate([96, 111, 0])
    cube([1, 1, 3.69]);
  translate([97, 111, 0])
    cube([1, 1, 3.49]);
  translate([98, 111, 0])
    cube([1, 1, 4.20]);
  translate([99, 111, 0])
    cube([1, 1, 4.24]);
  translate([100, 111, 0])
    cube([1, 1, 4.78]);
  translate([101, 111, 0])
    cube([1, 1, 4.27]);
  translate([102, 111, 0])
    cube([1, 1, 3.88]);
  translate([103, 111, 0])
    cube([1, 1, 3.25]);
  translate([104, 111, 0])
    cube([1, 1, 2.98]);
  translate([105, 111, 0])
    cube([1, 1, 2.86]);
  translate([106, 111, 0])
    cube([1, 1, 3.84]);
  translate([107, 111, 0])
    cube([1, 1, 4.20]);
  translate([108, 111, 0])
    cube([1, 1, 4.12]);
  translate([109, 111, 0])
    cube([1, 1, 3.18]);
  translate([110, 111, 0])
    cube([1, 1, 3.61]);
  translate([111, 111, 0])
    cube([1, 1, 3.65]);
  translate([112, 111, 0])
    cube([1, 1, 3.69]);
  translate([113, 111, 0])
    cube([1, 1, 4.47]);
  translate([114, 111, 0])
    cube([1, 1, 5.80]);
  translate([115, 111, 0])
    cube([1, 1, 6.47]);
  translate([116, 111, 0])
    cube([1, 1, 6.43]);
  translate([117, 111, 0])
    cube([1, 1, 6.67]);
  translate([118, 111, 0])
    cube([1, 1, 6.55]);
  translate([119, 111, 0])
    cube([1, 1, 6.35]);
  translate([120, 111, 0])
    cube([1, 1, 6.16]);
  translate([121, 111, 0])
    cube([1, 1, 5.25]);
  translate([122, 111, 0])
    cube([1, 1, 5.61]);
  translate([123, 111, 0])
    cube([1, 1, 5.65]);
  translate([124, 111, 0])
    cube([1, 1, 5.57]);
  translate([125, 111, 0])
    cube([1, 1, 5.65]);
  translate([126, 111, 0])
    cube([1, 1, 5.73]);
  translate([127, 111, 0])
    cube([1, 1, 5.76]);
  translate([128, 111, 0])
    cube([1, 1, 5.61]);
  translate([129, 111, 0])
    cube([1, 1, 5.45]);
  translate([130, 111, 0])
    cube([1, 1, 4.04]);
  translate([131, 111, 0])
    cube([1, 1, 4.59]);
  translate([132, 111, 0])
    cube([1, 1, 3.96]);
  translate([133, 111, 0])
    cube([1, 1, 4.35]);
  translate([134, 111, 0])
    cube([1, 1, 4.00]);
  translate([135, 111, 0])
    cube([1, 1, 4.00]);
  translate([136, 111, 0])
    cube([1, 1, 3.76]);
  translate([137, 111, 0])
    cube([1, 1, 4.12]);
  translate([138, 111, 0])
    cube([1, 1, 3.18]);
  translate([139, 111, 0])
    cube([1, 1, 3.69]);
  translate([140, 111, 0])
    cube([1, 1, 3.69]);
  translate([141, 111, 0])
    cube([1, 1, 3.61]);
  translate([142, 111, 0])
    cube([1, 1, 3.92]);
  translate([143, 111, 0])
    cube([1, 1, 4.39]);
  translate([144, 111, 0])
    cube([1, 1, 5.45]);
  translate([145, 111, 0])
    cube([1, 1, 4.71]);
  translate([146, 111, 0])
    cube([1, 1, 1.53]);
  translate([147, 111, 0])
    cube([1, 1, 1.29]);
  translate([148, 111, 0])
    cube([1, 1, 1.29]);
  translate([149, 111, 0])
    cube([1, 1, 1.33]);
  translate([150, 111, 0])
    cube([1, 1, 1.29]);
  translate([151, 111, 0])
    cube([1, 1, 1.33]);
  translate([152, 111, 0])
    cube([1, 1, 1.33]);
  translate([153, 111, 0])
    cube([1, 1, 1.25]);
  translate([154, 111, 0])
    cube([1, 1, 1.29]);
  translate([155, 111, 0])
    cube([1, 1, 1.33]);
  translate([156, 111, 0])
    cube([1, 1, 1.33]);
  translate([157, 111, 0])
    cube([1, 1, 1.33]);
  translate([158, 111, 0])
    cube([1, 1, 1.33]);
  translate([159, 111, 0])
    cube([1, 1, 1.33]);
  translate([160, 111, 0])
    cube([1, 1, 1.33]);
  translate([161, 111, 0])
    cube([1, 1, 1.29]);
  translate([162, 111, 0])
    cube([1, 1, 1.33]);
  translate([163, 111, 0])
    cube([1, 1, 1.33]);
  translate([164, 111, 0])
    cube([1, 1, 1.33]);
  translate([165, 111, 0])
    cube([1, 1, 1.33]);
  translate([166, 111, 0])
    cube([1, 1, 1.33]);
  translate([167, 111, 0])
    cube([1, 1, 1.33]);
  translate([168, 111, 0])
    cube([1, 1, 1.33]);
  translate([169, 111, 0])
    cube([1, 1, 1.33]);
  translate([170, 111, 0])
    cube([1, 1, 1.33]);
  translate([171, 111, 0])
    cube([1, 1, 1.33]);
  translate([172, 111, 0])
    cube([1, 1, 1.33]);
  translate([173, 111, 0])
    cube([1, 1, 1.33]);
  translate([174, 111, 0])
    cube([1, 1, 1.33]);
  translate([175, 111, 0])
    cube([1, 1, 1.33]);
  translate([176, 111, 0])
    cube([1, 1, 1.33]);
  translate([177, 111, 0])
    cube([1, 1, 1.33]);
  translate([178, 111, 0])
    cube([1, 1, 1.33]);
  translate([179, 111, 0])
    cube([1, 1, 1.33]);
  translate([180, 111, 0])
    cube([1, 1, 1.33]);
  translate([181, 111, 0])
    cube([1, 1, 1.33]);
  translate([182, 111, 0])
    cube([1, 1, 1.33]);
  translate([183, 111, 0])
    cube([1, 1, 1.33]);
  translate([184, 111, 0])
    cube([1, 1, 1.41]);
  translate([185, 111, 0])
    cube([1, 1, 1.33]);
  translate([186, 111, 0])
    cube([1, 1, 1.37]);
  translate([187, 111, 0])
    cube([1, 1, 1.33]);
  translate([188, 111, 0])
    cube([1, 1, 1.33]);
  translate([189, 111, 0])
    cube([1, 1, 1.33]);
  translate([190, 111, 0])
    cube([1, 1, 1.33]);
  translate([191, 111, 0])
    cube([1, 1, 1.33]);
  translate([192, 111, 0])
    cube([1, 1, 1.33]);
  translate([193, 111, 0])
    cube([1, 1, 1.33]);
  translate([194, 111, 0])
    cube([1, 1, 1.33]);
  translate([195, 111, 0])
    cube([1, 1, 1.33]);
  translate([196, 111, 0])
    cube([1, 1, 1.33]);
  translate([197, 111, 0])
    cube([1, 1, 1.33]);
  translate([198, 111, 0])
    cube([1, 1, 1.33]);
  translate([199, 111, 0])
    cube([1, 1, 1.33]);
  translate([200, 111, 0])
    cube([1, 1, 1.41]);
  translate([201, 111, 0])
    cube([1, 1, 1.37]);
  translate([202, 111, 0])
    cube([1, 1, 1.29]);
  translate([203, 111, 0])
    cube([1, 1, 1.33]);
  translate([204, 111, 0])
    cube([1, 1, 1.33]);
  translate([205, 111, 0])
    cube([1, 1, 1.33]);
  translate([206, 111, 0])
    cube([1, 1, 1.33]);
  translate([207, 111, 0])
    cube([1, 1, 1.33]);
  translate([208, 111, 0])
    cube([1, 1, 1.33]);
  translate([209, 111, 0])
    cube([1, 1, 1.33]);
  translate([210, 111, 0])
    cube([1, 1, 1.33]);
  translate([211, 111, 0])
    cube([1, 1, 1.33]);
  translate([212, 111, 0])
    cube([1, 1, 1.33]);
  translate([213, 111, 0])
    cube([1, 1, 1.33]);
  translate([214, 111, 0])
    cube([1, 1, 1.33]);
  translate([215, 111, 0])
    cube([1, 1, 1.33]);
  translate([216, 111, 0])
    cube([1, 1, 1.33]);
  translate([217, 111, 0])
    cube([1, 1, 1.33]);
  translate([218, 111, 0])
    cube([1, 1, 1.33]);
  translate([219, 111, 0])
    cube([1, 1, 1.33]);
  translate([220, 111, 0])
    cube([1, 1, 1.33]);
  translate([221, 111, 0])
    cube([1, 1, 1.33]);
  translate([222, 111, 0])
    cube([1, 1, 1.33]);
  translate([223, 111, 0])
    cube([1, 1, 1.33]);
  translate([224, 111, 0])
    cube([1, 1, 1.33]);
  translate([225, 111, 0])
    cube([1, 1, 1.33]);
  translate([226, 111, 0])
    cube([1, 1, 1.33]);
  translate([227, 111, 0])
    cube([1, 1, 1.33]);
  translate([228, 111, 0])
    cube([1, 1, 1.33]);
  translate([229, 111, 0])
    cube([1, 1, 1.33]);
  translate([230, 111, 0])
    cube([1, 1, 1.33]);
  translate([231, 111, 0])
    cube([1, 1, 1.33]);
  translate([232, 111, 0])
    cube([1, 1, 1.33]);
  translate([233, 111, 0])
    cube([1, 1, 1.33]);
  translate([234, 111, 0])
    cube([1, 1, 1.33]);
  translate([235, 111, 0])
    cube([1, 1, 1.33]);
  translate([236, 111, 0])
    cube([1, 1, 1.33]);
  translate([237, 111, 0])
    cube([1, 1, 1.33]);
  translate([238, 111, 0])
    cube([1, 1, 1.33]);
  translate([239, 111, 0])
    cube([1, 1, 1.33]);
  translate([240, 111, 0])
    cube([1, 1, 1.33]);
  translate([241, 111, 0])
    cube([1, 1, 1.33]);
  translate([242, 111, 0])
    cube([1, 1, 1.37]);
  translate([243, 111, 0])
    cube([1, 1, 1.33]);
  translate([244, 111, 0])
    cube([1, 1, 1.33]);
  translate([245, 111, 0])
    cube([1, 1, 1.33]);
  translate([246, 111, 0])
    cube([1, 1, 1.33]);
  translate([0, 112, 0])
    cube([1, 1, 1.49]);
  translate([1, 112, 0])
    cube([1, 1, 1.49]);
  translate([2, 112, 0])
    cube([1, 1, 1.49]);
  translate([3, 112, 0])
    cube([1, 1, 1.49]);
  translate([4, 112, 0])
    cube([1, 1, 1.49]);
  translate([5, 112, 0])
    cube([1, 1, 1.49]);
  translate([6, 112, 0])
    cube([1, 1, 1.49]);
  translate([7, 112, 0])
    cube([1, 1, 1.49]);
  translate([8, 112, 0])
    cube([1, 1, 1.49]);
  translate([9, 112, 0])
    cube([1, 1, 1.49]);
  translate([10, 112, 0])
    cube([1, 1, 1.49]);
  translate([11, 112, 0])
    cube([1, 1, 1.45]);
  translate([12, 112, 0])
    cube([1, 1, 1.45]);
  translate([13, 112, 0])
    cube([1, 1, 1.49]);
  translate([14, 112, 0])
    cube([1, 1, 1.49]);
  translate([15, 112, 0])
    cube([1, 1, 1.49]);
  translate([16, 112, 0])
    cube([1, 1, 1.49]);
  translate([17, 112, 0])
    cube([1, 1, 1.45]);
  translate([18, 112, 0])
    cube([1, 1, 1.45]);
  translate([19, 112, 0])
    cube([1, 1, 1.45]);
  translate([20, 112, 0])
    cube([1, 1, 1.45]);
  translate([21, 112, 0])
    cube([1, 1, 1.45]);
  translate([22, 112, 0])
    cube([1, 1, 1.45]);
  translate([23, 112, 0])
    cube([1, 1, 1.45]);
  translate([24, 112, 0])
    cube([1, 1, 1.45]);
  translate([25, 112, 0])
    cube([1, 1, 1.45]);
  translate([26, 112, 0])
    cube([1, 1, 1.45]);
  translate([27, 112, 0])
    cube([1, 1, 1.45]);
  translate([28, 112, 0])
    cube([1, 1, 1.45]);
  translate([29, 112, 0])
    cube([1, 1, 1.45]);
  translate([30, 112, 0])
    cube([1, 1, 1.45]);
  translate([31, 112, 0])
    cube([1, 1, 1.45]);
  translate([32, 112, 0])
    cube([1, 1, 1.41]);
  translate([33, 112, 0])
    cube([1, 1, 1.41]);
  translate([34, 112, 0])
    cube([1, 1, 1.37]);
  translate([35, 112, 0])
    cube([1, 1, 1.45]);
  translate([36, 112, 0])
    cube([1, 1, 1.41]);
  translate([37, 112, 0])
    cube([1, 1, 1.45]);
  translate([38, 112, 0])
    cube([1, 1, 1.41]);
  translate([39, 112, 0])
    cube([1, 1, 1.41]);
  translate([40, 112, 0])
    cube([1, 1, 1.41]);
  translate([41, 112, 0])
    cube([1, 1, 0.82]);
  translate([42, 112, 0])
    cube([1, 1, 6.75]);
  translate([43, 112, 0])
    cube([1, 1, 4.67]);
  translate([44, 112, 0])
    cube([1, 1, 3.29]);
  translate([45, 112, 0])
    cube([1, 1, 3.22]);
  translate([46, 112, 0])
    cube([1, 1, 3.18]);
  translate([47, 112, 0])
    cube([1, 1, 3.92]);
  translate([48, 112, 0])
    cube([1, 1, 5.02]);
  translate([49, 112, 0])
    cube([1, 1, 5.76]);
  translate([50, 112, 0])
    cube([1, 1, 6.20]);
  translate([51, 112, 0])
    cube([1, 1, 6.43]);
  translate([52, 112, 0])
    cube([1, 1, 6.24]);
  translate([53, 112, 0])
    cube([1, 1, 6.12]);
  translate([54, 112, 0])
    cube([1, 1, 5.88]);
  translate([55, 112, 0])
    cube([1, 1, 5.73]);
  translate([56, 112, 0])
    cube([1, 1, 8.63]);
  translate([57, 112, 0])
    cube([1, 1, 7.57]);
  translate([58, 112, 0])
    cube([1, 1, 6.12]);
  translate([59, 112, 0])
    cube([1, 1, 4.55]);
  translate([60, 112, 0])
    cube([1, 1, 5.02]);
  translate([61, 112, 0])
    cube([1, 1, 5.45]);
  translate([62, 112, 0])
    cube([1, 1, 5.65]);
  translate([63, 112, 0])
    cube([1, 1, 5.80]);
  translate([64, 112, 0])
    cube([1, 1, 6.04]);
  translate([65, 112, 0])
    cube([1, 1, 6.12]);
  translate([66, 112, 0])
    cube([1, 1, 6.39]);
  translate([67, 112, 0])
    cube([1, 1, 6.39]);
  translate([68, 112, 0])
    cube([1, 1, 6.24]);
  translate([69, 112, 0])
    cube([1, 1, 6.00]);
  translate([70, 112, 0])
    cube([1, 1, 5.76]);
  translate([71, 112, 0])
    cube([1, 1, 5.53]);
  translate([72, 112, 0])
    cube([1, 1, 5.41]);
  translate([73, 112, 0])
    cube([1, 1, 1.84]);
  translate([74, 112, 0])
    cube([1, 1, 1.22]);
  translate([75, 112, 0])
    cube([1, 1, 1.10]);
  translate([76, 112, 0])
    cube([1, 1, 1.25]);
  translate([77, 112, 0])
    cube([1, 1, 1.49]);
  translate([78, 112, 0])
    cube([1, 1, 1.57]);
  translate([79, 112, 0])
    cube([1, 1, 1.29]);
  translate([80, 112, 0])
    cube([1, 1, 1.65]);
  translate([81, 112, 0])
    cube([1, 1, 2.55]);
  translate([82, 112, 0])
    cube([1, 1, 1.73]);
  translate([83, 112, 0])
    cube([1, 1, 2.71]);
  translate([84, 112, 0])
    cube([1, 1, 1.53]);
  translate([85, 112, 0])
    cube([1, 1, 1.10]);
  translate([86, 112, 0])
    cube([1, 1, 1.29]);
  translate([87, 112, 0])
    cube([1, 1, 1.41]);
  translate([88, 112, 0])
    cube([1, 1, 1.29]);
  translate([89, 112, 0])
    cube([1, 1, 1.96]);
  translate([90, 112, 0])
    cube([1, 1, 4.00]);
  translate([91, 112, 0])
    cube([1, 1, 4.04]);
  translate([92, 112, 0])
    cube([1, 1, 4.24]);
  translate([93, 112, 0])
    cube([1, 1, 3.88]);
  translate([94, 112, 0])
    cube([1, 1, 2.39]);
  translate([95, 112, 0])
    cube([1, 1, 1.10]);
  translate([96, 112, 0])
    cube([1, 1, 4.08]);
  translate([97, 112, 0])
    cube([1, 1, 4.12]);
  translate([98, 112, 0])
    cube([1, 1, 4.16]);
  translate([99, 112, 0])
    cube([1, 1, 4.24]);
  translate([100, 112, 0])
    cube([1, 1, 3.22]);
  translate([101, 112, 0])
    cube([1, 1, 2.71]);
  translate([102, 112, 0])
    cube([1, 1, 3.06]);
  translate([103, 112, 0])
    cube([1, 1, 3.22]);
  translate([104, 112, 0])
    cube([1, 1, 4.39]);
  translate([105, 112, 0])
    cube([1, 1, 4.35]);
  translate([106, 112, 0])
    cube([1, 1, 3.65]);
  translate([107, 112, 0])
    cube([1, 1, 3.53]);
  translate([108, 112, 0])
    cube([1, 1, 2.86]);
  translate([109, 112, 0])
    cube([1, 1, 4.12]);
  translate([110, 112, 0])
    cube([1, 1, 4.20]);
  translate([111, 112, 0])
    cube([1, 1, 3.69]);
  translate([112, 112, 0])
    cube([1, 1, 2.82]);
  translate([113, 112, 0])
    cube([1, 1, 3.96]);
  translate([114, 112, 0])
    cube([1, 1, 3.73]);
  translate([115, 112, 0])
    cube([1, 1, 4.08]);
  translate([116, 112, 0])
    cube([1, 1, 4.04]);
  translate([117, 112, 0])
    cube([1, 1, 5.41]);
  translate([118, 112, 0])
    cube([1, 1, 6.24]);
  translate([119, 112, 0])
    cube([1, 1, 6.67]);
  translate([120, 112, 0])
    cube([1, 1, 6.43]);
  translate([121, 112, 0])
    cube([1, 1, 6.12]);
  translate([122, 112, 0])
    cube([1, 1, 5.22]);
  translate([123, 112, 0])
    cube([1, 1, 5.37]);
  translate([124, 112, 0])
    cube([1, 1, 5.29]);
  translate([125, 112, 0])
    cube([1, 1, 5.53]);
  translate([126, 112, 0])
    cube([1, 1, 4.20]);
  translate([127, 112, 0])
    cube([1, 1, 4.55]);
  translate([128, 112, 0])
    cube([1, 1, 4.71]);
  translate([129, 112, 0])
    cube([1, 1, 3.92]);
  translate([130, 112, 0])
    cube([1, 1, 4.71]);
  translate([131, 112, 0])
    cube([1, 1, 4.39]);
  translate([132, 112, 0])
    cube([1, 1, 4.43]);
  translate([133, 112, 0])
    cube([1, 1, 4.75]);
  translate([134, 112, 0])
    cube([1, 1, 4.20]);
  translate([135, 112, 0])
    cube([1, 1, 3.61]);
  translate([136, 112, 0])
    cube([1, 1, 3.65]);
  translate([137, 112, 0])
    cube([1, 1, 3.84]);
  translate([138, 112, 0])
    cube([1, 1, 3.41]);
  translate([139, 112, 0])
    cube([1, 1, 3.84]);
  translate([140, 112, 0])
    cube([1, 1, 3.65]);
  translate([141, 112, 0])
    cube([1, 1, 3.57]);
  translate([142, 112, 0])
    cube([1, 1, 4.16]);
  translate([143, 112, 0])
    cube([1, 1, 3.96]);
  translate([144, 112, 0])
    cube([1, 1, 4.20]);
  translate([145, 112, 0])
    cube([1, 1, 4.67]);
  translate([146, 112, 0])
    cube([1, 1, 1.73]);
  translate([147, 112, 0])
    cube([1, 1, 1.33]);
  translate([148, 112, 0])
    cube([1, 1, 1.29]);
  translate([149, 112, 0])
    cube([1, 1, 1.29]);
  translate([150, 112, 0])
    cube([1, 1, 1.33]);
  translate([151, 112, 0])
    cube([1, 1, 1.33]);
  translate([152, 112, 0])
    cube([1, 1, 1.33]);
  translate([153, 112, 0])
    cube([1, 1, 1.33]);
  translate([154, 112, 0])
    cube([1, 1, 1.33]);
  translate([155, 112, 0])
    cube([1, 1, 1.33]);
  translate([156, 112, 0])
    cube([1, 1, 1.33]);
  translate([157, 112, 0])
    cube([1, 1, 1.33]);
  translate([158, 112, 0])
    cube([1, 1, 1.33]);
  translate([159, 112, 0])
    cube([1, 1, 1.33]);
  translate([160, 112, 0])
    cube([1, 1, 1.33]);
  translate([161, 112, 0])
    cube([1, 1, 1.33]);
  translate([162, 112, 0])
    cube([1, 1, 1.33]);
  translate([163, 112, 0])
    cube([1, 1, 1.33]);
  translate([164, 112, 0])
    cube([1, 1, 1.33]);
  translate([165, 112, 0])
    cube([1, 1, 1.33]);
  translate([166, 112, 0])
    cube([1, 1, 1.33]);
  translate([167, 112, 0])
    cube([1, 1, 1.33]);
  translate([168, 112, 0])
    cube([1, 1, 1.33]);
  translate([169, 112, 0])
    cube([1, 1, 1.33]);
  translate([170, 112, 0])
    cube([1, 1, 1.33]);
  translate([171, 112, 0])
    cube([1, 1, 1.37]);
  translate([172, 112, 0])
    cube([1, 1, 1.33]);
  translate([173, 112, 0])
    cube([1, 1, 1.37]);
  translate([174, 112, 0])
    cube([1, 1, 1.33]);
  translate([175, 112, 0])
    cube([1, 1, 1.22]);
  translate([176, 112, 0])
    cube([1, 1, 1.37]);
  translate([177, 112, 0])
    cube([1, 1, 1.37]);
  translate([178, 112, 0])
    cube([1, 1, 1.37]);
  translate([179, 112, 0])
    cube([1, 1, 1.29]);
  translate([180, 112, 0])
    cube([1, 1, 1.37]);
  translate([181, 112, 0])
    cube([1, 1, 1.37]);
  translate([182, 112, 0])
    cube([1, 1, 1.33]);
  translate([183, 112, 0])
    cube([1, 1, 1.33]);
  translate([184, 112, 0])
    cube([1, 1, 1.37]);
  translate([185, 112, 0])
    cube([1, 1, 1.37]);
  translate([186, 112, 0])
    cube([1, 1, 1.37]);
  translate([187, 112, 0])
    cube([1, 1, 1.37]);
  translate([188, 112, 0])
    cube([1, 1, 1.37]);
  translate([189, 112, 0])
    cube([1, 1, 1.37]);
  translate([190, 112, 0])
    cube([1, 1, 1.37]);
  translate([191, 112, 0])
    cube([1, 1, 1.37]);
  translate([192, 112, 0])
    cube([1, 1, 1.37]);
  translate([193, 112, 0])
    cube([1, 1, 1.37]);
  translate([194, 112, 0])
    cube([1, 1, 1.37]);
  translate([195, 112, 0])
    cube([1, 1, 1.33]);
  translate([196, 112, 0])
    cube([1, 1, 1.37]);
  translate([197, 112, 0])
    cube([1, 1, 1.37]);
  translate([198, 112, 0])
    cube([1, 1, 1.29]);
  translate([199, 112, 0])
    cube([1, 1, 1.29]);
  translate([200, 112, 0])
    cube([1, 1, 1.37]);
  translate([201, 112, 0])
    cube([1, 1, 1.33]);
  translate([202, 112, 0])
    cube([1, 1, 1.33]);
  translate([203, 112, 0])
    cube([1, 1, 1.37]);
  translate([204, 112, 0])
    cube([1, 1, 1.29]);
  translate([205, 112, 0])
    cube([1, 1, 1.29]);
  translate([206, 112, 0])
    cube([1, 1, 1.33]);
  translate([207, 112, 0])
    cube([1, 1, 1.33]);
  translate([208, 112, 0])
    cube([1, 1, 1.37]);
  translate([209, 112, 0])
    cube([1, 1, 1.33]);
  translate([210, 112, 0])
    cube([1, 1, 1.33]);
  translate([211, 112, 0])
    cube([1, 1, 1.37]);
  translate([212, 112, 0])
    cube([1, 1, 1.33]);
  translate([213, 112, 0])
    cube([1, 1, 1.37]);
  translate([214, 112, 0])
    cube([1, 1, 1.33]);
  translate([215, 112, 0])
    cube([1, 1, 1.33]);
  translate([216, 112, 0])
    cube([1, 1, 1.41]);
  translate([217, 112, 0])
    cube([1, 1, 1.33]);
  translate([218, 112, 0])
    cube([1, 1, 1.33]);
  translate([219, 112, 0])
    cube([1, 1, 1.37]);
  translate([220, 112, 0])
    cube([1, 1, 1.33]);
  translate([221, 112, 0])
    cube([1, 1, 1.33]);
  translate([222, 112, 0])
    cube([1, 1, 1.33]);
  translate([223, 112, 0])
    cube([1, 1, 1.33]);
  translate([224, 112, 0])
    cube([1, 1, 1.33]);
  translate([225, 112, 0])
    cube([1, 1, 1.33]);
  translate([226, 112, 0])
    cube([1, 1, 1.33]);
  translate([227, 112, 0])
    cube([1, 1, 1.33]);
  translate([228, 112, 0])
    cube([1, 1, 1.33]);
  translate([229, 112, 0])
    cube([1, 1, 1.33]);
  translate([230, 112, 0])
    cube([1, 1, 1.33]);
  translate([231, 112, 0])
    cube([1, 1, 1.33]);
  translate([232, 112, 0])
    cube([1, 1, 1.37]);
  translate([233, 112, 0])
    cube([1, 1, 1.33]);
  translate([234, 112, 0])
    cube([1, 1, 1.33]);
  translate([235, 112, 0])
    cube([1, 1, 1.33]);
  translate([236, 112, 0])
    cube([1, 1, 1.33]);
  translate([237, 112, 0])
    cube([1, 1, 1.33]);
  translate([238, 112, 0])
    cube([1, 1, 1.33]);
  translate([239, 112, 0])
    cube([1, 1, 1.33]);
  translate([240, 112, 0])
    cube([1, 1, 1.33]);
  translate([241, 112, 0])
    cube([1, 1, 1.33]);
  translate([242, 112, 0])
    cube([1, 1, 1.33]);
  translate([243, 112, 0])
    cube([1, 1, 1.33]);
  translate([244, 112, 0])
    cube([1, 1, 1.33]);
  translate([245, 112, 0])
    cube([1, 1, 1.33]);
  translate([246, 112, 0])
    cube([1, 1, 1.33]);
  translate([0, 113, 0])
    cube([1, 1, 1.49]);
  translate([1, 113, 0])
    cube([1, 1, 1.49]);
  translate([2, 113, 0])
    cube([1, 1, 1.49]);
  translate([3, 113, 0])
    cube([1, 1, 1.49]);
  translate([4, 113, 0])
    cube([1, 1, 1.49]);
  translate([5, 113, 0])
    cube([1, 1, 1.49]);
  translate([6, 113, 0])
    cube([1, 1, 1.49]);
  translate([7, 113, 0])
    cube([1, 1, 1.49]);
  translate([8, 113, 0])
    cube([1, 1, 1.49]);
  translate([9, 113, 0])
    cube([1, 1, 1.49]);
  translate([10, 113, 0])
    cube([1, 1, 1.49]);
  translate([11, 113, 0])
    cube([1, 1, 1.45]);
  translate([12, 113, 0])
    cube([1, 1, 1.45]);
  translate([13, 113, 0])
    cube([1, 1, 1.49]);
  translate([14, 113, 0])
    cube([1, 1, 1.49]);
  translate([15, 113, 0])
    cube([1, 1, 1.49]);
  translate([16, 113, 0])
    cube([1, 1, 1.49]);
  translate([17, 113, 0])
    cube([1, 1, 1.45]);
  translate([18, 113, 0])
    cube([1, 1, 1.45]);
  translate([19, 113, 0])
    cube([1, 1, 1.45]);
  translate([20, 113, 0])
    cube([1, 1, 1.45]);
  translate([21, 113, 0])
    cube([1, 1, 1.45]);
  translate([22, 113, 0])
    cube([1, 1, 1.45]);
  translate([23, 113, 0])
    cube([1, 1, 1.45]);
  translate([24, 113, 0])
    cube([1, 1, 1.45]);
  translate([25, 113, 0])
    cube([1, 1, 1.45]);
  translate([26, 113, 0])
    cube([1, 1, 1.45]);
  translate([27, 113, 0])
    cube([1, 1, 1.45]);
  translate([28, 113, 0])
    cube([1, 1, 1.45]);
  translate([29, 113, 0])
    cube([1, 1, 1.45]);
  translate([30, 113, 0])
    cube([1, 1, 1.45]);
  translate([31, 113, 0])
    cube([1, 1, 1.45]);
  translate([32, 113, 0])
    cube([1, 1, 1.45]);
  translate([33, 113, 0])
    cube([1, 1, 1.49]);
  translate([34, 113, 0])
    cube([1, 1, 1.41]);
  translate([35, 113, 0])
    cube([1, 1, 1.45]);
  translate([36, 113, 0])
    cube([1, 1, 1.41]);
  translate([37, 113, 0])
    cube([1, 1, 1.45]);
  translate([38, 113, 0])
    cube([1, 1, 1.41]);
  translate([39, 113, 0])
    cube([1, 1, 1.41]);
  translate([40, 113, 0])
    cube([1, 1, 1.41]);
  translate([41, 113, 0])
    cube([1, 1, 1.10]);
  translate([42, 113, 0])
    cube([1, 1, 4.78]);
  translate([43, 113, 0])
    cube([1, 1, 5.61]);
  translate([44, 113, 0])
    cube([1, 1, 3.92]);
  translate([45, 113, 0])
    cube([1, 1, 3.37]);
  translate([46, 113, 0])
    cube([1, 1, 3.22]);
  translate([47, 113, 0])
    cube([1, 1, 3.53]);
  translate([48, 113, 0])
    cube([1, 1, 4.86]);
  translate([49, 113, 0])
    cube([1, 1, 5.53]);
  translate([50, 113, 0])
    cube([1, 1, 6.08]);
  translate([51, 113, 0])
    cube([1, 1, 6.31]);
  translate([52, 113, 0])
    cube([1, 1, 6.31]);
  translate([53, 113, 0])
    cube([1, 1, 6.24]);
  translate([54, 113, 0])
    cube([1, 1, 5.92]);
  translate([55, 113, 0])
    cube([1, 1, 5.84]);
  translate([56, 113, 0])
    cube([1, 1, 6.59]);
  translate([57, 113, 0])
    cube([1, 1, 7.73]);
  translate([58, 113, 0])
    cube([1, 1, 6.31]);
  translate([59, 113, 0])
    cube([1, 1, 4.51]);
  translate([60, 113, 0])
    cube([1, 1, 4.98]);
  translate([61, 113, 0])
    cube([1, 1, 5.37]);
  translate([62, 113, 0])
    cube([1, 1, 5.65]);
  translate([63, 113, 0])
    cube([1, 1, 5.80]);
  translate([64, 113, 0])
    cube([1, 1, 6.08]);
  translate([65, 113, 0])
    cube([1, 1, 6.16]);
  translate([66, 113, 0])
    cube([1, 1, 6.31]);
  translate([67, 113, 0])
    cube([1, 1, 6.31]);
  translate([68, 113, 0])
    cube([1, 1, 6.20]);
  translate([69, 113, 0])
    cube([1, 1, 6.08]);
  translate([70, 113, 0])
    cube([1, 1, 5.92]);
  translate([71, 113, 0])
    cube([1, 1, 5.80]);
  translate([72, 113, 0])
    cube([1, 1, 5.53]);
  translate([73, 113, 0])
    cube([1, 1, 2.75]);
  translate([74, 113, 0])
    cube([1, 1, 0.90]);
  translate([75, 113, 0])
    cube([1, 1, 1.10]);
  translate([76, 113, 0])
    cube([1, 1, 1.25]);
  translate([77, 113, 0])
    cube([1, 1, 1.49]);
  translate([78, 113, 0])
    cube([1, 1, 1.49]);
  translate([79, 113, 0])
    cube([1, 1, 1.29]);
  translate([80, 113, 0])
    cube([1, 1, 1.14]);
  translate([81, 113, 0])
    cube([1, 1, 1.53]);
  translate([82, 113, 0])
    cube([1, 1, 1.96]);
  translate([83, 113, 0])
    cube([1, 1, 1.92]);
  translate([84, 113, 0])
    cube([1, 1, 1.84]);
  translate([85, 113, 0])
    cube([1, 1, 1.18]);
  translate([86, 113, 0])
    cube([1, 1, 1.25]);
  translate([87, 113, 0])
    cube([1, 1, 1.37]);
  translate([88, 113, 0])
    cube([1, 1, 2.08]);
  translate([89, 113, 0])
    cube([1, 1, 3.33]);
  translate([90, 113, 0])
    cube([1, 1, 4.04]);
  translate([91, 113, 0])
    cube([1, 1, 4.12]);
  translate([92, 113, 0])
    cube([1, 1, 4.31]);
  translate([93, 113, 0])
    cube([1, 1, 4.43]);
  translate([94, 113, 0])
    cube([1, 1, 3.88]);
  translate([95, 113, 0])
    cube([1, 1, 1.65]);
  translate([96, 113, 0])
    cube([1, 1, 1.69]);
  translate([97, 113, 0])
    cube([1, 1, 3.10]);
  translate([98, 113, 0])
    cube([1, 1, 2.00]);
  translate([99, 113, 0])
    cube([1, 1, 1.96]);
  translate([100, 113, 0])
    cube([1, 1, 2.75]);
  translate([101, 113, 0])
    cube([1, 1, 3.41]);
  translate([102, 113, 0])
    cube([1, 1, 4.20]);
  translate([103, 113, 0])
    cube([1, 1, 4.51]);
  translate([104, 113, 0])
    cube([1, 1, 3.69]);
  translate([105, 113, 0])
    cube([1, 1, 2.31]);
  translate([106, 113, 0])
    cube([1, 1, 2.43]);
  translate([107, 113, 0])
    cube([1, 1, 2.98]);
  translate([108, 113, 0])
    cube([1, 1, 3.53]);
  translate([109, 113, 0])
    cube([1, 1, 4.24]);
  translate([110, 113, 0])
    cube([1, 1, 3.49]);
  translate([111, 113, 0])
    cube([1, 1, 3.14]);
  translate([112, 113, 0])
    cube([1, 1, 2.90]);
  translate([113, 113, 0])
    cube([1, 1, 3.88]);
  translate([114, 113, 0])
    cube([1, 1, 2.47]);
  translate([115, 113, 0])
    cube([1, 1, 3.69]);
  translate([116, 113, 0])
    cube([1, 1, 3.37]);
  translate([117, 113, 0])
    cube([1, 1, 4.51]);
  translate([118, 113, 0])
    cube([1, 1, 4.08]);
  translate([119, 113, 0])
    cube([1, 1, 4.35]);
  translate([120, 113, 0])
    cube([1, 1, 4.27]);
  translate([121, 113, 0])
    cube([1, 1, 4.24]);
  translate([122, 113, 0])
    cube([1, 1, 4.27]);
  translate([123, 113, 0])
    cube([1, 1, 4.39]);
  translate([124, 113, 0])
    cube([1, 1, 4.24]);
  translate([125, 113, 0])
    cube([1, 1, 4.24]);
  translate([126, 113, 0])
    cube([1, 1, 4.59]);
  translate([127, 113, 0])
    cube([1, 1, 4.43]);
  translate([128, 113, 0])
    cube([1, 1, 4.20]);
  translate([129, 113, 0])
    cube([1, 1, 4.00]);
  translate([130, 113, 0])
    cube([1, 1, 3.88]);
  translate([131, 113, 0])
    cube([1, 1, 4.12]);
  translate([132, 113, 0])
    cube([1, 1, 4.59]);
  translate([133, 113, 0])
    cube([1, 1, 4.43]);
  translate([134, 113, 0])
    cube([1, 1, 4.24]);
  translate([135, 113, 0])
    cube([1, 1, 4.04]);
  translate([136, 113, 0])
    cube([1, 1, 4.00]);
  translate([137, 113, 0])
    cube([1, 1, 3.84]);
  translate([138, 113, 0])
    cube([1, 1, 3.49]);
  translate([139, 113, 0])
    cube([1, 1, 3.49]);
  translate([140, 113, 0])
    cube([1, 1, 3.37]);
  translate([141, 113, 0])
    cube([1, 1, 3.96]);
  translate([142, 113, 0])
    cube([1, 1, 3.45]);
  translate([143, 113, 0])
    cube([1, 1, 3.53]);
  translate([144, 113, 0])
    cube([1, 1, 4.24]);
  translate([145, 113, 0])
    cube([1, 1, 4.04]);
  translate([146, 113, 0])
    cube([1, 1, 0.75]);
  translate([147, 113, 0])
    cube([1, 1, 1.29]);
  translate([148, 113, 0])
    cube([1, 1, 1.33]);
  translate([149, 113, 0])
    cube([1, 1, 1.33]);
  translate([150, 113, 0])
    cube([1, 1, 1.33]);
  translate([151, 113, 0])
    cube([1, 1, 1.33]);
  translate([152, 113, 0])
    cube([1, 1, 1.33]);
  translate([153, 113, 0])
    cube([1, 1, 1.33]);
  translate([154, 113, 0])
    cube([1, 1, 1.33]);
  translate([155, 113, 0])
    cube([1, 1, 1.33]);
  translate([156, 113, 0])
    cube([1, 1, 1.33]);
  translate([157, 113, 0])
    cube([1, 1, 1.33]);
  translate([158, 113, 0])
    cube([1, 1, 1.33]);
  translate([159, 113, 0])
    cube([1, 1, 1.33]);
  translate([160, 113, 0])
    cube([1, 1, 1.33]);
  translate([161, 113, 0])
    cube([1, 1, 1.33]);
  translate([162, 113, 0])
    cube([1, 1, 1.33]);
  translate([163, 113, 0])
    cube([1, 1, 1.33]);
  translate([164, 113, 0])
    cube([1, 1, 1.33]);
  translate([165, 113, 0])
    cube([1, 1, 1.33]);
  translate([166, 113, 0])
    cube([1, 1, 1.33]);
  translate([167, 113, 0])
    cube([1, 1, 1.33]);
  translate([168, 113, 0])
    cube([1, 1, 1.33]);
  translate([169, 113, 0])
    cube([1, 1, 1.33]);
  translate([170, 113, 0])
    cube([1, 1, 1.33]);
  translate([171, 113, 0])
    cube([1, 1, 1.37]);
  translate([172, 113, 0])
    cube([1, 1, 1.33]);
  translate([173, 113, 0])
    cube([1, 1, 1.37]);
  translate([174, 113, 0])
    cube([1, 1, 1.37]);
  translate([175, 113, 0])
    cube([1, 1, 1.37]);
  translate([176, 113, 0])
    cube([1, 1, 1.37]);
  translate([177, 113, 0])
    cube([1, 1, 1.37]);
  translate([178, 113, 0])
    cube([1, 1, 1.37]);
  translate([179, 113, 0])
    cube([1, 1, 1.29]);
  translate([180, 113, 0])
    cube([1, 1, 1.37]);
  translate([181, 113, 0])
    cube([1, 1, 1.37]);
  translate([182, 113, 0])
    cube([1, 1, 1.33]);
  translate([183, 113, 0])
    cube([1, 1, 1.33]);
  translate([184, 113, 0])
    cube([1, 1, 1.37]);
  translate([185, 113, 0])
    cube([1, 1, 1.37]);
  translate([186, 113, 0])
    cube([1, 1, 1.37]);
  translate([187, 113, 0])
    cube([1, 1, 1.37]);
  translate([188, 113, 0])
    cube([1, 1, 1.37]);
  translate([189, 113, 0])
    cube([1, 1, 1.37]);
  translate([190, 113, 0])
    cube([1, 1, 1.37]);
  translate([191, 113, 0])
    cube([1, 1, 1.37]);
  translate([192, 113, 0])
    cube([1, 1, 1.37]);
  translate([193, 113, 0])
    cube([1, 1, 1.37]);
  translate([194, 113, 0])
    cube([1, 1, 1.37]);
  translate([195, 113, 0])
    cube([1, 1, 1.33]);
  translate([196, 113, 0])
    cube([1, 1, 1.37]);
  translate([197, 113, 0])
    cube([1, 1, 1.37]);
  translate([198, 113, 0])
    cube([1, 1, 1.37]);
  translate([199, 113, 0])
    cube([1, 1, 1.37]);
  translate([200, 113, 0])
    cube([1, 1, 1.37]);
  translate([201, 113, 0])
    cube([1, 1, 1.33]);
  translate([202, 113, 0])
    cube([1, 1, 1.33]);
  translate([203, 113, 0])
    cube([1, 1, 1.37]);
  translate([204, 113, 0])
    cube([1, 1, 1.37]);
  translate([205, 113, 0])
    cube([1, 1, 1.37]);
  translate([206, 113, 0])
    cube([1, 1, 1.33]);
  translate([207, 113, 0])
    cube([1, 1, 1.33]);
  translate([208, 113, 0])
    cube([1, 1, 1.37]);
  translate([209, 113, 0])
    cube([1, 1, 1.33]);
  translate([210, 113, 0])
    cube([1, 1, 1.33]);
  translate([211, 113, 0])
    cube([1, 1, 1.37]);
  translate([212, 113, 0])
    cube([1, 1, 1.33]);
  translate([213, 113, 0])
    cube([1, 1, 1.37]);
  translate([214, 113, 0])
    cube([1, 1, 1.33]);
  translate([215, 113, 0])
    cube([1, 1, 1.33]);
  translate([216, 113, 0])
    cube([1, 1, 1.41]);
  translate([217, 113, 0])
    cube([1, 1, 1.33]);
  translate([218, 113, 0])
    cube([1, 1, 1.33]);
  translate([219, 113, 0])
    cube([1, 1, 1.37]);
  translate([220, 113, 0])
    cube([1, 1, 1.33]);
  translate([221, 113, 0])
    cube([1, 1, 1.33]);
  translate([222, 113, 0])
    cube([1, 1, 1.33]);
  translate([223, 113, 0])
    cube([1, 1, 1.33]);
  translate([224, 113, 0])
    cube([1, 1, 1.33]);
  translate([225, 113, 0])
    cube([1, 1, 1.33]);
  translate([226, 113, 0])
    cube([1, 1, 1.33]);
  translate([227, 113, 0])
    cube([1, 1, 1.33]);
  translate([228, 113, 0])
    cube([1, 1, 1.33]);
  translate([229, 113, 0])
    cube([1, 1, 1.33]);
  translate([230, 113, 0])
    cube([1, 1, 1.33]);
  translate([231, 113, 0])
    cube([1, 1, 1.33]);
  translate([232, 113, 0])
    cube([1, 1, 1.37]);
  translate([233, 113, 0])
    cube([1, 1, 1.33]);
  translate([234, 113, 0])
    cube([1, 1, 1.33]);
  translate([235, 113, 0])
    cube([1, 1, 1.33]);
  translate([236, 113, 0])
    cube([1, 1, 1.33]);
  translate([237, 113, 0])
    cube([1, 1, 1.33]);
  translate([238, 113, 0])
    cube([1, 1, 1.33]);
  translate([239, 113, 0])
    cube([1, 1, 1.33]);
  translate([240, 113, 0])
    cube([1, 1, 1.33]);
  translate([241, 113, 0])
    cube([1, 1, 1.33]);
  translate([242, 113, 0])
    cube([1, 1, 1.33]);
  translate([243, 113, 0])
    cube([1, 1, 1.33]);
  translate([244, 113, 0])
    cube([1, 1, 1.33]);
  translate([245, 113, 0])
    cube([1, 1, 1.33]);
  translate([246, 113, 0])
    cube([1, 1, 1.33]);
  translate([0, 114, 0])
    cube([1, 1, 1.53]);
  translate([1, 114, 0])
    cube([1, 1, 1.49]);
  translate([2, 114, 0])
    cube([1, 1, 1.49]);
  translate([3, 114, 0])
    cube([1, 1, 1.49]);
  translate([4, 114, 0])
    cube([1, 1, 1.49]);
  translate([5, 114, 0])
    cube([1, 1, 1.49]);
  translate([6, 114, 0])
    cube([1, 1, 1.49]);
  translate([7, 114, 0])
    cube([1, 1, 1.49]);
  translate([8, 114, 0])
    cube([1, 1, 1.49]);
  translate([9, 114, 0])
    cube([1, 1, 1.49]);
  translate([10, 114, 0])
    cube([1, 1, 1.49]);
  translate([11, 114, 0])
    cube([1, 1, 1.49]);
  translate([12, 114, 0])
    cube([1, 1, 1.49]);
  translate([13, 114, 0])
    cube([1, 1, 1.49]);
  translate([14, 114, 0])
    cube([1, 1, 1.49]);
  translate([15, 114, 0])
    cube([1, 1, 1.49]);
  translate([16, 114, 0])
    cube([1, 1, 1.53]);
  translate([17, 114, 0])
    cube([1, 1, 1.45]);
  translate([18, 114, 0])
    cube([1, 1, 1.45]);
  translate([19, 114, 0])
    cube([1, 1, 1.45]);
  translate([20, 114, 0])
    cube([1, 1, 1.49]);
  translate([21, 114, 0])
    cube([1, 1, 1.45]);
  translate([22, 114, 0])
    cube([1, 1, 1.45]);
  translate([23, 114, 0])
    cube([1, 1, 1.45]);
  translate([24, 114, 0])
    cube([1, 1, 1.45]);
  translate([25, 114, 0])
    cube([1, 1, 1.45]);
  translate([26, 114, 0])
    cube([1, 1, 1.45]);
  translate([27, 114, 0])
    cube([1, 1, 1.45]);
  translate([28, 114, 0])
    cube([1, 1, 1.45]);
  translate([29, 114, 0])
    cube([1, 1, 1.45]);
  translate([30, 114, 0])
    cube([1, 1, 1.45]);
  translate([31, 114, 0])
    cube([1, 1, 1.45]);
  translate([32, 114, 0])
    cube([1, 1, 1.41]);
  translate([33, 114, 0])
    cube([1, 1, 1.45]);
  translate([34, 114, 0])
    cube([1, 1, 1.45]);
  translate([35, 114, 0])
    cube([1, 1, 1.41]);
  translate([36, 114, 0])
    cube([1, 1, 1.45]);
  translate([37, 114, 0])
    cube([1, 1, 1.45]);
  translate([38, 114, 0])
    cube([1, 1, 1.41]);
  translate([39, 114, 0])
    cube([1, 1, 1.41]);
  translate([40, 114, 0])
    cube([1, 1, 1.41]);
  translate([41, 114, 0])
    cube([1, 1, 1.76]);
  translate([42, 114, 0])
    cube([1, 1, 1.18]);
  translate([43, 114, 0])
    cube([1, 1, 6.35]);
  translate([44, 114, 0])
    cube([1, 1, 4.39]);
  translate([45, 114, 0])
    cube([1, 1, 3.37]);
  translate([46, 114, 0])
    cube([1, 1, 3.25]);
  translate([47, 114, 0])
    cube([1, 1, 3.37]);
  translate([48, 114, 0])
    cube([1, 1, 4.43]);
  translate([49, 114, 0])
    cube([1, 1, 5.33]);
  translate([50, 114, 0])
    cube([1, 1, 5.73]);
  translate([51, 114, 0])
    cube([1, 1, 6.27]);
  translate([52, 114, 0])
    cube([1, 1, 6.39]);
  translate([53, 114, 0])
    cube([1, 1, 6.31]);
  translate([54, 114, 0])
    cube([1, 1, 6.08]);
  translate([55, 114, 0])
    cube([1, 1, 5.80]);
  translate([56, 114, 0])
    cube([1, 1, 5.80]);
  translate([57, 114, 0])
    cube([1, 1, 7.96]);
  translate([58, 114, 0])
    cube([1, 1, 6.43]);
  translate([59, 114, 0])
    cube([1, 1, 4.51]);
  translate([60, 114, 0])
    cube([1, 1, 4.94]);
  translate([61, 114, 0])
    cube([1, 1, 5.29]);
  translate([62, 114, 0])
    cube([1, 1, 5.57]);
  translate([63, 114, 0])
    cube([1, 1, 5.96]);
  translate([64, 114, 0])
    cube([1, 1, 6.12]);
  translate([65, 114, 0])
    cube([1, 1, 6.16]);
  translate([66, 114, 0])
    cube([1, 1, 6.39]);
  translate([67, 114, 0])
    cube([1, 1, 6.47]);
  translate([68, 114, 0])
    cube([1, 1, 6.43]);
  translate([69, 114, 0])
    cube([1, 1, 6.31]);
  translate([70, 114, 0])
    cube([1, 1, 6.08]);
  translate([71, 114, 0])
    cube([1, 1, 5.88]);
  translate([72, 114, 0])
    cube([1, 1, 5.65]);
  translate([73, 114, 0])
    cube([1, 1, 4.00]);
  translate([74, 114, 0])
    cube([1, 1, 0.75]);
  translate([75, 114, 0])
    cube([1, 1, 1.06]);
  translate([76, 114, 0])
    cube([1, 1, 1.18]);
  translate([77, 114, 0])
    cube([1, 1, 1.37]);
  translate([78, 114, 0])
    cube([1, 1, 1.61]);
  translate([79, 114, 0])
    cube([1, 1, 1.14]);
  translate([80, 114, 0])
    cube([1, 1, 1.18]);
  translate([81, 114, 0])
    cube([1, 1, 1.22]);
  translate([82, 114, 0])
    cube([1, 1, 1.53]);
  translate([83, 114, 0])
    cube([1, 1, 1.33]);
  translate([84, 114, 0])
    cube([1, 1, 2.08]);
  translate([85, 114, 0])
    cube([1, 1, 1.73]);
  translate([86, 114, 0])
    cube([1, 1, 1.25]);
  translate([87, 114, 0])
    cube([1, 1, 1.37]);
  translate([88, 114, 0])
    cube([1, 1, 2.08]);
  translate([89, 114, 0])
    cube([1, 1, 3.80]);
  translate([90, 114, 0])
    cube([1, 1, 4.08]);
  translate([91, 114, 0])
    cube([1, 1, 4.20]);
  translate([92, 114, 0])
    cube([1, 1, 4.20]);
  translate([93, 114, 0])
    cube([1, 1, 4.47]);
  translate([94, 114, 0])
    cube([1, 1, 4.43]);
  translate([95, 114, 0])
    cube([1, 1, 3.41]);
  translate([96, 114, 0])
    cube([1, 1, 1.02]);
  translate([97, 114, 0])
    cube([1, 1, 3.49]);
  translate([98, 114, 0])
    cube([1, 1, 2.67]);
  translate([99, 114, 0])
    cube([1, 1, 3.45]);
  translate([100, 114, 0])
    cube([1, 1, 3.80]);
  translate([101, 114, 0])
    cube([1, 1, 4.35]);
  translate([102, 114, 0])
    cube([1, 1, 4.04]);
  translate([103, 114, 0])
    cube([1, 1, 3.25]);
  translate([104, 114, 0])
    cube([1, 1, 2.63]);
  translate([105, 114, 0])
    cube([1, 1, 2.27]);
  translate([106, 114, 0])
    cube([1, 1, 2.86]);
  translate([107, 114, 0])
    cube([1, 1, 3.61]);
  translate([108, 114, 0])
    cube([1, 1, 3.88]);
  translate([109, 114, 0])
    cube([1, 1, 3.76]);
  translate([110, 114, 0])
    cube([1, 1, 3.33]);
  translate([111, 114, 0])
    cube([1, 1, 2.71]);
  translate([112, 114, 0])
    cube([1, 1, 3.37]);
  translate([113, 114, 0])
    cube([1, 1, 4.04]);
  translate([114, 114, 0])
    cube([1, 1, 3.18]);
  translate([115, 114, 0])
    cube([1, 1, 3.18]);
  translate([116, 114, 0])
    cube([1, 1, 3.33]);
  translate([117, 114, 0])
    cube([1, 1, 3.22]);
  translate([118, 114, 0])
    cube([1, 1, 3.61]);
  translate([119, 114, 0])
    cube([1, 1, 3.45]);
  translate([120, 114, 0])
    cube([1, 1, 4.20]);
  translate([121, 114, 0])
    cube([1, 1, 4.39]);
  translate([122, 114, 0])
    cube([1, 1, 3.92]);
  translate([123, 114, 0])
    cube([1, 1, 4.39]);
  translate([124, 114, 0])
    cube([1, 1, 4.04]);
  translate([125, 114, 0])
    cube([1, 1, 4.16]);
  translate([126, 114, 0])
    cube([1, 1, 4.00]);
  translate([127, 114, 0])
    cube([1, 1, 4.04]);
  translate([128, 114, 0])
    cube([1, 1, 4.08]);
  translate([129, 114, 0])
    cube([1, 1, 4.27]);
  translate([130, 114, 0])
    cube([1, 1, 4.00]);
  translate([131, 114, 0])
    cube([1, 1, 4.24]);
  translate([132, 114, 0])
    cube([1, 1, 4.24]);
  translate([133, 114, 0])
    cube([1, 1, 3.80]);
  translate([134, 114, 0])
    cube([1, 1, 3.88]);
  translate([135, 114, 0])
    cube([1, 1, 4.08]);
  translate([136, 114, 0])
    cube([1, 1, 3.69]);
  translate([137, 114, 0])
    cube([1, 1, 3.80]);
  translate([138, 114, 0])
    cube([1, 1, 3.53]);
  translate([139, 114, 0])
    cube([1, 1, 3.57]);
  translate([140, 114, 0])
    cube([1, 1, 2.98]);
  translate([141, 114, 0])
    cube([1, 1, 3.41]);
  translate([142, 114, 0])
    cube([1, 1, 3.73]);
  translate([143, 114, 0])
    cube([1, 1, 4.08]);
  translate([144, 114, 0])
    cube([1, 1, 3.88]);
  translate([145, 114, 0])
    cube([1, 1, 4.16]);
  translate([146, 114, 0])
    cube([1, 1, 5.73]);
  translate([147, 114, 0])
    cube([1, 1, 1.29]);
  translate([148, 114, 0])
    cube([1, 1, 1.33]);
  translate([149, 114, 0])
    cube([1, 1, 1.37]);
  translate([150, 114, 0])
    cube([1, 1, 1.29]);
  translate([151, 114, 0])
    cube([1, 1, 1.33]);
  translate([152, 114, 0])
    cube([1, 1, 1.33]);
  translate([153, 114, 0])
    cube([1, 1, 1.33]);
  translate([154, 114, 0])
    cube([1, 1, 1.33]);
  translate([155, 114, 0])
    cube([1, 1, 1.33]);
  translate([156, 114, 0])
    cube([1, 1, 1.33]);
  translate([157, 114, 0])
    cube([1, 1, 1.33]);
  translate([158, 114, 0])
    cube([1, 1, 1.33]);
  translate([159, 114, 0])
    cube([1, 1, 1.33]);
  translate([160, 114, 0])
    cube([1, 1, 1.33]);
  translate([161, 114, 0])
    cube([1, 1, 1.33]);
  translate([162, 114, 0])
    cube([1, 1, 1.33]);
  translate([163, 114, 0])
    cube([1, 1, 1.33]);
  translate([164, 114, 0])
    cube([1, 1, 1.33]);
  translate([165, 114, 0])
    cube([1, 1, 1.33]);
  translate([166, 114, 0])
    cube([1, 1, 1.33]);
  translate([167, 114, 0])
    cube([1, 1, 1.33]);
  translate([168, 114, 0])
    cube([1, 1, 1.37]);
  translate([169, 114, 0])
    cube([1, 1, 1.33]);
  translate([170, 114, 0])
    cube([1, 1, 1.33]);
  translate([171, 114, 0])
    cube([1, 1, 1.37]);
  translate([172, 114, 0])
    cube([1, 1, 1.37]);
  translate([173, 114, 0])
    cube([1, 1, 1.37]);
  translate([174, 114, 0])
    cube([1, 1, 1.37]);
  translate([175, 114, 0])
    cube([1, 1, 1.37]);
  translate([176, 114, 0])
    cube([1, 1, 1.37]);
  translate([177, 114, 0])
    cube([1, 1, 1.37]);
  translate([178, 114, 0])
    cube([1, 1, 1.37]);
  translate([179, 114, 0])
    cube([1, 1, 1.37]);
  translate([180, 114, 0])
    cube([1, 1, 1.37]);
  translate([181, 114, 0])
    cube([1, 1, 1.37]);
  translate([182, 114, 0])
    cube([1, 1, 1.37]);
  translate([183, 114, 0])
    cube([1, 1, 1.37]);
  translate([184, 114, 0])
    cube([1, 1, 1.37]);
  translate([185, 114, 0])
    cube([1, 1, 1.37]);
  translate([186, 114, 0])
    cube([1, 1, 1.37]);
  translate([187, 114, 0])
    cube([1, 1, 1.37]);
  translate([188, 114, 0])
    cube([1, 1, 1.37]);
  translate([189, 114, 0])
    cube([1, 1, 1.37]);
  translate([190, 114, 0])
    cube([1, 1, 1.37]);
  translate([191, 114, 0])
    cube([1, 1, 1.37]);
  translate([192, 114, 0])
    cube([1, 1, 1.37]);
  translate([193, 114, 0])
    cube([1, 1, 1.37]);
  translate([194, 114, 0])
    cube([1, 1, 1.37]);
  translate([195, 114, 0])
    cube([1, 1, 1.37]);
  translate([196, 114, 0])
    cube([1, 1, 1.37]);
  translate([197, 114, 0])
    cube([1, 1, 1.37]);
  translate([198, 114, 0])
    cube([1, 1, 1.37]);
  translate([199, 114, 0])
    cube([1, 1, 1.37]);
  translate([200, 114, 0])
    cube([1, 1, 1.37]);
  translate([201, 114, 0])
    cube([1, 1, 1.37]);
  translate([202, 114, 0])
    cube([1, 1, 1.37]);
  translate([203, 114, 0])
    cube([1, 1, 1.37]);
  translate([204, 114, 0])
    cube([1, 1, 1.37]);
  translate([205, 114, 0])
    cube([1, 1, 1.37]);
  translate([206, 114, 0])
    cube([1, 1, 1.37]);
  translate([207, 114, 0])
    cube([1, 1, 1.37]);
  translate([208, 114, 0])
    cube([1, 1, 1.37]);
  translate([209, 114, 0])
    cube([1, 1, 1.37]);
  translate([210, 114, 0])
    cube([1, 1, 1.37]);
  translate([211, 114, 0])
    cube([1, 1, 1.37]);
  translate([212, 114, 0])
    cube([1, 1, 1.37]);
  translate([213, 114, 0])
    cube([1, 1, 1.37]);
  translate([214, 114, 0])
    cube([1, 1, 1.37]);
  translate([215, 114, 0])
    cube([1, 1, 1.37]);
  translate([216, 114, 0])
    cube([1, 1, 1.37]);
  translate([217, 114, 0])
    cube([1, 1, 1.33]);
  translate([218, 114, 0])
    cube([1, 1, 1.41]);
  translate([219, 114, 0])
    cube([1, 1, 1.37]);
  translate([220, 114, 0])
    cube([1, 1, 1.37]);
  translate([221, 114, 0])
    cube([1, 1, 1.37]);
  translate([222, 114, 0])
    cube([1, 1, 1.37]);
  translate([223, 114, 0])
    cube([1, 1, 1.37]);
  translate([224, 114, 0])
    cube([1, 1, 1.33]);
  translate([225, 114, 0])
    cube([1, 1, 1.33]);
  translate([226, 114, 0])
    cube([1, 1, 1.37]);
  translate([227, 114, 0])
    cube([1, 1, 1.33]);
  translate([228, 114, 0])
    cube([1, 1, 1.33]);
  translate([229, 114, 0])
    cube([1, 1, 1.37]);
  translate([230, 114, 0])
    cube([1, 1, 1.37]);
  translate([231, 114, 0])
    cube([1, 1, 1.37]);
  translate([232, 114, 0])
    cube([1, 1, 1.37]);
  translate([233, 114, 0])
    cube([1, 1, 1.33]);
  translate([234, 114, 0])
    cube([1, 1, 1.33]);
  translate([235, 114, 0])
    cube([1, 1, 1.33]);
  translate([236, 114, 0])
    cube([1, 1, 1.33]);
  translate([237, 114, 0])
    cube([1, 1, 1.37]);
  translate([238, 114, 0])
    cube([1, 1, 1.33]);
  translate([239, 114, 0])
    cube([1, 1, 1.33]);
  translate([240, 114, 0])
    cube([1, 1, 1.33]);
  translate([241, 114, 0])
    cube([1, 1, 1.33]);
  translate([242, 114, 0])
    cube([1, 1, 1.33]);
  translate([243, 114, 0])
    cube([1, 1, 1.33]);
  translate([244, 114, 0])
    cube([1, 1, 1.33]);
  translate([245, 114, 0])
    cube([1, 1, 1.33]);
  translate([246, 114, 0])
    cube([1, 1, 1.37]);
  translate([0, 115, 0])
    cube([1, 1, 1.53]);
  translate([1, 115, 0])
    cube([1, 1, 1.49]);
  translate([2, 115, 0])
    cube([1, 1, 1.49]);
  translate([3, 115, 0])
    cube([1, 1, 1.49]);
  translate([4, 115, 0])
    cube([1, 1, 1.49]);
  translate([5, 115, 0])
    cube([1, 1, 1.49]);
  translate([6, 115, 0])
    cube([1, 1, 1.49]);
  translate([7, 115, 0])
    cube([1, 1, 1.49]);
  translate([8, 115, 0])
    cube([1, 1, 1.49]);
  translate([9, 115, 0])
    cube([1, 1, 1.49]);
  translate([10, 115, 0])
    cube([1, 1, 1.49]);
  translate([11, 115, 0])
    cube([1, 1, 1.49]);
  translate([12, 115, 0])
    cube([1, 1, 1.49]);
  translate([13, 115, 0])
    cube([1, 1, 1.49]);
  translate([14, 115, 0])
    cube([1, 1, 1.49]);
  translate([15, 115, 0])
    cube([1, 1, 1.49]);
  translate([16, 115, 0])
    cube([1, 1, 1.53]);
  translate([17, 115, 0])
    cube([1, 1, 1.49]);
  translate([18, 115, 0])
    cube([1, 1, 1.49]);
  translate([19, 115, 0])
    cube([1, 1, 1.49]);
  translate([20, 115, 0])
    cube([1, 1, 1.49]);
  translate([21, 115, 0])
    cube([1, 1, 1.45]);
  translate([22, 115, 0])
    cube([1, 1, 1.45]);
  translate([23, 115, 0])
    cube([1, 1, 1.45]);
  translate([24, 115, 0])
    cube([1, 1, 1.45]);
  translate([25, 115, 0])
    cube([1, 1, 1.45]);
  translate([26, 115, 0])
    cube([1, 1, 1.45]);
  translate([27, 115, 0])
    cube([1, 1, 1.45]);
  translate([28, 115, 0])
    cube([1, 1, 1.45]);
  translate([29, 115, 0])
    cube([1, 1, 1.45]);
  translate([30, 115, 0])
    cube([1, 1, 1.45]);
  translate([31, 115, 0])
    cube([1, 1, 1.45]);
  translate([32, 115, 0])
    cube([1, 1, 1.45]);
  translate([33, 115, 0])
    cube([1, 1, 1.45]);
  translate([34, 115, 0])
    cube([1, 1, 1.45]);
  translate([35, 115, 0])
    cube([1, 1, 1.45]);
  translate([36, 115, 0])
    cube([1, 1, 1.45]);
  translate([37, 115, 0])
    cube([1, 1, 1.45]);
  translate([38, 115, 0])
    cube([1, 1, 1.41]);
  translate([39, 115, 0])
    cube([1, 1, 1.41]);
  translate([40, 115, 0])
    cube([1, 1, 1.41]);
  translate([41, 115, 0])
    cube([1, 1, 0.90]);
  translate([42, 115, 0])
    cube([1, 1, 1.22]);
  translate([43, 115, 0])
    cube([1, 1, 7.22]);
  translate([44, 115, 0])
    cube([1, 1, 5.10]);
  translate([45, 115, 0])
    cube([1, 1, 3.25]);
  translate([46, 115, 0])
    cube([1, 1, 3.37]);
  translate([47, 115, 0])
    cube([1, 1, 3.33]);
  translate([48, 115, 0])
    cube([1, 1, 3.80]);
  translate([49, 115, 0])
    cube([1, 1, 5.06]);
  translate([50, 115, 0])
    cube([1, 1, 5.69]);
  translate([51, 115, 0])
    cube([1, 1, 6.27]);
  translate([52, 115, 0])
    cube([1, 1, 6.27]);
  translate([53, 115, 0])
    cube([1, 1, 6.47]);
  translate([54, 115, 0])
    cube([1, 1, 6.16]);
  translate([55, 115, 0])
    cube([1, 1, 5.92]);
  translate([56, 115, 0])
    cube([1, 1, 6.04]);
  translate([57, 115, 0])
    cube([1, 1, 7.45]);
  translate([58, 115, 0])
    cube([1, 1, 6.47]);
  translate([59, 115, 0])
    cube([1, 1, 4.63]);
  translate([60, 115, 0])
    cube([1, 1, 4.94]);
  translate([61, 115, 0])
    cube([1, 1, 5.29]);
  translate([62, 115, 0])
    cube([1, 1, 5.57]);
  translate([63, 115, 0])
    cube([1, 1, 5.96]);
  translate([64, 115, 0])
    cube([1, 1, 6.16]);
  translate([65, 115, 0])
    cube([1, 1, 6.24]);
  translate([66, 115, 0])
    cube([1, 1, 6.47]);
  translate([67, 115, 0])
    cube([1, 1, 6.51]);
  translate([68, 115, 0])
    cube([1, 1, 6.51]);
  translate([69, 115, 0])
    cube([1, 1, 6.24]);
  translate([70, 115, 0])
    cube([1, 1, 6.04]);
  translate([71, 115, 0])
    cube([1, 1, 5.84]);
  translate([72, 115, 0])
    cube([1, 1, 5.57]);
  translate([73, 115, 0])
    cube([1, 1, 4.75]);
  translate([74, 115, 0])
    cube([1, 1, 1.33]);
  translate([75, 115, 0])
    cube([1, 1, 0.98]);
  translate([76, 115, 0])
    cube([1, 1, 1.18]);
  translate([77, 115, 0])
    cube([1, 1, 1.37]);
  translate([78, 115, 0])
    cube([1, 1, 1.37]);
  translate([79, 115, 0])
    cube([1, 1, 1.33]);
  translate([80, 115, 0])
    cube([1, 1, 2.20]);
  translate([81, 115, 0])
    cube([1, 1, 1.18]);
  translate([82, 115, 0])
    cube([1, 1, 1.10]);
  translate([83, 115, 0])
    cube([1, 1, 2.00]);
  translate([84, 115, 0])
    cube([1, 1, 2.08]);
  translate([85, 115, 0])
    cube([1, 1, 1.88]);
  translate([86, 115, 0])
    cube([1, 1, 1.14]);
  translate([87, 115, 0])
    cube([1, 1, 2.20]);
  translate([88, 115, 0])
    cube([1, 1, 3.45]);
  translate([89, 115, 0])
    cube([1, 1, 3.73]);
  translate([90, 115, 0])
    cube([1, 1, 4.00]);
  translate([91, 115, 0])
    cube([1, 1, 4.04]);
  translate([92, 115, 0])
    cube([1, 1, 4.31]);
  translate([93, 115, 0])
    cube([1, 1, 4.51]);
  translate([94, 115, 0])
    cube([1, 1, 4.31]);
  translate([95, 115, 0])
    cube([1, 1, 4.35]);
  translate([96, 115, 0])
    cube([1, 1, 2.71]);
  translate([97, 115, 0])
    cube([1, 1, 1.69]);
  translate([98, 115, 0])
    cube([1, 1, 3.41]);
  translate([99, 115, 0])
    cube([1, 1, 4.00]);
  translate([100, 115, 0])
    cube([1, 1, 4.67]);
  translate([101, 115, 0])
    cube([1, 1, 3.41]);
  translate([102, 115, 0])
    cube([1, 1, 2.63]);
  translate([103, 115, 0])
    cube([1, 1, 2.16]);
  translate([104, 115, 0])
    cube([1, 1, 2.63]);
  translate([105, 115, 0])
    cube([1, 1, 3.41]);
  translate([106, 115, 0])
    cube([1, 1, 4.39]);
  translate([107, 115, 0])
    cube([1, 1, 3.61]);
  translate([108, 115, 0])
    cube([1, 1, 4.16]);
  translate([109, 115, 0])
    cube([1, 1, 3.25]);
  translate([110, 115, 0])
    cube([1, 1, 2.75]);
  translate([111, 115, 0])
    cube([1, 1, 2.35]);
  translate([112, 115, 0])
    cube([1, 1, 3.29]);
  translate([113, 115, 0])
    cube([1, 1, 2.90]);
  translate([114, 115, 0])
    cube([1, 1, 3.45]);
  translate([115, 115, 0])
    cube([1, 1, 2.75]);
  translate([116, 115, 0])
    cube([1, 1, 2.98]);
  translate([117, 115, 0])
    cube([1, 1, 4.04]);
  translate([118, 115, 0])
    cube([1, 1, 3.80]);
  translate([119, 115, 0])
    cube([1, 1, 3.84]);
  translate([120, 115, 0])
    cube([1, 1, 3.96]);
  translate([121, 115, 0])
    cube([1, 1, 3.73]);
  translate([122, 115, 0])
    cube([1, 1, 4.16]);
  translate([123, 115, 0])
    cube([1, 1, 4.00]);
  translate([124, 115, 0])
    cube([1, 1, 4.47]);
  translate([125, 115, 0])
    cube([1, 1, 4.04]);
  translate([126, 115, 0])
    cube([1, 1, 3.76]);
  translate([127, 115, 0])
    cube([1, 1, 4.12]);
  translate([128, 115, 0])
    cube([1, 1, 3.49]);
  translate([129, 115, 0])
    cube([1, 1, 3.84]);
  translate([130, 115, 0])
    cube([1, 1, 4.12]);
  translate([131, 115, 0])
    cube([1, 1, 3.80]);
  translate([132, 115, 0])
    cube([1, 1, 3.84]);
  translate([133, 115, 0])
    cube([1, 1, 3.88]);
  translate([134, 115, 0])
    cube([1, 1, 4.27]);
  translate([135, 115, 0])
    cube([1, 1, 3.53]);
  translate([136, 115, 0])
    cube([1, 1, 3.29]);
  translate([137, 115, 0])
    cube([1, 1, 3.73]);
  translate([138, 115, 0])
    cube([1, 1, 3.88]);
  translate([139, 115, 0])
    cube([1, 1, 3.76]);
  translate([140, 115, 0])
    cube([1, 1, 3.45]);
  translate([141, 115, 0])
    cube([1, 1, 3.53]);
  translate([142, 115, 0])
    cube([1, 1, 3.88]);
  translate([143, 115, 0])
    cube([1, 1, 3.61]);
  translate([144, 115, 0])
    cube([1, 1, 4.71]);
  translate([145, 115, 0])
    cube([1, 1, 4.71]);
  translate([146, 115, 0])
    cube([1, 1, 4.63]);
  translate([147, 115, 0])
    cube([1, 1, 0.86]);
  translate([148, 115, 0])
    cube([1, 1, 1.33]);
  translate([149, 115, 0])
    cube([1, 1, 1.37]);
  translate([150, 115, 0])
    cube([1, 1, 1.33]);
  translate([151, 115, 0])
    cube([1, 1, 1.25]);
  translate([152, 115, 0])
    cube([1, 1, 1.33]);
  translate([153, 115, 0])
    cube([1, 1, 1.33]);
  translate([154, 115, 0])
    cube([1, 1, 1.33]);
  translate([155, 115, 0])
    cube([1, 1, 1.33]);
  translate([156, 115, 0])
    cube([1, 1, 1.33]);
  translate([157, 115, 0])
    cube([1, 1, 1.33]);
  translate([158, 115, 0])
    cube([1, 1, 1.33]);
  translate([159, 115, 0])
    cube([1, 1, 1.33]);
  translate([160, 115, 0])
    cube([1, 1, 1.33]);
  translate([161, 115, 0])
    cube([1, 1, 1.33]);
  translate([162, 115, 0])
    cube([1, 1, 1.33]);
  translate([163, 115, 0])
    cube([1, 1, 1.33]);
  translate([164, 115, 0])
    cube([1, 1, 1.33]);
  translate([165, 115, 0])
    cube([1, 1, 1.33]);
  translate([166, 115, 0])
    cube([1, 1, 1.33]);
  translate([167, 115, 0])
    cube([1, 1, 1.33]);
  translate([168, 115, 0])
    cube([1, 1, 1.37]);
  translate([169, 115, 0])
    cube([1, 1, 1.33]);
  translate([170, 115, 0])
    cube([1, 1, 1.33]);
  translate([171, 115, 0])
    cube([1, 1, 1.37]);
  translate([172, 115, 0])
    cube([1, 1, 1.37]);
  translate([173, 115, 0])
    cube([1, 1, 1.37]);
  translate([174, 115, 0])
    cube([1, 1, 1.37]);
  translate([175, 115, 0])
    cube([1, 1, 1.37]);
  translate([176, 115, 0])
    cube([1, 1, 1.37]);
  translate([177, 115, 0])
    cube([1, 1, 1.37]);
  translate([178, 115, 0])
    cube([1, 1, 1.37]);
  translate([179, 115, 0])
    cube([1, 1, 1.37]);
  translate([180, 115, 0])
    cube([1, 1, 1.37]);
  translate([181, 115, 0])
    cube([1, 1, 1.37]);
  translate([182, 115, 0])
    cube([1, 1, 1.37]);
  translate([183, 115, 0])
    cube([1, 1, 1.37]);
  translate([184, 115, 0])
    cube([1, 1, 1.37]);
  translate([185, 115, 0])
    cube([1, 1, 1.37]);
  translate([186, 115, 0])
    cube([1, 1, 1.37]);
  translate([187, 115, 0])
    cube([1, 1, 1.37]);
  translate([188, 115, 0])
    cube([1, 1, 1.37]);
  translate([189, 115, 0])
    cube([1, 1, 1.37]);
  translate([190, 115, 0])
    cube([1, 1, 1.37]);
  translate([191, 115, 0])
    cube([1, 1, 1.37]);
  translate([192, 115, 0])
    cube([1, 1, 1.37]);
  translate([193, 115, 0])
    cube([1, 1, 1.37]);
  translate([194, 115, 0])
    cube([1, 1, 1.37]);
  translate([195, 115, 0])
    cube([1, 1, 1.37]);
  translate([196, 115, 0])
    cube([1, 1, 1.37]);
  translate([197, 115, 0])
    cube([1, 1, 1.37]);
  translate([198, 115, 0])
    cube([1, 1, 1.37]);
  translate([199, 115, 0])
    cube([1, 1, 1.37]);
  translate([200, 115, 0])
    cube([1, 1, 1.37]);
  translate([201, 115, 0])
    cube([1, 1, 1.37]);
  translate([202, 115, 0])
    cube([1, 1, 1.37]);
  translate([203, 115, 0])
    cube([1, 1, 1.37]);
  translate([204, 115, 0])
    cube([1, 1, 1.37]);
  translate([205, 115, 0])
    cube([1, 1, 1.37]);
  translate([206, 115, 0])
    cube([1, 1, 1.37]);
  translate([207, 115, 0])
    cube([1, 1, 1.37]);
  translate([208, 115, 0])
    cube([1, 1, 1.37]);
  translate([209, 115, 0])
    cube([1, 1, 1.37]);
  translate([210, 115, 0])
    cube([1, 1, 1.37]);
  translate([211, 115, 0])
    cube([1, 1, 1.37]);
  translate([212, 115, 0])
    cube([1, 1, 1.37]);
  translate([213, 115, 0])
    cube([1, 1, 1.37]);
  translate([214, 115, 0])
    cube([1, 1, 1.37]);
  translate([215, 115, 0])
    cube([1, 1, 1.37]);
  translate([216, 115, 0])
    cube([1, 1, 1.37]);
  translate([217, 115, 0])
    cube([1, 1, 1.33]);
  translate([218, 115, 0])
    cube([1, 1, 1.41]);
  translate([219, 115, 0])
    cube([1, 1, 1.37]);
  translate([220, 115, 0])
    cube([1, 1, 1.37]);
  translate([221, 115, 0])
    cube([1, 1, 1.37]);
  translate([222, 115, 0])
    cube([1, 1, 1.37]);
  translate([223, 115, 0])
    cube([1, 1, 1.37]);
  translate([224, 115, 0])
    cube([1, 1, 1.37]);
  translate([225, 115, 0])
    cube([1, 1, 1.33]);
  translate([226, 115, 0])
    cube([1, 1, 1.37]);
  translate([227, 115, 0])
    cube([1, 1, 1.37]);
  translate([228, 115, 0])
    cube([1, 1, 1.33]);
  translate([229, 115, 0])
    cube([1, 1, 1.37]);
  translate([230, 115, 0])
    cube([1, 1, 1.37]);
  translate([231, 115, 0])
    cube([1, 1, 1.37]);
  translate([232, 115, 0])
    cube([1, 1, 1.37]);
  translate([233, 115, 0])
    cube([1, 1, 1.37]);
  translate([234, 115, 0])
    cube([1, 1, 1.37]);
  translate([235, 115, 0])
    cube([1, 1, 1.33]);
  translate([236, 115, 0])
    cube([1, 1, 1.33]);
  translate([237, 115, 0])
    cube([1, 1, 1.37]);
  translate([238, 115, 0])
    cube([1, 1, 1.37]);
  translate([239, 115, 0])
    cube([1, 1, 1.37]);
  translate([240, 115, 0])
    cube([1, 1, 1.33]);
  translate([241, 115, 0])
    cube([1, 1, 1.33]);
  translate([242, 115, 0])
    cube([1, 1, 1.33]);
  translate([243, 115, 0])
    cube([1, 1, 1.33]);
  translate([244, 115, 0])
    cube([1, 1, 1.33]);
  translate([245, 115, 0])
    cube([1, 1, 1.33]);
  translate([246, 115, 0])
    cube([1, 1, 1.37]);
  translate([0, 116, 0])
    cube([1, 1, 1.53]);
  translate([1, 116, 0])
    cube([1, 1, 1.53]);
  translate([2, 116, 0])
    cube([1, 1, 1.53]);
  translate([3, 116, 0])
    cube([1, 1, 1.53]);
  translate([4, 116, 0])
    cube([1, 1, 1.53]);
  translate([5, 116, 0])
    cube([1, 1, 1.53]);
  translate([6, 116, 0])
    cube([1, 1, 1.49]);
  translate([7, 116, 0])
    cube([1, 1, 1.49]);
  translate([8, 116, 0])
    cube([1, 1, 1.49]);
  translate([9, 116, 0])
    cube([1, 1, 1.45]);
  translate([10, 116, 0])
    cube([1, 1, 1.45]);
  translate([11, 116, 0])
    cube([1, 1, 1.45]);
  translate([12, 116, 0])
    cube([1, 1, 1.49]);
  translate([13, 116, 0])
    cube([1, 1, 1.49]);
  translate([14, 116, 0])
    cube([1, 1, 1.49]);
  translate([15, 116, 0])
    cube([1, 1, 1.49]);
  translate([16, 116, 0])
    cube([1, 1, 1.49]);
  translate([17, 116, 0])
    cube([1, 1, 1.49]);
  translate([18, 116, 0])
    cube([1, 1, 1.49]);
  translate([19, 116, 0])
    cube([1, 1, 1.49]);
  translate([20, 116, 0])
    cube([1, 1, 1.45]);
  translate([21, 116, 0])
    cube([1, 1, 1.45]);
  translate([22, 116, 0])
    cube([1, 1, 1.49]);
  translate([23, 116, 0])
    cube([1, 1, 1.49]);
  translate([24, 116, 0])
    cube([1, 1, 1.45]);
  translate([25, 116, 0])
    cube([1, 1, 1.45]);
  translate([26, 116, 0])
    cube([1, 1, 1.45]);
  translate([27, 116, 0])
    cube([1, 1, 1.45]);
  translate([28, 116, 0])
    cube([1, 1, 1.45]);
  translate([29, 116, 0])
    cube([1, 1, 1.45]);
  translate([30, 116, 0])
    cube([1, 1, 1.45]);
  translate([31, 116, 0])
    cube([1, 1, 1.45]);
  translate([32, 116, 0])
    cube([1, 1, 1.45]);
  translate([33, 116, 0])
    cube([1, 1, 1.45]);
  translate([34, 116, 0])
    cube([1, 1, 1.45]);
  translate([35, 116, 0])
    cube([1, 1, 1.45]);
  translate([36, 116, 0])
    cube([1, 1, 1.45]);
  translate([37, 116, 0])
    cube([1, 1, 1.45]);
  translate([38, 116, 0])
    cube([1, 1, 1.41]);
  translate([39, 116, 0])
    cube([1, 1, 1.45]);
  translate([40, 116, 0])
    cube([1, 1, 1.41]);
  translate([41, 116, 0])
    cube([1, 1, 1.45]);
  translate([42, 116, 0])
    cube([1, 1, 1.41]);
  translate([43, 116, 0])
    cube([1, 1, 1.22]);
  translate([44, 116, 0])
    cube([1, 1, 6.27]);
  translate([45, 116, 0])
    cube([1, 1, 3.69]);
  translate([46, 116, 0])
    cube([1, 1, 3.33]);
  translate([47, 116, 0])
    cube([1, 1, 3.33]);
  translate([48, 116, 0])
    cube([1, 1, 3.57]);
  translate([49, 116, 0])
    cube([1, 1, 4.63]);
  translate([50, 116, 0])
    cube([1, 1, 5.61]);
  translate([51, 116, 0])
    cube([1, 1, 6.08]);
  translate([52, 116, 0])
    cube([1, 1, 6.39]);
  translate([53, 116, 0])
    cube([1, 1, 6.51]);
  translate([54, 116, 0])
    cube([1, 1, 6.27]);
  translate([55, 116, 0])
    cube([1, 1, 6.08]);
  translate([56, 116, 0])
    cube([1, 1, 5.76]);
  translate([57, 116, 0])
    cube([1, 1, 5.73]);
  translate([58, 116, 0])
    cube([1, 1, 7.14]);
  translate([59, 116, 0])
    cube([1, 1, 4.51]);
  translate([60, 116, 0])
    cube([1, 1, 4.86]);
  translate([61, 116, 0])
    cube([1, 1, 5.33]);
  translate([62, 116, 0])
    cube([1, 1, 5.53]);
  translate([63, 116, 0])
    cube([1, 1, 5.88]);
  translate([64, 116, 0])
    cube([1, 1, 6.00]);
  translate([65, 116, 0])
    cube([1, 1, 6.16]);
  translate([66, 116, 0])
    cube([1, 1, 6.24]);
  translate([67, 116, 0])
    cube([1, 1, 6.12]);
  translate([68, 116, 0])
    cube([1, 1, 6.16]);
  translate([69, 116, 0])
    cube([1, 1, 5.96]);
  translate([70, 116, 0])
    cube([1, 1, 5.84]);
  translate([71, 116, 0])
    cube([1, 1, 5.76]);
  translate([72, 116, 0])
    cube([1, 1, 5.61]);
  translate([73, 116, 0])
    cube([1, 1, 5.06]);
  translate([74, 116, 0])
    cube([1, 1, 2.35]);
  translate([75, 116, 0])
    cube([1, 1, 0.90]);
  translate([76, 116, 0])
    cube([1, 1, 1.06]);
  translate([77, 116, 0])
    cube([1, 1, 1.33]);
  translate([78, 116, 0])
    cube([1, 1, 1.45]);
  translate([79, 116, 0])
    cube([1, 1, 1.41]);
  translate([80, 116, 0])
    cube([1, 1, 3.73]);
  translate([81, 116, 0])
    cube([1, 1, 2.39]);
  translate([82, 116, 0])
    cube([1, 1, 0.94]);
  translate([83, 116, 0])
    cube([1, 1, 1.25]);
  translate([84, 116, 0])
    cube([1, 1, 2.16]);
  translate([85, 116, 0])
    cube([1, 1, 1.88]);
  translate([86, 116, 0])
    cube([1, 1, 1.29]);
  translate([87, 116, 0])
    cube([1, 1, 1.96]);
  translate([88, 116, 0])
    cube([1, 1, 3.53]);
  translate([89, 116, 0])
    cube([1, 1, 3.69]);
  translate([90, 116, 0])
    cube([1, 1, 3.92]);
  translate([91, 116, 0])
    cube([1, 1, 4.04]);
  translate([92, 116, 0])
    cube([1, 1, 4.24]);
  translate([93, 116, 0])
    cube([1, 1, 4.35]);
  translate([94, 116, 0])
    cube([1, 1, 4.31]);
  translate([95, 116, 0])
    cube([1, 1, 4.47]);
  translate([96, 116, 0])
    cube([1, 1, 4.04]);
  translate([97, 116, 0])
    cube([1, 1, 0.86]);
  translate([98, 116, 0])
    cube([1, 1, 3.65]);
  translate([99, 116, 0])
    cube([1, 1, 4.24]);
  translate([100, 116, 0])
    cube([1, 1, 3.14]);
  translate([101, 116, 0])
    cube([1, 1, 2.78]);
  translate([102, 116, 0])
    cube([1, 1, 2.08]);
  translate([103, 116, 0])
    cube([1, 1, 2.35]);
  translate([104, 116, 0])
    cube([1, 1, 3.45]);
  translate([105, 116, 0])
    cube([1, 1, 4.24]);
  translate([106, 116, 0])
    cube([1, 1, 3.73]);
  translate([107, 116, 0])
    cube([1, 1, 4.08]);
  translate([108, 116, 0])
    cube([1, 1, 3.18]);
  translate([109, 116, 0])
    cube([1, 1, 2.71]);
  translate([110, 116, 0])
    cube([1, 1, 2.71]);
  translate([111, 116, 0])
    cube([1, 1, 2.82]);
  translate([112, 116, 0])
    cube([1, 1, 3.69]);
  translate([113, 116, 0])
    cube([1, 1, 3.69]);
  translate([114, 116, 0])
    cube([1, 1, 3.61]);
  translate([115, 116, 0])
    cube([1, 1, 3.49]);
  translate([116, 116, 0])
    cube([1, 1, 3.29]);
  translate([117, 116, 0])
    cube([1, 1, 3.45]);
  translate([118, 116, 0])
    cube([1, 1, 4.31]);
  translate([119, 116, 0])
    cube([1, 1, 4.47]);
  translate([120, 116, 0])
    cube([1, 1, 4.55]);
  translate([121, 116, 0])
    cube([1, 1, 3.73]);
  translate([122, 116, 0])
    cube([1, 1, 4.31]);
  translate([123, 116, 0])
    cube([1, 1, 4.31]);
  translate([124, 116, 0])
    cube([1, 1, 4.63]);
  translate([125, 116, 0])
    cube([1, 1, 4.43]);
  translate([126, 116, 0])
    cube([1, 1, 3.80]);
  translate([127, 116, 0])
    cube([1, 1, 3.84]);
  translate([128, 116, 0])
    cube([1, 1, 3.96]);
  translate([129, 116, 0])
    cube([1, 1, 3.73]);
  translate([130, 116, 0])
    cube([1, 1, 3.96]);
  translate([131, 116, 0])
    cube([1, 1, 3.73]);
  translate([132, 116, 0])
    cube([1, 1, 3.92]);
  translate([133, 116, 0])
    cube([1, 1, 3.69]);
  translate([134, 116, 0])
    cube([1, 1, 3.92]);
  translate([135, 116, 0])
    cube([1, 1, 3.92]);
  translate([136, 116, 0])
    cube([1, 1, 3.76]);
  translate([137, 116, 0])
    cube([1, 1, 3.37]);
  translate([138, 116, 0])
    cube([1, 1, 3.53]);
  translate([139, 116, 0])
    cube([1, 1, 3.33]);
  translate([140, 116, 0])
    cube([1, 1, 3.37]);
  translate([141, 116, 0])
    cube([1, 1, 3.57]);
  translate([142, 116, 0])
    cube([1, 1, 3.29]);
  translate([143, 116, 0])
    cube([1, 1, 4.12]);
  translate([144, 116, 0])
    cube([1, 1, 3.65]);
  translate([145, 116, 0])
    cube([1, 1, 4.00]);
  translate([146, 116, 0])
    cube([1, 1, 3.76]);
  translate([147, 116, 0])
    cube([1, 1, 1.29]);
  translate([148, 116, 0])
    cube([1, 1, 1.33]);
  translate([149, 116, 0])
    cube([1, 1, 1.33]);
  translate([150, 116, 0])
    cube([1, 1, 1.33]);
  translate([151, 116, 0])
    cube([1, 1, 1.33]);
  translate([152, 116, 0])
    cube([1, 1, 1.33]);
  translate([153, 116, 0])
    cube([1, 1, 1.33]);
  translate([154, 116, 0])
    cube([1, 1, 1.33]);
  translate([155, 116, 0])
    cube([1, 1, 1.33]);
  translate([156, 116, 0])
    cube([1, 1, 1.33]);
  translate([157, 116, 0])
    cube([1, 1, 1.33]);
  translate([158, 116, 0])
    cube([1, 1, 1.33]);
  translate([159, 116, 0])
    cube([1, 1, 1.33]);
  translate([160, 116, 0])
    cube([1, 1, 1.33]);
  translate([161, 116, 0])
    cube([1, 1, 1.33]);
  translate([162, 116, 0])
    cube([1, 1, 1.33]);
  translate([163, 116, 0])
    cube([1, 1, 1.33]);
  translate([164, 116, 0])
    cube([1, 1, 1.33]);
  translate([165, 116, 0])
    cube([1, 1, 1.33]);
  translate([166, 116, 0])
    cube([1, 1, 1.37]);
  translate([167, 116, 0])
    cube([1, 1, 1.37]);
  translate([168, 116, 0])
    cube([1, 1, 1.37]);
  translate([169, 116, 0])
    cube([1, 1, 1.37]);
  translate([170, 116, 0])
    cube([1, 1, 1.37]);
  translate([171, 116, 0])
    cube([1, 1, 1.37]);
  translate([172, 116, 0])
    cube([1, 1, 1.37]);
  translate([173, 116, 0])
    cube([1, 1, 1.37]);
  translate([174, 116, 0])
    cube([1, 1, 1.37]);
  translate([175, 116, 0])
    cube([1, 1, 1.37]);
  translate([176, 116, 0])
    cube([1, 1, 1.37]);
  translate([177, 116, 0])
    cube([1, 1, 1.37]);
  translate([178, 116, 0])
    cube([1, 1, 1.37]);
  translate([179, 116, 0])
    cube([1, 1, 1.37]);
  translate([180, 116, 0])
    cube([1, 1, 1.45]);
  translate([181, 116, 0])
    cube([1, 1, 1.37]);
  translate([182, 116, 0])
    cube([1, 1, 1.41]);
  translate([183, 116, 0])
    cube([1, 1, 1.33]);
  translate([184, 116, 0])
    cube([1, 1, 1.37]);
  translate([185, 116, 0])
    cube([1, 1, 1.37]);
  translate([186, 116, 0])
    cube([1, 1, 1.37]);
  translate([187, 116, 0])
    cube([1, 1, 1.37]);
  translate([188, 116, 0])
    cube([1, 1, 1.41]);
  translate([189, 116, 0])
    cube([1, 1, 1.41]);
  translate([190, 116, 0])
    cube([1, 1, 1.41]);
  translate([191, 116, 0])
    cube([1, 1, 1.37]);
  translate([192, 116, 0])
    cube([1, 1, 1.37]);
  translate([193, 116, 0])
    cube([1, 1, 1.33]);
  translate([194, 116, 0])
    cube([1, 1, 1.41]);
  translate([195, 116, 0])
    cube([1, 1, 1.37]);
  translate([196, 116, 0])
    cube([1, 1, 1.33]);
  translate([197, 116, 0])
    cube([1, 1, 1.33]);
  translate([198, 116, 0])
    cube([1, 1, 1.37]);
  translate([199, 116, 0])
    cube([1, 1, 1.41]);
  translate([200, 116, 0])
    cube([1, 1, 1.41]);
  translate([201, 116, 0])
    cube([1, 1, 1.37]);
  translate([202, 116, 0])
    cube([1, 1, 1.37]);
  translate([203, 116, 0])
    cube([1, 1, 1.37]);
  translate([204, 116, 0])
    cube([1, 1, 1.33]);
  translate([205, 116, 0])
    cube([1, 1, 1.33]);
  translate([206, 116, 0])
    cube([1, 1, 1.37]);
  translate([207, 116, 0])
    cube([1, 1, 1.37]);
  translate([208, 116, 0])
    cube([1, 1, 1.37]);
  translate([209, 116, 0])
    cube([1, 1, 1.37]);
  translate([210, 116, 0])
    cube([1, 1, 1.37]);
  translate([211, 116, 0])
    cube([1, 1, 1.37]);
  translate([212, 116, 0])
    cube([1, 1, 1.37]);
  translate([213, 116, 0])
    cube([1, 1, 1.37]);
  translate([214, 116, 0])
    cube([1, 1, 1.37]);
  translate([215, 116, 0])
    cube([1, 1, 1.37]);
  translate([216, 116, 0])
    cube([1, 1, 1.37]);
  translate([217, 116, 0])
    cube([1, 1, 1.37]);
  translate([218, 116, 0])
    cube([1, 1, 1.37]);
  translate([219, 116, 0])
    cube([1, 1, 1.37]);
  translate([220, 116, 0])
    cube([1, 1, 1.37]);
  translate([221, 116, 0])
    cube([1, 1, 1.37]);
  translate([222, 116, 0])
    cube([1, 1, 1.37]);
  translate([223, 116, 0])
    cube([1, 1, 1.37]);
  translate([224, 116, 0])
    cube([1, 1, 1.37]);
  translate([225, 116, 0])
    cube([1, 1, 1.37]);
  translate([226, 116, 0])
    cube([1, 1, 1.37]);
  translate([227, 116, 0])
    cube([1, 1, 1.37]);
  translate([228, 116, 0])
    cube([1, 1, 1.37]);
  translate([229, 116, 0])
    cube([1, 1, 1.37]);
  translate([230, 116, 0])
    cube([1, 1, 1.37]);
  translate([231, 116, 0])
    cube([1, 1, 1.37]);
  translate([232, 116, 0])
    cube([1, 1, 1.37]);
  translate([233, 116, 0])
    cube([1, 1, 1.37]);
  translate([234, 116, 0])
    cube([1, 1, 1.37]);
  translate([235, 116, 0])
    cube([1, 1, 1.37]);
  translate([236, 116, 0])
    cube([1, 1, 1.37]);
  translate([237, 116, 0])
    cube([1, 1, 1.37]);
  translate([238, 116, 0])
    cube([1, 1, 1.37]);
  translate([239, 116, 0])
    cube([1, 1, 1.37]);
  translate([240, 116, 0])
    cube([1, 1, 1.37]);
  translate([241, 116, 0])
    cube([1, 1, 1.41]);
  translate([242, 116, 0])
    cube([1, 1, 1.41]);
  translate([243, 116, 0])
    cube([1, 1, 1.37]);
  translate([244, 116, 0])
    cube([1, 1, 1.37]);
  translate([245, 116, 0])
    cube([1, 1, 1.37]);
  translate([246, 116, 0])
    cube([1, 1, 1.33]);
  translate([0, 117, 0])
    cube([1, 1, 1.53]);
  translate([1, 117, 0])
    cube([1, 1, 1.53]);
  translate([2, 117, 0])
    cube([1, 1, 1.53]);
  translate([3, 117, 0])
    cube([1, 1, 1.53]);
  translate([4, 117, 0])
    cube([1, 1, 1.53]);
  translate([5, 117, 0])
    cube([1, 1, 1.53]);
  translate([6, 117, 0])
    cube([1, 1, 1.53]);
  translate([7, 117, 0])
    cube([1, 1, 1.53]);
  translate([8, 117, 0])
    cube([1, 1, 1.53]);
  translate([9, 117, 0])
    cube([1, 1, 1.53]);
  translate([10, 117, 0])
    cube([1, 1, 1.53]);
  translate([11, 117, 0])
    cube([1, 1, 1.53]);
  translate([12, 117, 0])
    cube([1, 1, 1.49]);
  translate([13, 117, 0])
    cube([1, 1, 1.49]);
  translate([14, 117, 0])
    cube([1, 1, 1.53]);
  translate([15, 117, 0])
    cube([1, 1, 1.53]);
  translate([16, 117, 0])
    cube([1, 1, 1.49]);
  translate([17, 117, 0])
    cube([1, 1, 1.49]);
  translate([18, 117, 0])
    cube([1, 1, 1.49]);
  translate([19, 117, 0])
    cube([1, 1, 1.49]);
  translate([20, 117, 0])
    cube([1, 1, 1.49]);
  translate([21, 117, 0])
    cube([1, 1, 1.49]);
  translate([22, 117, 0])
    cube([1, 1, 1.45]);
  translate([23, 117, 0])
    cube([1, 1, 1.45]);
  translate([24, 117, 0])
    cube([1, 1, 1.45]);
  translate([25, 117, 0])
    cube([1, 1, 1.49]);
  translate([26, 117, 0])
    cube([1, 1, 1.49]);
  translate([27, 117, 0])
    cube([1, 1, 1.45]);
  translate([28, 117, 0])
    cube([1, 1, 1.45]);
  translate([29, 117, 0])
    cube([1, 1, 1.45]);
  translate([30, 117, 0])
    cube([1, 1, 1.45]);
  translate([31, 117, 0])
    cube([1, 1, 1.45]);
  translate([32, 117, 0])
    cube([1, 1, 1.45]);
  translate([33, 117, 0])
    cube([1, 1, 1.45]);
  translate([34, 117, 0])
    cube([1, 1, 1.45]);
  translate([35, 117, 0])
    cube([1, 1, 1.45]);
  translate([36, 117, 0])
    cube([1, 1, 1.45]);
  translate([37, 117, 0])
    cube([1, 1, 1.45]);
  translate([38, 117, 0])
    cube([1, 1, 1.45]);
  translate([39, 117, 0])
    cube([1, 1, 1.45]);
  translate([40, 117, 0])
    cube([1, 1, 1.45]);
  translate([41, 117, 0])
    cube([1, 1, 1.41]);
  translate([42, 117, 0])
    cube([1, 1, 1.45]);
  translate([43, 117, 0])
    cube([1, 1, 1.65]);
  translate([44, 117, 0])
    cube([1, 1, 6.90]);
  translate([45, 117, 0])
    cube([1, 1, 4.59]);
  translate([46, 117, 0])
    cube([1, 1, 3.29]);
  translate([47, 117, 0])
    cube([1, 1, 3.49]);
  translate([48, 117, 0])
    cube([1, 1, 3.33]);
  translate([49, 117, 0])
    cube([1, 1, 4.31]);
  translate([50, 117, 0])
    cube([1, 1, 5.14]);
  translate([51, 117, 0])
    cube([1, 1, 5.88]);
  translate([52, 117, 0])
    cube([1, 1, 6.39]);
  translate([53, 117, 0])
    cube([1, 1, 6.47]);
  translate([54, 117, 0])
    cube([1, 1, 6.35]);
  translate([55, 117, 0])
    cube([1, 1, 6.12]);
  translate([56, 117, 0])
    cube([1, 1, 5.88]);
  translate([57, 117, 0])
    cube([1, 1, 5.49]);
  translate([58, 117, 0])
    cube([1, 1, 6.98]);
  translate([59, 117, 0])
    cube([1, 1, 4.67]);
  translate([60, 117, 0])
    cube([1, 1, 4.78]);
  translate([61, 117, 0])
    cube([1, 1, 5.29]);
  translate([62, 117, 0])
    cube([1, 1, 5.53]);
  translate([63, 117, 0])
    cube([1, 1, 5.73]);
  translate([64, 117, 0])
    cube([1, 1, 5.73]);
  translate([65, 117, 0])
    cube([1, 1, 5.76]);
  translate([66, 117, 0])
    cube([1, 1, 5.88]);
  translate([67, 117, 0])
    cube([1, 1, 5.88]);
  translate([68, 117, 0])
    cube([1, 1, 5.80]);
  translate([69, 117, 0])
    cube([1, 1, 5.84]);
  translate([70, 117, 0])
    cube([1, 1, 5.88]);
  translate([71, 117, 0])
    cube([1, 1, 5.76]);
  translate([72, 117, 0])
    cube([1, 1, 5.53]);
  translate([73, 117, 0])
    cube([1, 1, 5.33]);
  translate([74, 117, 0])
    cube([1, 1, 3.80]);
  translate([75, 117, 0])
    cube([1, 1, 0.86]);
  translate([76, 117, 0])
    cube([1, 1, 1.10]);
  translate([77, 117, 0])
    cube([1, 1, 1.37]);
  translate([78, 117, 0])
    cube([1, 1, 1.33]);
  translate([79, 117, 0])
    cube([1, 1, 1.41]);
  translate([80, 117, 0])
    cube([1, 1, 3.25]);
  translate([81, 117, 0])
    cube([1, 1, 2.94]);
  translate([82, 117, 0])
    cube([1, 1, 0.94]);
  translate([83, 117, 0])
    cube([1, 1, 1.53]);
  translate([84, 117, 0])
    cube([1, 1, 1.84]);
  translate([85, 117, 0])
    cube([1, 1, 1.25]);
  translate([86, 117, 0])
    cube([1, 1, 1.33]);
  translate([87, 117, 0])
    cube([1, 1, 2.94]);
  translate([88, 117, 0])
    cube([1, 1, 3.18]);
  translate([89, 117, 0])
    cube([1, 1, 3.37]);
  translate([90, 117, 0])
    cube([1, 1, 3.69]);
  translate([91, 117, 0])
    cube([1, 1, 3.96]);
  translate([92, 117, 0])
    cube([1, 1, 4.08]);
  translate([93, 117, 0])
    cube([1, 1, 4.27]);
  translate([94, 117, 0])
    cube([1, 1, 4.31]);
  translate([95, 117, 0])
    cube([1, 1, 4.47]);
  translate([96, 117, 0])
    cube([1, 1, 4.47]);
  translate([97, 117, 0])
    cube([1, 1, 2.82]);
  translate([98, 117, 0])
    cube([1, 1, 3.41]);
  translate([99, 117, 0])
    cube([1, 1, 3.41]);
  translate([100, 117, 0])
    cube([1, 1, 2.27]);
  translate([101, 117, 0])
    cube([1, 1, 2.31]);
  translate([102, 117, 0])
    cube([1, 1, 2.43]);
  translate([103, 117, 0])
    cube([1, 1, 3.88]);
  translate([104, 117, 0])
    cube([1, 1, 4.08]);
  translate([105, 117, 0])
    cube([1, 1, 3.88]);
  translate([106, 117, 0])
    cube([1, 1, 3.84]);
  translate([107, 117, 0])
    cube([1, 1, 3.22]);
  translate([108, 117, 0])
    cube([1, 1, 2.90]);
  translate([109, 117, 0])
    cube([1, 1, 2.55]);
  translate([110, 117, 0])
    cube([1, 1, 2.47]);
  translate([111, 117, 0])
    cube([1, 1, 3.25]);
  translate([112, 117, 0])
    cube([1, 1, 3.37]);
  translate([113, 117, 0])
    cube([1, 1, 3.84]);
  translate([114, 117, 0])
    cube([1, 1, 3.80]);
  translate([115, 117, 0])
    cube([1, 1, 4.20]);
  translate([116, 117, 0])
    cube([1, 1, 4.08]);
  translate([117, 117, 0])
    cube([1, 1, 3.69]);
  translate([118, 117, 0])
    cube([1, 1, 3.45]);
  translate([119, 117, 0])
    cube([1, 1, 4.08]);
  translate([120, 117, 0])
    cube([1, 1, 4.35]);
  translate([121, 117, 0])
    cube([1, 1, 4.31]);
  translate([122, 117, 0])
    cube([1, 1, 3.96]);
  translate([123, 117, 0])
    cube([1, 1, 4.00]);
  translate([124, 117, 0])
    cube([1, 1, 3.88]);
  translate([125, 117, 0])
    cube([1, 1, 4.24]);
  translate([126, 117, 0])
    cube([1, 1, 3.61]);
  translate([127, 117, 0])
    cube([1, 1, 3.65]);
  translate([128, 117, 0])
    cube([1, 1, 3.96]);
  translate([129, 117, 0])
    cube([1, 1, 3.53]);
  translate([130, 117, 0])
    cube([1, 1, 3.61]);
  translate([131, 117, 0])
    cube([1, 1, 3.80]);
  translate([132, 117, 0])
    cube([1, 1, 3.76]);
  translate([133, 117, 0])
    cube([1, 1, 4.16]);
  translate([134, 117, 0])
    cube([1, 1, 3.92]);
  translate([135, 117, 0])
    cube([1, 1, 3.49]);
  translate([136, 117, 0])
    cube([1, 1, 3.45]);
  translate([137, 117, 0])
    cube([1, 1, 3.61]);
  translate([138, 117, 0])
    cube([1, 1, 4.27]);
  translate([139, 117, 0])
    cube([1, 1, 3.45]);
  translate([140, 117, 0])
    cube([1, 1, 3.10]);
  translate([141, 117, 0])
    cube([1, 1, 3.29]);
  translate([142, 117, 0])
    cube([1, 1, 3.57]);
  translate([143, 117, 0])
    cube([1, 1, 3.76]);
  translate([144, 117, 0])
    cube([1, 1, 3.37]);
  translate([145, 117, 0])
    cube([1, 1, 3.45]);
  translate([146, 117, 0])
    cube([1, 1, 4.78]);
  translate([147, 117, 0])
    cube([1, 1, 2.71]);
  translate([148, 117, 0])
    cube([1, 1, 1.33]);
  translate([149, 117, 0])
    cube([1, 1, 1.33]);
  translate([150, 117, 0])
    cube([1, 1, 1.33]);
  translate([151, 117, 0])
    cube([1, 1, 1.33]);
  translate([152, 117, 0])
    cube([1, 1, 1.33]);
  translate([153, 117, 0])
    cube([1, 1, 1.33]);
  translate([154, 117, 0])
    cube([1, 1, 1.33]);
  translate([155, 117, 0])
    cube([1, 1, 1.33]);
  translate([156, 117, 0])
    cube([1, 1, 1.33]);
  translate([157, 117, 0])
    cube([1, 1, 1.33]);
  translate([158, 117, 0])
    cube([1, 1, 1.33]);
  translate([159, 117, 0])
    cube([1, 1, 1.33]);
  translate([160, 117, 0])
    cube([1, 1, 1.33]);
  translate([161, 117, 0])
    cube([1, 1, 1.33]);
  translate([162, 117, 0])
    cube([1, 1, 1.37]);
  translate([163, 117, 0])
    cube([1, 1, 1.33]);
  translate([164, 117, 0])
    cube([1, 1, 1.33]);
  translate([165, 117, 0])
    cube([1, 1, 1.33]);
  translate([166, 117, 0])
    cube([1, 1, 1.33]);
  translate([167, 117, 0])
    cube([1, 1, 1.33]);
  translate([168, 117, 0])
    cube([1, 1, 1.37]);
  translate([169, 117, 0])
    cube([1, 1, 1.37]);
  translate([170, 117, 0])
    cube([1, 1, 1.37]);
  translate([171, 117, 0])
    cube([1, 1, 1.37]);
  translate([172, 117, 0])
    cube([1, 1, 1.37]);
  translate([173, 117, 0])
    cube([1, 1, 1.37]);
  translate([174, 117, 0])
    cube([1, 1, 1.37]);
  translate([175, 117, 0])
    cube([1, 1, 1.37]);
  translate([176, 117, 0])
    cube([1, 1, 1.37]);
  translate([177, 117, 0])
    cube([1, 1, 1.37]);
  translate([178, 117, 0])
    cube([1, 1, 1.37]);
  translate([179, 117, 0])
    cube([1, 1, 1.37]);
  translate([180, 117, 0])
    cube([1, 1, 1.33]);
  translate([181, 117, 0])
    cube([1, 1, 1.41]);
  translate([182, 117, 0])
    cube([1, 1, 1.41]);
  translate([183, 117, 0])
    cube([1, 1, 1.41]);
  translate([184, 117, 0])
    cube([1, 1, 1.37]);
  translate([185, 117, 0])
    cube([1, 1, 1.41]);
  translate([186, 117, 0])
    cube([1, 1, 1.41]);
  translate([187, 117, 0])
    cube([1, 1, 1.41]);
  translate([188, 117, 0])
    cube([1, 1, 1.41]);
  translate([189, 117, 0])
    cube([1, 1, 1.41]);
  translate([190, 117, 0])
    cube([1, 1, 1.41]);
  translate([191, 117, 0])
    cube([1, 1, 1.41]);
  translate([192, 117, 0])
    cube([1, 1, 1.41]);
  translate([193, 117, 0])
    cube([1, 1, 1.37]);
  translate([194, 117, 0])
    cube([1, 1, 1.41]);
  translate([195, 117, 0])
    cube([1, 1, 1.41]);
  translate([196, 117, 0])
    cube([1, 1, 1.41]);
  translate([197, 117, 0])
    cube([1, 1, 1.41]);
  translate([198, 117, 0])
    cube([1, 1, 1.41]);
  translate([199, 117, 0])
    cube([1, 1, 1.41]);
  translate([200, 117, 0])
    cube([1, 1, 1.41]);
  translate([201, 117, 0])
    cube([1, 1, 1.37]);
  translate([202, 117, 0])
    cube([1, 1, 1.37]);
  translate([203, 117, 0])
    cube([1, 1, 1.41]);
  translate([204, 117, 0])
    cube([1, 1, 1.41]);
  translate([205, 117, 0])
    cube([1, 1, 1.41]);
  translate([206, 117, 0])
    cube([1, 1, 1.33]);
  translate([207, 117, 0])
    cube([1, 1, 1.33]);
  translate([208, 117, 0])
    cube([1, 1, 1.41]);
  translate([209, 117, 0])
    cube([1, 1, 1.37]);
  translate([210, 117, 0])
    cube([1, 1, 1.41]);
  translate([211, 117, 0])
    cube([1, 1, 1.41]);
  translate([212, 117, 0])
    cube([1, 1, 1.41]);
  translate([213, 117, 0])
    cube([1, 1, 1.37]);
  translate([214, 117, 0])
    cube([1, 1, 1.37]);
  translate([215, 117, 0])
    cube([1, 1, 1.33]);
  translate([216, 117, 0])
    cube([1, 1, 1.45]);
  translate([217, 117, 0])
    cube([1, 1, 1.37]);
  translate([218, 117, 0])
    cube([1, 1, 1.37]);
  translate([219, 117, 0])
    cube([1, 1, 1.41]);
  translate([220, 117, 0])
    cube([1, 1, 1.37]);
  translate([221, 117, 0])
    cube([1, 1, 1.37]);
  translate([222, 117, 0])
    cube([1, 1, 1.37]);
  translate([223, 117, 0])
    cube([1, 1, 1.37]);
  translate([224, 117, 0])
    cube([1, 1, 1.37]);
  translate([225, 117, 0])
    cube([1, 1, 1.37]);
  translate([226, 117, 0])
    cube([1, 1, 1.37]);
  translate([227, 117, 0])
    cube([1, 1, 1.37]);
  translate([228, 117, 0])
    cube([1, 1, 1.37]);
  translate([229, 117, 0])
    cube([1, 1, 1.37]);
  translate([230, 117, 0])
    cube([1, 1, 1.37]);
  translate([231, 117, 0])
    cube([1, 1, 1.37]);
  translate([232, 117, 0])
    cube([1, 1, 1.37]);
  translate([233, 117, 0])
    cube([1, 1, 1.37]);
  translate([234, 117, 0])
    cube([1, 1, 1.37]);
  translate([235, 117, 0])
    cube([1, 1, 1.37]);
  translate([236, 117, 0])
    cube([1, 1, 1.37]);
  translate([237, 117, 0])
    cube([1, 1, 1.37]);
  translate([238, 117, 0])
    cube([1, 1, 1.37]);
  translate([239, 117, 0])
    cube([1, 1, 1.37]);
  translate([240, 117, 0])
    cube([1, 1, 1.37]);
  translate([241, 117, 0])
    cube([1, 1, 1.37]);
  translate([242, 117, 0])
    cube([1, 1, 1.37]);
  translate([243, 117, 0])
    cube([1, 1, 1.37]);
  translate([244, 117, 0])
    cube([1, 1, 1.37]);
  translate([245, 117, 0])
    cube([1, 1, 1.37]);
  translate([246, 117, 0])
    cube([1, 1, 1.37]);
  translate([0, 118, 0])
    cube([1, 1, 1.53]);
  translate([1, 118, 0])
    cube([1, 1, 1.53]);
  translate([2, 118, 0])
    cube([1, 1, 1.53]);
  translate([3, 118, 0])
    cube([1, 1, 1.53]);
  translate([4, 118, 0])
    cube([1, 1, 1.53]);
  translate([5, 118, 0])
    cube([1, 1, 1.53]);
  translate([6, 118, 0])
    cube([1, 1, 1.53]);
  translate([7, 118, 0])
    cube([1, 1, 1.53]);
  translate([8, 118, 0])
    cube([1, 1, 1.53]);
  translate([9, 118, 0])
    cube([1, 1, 1.53]);
  translate([10, 118, 0])
    cube([1, 1, 1.53]);
  translate([11, 118, 0])
    cube([1, 1, 1.53]);
  translate([12, 118, 0])
    cube([1, 1, 1.57]);
  translate([13, 118, 0])
    cube([1, 1, 1.57]);
  translate([14, 118, 0])
    cube([1, 1, 1.53]);
  translate([15, 118, 0])
    cube([1, 1, 1.53]);
  translate([16, 118, 0])
    cube([1, 1, 1.49]);
  translate([17, 118, 0])
    cube([1, 1, 1.49]);
  translate([18, 118, 0])
    cube([1, 1, 1.49]);
  translate([19, 118, 0])
    cube([1, 1, 1.49]);
  translate([20, 118, 0])
    cube([1, 1, 1.49]);
  translate([21, 118, 0])
    cube([1, 1, 1.49]);
  translate([22, 118, 0])
    cube([1, 1, 1.49]);
  translate([23, 118, 0])
    cube([1, 1, 1.49]);
  translate([24, 118, 0])
    cube([1, 1, 1.49]);
  translate([25, 118, 0])
    cube([1, 1, 1.49]);
  translate([26, 118, 0])
    cube([1, 1, 1.49]);
  translate([27, 118, 0])
    cube([1, 1, 1.45]);
  translate([28, 118, 0])
    cube([1, 1, 1.45]);
  translate([29, 118, 0])
    cube([1, 1, 1.45]);
  translate([30, 118, 0])
    cube([1, 1, 1.45]);
  translate([31, 118, 0])
    cube([1, 1, 1.45]);
  translate([32, 118, 0])
    cube([1, 1, 1.45]);
  translate([33, 118, 0])
    cube([1, 1, 1.45]);
  translate([34, 118, 0])
    cube([1, 1, 1.45]);
  translate([35, 118, 0])
    cube([1, 1, 1.45]);
  translate([36, 118, 0])
    cube([1, 1, 1.45]);
  translate([37, 118, 0])
    cube([1, 1, 1.45]);
  translate([38, 118, 0])
    cube([1, 1, 1.45]);
  translate([39, 118, 0])
    cube([1, 1, 1.45]);
  translate([40, 118, 0])
    cube([1, 1, 1.45]);
  translate([41, 118, 0])
    cube([1, 1, 1.41]);
  translate([42, 118, 0])
    cube([1, 1, 1.45]);
  translate([43, 118, 0])
    cube([1, 1, 1.29]);
  translate([44, 118, 0])
    cube([1, 1, 6.67]);
  translate([45, 118, 0])
    cube([1, 1, 5.53]);
  translate([46, 118, 0])
    cube([1, 1, 3.22]);
  translate([47, 118, 0])
    cube([1, 1, 3.33]);
  translate([48, 118, 0])
    cube([1, 1, 3.33]);
  translate([49, 118, 0])
    cube([1, 1, 3.88]);
  translate([50, 118, 0])
    cube([1, 1, 4.82]);
  translate([51, 118, 0])
    cube([1, 1, 5.57]);
  translate([52, 118, 0])
    cube([1, 1, 6.27]);
  translate([53, 118, 0])
    cube([1, 1, 6.35]);
  translate([54, 118, 0])
    cube([1, 1, 6.31]);
  translate([55, 118, 0])
    cube([1, 1, 6.20]);
  translate([56, 118, 0])
    cube([1, 1, 5.96]);
  translate([57, 118, 0])
    cube([1, 1, 5.80]);
  translate([58, 118, 0])
    cube([1, 1, 5.49]);
  translate([59, 118, 0])
    cube([1, 1, 5.29]);
  translate([60, 118, 0])
    cube([1, 1, 4.75]);
  translate([61, 118, 0])
    cube([1, 1, 5.10]);
  translate([62, 118, 0])
    cube([1, 1, 5.29]);
  translate([63, 118, 0])
    cube([1, 1, 5.49]);
  translate([64, 118, 0])
    cube([1, 1, 5.57]);
  translate([65, 118, 0])
    cube([1, 1, 5.49]);
  translate([66, 118, 0])
    cube([1, 1, 5.73]);
  translate([67, 118, 0])
    cube([1, 1, 5.76]);
  translate([68, 118, 0])
    cube([1, 1, 5.76]);
  translate([69, 118, 0])
    cube([1, 1, 5.80]);
  translate([70, 118, 0])
    cube([1, 1, 5.80]);
  translate([71, 118, 0])
    cube([1, 1, 5.69]);
  translate([72, 118, 0])
    cube([1, 1, 5.57]);
  translate([73, 118, 0])
    cube([1, 1, 5.41]);
  translate([74, 118, 0])
    cube([1, 1, 4.55]);
  translate([75, 118, 0])
    cube([1, 1, 0.51]);
  translate([76, 118, 0])
    cube([1, 1, 1.06]);
  translate([77, 118, 0])
    cube([1, 1, 1.29]);
  translate([78, 118, 0])
    cube([1, 1, 1.25]);
  translate([79, 118, 0])
    cube([1, 1, 1.29]);
  translate([80, 118, 0])
    cube([1, 1, 1.65]);
  translate([81, 118, 0])
    cube([1, 1, 1.88]);
  translate([82, 118, 0])
    cube([1, 1, 2.24]);
  translate([83, 118, 0])
    cube([1, 1, 1.73]);
  translate([84, 118, 0])
    cube([1, 1, 1.65]);
  translate([85, 118, 0])
    cube([1, 1, 0.90]);
  translate([86, 118, 0])
    cube([1, 1, 2.00]);
  translate([87, 118, 0])
    cube([1, 1, 2.39]);
  translate([88, 118, 0])
    cube([1, 1, 2.86]);
  translate([89, 118, 0])
    cube([1, 1, 3.22]);
  translate([90, 118, 0])
    cube([1, 1, 3.53]);
  translate([91, 118, 0])
    cube([1, 1, 3.76]);
  translate([92, 118, 0])
    cube([1, 1, 3.96]);
  translate([93, 118, 0])
    cube([1, 1, 4.16]);
  translate([94, 118, 0])
    cube([1, 1, 4.31]);
  translate([95, 118, 0])
    cube([1, 1, 4.47]);
  translate([96, 118, 0])
    cube([1, 1, 4.67]);
  translate([97, 118, 0])
    cube([1, 1, 3.76]);
  translate([98, 118, 0])
    cube([1, 1, 1.57]);
  translate([99, 118, 0])
    cube([1, 1, 3.53]);
  translate([100, 118, 0])
    cube([1, 1, 1.65]);
  translate([101, 118, 0])
    cube([1, 1, 2.67]);
  translate([102, 118, 0])
    cube([1, 1, 3.49]);
  translate([103, 118, 0])
    cube([1, 1, 3.92]);
  translate([104, 118, 0])
    cube([1, 1, 4.35]);
  translate([105, 118, 0])
    cube([1, 1, 4.20]);
  translate([106, 118, 0])
    cube([1, 1, 3.65]);
  translate([107, 118, 0])
    cube([1, 1, 2.90]);
  translate([108, 118, 0])
    cube([1, 1, 2.43]);
  translate([109, 118, 0])
    cube([1, 1, 2.27]);
  translate([110, 118, 0])
    cube([1, 1, 3.02]);
  translate([111, 118, 0])
    cube([1, 1, 2.94]);
  translate([112, 118, 0])
    cube([1, 1, 3.80]);
  translate([113, 118, 0])
    cube([1, 1, 3.57]);
  translate([114, 118, 0])
    cube([1, 1, 3.80]);
  translate([115, 118, 0])
    cube([1, 1, 3.69]);
  translate([116, 118, 0])
    cube([1, 1, 4.24]);
  translate([117, 118, 0])
    cube([1, 1, 4.27]);
  translate([118, 118, 0])
    cube([1, 1, 4.20]);
  translate([119, 118, 0])
    cube([1, 1, 4.35]);
  translate([120, 118, 0])
    cube([1, 1, 4.75]);
  translate([121, 118, 0])
    cube([1, 1, 4.31]);
  translate([122, 118, 0])
    cube([1, 1, 3.88]);
  translate([123, 118, 0])
    cube([1, 1, 3.84]);
  translate([124, 118, 0])
    cube([1, 1, 4.04]);
  translate([125, 118, 0])
    cube([1, 1, 3.92]);
  translate([126, 118, 0])
    cube([1, 1, 4.00]);
  translate([127, 118, 0])
    cube([1, 1, 3.57]);
  translate([128, 118, 0])
    cube([1, 1, 4.24]);
  translate([129, 118, 0])
    cube([1, 1, 4.04]);
  translate([130, 118, 0])
    cube([1, 1, 3.53]);
  translate([131, 118, 0])
    cube([1, 1, 3.84]);
  translate([132, 118, 0])
    cube([1, 1, 3.80]);
  translate([133, 118, 0])
    cube([1, 1, 4.04]);
  translate([134, 118, 0])
    cube([1, 1, 3.73]);
  translate([135, 118, 0])
    cube([1, 1, 4.31]);
  translate([136, 118, 0])
    cube([1, 1, 3.73]);
  translate([137, 118, 0])
    cube([1, 1, 3.45]);
  translate([138, 118, 0])
    cube([1, 1, 3.76]);
  translate([139, 118, 0])
    cube([1, 1, 3.96]);
  translate([140, 118, 0])
    cube([1, 1, 3.29]);
  translate([141, 118, 0])
    cube([1, 1, 3.06]);
  translate([142, 118, 0])
    cube([1, 1, 3.73]);
  translate([143, 118, 0])
    cube([1, 1, 3.37]);
  translate([144, 118, 0])
    cube([1, 1, 3.76]);
  translate([145, 118, 0])
    cube([1, 1, 4.31]);
  translate([146, 118, 0])
    cube([1, 1, 4.75]);
  translate([147, 118, 0])
    cube([1, 1, 4.75]);
  translate([148, 118, 0])
    cube([1, 1, 1.33]);
  translate([149, 118, 0])
    cube([1, 1, 1.33]);
  translate([150, 118, 0])
    cube([1, 1, 1.33]);
  translate([151, 118, 0])
    cube([1, 1, 1.33]);
  translate([152, 118, 0])
    cube([1, 1, 1.33]);
  translate([153, 118, 0])
    cube([1, 1, 1.33]);
  translate([154, 118, 0])
    cube([1, 1, 1.33]);
  translate([155, 118, 0])
    cube([1, 1, 1.33]);
  translate([156, 118, 0])
    cube([1, 1, 1.33]);
  translate([157, 118, 0])
    cube([1, 1, 1.33]);
  translate([158, 118, 0])
    cube([1, 1, 1.33]);
  translate([159, 118, 0])
    cube([1, 1, 1.33]);
  translate([160, 118, 0])
    cube([1, 1, 1.33]);
  translate([161, 118, 0])
    cube([1, 1, 1.33]);
  translate([162, 118, 0])
    cube([1, 1, 1.37]);
  translate([163, 118, 0])
    cube([1, 1, 1.33]);
  translate([164, 118, 0])
    cube([1, 1, 1.33]);
  translate([165, 118, 0])
    cube([1, 1, 1.33]);
  translate([166, 118, 0])
    cube([1, 1, 1.33]);
  translate([167, 118, 0])
    cube([1, 1, 1.33]);
  translate([168, 118, 0])
    cube([1, 1, 1.37]);
  translate([169, 118, 0])
    cube([1, 1, 1.37]);
  translate([170, 118, 0])
    cube([1, 1, 1.37]);
  translate([171, 118, 0])
    cube([1, 1, 1.37]);
  translate([172, 118, 0])
    cube([1, 1, 1.37]);
  translate([173, 118, 0])
    cube([1, 1, 1.37]);
  translate([174, 118, 0])
    cube([1, 1, 1.37]);
  translate([175, 118, 0])
    cube([1, 1, 1.37]);
  translate([176, 118, 0])
    cube([1, 1, 1.37]);
  translate([177, 118, 0])
    cube([1, 1, 1.37]);
  translate([178, 118, 0])
    cube([1, 1, 1.37]);
  translate([179, 118, 0])
    cube([1, 1, 1.37]);
  translate([180, 118, 0])
    cube([1, 1, 1.33]);
  translate([181, 118, 0])
    cube([1, 1, 1.41]);
  translate([182, 118, 0])
    cube([1, 1, 1.41]);
  translate([183, 118, 0])
    cube([1, 1, 1.41]);
  translate([184, 118, 0])
    cube([1, 1, 1.45]);
  translate([185, 118, 0])
    cube([1, 1, 1.41]);
  translate([186, 118, 0])
    cube([1, 1, 1.41]);
  translate([187, 118, 0])
    cube([1, 1, 1.41]);
  translate([188, 118, 0])
    cube([1, 1, 1.41]);
  translate([189, 118, 0])
    cube([1, 1, 1.41]);
  translate([190, 118, 0])
    cube([1, 1, 1.41]);
  translate([191, 118, 0])
    cube([1, 1, 1.41]);
  translate([192, 118, 0])
    cube([1, 1, 1.41]);
  translate([193, 118, 0])
    cube([1, 1, 1.37]);
  translate([194, 118, 0])
    cube([1, 1, 1.45]);
  translate([195, 118, 0])
    cube([1, 1, 1.41]);
  translate([196, 118, 0])
    cube([1, 1, 1.41]);
  translate([197, 118, 0])
    cube([1, 1, 1.41]);
  translate([198, 118, 0])
    cube([1, 1, 1.41]);
  translate([199, 118, 0])
    cube([1, 1, 1.41]);
  translate([200, 118, 0])
    cube([1, 1, 1.41]);
  translate([201, 118, 0])
    cube([1, 1, 1.37]);
  translate([202, 118, 0])
    cube([1, 1, 1.37]);
  translate([203, 118, 0])
    cube([1, 1, 1.41]);
  translate([204, 118, 0])
    cube([1, 1, 1.41]);
  translate([205, 118, 0])
    cube([1, 1, 1.41]);
  translate([206, 118, 0])
    cube([1, 1, 1.33]);
  translate([207, 118, 0])
    cube([1, 1, 1.33]);
  translate([208, 118, 0])
    cube([1, 1, 1.41]);
  translate([209, 118, 0])
    cube([1, 1, 1.37]);
  translate([210, 118, 0])
    cube([1, 1, 1.45]);
  translate([211, 118, 0])
    cube([1, 1, 1.41]);
  translate([212, 118, 0])
    cube([1, 1, 1.41]);
  translate([213, 118, 0])
    cube([1, 1, 1.37]);
  translate([214, 118, 0])
    cube([1, 1, 1.37]);
  translate([215, 118, 0])
    cube([1, 1, 1.33]);
  translate([216, 118, 0])
    cube([1, 1, 1.33]);
  translate([217, 118, 0])
    cube([1, 1, 1.45]);
  translate([218, 118, 0])
    cube([1, 1, 1.45]);
  translate([219, 118, 0])
    cube([1, 1, 1.41]);
  translate([220, 118, 0])
    cube([1, 1, 1.29]);
  translate([221, 118, 0])
    cube([1, 1, 1.41]);
  translate([222, 118, 0])
    cube([1, 1, 1.37]);
  translate([223, 118, 0])
    cube([1, 1, 1.37]);
  translate([224, 118, 0])
    cube([1, 1, 1.37]);
  translate([225, 118, 0])
    cube([1, 1, 1.37]);
  translate([226, 118, 0])
    cube([1, 1, 1.37]);
  translate([227, 118, 0])
    cube([1, 1, 1.37]);
  translate([228, 118, 0])
    cube([1, 1, 1.37]);
  translate([229, 118, 0])
    cube([1, 1, 1.37]);
  translate([230, 118, 0])
    cube([1, 1, 1.37]);
  translate([231, 118, 0])
    cube([1, 1, 1.37]);
  translate([232, 118, 0])
    cube([1, 1, 1.37]);
  translate([233, 118, 0])
    cube([1, 1, 1.37]);
  translate([234, 118, 0])
    cube([1, 1, 1.37]);
  translate([235, 118, 0])
    cube([1, 1, 1.37]);
  translate([236, 118, 0])
    cube([1, 1, 1.37]);
  translate([237, 118, 0])
    cube([1, 1, 1.37]);
  translate([238, 118, 0])
    cube([1, 1, 1.37]);
  translate([239, 118, 0])
    cube([1, 1, 1.37]);
  translate([240, 118, 0])
    cube([1, 1, 1.37]);
  translate([241, 118, 0])
    cube([1, 1, 1.37]);
  translate([242, 118, 0])
    cube([1, 1, 1.37]);
  translate([243, 118, 0])
    cube([1, 1, 1.37]);
  translate([244, 118, 0])
    cube([1, 1, 1.37]);
  translate([245, 118, 0])
    cube([1, 1, 1.37]);
  translate([246, 118, 0])
    cube([1, 1, 1.37]);
  translate([0, 119, 0])
    cube([1, 1, 1.53]);
  translate([1, 119, 0])
    cube([1, 1, 1.53]);
  translate([2, 119, 0])
    cube([1, 1, 1.57]);
  translate([3, 119, 0])
    cube([1, 1, 1.57]);
  translate([4, 119, 0])
    cube([1, 1, 1.53]);
  translate([5, 119, 0])
    cube([1, 1, 1.53]);
  translate([6, 119, 0])
    cube([1, 1, 1.53]);
  translate([7, 119, 0])
    cube([1, 1, 1.53]);
  translate([8, 119, 0])
    cube([1, 1, 1.53]);
  translate([9, 119, 0])
    cube([1, 1, 1.53]);
  translate([10, 119, 0])
    cube([1, 1, 1.53]);
  translate([11, 119, 0])
    cube([1, 1, 1.53]);
  translate([12, 119, 0])
    cube([1, 1, 1.53]);
  translate([13, 119, 0])
    cube([1, 1, 1.53]);
  translate([14, 119, 0])
    cube([1, 1, 1.53]);
  translate([15, 119, 0])
    cube([1, 1, 1.53]);
  translate([16, 119, 0])
    cube([1, 1, 1.53]);
  translate([17, 119, 0])
    cube([1, 1, 1.53]);
  translate([18, 119, 0])
    cube([1, 1, 1.45]);
  translate([19, 119, 0])
    cube([1, 1, 1.49]);
  translate([20, 119, 0])
    cube([1, 1, 1.49]);
  translate([21, 119, 0])
    cube([1, 1, 1.49]);
  translate([22, 119, 0])
    cube([1, 1, 1.49]);
  translate([23, 119, 0])
    cube([1, 1, 1.49]);
  translate([24, 119, 0])
    cube([1, 1, 1.49]);
  translate([25, 119, 0])
    cube([1, 1, 1.49]);
  translate([26, 119, 0])
    cube([1, 1, 1.49]);
  translate([27, 119, 0])
    cube([1, 1, 1.49]);
  translate([28, 119, 0])
    cube([1, 1, 1.49]);
  translate([29, 119, 0])
    cube([1, 1, 1.49]);
  translate([30, 119, 0])
    cube([1, 1, 1.45]);
  translate([31, 119, 0])
    cube([1, 1, 1.45]);
  translate([32, 119, 0])
    cube([1, 1, 1.45]);
  translate([33, 119, 0])
    cube([1, 1, 1.45]);
  translate([34, 119, 0])
    cube([1, 1, 1.45]);
  translate([35, 119, 0])
    cube([1, 1, 1.45]);
  translate([36, 119, 0])
    cube([1, 1, 1.45]);
  translate([37, 119, 0])
    cube([1, 1, 1.45]);
  translate([38, 119, 0])
    cube([1, 1, 1.45]);
  translate([39, 119, 0])
    cube([1, 1, 1.45]);
  translate([40, 119, 0])
    cube([1, 1, 1.45]);
  translate([41, 119, 0])
    cube([1, 1, 1.41]);
  translate([42, 119, 0])
    cube([1, 1, 1.41]);
  translate([43, 119, 0])
    cube([1, 1, 1.41]);
  translate([44, 119, 0])
    cube([1, 1, 1.29]);
  translate([45, 119, 0])
    cube([1, 1, 6.31]);
  translate([46, 119, 0])
    cube([1, 1, 3.45]);
  translate([47, 119, 0])
    cube([1, 1, 3.41]);
  translate([48, 119, 0])
    cube([1, 1, 3.41]);
  translate([49, 119, 0])
    cube([1, 1, 3.45]);
  translate([50, 119, 0])
    cube([1, 1, 4.71]);
  translate([51, 119, 0])
    cube([1, 1, 5.29]);
  translate([52, 119, 0])
    cube([1, 1, 6.08]);
  translate([53, 119, 0])
    cube([1, 1, 6.24]);
  translate([54, 119, 0])
    cube([1, 1, 6.35]);
  translate([55, 119, 0])
    cube([1, 1, 6.35]);
  translate([56, 119, 0])
    cube([1, 1, 6.04]);
  translate([57, 119, 0])
    cube([1, 1, 5.76]);
  translate([58, 119, 0])
    cube([1, 1, 5.53]);
  translate([59, 119, 0])
    cube([1, 1, 5.69]);
  translate([60, 119, 0])
    cube([1, 1, 4.63]);
  translate([61, 119, 0])
    cube([1, 1, 5.06]);
  translate([62, 119, 0])
    cube([1, 1, 5.10]);
  translate([63, 119, 0])
    cube([1, 1, 5.18]);
  translate([64, 119, 0])
    cube([1, 1, 5.25]);
  translate([65, 119, 0])
    cube([1, 1, 5.41]);
  translate([66, 119, 0])
    cube([1, 1, 5.65]);
  translate([67, 119, 0])
    cube([1, 1, 5.76]);
  translate([68, 119, 0])
    cube([1, 1, 5.65]);
  translate([69, 119, 0])
    cube([1, 1, 5.73]);
  translate([70, 119, 0])
    cube([1, 1, 5.80]);
  translate([71, 119, 0])
    cube([1, 1, 5.80]);
  translate([72, 119, 0])
    cube([1, 1, 5.57]);
  translate([73, 119, 0])
    cube([1, 1, 5.37]);
  translate([74, 119, 0])
    cube([1, 1, 5.02]);
  translate([75, 119, 0])
    cube([1, 1, 1.29]);
  translate([76, 119, 0])
    cube([1, 1, 0.82]);
  translate([77, 119, 0])
    cube([1, 1, 1.14]);
  translate([78, 119, 0])
    cube([1, 1, 0.90]);
  translate([79, 119, 0])
    cube([1, 1, 0.98]);
  translate([80, 119, 0])
    cube([1, 1, 1.25]);
  translate([81, 119, 0])
    cube([1, 1, 2.86]);
  translate([82, 119, 0])
    cube([1, 1, 1.92]);
  translate([83, 119, 0])
    cube([1, 1, 1.61]);
  translate([84, 119, 0])
    cube([1, 1, 1.41]);
  translate([85, 119, 0])
    cube([1, 1, 1.25]);
  translate([86, 119, 0])
    cube([1, 1, 1.80]);
  translate([87, 119, 0])
    cube([1, 1, 1.92]);
  translate([88, 119, 0])
    cube([1, 1, 2.55]);
  translate([89, 119, 0])
    cube([1, 1, 2.98]);
  translate([90, 119, 0])
    cube([1, 1, 3.37]);
  translate([91, 119, 0])
    cube([1, 1, 3.61]);
  translate([92, 119, 0])
    cube([1, 1, 3.96]);
  translate([93, 119, 0])
    cube([1, 1, 4.12]);
  translate([94, 119, 0])
    cube([1, 1, 4.24]);
  translate([95, 119, 0])
    cube([1, 1, 4.39]);
  translate([96, 119, 0])
    cube([1, 1, 4.63]);
  translate([97, 119, 0])
    cube([1, 1, 4.04]);
  translate([98, 119, 0])
    cube([1, 1, 1.18]);
  translate([99, 119, 0])
    cube([1, 1, 3.25]);
  translate([100, 119, 0])
    cube([1, 1, 2.12]);
  translate([101, 119, 0])
    cube([1, 1, 3.37]);
  translate([102, 119, 0])
    cube([1, 1, 3.73]);
  translate([103, 119, 0])
    cube([1, 1, 4.27]);
  translate([104, 119, 0])
    cube([1, 1, 4.20]);
  translate([105, 119, 0])
    cube([1, 1, 3.41]);
  translate([106, 119, 0])
    cube([1, 1, 3.14]);
  translate([107, 119, 0])
    cube([1, 1, 2.35]);
  translate([108, 119, 0])
    cube([1, 1, 2.35]);
  translate([109, 119, 0])
    cube([1, 1, 2.75]);
  translate([110, 119, 0])
    cube([1, 1, 2.63]);
  translate([111, 119, 0])
    cube([1, 1, 3.65]);
  translate([112, 119, 0])
    cube([1, 1, 3.92]);
  translate([113, 119, 0])
    cube([1, 1, 3.65]);
  translate([114, 119, 0])
    cube([1, 1, 3.73]);
  translate([115, 119, 0])
    cube([1, 1, 4.04]);
  translate([116, 119, 0])
    cube([1, 1, 3.84]);
  translate([117, 119, 0])
    cube([1, 1, 4.20]);
  translate([118, 119, 0])
    cube([1, 1, 4.35]);
  translate([119, 119, 0])
    cube([1, 1, 4.63]);
  translate([120, 119, 0])
    cube([1, 1, 3.84]);
  translate([121, 119, 0])
    cube([1, 1, 4.31]);
  translate([122, 119, 0])
    cube([1, 1, 4.24]);
  translate([123, 119, 0])
    cube([1, 1, 3.76]);
  translate([124, 119, 0])
    cube([1, 1, 4.20]);
  translate([125, 119, 0])
    cube([1, 1, 3.88]);
  translate([126, 119, 0])
    cube([1, 1, 4.04]);
  translate([127, 119, 0])
    cube([1, 1, 3.92]);
  translate([128, 119, 0])
    cube([1, 1, 4.04]);
  translate([129, 119, 0])
    cube([1, 1, 3.84]);
  translate([130, 119, 0])
    cube([1, 1, 4.20]);
  translate([131, 119, 0])
    cube([1, 1, 3.73]);
  translate([132, 119, 0])
    cube([1, 1, 3.37]);
  translate([133, 119, 0])
    cube([1, 1, 4.04]);
  translate([134, 119, 0])
    cube([1, 1, 3.22]);
  translate([135, 119, 0])
    cube([1, 1, 3.22]);
  translate([136, 119, 0])
    cube([1, 1, 3.41]);
  translate([137, 119, 0])
    cube([1, 1, 3.69]);
  translate([138, 119, 0])
    cube([1, 1, 3.45]);
  translate([139, 119, 0])
    cube([1, 1, 3.53]);
  translate([140, 119, 0])
    cube([1, 1, 3.06]);
  translate([141, 119, 0])
    cube([1, 1, 3.53]);
  translate([142, 119, 0])
    cube([1, 1, 3.02]);
  translate([143, 119, 0])
    cube([1, 1, 3.33]);
  translate([144, 119, 0])
    cube([1, 1, 3.18]);
  translate([145, 119, 0])
    cube([1, 1, 3.33]);
  translate([146, 119, 0])
    cube([1, 1, 2.43]);
  translate([147, 119, 0])
    cube([1, 1, 4.71]);
  translate([148, 119, 0])
    cube([1, 1, 1.33]);
  translate([149, 119, 0])
    cube([1, 1, 1.33]);
  translate([150, 119, 0])
    cube([1, 1, 1.33]);
  translate([151, 119, 0])
    cube([1, 1, 1.33]);
  translate([152, 119, 0])
    cube([1, 1, 1.33]);
  translate([153, 119, 0])
    cube([1, 1, 1.33]);
  translate([154, 119, 0])
    cube([1, 1, 1.33]);
  translate([155, 119, 0])
    cube([1, 1, 1.33]);
  translate([156, 119, 0])
    cube([1, 1, 1.33]);
  translate([157, 119, 0])
    cube([1, 1, 1.33]);
  translate([158, 119, 0])
    cube([1, 1, 1.33]);
  translate([159, 119, 0])
    cube([1, 1, 1.33]);
  translate([160, 119, 0])
    cube([1, 1, 1.37]);
  translate([161, 119, 0])
    cube([1, 1, 1.33]);
  translate([162, 119, 0])
    cube([1, 1, 1.37]);
  translate([163, 119, 0])
    cube([1, 1, 1.37]);
  translate([164, 119, 0])
    cube([1, 1, 1.37]);
  translate([165, 119, 0])
    cube([1, 1, 1.37]);
  translate([166, 119, 0])
    cube([1, 1, 1.41]);
  translate([167, 119, 0])
    cube([1, 1, 1.33]);
  translate([168, 119, 0])
    cube([1, 1, 1.37]);
  translate([169, 119, 0])
    cube([1, 1, 1.37]);
  translate([170, 119, 0])
    cube([1, 1, 1.37]);
  translate([171, 119, 0])
    cube([1, 1, 1.37]);
  translate([172, 119, 0])
    cube([1, 1, 1.37]);
  translate([173, 119, 0])
    cube([1, 1, 1.37]);
  translate([174, 119, 0])
    cube([1, 1, 1.37]);
  translate([175, 119, 0])
    cube([1, 1, 1.41]);
  translate([176, 119, 0])
    cube([1, 1, 1.41]);
  translate([177, 119, 0])
    cube([1, 1, 1.41]);
  translate([178, 119, 0])
    cube([1, 1, 1.41]);
  translate([179, 119, 0])
    cube([1, 1, 1.41]);
  translate([180, 119, 0])
    cube([1, 1, 1.41]);
  translate([181, 119, 0])
    cube([1, 1, 1.41]);
  translate([182, 119, 0])
    cube([1, 1, 1.41]);
  translate([183, 119, 0])
    cube([1, 1, 1.41]);
  translate([184, 119, 0])
    cube([1, 1, 1.41]);
  translate([185, 119, 0])
    cube([1, 1, 1.41]);
  translate([186, 119, 0])
    cube([1, 1, 1.41]);
  translate([187, 119, 0])
    cube([1, 1, 1.41]);
  translate([188, 119, 0])
    cube([1, 1, 1.41]);
  translate([189, 119, 0])
    cube([1, 1, 1.41]);
  translate([190, 119, 0])
    cube([1, 1, 1.41]);
  translate([191, 119, 0])
    cube([1, 1, 1.41]);
  translate([192, 119, 0])
    cube([1, 1, 1.41]);
  translate([193, 119, 0])
    cube([1, 1, 1.41]);
  translate([194, 119, 0])
    cube([1, 1, 1.41]);
  translate([195, 119, 0])
    cube([1, 1, 1.41]);
  translate([196, 119, 0])
    cube([1, 1, 1.41]);
  translate([197, 119, 0])
    cube([1, 1, 1.41]);
  translate([198, 119, 0])
    cube([1, 1, 1.41]);
  translate([199, 119, 0])
    cube([1, 1, 1.41]);
  translate([200, 119, 0])
    cube([1, 1, 1.41]);
  translate([201, 119, 0])
    cube([1, 1, 1.41]);
  translate([202, 119, 0])
    cube([1, 1, 1.41]);
  translate([203, 119, 0])
    cube([1, 1, 1.41]);
  translate([204, 119, 0])
    cube([1, 1, 1.41]);
  translate([205, 119, 0])
    cube([1, 1, 1.41]);
  translate([206, 119, 0])
    cube([1, 1, 1.41]);
  translate([207, 119, 0])
    cube([1, 1, 1.37]);
  translate([208, 119, 0])
    cube([1, 1, 1.41]);
  translate([209, 119, 0])
    cube([1, 1, 1.41]);
  translate([210, 119, 0])
    cube([1, 1, 1.41]);
  translate([211, 119, 0])
    cube([1, 1, 1.41]);
  translate([212, 119, 0])
    cube([1, 1, 1.41]);
  translate([213, 119, 0])
    cube([1, 1, 1.41]);
  translate([214, 119, 0])
    cube([1, 1, 1.41]);
  translate([215, 119, 0])
    cube([1, 1, 1.41]);
  translate([216, 119, 0])
    cube([1, 1, 1.41]);
  translate([217, 119, 0])
    cube([1, 1, 1.41]);
  translate([218, 119, 0])
    cube([1, 1, 1.41]);
  translate([219, 119, 0])
    cube([1, 1, 1.41]);
  translate([220, 119, 0])
    cube([1, 1, 1.41]);
  translate([221, 119, 0])
    cube([1, 1, 1.41]);
  translate([222, 119, 0])
    cube([1, 1, 1.41]);
  translate([223, 119, 0])
    cube([1, 1, 1.37]);
  translate([224, 119, 0])
    cube([1, 1, 1.41]);
  translate([225, 119, 0])
    cube([1, 1, 1.37]);
  translate([226, 119, 0])
    cube([1, 1, 1.37]);
  translate([227, 119, 0])
    cube([1, 1, 1.37]);
  translate([228, 119, 0])
    cube([1, 1, 1.37]);
  translate([229, 119, 0])
    cube([1, 1, 1.37]);
  translate([230, 119, 0])
    cube([1, 1, 1.37]);
  translate([231, 119, 0])
    cube([1, 1, 1.33]);
  translate([232, 119, 0])
    cube([1, 1, 1.41]);
  translate([233, 119, 0])
    cube([1, 1, 1.33]);
  translate([234, 119, 0])
    cube([1, 1, 1.41]);
  translate([235, 119, 0])
    cube([1, 1, 1.37]);
  translate([236, 119, 0])
    cube([1, 1, 1.37]);
  translate([237, 119, 0])
    cube([1, 1, 1.37]);
  translate([238, 119, 0])
    cube([1, 1, 1.37]);
  translate([239, 119, 0])
    cube([1, 1, 1.37]);
  translate([240, 119, 0])
    cube([1, 1, 1.37]);
  translate([241, 119, 0])
    cube([1, 1, 1.37]);
  translate([242, 119, 0])
    cube([1, 1, 1.37]);
  translate([243, 119, 0])
    cube([1, 1, 1.37]);
  translate([244, 119, 0])
    cube([1, 1, 1.37]);
  translate([245, 119, 0])
    cube([1, 1, 1.37]);
  translate([246, 119, 0])
    cube([1, 1, 1.37]);
  translate([0, 120, 0])
    cube([1, 1, 1.57]);
  translate([1, 120, 0])
    cube([1, 1, 1.57]);
  translate([2, 120, 0])
    cube([1, 1, 1.57]);
  translate([3, 120, 0])
    cube([1, 1, 1.57]);
  translate([4, 120, 0])
    cube([1, 1, 1.57]);
  translate([5, 120, 0])
    cube([1, 1, 1.57]);
  translate([6, 120, 0])
    cube([1, 1, 1.57]);
  translate([7, 120, 0])
    cube([1, 1, 1.57]);
  translate([8, 120, 0])
    cube([1, 1, 1.57]);
  translate([9, 120, 0])
    cube([1, 1, 1.53]);
  translate([10, 120, 0])
    cube([1, 1, 1.53]);
  translate([11, 120, 0])
    cube([1, 1, 1.53]);
  translate([12, 120, 0])
    cube([1, 1, 1.53]);
  translate([13, 120, 0])
    cube([1, 1, 1.53]);
  translate([14, 120, 0])
    cube([1, 1, 1.57]);
  translate([15, 120, 0])
    cube([1, 1, 1.53]);
  translate([16, 120, 0])
    cube([1, 1, 1.53]);
  translate([17, 120, 0])
    cube([1, 1, 1.53]);
  translate([18, 120, 0])
    cube([1, 1, 1.53]);
  translate([19, 120, 0])
    cube([1, 1, 1.49]);
  translate([20, 120, 0])
    cube([1, 1, 1.53]);
  translate([21, 120, 0])
    cube([1, 1, 1.53]);
  translate([22, 120, 0])
    cube([1, 1, 1.49]);
  translate([23, 120, 0])
    cube([1, 1, 1.49]);
  translate([24, 120, 0])
    cube([1, 1, 1.49]);
  translate([25, 120, 0])
    cube([1, 1, 1.49]);
  translate([26, 120, 0])
    cube([1, 1, 1.49]);
  translate([27, 120, 0])
    cube([1, 1, 1.49]);
  translate([28, 120, 0])
    cube([1, 1, 1.49]);
  translate([29, 120, 0])
    cube([1, 1, 1.49]);
  translate([30, 120, 0])
    cube([1, 1, 1.45]);
  translate([31, 120, 0])
    cube([1, 1, 1.45]);
  translate([32, 120, 0])
    cube([1, 1, 1.41]);
  translate([33, 120, 0])
    cube([1, 1, 1.45]);
  translate([34, 120, 0])
    cube([1, 1, 1.45]);
  translate([35, 120, 0])
    cube([1, 1, 1.45]);
  translate([36, 120, 0])
    cube([1, 1, 1.45]);
  translate([37, 120, 0])
    cube([1, 1, 1.45]);
  translate([38, 120, 0])
    cube([1, 1, 1.45]);
  translate([39, 120, 0])
    cube([1, 1, 1.45]);
  translate([40, 120, 0])
    cube([1, 1, 1.45]);
  translate([41, 120, 0])
    cube([1, 1, 1.41]);
  translate([42, 120, 0])
    cube([1, 1, 1.45]);
  translate([43, 120, 0])
    cube([1, 1, 1.41]);
  translate([44, 120, 0])
    cube([1, 1, 1.49]);
  translate([45, 120, 0])
    cube([1, 1, 7.69]);
  translate([46, 120, 0])
    cube([1, 1, 4.47]);
  translate([47, 120, 0])
    cube([1, 1, 3.33]);
  translate([48, 120, 0])
    cube([1, 1, 3.41]);
  translate([49, 120, 0])
    cube([1, 1, 3.41]);
  translate([50, 120, 0])
    cube([1, 1, 4.24]);
  translate([51, 120, 0])
    cube([1, 1, 5.10]);
  translate([52, 120, 0])
    cube([1, 1, 5.84]);
  translate([53, 120, 0])
    cube([1, 1, 6.20]);
  translate([54, 120, 0])
    cube([1, 1, 6.39]);
  translate([55, 120, 0])
    cube([1, 1, 6.35]);
  translate([56, 120, 0])
    cube([1, 1, 6.20]);
  translate([57, 120, 0])
    cube([1, 1, 5.84]);
  translate([58, 120, 0])
    cube([1, 1, 5.57]);
  translate([59, 120, 0])
    cube([1, 1, 5.53]);
  translate([60, 120, 0])
    cube([1, 1, 4.90]);
  translate([61, 120, 0])
    cube([1, 1, 4.94]);
  translate([62, 120, 0])
    cube([1, 1, 4.90]);
  translate([63, 120, 0])
    cube([1, 1, 4.82]);
  translate([64, 120, 0])
    cube([1, 1, 5.10]);
  translate([65, 120, 0])
    cube([1, 1, 5.29]);
  translate([66, 120, 0])
    cube([1, 1, 5.49]);
  translate([67, 120, 0])
    cube([1, 1, 5.61]);
  translate([68, 120, 0])
    cube([1, 1, 5.65]);
  translate([69, 120, 0])
    cube([1, 1, 5.80]);
  translate([70, 120, 0])
    cube([1, 1, 5.80]);
  translate([71, 120, 0])
    cube([1, 1, 5.76]);
  translate([72, 120, 0])
    cube([1, 1, 5.65]);
  translate([73, 120, 0])
    cube([1, 1, 5.49]);
  translate([74, 120, 0])
    cube([1, 1, 5.29]);
  translate([75, 120, 0])
    cube([1, 1, 2.71]);
  translate([76, 120, 0])
    cube([1, 1, 0.78]);
  translate([77, 120, 0])
    cube([1, 1, 0.98]);
  translate([78, 120, 0])
    cube([1, 1, 0.90]);
  translate([79, 120, 0])
    cube([1, 1, 0.98]);
  translate([80, 120, 0])
    cube([1, 1, 1.37]);
  translate([81, 120, 0])
    cube([1, 1, 3.29]);
  translate([82, 120, 0])
    cube([1, 1, 2.86]);
  translate([83, 120, 0])
    cube([1, 1, 1.18]);
  translate([84, 120, 0])
    cube([1, 1, 1.92]);
  translate([85, 120, 0])
    cube([1, 1, 1.73]);
  translate([86, 120, 0])
    cube([1, 1, 1.65]);
  translate([87, 120, 0])
    cube([1, 1, 1.49]);
  translate([88, 120, 0])
    cube([1, 1, 2.12]);
  translate([89, 120, 0])
    cube([1, 1, 2.67]);
  translate([90, 120, 0])
    cube([1, 1, 3.14]);
  translate([91, 120, 0])
    cube([1, 1, 3.41]);
  translate([92, 120, 0])
    cube([1, 1, 3.76]);
  translate([93, 120, 0])
    cube([1, 1, 4.00]);
  translate([94, 120, 0])
    cube([1, 1, 4.12]);
  translate([95, 120, 0])
    cube([1, 1, 4.35]);
  translate([96, 120, 0])
    cube([1, 1, 4.43]);
  translate([97, 120, 0])
    cube([1, 1, 4.04]);
  translate([98, 120, 0])
    cube([1, 1, 1.18]);
  translate([99, 120, 0])
    cube([1, 1, 3.61]);
  translate([100, 120, 0])
    cube([1, 1, 2.98]);
  translate([101, 120, 0])
    cube([1, 1, 3.92]);
  translate([102, 120, 0])
    cube([1, 1, 4.12]);
  translate([103, 120, 0])
    cube([1, 1, 3.96]);
  translate([104, 120, 0])
    cube([1, 1, 3.45]);
  translate([105, 120, 0])
    cube([1, 1, 2.94]);
  translate([106, 120, 0])
    cube([1, 1, 1.88]);
  translate([107, 120, 0])
    cube([1, 1, 1.96]);
  translate([108, 120, 0])
    cube([1, 1, 2.47]);
  translate([109, 120, 0])
    cube([1, 1, 2.94]);
  translate([110, 120, 0])
    cube([1, 1, 4.08]);
  translate([111, 120, 0])
    cube([1, 1, 3.57]);
  translate([112, 120, 0])
    cube([1, 1, 3.65]);
  translate([113, 120, 0])
    cube([1, 1, 3.96]);
  translate([114, 120, 0])
    cube([1, 1, 3.69]);
  translate([115, 120, 0])
    cube([1, 1, 3.92]);
  translate([116, 120, 0])
    cube([1, 1, 3.76]);
  translate([117, 120, 0])
    cube([1, 1, 4.39]);
  translate([118, 120, 0])
    cube([1, 1, 4.00]);
  translate([119, 120, 0])
    cube([1, 1, 4.04]);
  translate([120, 120, 0])
    cube([1, 1, 4.16]);
  translate([121, 120, 0])
    cube([1, 1, 4.63]);
  translate([122, 120, 0])
    cube([1, 1, 3.88]);
  translate([123, 120, 0])
    cube([1, 1, 4.00]);
  translate([124, 120, 0])
    cube([1, 1, 3.84]);
  translate([125, 120, 0])
    cube([1, 1, 3.73]);
  translate([126, 120, 0])
    cube([1, 1, 4.27]);
  translate([127, 120, 0])
    cube([1, 1, 3.73]);
  translate([128, 120, 0])
    cube([1, 1, 4.75]);
  translate([129, 120, 0])
    cube([1, 1, 3.80]);
  translate([130, 120, 0])
    cube([1, 1, 4.08]);
  translate([131, 120, 0])
    cube([1, 1, 3.65]);
  translate([132, 120, 0])
    cube([1, 1, 4.00]);
  translate([133, 120, 0])
    cube([1, 1, 3.92]);
  translate([134, 120, 0])
    cube([1, 1, 3.45]);
  translate([135, 120, 0])
    cube([1, 1, 4.43]);
  translate([136, 120, 0])
    cube([1, 1, 3.02]);
  translate([137, 120, 0])
    cube([1, 1, 3.53]);
  translate([138, 120, 0])
    cube([1, 1, 3.88]);
  translate([139, 120, 0])
    cube([1, 1, 3.02]);
  translate([140, 120, 0])
    cube([1, 1, 3.29]);
  translate([141, 120, 0])
    cube([1, 1, 3.29]);
  translate([142, 120, 0])
    cube([1, 1, 3.76]);
  translate([143, 120, 0])
    cube([1, 1, 3.53]);
  translate([144, 120, 0])
    cube([1, 1, 2.90]);
  translate([145, 120, 0])
    cube([1, 1, 4.08]);
  translate([146, 120, 0])
    cube([1, 1, 5.41]);
  translate([147, 120, 0])
    cube([1, 1, 4.94]);
  translate([148, 120, 0])
    cube([1, 1, 1.29]);
  translate([149, 120, 0])
    cube([1, 1, 1.33]);
  translate([150, 120, 0])
    cube([1, 1, 1.33]);
  translate([151, 120, 0])
    cube([1, 1, 1.33]);
  translate([152, 120, 0])
    cube([1, 1, 1.33]);
  translate([153, 120, 0])
    cube([1, 1, 1.29]);
  translate([154, 120, 0])
    cube([1, 1, 1.29]);
  translate([155, 120, 0])
    cube([1, 1, 1.29]);
  translate([156, 120, 0])
    cube([1, 1, 1.33]);
  translate([157, 120, 0])
    cube([1, 1, 1.33]);
  translate([158, 120, 0])
    cube([1, 1, 1.37]);
  translate([159, 120, 0])
    cube([1, 1, 1.41]);
  translate([160, 120, 0])
    cube([1, 1, 1.37]);
  translate([161, 120, 0])
    cube([1, 1, 1.37]);
  translate([162, 120, 0])
    cube([1, 1, 1.37]);
  translate([163, 120, 0])
    cube([1, 1, 1.37]);
  translate([164, 120, 0])
    cube([1, 1, 1.37]);
  translate([165, 120, 0])
    cube([1, 1, 1.37]);
  translate([166, 120, 0])
    cube([1, 1, 1.37]);
  translate([167, 120, 0])
    cube([1, 1, 1.37]);
  translate([168, 120, 0])
    cube([1, 1, 1.37]);
  translate([169, 120, 0])
    cube([1, 1, 1.37]);
  translate([170, 120, 0])
    cube([1, 1, 1.37]);
  translate([171, 120, 0])
    cube([1, 1, 1.37]);
  translate([172, 120, 0])
    cube([1, 1, 1.37]);
  translate([173, 120, 0])
    cube([1, 1, 1.37]);
  translate([174, 120, 0])
    cube([1, 1, 1.37]);
  translate([175, 120, 0])
    cube([1, 1, 1.37]);
  translate([176, 120, 0])
    cube([1, 1, 1.41]);
  translate([177, 120, 0])
    cube([1, 1, 1.41]);
  translate([178, 120, 0])
    cube([1, 1, 1.41]);
  translate([179, 120, 0])
    cube([1, 1, 1.41]);
  translate([180, 120, 0])
    cube([1, 1, 1.41]);
  translate([181, 120, 0])
    cube([1, 1, 1.41]);
  translate([182, 120, 0])
    cube([1, 1, 1.41]);
  translate([183, 120, 0])
    cube([1, 1, 1.41]);
  translate([184, 120, 0])
    cube([1, 1, 1.41]);
  translate([185, 120, 0])
    cube([1, 1, 1.41]);
  translate([186, 120, 0])
    cube([1, 1, 1.41]);
  translate([187, 120, 0])
    cube([1, 1, 1.41]);
  translate([188, 120, 0])
    cube([1, 1, 1.41]);
  translate([189, 120, 0])
    cube([1, 1, 1.45]);
  translate([190, 120, 0])
    cube([1, 1, 1.45]);
  translate([191, 120, 0])
    cube([1, 1, 1.37]);
  translate([192, 120, 0])
    cube([1, 1, 1.45]);
  translate([193, 120, 0])
    cube([1, 1, 1.45]);
  translate([194, 120, 0])
    cube([1, 1, 1.45]);
  translate([195, 120, 0])
    cube([1, 1, 1.41]);
  translate([196, 120, 0])
    cube([1, 1, 1.41]);
  translate([197, 120, 0])
    cube([1, 1, 1.41]);
  translate([198, 120, 0])
    cube([1, 1, 1.41]);
  translate([199, 120, 0])
    cube([1, 1, 1.45]);
  translate([200, 120, 0])
    cube([1, 1, 1.45]);
  translate([201, 120, 0])
    cube([1, 1, 1.41]);
  translate([202, 120, 0])
    cube([1, 1, 1.41]);
  translate([203, 120, 0])
    cube([1, 1, 1.41]);
  translate([204, 120, 0])
    cube([1, 1, 1.41]);
  translate([205, 120, 0])
    cube([1, 1, 1.41]);
  translate([206, 120, 0])
    cube([1, 1, 1.41]);
  translate([207, 120, 0])
    cube([1, 1, 1.41]);
  translate([208, 120, 0])
    cube([1, 1, 1.41]);
  translate([209, 120, 0])
    cube([1, 1, 1.41]);
  translate([210, 120, 0])
    cube([1, 1, 1.41]);
  translate([211, 120, 0])
    cube([1, 1, 1.41]);
  translate([212, 120, 0])
    cube([1, 1, 1.45]);
  translate([213, 120, 0])
    cube([1, 1, 1.45]);
  translate([214, 120, 0])
    cube([1, 1, 1.37]);
  translate([215, 120, 0])
    cube([1, 1, 1.41]);
  translate([216, 120, 0])
    cube([1, 1, 1.41]);
  translate([217, 120, 0])
    cube([1, 1, 1.41]);
  translate([218, 120, 0])
    cube([1, 1, 1.41]);
  translate([219, 120, 0])
    cube([1, 1, 1.41]);
  translate([220, 120, 0])
    cube([1, 1, 1.41]);
  translate([221, 120, 0])
    cube([1, 1, 1.41]);
  translate([222, 120, 0])
    cube([1, 1, 1.41]);
  translate([223, 120, 0])
    cube([1, 1, 1.41]);
  translate([224, 120, 0])
    cube([1, 1, 1.41]);
  translate([225, 120, 0])
    cube([1, 1, 1.37]);
  translate([226, 120, 0])
    cube([1, 1, 1.37]);
  translate([227, 120, 0])
    cube([1, 1, 1.37]);
  translate([228, 120, 0])
    cube([1, 1, 1.37]);
  translate([229, 120, 0])
    cube([1, 1, 1.37]);
  translate([230, 120, 0])
    cube([1, 1, 1.37]);
  translate([231, 120, 0])
    cube([1, 1, 1.41]);
  translate([232, 120, 0])
    cube([1, 1, 1.41]);
  translate([233, 120, 0])
    cube([1, 1, 1.37]);
  translate([234, 120, 0])
    cube([1, 1, 1.37]);
  translate([235, 120, 0])
    cube([1, 1, 1.41]);
  translate([236, 120, 0])
    cube([1, 1, 1.41]);
  translate([237, 120, 0])
    cube([1, 1, 1.41]);
  translate([238, 120, 0])
    cube([1, 1, 1.37]);
  translate([239, 120, 0])
    cube([1, 1, 1.37]);
  translate([240, 120, 0])
    cube([1, 1, 1.33]);
  translate([241, 120, 0])
    cube([1, 1, 1.37]);
  translate([242, 120, 0])
    cube([1, 1, 1.37]);
  translate([243, 120, 0])
    cube([1, 1, 1.41]);
  translate([244, 120, 0])
    cube([1, 1, 1.33]);
  translate([245, 120, 0])
    cube([1, 1, 1.37]);
  translate([246, 120, 0])
    cube([1, 1, 1.37]);
  translate([0, 121, 0])
    cube([1, 1, 1.57]);
  translate([1, 121, 0])
    cube([1, 1, 1.57]);
  translate([2, 121, 0])
    cube([1, 1, 1.57]);
  translate([3, 121, 0])
    cube([1, 1, 1.57]);
  translate([4, 121, 0])
    cube([1, 1, 1.57]);
  translate([5, 121, 0])
    cube([1, 1, 1.57]);
  translate([6, 121, 0])
    cube([1, 1, 1.57]);
  translate([7, 121, 0])
    cube([1, 1, 1.57]);
  translate([8, 121, 0])
    cube([1, 1, 1.57]);
  translate([9, 121, 0])
    cube([1, 1, 1.53]);
  translate([10, 121, 0])
    cube([1, 1, 1.53]);
  translate([11, 121, 0])
    cube([1, 1, 1.53]);
  translate([12, 121, 0])
    cube([1, 1, 1.53]);
  translate([13, 121, 0])
    cube([1, 1, 1.53]);
  translate([14, 121, 0])
    cube([1, 1, 1.57]);
  translate([15, 121, 0])
    cube([1, 1, 1.53]);
  translate([16, 121, 0])
    cube([1, 1, 1.53]);
  translate([17, 121, 0])
    cube([1, 1, 1.53]);
  translate([18, 121, 0])
    cube([1, 1, 1.53]);
  translate([19, 121, 0])
    cube([1, 1, 1.49]);
  translate([20, 121, 0])
    cube([1, 1, 1.49]);
  translate([21, 121, 0])
    cube([1, 1, 1.49]);
  translate([22, 121, 0])
    cube([1, 1, 1.49]);
  translate([23, 121, 0])
    cube([1, 1, 1.49]);
  translate([24, 121, 0])
    cube([1, 1, 1.49]);
  translate([25, 121, 0])
    cube([1, 1, 1.49]);
  translate([26, 121, 0])
    cube([1, 1, 1.49]);
  translate([27, 121, 0])
    cube([1, 1, 1.49]);
  translate([28, 121, 0])
    cube([1, 1, 1.49]);
  translate([29, 121, 0])
    cube([1, 1, 1.49]);
  translate([30, 121, 0])
    cube([1, 1, 1.45]);
  translate([31, 121, 0])
    cube([1, 1, 1.45]);
  translate([32, 121, 0])
    cube([1, 1, 1.49]);
  translate([33, 121, 0])
    cube([1, 1, 1.45]);
  translate([34, 121, 0])
    cube([1, 1, 1.45]);
  translate([35, 121, 0])
    cube([1, 1, 1.45]);
  translate([36, 121, 0])
    cube([1, 1, 1.45]);
  translate([37, 121, 0])
    cube([1, 1, 1.45]);
  translate([38, 121, 0])
    cube([1, 1, 1.45]);
  translate([39, 121, 0])
    cube([1, 1, 1.45]);
  translate([40, 121, 0])
    cube([1, 1, 1.45]);
  translate([41, 121, 0])
    cube([1, 1, 1.41]);
  translate([42, 121, 0])
    cube([1, 1, 1.45]);
  translate([43, 121, 0])
    cube([1, 1, 1.41]);
  translate([44, 121, 0])
    cube([1, 1, 1.14]);
  translate([45, 121, 0])
    cube([1, 1, 5.22]);
  translate([46, 121, 0])
    cube([1, 1, 5.37]);
  translate([47, 121, 0])
    cube([1, 1, 3.37]);
  translate([48, 121, 0])
    cube([1, 1, 3.53]);
  translate([49, 121, 0])
    cube([1, 1, 3.37]);
  translate([50, 121, 0])
    cube([1, 1, 3.92]);
  translate([51, 121, 0])
    cube([1, 1, 4.78]);
  translate([52, 121, 0])
    cube([1, 1, 5.53]);
  translate([53, 121, 0])
    cube([1, 1, 6.04]);
  translate([54, 121, 0])
    cube([1, 1, 6.27]);
  translate([55, 121, 0])
    cube([1, 1, 6.35]);
  translate([56, 121, 0])
    cube([1, 1, 6.27]);
  translate([57, 121, 0])
    cube([1, 1, 5.96]);
  translate([58, 121, 0])
    cube([1, 1, 5.69]);
  translate([59, 121, 0])
    cube([1, 1, 5.61]);
  translate([60, 121, 0])
    cube([1, 1, 5.53]);
  translate([61, 121, 0])
    cube([1, 1, 4.98]);
  translate([62, 121, 0])
    cube([1, 1, 4.82]);
  translate([63, 121, 0])
    cube([1, 1, 4.82]);
  translate([64, 121, 0])
    cube([1, 1, 5.10]);
  translate([65, 121, 0])
    cube([1, 1, 5.25]);
  translate([66, 121, 0])
    cube([1, 1, 5.45]);
  translate([67, 121, 0])
    cube([1, 1, 5.53]);
  translate([68, 121, 0])
    cube([1, 1, 5.69]);
  translate([69, 121, 0])
    cube([1, 1, 5.84]);
  translate([70, 121, 0])
    cube([1, 1, 5.84]);
  translate([71, 121, 0])
    cube([1, 1, 5.80]);
  translate([72, 121, 0])
    cube([1, 1, 5.65]);
  translate([73, 121, 0])
    cube([1, 1, 5.41]);
  translate([74, 121, 0])
    cube([1, 1, 5.25]);
  translate([75, 121, 0])
    cube([1, 1, 3.84]);
  translate([76, 121, 0])
    cube([1, 1, 0.71]);
  translate([77, 121, 0])
    cube([1, 1, 0.86]);
  translate([78, 121, 0])
    cube([1, 1, 0.86]);
  translate([79, 121, 0])
    cube([1, 1, 0.86]);
  translate([80, 121, 0])
    cube([1, 1, 1.18]);
  translate([81, 121, 0])
    cube([1, 1, 1.37]);
  translate([82, 121, 0])
    cube([1, 1, 1.57]);
  translate([83, 121, 0])
    cube([1, 1, 2.43]);
  translate([84, 121, 0])
    cube([1, 1, 2.24]);
  translate([85, 121, 0])
    cube([1, 1, 1.61]);
  translate([86, 121, 0])
    cube([1, 1, 1.69]);
  translate([87, 121, 0])
    cube([1, 1, 1.29]);
  translate([88, 121, 0])
    cube([1, 1, 1.61]);
  translate([89, 121, 0])
    cube([1, 1, 2.27]);
  translate([90, 121, 0])
    cube([1, 1, 2.90]);
  translate([91, 121, 0])
    cube([1, 1, 3.22]);
  translate([92, 121, 0])
    cube([1, 1, 3.57]);
  translate([93, 121, 0])
    cube([1, 1, 3.88]);
  translate([94, 121, 0])
    cube([1, 1, 4.00]);
  translate([95, 121, 0])
    cube([1, 1, 4.12]);
  translate([96, 121, 0])
    cube([1, 1, 4.35]);
  translate([97, 121, 0])
    cube([1, 1, 3.88]);
  translate([98, 121, 0])
    cube([1, 1, 1.25]);
  translate([99, 121, 0])
    cube([1, 1, 3.73]);
  translate([100, 121, 0])
    cube([1, 1, 3.96]);
  translate([101, 121, 0])
    cube([1, 1, 3.92]);
  translate([102, 121, 0])
    cube([1, 1, 4.00]);
  translate([103, 121, 0])
    cube([1, 1, 3.41]);
  translate([104, 121, 0])
    cube([1, 1, 2.51]);
  translate([105, 121, 0])
    cube([1, 1, 2.00]);
  translate([106, 121, 0])
    cube([1, 1, 2.55]);
  translate([107, 121, 0])
    cube([1, 1, 2.08]);
  translate([108, 121, 0])
    cube([1, 1, 2.90]);
  translate([109, 121, 0])
    cube([1, 1, 3.53]);
  translate([110, 121, 0])
    cube([1, 1, 3.57]);
  translate([111, 121, 0])
    cube([1, 1, 3.92]);
  translate([112, 121, 0])
    cube([1, 1, 3.76]);
  translate([113, 121, 0])
    cube([1, 1, 3.57]);
  translate([114, 121, 0])
    cube([1, 1, 3.84]);
  translate([115, 121, 0])
    cube([1, 1, 3.33]);
  translate([116, 121, 0])
    cube([1, 1, 3.88]);
  translate([117, 121, 0])
    cube([1, 1, 3.61]);
  translate([118, 121, 0])
    cube([1, 1, 4.00]);
  translate([119, 121, 0])
    cube([1, 1, 3.92]);
  translate([120, 121, 0])
    cube([1, 1, 4.00]);
  translate([121, 121, 0])
    cube([1, 1, 3.76]);
  translate([122, 121, 0])
    cube([1, 1, 4.00]);
  translate([123, 121, 0])
    cube([1, 1, 3.92]);
  translate([124, 121, 0])
    cube([1, 1, 4.27]);
  translate([125, 121, 0])
    cube([1, 1, 3.80]);
  translate([126, 121, 0])
    cube([1, 1, 4.04]);
  translate([127, 121, 0])
    cube([1, 1, 3.73]);
  translate([128, 121, 0])
    cube([1, 1, 3.65]);
  translate([129, 121, 0])
    cube([1, 1, 4.35]);
  translate([130, 121, 0])
    cube([1, 1, 3.84]);
  translate([131, 121, 0])
    cube([1, 1, 3.45]);
  translate([132, 121, 0])
    cube([1, 1, 3.80]);
  translate([133, 121, 0])
    cube([1, 1, 3.84]);
  translate([134, 121, 0])
    cube([1, 1, 3.76]);
  translate([135, 121, 0])
    cube([1, 1, 3.49]);
  translate([136, 121, 0])
    cube([1, 1, 3.14]);
  translate([137, 121, 0])
    cube([1, 1, 3.29]);
  translate([138, 121, 0])
    cube([1, 1, 3.61]);
  translate([139, 121, 0])
    cube([1, 1, 2.31]);
  translate([140, 121, 0])
    cube([1, 1, 3.88]);
  translate([141, 121, 0])
    cube([1, 1, 2.75]);
  translate([142, 121, 0])
    cube([1, 1, 3.29]);
  translate([143, 121, 0])
    cube([1, 1, 2.78]);
  translate([144, 121, 0])
    cube([1, 1, 3.76]);
  translate([145, 121, 0])
    cube([1, 1, 2.82]);
  translate([146, 121, 0])
    cube([1, 1, 3.73]);
  translate([147, 121, 0])
    cube([1, 1, 4.86]);
  translate([148, 121, 0])
    cube([1, 1, 1.29]);
  translate([149, 121, 0])
    cube([1, 1, 1.33]);
  translate([150, 121, 0])
    cube([1, 1, 1.33]);
  translate([151, 121, 0])
    cube([1, 1, 1.33]);
  translate([152, 121, 0])
    cube([1, 1, 1.33]);
  translate([153, 121, 0])
    cube([1, 1, 1.37]);
  translate([154, 121, 0])
    cube([1, 1, 1.37]);
  translate([155, 121, 0])
    cube([1, 1, 1.37]);
  translate([156, 121, 0])
    cube([1, 1, 1.33]);
  translate([157, 121, 0])
    cube([1, 1, 1.33]);
  translate([158, 121, 0])
    cube([1, 1, 1.37]);
  translate([159, 121, 0])
    cube([1, 1, 1.41]);
  translate([160, 121, 0])
    cube([1, 1, 1.37]);
  translate([161, 121, 0])
    cube([1, 1, 1.37]);
  translate([162, 121, 0])
    cube([1, 1, 1.37]);
  translate([163, 121, 0])
    cube([1, 1, 1.37]);
  translate([164, 121, 0])
    cube([1, 1, 1.37]);
  translate([165, 121, 0])
    cube([1, 1, 1.37]);
  translate([166, 121, 0])
    cube([1, 1, 1.37]);
  translate([167, 121, 0])
    cube([1, 1, 1.37]);
  translate([168, 121, 0])
    cube([1, 1, 1.37]);
  translate([169, 121, 0])
    cube([1, 1, 1.37]);
  translate([170, 121, 0])
    cube([1, 1, 1.37]);
  translate([171, 121, 0])
    cube([1, 1, 1.41]);
  translate([172, 121, 0])
    cube([1, 1, 1.41]);
  translate([173, 121, 0])
    cube([1, 1, 1.41]);
  translate([174, 121, 0])
    cube([1, 1, 1.41]);
  translate([175, 121, 0])
    cube([1, 1, 1.41]);
  translate([176, 121, 0])
    cube([1, 1, 1.41]);
  translate([177, 121, 0])
    cube([1, 1, 1.41]);
  translate([178, 121, 0])
    cube([1, 1, 1.41]);
  translate([179, 121, 0])
    cube([1, 1, 1.41]);
  translate([180, 121, 0])
    cube([1, 1, 1.41]);
  translate([181, 121, 0])
    cube([1, 1, 1.41]);
  translate([182, 121, 0])
    cube([1, 1, 1.41]);
  translate([183, 121, 0])
    cube([1, 1, 1.41]);
  translate([184, 121, 0])
    cube([1, 1, 1.41]);
  translate([185, 121, 0])
    cube([1, 1, 1.41]);
  translate([186, 121, 0])
    cube([1, 1, 1.41]);
  translate([187, 121, 0])
    cube([1, 1, 1.41]);
  translate([188, 121, 0])
    cube([1, 1, 1.41]);
  translate([189, 121, 0])
    cube([1, 1, 1.45]);
  translate([190, 121, 0])
    cube([1, 1, 1.41]);
  translate([191, 121, 0])
    cube([1, 1, 1.45]);
  translate([192, 121, 0])
    cube([1, 1, 1.45]);
  translate([193, 121, 0])
    cube([1, 1, 1.45]);
  translate([194, 121, 0])
    cube([1, 1, 1.45]);
  translate([195, 121, 0])
    cube([1, 1, 1.41]);
  translate([196, 121, 0])
    cube([1, 1, 1.41]);
  translate([197, 121, 0])
    cube([1, 1, 1.41]);
  translate([198, 121, 0])
    cube([1, 1, 1.41]);
  translate([199, 121, 0])
    cube([1, 1, 1.45]);
  translate([200, 121, 0])
    cube([1, 1, 1.41]);
  translate([201, 121, 0])
    cube([1, 1, 1.45]);
  translate([202, 121, 0])
    cube([1, 1, 1.45]);
  translate([203, 121, 0])
    cube([1, 1, 1.45]);
  translate([204, 121, 0])
    cube([1, 1, 1.41]);
  translate([205, 121, 0])
    cube([1, 1, 1.41]);
  translate([206, 121, 0])
    cube([1, 1, 1.41]);
  translate([207, 121, 0])
    cube([1, 1, 1.41]);
  translate([208, 121, 0])
    cube([1, 1, 1.45]);
  translate([209, 121, 0])
    cube([1, 1, 1.45]);
  translate([210, 121, 0])
    cube([1, 1, 1.45]);
  translate([211, 121, 0])
    cube([1, 1, 1.41]);
  translate([212, 121, 0])
    cube([1, 1, 1.45]);
  translate([213, 121, 0])
    cube([1, 1, 1.45]);
  translate([214, 121, 0])
    cube([1, 1, 1.37]);
  translate([215, 121, 0])
    cube([1, 1, 1.41]);
  translate([216, 121, 0])
    cube([1, 1, 1.41]);
  translate([217, 121, 0])
    cube([1, 1, 1.41]);
  translate([218, 121, 0])
    cube([1, 1, 1.41]);
  translate([219, 121, 0])
    cube([1, 1, 1.41]);
  translate([220, 121, 0])
    cube([1, 1, 1.41]);
  translate([221, 121, 0])
    cube([1, 1, 1.41]);
  translate([222, 121, 0])
    cube([1, 1, 1.41]);
  translate([223, 121, 0])
    cube([1, 1, 1.41]);
  translate([224, 121, 0])
    cube([1, 1, 1.41]);
  translate([225, 121, 0])
    cube([1, 1, 1.41]);
  translate([226, 121, 0])
    cube([1, 1, 1.41]);
  translate([227, 121, 0])
    cube([1, 1, 1.41]);
  translate([228, 121, 0])
    cube([1, 1, 1.41]);
  translate([229, 121, 0])
    cube([1, 1, 1.41]);
  translate([230, 121, 0])
    cube([1, 1, 1.37]);
  translate([231, 121, 0])
    cube([1, 1, 1.41]);
  translate([232, 121, 0])
    cube([1, 1, 1.41]);
  translate([233, 121, 0])
    cube([1, 1, 1.41]);
  translate([234, 121, 0])
    cube([1, 1, 1.41]);
  translate([235, 121, 0])
    cube([1, 1, 1.41]);
  translate([236, 121, 0])
    cube([1, 1, 1.41]);
  translate([237, 121, 0])
    cube([1, 1, 1.41]);
  translate([238, 121, 0])
    cube([1, 1, 1.41]);
  translate([239, 121, 0])
    cube([1, 1, 1.41]);
  translate([240, 121, 0])
    cube([1, 1, 1.41]);
  translate([241, 121, 0])
    cube([1, 1, 1.41]);
  translate([242, 121, 0])
    cube([1, 1, 1.41]);
  translate([243, 121, 0])
    cube([1, 1, 1.41]);
  translate([244, 121, 0])
    cube([1, 1, 1.33]);
  translate([245, 121, 0])
    cube([1, 1, 1.37]);
  translate([246, 121, 0])
    cube([1, 1, 1.37]);
  translate([0, 122, 0])
    cube([1, 1, 1.57]);
  translate([1, 122, 0])
    cube([1, 1, 1.57]);
  translate([2, 122, 0])
    cube([1, 1, 1.57]);
  translate([3, 122, 0])
    cube([1, 1, 1.57]);
  translate([4, 122, 0])
    cube([1, 1, 1.57]);
  translate([5, 122, 0])
    cube([1, 1, 1.57]);
  translate([6, 122, 0])
    cube([1, 1, 1.57]);
  translate([7, 122, 0])
    cube([1, 1, 1.57]);
  translate([8, 122, 0])
    cube([1, 1, 1.57]);
  translate([9, 122, 0])
    cube([1, 1, 1.57]);
  translate([10, 122, 0])
    cube([1, 1, 1.53]);
  translate([11, 122, 0])
    cube([1, 1, 1.57]);
  translate([12, 122, 0])
    cube([1, 1, 1.57]);
  translate([13, 122, 0])
    cube([1, 1, 1.53]);
  translate([14, 122, 0])
    cube([1, 1, 1.53]);
  translate([15, 122, 0])
    cube([1, 1, 1.53]);
  translate([16, 122, 0])
    cube([1, 1, 1.57]);
  translate([17, 122, 0])
    cube([1, 1, 1.53]);
  translate([18, 122, 0])
    cube([1, 1, 1.53]);
  translate([19, 122, 0])
    cube([1, 1, 1.53]);
  translate([20, 122, 0])
    cube([1, 1, 1.49]);
  translate([21, 122, 0])
    cube([1, 1, 1.49]);
  translate([22, 122, 0])
    cube([1, 1, 1.49]);
  translate([23, 122, 0])
    cube([1, 1, 1.53]);
  translate([24, 122, 0])
    cube([1, 1, 1.49]);
  translate([25, 122, 0])
    cube([1, 1, 1.45]);
  translate([26, 122, 0])
    cube([1, 1, 1.53]);
  translate([27, 122, 0])
    cube([1, 1, 1.49]);
  translate([28, 122, 0])
    cube([1, 1, 1.49]);
  translate([29, 122, 0])
    cube([1, 1, 1.49]);
  translate([30, 122, 0])
    cube([1, 1, 1.49]);
  translate([31, 122, 0])
    cube([1, 1, 1.49]);
  translate([32, 122, 0])
    cube([1, 1, 1.49]);
  translate([33, 122, 0])
    cube([1, 1, 1.45]);
  translate([34, 122, 0])
    cube([1, 1, 1.45]);
  translate([35, 122, 0])
    cube([1, 1, 1.41]);
  translate([36, 122, 0])
    cube([1, 1, 1.45]);
  translate([37, 122, 0])
    cube([1, 1, 1.45]);
  translate([38, 122, 0])
    cube([1, 1, 1.45]);
  translate([39, 122, 0])
    cube([1, 1, 1.45]);
  translate([40, 122, 0])
    cube([1, 1, 1.45]);
  translate([41, 122, 0])
    cube([1, 1, 1.45]);
  translate([42, 122, 0])
    cube([1, 1, 1.45]);
  translate([43, 122, 0])
    cube([1, 1, 1.45]);
  translate([44, 122, 0])
    cube([1, 1, 1.88]);
  translate([45, 122, 0])
    cube([1, 1, 1.57]);
  translate([46, 122, 0])
    cube([1, 1, 6.55]);
  translate([47, 122, 0])
    cube([1, 1, 3.33]);
  translate([48, 122, 0])
    cube([1, 1, 3.57]);
  translate([49, 122, 0])
    cube([1, 1, 3.25]);
  translate([50, 122, 0])
    cube([1, 1, 3.53]);
  translate([51, 122, 0])
    cube([1, 1, 4.27]);
  translate([52, 122, 0])
    cube([1, 1, 5.10]);
  translate([53, 122, 0])
    cube([1, 1, 5.84]);
  translate([54, 122, 0])
    cube([1, 1, 6.12]);
  translate([55, 122, 0])
    cube([1, 1, 6.20]);
  translate([56, 122, 0])
    cube([1, 1, 6.31]);
  translate([57, 122, 0])
    cube([1, 1, 6.04]);
  translate([58, 122, 0])
    cube([1, 1, 5.73]);
  translate([59, 122, 0])
    cube([1, 1, 5.61]);
  translate([60, 122, 0])
    cube([1, 1, 5.53]);
  translate([61, 122, 0])
    cube([1, 1, 5.80]);
  translate([62, 122, 0])
    cube([1, 1, 4.90]);
  translate([63, 122, 0])
    cube([1, 1, 4.82]);
  translate([64, 122, 0])
    cube([1, 1, 5.14]);
  translate([65, 122, 0])
    cube([1, 1, 5.18]);
  translate([66, 122, 0])
    cube([1, 1, 5.41]);
  translate([67, 122, 0])
    cube([1, 1, 5.57]);
  translate([68, 122, 0])
    cube([1, 1, 5.69]);
  translate([69, 122, 0])
    cube([1, 1, 5.88]);
  translate([70, 122, 0])
    cube([1, 1, 5.84]);
  translate([71, 122, 0])
    cube([1, 1, 5.84]);
  translate([72, 122, 0])
    cube([1, 1, 5.69]);
  translate([73, 122, 0])
    cube([1, 1, 5.45]);
  translate([74, 122, 0])
    cube([1, 1, 5.29]);
  translate([75, 122, 0])
    cube([1, 1, 4.78]);
  translate([76, 122, 0])
    cube([1, 1, 1.69]);
  translate([77, 122, 0])
    cube([1, 1, 0.82]);
  translate([78, 122, 0])
    cube([1, 1, 0.82]);
  translate([79, 122, 0])
    cube([1, 1, 0.90]);
  translate([80, 122, 0])
    cube([1, 1, 1.02]);
  translate([81, 122, 0])
    cube([1, 1, 1.10]);
  translate([82, 122, 0])
    cube([1, 1, 1.61]);
  translate([83, 122, 0])
    cube([1, 1, 1.57]);
  translate([84, 122, 0])
    cube([1, 1, 2.51]);
  translate([85, 122, 0])
    cube([1, 1, 1.61]);
  translate([86, 122, 0])
    cube([1, 1, 1.84]);
  translate([87, 122, 0])
    cube([1, 1, 1.45]);
  translate([88, 122, 0])
    cube([1, 1, 1.25]);
  translate([89, 122, 0])
    cube([1, 1, 1.80]);
  translate([90, 122, 0])
    cube([1, 1, 2.51]);
  translate([91, 122, 0])
    cube([1, 1, 2.90]);
  translate([92, 122, 0])
    cube([1, 1, 3.25]);
  translate([93, 122, 0])
    cube([1, 1, 3.69]);
  translate([94, 122, 0])
    cube([1, 1, 3.88]);
  translate([95, 122, 0])
    cube([1, 1, 4.12]);
  translate([96, 122, 0])
    cube([1, 1, 4.27]);
  translate([97, 122, 0])
    cube([1, 1, 3.73]);
  translate([98, 122, 0])
    cube([1, 1, 2.08]);
  translate([99, 122, 0])
    cube([1, 1, 4.16]);
  translate([100, 122, 0])
    cube([1, 1, 3.41]);
  translate([101, 122, 0])
    cube([1, 1, 3.69]);
  translate([102, 122, 0])
    cube([1, 1, 2.67]);
  translate([103, 122, 0])
    cube([1, 1, 1.88]);
  translate([104, 122, 0])
    cube([1, 1, 2.04]);
  translate([105, 122, 0])
    cube([1, 1, 2.59]);
  translate([106, 122, 0])
    cube([1, 1, 2.47]);
  translate([107, 122, 0])
    cube([1, 1, 3.29]);
  translate([108, 122, 0])
    cube([1, 1, 3.45]);
  translate([109, 122, 0])
    cube([1, 1, 3.61]);
  translate([110, 122, 0])
    cube([1, 1, 3.88]);
  translate([111, 122, 0])
    cube([1, 1, 3.84]);
  translate([112, 122, 0])
    cube([1, 1, 4.12]);
  translate([113, 122, 0])
    cube([1, 1, 3.69]);
  translate([114, 122, 0])
    cube([1, 1, 3.49]);
  translate([115, 122, 0])
    cube([1, 1, 3.49]);
  translate([116, 122, 0])
    cube([1, 1, 3.53]);
  translate([117, 122, 0])
    cube([1, 1, 4.16]);
  translate([118, 122, 0])
    cube([1, 1, 3.61]);
  translate([119, 122, 0])
    cube([1, 1, 3.49]);
  translate([120, 122, 0])
    cube([1, 1, 3.84]);
  translate([121, 122, 0])
    cube([1, 1, 4.24]);
  translate([122, 122, 0])
    cube([1, 1, 3.65]);
  translate([123, 122, 0])
    cube([1, 1, 3.76]);
  translate([124, 122, 0])
    cube([1, 1, 3.45]);
  translate([125, 122, 0])
    cube([1, 1, 3.18]);
  translate([126, 122, 0])
    cube([1, 1, 4.35]);
  translate([127, 122, 0])
    cube([1, 1, 3.73]);
  translate([128, 122, 0])
    cube([1, 1, 3.37]);
  translate([129, 122, 0])
    cube([1, 1, 4.12]);
  translate([130, 122, 0])
    cube([1, 1, 4.31]);
  translate([131, 122, 0])
    cube([1, 1, 3.45]);
  translate([132, 122, 0])
    cube([1, 1, 3.22]);
  translate([133, 122, 0])
    cube([1, 1, 4.00]);
  translate([134, 122, 0])
    cube([1, 1, 3.80]);
  translate([135, 122, 0])
    cube([1, 1, 2.78]);
  translate([136, 122, 0])
    cube([1, 1, 3.22]);
  translate([137, 122, 0])
    cube([1, 1, 3.53]);
  translate([138, 122, 0])
    cube([1, 1, 2.59]);
  translate([139, 122, 0])
    cube([1, 1, 3.53]);
  translate([140, 122, 0])
    cube([1, 1, 3.37]);
  translate([141, 122, 0])
    cube([1, 1, 3.53]);
  translate([142, 122, 0])
    cube([1, 1, 2.47]);
  translate([143, 122, 0])
    cube([1, 1, 2.98]);
  translate([144, 122, 0])
    cube([1, 1, 3.14]);
  translate([145, 122, 0])
    cube([1, 1, 2.86]);
  translate([146, 122, 0])
    cube([1, 1, 2.86]);
  translate([147, 122, 0])
    cube([1, 1, 3.73]);
  translate([148, 122, 0])
    cube([1, 1, 1.25]);
  translate([149, 122, 0])
    cube([1, 1, 1.33]);
  translate([150, 122, 0])
    cube([1, 1, 1.33]);
  translate([151, 122, 0])
    cube([1, 1, 1.33]);
  translate([152, 122, 0])
    cube([1, 1, 1.33]);
  translate([153, 122, 0])
    cube([1, 1, 1.33]);
  translate([154, 122, 0])
    cube([1, 1, 1.37]);
  translate([155, 122, 0])
    cube([1, 1, 1.33]);
  translate([156, 122, 0])
    cube([1, 1, 1.37]);
  translate([157, 122, 0])
    cube([1, 1, 1.37]);
  translate([158, 122, 0])
    cube([1, 1, 1.37]);
  translate([159, 122, 0])
    cube([1, 1, 1.37]);
  translate([160, 122, 0])
    cube([1, 1, 1.37]);
  translate([161, 122, 0])
    cube([1, 1, 1.37]);
  translate([162, 122, 0])
    cube([1, 1, 1.37]);
  translate([163, 122, 0])
    cube([1, 1, 1.37]);
  translate([164, 122, 0])
    cube([1, 1, 1.37]);
  translate([165, 122, 0])
    cube([1, 1, 1.37]);
  translate([166, 122, 0])
    cube([1, 1, 1.37]);
  translate([167, 122, 0])
    cube([1, 1, 1.41]);
  translate([168, 122, 0])
    cube([1, 1, 1.33]);
  translate([169, 122, 0])
    cube([1, 1, 1.29]);
  translate([170, 122, 0])
    cube([1, 1, 1.33]);
  translate([171, 122, 0])
    cube([1, 1, 1.41]);
  translate([172, 122, 0])
    cube([1, 1, 1.37]);
  translate([173, 122, 0])
    cube([1, 1, 1.37]);
  translate([174, 122, 0])
    cube([1, 1, 1.41]);
  translate([175, 122, 0])
    cube([1, 1, 1.41]);
  translate([176, 122, 0])
    cube([1, 1, 1.41]);
  translate([177, 122, 0])
    cube([1, 1, 1.41]);
  translate([178, 122, 0])
    cube([1, 1, 1.41]);
  translate([179, 122, 0])
    cube([1, 1, 1.41]);
  translate([180, 122, 0])
    cube([1, 1, 1.41]);
  translate([181, 122, 0])
    cube([1, 1, 1.41]);
  translate([182, 122, 0])
    cube([1, 1, 1.41]);
  translate([183, 122, 0])
    cube([1, 1, 1.41]);
  translate([184, 122, 0])
    cube([1, 1, 1.45]);
  translate([185, 122, 0])
    cube([1, 1, 1.45]);
  translate([186, 122, 0])
    cube([1, 1, 1.45]);
  translate([187, 122, 0])
    cube([1, 1, 1.45]);
  translate([188, 122, 0])
    cube([1, 1, 1.45]);
  translate([189, 122, 0])
    cube([1, 1, 1.45]);
  translate([190, 122, 0])
    cube([1, 1, 1.45]);
  translate([191, 122, 0])
    cube([1, 1, 1.45]);
  translate([192, 122, 0])
    cube([1, 1, 1.45]);
  translate([193, 122, 0])
    cube([1, 1, 1.45]);
  translate([194, 122, 0])
    cube([1, 1, 1.45]);
  translate([195, 122, 0])
    cube([1, 1, 1.41]);
  translate([196, 122, 0])
    cube([1, 1, 1.41]);
  translate([197, 122, 0])
    cube([1, 1, 1.41]);
  translate([198, 122, 0])
    cube([1, 1, 1.45]);
  translate([199, 122, 0])
    cube([1, 1, 1.45]);
  translate([200, 122, 0])
    cube([1, 1, 1.45]);
  translate([201, 122, 0])
    cube([1, 1, 1.45]);
  translate([202, 122, 0])
    cube([1, 1, 1.45]);
  translate([203, 122, 0])
    cube([1, 1, 1.45]);
  translate([204, 122, 0])
    cube([1, 1, 1.45]);
  translate([205, 122, 0])
    cube([1, 1, 1.45]);
  translate([206, 122, 0])
    cube([1, 1, 1.41]);
  translate([207, 122, 0])
    cube([1, 1, 1.41]);
  translate([208, 122, 0])
    cube([1, 1, 1.41]);
  translate([209, 122, 0])
    cube([1, 1, 1.45]);
  translate([210, 122, 0])
    cube([1, 1, 1.45]);
  translate([211, 122, 0])
    cube([1, 1, 1.45]);
  translate([212, 122, 0])
    cube([1, 1, 1.41]);
  translate([213, 122, 0])
    cube([1, 1, 1.45]);
  translate([214, 122, 0])
    cube([1, 1, 1.45]);
  translate([215, 122, 0])
    cube([1, 1, 1.49]);
  translate([216, 122, 0])
    cube([1, 1, 1.45]);
  translate([217, 122, 0])
    cube([1, 1, 1.41]);
  translate([218, 122, 0])
    cube([1, 1, 1.41]);
  translate([219, 122, 0])
    cube([1, 1, 1.41]);
  translate([220, 122, 0])
    cube([1, 1, 1.41]);
  translate([221, 122, 0])
    cube([1, 1, 1.45]);
  translate([222, 122, 0])
    cube([1, 1, 1.41]);
  translate([223, 122, 0])
    cube([1, 1, 1.41]);
  translate([224, 122, 0])
    cube([1, 1, 1.41]);
  translate([225, 122, 0])
    cube([1, 1, 1.41]);
  translate([226, 122, 0])
    cube([1, 1, 1.41]);
  translate([227, 122, 0])
    cube([1, 1, 1.41]);
  translate([228, 122, 0])
    cube([1, 1, 1.37]);
  translate([229, 122, 0])
    cube([1, 1, 1.37]);
  translate([230, 122, 0])
    cube([1, 1, 1.41]);
  translate([231, 122, 0])
    cube([1, 1, 1.41]);
  translate([232, 122, 0])
    cube([1, 1, 1.41]);
  translate([233, 122, 0])
    cube([1, 1, 1.41]);
  translate([234, 122, 0])
    cube([1, 1, 1.41]);
  translate([235, 122, 0])
    cube([1, 1, 1.41]);
  translate([236, 122, 0])
    cube([1, 1, 1.37]);
  translate([237, 122, 0])
    cube([1, 1, 1.37]);
  translate([238, 122, 0])
    cube([1, 1, 1.37]);
  translate([239, 122, 0])
    cube([1, 1, 1.37]);
  translate([240, 122, 0])
    cube([1, 1, 1.41]);
  translate([241, 122, 0])
    cube([1, 1, 1.41]);
  translate([242, 122, 0])
    cube([1, 1, 1.41]);
  translate([243, 122, 0])
    cube([1, 1, 1.41]);
  translate([244, 122, 0])
    cube([1, 1, 1.41]);
  translate([245, 122, 0])
    cube([1, 1, 1.41]);
  translate([246, 122, 0])
    cube([1, 1, 1.41]);
  translate([0, 123, 0])
    cube([1, 1, 1.57]);
  translate([1, 123, 0])
    cube([1, 1, 1.57]);
  translate([2, 123, 0])
    cube([1, 1, 1.57]);
  translate([3, 123, 0])
    cube([1, 1, 1.57]);
  translate([4, 123, 0])
    cube([1, 1, 1.57]);
  translate([5, 123, 0])
    cube([1, 1, 1.57]);
  translate([6, 123, 0])
    cube([1, 1, 1.57]);
  translate([7, 123, 0])
    cube([1, 1, 1.57]);
  translate([8, 123, 0])
    cube([1, 1, 1.57]);
  translate([9, 123, 0])
    cube([1, 1, 1.57]);
  translate([10, 123, 0])
    cube([1, 1, 1.53]);
  translate([11, 123, 0])
    cube([1, 1, 1.57]);
  translate([12, 123, 0])
    cube([1, 1, 1.57]);
  translate([13, 123, 0])
    cube([1, 1, 1.53]);
  translate([14, 123, 0])
    cube([1, 1, 1.53]);
  translate([15, 123, 0])
    cube([1, 1, 1.53]);
  translate([16, 123, 0])
    cube([1, 1, 1.49]);
  translate([17, 123, 0])
    cube([1, 1, 1.53]);
  translate([18, 123, 0])
    cube([1, 1, 1.53]);
  translate([19, 123, 0])
    cube([1, 1, 1.53]);
  translate([20, 123, 0])
    cube([1, 1, 1.49]);
  translate([21, 123, 0])
    cube([1, 1, 1.49]);
  translate([22, 123, 0])
    cube([1, 1, 1.49]);
  translate([23, 123, 0])
    cube([1, 1, 1.53]);
  translate([24, 123, 0])
    cube([1, 1, 1.49]);
  translate([25, 123, 0])
    cube([1, 1, 1.45]);
  translate([26, 123, 0])
    cube([1, 1, 1.53]);
  translate([27, 123, 0])
    cube([1, 1, 1.49]);
  translate([28, 123, 0])
    cube([1, 1, 1.49]);
  translate([29, 123, 0])
    cube([1, 1, 1.49]);
  translate([30, 123, 0])
    cube([1, 1, 1.49]);
  translate([31, 123, 0])
    cube([1, 1, 1.49]);
  translate([32, 123, 0])
    cube([1, 1, 1.49]);
  translate([33, 123, 0])
    cube([1, 1, 1.45]);
  translate([34, 123, 0])
    cube([1, 1, 1.45]);
  translate([35, 123, 0])
    cube([1, 1, 1.41]);
  translate([36, 123, 0])
    cube([1, 1, 1.45]);
  translate([37, 123, 0])
    cube([1, 1, 1.45]);
  translate([38, 123, 0])
    cube([1, 1, 1.45]);
  translate([39, 123, 0])
    cube([1, 1, 1.45]);
  translate([40, 123, 0])
    cube([1, 1, 1.45]);
  translate([41, 123, 0])
    cube([1, 1, 1.45]);
  translate([42, 123, 0])
    cube([1, 1, 1.45]);
  translate([43, 123, 0])
    cube([1, 1, 1.45]);
  translate([44, 123, 0])
    cube([1, 1, 1.10]);
  translate([45, 123, 0])
    cube([1, 1, 1.10]);
  translate([46, 123, 0])
    cube([1, 1, 7.73]);
  translate([47, 123, 0])
    cube([1, 1, 3.88]);
  translate([48, 123, 0])
    cube([1, 1, 3.53]);
  translate([49, 123, 0])
    cube([1, 1, 3.33]);
  translate([50, 123, 0])
    cube([1, 1, 3.37]);
  translate([51, 123, 0])
    cube([1, 1, 4.24]);
  translate([52, 123, 0])
    cube([1, 1, 5.06]);
  translate([53, 123, 0])
    cube([1, 1, 5.57]);
  translate([54, 123, 0])
    cube([1, 1, 5.96]);
  translate([55, 123, 0])
    cube([1, 1, 6.16]);
  translate([56, 123, 0])
    cube([1, 1, 6.31]);
  translate([57, 123, 0])
    cube([1, 1, 6.16]);
  translate([58, 123, 0])
    cube([1, 1, 5.84]);
  translate([59, 123, 0])
    cube([1, 1, 5.73]);
  translate([60, 123, 0])
    cube([1, 1, 5.33]);
  translate([61, 123, 0])
    cube([1, 1, 6.67]);
  translate([62, 123, 0])
    cube([1, 1, 5.18]);
  translate([63, 123, 0])
    cube([1, 1, 4.78]);
  translate([64, 123, 0])
    cube([1, 1, 5.14]);
  translate([65, 123, 0])
    cube([1, 1, 5.18]);
  translate([66, 123, 0])
    cube([1, 1, 5.45]);
  translate([67, 123, 0])
    cube([1, 1, 5.61]);
  translate([68, 123, 0])
    cube([1, 1, 5.69]);
  translate([69, 123, 0])
    cube([1, 1, 5.88]);
  translate([70, 123, 0])
    cube([1, 1, 5.88]);
  translate([71, 123, 0])
    cube([1, 1, 5.88]);
  translate([72, 123, 0])
    cube([1, 1, 5.69]);
  translate([73, 123, 0])
    cube([1, 1, 5.49]);
  translate([74, 123, 0])
    cube([1, 1, 5.37]);
  translate([75, 123, 0])
    cube([1, 1, 5.22]);
  translate([76, 123, 0])
    cube([1, 1, 2.98]);
  translate([77, 123, 0])
    cube([1, 1, 0.51]);
  translate([78, 123, 0])
    cube([1, 1, 0.71]);
  translate([79, 123, 0])
    cube([1, 1, 0.78]);
  translate([80, 123, 0])
    cube([1, 1, 1.10]);
  translate([81, 123, 0])
    cube([1, 1, 1.06]);
  translate([82, 123, 0])
    cube([1, 1, 1.22]);
  translate([83, 123, 0])
    cube([1, 1, 1.49]);
  translate([84, 123, 0])
    cube([1, 1, 2.59]);
  translate([85, 123, 0])
    cube([1, 1, 2.78]);
  translate([86, 123, 0])
    cube([1, 1, 1.96]);
  translate([87, 123, 0])
    cube([1, 1, 1.41]);
  translate([88, 123, 0])
    cube([1, 1, 1.14]);
  translate([89, 123, 0])
    cube([1, 1, 1.57]);
  translate([90, 123, 0])
    cube([1, 1, 2.16]);
  translate([91, 123, 0])
    cube([1, 1, 2.75]);
  translate([92, 123, 0])
    cube([1, 1, 3.25]);
  translate([93, 123, 0])
    cube([1, 1, 3.49]);
  translate([94, 123, 0])
    cube([1, 1, 3.69]);
  translate([95, 123, 0])
    cube([1, 1, 3.96]);
  translate([96, 123, 0])
    cube([1, 1, 4.12]);
  translate([97, 123, 0])
    cube([1, 1, 3.14]);
  translate([98, 123, 0])
    cube([1, 1, 3.37]);
  translate([99, 123, 0])
    cube([1, 1, 3.45]);
  translate([100, 123, 0])
    cube([1, 1, 3.80]);
  translate([101, 123, 0])
    cube([1, 1, 2.47]);
  translate([102, 123, 0])
    cube([1, 1, 1.92]);
  translate([103, 123, 0])
    cube([1, 1, 2.24]);
  translate([104, 123, 0])
    cube([1, 1, 2.78]);
  translate([105, 123, 0])
    cube([1, 1, 2.86]);
  translate([106, 123, 0])
    cube([1, 1, 4.00]);
  translate([107, 123, 0])
    cube([1, 1, 3.45]);
  translate([108, 123, 0])
    cube([1, 1, 3.88]);
  translate([109, 123, 0])
    cube([1, 1, 4.00]);
  translate([110, 123, 0])
    cube([1, 1, 3.92]);
  translate([111, 123, 0])
    cube([1, 1, 3.76]);
  translate([112, 123, 0])
    cube([1, 1, 3.92]);
  translate([113, 123, 0])
    cube([1, 1, 3.57]);
  translate([114, 123, 0])
    cube([1, 1, 3.96]);
  translate([115, 123, 0])
    cube([1, 1, 3.61]);
  translate([116, 123, 0])
    cube([1, 1, 3.88]);
  translate([117, 123, 0])
    cube([1, 1, 3.41]);
  translate([118, 123, 0])
    cube([1, 1, 3.37]);
  translate([119, 123, 0])
    cube([1, 1, 4.16]);
  translate([120, 123, 0])
    cube([1, 1, 3.92]);
  translate([121, 123, 0])
    cube([1, 1, 4.00]);
  translate([122, 123, 0])
    cube([1, 1, 3.80]);
  translate([123, 123, 0])
    cube([1, 1, 3.53]);
  translate([124, 123, 0])
    cube([1, 1, 3.88]);
  translate([125, 123, 0])
    cube([1, 1, 3.88]);
  translate([126, 123, 0])
    cube([1, 1, 3.65]);
  translate([127, 123, 0])
    cube([1, 1, 3.61]);
  translate([128, 123, 0])
    cube([1, 1, 4.35]);
  translate([129, 123, 0])
    cube([1, 1, 4.24]);
  translate([130, 123, 0])
    cube([1, 1, 3.29]);
  translate([131, 123, 0])
    cube([1, 1, 3.49]);
  translate([132, 123, 0])
    cube([1, 1, 3.69]);
  translate([133, 123, 0])
    cube([1, 1, 4.24]);
  translate([134, 123, 0])
    cube([1, 1, 4.00]);
  translate([135, 123, 0])
    cube([1, 1, 3.18]);
  translate([136, 123, 0])
    cube([1, 1, 3.06]);
  translate([137, 123, 0])
    cube([1, 1, 3.06]);
  translate([138, 123, 0])
    cube([1, 1, 2.78]);
  translate([139, 123, 0])
    cube([1, 1, 3.22]);
  translate([140, 123, 0])
    cube([1, 1, 2.47]);
  translate([141, 123, 0])
    cube([1, 1, 2.86]);
  translate([142, 123, 0])
    cube([1, 1, 2.43]);
  translate([143, 123, 0])
    cube([1, 1, 2.86]);
  translate([144, 123, 0])
    cube([1, 1, 2.78]);
  translate([145, 123, 0])
    cube([1, 1, 2.00]);
  translate([146, 123, 0])
    cube([1, 1, 3.80]);
  translate([147, 123, 0])
    cube([1, 1, 4.04]);
  translate([148, 123, 0])
    cube([1, 1, 1.29]);
  translate([149, 123, 0])
    cube([1, 1, 1.37]);
  translate([150, 123, 0])
    cube([1, 1, 1.33]);
  translate([151, 123, 0])
    cube([1, 1, 1.33]);
  translate([152, 123, 0])
    cube([1, 1, 1.33]);
  translate([153, 123, 0])
    cube([1, 1, 1.33]);
  translate([154, 123, 0])
    cube([1, 1, 1.37]);
  translate([155, 123, 0])
    cube([1, 1, 1.37]);
  translate([156, 123, 0])
    cube([1, 1, 1.37]);
  translate([157, 123, 0])
    cube([1, 1, 1.37]);
  translate([158, 123, 0])
    cube([1, 1, 1.37]);
  translate([159, 123, 0])
    cube([1, 1, 1.37]);
  translate([160, 123, 0])
    cube([1, 1, 1.37]);
  translate([161, 123, 0])
    cube([1, 1, 1.37]);
  translate([162, 123, 0])
    cube([1, 1, 1.37]);
  translate([163, 123, 0])
    cube([1, 1, 1.37]);
  translate([164, 123, 0])
    cube([1, 1, 1.37]);
  translate([165, 123, 0])
    cube([1, 1, 1.37]);
  translate([166, 123, 0])
    cube([1, 1, 1.37]);
  translate([167, 123, 0])
    cube([1, 1, 1.41]);
  translate([168, 123, 0])
    cube([1, 1, 1.33]);
  translate([169, 123, 0])
    cube([1, 1, 1.29]);
  translate([170, 123, 0])
    cube([1, 1, 1.33]);
  translate([171, 123, 0])
    cube([1, 1, 1.41]);
  translate([172, 123, 0])
    cube([1, 1, 1.37]);
  translate([173, 123, 0])
    cube([1, 1, 1.37]);
  translate([174, 123, 0])
    cube([1, 1, 1.41]);
  translate([175, 123, 0])
    cube([1, 1, 1.41]);
  translate([176, 123, 0])
    cube([1, 1, 1.41]);
  translate([177, 123, 0])
    cube([1, 1, 1.41]);
  translate([178, 123, 0])
    cube([1, 1, 1.41]);
  translate([179, 123, 0])
    cube([1, 1, 1.41]);
  translate([180, 123, 0])
    cube([1, 1, 1.41]);
  translate([181, 123, 0])
    cube([1, 1, 1.41]);
  translate([182, 123, 0])
    cube([1, 1, 1.41]);
  translate([183, 123, 0])
    cube([1, 1, 1.41]);
  translate([184, 123, 0])
    cube([1, 1, 1.45]);
  translate([185, 123, 0])
    cube([1, 1, 1.45]);
  translate([186, 123, 0])
    cube([1, 1, 1.45]);
  translate([187, 123, 0])
    cube([1, 1, 1.45]);
  translate([188, 123, 0])
    cube([1, 1, 1.45]);
  translate([189, 123, 0])
    cube([1, 1, 1.45]);
  translate([190, 123, 0])
    cube([1, 1, 1.45]);
  translate([191, 123, 0])
    cube([1, 1, 1.45]);
  translate([192, 123, 0])
    cube([1, 1, 1.45]);
  translate([193, 123, 0])
    cube([1, 1, 1.45]);
  translate([194, 123, 0])
    cube([1, 1, 1.45]);
  translate([195, 123, 0])
    cube([1, 1, 1.41]);
  translate([196, 123, 0])
    cube([1, 1, 1.45]);
  translate([197, 123, 0])
    cube([1, 1, 1.45]);
  translate([198, 123, 0])
    cube([1, 1, 1.45]);
  translate([199, 123, 0])
    cube([1, 1, 1.45]);
  translate([200, 123, 0])
    cube([1, 1, 1.45]);
  translate([201, 123, 0])
    cube([1, 1, 1.45]);
  translate([202, 123, 0])
    cube([1, 1, 1.45]);
  translate([203, 123, 0])
    cube([1, 1, 1.45]);
  translate([204, 123, 0])
    cube([1, 1, 1.45]);
  translate([205, 123, 0])
    cube([1, 1, 1.45]);
  translate([206, 123, 0])
    cube([1, 1, 1.45]);
  translate([207, 123, 0])
    cube([1, 1, 1.45]);
  translate([208, 123, 0])
    cube([1, 1, 1.45]);
  translate([209, 123, 0])
    cube([1, 1, 1.45]);
  translate([210, 123, 0])
    cube([1, 1, 1.45]);
  translate([211, 123, 0])
    cube([1, 1, 1.45]);
  translate([212, 123, 0])
    cube([1, 1, 1.49]);
  translate([213, 123, 0])
    cube([1, 1, 1.41]);
  translate([214, 123, 0])
    cube([1, 1, 1.37]);
  translate([215, 123, 0])
    cube([1, 1, 1.41]);
  translate([216, 123, 0])
    cube([1, 1, 1.45]);
  translate([217, 123, 0])
    cube([1, 1, 1.41]);
  translate([218, 123, 0])
    cube([1, 1, 1.41]);
  translate([219, 123, 0])
    cube([1, 1, 1.41]);
  translate([220, 123, 0])
    cube([1, 1, 1.41]);
  translate([221, 123, 0])
    cube([1, 1, 1.45]);
  translate([222, 123, 0])
    cube([1, 1, 1.41]);
  translate([223, 123, 0])
    cube([1, 1, 1.41]);
  translate([224, 123, 0])
    cube([1, 1, 1.41]);
  translate([225, 123, 0])
    cube([1, 1, 1.45]);
  translate([226, 123, 0])
    cube([1, 1, 1.45]);
  translate([227, 123, 0])
    cube([1, 1, 1.41]);
  translate([228, 123, 0])
    cube([1, 1, 1.49]);
  translate([229, 123, 0])
    cube([1, 1, 1.49]);
  translate([230, 123, 0])
    cube([1, 1, 1.41]);
  translate([231, 123, 0])
    cube([1, 1, 1.41]);
  translate([232, 123, 0])
    cube([1, 1, 1.41]);
  translate([233, 123, 0])
    cube([1, 1, 1.41]);
  translate([234, 123, 0])
    cube([1, 1, 1.41]);
  translate([235, 123, 0])
    cube([1, 1, 1.45]);
  translate([236, 123, 0])
    cube([1, 1, 1.45]);
  translate([237, 123, 0])
    cube([1, 1, 1.45]);
  translate([238, 123, 0])
    cube([1, 1, 1.45]);
  translate([239, 123, 0])
    cube([1, 1, 1.45]);
  translate([240, 123, 0])
    cube([1, 1, 1.41]);
  translate([241, 123, 0])
    cube([1, 1, 1.41]);
  translate([242, 123, 0])
    cube([1, 1, 1.41]);
  translate([243, 123, 0])
    cube([1, 1, 1.41]);
  translate([244, 123, 0])
    cube([1, 1, 1.41]);
  translate([245, 123, 0])
    cube([1, 1, 1.41]);
  translate([246, 123, 0])
    cube([1, 1, 1.37]);
  translate([0, 124, 0])
    cube([1, 1, 1.57]);
  translate([1, 124, 0])
    cube([1, 1, 1.57]);
  translate([2, 124, 0])
    cube([1, 1, 1.57]);
  translate([3, 124, 0])
    cube([1, 1, 1.57]);
  translate([4, 124, 0])
    cube([1, 1, 1.57]);
  translate([5, 124, 0])
    cube([1, 1, 1.57]);
  translate([6, 124, 0])
    cube([1, 1, 1.57]);
  translate([7, 124, 0])
    cube([1, 1, 1.57]);
  translate([8, 124, 0])
    cube([1, 1, 1.57]);
  translate([9, 124, 0])
    cube([1, 1, 1.57]);
  translate([10, 124, 0])
    cube([1, 1, 1.57]);
  translate([11, 124, 0])
    cube([1, 1, 1.57]);
  translate([12, 124, 0])
    cube([1, 1, 1.53]);
  translate([13, 124, 0])
    cube([1, 1, 1.53]);
  translate([14, 124, 0])
    cube([1, 1, 1.57]);
  translate([15, 124, 0])
    cube([1, 1, 1.57]);
  translate([16, 124, 0])
    cube([1, 1, 1.57]);
  translate([17, 124, 0])
    cube([1, 1, 1.53]);
  translate([18, 124, 0])
    cube([1, 1, 1.53]);
  translate([19, 124, 0])
    cube([1, 1, 1.53]);
  translate([20, 124, 0])
    cube([1, 1, 1.53]);
  translate([21, 124, 0])
    cube([1, 1, 1.53]);
  translate([22, 124, 0])
    cube([1, 1, 1.53]);
  translate([23, 124, 0])
    cube([1, 1, 1.53]);
  translate([24, 124, 0])
    cube([1, 1, 1.53]);
  translate([25, 124, 0])
    cube([1, 1, 1.53]);
  translate([26, 124, 0])
    cube([1, 1, 1.53]);
  translate([27, 124, 0])
    cube([1, 1, 1.49]);
  translate([28, 124, 0])
    cube([1, 1, 1.49]);
  translate([29, 124, 0])
    cube([1, 1, 1.49]);
  translate([30, 124, 0])
    cube([1, 1, 1.49]);
  translate([31, 124, 0])
    cube([1, 1, 1.49]);
  translate([32, 124, 0])
    cube([1, 1, 1.49]);
  translate([33, 124, 0])
    cube([1, 1, 1.45]);
  translate([34, 124, 0])
    cube([1, 1, 1.49]);
  translate([35, 124, 0])
    cube([1, 1, 1.45]);
  translate([36, 124, 0])
    cube([1, 1, 1.45]);
  translate([37, 124, 0])
    cube([1, 1, 1.53]);
  translate([38, 124, 0])
    cube([1, 1, 1.45]);
  translate([39, 124, 0])
    cube([1, 1, 1.45]);
  translate([40, 124, 0])
    cube([1, 1, 1.45]);
  translate([41, 124, 0])
    cube([1, 1, 1.45]);
  translate([42, 124, 0])
    cube([1, 1, 1.45]);
  translate([43, 124, 0])
    cube([1, 1, 1.45]);
  translate([44, 124, 0])
    cube([1, 1, 1.41]);
  translate([45, 124, 0])
    cube([1, 1, 1.45]);
  translate([46, 124, 0])
    cube([1, 1, 2.94]);
  translate([47, 124, 0])
    cube([1, 1, 5.61]);
  translate([48, 124, 0])
    cube([1, 1, 3.37]);
  translate([49, 124, 0])
    cube([1, 1, 3.45]);
  translate([50, 124, 0])
    cube([1, 1, 3.41]);
  translate([51, 124, 0])
    cube([1, 1, 3.73]);
  translate([52, 124, 0])
    cube([1, 1, 4.67]);
  translate([53, 124, 0])
    cube([1, 1, 5.37]);
  translate([54, 124, 0])
    cube([1, 1, 5.80]);
  translate([55, 124, 0])
    cube([1, 1, 6.08]);
  translate([56, 124, 0])
    cube([1, 1, 6.20]);
  translate([57, 124, 0])
    cube([1, 1, 6.27]);
  translate([58, 124, 0])
    cube([1, 1, 5.96]);
  translate([59, 124, 0])
    cube([1, 1, 5.69]);
  translate([60, 124, 0])
    cube([1, 1, 5.53]);
  translate([61, 124, 0])
    cube([1, 1, 5.76]);
  translate([62, 124, 0])
    cube([1, 1, 5.22]);
  translate([63, 124, 0])
    cube([1, 1, 4.90]);
  translate([64, 124, 0])
    cube([1, 1, 5.02]);
  translate([65, 124, 0])
    cube([1, 1, 5.10]);
  translate([66, 124, 0])
    cube([1, 1, 5.29]);
  translate([67, 124, 0])
    cube([1, 1, 5.41]);
  translate([68, 124, 0])
    cube([1, 1, 5.65]);
  translate([69, 124, 0])
    cube([1, 1, 5.92]);
  translate([70, 124, 0])
    cube([1, 1, 5.92]);
  translate([71, 124, 0])
    cube([1, 1, 5.80]);
  translate([72, 124, 0])
    cube([1, 1, 5.65]);
  translate([73, 124, 0])
    cube([1, 1, 5.49]);
  translate([74, 124, 0])
    cube([1, 1, 5.29]);
  translate([75, 124, 0])
    cube([1, 1, 5.25]);
  translate([76, 124, 0])
    cube([1, 1, 4.39]);
  translate([77, 124, 0])
    cube([1, 1, 1.61]);
  translate([78, 124, 0])
    cube([1, 1, 0.67]);
  translate([79, 124, 0])
    cube([1, 1, 0.94]);
  translate([80, 124, 0])
    cube([1, 1, 1.49]);
  translate([81, 124, 0])
    cube([1, 1, 1.61]);
  translate([82, 124, 0])
    cube([1, 1, 1.18]);
  translate([83, 124, 0])
    cube([1, 1, 0.86]);
  translate([84, 124, 0])
    cube([1, 1, 1.80]);
  translate([85, 124, 0])
    cube([1, 1, 3.69]);
  translate([86, 124, 0])
    cube([1, 1, 1.96]);
  translate([87, 124, 0])
    cube([1, 1, 1.61]);
  translate([88, 124, 0])
    cube([1, 1, 1.22]);
  translate([89, 124, 0])
    cube([1, 1, 1.37]);
  translate([90, 124, 0])
    cube([1, 1, 1.88]);
  translate([91, 124, 0])
    cube([1, 1, 2.39]);
  translate([92, 124, 0])
    cube([1, 1, 2.98]);
  translate([93, 124, 0])
    cube([1, 1, 3.33]);
  translate([94, 124, 0])
    cube([1, 1, 3.61]);
  translate([95, 124, 0])
    cube([1, 1, 3.92]);
  translate([96, 124, 0])
    cube([1, 1, 3.88]);
  translate([97, 124, 0])
    cube([1, 1, 2.86]);
  translate([98, 124, 0])
    cube([1, 1, 3.65]);
  translate([99, 124, 0])
    cube([1, 1, 3.57]);
  translate([100, 124, 0])
    cube([1, 1, 2.16]);
  translate([101, 124, 0])
    cube([1, 1, 1.37]);
  translate([102, 124, 0])
    cube([1, 1, 2.35]);
  translate([103, 124, 0])
    cube([1, 1, 2.71]);
  translate([104, 124, 0])
    cube([1, 1, 3.49]);
  translate([105, 124, 0])
    cube([1, 1, 3.84]);
  translate([106, 124, 0])
    cube([1, 1, 3.84]);
  translate([107, 124, 0])
    cube([1, 1, 3.76]);
  translate([108, 124, 0])
    cube([1, 1, 3.96]);
  translate([109, 124, 0])
    cube([1, 1, 3.33]);
  translate([110, 124, 0])
    cube([1, 1, 3.96]);
  translate([111, 124, 0])
    cube([1, 1, 4.12]);
  translate([112, 124, 0])
    cube([1, 1, 3.73]);
  translate([113, 124, 0])
    cube([1, 1, 3.41]);
  translate([114, 124, 0])
    cube([1, 1, 3.65]);
  translate([115, 124, 0])
    cube([1, 1, 3.73]);
  translate([116, 124, 0])
    cube([1, 1, 2.94]);
  translate([117, 124, 0])
    cube([1, 1, 3.57]);
  translate([118, 124, 0])
    cube([1, 1, 3.61]);
  translate([119, 124, 0])
    cube([1, 1, 3.29]);
  translate([120, 124, 0])
    cube([1, 1, 3.84]);
  translate([121, 124, 0])
    cube([1, 1, 3.92]);
  translate([122, 124, 0])
    cube([1, 1, 3.53]);
  translate([123, 124, 0])
    cube([1, 1, 3.53]);
  translate([124, 124, 0])
    cube([1, 1, 3.61]);
  translate([125, 124, 0])
    cube([1, 1, 3.96]);
  translate([126, 124, 0])
    cube([1, 1, 3.49]);
  translate([127, 124, 0])
    cube([1, 1, 3.33]);
  translate([128, 124, 0])
    cube([1, 1, 3.61]);
  translate([129, 124, 0])
    cube([1, 1, 3.49]);
  translate([130, 124, 0])
    cube([1, 1, 3.29]);
  translate([131, 124, 0])
    cube([1, 1, 2.71]);
  translate([132, 124, 0])
    cube([1, 1, 3.33]);
  translate([133, 124, 0])
    cube([1, 1, 4.43]);
  translate([134, 124, 0])
    cube([1, 1, 3.37]);
  translate([135, 124, 0])
    cube([1, 1, 3.22]);
  translate([136, 124, 0])
    cube([1, 1, 3.80]);
  translate([137, 124, 0])
    cube([1, 1, 2.59]);
  translate([138, 124, 0])
    cube([1, 1, 3.06]);
  translate([139, 124, 0])
    cube([1, 1, 2.78]);
  translate([140, 124, 0])
    cube([1, 1, 2.59]);
  translate([141, 124, 0])
    cube([1, 1, 3.49]);
  translate([142, 124, 0])
    cube([1, 1, 2.51]);
  translate([143, 124, 0])
    cube([1, 1, 3.22]);
  translate([144, 124, 0])
    cube([1, 1, 2.82]);
  translate([145, 124, 0])
    cube([1, 1, 2.47]);
  translate([146, 124, 0])
    cube([1, 1, 3.73]);
  translate([147, 124, 0])
    cube([1, 1, 3.22]);
  translate([148, 124, 0])
    cube([1, 1, 1.33]);
  translate([149, 124, 0])
    cube([1, 1, 1.33]);
  translate([150, 124, 0])
    cube([1, 1, 1.33]);
  translate([151, 124, 0])
    cube([1, 1, 1.33]);
  translate([152, 124, 0])
    cube([1, 1, 1.33]);
  translate([153, 124, 0])
    cube([1, 1, 1.37]);
  translate([154, 124, 0])
    cube([1, 1, 1.37]);
  translate([155, 124, 0])
    cube([1, 1, 1.37]);
  translate([156, 124, 0])
    cube([1, 1, 1.37]);
  translate([157, 124, 0])
    cube([1, 1, 1.37]);
  translate([158, 124, 0])
    cube([1, 1, 1.37]);
  translate([159, 124, 0])
    cube([1, 1, 1.37]);
  translate([160, 124, 0])
    cube([1, 1, 1.37]);
  translate([161, 124, 0])
    cube([1, 1, 1.37]);
  translate([162, 124, 0])
    cube([1, 1, 1.37]);
  translate([163, 124, 0])
    cube([1, 1, 1.37]);
  translate([164, 124, 0])
    cube([1, 1, 1.33]);
  translate([165, 124, 0])
    cube([1, 1, 1.37]);
  translate([166, 124, 0])
    cube([1, 1, 1.41]);
  translate([167, 124, 0])
    cube([1, 1, 1.41]);
  translate([168, 124, 0])
    cube([1, 1, 1.45]);
  translate([169, 124, 0])
    cube([1, 1, 1.41]);
  translate([170, 124, 0])
    cube([1, 1, 1.41]);
  translate([171, 124, 0])
    cube([1, 1, 1.41]);
  translate([172, 124, 0])
    cube([1, 1, 1.41]);
  translate([173, 124, 0])
    cube([1, 1, 1.41]);
  translate([174, 124, 0])
    cube([1, 1, 1.41]);
  translate([175, 124, 0])
    cube([1, 1, 1.41]);
  translate([176, 124, 0])
    cube([1, 1, 1.41]);
  translate([177, 124, 0])
    cube([1, 1, 1.41]);
  translate([178, 124, 0])
    cube([1, 1, 1.49]);
  translate([179, 124, 0])
    cube([1, 1, 1.41]);
  translate([180, 124, 0])
    cube([1, 1, 1.45]);
  translate([181, 124, 0])
    cube([1, 1, 1.49]);
  translate([182, 124, 0])
    cube([1, 1, 1.45]);
  translate([183, 124, 0])
    cube([1, 1, 1.45]);
  translate([184, 124, 0])
    cube([1, 1, 1.45]);
  translate([185, 124, 0])
    cube([1, 1, 1.45]);
  translate([186, 124, 0])
    cube([1, 1, 1.45]);
  translate([187, 124, 0])
    cube([1, 1, 1.41]);
  translate([188, 124, 0])
    cube([1, 1, 1.41]);
  translate([189, 124, 0])
    cube([1, 1, 1.41]);
  translate([190, 124, 0])
    cube([1, 1, 1.41]);
  translate([191, 124, 0])
    cube([1, 1, 1.49]);
  translate([192, 124, 0])
    cube([1, 1, 1.45]);
  translate([193, 124, 0])
    cube([1, 1, 1.45]);
  translate([194, 124, 0])
    cube([1, 1, 1.45]);
  translate([195, 124, 0])
    cube([1, 1, 1.45]);
  translate([196, 124, 0])
    cube([1, 1, 1.45]);
  translate([197, 124, 0])
    cube([1, 1, 1.45]);
  translate([198, 124, 0])
    cube([1, 1, 1.45]);
  translate([199, 124, 0])
    cube([1, 1, 1.45]);
  translate([200, 124, 0])
    cube([1, 1, 1.37]);
  translate([201, 124, 0])
    cube([1, 1, 1.45]);
  translate([202, 124, 0])
    cube([1, 1, 1.45]);
  translate([203, 124, 0])
    cube([1, 1, 1.45]);
  translate([204, 124, 0])
    cube([1, 1, 1.45]);
  translate([205, 124, 0])
    cube([1, 1, 1.45]);
  translate([206, 124, 0])
    cube([1, 1, 1.45]);
  translate([207, 124, 0])
    cube([1, 1, 1.45]);
  translate([208, 124, 0])
    cube([1, 1, 1.45]);
  translate([209, 124, 0])
    cube([1, 1, 1.45]);
  translate([210, 124, 0])
    cube([1, 1, 1.45]);
  translate([211, 124, 0])
    cube([1, 1, 1.45]);
  translate([212, 124, 0])
    cube([1, 1, 1.45]);
  translate([213, 124, 0])
    cube([1, 1, 1.45]);
  translate([214, 124, 0])
    cube([1, 1, 1.45]);
  translate([215, 124, 0])
    cube([1, 1, 1.45]);
  translate([216, 124, 0])
    cube([1, 1, 1.45]);
  translate([217, 124, 0])
    cube([1, 1, 1.45]);
  translate([218, 124, 0])
    cube([1, 1, 1.45]);
  translate([219, 124, 0])
    cube([1, 1, 1.45]);
  translate([220, 124, 0])
    cube([1, 1, 1.41]);
  translate([221, 124, 0])
    cube([1, 1, 1.41]);
  translate([222, 124, 0])
    cube([1, 1, 1.45]);
  translate([223, 124, 0])
    cube([1, 1, 1.45]);
  translate([224, 124, 0])
    cube([1, 1, 1.45]);
  translate([225, 124, 0])
    cube([1, 1, 1.45]);
  translate([226, 124, 0])
    cube([1, 1, 1.45]);
  translate([227, 124, 0])
    cube([1, 1, 1.45]);
  translate([228, 124, 0])
    cube([1, 1, 1.45]);
  translate([229, 124, 0])
    cube([1, 1, 1.45]);
  translate([230, 124, 0])
    cube([1, 1, 1.45]);
  translate([231, 124, 0])
    cube([1, 1, 1.45]);
  translate([232, 124, 0])
    cube([1, 1, 1.45]);
  translate([233, 124, 0])
    cube([1, 1, 1.41]);
  translate([234, 124, 0])
    cube([1, 1, 1.45]);
  translate([235, 124, 0])
    cube([1, 1, 1.45]);
  translate([236, 124, 0])
    cube([1, 1, 1.45]);
  translate([237, 124, 0])
    cube([1, 1, 1.41]);
  translate([238, 124, 0])
    cube([1, 1, 1.45]);
  translate([239, 124, 0])
    cube([1, 1, 1.41]);
  translate([240, 124, 0])
    cube([1, 1, 1.45]);
  translate([241, 124, 0])
    cube([1, 1, 1.45]);
  translate([242, 124, 0])
    cube([1, 1, 1.49]);
  translate([243, 124, 0])
    cube([1, 1, 1.45]);
  translate([244, 124, 0])
    cube([1, 1, 1.41]);
  translate([245, 124, 0])
    cube([1, 1, 1.41]);
  translate([246, 124, 0])
    cube([1, 1, 1.41]);
  translate([0, 125, 0])
    cube([1, 1, 1.61]);
  translate([1, 125, 0])
    cube([1, 1, 1.53]);
  translate([2, 125, 0])
    cube([1, 1, 1.61]);
  translate([3, 125, 0])
    cube([1, 1, 1.57]);
  translate([4, 125, 0])
    cube([1, 1, 1.57]);
  translate([5, 125, 0])
    cube([1, 1, 1.57]);
  translate([6, 125, 0])
    cube([1, 1, 1.57]);
  translate([7, 125, 0])
    cube([1, 1, 1.57]);
  translate([8, 125, 0])
    cube([1, 1, 1.57]);
  translate([9, 125, 0])
    cube([1, 1, 1.57]);
  translate([10, 125, 0])
    cube([1, 1, 1.57]);
  translate([11, 125, 0])
    cube([1, 1, 1.57]);
  translate([12, 125, 0])
    cube([1, 1, 1.57]);
  translate([13, 125, 0])
    cube([1, 1, 1.57]);
  translate([14, 125, 0])
    cube([1, 1, 1.57]);
  translate([15, 125, 0])
    cube([1, 1, 1.57]);
  translate([16, 125, 0])
    cube([1, 1, 1.57]);
  translate([17, 125, 0])
    cube([1, 1, 1.57]);
  translate([18, 125, 0])
    cube([1, 1, 1.57]);
  translate([19, 125, 0])
    cube([1, 1, 1.57]);
  translate([20, 125, 0])
    cube([1, 1, 1.53]);
  translate([21, 125, 0])
    cube([1, 1, 1.53]);
  translate([22, 125, 0])
    cube([1, 1, 1.53]);
  translate([23, 125, 0])
    cube([1, 1, 1.53]);
  translate([24, 125, 0])
    cube([1, 1, 1.53]);
  translate([25, 125, 0])
    cube([1, 1, 1.49]);
  translate([26, 125, 0])
    cube([1, 1, 1.49]);
  translate([27, 125, 0])
    cube([1, 1, 1.49]);
  translate([28, 125, 0])
    cube([1, 1, 1.49]);
  translate([29, 125, 0])
    cube([1, 1, 1.53]);
  translate([30, 125, 0])
    cube([1, 1, 1.49]);
  translate([31, 125, 0])
    cube([1, 1, 1.49]);
  translate([32, 125, 0])
    cube([1, 1, 1.49]);
  translate([33, 125, 0])
    cube([1, 1, 1.49]);
  translate([34, 125, 0])
    cube([1, 1, 1.49]);
  translate([35, 125, 0])
    cube([1, 1, 1.49]);
  translate([36, 125, 0])
    cube([1, 1, 1.45]);
  translate([37, 125, 0])
    cube([1, 1, 1.49]);
  translate([38, 125, 0])
    cube([1, 1, 1.45]);
  translate([39, 125, 0])
    cube([1, 1, 1.45]);
  translate([40, 125, 0])
    cube([1, 1, 1.45]);
  translate([41, 125, 0])
    cube([1, 1, 1.45]);
  translate([42, 125, 0])
    cube([1, 1, 1.45]);
  translate([43, 125, 0])
    cube([1, 1, 1.45]);
  translate([44, 125, 0])
    cube([1, 1, 1.45]);
  translate([45, 125, 0])
    cube([1, 1, 1.45]);
  translate([46, 125, 0])
    cube([1, 1, 1.65]);
  translate([47, 125, 0])
    cube([1, 1, 6.67]);
  translate([48, 125, 0])
    cube([1, 1, 3.18]);
  translate([49, 125, 0])
    cube([1, 1, 3.37]);
  translate([50, 125, 0])
    cube([1, 1, 3.45]);
  translate([51, 125, 0])
    cube([1, 1, 3.65]);
  translate([52, 125, 0])
    cube([1, 1, 4.43]);
  translate([53, 125, 0])
    cube([1, 1, 5.14]);
  translate([54, 125, 0])
    cube([1, 1, 5.69]);
  translate([55, 125, 0])
    cube([1, 1, 6.04]);
  translate([56, 125, 0])
    cube([1, 1, 6.20]);
  translate([57, 125, 0])
    cube([1, 1, 6.27]);
  translate([58, 125, 0])
    cube([1, 1, 6.04]);
  translate([59, 125, 0])
    cube([1, 1, 5.73]);
  translate([60, 125, 0])
    cube([1, 1, 5.57]);
  translate([61, 125, 0])
    cube([1, 1, 5.57]);
  translate([62, 125, 0])
    cube([1, 1, 5.18]);
  translate([63, 125, 0])
    cube([1, 1, 4.78]);
  translate([64, 125, 0])
    cube([1, 1, 4.86]);
  translate([65, 125, 0])
    cube([1, 1, 5.10]);
  translate([66, 125, 0])
    cube([1, 1, 5.33]);
  translate([67, 125, 0])
    cube([1, 1, 5.53]);
  translate([68, 125, 0])
    cube([1, 1, 5.65]);
  translate([69, 125, 0])
    cube([1, 1, 5.96]);
  translate([70, 125, 0])
    cube([1, 1, 5.88]);
  translate([71, 125, 0])
    cube([1, 1, 5.73]);
  translate([72, 125, 0])
    cube([1, 1, 5.69]);
  translate([73, 125, 0])
    cube([1, 1, 5.53]);
  translate([74, 125, 0])
    cube([1, 1, 5.33]);
  translate([75, 125, 0])
    cube([1, 1, 5.25]);
  translate([76, 125, 0])
    cube([1, 1, 5.10]);
  translate([77, 125, 0])
    cube([1, 1, 2.98]);
  translate([78, 125, 0])
    cube([1, 1, 0.43]);
  translate([79, 125, 0])
    cube([1, 1, 1.41]);
  translate([80, 125, 0])
    cube([1, 1, 1.33]);
  translate([81, 125, 0])
    cube([1, 1, 1.65]);
  translate([82, 125, 0])
    cube([1, 1, 2.47]);
  translate([83, 125, 0])
    cube([1, 1, 1.29]);
  translate([84, 125, 0])
    cube([1, 1, 1.57]);
  translate([85, 125, 0])
    cube([1, 1, 2.82]);
  translate([86, 125, 0])
    cube([1, 1, 2.24]);
  translate([87, 125, 0])
    cube([1, 1, 1.69]);
  translate([88, 125, 0])
    cube([1, 1, 1.22]);
  translate([89, 125, 0])
    cube([1, 1, 1.22]);
  translate([90, 125, 0])
    cube([1, 1, 1.57]);
  translate([91, 125, 0])
    cube([1, 1, 2.08]);
  translate([92, 125, 0])
    cube([1, 1, 2.67]);
  translate([93, 125, 0])
    cube([1, 1, 3.18]);
  translate([94, 125, 0])
    cube([1, 1, 3.49]);
  translate([95, 125, 0])
    cube([1, 1, 3.88]);
  translate([96, 125, 0])
    cube([1, 1, 3.73]);
  translate([97, 125, 0])
    cube([1, 1, 1.88]);
  translate([98, 125, 0])
    cube([1, 1, 2.47]);
  translate([99, 125, 0])
    cube([1, 1, 2.16]);
  translate([100, 125, 0])
    cube([1, 1, 1.73]);
  translate([101, 125, 0])
    cube([1, 1, 1.80]);
  translate([102, 125, 0])
    cube([1, 1, 2.78]);
  translate([103, 125, 0])
    cube([1, 1, 3.37]);
  translate([104, 125, 0])
    cube([1, 1, 4.00]);
  translate([105, 125, 0])
    cube([1, 1, 3.73]);
  translate([106, 125, 0])
    cube([1, 1, 3.92]);
  translate([107, 125, 0])
    cube([1, 1, 3.92]);
  translate([108, 125, 0])
    cube([1, 1, 3.65]);
  translate([109, 125, 0])
    cube([1, 1, 3.61]);
  translate([110, 125, 0])
    cube([1, 1, 3.10]);
  translate([111, 125, 0])
    cube([1, 1, 3.61]);
  translate([112, 125, 0])
    cube([1, 1, 3.57]);
  translate([113, 125, 0])
    cube([1, 1, 3.61]);
  translate([114, 125, 0])
    cube([1, 1, 3.61]);
  translate([115, 125, 0])
    cube([1, 1, 2.98]);
  translate([116, 125, 0])
    cube([1, 1, 3.65]);
  translate([117, 125, 0])
    cube([1, 1, 3.22]);
  translate([118, 125, 0])
    cube([1, 1, 3.06]);
  translate([119, 125, 0])
    cube([1, 1, 3.29]);
  translate([120, 125, 0])
    cube([1, 1, 3.61]);
  translate([121, 125, 0])
    cube([1, 1, 2.55]);
  translate([122, 125, 0])
    cube([1, 1, 3.80]);
  translate([123, 125, 0])
    cube([1, 1, 3.57]);
  translate([124, 125, 0])
    cube([1, 1, 3.29]);
  translate([125, 125, 0])
    cube([1, 1, 3.49]);
  translate([126, 125, 0])
    cube([1, 1, 3.49]);
  translate([127, 125, 0])
    cube([1, 1, 3.65]);
  translate([128, 125, 0])
    cube([1, 1, 3.92]);
  translate([129, 125, 0])
    cube([1, 1, 3.96]);
  translate([130, 125, 0])
    cube([1, 1, 3.33]);
  translate([131, 125, 0])
    cube([1, 1, 2.75]);
  translate([132, 125, 0])
    cube([1, 1, 2.67]);
  translate([133, 125, 0])
    cube([1, 1, 3.84]);
  translate([134, 125, 0])
    cube([1, 1, 3.06]);
  translate([135, 125, 0])
    cube([1, 1, 3.22]);
  translate([136, 125, 0])
    cube([1, 1, 4.08]);
  translate([137, 125, 0])
    cube([1, 1, 3.22]);
  translate([138, 125, 0])
    cube([1, 1, 2.78]);
  translate([139, 125, 0])
    cube([1, 1, 2.86]);
  translate([140, 125, 0])
    cube([1, 1, 2.04]);
  translate([141, 125, 0])
    cube([1, 1, 3.49]);
  translate([142, 125, 0])
    cube([1, 1, 2.08]);
  translate([143, 125, 0])
    cube([1, 1, 2.24]);
  translate([144, 125, 0])
    cube([1, 1, 2.47]);
  translate([145, 125, 0])
    cube([1, 1, 2.67]);
  translate([146, 125, 0])
    cube([1, 1, 2.71]);
  translate([147, 125, 0])
    cube([1, 1, 1.06]);
  translate([148, 125, 0])
    cube([1, 1, 1.33]);
  translate([149, 125, 0])
    cube([1, 1, 1.37]);
  translate([150, 125, 0])
    cube([1, 1, 1.33]);
  translate([151, 125, 0])
    cube([1, 1, 1.37]);
  translate([152, 125, 0])
    cube([1, 1, 1.33]);
  translate([153, 125, 0])
    cube([1, 1, 1.37]);
  translate([154, 125, 0])
    cube([1, 1, 1.37]);
  translate([155, 125, 0])
    cube([1, 1, 1.37]);
  translate([156, 125, 0])
    cube([1, 1, 1.37]);
  translate([157, 125, 0])
    cube([1, 1, 1.37]);
  translate([158, 125, 0])
    cube([1, 1, 1.37]);
  translate([159, 125, 0])
    cube([1, 1, 1.37]);
  translate([160, 125, 0])
    cube([1, 1, 1.37]);
  translate([161, 125, 0])
    cube([1, 1, 1.37]);
  translate([162, 125, 0])
    cube([1, 1, 1.37]);
  translate([163, 125, 0])
    cube([1, 1, 1.33]);
  translate([164, 125, 0])
    cube([1, 1, 1.33]);
  translate([165, 125, 0])
    cube([1, 1, 1.37]);
  translate([166, 125, 0])
    cube([1, 1, 1.41]);
  translate([167, 125, 0])
    cube([1, 1, 1.41]);
  translate([168, 125, 0])
    cube([1, 1, 1.41]);
  translate([169, 125, 0])
    cube([1, 1, 1.41]);
  translate([170, 125, 0])
    cube([1, 1, 1.41]);
  translate([171, 125, 0])
    cube([1, 1, 1.41]);
  translate([172, 125, 0])
    cube([1, 1, 1.41]);
  translate([173, 125, 0])
    cube([1, 1, 1.37]);
  translate([174, 125, 0])
    cube([1, 1, 1.41]);
  translate([175, 125, 0])
    cube([1, 1, 1.41]);
  translate([176, 125, 0])
    cube([1, 1, 1.45]);
  translate([177, 125, 0])
    cube([1, 1, 1.45]);
  translate([178, 125, 0])
    cube([1, 1, 1.45]);
  translate([179, 125, 0])
    cube([1, 1, 1.45]);
  translate([180, 125, 0])
    cube([1, 1, 1.41]);
  translate([181, 125, 0])
    cube([1, 1, 1.41]);
  translate([182, 125, 0])
    cube([1, 1, 1.45]);
  translate([183, 125, 0])
    cube([1, 1, 1.45]);
  translate([184, 125, 0])
    cube([1, 1, 1.45]);
  translate([185, 125, 0])
    cube([1, 1, 1.45]);
  translate([186, 125, 0])
    cube([1, 1, 1.45]);
  translate([187, 125, 0])
    cube([1, 1, 1.41]);
  translate([188, 125, 0])
    cube([1, 1, 1.45]);
  translate([189, 125, 0])
    cube([1, 1, 1.45]);
  translate([190, 125, 0])
    cube([1, 1, 1.45]);
  translate([191, 125, 0])
    cube([1, 1, 1.45]);
  translate([192, 125, 0])
    cube([1, 1, 1.45]);
  translate([193, 125, 0])
    cube([1, 1, 1.45]);
  translate([194, 125, 0])
    cube([1, 1, 1.45]);
  translate([195, 125, 0])
    cube([1, 1, 1.45]);
  translate([196, 125, 0])
    cube([1, 1, 1.45]);
  translate([197, 125, 0])
    cube([1, 1, 1.45]);
  translate([198, 125, 0])
    cube([1, 1, 1.45]);
  translate([199, 125, 0])
    cube([1, 1, 1.45]);
  translate([200, 125, 0])
    cube([1, 1, 1.45]);
  translate([201, 125, 0])
    cube([1, 1, 1.41]);
  translate([202, 125, 0])
    cube([1, 1, 1.45]);
  translate([203, 125, 0])
    cube([1, 1, 1.45]);
  translate([204, 125, 0])
    cube([1, 1, 1.45]);
  translate([205, 125, 0])
    cube([1, 1, 1.45]);
  translate([206, 125, 0])
    cube([1, 1, 1.45]);
  translate([207, 125, 0])
    cube([1, 1, 1.45]);
  translate([208, 125, 0])
    cube([1, 1, 1.45]);
  translate([209, 125, 0])
    cube([1, 1, 1.45]);
  translate([210, 125, 0])
    cube([1, 1, 1.45]);
  translate([211, 125, 0])
    cube([1, 1, 1.45]);
  translate([212, 125, 0])
    cube([1, 1, 1.45]);
  translate([213, 125, 0])
    cube([1, 1, 1.45]);
  translate([214, 125, 0])
    cube([1, 1, 1.45]);
  translate([215, 125, 0])
    cube([1, 1, 1.45]);
  translate([216, 125, 0])
    cube([1, 1, 1.45]);
  translate([217, 125, 0])
    cube([1, 1, 1.45]);
  translate([218, 125, 0])
    cube([1, 1, 1.45]);
  translate([219, 125, 0])
    cube([1, 1, 1.45]);
  translate([220, 125, 0])
    cube([1, 1, 1.45]);
  translate([221, 125, 0])
    cube([1, 1, 1.45]);
  translate([222, 125, 0])
    cube([1, 1, 1.45]);
  translate([223, 125, 0])
    cube([1, 1, 1.45]);
  translate([224, 125, 0])
    cube([1, 1, 1.45]);
  translate([225, 125, 0])
    cube([1, 1, 1.45]);
  translate([226, 125, 0])
    cube([1, 1, 1.45]);
  translate([227, 125, 0])
    cube([1, 1, 1.45]);
  translate([228, 125, 0])
    cube([1, 1, 1.45]);
  translate([229, 125, 0])
    cube([1, 1, 1.45]);
  translate([230, 125, 0])
    cube([1, 1, 1.45]);
  translate([231, 125, 0])
    cube([1, 1, 1.45]);
  translate([232, 125, 0])
    cube([1, 1, 1.45]);
  translate([233, 125, 0])
    cube([1, 1, 1.41]);
  translate([234, 125, 0])
    cube([1, 1, 1.41]);
  translate([235, 125, 0])
    cube([1, 1, 1.45]);
  translate([236, 125, 0])
    cube([1, 1, 1.41]);
  translate([237, 125, 0])
    cube([1, 1, 1.45]);
  translate([238, 125, 0])
    cube([1, 1, 1.45]);
  translate([239, 125, 0])
    cube([1, 1, 1.45]);
  translate([240, 125, 0])
    cube([1, 1, 1.41]);
  translate([241, 125, 0])
    cube([1, 1, 1.45]);
  translate([242, 125, 0])
    cube([1, 1, 1.45]);
  translate([243, 125, 0])
    cube([1, 1, 1.45]);
  translate([244, 125, 0])
    cube([1, 1, 1.37]);
  translate([245, 125, 0])
    cube([1, 1, 1.41]);
  translate([246, 125, 0])
    cube([1, 1, 1.45]);
  translate([0, 126, 0])
    cube([1, 1, 1.61]);
  translate([1, 126, 0])
    cube([1, 1, 1.53]);
  translate([2, 126, 0])
    cube([1, 1, 1.61]);
  translate([3, 126, 0])
    cube([1, 1, 1.57]);
  translate([4, 126, 0])
    cube([1, 1, 1.61]);
  translate([5, 126, 0])
    cube([1, 1, 1.61]);
  translate([6, 126, 0])
    cube([1, 1, 1.57]);
  translate([7, 126, 0])
    cube([1, 1, 1.57]);
  translate([8, 126, 0])
    cube([1, 1, 1.57]);
  translate([9, 126, 0])
    cube([1, 1, 1.61]);
  translate([10, 126, 0])
    cube([1, 1, 1.61]);
  translate([11, 126, 0])
    cube([1, 1, 1.57]);
  translate([12, 126, 0])
    cube([1, 1, 1.57]);
  translate([13, 126, 0])
    cube([1, 1, 1.57]);
  translate([14, 126, 0])
    cube([1, 1, 1.57]);
  translate([15, 126, 0])
    cube([1, 1, 1.57]);
  translate([16, 126, 0])
    cube([1, 1, 1.57]);
  translate([17, 126, 0])
    cube([1, 1, 1.57]);
  translate([18, 126, 0])
    cube([1, 1, 1.57]);
  translate([19, 126, 0])
    cube([1, 1, 1.57]);
  translate([20, 126, 0])
    cube([1, 1, 1.53]);
  translate([21, 126, 0])
    cube([1, 1, 1.53]);
  translate([22, 126, 0])
    cube([1, 1, 1.53]);
  translate([23, 126, 0])
    cube([1, 1, 1.53]);
  translate([24, 126, 0])
    cube([1, 1, 1.53]);
  translate([25, 126, 0])
    cube([1, 1, 1.49]);
  translate([26, 126, 0])
    cube([1, 1, 1.49]);
  translate([27, 126, 0])
    cube([1, 1, 1.49]);
  translate([28, 126, 0])
    cube([1, 1, 1.49]);
  translate([29, 126, 0])
    cube([1, 1, 1.53]);
  translate([30, 126, 0])
    cube([1, 1, 1.49]);
  translate([31, 126, 0])
    cube([1, 1, 1.49]);
  translate([32, 126, 0])
    cube([1, 1, 1.49]);
  translate([33, 126, 0])
    cube([1, 1, 1.49]);
  translate([34, 126, 0])
    cube([1, 1, 1.49]);
  translate([35, 126, 0])
    cube([1, 1, 1.49]);
  translate([36, 126, 0])
    cube([1, 1, 1.45]);
  translate([37, 126, 0])
    cube([1, 1, 1.49]);
  translate([38, 126, 0])
    cube([1, 1, 1.45]);
  translate([39, 126, 0])
    cube([1, 1, 1.45]);
  translate([40, 126, 0])
    cube([1, 1, 1.45]);
  translate([41, 126, 0])
    cube([1, 1, 1.45]);
  translate([42, 126, 0])
    cube([1, 1, 1.45]);
  translate([43, 126, 0])
    cube([1, 1, 1.45]);
  translate([44, 126, 0])
    cube([1, 1, 1.45]);
  translate([45, 126, 0])
    cube([1, 1, 1.45]);
  translate([46, 126, 0])
    cube([1, 1, 1.29]);
  translate([47, 126, 0])
    cube([1, 1, 7.45]);
  translate([48, 126, 0])
    cube([1, 1, 4.47]);
  translate([49, 126, 0])
    cube([1, 1, 3.37]);
  translate([50, 126, 0])
    cube([1, 1, 3.45]);
  translate([51, 126, 0])
    cube([1, 1, 3.49]);
  translate([52, 126, 0])
    cube([1, 1, 4.16]);
  translate([53, 126, 0])
    cube([1, 1, 4.82]);
  translate([54, 126, 0])
    cube([1, 1, 5.49]);
  translate([55, 126, 0])
    cube([1, 1, 5.96]);
  translate([56, 126, 0])
    cube([1, 1, 6.16]);
  translate([57, 126, 0])
    cube([1, 1, 6.16]);
  translate([58, 126, 0])
    cube([1, 1, 6.24]);
  translate([59, 126, 0])
    cube([1, 1, 5.84]);
  translate([60, 126, 0])
    cube([1, 1, 5.57]);
  translate([61, 126, 0])
    cube([1, 1, 5.57]);
  translate([62, 126, 0])
    cube([1, 1, 5.65]);
  translate([63, 126, 0])
    cube([1, 1, 4.71]);
  translate([64, 126, 0])
    cube([1, 1, 4.82]);
  translate([65, 126, 0])
    cube([1, 1, 5.06]);
  translate([66, 126, 0])
    cube([1, 1, 5.25]);
  translate([67, 126, 0])
    cube([1, 1, 5.45]);
  translate([68, 126, 0])
    cube([1, 1, 5.65]);
  translate([69, 126, 0])
    cube([1, 1, 5.96]);
  translate([70, 126, 0])
    cube([1, 1, 5.88]);
  translate([71, 126, 0])
    cube([1, 1, 5.73]);
  translate([72, 126, 0])
    cube([1, 1, 5.69]);
  translate([73, 126, 0])
    cube([1, 1, 5.53]);
  translate([74, 126, 0])
    cube([1, 1, 5.49]);
  translate([75, 126, 0])
    cube([1, 1, 5.33]);
  translate([76, 126, 0])
    cube([1, 1, 5.22]);
  translate([77, 126, 0])
    cube([1, 1, 4.35]);
  translate([78, 126, 0])
    cube([1, 1, 1.29]);
  translate([79, 126, 0])
    cube([1, 1, 1.80]);
  translate([80, 126, 0])
    cube([1, 1, 2.00]);
  translate([81, 126, 0])
    cube([1, 1, 1.61]);
  translate([82, 126, 0])
    cube([1, 1, 2.04]);
  translate([83, 126, 0])
    cube([1, 1, 0.67]);
  translate([84, 126, 0])
    cube([1, 1, 1.80]);
  translate([85, 126, 0])
    cube([1, 1, 2.47]);
  translate([86, 126, 0])
    cube([1, 1, 2.51]);
  translate([87, 126, 0])
    cube([1, 1, 2.04]);
  translate([88, 126, 0])
    cube([1, 1, 1.33]);
  translate([89, 126, 0])
    cube([1, 1, 1.10]);
  translate([90, 126, 0])
    cube([1, 1, 1.49]);
  translate([91, 126, 0])
    cube([1, 1, 1.76]);
  translate([92, 126, 0])
    cube([1, 1, 2.24]);
  translate([93, 126, 0])
    cube([1, 1, 2.90]);
  translate([94, 126, 0])
    cube([1, 1, 3.22]);
  translate([95, 126, 0])
    cube([1, 1, 3.57]);
  translate([96, 126, 0])
    cube([1, 1, 3.37]);
  translate([97, 126, 0])
    cube([1, 1, 1.84]);
  translate([98, 126, 0])
    cube([1, 1, 2.82]);
  translate([99, 126, 0])
    cube([1, 1, 0.90]);
  translate([100, 126, 0])
    cube([1, 1, 2.08]);
  translate([101, 126, 0])
    cube([1, 1, 3.14]);
  translate([102, 126, 0])
    cube([1, 1, 3.61]);
  translate([103, 126, 0])
    cube([1, 1, 3.76]);
  translate([104, 126, 0])
    cube([1, 1, 3.37]);
  translate([105, 126, 0])
    cube([1, 1, 3.22]);
  translate([106, 126, 0])
    cube([1, 1, 3.22]);
  translate([107, 126, 0])
    cube([1, 1, 3.29]);
  translate([108, 126, 0])
    cube([1, 1, 3.33]);
  translate([109, 126, 0])
    cube([1, 1, 3.22]);
  translate([110, 126, 0])
    cube([1, 1, 3.69]);
  translate([111, 126, 0])
    cube([1, 1, 2.94]);
  translate([112, 126, 0])
    cube([1, 1, 3.41]);
  translate([113, 126, 0])
    cube([1, 1, 2.51]);
  translate([114, 126, 0])
    cube([1, 1, 3.06]);
  translate([115, 126, 0])
    cube([1, 1, 2.82]);
  translate([116, 126, 0])
    cube([1, 1, 2.82]);
  translate([117, 126, 0])
    cube([1, 1, 2.63]);
  translate([118, 126, 0])
    cube([1, 1, 3.49]);
  translate([119, 126, 0])
    cube([1, 1, 2.78]);
  translate([120, 126, 0])
    cube([1, 1, 3.65]);
  translate([121, 126, 0])
    cube([1, 1, 3.33]);
  translate([122, 126, 0])
    cube([1, 1, 2.98]);
  translate([123, 126, 0])
    cube([1, 1, 3.73]);
  translate([124, 126, 0])
    cube([1, 1, 4.20]);
  translate([125, 126, 0])
    cube([1, 1, 4.04]);
  translate([126, 126, 0])
    cube([1, 1, 2.82]);
  translate([127, 126, 0])
    cube([1, 1, 3.14]);
  translate([128, 126, 0])
    cube([1, 1, 3.10]);
  translate([129, 126, 0])
    cube([1, 1, 3.49]);
  translate([130, 126, 0])
    cube([1, 1, 3.53]);
  translate([131, 126, 0])
    cube([1, 1, 2.47]);
  translate([132, 126, 0])
    cube([1, 1, 3.02]);
  translate([133, 126, 0])
    cube([1, 1, 3.88]);
  translate([134, 126, 0])
    cube([1, 1, 2.71]);
  translate([135, 126, 0])
    cube([1, 1, 3.53]);
  translate([136, 126, 0])
    cube([1, 1, 3.18]);
  translate([137, 126, 0])
    cube([1, 1, 3.10]);
  translate([138, 126, 0])
    cube([1, 1, 3.22]);
  translate([139, 126, 0])
    cube([1, 1, 2.63]);
  translate([140, 126, 0])
    cube([1, 1, 2.43]);
  translate([141, 126, 0])
    cube([1, 1, 2.47]);
  translate([142, 126, 0])
    cube([1, 1, 3.22]);
  translate([143, 126, 0])
    cube([1, 1, 2.00]);
  translate([144, 126, 0])
    cube([1, 1, 2.27]);
  translate([145, 126, 0])
    cube([1, 1, 3.14]);
  translate([146, 126, 0])
    cube([1, 1, 2.51]);
  translate([147, 126, 0])
    cube([1, 1, 1.37]);
  translate([148, 126, 0])
    cube([1, 1, 1.33]);
  translate([149, 126, 0])
    cube([1, 1, 1.37]);
  translate([150, 126, 0])
    cube([1, 1, 1.33]);
  translate([151, 126, 0])
    cube([1, 1, 1.37]);
  translate([152, 126, 0])
    cube([1, 1, 1.33]);
  translate([153, 126, 0])
    cube([1, 1, 1.37]);
  translate([154, 126, 0])
    cube([1, 1, 1.37]);
  translate([155, 126, 0])
    cube([1, 1, 1.37]);
  translate([156, 126, 0])
    cube([1, 1, 1.37]);
  translate([157, 126, 0])
    cube([1, 1, 1.37]);
  translate([158, 126, 0])
    cube([1, 1, 1.37]);
  translate([159, 126, 0])
    cube([1, 1, 1.37]);
  translate([160, 126, 0])
    cube([1, 1, 1.37]);
  translate([161, 126, 0])
    cube([1, 1, 1.37]);
  translate([162, 126, 0])
    cube([1, 1, 1.37]);
  translate([163, 126, 0])
    cube([1, 1, 1.41]);
  translate([164, 126, 0])
    cube([1, 1, 1.33]);
  translate([165, 126, 0])
    cube([1, 1, 1.37]);
  translate([166, 126, 0])
    cube([1, 1, 1.41]);
  translate([167, 126, 0])
    cube([1, 1, 1.41]);
  translate([168, 126, 0])
    cube([1, 1, 1.41]);
  translate([169, 126, 0])
    cube([1, 1, 1.41]);
  translate([170, 126, 0])
    cube([1, 1, 1.41]);
  translate([171, 126, 0])
    cube([1, 1, 1.41]);
  translate([172, 126, 0])
    cube([1, 1, 1.41]);
  translate([173, 126, 0])
    cube([1, 1, 1.37]);
  translate([174, 126, 0])
    cube([1, 1, 1.41]);
  translate([175, 126, 0])
    cube([1, 1, 1.41]);
  translate([176, 126, 0])
    cube([1, 1, 1.45]);
  translate([177, 126, 0])
    cube([1, 1, 1.45]);
  translate([178, 126, 0])
    cube([1, 1, 1.45]);
  translate([179, 126, 0])
    cube([1, 1, 1.45]);
  translate([180, 126, 0])
    cube([1, 1, 1.41]);
  translate([181, 126, 0])
    cube([1, 1, 1.41]);
  translate([182, 126, 0])
    cube([1, 1, 1.45]);
  translate([183, 126, 0])
    cube([1, 1, 1.45]);
  translate([184, 126, 0])
    cube([1, 1, 1.45]);
  translate([185, 126, 0])
    cube([1, 1, 1.45]);
  translate([186, 126, 0])
    cube([1, 1, 1.45]);
  translate([187, 126, 0])
    cube([1, 1, 1.41]);
  translate([188, 126, 0])
    cube([1, 1, 1.41]);
  translate([189, 126, 0])
    cube([1, 1, 1.41]);
  translate([190, 126, 0])
    cube([1, 1, 1.45]);
  translate([191, 126, 0])
    cube([1, 1, 1.45]);
  translate([192, 126, 0])
    cube([1, 1, 1.45]);
  translate([193, 126, 0])
    cube([1, 1, 1.45]);
  translate([194, 126, 0])
    cube([1, 1, 1.45]);
  translate([195, 126, 0])
    cube([1, 1, 1.45]);
  translate([196, 126, 0])
    cube([1, 1, 1.45]);
  translate([197, 126, 0])
    cube([1, 1, 1.45]);
  translate([198, 126, 0])
    cube([1, 1, 1.45]);
  translate([199, 126, 0])
    cube([1, 1, 1.45]);
  translate([200, 126, 0])
    cube([1, 1, 1.45]);
  translate([201, 126, 0])
    cube([1, 1, 1.41]);
  translate([202, 126, 0])
    cube([1, 1, 1.45]);
  translate([203, 126, 0])
    cube([1, 1, 1.45]);
  translate([204, 126, 0])
    cube([1, 1, 1.45]);
  translate([205, 126, 0])
    cube([1, 1, 1.45]);
  translate([206, 126, 0])
    cube([1, 1, 1.45]);
  translate([207, 126, 0])
    cube([1, 1, 1.45]);
  translate([208, 126, 0])
    cube([1, 1, 1.45]);
  translate([209, 126, 0])
    cube([1, 1, 1.45]);
  translate([210, 126, 0])
    cube([1, 1, 1.45]);
  translate([211, 126, 0])
    cube([1, 1, 1.45]);
  translate([212, 126, 0])
    cube([1, 1, 1.45]);
  translate([213, 126, 0])
    cube([1, 1, 1.45]);
  translate([214, 126, 0])
    cube([1, 1, 1.45]);
  translate([215, 126, 0])
    cube([1, 1, 1.45]);
  translate([216, 126, 0])
    cube([1, 1, 1.45]);
  translate([217, 126, 0])
    cube([1, 1, 1.45]);
  translate([218, 126, 0])
    cube([1, 1, 1.45]);
  translate([219, 126, 0])
    cube([1, 1, 1.45]);
  translate([220, 126, 0])
    cube([1, 1, 1.45]);
  translate([221, 126, 0])
    cube([1, 1, 1.45]);
  translate([222, 126, 0])
    cube([1, 1, 1.45]);
  translate([223, 126, 0])
    cube([1, 1, 1.45]);
  translate([224, 126, 0])
    cube([1, 1, 1.45]);
  translate([225, 126, 0])
    cube([1, 1, 1.45]);
  translate([226, 126, 0])
    cube([1, 1, 1.45]);
  translate([227, 126, 0])
    cube([1, 1, 1.45]);
  translate([228, 126, 0])
    cube([1, 1, 1.45]);
  translate([229, 126, 0])
    cube([1, 1, 1.45]);
  translate([230, 126, 0])
    cube([1, 1, 1.45]);
  translate([231, 126, 0])
    cube([1, 1, 1.45]);
  translate([232, 126, 0])
    cube([1, 1, 1.45]);
  translate([233, 126, 0])
    cube([1, 1, 1.41]);
  translate([234, 126, 0])
    cube([1, 1, 1.41]);
  translate([235, 126, 0])
    cube([1, 1, 1.45]);
  translate([236, 126, 0])
    cube([1, 1, 1.41]);
  translate([237, 126, 0])
    cube([1, 1, 1.45]);
  translate([238, 126, 0])
    cube([1, 1, 1.45]);
  translate([239, 126, 0])
    cube([1, 1, 1.45]);
  translate([240, 126, 0])
    cube([1, 1, 1.45]);
  translate([241, 126, 0])
    cube([1, 1, 1.45]);
  translate([242, 126, 0])
    cube([1, 1, 1.45]);
  translate([243, 126, 0])
    cube([1, 1, 1.45]);
  translate([244, 126, 0])
    cube([1, 1, 1.41]);
  translate([245, 126, 0])
    cube([1, 1, 1.45]);
  translate([246, 126, 0])
    cube([1, 1, 1.45]);
  translate([0, 127, 0])
    cube([1, 1, 1.61]);
  translate([1, 127, 0])
    cube([1, 1, 1.61]);
  translate([2, 127, 0])
    cube([1, 1, 1.61]);
  translate([3, 127, 0])
    cube([1, 1, 1.61]);
  translate([4, 127, 0])
    cube([1, 1, 1.61]);
  translate([5, 127, 0])
    cube([1, 1, 1.61]);
  translate([6, 127, 0])
    cube([1, 1, 1.57]);
  translate([7, 127, 0])
    cube([1, 1, 1.57]);
  translate([8, 127, 0])
    cube([1, 1, 1.61]);
  translate([9, 127, 0])
    cube([1, 1, 1.61]);
  translate([10, 127, 0])
    cube([1, 1, 1.61]);
  translate([11, 127, 0])
    cube([1, 1, 1.57]);
  translate([12, 127, 0])
    cube([1, 1, 1.57]);
  translate([13, 127, 0])
    cube([1, 1, 1.57]);
  translate([14, 127, 0])
    cube([1, 1, 1.57]);
  translate([15, 127, 0])
    cube([1, 1, 1.57]);
  translate([16, 127, 0])
    cube([1, 1, 1.57]);
  translate([17, 127, 0])
    cube([1, 1, 1.57]);
  translate([18, 127, 0])
    cube([1, 1, 1.57]);
  translate([19, 127, 0])
    cube([1, 1, 1.57]);
  translate([20, 127, 0])
    cube([1, 1, 1.57]);
  translate([21, 127, 0])
    cube([1, 1, 1.57]);
  translate([22, 127, 0])
    cube([1, 1, 1.53]);
  translate([23, 127, 0])
    cube([1, 1, 1.53]);
  translate([24, 127, 0])
    cube([1, 1, 1.53]);
  translate([25, 127, 0])
    cube([1, 1, 1.53]);
  translate([26, 127, 0])
    cube([1, 1, 1.53]);
  translate([27, 127, 0])
    cube([1, 1, 1.45]);
  translate([28, 127, 0])
    cube([1, 1, 1.49]);
  translate([29, 127, 0])
    cube([1, 1, 1.53]);
  translate([30, 127, 0])
    cube([1, 1, 1.53]);
  translate([31, 127, 0])
    cube([1, 1, 1.49]);
  translate([32, 127, 0])
    cube([1, 1, 1.53]);
  translate([33, 127, 0])
    cube([1, 1, 1.49]);
  translate([34, 127, 0])
    cube([1, 1, 1.49]);
  translate([35, 127, 0])
    cube([1, 1, 1.49]);
  translate([36, 127, 0])
    cube([1, 1, 1.49]);
  translate([37, 127, 0])
    cube([1, 1, 1.49]);
  translate([38, 127, 0])
    cube([1, 1, 1.49]);
  translate([39, 127, 0])
    cube([1, 1, 1.49]);
  translate([40, 127, 0])
    cube([1, 1, 1.53]);
  translate([41, 127, 0])
    cube([1, 1, 1.45]);
  translate([42, 127, 0])
    cube([1, 1, 1.45]);
  translate([43, 127, 0])
    cube([1, 1, 1.45]);
  translate([44, 127, 0])
    cube([1, 1, 1.49]);
  translate([45, 127, 0])
    cube([1, 1, 1.41]);
  translate([46, 127, 0])
    cube([1, 1, 1.49]);
  translate([47, 127, 0])
    cube([1, 1, 2.82]);
  translate([48, 127, 0])
    cube([1, 1, 5.80]);
  translate([49, 127, 0])
    cube([1, 1, 3.29]);
  translate([50, 127, 0])
    cube([1, 1, 3.41]);
  translate([51, 127, 0])
    cube([1, 1, 3.45]);
  translate([52, 127, 0])
    cube([1, 1, 4.00]);
  translate([53, 127, 0])
    cube([1, 1, 4.67]);
  translate([54, 127, 0])
    cube([1, 1, 5.25]);
  translate([55, 127, 0])
    cube([1, 1, 5.73]);
  translate([56, 127, 0])
    cube([1, 1, 5.96]);
  translate([57, 127, 0])
    cube([1, 1, 6.12]);
  translate([58, 127, 0])
    cube([1, 1, 6.43]);
  translate([59, 127, 0])
    cube([1, 1, 6.00]);
  translate([60, 127, 0])
    cube([1, 1, 5.69]);
  translate([61, 127, 0])
    cube([1, 1, 5.57]);
  translate([62, 127, 0])
    cube([1, 1, 5.37]);
  translate([63, 127, 0])
    cube([1, 1, 4.86]);
  translate([64, 127, 0])
    cube([1, 1, 4.78]);
  translate([65, 127, 0])
    cube([1, 1, 5.02]);
  translate([66, 127, 0])
    cube([1, 1, 5.33]);
  translate([67, 127, 0])
    cube([1, 1, 5.45]);
  translate([68, 127, 0])
    cube([1, 1, 5.73]);
  translate([69, 127, 0])
    cube([1, 1, 5.96]);
  translate([70, 127, 0])
    cube([1, 1, 5.88]);
  translate([71, 127, 0])
    cube([1, 1, 5.76]);
  translate([72, 127, 0])
    cube([1, 1, 5.61]);
  translate([73, 127, 0])
    cube([1, 1, 5.49]);
  translate([74, 127, 0])
    cube([1, 1, 5.49]);
  translate([75, 127, 0])
    cube([1, 1, 5.33]);
  translate([76, 127, 0])
    cube([1, 1, 5.33]);
  translate([77, 127, 0])
    cube([1, 1, 5.06]);
  translate([78, 127, 0])
    cube([1, 1, 2.27]);
  translate([79, 127, 0])
    cube([1, 1, 2.16]);
  translate([80, 127, 0])
    cube([1, 1, 2.20]);
  translate([81, 127, 0])
    cube([1, 1, 1.22]);
  translate([82, 127, 0])
    cube([1, 1, 2.90]);
  translate([83, 127, 0])
    cube([1, 1, 2.39]);
  translate([84, 127, 0])
    cube([1, 1, 2.12]);
  translate([85, 127, 0])
    cube([1, 1, 2.08]);
  translate([86, 127, 0])
    cube([1, 1, 2.51]);
  translate([87, 127, 0])
    cube([1, 1, 2.08]);
  translate([88, 127, 0])
    cube([1, 1, 1.45]);
  translate([89, 127, 0])
    cube([1, 1, 1.10]);
  translate([90, 127, 0])
    cube([1, 1, 1.33]);
  translate([91, 127, 0])
    cube([1, 1, 1.57]);
  translate([92, 127, 0])
    cube([1, 1, 2.00]);
  translate([93, 127, 0])
    cube([1, 1, 2.67]);
  translate([94, 127, 0])
    cube([1, 1, 3.02]);
  translate([95, 127, 0])
    cube([1, 1, 3.29]);
  translate([96, 127, 0])
    cube([1, 1, 2.47]);
  translate([97, 127, 0])
    cube([1, 1, 2.43]);
  translate([98, 127, 0])
    cube([1, 1, 0.71]);
  translate([99, 127, 0])
    cube([1, 1, 1.61]);
  translate([100, 127, 0])
    cube([1, 1, 3.14]);
  translate([101, 127, 0])
    cube([1, 1, 3.76]);
  translate([102, 127, 0])
    cube([1, 1, 2.75]);
  translate([103, 127, 0])
    cube([1, 1, 3.18]);
  translate([104, 127, 0])
    cube([1, 1, 3.18]);
  translate([105, 127, 0])
    cube([1, 1, 2.39]);
  translate([106, 127, 0])
    cube([1, 1, 2.59]);
  translate([107, 127, 0])
    cube([1, 1, 2.20]);
  translate([108, 127, 0])
    cube([1, 1, 2.16]);
  translate([109, 127, 0])
    cube([1, 1, 2.31]);
  translate([110, 127, 0])
    cube([1, 1, 2.47]);
  translate([111, 127, 0])
    cube([1, 1, 2.86]);
  translate([112, 127, 0])
    cube([1, 1, 2.59]);
  translate([113, 127, 0])
    cube([1, 1, 2.27]);
  translate([114, 127, 0])
    cube([1, 1, 2.35]);
  translate([115, 127, 0])
    cube([1, 1, 2.63]);
  translate([116, 127, 0])
    cube([1, 1, 2.94]);
  translate([117, 127, 0])
    cube([1, 1, 3.37]);
  translate([118, 127, 0])
    cube([1, 1, 3.76]);
  translate([119, 127, 0])
    cube([1, 1, 3.29]);
  translate([120, 127, 0])
    cube([1, 1, 3.49]);
  translate([121, 127, 0])
    cube([1, 1, 3.22]);
  translate([122, 127, 0])
    cube([1, 1, 3.88]);
  translate([123, 127, 0])
    cube([1, 1, 3.18]);
  translate([124, 127, 0])
    cube([1, 1, 4.04]);
  translate([125, 127, 0])
    cube([1, 1, 3.88]);
  translate([126, 127, 0])
    cube([1, 1, 3.29]);
  translate([127, 127, 0])
    cube([1, 1, 3.41]);
  translate([128, 127, 0])
    cube([1, 1, 3.69]);
  translate([129, 127, 0])
    cube([1, 1, 3.02]);
  translate([130, 127, 0])
    cube([1, 1, 3.73]);
  translate([131, 127, 0])
    cube([1, 1, 3.33]);
  translate([132, 127, 0])
    cube([1, 1, 2.75]);
  translate([133, 127, 0])
    cube([1, 1, 3.57]);
  translate([134, 127, 0])
    cube([1, 1, 2.63]);
  translate([135, 127, 0])
    cube([1, 1, 3.33]);
  translate([136, 127, 0])
    cube([1, 1, 3.84]);
  translate([137, 127, 0])
    cube([1, 1, 2.31]);
  translate([138, 127, 0])
    cube([1, 1, 2.98]);
  translate([139, 127, 0])
    cube([1, 1, 2.78]);
  translate([140, 127, 0])
    cube([1, 1, 2.16]);
  translate([141, 127, 0])
    cube([1, 1, 2.78]);
  translate([142, 127, 0])
    cube([1, 1, 2.75]);
  translate([143, 127, 0])
    cube([1, 1, 2.75]);
  translate([144, 127, 0])
    cube([1, 1, 2.00]);
  translate([145, 127, 0])
    cube([1, 1, 2.75]);
  translate([146, 127, 0])
    cube([1, 1, 2.67]);
  translate([147, 127, 0])
    cube([1, 1, 1.37]);
  translate([148, 127, 0])
    cube([1, 1, 1.37]);
  translate([149, 127, 0])
    cube([1, 1, 1.37]);
  translate([150, 127, 0])
    cube([1, 1, 1.37]);
  translate([151, 127, 0])
    cube([1, 1, 1.37]);
  translate([152, 127, 0])
    cube([1, 1, 1.37]);
  translate([153, 127, 0])
    cube([1, 1, 1.37]);
  translate([154, 127, 0])
    cube([1, 1, 1.37]);
  translate([155, 127, 0])
    cube([1, 1, 1.37]);
  translate([156, 127, 0])
    cube([1, 1, 1.37]);
  translate([157, 127, 0])
    cube([1, 1, 1.37]);
  translate([158, 127, 0])
    cube([1, 1, 1.37]);
  translate([159, 127, 0])
    cube([1, 1, 1.37]);
  translate([160, 127, 0])
    cube([1, 1, 1.37]);
  translate([161, 127, 0])
    cube([1, 1, 1.33]);
  translate([162, 127, 0])
    cube([1, 1, 1.41]);
  translate([163, 127, 0])
    cube([1, 1, 1.41]);
  translate([164, 127, 0])
    cube([1, 1, 1.41]);
  translate([165, 127, 0])
    cube([1, 1, 1.41]);
  translate([166, 127, 0])
    cube([1, 1, 1.41]);
  translate([167, 127, 0])
    cube([1, 1, 1.41]);
  translate([168, 127, 0])
    cube([1, 1, 1.41]);
  translate([169, 127, 0])
    cube([1, 1, 1.41]);
  translate([170, 127, 0])
    cube([1, 1, 1.41]);
  translate([171, 127, 0])
    cube([1, 1, 1.41]);
  translate([172, 127, 0])
    cube([1, 1, 1.41]);
  translate([173, 127, 0])
    cube([1, 1, 1.41]);
  translate([174, 127, 0])
    cube([1, 1, 1.41]);
  translate([175, 127, 0])
    cube([1, 1, 1.45]);
  translate([176, 127, 0])
    cube([1, 1, 1.45]);
  translate([177, 127, 0])
    cube([1, 1, 1.45]);
  translate([178, 127, 0])
    cube([1, 1, 1.45]);
  translate([179, 127, 0])
    cube([1, 1, 1.41]);
  translate([180, 127, 0])
    cube([1, 1, 1.41]);
  translate([181, 127, 0])
    cube([1, 1, 1.41]);
  translate([182, 127, 0])
    cube([1, 1, 1.41]);
  translate([183, 127, 0])
    cube([1, 1, 1.45]);
  translate([184, 127, 0])
    cube([1, 1, 1.45]);
  translate([185, 127, 0])
    cube([1, 1, 1.45]);
  translate([186, 127, 0])
    cube([1, 1, 1.45]);
  translate([187, 127, 0])
    cube([1, 1, 1.45]);
  translate([188, 127, 0])
    cube([1, 1, 1.45]);
  translate([189, 127, 0])
    cube([1, 1, 1.45]);
  translate([190, 127, 0])
    cube([1, 1, 1.45]);
  translate([191, 127, 0])
    cube([1, 1, 1.45]);
  translate([192, 127, 0])
    cube([1, 1, 1.45]);
  translate([193, 127, 0])
    cube([1, 1, 1.45]);
  translate([194, 127, 0])
    cube([1, 1, 1.45]);
  translate([195, 127, 0])
    cube([1, 1, 1.45]);
  translate([196, 127, 0])
    cube([1, 1, 1.45]);
  translate([197, 127, 0])
    cube([1, 1, 1.45]);
  translate([198, 127, 0])
    cube([1, 1, 1.45]);
  translate([199, 127, 0])
    cube([1, 1, 1.45]);
  translate([200, 127, 0])
    cube([1, 1, 1.45]);
  translate([201, 127, 0])
    cube([1, 1, 1.45]);
  translate([202, 127, 0])
    cube([1, 1, 1.45]);
  translate([203, 127, 0])
    cube([1, 1, 1.45]);
  translate([204, 127, 0])
    cube([1, 1, 1.45]);
  translate([205, 127, 0])
    cube([1, 1, 1.45]);
  translate([206, 127, 0])
    cube([1, 1, 1.45]);
  translate([207, 127, 0])
    cube([1, 1, 1.45]);
  translate([208, 127, 0])
    cube([1, 1, 1.45]);
  translate([209, 127, 0])
    cube([1, 1, 1.45]);
  translate([210, 127, 0])
    cube([1, 1, 1.45]);
  translate([211, 127, 0])
    cube([1, 1, 1.45]);
  translate([212, 127, 0])
    cube([1, 1, 1.45]);
  translate([213, 127, 0])
    cube([1, 1, 1.45]);
  translate([214, 127, 0])
    cube([1, 1, 1.45]);
  translate([215, 127, 0])
    cube([1, 1, 1.45]);
  translate([216, 127, 0])
    cube([1, 1, 1.45]);
  translate([217, 127, 0])
    cube([1, 1, 1.45]);
  translate([218, 127, 0])
    cube([1, 1, 1.45]);
  translate([219, 127, 0])
    cube([1, 1, 1.45]);
  translate([220, 127, 0])
    cube([1, 1, 1.45]);
  translate([221, 127, 0])
    cube([1, 1, 1.45]);
  translate([222, 127, 0])
    cube([1, 1, 1.45]);
  translate([223, 127, 0])
    cube([1, 1, 1.45]);
  translate([224, 127, 0])
    cube([1, 1, 1.45]);
  translate([225, 127, 0])
    cube([1, 1, 1.45]);
  translate([226, 127, 0])
    cube([1, 1, 1.45]);
  translate([227, 127, 0])
    cube([1, 1, 1.45]);
  translate([228, 127, 0])
    cube([1, 1, 1.45]);
  translate([229, 127, 0])
    cube([1, 1, 1.45]);
  translate([230, 127, 0])
    cube([1, 1, 1.45]);
  translate([231, 127, 0])
    cube([1, 1, 1.45]);
  translate([232, 127, 0])
    cube([1, 1, 1.45]);
  translate([233, 127, 0])
    cube([1, 1, 1.45]);
  translate([234, 127, 0])
    cube([1, 1, 1.45]);
  translate([235, 127, 0])
    cube([1, 1, 1.45]);
  translate([236, 127, 0])
    cube([1, 1, 1.45]);
  translate([237, 127, 0])
    cube([1, 1, 1.45]);
  translate([238, 127, 0])
    cube([1, 1, 1.45]);
  translate([239, 127, 0])
    cube([1, 1, 1.45]);
  translate([240, 127, 0])
    cube([1, 1, 1.41]);
  translate([241, 127, 0])
    cube([1, 1, 1.45]);
  translate([242, 127, 0])
    cube([1, 1, 1.45]);
  translate([243, 127, 0])
    cube([1, 1, 1.45]);
  translate([244, 127, 0])
    cube([1, 1, 1.45]);
  translate([245, 127, 0])
    cube([1, 1, 1.45]);
  translate([246, 127, 0])
    cube([1, 1, 1.45]);
  translate([0, 128, 0])
    cube([1, 1, 1.61]);
  translate([1, 128, 0])
    cube([1, 1, 1.61]);
  translate([2, 128, 0])
    cube([1, 1, 1.61]);
  translate([3, 128, 0])
    cube([1, 1, 1.61]);
  translate([4, 128, 0])
    cube([1, 1, 1.61]);
  translate([5, 128, 0])
    cube([1, 1, 1.61]);
  translate([6, 128, 0])
    cube([1, 1, 1.61]);
  translate([7, 128, 0])
    cube([1, 1, 1.61]);
  translate([8, 128, 0])
    cube([1, 1, 1.61]);
  translate([9, 128, 0])
    cube([1, 1, 1.61]);
  translate([10, 128, 0])
    cube([1, 1, 1.61]);
  translate([11, 128, 0])
    cube([1, 1, 1.65]);
  translate([12, 128, 0])
    cube([1, 1, 1.57]);
  translate([13, 128, 0])
    cube([1, 1, 1.57]);
  translate([14, 128, 0])
    cube([1, 1, 1.57]);
  translate([15, 128, 0])
    cube([1, 1, 1.57]);
  translate([16, 128, 0])
    cube([1, 1, 1.57]);
  translate([17, 128, 0])
    cube([1, 1, 1.57]);
  translate([18, 128, 0])
    cube([1, 1, 1.57]);
  translate([19, 128, 0])
    cube([1, 1, 1.57]);
  translate([20, 128, 0])
    cube([1, 1, 1.57]);
  translate([21, 128, 0])
    cube([1, 1, 1.57]);
  translate([22, 128, 0])
    cube([1, 1, 1.57]);
  translate([23, 128, 0])
    cube([1, 1, 1.49]);
  translate([24, 128, 0])
    cube([1, 1, 1.49]);
  translate([25, 128, 0])
    cube([1, 1, 1.53]);
  translate([26, 128, 0])
    cube([1, 1, 1.53]);
  translate([27, 128, 0])
    cube([1, 1, 1.49]);
  translate([28, 128, 0])
    cube([1, 1, 1.53]);
  translate([29, 128, 0])
    cube([1, 1, 1.53]);
  translate([30, 128, 0])
    cube([1, 1, 1.53]);
  translate([31, 128, 0])
    cube([1, 1, 1.53]);
  translate([32, 128, 0])
    cube([1, 1, 1.53]);
  translate([33, 128, 0])
    cube([1, 1, 1.53]);
  translate([34, 128, 0])
    cube([1, 1, 1.53]);
  translate([35, 128, 0])
    cube([1, 1, 1.49]);
  translate([36, 128, 0])
    cube([1, 1, 1.49]);
  translate([37, 128, 0])
    cube([1, 1, 1.49]);
  translate([38, 128, 0])
    cube([1, 1, 1.49]);
  translate([39, 128, 0])
    cube([1, 1, 1.49]);
  translate([40, 128, 0])
    cube([1, 1, 1.49]);
  translate([41, 128, 0])
    cube([1, 1, 1.49]);
  translate([42, 128, 0])
    cube([1, 1, 1.49]);
  translate([43, 128, 0])
    cube([1, 1, 1.49]);
  translate([44, 128, 0])
    cube([1, 1, 1.49]);
  translate([45, 128, 0])
    cube([1, 1, 1.49]);
  translate([46, 128, 0])
    cube([1, 1, 1.49]);
  translate([47, 128, 0])
    cube([1, 1, 1.41]);
  translate([48, 128, 0])
    cube([1, 1, 6.63]);
  translate([49, 128, 0])
    cube([1, 1, 3.73]);
  translate([50, 128, 0])
    cube([1, 1, 3.29]);
  translate([51, 128, 0])
    cube([1, 1, 3.49]);
  translate([52, 128, 0])
    cube([1, 1, 3.76]);
  translate([53, 128, 0])
    cube([1, 1, 4.47]);
  translate([54, 128, 0])
    cube([1, 1, 4.98]);
  translate([55, 128, 0])
    cube([1, 1, 5.65]);
  translate([56, 128, 0])
    cube([1, 1, 5.80]);
  translate([57, 128, 0])
    cube([1, 1, 5.96]);
  translate([58, 128, 0])
    cube([1, 1, 6.31]);
  translate([59, 128, 0])
    cube([1, 1, 6.16]);
  translate([60, 128, 0])
    cube([1, 1, 5.84]);
  translate([61, 128, 0])
    cube([1, 1, 5.65]);
  translate([62, 128, 0])
    cube([1, 1, 5.41]);
  translate([63, 128, 0])
    cube([1, 1, 5.49]);
  translate([64, 128, 0])
    cube([1, 1, 5.02]);
  translate([65, 128, 0])
    cube([1, 1, 4.94]);
  translate([66, 128, 0])
    cube([1, 1, 5.37]);
  translate([67, 128, 0])
    cube([1, 1, 5.61]);
  translate([68, 128, 0])
    cube([1, 1, 5.80]);
  translate([69, 128, 0])
    cube([1, 1, 5.88]);
  translate([70, 128, 0])
    cube([1, 1, 6.20]);
  translate([71, 128, 0])
    cube([1, 1, 5.80]);
  translate([72, 128, 0])
    cube([1, 1, 5.69]);
  translate([73, 128, 0])
    cube([1, 1, 5.49]);
  translate([74, 128, 0])
    cube([1, 1, 5.37]);
  translate([75, 128, 0])
    cube([1, 1, 5.33]);
  translate([76, 128, 0])
    cube([1, 1, 5.41]);
  translate([77, 128, 0])
    cube([1, 1, 5.41]);
  translate([78, 128, 0])
    cube([1, 1, 3.80]);
  translate([79, 128, 0])
    cube([1, 1, 1.29]);
  translate([80, 128, 0])
    cube([1, 1, 2.31]);
  translate([81, 128, 0])
    cube([1, 1, 1.80]);
  translate([82, 128, 0])
    cube([1, 1, 1.65]);
  translate([83, 128, 0])
    cube([1, 1, 2.55]);
  translate([84, 128, 0])
    cube([1, 1, 1.76]);
  translate([85, 128, 0])
    cube([1, 1, 1.45]);
  translate([86, 128, 0])
    cube([1, 1, 2.55]);
  translate([87, 128, 0])
    cube([1, 1, 2.04]);
  translate([88, 128, 0])
    cube([1, 1, 1.61]);
  translate([89, 128, 0])
    cube([1, 1, 1.14]);
  translate([90, 128, 0])
    cube([1, 1, 1.25]);
  translate([91, 128, 0])
    cube([1, 1, 1.49]);
  translate([92, 128, 0])
    cube([1, 1, 1.73]);
  translate([93, 128, 0])
    cube([1, 1, 2.24]);
  translate([94, 128, 0])
    cube([1, 1, 2.78]);
  translate([95, 128, 0])
    cube([1, 1, 2.71]);
  translate([96, 128, 0])
    cube([1, 1, 1.45]);
  translate([97, 128, 0])
    cube([1, 1, 1.80]);
  translate([98, 128, 0])
    cube([1, 1, 2.59]);
  translate([99, 128, 0])
    cube([1, 1, 3.25]);
  translate([100, 128, 0])
    cube([1, 1, 2.55]);
  translate([101, 128, 0])
    cube([1, 1, 2.27]);
  translate([102, 128, 0])
    cube([1, 1, 2.27]);
  translate([103, 128, 0])
    cube([1, 1, 2.04]);
  translate([104, 128, 0])
    cube([1, 1, 1.14]);
  translate([105, 128, 0])
    cube([1, 1, 1.49]);
  translate([106, 128, 0])
    cube([1, 1, 1.92]);
  translate([107, 128, 0])
    cube([1, 1, 1.37]);
  translate([108, 128, 0])
    cube([1, 1, 2.08]);
  translate([109, 128, 0])
    cube([1, 1, 2.16]);
  translate([110, 128, 0])
    cube([1, 1, 2.12]);
  translate([111, 128, 0])
    cube([1, 1, 2.98]);
  translate([112, 128, 0])
    cube([1, 1, 2.00]);
  translate([113, 128, 0])
    cube([1, 1, 2.75]);
  translate([114, 128, 0])
    cube([1, 1, 1.76]);
  translate([115, 128, 0])
    cube([1, 1, 2.63]);
  translate([116, 128, 0])
    cube([1, 1, 2.94]);
  translate([117, 128, 0])
    cube([1, 1, 3.10]);
  translate([118, 128, 0])
    cube([1, 1, 3.02]);
  translate([119, 128, 0])
    cube([1, 1, 3.02]);
  translate([120, 128, 0])
    cube([1, 1, 2.78]);
  translate([121, 128, 0])
    cube([1, 1, 3.25]);
  translate([122, 128, 0])
    cube([1, 1, 3.22]);
  translate([123, 128, 0])
    cube([1, 1, 3.53]);
  translate([124, 128, 0])
    cube([1, 1, 3.53]);
  translate([125, 128, 0])
    cube([1, 1, 3.41]);
  translate([126, 128, 0])
    cube([1, 1, 2.43]);
  translate([127, 128, 0])
    cube([1, 1, 2.75]);
  translate([128, 128, 0])
    cube([1, 1, 3.22]);
  translate([129, 128, 0])
    cube([1, 1, 3.61]);
  translate([130, 128, 0])
    cube([1, 1, 3.65]);
  translate([131, 128, 0])
    cube([1, 1, 3.22]);
  translate([132, 128, 0])
    cube([1, 1, 3.18]);
  translate([133, 128, 0])
    cube([1, 1, 3.18]);
  translate([134, 128, 0])
    cube([1, 1, 3.14]);
  translate([135, 128, 0])
    cube([1, 1, 4.31]);
  translate([136, 128, 0])
    cube([1, 1, 3.18]);
  translate([137, 128, 0])
    cube([1, 1, 2.51]);
  translate([138, 128, 0])
    cube([1, 1, 2.27]);
  translate([139, 128, 0])
    cube([1, 1, 2.47]);
  translate([140, 128, 0])
    cube([1, 1, 2.55]);
  translate([141, 128, 0])
    cube([1, 1, 2.04]);
  translate([142, 128, 0])
    cube([1, 1, 2.47]);
  translate([143, 128, 0])
    cube([1, 1, 2.20]);
  translate([144, 128, 0])
    cube([1, 1, 2.08]);
  translate([145, 128, 0])
    cube([1, 1, 2.55]);
  translate([146, 128, 0])
    cube([1, 1, 1.25]);
  translate([147, 128, 0])
    cube([1, 1, 1.37]);
  translate([148, 128, 0])
    cube([1, 1, 1.37]);
  translate([149, 128, 0])
    cube([1, 1, 1.37]);
  translate([150, 128, 0])
    cube([1, 1, 1.37]);
  translate([151, 128, 0])
    cube([1, 1, 1.37]);
  translate([152, 128, 0])
    cube([1, 1, 1.37]);
  translate([153, 128, 0])
    cube([1, 1, 1.37]);
  translate([154, 128, 0])
    cube([1, 1, 1.37]);
  translate([155, 128, 0])
    cube([1, 1, 1.37]);
  translate([156, 128, 0])
    cube([1, 1, 1.37]);
  translate([157, 128, 0])
    cube([1, 1, 1.37]);
  translate([158, 128, 0])
    cube([1, 1, 1.37]);
  translate([159, 128, 0])
    cube([1, 1, 1.37]);
  translate([160, 128, 0])
    cube([1, 1, 1.37]);
  translate([161, 128, 0])
    cube([1, 1, 1.41]);
  translate([162, 128, 0])
    cube([1, 1, 1.41]);
  translate([163, 128, 0])
    cube([1, 1, 1.37]);
  translate([164, 128, 0])
    cube([1, 1, 1.41]);
  translate([165, 128, 0])
    cube([1, 1, 1.41]);
  translate([166, 128, 0])
    cube([1, 1, 1.45]);
  translate([167, 128, 0])
    cube([1, 1, 1.41]);
  translate([168, 128, 0])
    cube([1, 1, 1.41]);
  translate([169, 128, 0])
    cube([1, 1, 1.41]);
  translate([170, 128, 0])
    cube([1, 1, 1.45]);
  translate([171, 128, 0])
    cube([1, 1, 1.41]);
  translate([172, 128, 0])
    cube([1, 1, 1.41]);
  translate([173, 128, 0])
    cube([1, 1, 1.45]);
  translate([174, 128, 0])
    cube([1, 1, 1.41]);
  translate([175, 128, 0])
    cube([1, 1, 1.53]);
  translate([176, 128, 0])
    cube([1, 1, 1.45]);
  translate([177, 128, 0])
    cube([1, 1, 1.45]);
  translate([178, 128, 0])
    cube([1, 1, 1.49]);
  translate([179, 128, 0])
    cube([1, 1, 1.45]);
  translate([180, 128, 0])
    cube([1, 1, 1.45]);
  translate([181, 128, 0])
    cube([1, 1, 1.45]);
  translate([182, 128, 0])
    cube([1, 1, 1.45]);
  translate([183, 128, 0])
    cube([1, 1, 1.45]);
  translate([184, 128, 0])
    cube([1, 1, 1.45]);
  translate([185, 128, 0])
    cube([1, 1, 1.45]);
  translate([186, 128, 0])
    cube([1, 1, 1.45]);
  translate([187, 128, 0])
    cube([1, 1, 1.45]);
  translate([188, 128, 0])
    cube([1, 1, 1.45]);
  translate([189, 128, 0])
    cube([1, 1, 1.45]);
  translate([190, 128, 0])
    cube([1, 1, 1.45]);
  translate([191, 128, 0])
    cube([1, 1, 1.45]);
  translate([192, 128, 0])
    cube([1, 1, 1.45]);
  translate([193, 128, 0])
    cube([1, 1, 1.45]);
  translate([194, 128, 0])
    cube([1, 1, 1.45]);
  translate([195, 128, 0])
    cube([1, 1, 1.45]);
  translate([196, 128, 0])
    cube([1, 1, 1.45]);
  translate([197, 128, 0])
    cube([1, 1, 1.45]);
  translate([198, 128, 0])
    cube([1, 1, 1.45]);
  translate([199, 128, 0])
    cube([1, 1, 1.45]);
  translate([200, 128, 0])
    cube([1, 1, 1.45]);
  translate([201, 128, 0])
    cube([1, 1, 1.45]);
  translate([202, 128, 0])
    cube([1, 1, 1.45]);
  translate([203, 128, 0])
    cube([1, 1, 1.45]);
  translate([204, 128, 0])
    cube([1, 1, 1.45]);
  translate([205, 128, 0])
    cube([1, 1, 1.45]);
  translate([206, 128, 0])
    cube([1, 1, 1.45]);
  translate([207, 128, 0])
    cube([1, 1, 1.45]);
  translate([208, 128, 0])
    cube([1, 1, 1.45]);
  translate([209, 128, 0])
    cube([1, 1, 1.45]);
  translate([210, 128, 0])
    cube([1, 1, 1.45]);
  translate([211, 128, 0])
    cube([1, 1, 1.45]);
  translate([212, 128, 0])
    cube([1, 1, 1.45]);
  translate([213, 128, 0])
    cube([1, 1, 1.45]);
  translate([214, 128, 0])
    cube([1, 1, 1.45]);
  translate([215, 128, 0])
    cube([1, 1, 1.45]);
  translate([216, 128, 0])
    cube([1, 1, 1.45]);
  translate([217, 128, 0])
    cube([1, 1, 1.45]);
  translate([218, 128, 0])
    cube([1, 1, 1.45]);
  translate([219, 128, 0])
    cube([1, 1, 1.45]);
  translate([220, 128, 0])
    cube([1, 1, 1.45]);
  translate([221, 128, 0])
    cube([1, 1, 1.45]);
  translate([222, 128, 0])
    cube([1, 1, 1.45]);
  translate([223, 128, 0])
    cube([1, 1, 1.45]);
  translate([224, 128, 0])
    cube([1, 1, 1.45]);
  translate([225, 128, 0])
    cube([1, 1, 1.45]);
  translate([226, 128, 0])
    cube([1, 1, 1.45]);
  translate([227, 128, 0])
    cube([1, 1, 1.45]);
  translate([228, 128, 0])
    cube([1, 1, 1.45]);
  translate([229, 128, 0])
    cube([1, 1, 1.45]);
  translate([230, 128, 0])
    cube([1, 1, 1.45]);
  translate([231, 128, 0])
    cube([1, 1, 1.45]);
  translate([232, 128, 0])
    cube([1, 1, 1.45]);
  translate([233, 128, 0])
    cube([1, 1, 1.45]);
  translate([234, 128, 0])
    cube([1, 1, 1.45]);
  translate([235, 128, 0])
    cube([1, 1, 1.45]);
  translate([236, 128, 0])
    cube([1, 1, 1.45]);
  translate([237, 128, 0])
    cube([1, 1, 1.45]);
  translate([238, 128, 0])
    cube([1, 1, 1.45]);
  translate([239, 128, 0])
    cube([1, 1, 1.45]);
  translate([240, 128, 0])
    cube([1, 1, 1.45]);
  translate([241, 128, 0])
    cube([1, 1, 1.45]);
  translate([242, 128, 0])
    cube([1, 1, 1.45]);
  translate([243, 128, 0])
    cube([1, 1, 1.45]);
  translate([244, 128, 0])
    cube([1, 1, 1.45]);
  translate([245, 128, 0])
    cube([1, 1, 1.45]);
  translate([246, 128, 0])
    cube([1, 1, 1.45]);
  translate([0, 129, 0])
    cube([1, 1, 1.61]);
  translate([1, 129, 0])
    cube([1, 1, 1.61]);
  translate([2, 129, 0])
    cube([1, 1, 1.61]);
  translate([3, 129, 0])
    cube([1, 1, 1.61]);
  translate([4, 129, 0])
    cube([1, 1, 1.61]);
  translate([5, 129, 0])
    cube([1, 1, 1.61]);
  translate([6, 129, 0])
    cube([1, 1, 1.61]);
  translate([7, 129, 0])
    cube([1, 1, 1.61]);
  translate([8, 129, 0])
    cube([1, 1, 1.61]);
  translate([9, 129, 0])
    cube([1, 1, 1.61]);
  translate([10, 129, 0])
    cube([1, 1, 1.61]);
  translate([11, 129, 0])
    cube([1, 1, 1.65]);
  translate([12, 129, 0])
    cube([1, 1, 1.57]);
  translate([13, 129, 0])
    cube([1, 1, 1.57]);
  translate([14, 129, 0])
    cube([1, 1, 1.57]);
  translate([15, 129, 0])
    cube([1, 1, 1.57]);
  translate([16, 129, 0])
    cube([1, 1, 1.57]);
  translate([17, 129, 0])
    cube([1, 1, 1.57]);
  translate([18, 129, 0])
    cube([1, 1, 1.57]);
  translate([19, 129, 0])
    cube([1, 1, 1.57]);
  translate([20, 129, 0])
    cube([1, 1, 1.57]);
  translate([21, 129, 0])
    cube([1, 1, 1.57]);
  translate([22, 129, 0])
    cube([1, 1, 1.53]);
  translate([23, 129, 0])
    cube([1, 1, 1.57]);
  translate([24, 129, 0])
    cube([1, 1, 1.57]);
  translate([25, 129, 0])
    cube([1, 1, 1.53]);
  translate([26, 129, 0])
    cube([1, 1, 1.53]);
  translate([27, 129, 0])
    cube([1, 1, 1.57]);
  translate([28, 129, 0])
    cube([1, 1, 1.53]);
  translate([29, 129, 0])
    cube([1, 1, 1.53]);
  translate([30, 129, 0])
    cube([1, 1, 1.53]);
  translate([31, 129, 0])
    cube([1, 1, 1.53]);
  translate([32, 129, 0])
    cube([1, 1, 1.53]);
  translate([33, 129, 0])
    cube([1, 1, 1.53]);
  translate([34, 129, 0])
    cube([1, 1, 1.53]);
  translate([35, 129, 0])
    cube([1, 1, 1.49]);
  translate([36, 129, 0])
    cube([1, 1, 1.49]);
  translate([37, 129, 0])
    cube([1, 1, 1.49]);
  translate([38, 129, 0])
    cube([1, 1, 1.49]);
  translate([39, 129, 0])
    cube([1, 1, 1.49]);
  translate([40, 129, 0])
    cube([1, 1, 1.49]);
  translate([41, 129, 0])
    cube([1, 1, 1.49]);
  translate([42, 129, 0])
    cube([1, 1, 1.49]);
  translate([43, 129, 0])
    cube([1, 1, 1.49]);
  translate([44, 129, 0])
    cube([1, 1, 1.49]);
  translate([45, 129, 0])
    cube([1, 1, 1.49]);
  translate([46, 129, 0])
    cube([1, 1, 1.45]);
  translate([47, 129, 0])
    cube([1, 1, 1.49]);
  translate([48, 129, 0])
    cube([1, 1, 7.49]);
  translate([49, 129, 0])
    cube([1, 1, 4.59]);
  translate([50, 129, 0])
    cube([1, 1, 3.37]);
  translate([51, 129, 0])
    cube([1, 1, 3.37]);
  translate([52, 129, 0])
    cube([1, 1, 3.65]);
  translate([53, 129, 0])
    cube([1, 1, 4.24]);
  translate([54, 129, 0])
    cube([1, 1, 4.78]);
  translate([55, 129, 0])
    cube([1, 1, 5.41]);
  translate([56, 129, 0])
    cube([1, 1, 5.61]);
  translate([57, 129, 0])
    cube([1, 1, 5.80]);
  translate([58, 129, 0])
    cube([1, 1, 6.16]);
  translate([59, 129, 0])
    cube([1, 1, 6.27]);
  translate([60, 129, 0])
    cube([1, 1, 5.92]);
  translate([61, 129, 0])
    cube([1, 1, 5.73]);
  translate([62, 129, 0])
    cube([1, 1, 5.45]);
  translate([63, 129, 0])
    cube([1, 1, 5.41]);
  translate([64, 129, 0])
    cube([1, 1, 1.76]);
  translate([65, 129, 0])
    cube([1, 1, 1.33]);
  translate([66, 129, 0])
    cube([1, 1, 1.22]);
  translate([67, 129, 0])
    cube([1, 1, 1.96]);
  translate([68, 129, 0])
    cube([1, 1, 2.16]);
  translate([69, 129, 0])
    cube([1, 1, 3.61]);
  translate([70, 129, 0])
    cube([1, 1, 4.51]);
  translate([71, 129, 0])
    cube([1, 1, 5.76]);
  translate([72, 129, 0])
    cube([1, 1, 5.80]);
  translate([73, 129, 0])
    cube([1, 1, 5.45]);
  translate([74, 129, 0])
    cube([1, 1, 5.41]);
  translate([75, 129, 0])
    cube([1, 1, 5.33]);
  translate([76, 129, 0])
    cube([1, 1, 5.33]);
  translate([77, 129, 0])
    cube([1, 1, 5.45]);
  translate([78, 129, 0])
    cube([1, 1, 5.02]);
  translate([79, 129, 0])
    cube([1, 1, 1.88]);
  translate([80, 129, 0])
    cube([1, 1, 2.04]);
  translate([81, 129, 0])
    cube([1, 1, 2.27]);
  translate([82, 129, 0])
    cube([1, 1, 0.63]);
  translate([83, 129, 0])
    cube([1, 1, 2.78]);
  translate([84, 129, 0])
    cube([1, 1, 2.51]);
  translate([85, 129, 0])
    cube([1, 1, 1.14]);
  translate([86, 129, 0])
    cube([1, 1, 2.67]);
  translate([87, 129, 0])
    cube([1, 1, 2.35]);
  translate([88, 129, 0])
    cube([1, 1, 1.76]);
  translate([89, 129, 0])
    cube([1, 1, 1.22]);
  translate([90, 129, 0])
    cube([1, 1, 1.06]);
  translate([91, 129, 0])
    cube([1, 1, 1.33]);
  translate([92, 129, 0])
    cube([1, 1, 1.49]);
  translate([93, 129, 0])
    cube([1, 1, 1.88]);
  translate([94, 129, 0])
    cube([1, 1, 2.31]);
  translate([95, 129, 0])
    cube([1, 1, 1.76]);
  translate([96, 129, 0])
    cube([1, 1, 1.76]);
  translate([97, 129, 0])
    cube([1, 1, 2.63]);
  translate([98, 129, 0])
    cube([1, 1, 2.27]);
  translate([99, 129, 0])
    cube([1, 1, 1.49]);
  translate([100, 129, 0])
    cube([1, 1, 1.80]);
  translate([101, 129, 0])
    cube([1, 1, 1.69]);
  translate([102, 129, 0])
    cube([1, 1, 1.61]);
  translate([103, 129, 0])
    cube([1, 1, 1.57]);
  translate([104, 129, 0])
    cube([1, 1, 2.35]);
  translate([105, 129, 0])
    cube([1, 1, 2.27]);
  translate([106, 129, 0])
    cube([1, 1, 2.31]);
  translate([107, 129, 0])
    cube([1, 1, 2.55]);
  translate([108, 129, 0])
    cube([1, 1, 2.24]);
  translate([109, 129, 0])
    cube([1, 1, 2.90]);
  translate([110, 129, 0])
    cube([1, 1, 3.06]);
  translate([111, 129, 0])
    cube([1, 1, 2.47]);
  translate([112, 129, 0])
    cube([1, 1, 2.78]);
  translate([113, 129, 0])
    cube([1, 1, 2.71]);
  translate([114, 129, 0])
    cube([1, 1, 2.82]);
  translate([115, 129, 0])
    cube([1, 1, 2.59]);
  translate([116, 129, 0])
    cube([1, 1, 3.14]);
  translate([117, 129, 0])
    cube([1, 1, 2.67]);
  translate([118, 129, 0])
    cube([1, 1, 2.78]);
  translate([119, 129, 0])
    cube([1, 1, 3.57]);
  translate([120, 129, 0])
    cube([1, 1, 3.29]);
  translate([121, 129, 0])
    cube([1, 1, 2.82]);
  translate([122, 129, 0])
    cube([1, 1, 3.18]);
  translate([123, 129, 0])
    cube([1, 1, 3.10]);
  translate([124, 129, 0])
    cube([1, 1, 3.37]);
  translate([125, 129, 0])
    cube([1, 1, 3.76]);
  translate([126, 129, 0])
    cube([1, 1, 3.10]);
  translate([127, 129, 0])
    cube([1, 1, 3.45]);
  translate([128, 129, 0])
    cube([1, 1, 2.90]);
  translate([129, 129, 0])
    cube([1, 1, 3.33]);
  translate([130, 129, 0])
    cube([1, 1, 3.61]);
  translate([131, 129, 0])
    cube([1, 1, 3.10]);
  translate([132, 129, 0])
    cube([1, 1, 3.49]);
  translate([133, 129, 0])
    cube([1, 1, 3.22]);
  translate([134, 129, 0])
    cube([1, 1, 2.43]);
  translate([135, 129, 0])
    cube([1, 1, 2.98]);
  translate([136, 129, 0])
    cube([1, 1, 2.63]);
  translate([137, 129, 0])
    cube([1, 1, 3.29]);
  translate([138, 129, 0])
    cube([1, 1, 2.63]);
  translate([139, 129, 0])
    cube([1, 1, 2.20]);
  translate([140, 129, 0])
    cube([1, 1, 1.76]);
  translate([141, 129, 0])
    cube([1, 1, 2.43]);
  translate([142, 129, 0])
    cube([1, 1, 2.35]);
  translate([143, 129, 0])
    cube([1, 1, 2.39]);
  translate([144, 129, 0])
    cube([1, 1, 2.39]);
  translate([145, 129, 0])
    cube([1, 1, 2.04]);
  translate([146, 129, 0])
    cube([1, 1, 1.45]);
  translate([147, 129, 0])
    cube([1, 1, 1.37]);
  translate([148, 129, 0])
    cube([1, 1, 1.37]);
  translate([149, 129, 0])
    cube([1, 1, 1.37]);
  translate([150, 129, 0])
    cube([1, 1, 1.37]);
  translate([151, 129, 0])
    cube([1, 1, 1.37]);
  translate([152, 129, 0])
    cube([1, 1, 1.37]);
  translate([153, 129, 0])
    cube([1, 1, 1.37]);
  translate([154, 129, 0])
    cube([1, 1, 1.37]);
  translate([155, 129, 0])
    cube([1, 1, 1.37]);
  translate([156, 129, 0])
    cube([1, 1, 1.37]);
  translate([157, 129, 0])
    cube([1, 1, 1.37]);
  translate([158, 129, 0])
    cube([1, 1, 1.41]);
  translate([159, 129, 0])
    cube([1, 1, 1.41]);
  translate([160, 129, 0])
    cube([1, 1, 1.41]);
  translate([161, 129, 0])
    cube([1, 1, 1.41]);
  translate([162, 129, 0])
    cube([1, 1, 1.41]);
  translate([163, 129, 0])
    cube([1, 1, 1.41]);
  translate([164, 129, 0])
    cube([1, 1, 1.41]);
  translate([165, 129, 0])
    cube([1, 1, 1.41]);
  translate([166, 129, 0])
    cube([1, 1, 1.41]);
  translate([167, 129, 0])
    cube([1, 1, 1.49]);
  translate([168, 129, 0])
    cube([1, 1, 1.41]);
  translate([169, 129, 0])
    cube([1, 1, 1.41]);
  translate([170, 129, 0])
    cube([1, 1, 1.45]);
  translate([171, 129, 0])
    cube([1, 1, 1.41]);
  translate([172, 129, 0])
    cube([1, 1, 1.41]);
  translate([173, 129, 0])
    cube([1, 1, 1.45]);
  translate([174, 129, 0])
    cube([1, 1, 1.45]);
  translate([175, 129, 0])
    cube([1, 1, 1.45]);
  translate([176, 129, 0])
    cube([1, 1, 1.45]);
  translate([177, 129, 0])
    cube([1, 1, 1.45]);
  translate([178, 129, 0])
    cube([1, 1, 1.49]);
  translate([179, 129, 0])
    cube([1, 1, 1.45]);
  translate([180, 129, 0])
    cube([1, 1, 1.45]);
  translate([181, 129, 0])
    cube([1, 1, 1.45]);
  translate([182, 129, 0])
    cube([1, 1, 1.45]);
  translate([183, 129, 0])
    cube([1, 1, 1.45]);
  translate([184, 129, 0])
    cube([1, 1, 1.45]);
  translate([185, 129, 0])
    cube([1, 1, 1.45]);
  translate([186, 129, 0])
    cube([1, 1, 1.45]);
  translate([187, 129, 0])
    cube([1, 1, 1.45]);
  translate([188, 129, 0])
    cube([1, 1, 1.45]);
  translate([189, 129, 0])
    cube([1, 1, 1.45]);
  translate([190, 129, 0])
    cube([1, 1, 1.45]);
  translate([191, 129, 0])
    cube([1, 1, 1.45]);
  translate([192, 129, 0])
    cube([1, 1, 1.45]);
  translate([193, 129, 0])
    cube([1, 1, 1.45]);
  translate([194, 129, 0])
    cube([1, 1, 1.45]);
  translate([195, 129, 0])
    cube([1, 1, 1.45]);
  translate([196, 129, 0])
    cube([1, 1, 1.45]);
  translate([197, 129, 0])
    cube([1, 1, 1.45]);
  translate([198, 129, 0])
    cube([1, 1, 1.45]);
  translate([199, 129, 0])
    cube([1, 1, 1.45]);
  translate([200, 129, 0])
    cube([1, 1, 1.45]);
  translate([201, 129, 0])
    cube([1, 1, 1.45]);
  translate([202, 129, 0])
    cube([1, 1, 1.45]);
  translate([203, 129, 0])
    cube([1, 1, 1.45]);
  translate([204, 129, 0])
    cube([1, 1, 1.45]);
  translate([205, 129, 0])
    cube([1, 1, 1.45]);
  translate([206, 129, 0])
    cube([1, 1, 1.45]);
  translate([207, 129, 0])
    cube([1, 1, 1.45]);
  translate([208, 129, 0])
    cube([1, 1, 1.45]);
  translate([209, 129, 0])
    cube([1, 1, 1.45]);
  translate([210, 129, 0])
    cube([1, 1, 1.45]);
  translate([211, 129, 0])
    cube([1, 1, 1.45]);
  translate([212, 129, 0])
    cube([1, 1, 1.45]);
  translate([213, 129, 0])
    cube([1, 1, 1.45]);
  translate([214, 129, 0])
    cube([1, 1, 1.45]);
  translate([215, 129, 0])
    cube([1, 1, 1.45]);
  translate([216, 129, 0])
    cube([1, 1, 1.45]);
  translate([217, 129, 0])
    cube([1, 1, 1.45]);
  translate([218, 129, 0])
    cube([1, 1, 1.45]);
  translate([219, 129, 0])
    cube([1, 1, 1.45]);
  translate([220, 129, 0])
    cube([1, 1, 1.45]);
  translate([221, 129, 0])
    cube([1, 1, 1.45]);
  translate([222, 129, 0])
    cube([1, 1, 1.45]);
  translate([223, 129, 0])
    cube([1, 1, 1.45]);
  translate([224, 129, 0])
    cube([1, 1, 1.45]);
  translate([225, 129, 0])
    cube([1, 1, 1.45]);
  translate([226, 129, 0])
    cube([1, 1, 1.45]);
  translate([227, 129, 0])
    cube([1, 1, 1.45]);
  translate([228, 129, 0])
    cube([1, 1, 1.45]);
  translate([229, 129, 0])
    cube([1, 1, 1.45]);
  translate([230, 129, 0])
    cube([1, 1, 1.45]);
  translate([231, 129, 0])
    cube([1, 1, 1.45]);
  translate([232, 129, 0])
    cube([1, 1, 1.45]);
  translate([233, 129, 0])
    cube([1, 1, 1.45]);
  translate([234, 129, 0])
    cube([1, 1, 1.45]);
  translate([235, 129, 0])
    cube([1, 1, 1.45]);
  translate([236, 129, 0])
    cube([1, 1, 1.45]);
  translate([237, 129, 0])
    cube([1, 1, 1.45]);
  translate([238, 129, 0])
    cube([1, 1, 1.45]);
  translate([239, 129, 0])
    cube([1, 1, 1.45]);
  translate([240, 129, 0])
    cube([1, 1, 1.45]);
  translate([241, 129, 0])
    cube([1, 1, 1.45]);
  translate([242, 129, 0])
    cube([1, 1, 1.45]);
  translate([243, 129, 0])
    cube([1, 1, 1.45]);
  translate([244, 129, 0])
    cube([1, 1, 1.45]);
  translate([245, 129, 0])
    cube([1, 1, 1.45]);
  translate([246, 129, 0])
    cube([1, 1, 1.45]);
  translate([0, 130, 0])
    cube([1, 1, 1.61]);
  translate([1, 130, 0])
    cube([1, 1, 1.61]);
  translate([2, 130, 0])
    cube([1, 1, 1.61]);
  translate([3, 130, 0])
    cube([1, 1, 1.61]);
  translate([4, 130, 0])
    cube([1, 1, 1.61]);
  translate([5, 130, 0])
    cube([1, 1, 1.61]);
  translate([6, 130, 0])
    cube([1, 1, 1.61]);
  translate([7, 130, 0])
    cube([1, 1, 1.61]);
  translate([8, 130, 0])
    cube([1, 1, 1.61]);
  translate([9, 130, 0])
    cube([1, 1, 1.57]);
  translate([10, 130, 0])
    cube([1, 1, 1.57]);
  translate([11, 130, 0])
    cube([1, 1, 1.65]);
  translate([12, 130, 0])
    cube([1, 1, 1.57]);
  translate([13, 130, 0])
    cube([1, 1, 1.57]);
  translate([14, 130, 0])
    cube([1, 1, 1.57]);
  translate([15, 130, 0])
    cube([1, 1, 1.61]);
  translate([16, 130, 0])
    cube([1, 1, 1.57]);
  translate([17, 130, 0])
    cube([1, 1, 1.57]);
  translate([18, 130, 0])
    cube([1, 1, 1.57]);
  translate([19, 130, 0])
    cube([1, 1, 1.57]);
  translate([20, 130, 0])
    cube([1, 1, 1.57]);
  translate([21, 130, 0])
    cube([1, 1, 1.57]);
  translate([22, 130, 0])
    cube([1, 1, 1.57]);
  translate([23, 130, 0])
    cube([1, 1, 1.57]);
  translate([24, 130, 0])
    cube([1, 1, 1.53]);
  translate([25, 130, 0])
    cube([1, 1, 1.53]);
  translate([26, 130, 0])
    cube([1, 1, 1.57]);
  translate([27, 130, 0])
    cube([1, 1, 1.57]);
  translate([28, 130, 0])
    cube([1, 1, 1.57]);
  translate([29, 130, 0])
    cube([1, 1, 1.53]);
  translate([30, 130, 0])
    cube([1, 1, 1.53]);
  translate([31, 130, 0])
    cube([1, 1, 1.53]);
  translate([32, 130, 0])
    cube([1, 1, 1.53]);
  translate([33, 130, 0])
    cube([1, 1, 1.53]);
  translate([34, 130, 0])
    cube([1, 1, 1.53]);
  translate([35, 130, 0])
    cube([1, 1, 1.49]);
  translate([36, 130, 0])
    cube([1, 1, 1.49]);
  translate([37, 130, 0])
    cube([1, 1, 1.49]);
  translate([38, 130, 0])
    cube([1, 1, 1.49]);
  translate([39, 130, 0])
    cube([1, 1, 1.49]);
  translate([40, 130, 0])
    cube([1, 1, 1.49]);
  translate([41, 130, 0])
    cube([1, 1, 1.49]);
  translate([42, 130, 0])
    cube([1, 1, 1.49]);
  translate([43, 130, 0])
    cube([1, 1, 1.49]);
  translate([44, 130, 0])
    cube([1, 1, 1.49]);
  translate([45, 130, 0])
    cube([1, 1, 1.49]);
  translate([46, 130, 0])
    cube([1, 1, 1.45]);
  translate([47, 130, 0])
    cube([1, 1, 1.49]);
  translate([48, 130, 0])
    cube([1, 1, 5.22]);
  translate([49, 130, 0])
    cube([1, 1, 5.88]);
  translate([50, 130, 0])
    cube([1, 1, 3.29]);
  translate([51, 130, 0])
    cube([1, 1, 3.33]);
  translate([52, 130, 0])
    cube([1, 1, 3.37]);
  translate([53, 130, 0])
    cube([1, 1, 4.04]);
  translate([54, 130, 0])
    cube([1, 1, 4.51]);
  translate([55, 130, 0])
    cube([1, 1, 5.18]);
  translate([56, 130, 0])
    cube([1, 1, 5.33]);
  translate([57, 130, 0])
    cube([1, 1, 5.61]);
  translate([58, 130, 0])
    cube([1, 1, 6.04]);
  translate([59, 130, 0])
    cube([1, 1, 6.35]);
  translate([60, 130, 0])
    cube([1, 1, 6.04]);
  translate([61, 130, 0])
    cube([1, 1, 5.69]);
  translate([62, 130, 0])
    cube([1, 1, 5.37]);
  translate([63, 130, 0])
    cube([1, 1, 5.33]);
  translate([64, 130, 0])
    cube([1, 1, 5.73]);
  translate([65, 130, 0])
    cube([1, 1, 1.49]);
  translate([66, 130, 0])
    cube([1, 1, 1.33]);
  translate([67, 130, 0])
    cube([1, 1, 1.61]);
  translate([68, 130, 0])
    cube([1, 1, 3.10]);
  translate([69, 130, 0])
    cube([1, 1, 3.06]);
  translate([70, 130, 0])
    cube([1, 1, 4.31]);
  translate([71, 130, 0])
    cube([1, 1, 2.00]);
  translate([72, 130, 0])
    cube([1, 1, 1.88]);
  translate([73, 130, 0])
    cube([1, 1, 1.73]);
  translate([74, 130, 0])
    cube([1, 1, 5.25]);
  translate([75, 130, 0])
    cube([1, 1, 4.94]);
  translate([76, 130, 0])
    cube([1, 1, 5.37]);
  translate([77, 130, 0])
    cube([1, 1, 5.37]);
  translate([78, 130, 0])
    cube([1, 1, 5.18]);
  translate([79, 130, 0])
    cube([1, 1, 3.10]);
  translate([80, 130, 0])
    cube([1, 1, 2.12]);
  translate([81, 130, 0])
    cube([1, 1, 2.20]);
  translate([82, 130, 0])
    cube([1, 1, 1.96]);
  translate([83, 130, 0])
    cube([1, 1, 1.61]);
  translate([84, 130, 0])
    cube([1, 1, 2.59]);
  translate([85, 130, 0])
    cube([1, 1, 2.75]);
  translate([86, 130, 0])
    cube([1, 1, 1.65]);
  translate([87, 130, 0])
    cube([1, 1, 2.39]);
  translate([88, 130, 0])
    cube([1, 1, 1.88]);
  translate([89, 130, 0])
    cube([1, 1, 1.37]);
  translate([90, 130, 0])
    cube([1, 1, 0.98]);
  translate([91, 130, 0])
    cube([1, 1, 0.94]);
  translate([92, 130, 0])
    cube([1, 1, 1.45]);
  translate([93, 130, 0])
    cube([1, 1, 1.57]);
  translate([94, 130, 0])
    cube([1, 1, 1.69]);
  translate([95, 130, 0])
    cube([1, 1, 1.65]);
  translate([96, 130, 0])
    cube([1, 1, 1.84]);
  translate([97, 130, 0])
    cube([1, 1, 1.45]);
  translate([98, 130, 0])
    cube([1, 1, 1.25]);
  translate([99, 130, 0])
    cube([1, 1, 1.29]);
  translate([100, 130, 0])
    cube([1, 1, 1.61]);
  translate([101, 130, 0])
    cube([1, 1, 2.04]);
  translate([102, 130, 0])
    cube([1, 1, 2.39]);
  translate([103, 130, 0])
    cube([1, 1, 2.55]);
  translate([104, 130, 0])
    cube([1, 1, 2.71]);
  translate([105, 130, 0])
    cube([1, 1, 2.55]);
  translate([106, 130, 0])
    cube([1, 1, 2.67]);
  translate([107, 130, 0])
    cube([1, 1, 2.98]);
  translate([108, 130, 0])
    cube([1, 1, 2.78]);
  translate([109, 130, 0])
    cube([1, 1, 3.10]);
  translate([110, 130, 0])
    cube([1, 1, 2.78]);
  translate([111, 130, 0])
    cube([1, 1, 2.63]);
  translate([112, 130, 0])
    cube([1, 1, 2.75]);
  translate([113, 130, 0])
    cube([1, 1, 2.71]);
  translate([114, 130, 0])
    cube([1, 1, 2.63]);
  translate([115, 130, 0])
    cube([1, 1, 2.35]);
  translate([116, 130, 0])
    cube([1, 1, 2.51]);
  translate([117, 130, 0])
    cube([1, 1, 2.63]);
  translate([118, 130, 0])
    cube([1, 1, 3.25]);
  translate([119, 130, 0])
    cube([1, 1, 2.78]);
  translate([120, 130, 0])
    cube([1, 1, 3.02]);
  translate([121, 130, 0])
    cube([1, 1, 2.86]);
  translate([122, 130, 0])
    cube([1, 1, 2.82]);
  translate([123, 130, 0])
    cube([1, 1, 3.06]);
  translate([124, 130, 0])
    cube([1, 1, 3.14]);
  translate([125, 130, 0])
    cube([1, 1, 3.88]);
  translate([126, 130, 0])
    cube([1, 1, 2.75]);
  translate([127, 130, 0])
    cube([1, 1, 3.10]);
  translate([128, 130, 0])
    cube([1, 1, 3.49]);
  translate([129, 130, 0])
    cube([1, 1, 3.73]);
  translate([130, 130, 0])
    cube([1, 1, 2.78]);
  translate([131, 130, 0])
    cube([1, 1, 3.73]);
  translate([132, 130, 0])
    cube([1, 1, 3.84]);
  translate([133, 130, 0])
    cube([1, 1, 3.57]);
  translate([134, 130, 0])
    cube([1, 1, 2.98]);
  translate([135, 130, 0])
    cube([1, 1, 2.08]);
  translate([136, 130, 0])
    cube([1, 1, 2.24]);
  translate([137, 130, 0])
    cube([1, 1, 2.51]);
  translate([138, 130, 0])
    cube([1, 1, 2.39]);
  translate([139, 130, 0])
    cube([1, 1, 1.92]);
  translate([140, 130, 0])
    cube([1, 1, 2.43]);
  translate([141, 130, 0])
    cube([1, 1, 1.92]);
  translate([142, 130, 0])
    cube([1, 1, 1.45]);
  translate([143, 130, 0])
    cube([1, 1, 1.88]);
  translate([144, 130, 0])
    cube([1, 1, 2.12]);
  translate([145, 130, 0])
    cube([1, 1, 1.33]);
  translate([146, 130, 0])
    cube([1, 1, 1.33]);
  translate([147, 130, 0])
    cube([1, 1, 1.37]);
  translate([148, 130, 0])
    cube([1, 1, 1.37]);
  translate([149, 130, 0])
    cube([1, 1, 1.37]);
  translate([150, 130, 0])
    cube([1, 1, 1.37]);
  translate([151, 130, 0])
    cube([1, 1, 1.37]);
  translate([152, 130, 0])
    cube([1, 1, 1.37]);
  translate([153, 130, 0])
    cube([1, 1, 1.37]);
  translate([154, 130, 0])
    cube([1, 1, 1.37]);
  translate([155, 130, 0])
    cube([1, 1, 1.37]);
  translate([156, 130, 0])
    cube([1, 1, 1.33]);
  translate([157, 130, 0])
    cube([1, 1, 1.37]);
  translate([158, 130, 0])
    cube([1, 1, 1.41]);
  translate([159, 130, 0])
    cube([1, 1, 1.41]);
  translate([160, 130, 0])
    cube([1, 1, 1.41]);
  translate([161, 130, 0])
    cube([1, 1, 1.41]);
  translate([162, 130, 0])
    cube([1, 1, 1.41]);
  translate([163, 130, 0])
    cube([1, 1, 1.41]);
  translate([164, 130, 0])
    cube([1, 1, 1.41]);
  translate([165, 130, 0])
    cube([1, 1, 1.41]);
  translate([166, 130, 0])
    cube([1, 1, 1.41]);
  translate([167, 130, 0])
    cube([1, 1, 1.41]);
  translate([168, 130, 0])
    cube([1, 1, 1.45]);
  translate([169, 130, 0])
    cube([1, 1, 1.41]);
  translate([170, 130, 0])
    cube([1, 1, 1.41]);
  translate([171, 130, 0])
    cube([1, 1, 1.45]);
  translate([172, 130, 0])
    cube([1, 1, 1.45]);
  translate([173, 130, 0])
    cube([1, 1, 1.45]);
  translate([174, 130, 0])
    cube([1, 1, 1.41]);
  translate([175, 130, 0])
    cube([1, 1, 1.45]);
  translate([176, 130, 0])
    cube([1, 1, 1.45]);
  translate([177, 130, 0])
    cube([1, 1, 1.41]);
  translate([178, 130, 0])
    cube([1, 1, 1.49]);
  translate([179, 130, 0])
    cube([1, 1, 1.45]);
  translate([180, 130, 0])
    cube([1, 1, 1.45]);
  translate([181, 130, 0])
    cube([1, 1, 1.45]);
  translate([182, 130, 0])
    cube([1, 1, 1.45]);
  translate([183, 130, 0])
    cube([1, 1, 1.45]);
  translate([184, 130, 0])
    cube([1, 1, 1.45]);
  translate([185, 130, 0])
    cube([1, 1, 1.45]);
  translate([186, 130, 0])
    cube([1, 1, 1.45]);
  translate([187, 130, 0])
    cube([1, 1, 1.45]);
  translate([188, 130, 0])
    cube([1, 1, 1.45]);
  translate([189, 130, 0])
    cube([1, 1, 1.45]);
  translate([190, 130, 0])
    cube([1, 1, 1.45]);
  translate([191, 130, 0])
    cube([1, 1, 1.45]);
  translate([192, 130, 0])
    cube([1, 1, 1.45]);
  translate([193, 130, 0])
    cube([1, 1, 1.45]);
  translate([194, 130, 0])
    cube([1, 1, 1.45]);
  translate([195, 130, 0])
    cube([1, 1, 1.45]);
  translate([196, 130, 0])
    cube([1, 1, 1.45]);
  translate([197, 130, 0])
    cube([1, 1, 1.45]);
  translate([198, 130, 0])
    cube([1, 1, 1.45]);
  translate([199, 130, 0])
    cube([1, 1, 1.45]);
  translate([200, 130, 0])
    cube([1, 1, 1.45]);
  translate([201, 130, 0])
    cube([1, 1, 1.45]);
  translate([202, 130, 0])
    cube([1, 1, 1.45]);
  translate([203, 130, 0])
    cube([1, 1, 1.45]);
  translate([204, 130, 0])
    cube([1, 1, 1.45]);
  translate([205, 130, 0])
    cube([1, 1, 1.45]);
  translate([206, 130, 0])
    cube([1, 1, 1.45]);
  translate([207, 130, 0])
    cube([1, 1, 1.45]);
  translate([208, 130, 0])
    cube([1, 1, 1.45]);
  translate([209, 130, 0])
    cube([1, 1, 1.45]);
  translate([210, 130, 0])
    cube([1, 1, 1.45]);
  translate([211, 130, 0])
    cube([1, 1, 1.45]);
  translate([212, 130, 0])
    cube([1, 1, 1.45]);
  translate([213, 130, 0])
    cube([1, 1, 1.45]);
  translate([214, 130, 0])
    cube([1, 1, 1.45]);
  translate([215, 130, 0])
    cube([1, 1, 1.45]);
  translate([216, 130, 0])
    cube([1, 1, 1.45]);
  translate([217, 130, 0])
    cube([1, 1, 1.45]);
  translate([218, 130, 0])
    cube([1, 1, 1.45]);
  translate([219, 130, 0])
    cube([1, 1, 1.45]);
  translate([220, 130, 0])
    cube([1, 1, 1.45]);
  translate([221, 130, 0])
    cube([1, 1, 1.45]);
  translate([222, 130, 0])
    cube([1, 1, 1.45]);
  translate([223, 130, 0])
    cube([1, 1, 1.45]);
  translate([224, 130, 0])
    cube([1, 1, 1.45]);
  translate([225, 130, 0])
    cube([1, 1, 1.45]);
  translate([226, 130, 0])
    cube([1, 1, 1.45]);
  translate([227, 130, 0])
    cube([1, 1, 1.45]);
  translate([228, 130, 0])
    cube([1, 1, 1.45]);
  translate([229, 130, 0])
    cube([1, 1, 1.45]);
  translate([230, 130, 0])
    cube([1, 1, 1.45]);
  translate([231, 130, 0])
    cube([1, 1, 1.45]);
  translate([232, 130, 0])
    cube([1, 1, 1.45]);
  translate([233, 130, 0])
    cube([1, 1, 1.45]);
  translate([234, 130, 0])
    cube([1, 1, 1.45]);
  translate([235, 130, 0])
    cube([1, 1, 1.45]);
  translate([236, 130, 0])
    cube([1, 1, 1.45]);
  translate([237, 130, 0])
    cube([1, 1, 1.45]);
  translate([238, 130, 0])
    cube([1, 1, 1.45]);
  translate([239, 130, 0])
    cube([1, 1, 1.45]);
  translate([240, 130, 0])
    cube([1, 1, 1.45]);
  translate([241, 130, 0])
    cube([1, 1, 1.45]);
  translate([242, 130, 0])
    cube([1, 1, 1.45]);
  translate([243, 130, 0])
    cube([1, 1, 1.45]);
  translate([244, 130, 0])
    cube([1, 1, 1.45]);
  translate([245, 130, 0])
    cube([1, 1, 1.45]);
  translate([246, 130, 0])
    cube([1, 1, 1.45]);
  translate([0, 131, 0])
    cube([1, 1, 1.61]);
  translate([1, 131, 0])
    cube([1, 1, 1.61]);
  translate([2, 131, 0])
    cube([1, 1, 1.61]);
  translate([3, 131, 0])
    cube([1, 1, 1.61]);
  translate([4, 131, 0])
    cube([1, 1, 1.61]);
  translate([5, 131, 0])
    cube([1, 1, 1.61]);
  translate([6, 131, 0])
    cube([1, 1, 1.61]);
  translate([7, 131, 0])
    cube([1, 1, 1.61]);
  translate([8, 131, 0])
    cube([1, 1, 1.61]);
  translate([9, 131, 0])
    cube([1, 1, 1.57]);
  translate([10, 131, 0])
    cube([1, 1, 1.57]);
  translate([11, 131, 0])
    cube([1, 1, 1.57]);
  translate([12, 131, 0])
    cube([1, 1, 1.61]);
  translate([13, 131, 0])
    cube([1, 1, 1.61]);
  translate([14, 131, 0])
    cube([1, 1, 1.57]);
  translate([15, 131, 0])
    cube([1, 1, 1.61]);
  translate([16, 131, 0])
    cube([1, 1, 1.57]);
  translate([17, 131, 0])
    cube([1, 1, 1.57]);
  translate([18, 131, 0])
    cube([1, 1, 1.57]);
  translate([19, 131, 0])
    cube([1, 1, 1.57]);
  translate([20, 131, 0])
    cube([1, 1, 1.57]);
  translate([21, 131, 0])
    cube([1, 1, 1.57]);
  translate([22, 131, 0])
    cube([1, 1, 1.53]);
  translate([23, 131, 0])
    cube([1, 1, 1.53]);
  translate([24, 131, 0])
    cube([1, 1, 1.61]);
  translate([25, 131, 0])
    cube([1, 1, 1.53]);
  translate([26, 131, 0])
    cube([1, 1, 1.57]);
  translate([27, 131, 0])
    cube([1, 1, 1.53]);
  translate([28, 131, 0])
    cube([1, 1, 1.49]);
  translate([29, 131, 0])
    cube([1, 1, 1.57]);
  translate([30, 131, 0])
    cube([1, 1, 1.53]);
  translate([31, 131, 0])
    cube([1, 1, 1.53]);
  translate([32, 131, 0])
    cube([1, 1, 1.53]);
  translate([33, 131, 0])
    cube([1, 1, 1.53]);
  translate([34, 131, 0])
    cube([1, 1, 1.53]);
  translate([35, 131, 0])
    cube([1, 1, 1.49]);
  translate([36, 131, 0])
    cube([1, 1, 1.49]);
  translate([37, 131, 0])
    cube([1, 1, 1.49]);
  translate([38, 131, 0])
    cube([1, 1, 1.49]);
  translate([39, 131, 0])
    cube([1, 1, 1.49]);
  translate([40, 131, 0])
    cube([1, 1, 1.49]);
  translate([41, 131, 0])
    cube([1, 1, 1.49]);
  translate([42, 131, 0])
    cube([1, 1, 1.49]);
  translate([43, 131, 0])
    cube([1, 1, 1.49]);
  translate([44, 131, 0])
    cube([1, 1, 1.49]);
  translate([45, 131, 0])
    cube([1, 1, 1.49]);
  translate([46, 131, 0])
    cube([1, 1, 1.45]);
  translate([47, 131, 0])
    cube([1, 1, 1.49]);
  translate([48, 131, 0])
    cube([1, 1, 1.06]);
  translate([49, 131, 0])
    cube([1, 1, 6.86]);
  translate([50, 131, 0])
    cube([1, 1, 3.65]);
  translate([51, 131, 0])
    cube([1, 1, 3.33]);
  translate([52, 131, 0])
    cube([1, 1, 3.29]);
  translate([53, 131, 0])
    cube([1, 1, 3.96]);
  translate([54, 131, 0])
    cube([1, 1, 4.39]);
  translate([55, 131, 0])
    cube([1, 1, 4.94]);
  translate([56, 131, 0])
    cube([1, 1, 5.25]);
  translate([57, 131, 0])
    cube([1, 1, 5.53]);
  translate([58, 131, 0])
    cube([1, 1, 5.96]);
  translate([59, 131, 0])
    cube([1, 1, 6.20]);
  translate([60, 131, 0])
    cube([1, 1, 6.24]);
  translate([61, 131, 0])
    cube([1, 1, 5.73]);
  translate([62, 131, 0])
    cube([1, 1, 5.57]);
  translate([63, 131, 0])
    cube([1, 1, 5.29]);
  translate([64, 131, 0])
    cube([1, 1, 5.18]);
  translate([65, 131, 0])
    cube([1, 1, 2.47]);
  translate([66, 131, 0])
    cube([1, 1, 1.53]);
  translate([67, 131, 0])
    cube([1, 1, 2.20]);
  translate([68, 131, 0])
    cube([1, 1, 4.24]);
  translate([69, 131, 0])
    cube([1, 1, 3.69]);
  translate([70, 131, 0])
    cube([1, 1, 3.57]);
  translate([71, 131, 0])
    cube([1, 1, 2.82]);
  translate([72, 131, 0])
    cube([1, 1, 1.92]);
  translate([73, 131, 0])
    cube([1, 1, 1.65]);
  translate([74, 131, 0])
    cube([1, 1, 1.29]);
  translate([75, 131, 0])
    cube([1, 1, 1.73]);
  translate([76, 131, 0])
    cube([1, 1, 5.29]);
  translate([77, 131, 0])
    cube([1, 1, 5.29]);
  translate([78, 131, 0])
    cube([1, 1, 5.33]);
  translate([79, 131, 0])
    cube([1, 1, 4.71]);
  translate([80, 131, 0])
    cube([1, 1, 1.73]);
  translate([81, 131, 0])
    cube([1, 1, 1.92]);
  translate([82, 131, 0])
    cube([1, 1, 1.22]);
  translate([83, 131, 0])
    cube([1, 1, 1.22]);
  translate([84, 131, 0])
    cube([1, 1, 2.04]);
  translate([85, 131, 0])
    cube([1, 1, 3.14]);
  translate([86, 131, 0])
    cube([1, 1, 1.37]);
  translate([87, 131, 0])
    cube([1, 1, 2.35]);
  translate([88, 131, 0])
    cube([1, 1, 1.88]);
  translate([89, 131, 0])
    cube([1, 1, 1.37]);
  translate([90, 131, 0])
    cube([1, 1, 0.98]);
  translate([91, 131, 0])
    cube([1, 1, 0.86]);
  translate([92, 131, 0])
    cube([1, 1, 1.22]);
  translate([93, 131, 0])
    cube([1, 1, 1.45]);
  translate([94, 131, 0])
    cube([1, 1, 1.57]);
  translate([95, 131, 0])
    cube([1, 1, 1.57]);
  translate([96, 131, 0])
    cube([1, 1, 1.25]);
  translate([97, 131, 0])
    cube([1, 1, 0.98]);
  translate([98, 131, 0])
    cube([1, 1, 1.96]);
  translate([99, 131, 0])
    cube([1, 1, 2.16]);
  translate([100, 131, 0])
    cube([1, 1, 2.08]);
  translate([101, 131, 0])
    cube([1, 1, 2.47]);
  translate([102, 131, 0])
    cube([1, 1, 2.67]);
  translate([103, 131, 0])
    cube([1, 1, 2.71]);
  translate([104, 131, 0])
    cube([1, 1, 2.63]);
  translate([105, 131, 0])
    cube([1, 1, 3.49]);
  translate([106, 131, 0])
    cube([1, 1, 3.02]);
  translate([107, 131, 0])
    cube([1, 1, 2.35]);
  translate([108, 131, 0])
    cube([1, 1, 3.02]);
  translate([109, 131, 0])
    cube([1, 1, 2.12]);
  translate([110, 131, 0])
    cube([1, 1, 2.78]);
  translate([111, 131, 0])
    cube([1, 1, 2.47]);
  translate([112, 131, 0])
    cube([1, 1, 2.51]);
  translate([113, 131, 0])
    cube([1, 1, 2.55]);
  translate([114, 131, 0])
    cube([1, 1, 2.16]);
  translate([115, 131, 0])
    cube([1, 1, 2.90]);
  translate([116, 131, 0])
    cube([1, 1, 2.47]);
  translate([117, 131, 0])
    cube([1, 1, 3.14]);
  translate([118, 131, 0])
    cube([1, 1, 2.75]);
  translate([119, 131, 0])
    cube([1, 1, 2.98]);
  translate([120, 131, 0])
    cube([1, 1, 2.82]);
  translate([121, 131, 0])
    cube([1, 1, 2.75]);
  translate([122, 131, 0])
    cube([1, 1, 2.82]);
  translate([123, 131, 0])
    cube([1, 1, 2.86]);
  translate([124, 131, 0])
    cube([1, 1, 2.63]);
  translate([125, 131, 0])
    cube([1, 1, 3.92]);
  translate([126, 131, 0])
    cube([1, 1, 3.41]);
  translate([127, 131, 0])
    cube([1, 1, 2.43]);
  translate([128, 131, 0])
    cube([1, 1, 2.43]);
  translate([129, 131, 0])
    cube([1, 1, 3.14]);
  translate([130, 131, 0])
    cube([1, 1, 2.98]);
  translate([131, 131, 0])
    cube([1, 1, 2.20]);
  translate([132, 131, 0])
    cube([1, 1, 3.02]);
  translate([133, 131, 0])
    cube([1, 1, 3.06]);
  translate([134, 131, 0])
    cube([1, 1, 1.92]);
  translate([135, 131, 0])
    cube([1, 1, 1.76]);
  translate([136, 131, 0])
    cube([1, 1, 2.71]);
  translate([137, 131, 0])
    cube([1, 1, 2.12]);
  translate([138, 131, 0])
    cube([1, 1, 1.57]);
  translate([139, 131, 0])
    cube([1, 1, 2.16]);
  translate([140, 131, 0])
    cube([1, 1, 1.65]);
  translate([141, 131, 0])
    cube([1, 1, 1.96]);
  translate([142, 131, 0])
    cube([1, 1, 1.57]);
  translate([143, 131, 0])
    cube([1, 1, 2.20]);
  translate([144, 131, 0])
    cube([1, 1, 1.29]);
  translate([145, 131, 0])
    cube([1, 1, 1.37]);
  translate([146, 131, 0])
    cube([1, 1, 1.37]);
  translate([147, 131, 0])
    cube([1, 1, 1.37]);
  translate([148, 131, 0])
    cube([1, 1, 1.37]);
  translate([149, 131, 0])
    cube([1, 1, 1.37]);
  translate([150, 131, 0])
    cube([1, 1, 1.37]);
  translate([151, 131, 0])
    cube([1, 1, 1.37]);
  translate([152, 131, 0])
    cube([1, 1, 1.37]);
  translate([153, 131, 0])
    cube([1, 1, 1.37]);
  translate([154, 131, 0])
    cube([1, 1, 1.37]);
  translate([155, 131, 0])
    cube([1, 1, 1.37]);
  translate([156, 131, 0])
    cube([1, 1, 1.33]);
  translate([157, 131, 0])
    cube([1, 1, 1.37]);
  translate([158, 131, 0])
    cube([1, 1, 1.41]);
  translate([159, 131, 0])
    cube([1, 1, 1.41]);
  translate([160, 131, 0])
    cube([1, 1, 1.41]);
  translate([161, 131, 0])
    cube([1, 1, 1.41]);
  translate([162, 131, 0])
    cube([1, 1, 1.41]);
  translate([163, 131, 0])
    cube([1, 1, 1.41]);
  translate([164, 131, 0])
    cube([1, 1, 1.41]);
  translate([165, 131, 0])
    cube([1, 1, 1.41]);
  translate([166, 131, 0])
    cube([1, 1, 1.41]);
  translate([167, 131, 0])
    cube([1, 1, 1.41]);
  translate([168, 131, 0])
    cube([1, 1, 1.45]);
  translate([169, 131, 0])
    cube([1, 1, 1.45]);
  translate([170, 131, 0])
    cube([1, 1, 1.45]);
  translate([171, 131, 0])
    cube([1, 1, 1.45]);
  translate([172, 131, 0])
    cube([1, 1, 1.45]);
  translate([173, 131, 0])
    cube([1, 1, 1.45]);
  translate([174, 131, 0])
    cube([1, 1, 1.41]);
  translate([175, 131, 0])
    cube([1, 1, 1.45]);
  translate([176, 131, 0])
    cube([1, 1, 1.45]);
  translate([177, 131, 0])
    cube([1, 1, 1.49]);
  translate([178, 131, 0])
    cube([1, 1, 1.45]);
  translate([179, 131, 0])
    cube([1, 1, 1.45]);
  translate([180, 131, 0])
    cube([1, 1, 1.45]);
  translate([181, 131, 0])
    cube([1, 1, 1.45]);
  translate([182, 131, 0])
    cube([1, 1, 1.45]);
  translate([183, 131, 0])
    cube([1, 1, 1.45]);
  translate([184, 131, 0])
    cube([1, 1, 1.45]);
  translate([185, 131, 0])
    cube([1, 1, 1.45]);
  translate([186, 131, 0])
    cube([1, 1, 1.45]);
  translate([187, 131, 0])
    cube([1, 1, 1.45]);
  translate([188, 131, 0])
    cube([1, 1, 1.45]);
  translate([189, 131, 0])
    cube([1, 1, 1.45]);
  translate([190, 131, 0])
    cube([1, 1, 1.45]);
  translate([191, 131, 0])
    cube([1, 1, 1.45]);
  translate([192, 131, 0])
    cube([1, 1, 1.45]);
  translate([193, 131, 0])
    cube([1, 1, 1.45]);
  translate([194, 131, 0])
    cube([1, 1, 1.45]);
  translate([195, 131, 0])
    cube([1, 1, 1.45]);
  translate([196, 131, 0])
    cube([1, 1, 1.45]);
  translate([197, 131, 0])
    cube([1, 1, 1.45]);
  translate([198, 131, 0])
    cube([1, 1, 1.45]);
  translate([199, 131, 0])
    cube([1, 1, 1.45]);
  translate([200, 131, 0])
    cube([1, 1, 1.45]);
  translate([201, 131, 0])
    cube([1, 1, 1.45]);
  translate([202, 131, 0])
    cube([1, 1, 1.45]);
  translate([203, 131, 0])
    cube([1, 1, 1.45]);
  translate([204, 131, 0])
    cube([1, 1, 1.45]);
  translate([205, 131, 0])
    cube([1, 1, 1.45]);
  translate([206, 131, 0])
    cube([1, 1, 1.45]);
  translate([207, 131, 0])
    cube([1, 1, 1.45]);
  translate([208, 131, 0])
    cube([1, 1, 1.45]);
  translate([209, 131, 0])
    cube([1, 1, 1.45]);
  translate([210, 131, 0])
    cube([1, 1, 1.45]);
  translate([211, 131, 0])
    cube([1, 1, 1.45]);
  translate([212, 131, 0])
    cube([1, 1, 1.45]);
  translate([213, 131, 0])
    cube([1, 1, 1.45]);
  translate([214, 131, 0])
    cube([1, 1, 1.45]);
  translate([215, 131, 0])
    cube([1, 1, 1.45]);
  translate([216, 131, 0])
    cube([1, 1, 1.45]);
  translate([217, 131, 0])
    cube([1, 1, 1.45]);
  translate([218, 131, 0])
    cube([1, 1, 1.45]);
  translate([219, 131, 0])
    cube([1, 1, 1.45]);
  translate([220, 131, 0])
    cube([1, 1, 1.45]);
  translate([221, 131, 0])
    cube([1, 1, 1.45]);
  translate([222, 131, 0])
    cube([1, 1, 1.45]);
  translate([223, 131, 0])
    cube([1, 1, 1.45]);
  translate([224, 131, 0])
    cube([1, 1, 1.45]);
  translate([225, 131, 0])
    cube([1, 1, 1.45]);
  translate([226, 131, 0])
    cube([1, 1, 1.45]);
  translate([227, 131, 0])
    cube([1, 1, 1.45]);
  translate([228, 131, 0])
    cube([1, 1, 1.45]);
  translate([229, 131, 0])
    cube([1, 1, 1.45]);
  translate([230, 131, 0])
    cube([1, 1, 1.45]);
  translate([231, 131, 0])
    cube([1, 1, 1.45]);
  translate([232, 131, 0])
    cube([1, 1, 1.45]);
  translate([233, 131, 0])
    cube([1, 1, 1.45]);
  translate([234, 131, 0])
    cube([1, 1, 1.45]);
  translate([235, 131, 0])
    cube([1, 1, 1.45]);
  translate([236, 131, 0])
    cube([1, 1, 1.45]);
  translate([237, 131, 0])
    cube([1, 1, 1.45]);
  translate([238, 131, 0])
    cube([1, 1, 1.45]);
  translate([239, 131, 0])
    cube([1, 1, 1.45]);
  translate([240, 131, 0])
    cube([1, 1, 1.45]);
  translate([241, 131, 0])
    cube([1, 1, 1.45]);
  translate([242, 131, 0])
    cube([1, 1, 1.45]);
  translate([243, 131, 0])
    cube([1, 1, 1.45]);
  translate([244, 131, 0])
    cube([1, 1, 1.45]);
  translate([245, 131, 0])
    cube([1, 1, 1.45]);
  translate([246, 131, 0])
    cube([1, 1, 1.45]);
  translate([0, 132, 0])
    cube([1, 1, 1.61]);
  translate([1, 132, 0])
    cube([1, 1, 1.61]);
  translate([2, 132, 0])
    cube([1, 1, 1.61]);
  translate([3, 132, 0])
    cube([1, 1, 1.61]);
  translate([4, 132, 0])
    cube([1, 1, 1.61]);
  translate([5, 132, 0])
    cube([1, 1, 1.61]);
  translate([6, 132, 0])
    cube([1, 1, 1.61]);
  translate([7, 132, 0])
    cube([1, 1, 1.61]);
  translate([8, 132, 0])
    cube([1, 1, 1.61]);
  translate([9, 132, 0])
    cube([1, 1, 1.61]);
  translate([10, 132, 0])
    cube([1, 1, 1.61]);
  translate([11, 132, 0])
    cube([1, 1, 1.61]);
  translate([12, 132, 0])
    cube([1, 1, 1.61]);
  translate([13, 132, 0])
    cube([1, 1, 1.61]);
  translate([14, 132, 0])
    cube([1, 1, 1.61]);
  translate([15, 132, 0])
    cube([1, 1, 1.61]);
  translate([16, 132, 0])
    cube([1, 1, 1.65]);
  translate([17, 132, 0])
    cube([1, 1, 1.57]);
  translate([18, 132, 0])
    cube([1, 1, 1.57]);
  translate([19, 132, 0])
    cube([1, 1, 1.57]);
  translate([20, 132, 0])
    cube([1, 1, 1.57]);
  translate([21, 132, 0])
    cube([1, 1, 1.57]);
  translate([22, 132, 0])
    cube([1, 1, 1.57]);
  translate([23, 132, 0])
    cube([1, 1, 1.57]);
  translate([24, 132, 0])
    cube([1, 1, 1.57]);
  translate([25, 132, 0])
    cube([1, 1, 1.57]);
  translate([26, 132, 0])
    cube([1, 1, 1.57]);
  translate([27, 132, 0])
    cube([1, 1, 1.57]);
  translate([28, 132, 0])
    cube([1, 1, 1.53]);
  translate([29, 132, 0])
    cube([1, 1, 1.65]);
  translate([30, 132, 0])
    cube([1, 1, 1.57]);
  translate([31, 132, 0])
    cube([1, 1, 1.57]);
  translate([32, 132, 0])
    cube([1, 1, 1.53]);
  translate([33, 132, 0])
    cube([1, 1, 1.53]);
  translate([34, 132, 0])
    cube([1, 1, 1.53]);
  translate([35, 132, 0])
    cube([1, 1, 1.53]);
  translate([36, 132, 0])
    cube([1, 1, 1.57]);
  translate([37, 132, 0])
    cube([1, 1, 1.57]);
  translate([38, 132, 0])
    cube([1, 1, 1.53]);
  translate([39, 132, 0])
    cube([1, 1, 1.53]);
  translate([40, 132, 0])
    cube([1, 1, 1.49]);
  translate([41, 132, 0])
    cube([1, 1, 1.49]);
  translate([42, 132, 0])
    cube([1, 1, 1.49]);
  translate([43, 132, 0])
    cube([1, 1, 1.49]);
  translate([44, 132, 0])
    cube([1, 1, 1.49]);
  translate([45, 132, 0])
    cube([1, 1, 1.49]);
  translate([46, 132, 0])
    cube([1, 1, 1.45]);
  translate([47, 132, 0])
    cube([1, 1, 1.45]);
  translate([48, 132, 0])
    cube([1, 1, 1.61]);
  translate([49, 132, 0])
    cube([1, 1, 7.69]);
  translate([50, 132, 0])
    cube([1, 1, 4.27]);
  translate([51, 132, 0])
    cube([1, 1, 3.33]);
  translate([52, 132, 0])
    cube([1, 1, 3.37]);
  translate([53, 132, 0])
    cube([1, 1, 3.80]);
  translate([54, 132, 0])
    cube([1, 1, 4.35]);
  translate([55, 132, 0])
    cube([1, 1, 4.82]);
  translate([56, 132, 0])
    cube([1, 1, 5.18]);
  translate([57, 132, 0])
    cube([1, 1, 5.37]);
  translate([58, 132, 0])
    cube([1, 1, 5.80]);
  translate([59, 132, 0])
    cube([1, 1, 6.12]);
  translate([60, 132, 0])
    cube([1, 1, 6.35]);
  translate([61, 132, 0])
    cube([1, 1, 5.92]);
  translate([62, 132, 0])
    cube([1, 1, 5.49]);
  translate([63, 132, 0])
    cube([1, 1, 5.37]);
  translate([64, 132, 0])
    cube([1, 1, 5.29]);
  translate([65, 132, 0])
    cube([1, 1, 4.94]);
  translate([66, 132, 0])
    cube([1, 1, 1.45]);
  translate([67, 132, 0])
    cube([1, 1, 1.69]);
  translate([68, 132, 0])
    cube([1, 1, 2.94]);
  translate([69, 132, 0])
    cube([1, 1, 4.43]);
  translate([70, 132, 0])
    cube([1, 1, 5.96]);
  translate([71, 132, 0])
    cube([1, 1, 2.27]);
  translate([72, 132, 0])
    cube([1, 1, 1.92]);
  translate([73, 132, 0])
    cube([1, 1, 1.69]);
  translate([74, 132, 0])
    cube([1, 1, 1.49]);
  translate([75, 132, 0])
    cube([1, 1, 1.37]);
  translate([76, 132, 0])
    cube([1, 1, 0.82]);
  translate([77, 132, 0])
    cube([1, 1, 1.65]);
  translate([78, 132, 0])
    cube([1, 1, 4.90]);
  translate([79, 132, 0])
    cube([1, 1, 5.10]);
  translate([80, 132, 0])
    cube([1, 1, 1.96]);
  translate([81, 132, 0])
    cube([1, 1, 2.04]);
  translate([82, 132, 0])
    cube([1, 1, 1.96]);
  translate([83, 132, 0])
    cube([1, 1, 1.29]);
  translate([84, 132, 0])
    cube([1, 1, 1.49]);
  translate([85, 132, 0])
    cube([1, 1, 1.37]);
  translate([86, 132, 0])
    cube([1, 1, 1.25]);
  translate([87, 132, 0])
    cube([1, 1, 2.24]);
  translate([88, 132, 0])
    cube([1, 1, 1.80]);
  translate([89, 132, 0])
    cube([1, 1, 1.41]);
  translate([90, 132, 0])
    cube([1, 1, 1.02]);
  translate([91, 132, 0])
    cube([1, 1, 0.75]);
  translate([92, 132, 0])
    cube([1, 1, 0.82]);
  translate([93, 132, 0])
    cube([1, 1, 1.37]);
  translate([94, 132, 0])
    cube([1, 1, 1.41]);
  translate([95, 132, 0])
    cube([1, 1, 1.02]);
  translate([96, 132, 0])
    cube([1, 1, 1.29]);
  translate([97, 132, 0])
    cube([1, 1, 1.53]);
  translate([98, 132, 0])
    cube([1, 1, 1.45]);
  translate([99, 132, 0])
    cube([1, 1, 1.73]);
  translate([100, 132, 0])
    cube([1, 1, 1.76]);
  translate([101, 132, 0])
    cube([1, 1, 1.45]);
  translate([102, 132, 0])
    cube([1, 1, 1.37]);
  translate([103, 132, 0])
    cube([1, 1, 1.73]);
  translate([104, 132, 0])
    cube([1, 1, 1.84]);
  translate([105, 132, 0])
    cube([1, 1, 1.49]);
  translate([106, 132, 0])
    cube([1, 1, 1.76]);
  translate([107, 132, 0])
    cube([1, 1, 2.35]);
  translate([108, 132, 0])
    cube([1, 1, 2.27]);
  translate([109, 132, 0])
    cube([1, 1, 2.71]);
  translate([110, 132, 0])
    cube([1, 1, 2.16]);
  translate([111, 132, 0])
    cube([1, 1, 2.67]);
  translate([112, 132, 0])
    cube([1, 1, 3.02]);
  translate([113, 132, 0])
    cube([1, 1, 2.31]);
  translate([114, 132, 0])
    cube([1, 1, 2.75]);
  translate([115, 132, 0])
    cube([1, 1, 2.08]);
  translate([116, 132, 0])
    cube([1, 1, 2.78]);
  translate([117, 132, 0])
    cube([1, 1, 2.35]);
  translate([118, 132, 0])
    cube([1, 1, 2.71]);
  translate([119, 132, 0])
    cube([1, 1, 2.78]);
  translate([120, 132, 0])
    cube([1, 1, 2.43]);
  translate([121, 132, 0])
    cube([1, 1, 2.94]);
  translate([122, 132, 0])
    cube([1, 1, 2.39]);
  translate([123, 132, 0])
    cube([1, 1, 2.47]);
  translate([124, 132, 0])
    cube([1, 1, 3.22]);
  translate([125, 132, 0])
    cube([1, 1, 2.86]);
  translate([126, 132, 0])
    cube([1, 1, 2.86]);
  translate([127, 132, 0])
    cube([1, 1, 2.82]);
  translate([128, 132, 0])
    cube([1, 1, 2.75]);
  translate([129, 132, 0])
    cube([1, 1, 1.88]);
  translate([130, 132, 0])
    cube([1, 1, 1.80]);
  translate([131, 132, 0])
    cube([1, 1, 2.35]);
  translate([132, 132, 0])
    cube([1, 1, 2.43]);
  translate([133, 132, 0])
    cube([1, 1, 2.04]);
  translate([134, 132, 0])
    cube([1, 1, 1.69]);
  translate([135, 132, 0])
    cube([1, 1, 2.16]);
  translate([136, 132, 0])
    cube([1, 1, 1.73]);
  translate([137, 132, 0])
    cube([1, 1, 1.96]);
  translate([138, 132, 0])
    cube([1, 1, 2.16]);
  translate([139, 132, 0])
    cube([1, 1, 1.41]);
  translate([140, 132, 0])
    cube([1, 1, 1.84]);
  translate([141, 132, 0])
    cube([1, 1, 1.73]);
  translate([142, 132, 0])
    cube([1, 1, 1.84]);
  translate([143, 132, 0])
    cube([1, 1, 1.33]);
  translate([144, 132, 0])
    cube([1, 1, 1.57]);
  translate([145, 132, 0])
    cube([1, 1, 1.37]);
  translate([146, 132, 0])
    cube([1, 1, 1.37]);
  translate([147, 132, 0])
    cube([1, 1, 1.37]);
  translate([148, 132, 0])
    cube([1, 1, 1.37]);
  translate([149, 132, 0])
    cube([1, 1, 1.37]);
  translate([150, 132, 0])
    cube([1, 1, 1.37]);
  translate([151, 132, 0])
    cube([1, 1, 1.37]);
  translate([152, 132, 0])
    cube([1, 1, 1.37]);
  translate([153, 132, 0])
    cube([1, 1, 1.37]);
  translate([154, 132, 0])
    cube([1, 1, 1.37]);
  translate([155, 132, 0])
    cube([1, 1, 1.37]);
  translate([156, 132, 0])
    cube([1, 1, 1.37]);
  translate([157, 132, 0])
    cube([1, 1, 1.41]);
  translate([158, 132, 0])
    cube([1, 1, 1.41]);
  translate([159, 132, 0])
    cube([1, 1, 1.41]);
  translate([160, 132, 0])
    cube([1, 1, 1.41]);
  translate([161, 132, 0])
    cube([1, 1, 1.41]);
  translate([162, 132, 0])
    cube([1, 1, 1.41]);
  translate([163, 132, 0])
    cube([1, 1, 1.41]);
  translate([164, 132, 0])
    cube([1, 1, 1.41]);
  translate([165, 132, 0])
    cube([1, 1, 1.41]);
  translate([166, 132, 0])
    cube([1, 1, 1.41]);
  translate([167, 132, 0])
    cube([1, 1, 1.53]);
  translate([168, 132, 0])
    cube([1, 1, 1.41]);
  translate([169, 132, 0])
    cube([1, 1, 1.41]);
  translate([170, 132, 0])
    cube([1, 1, 1.45]);
  translate([171, 132, 0])
    cube([1, 1, 1.45]);
  translate([172, 132, 0])
    cube([1, 1, 1.45]);
  translate([173, 132, 0])
    cube([1, 1, 1.41]);
  translate([174, 132, 0])
    cube([1, 1, 1.45]);
  translate([175, 132, 0])
    cube([1, 1, 1.45]);
  translate([176, 132, 0])
    cube([1, 1, 1.45]);
  translate([177, 132, 0])
    cube([1, 1, 1.45]);
  translate([178, 132, 0])
    cube([1, 1, 1.45]);
  translate([179, 132, 0])
    cube([1, 1, 1.45]);
  translate([180, 132, 0])
    cube([1, 1, 1.45]);
  translate([181, 132, 0])
    cube([1, 1, 1.45]);
  translate([182, 132, 0])
    cube([1, 1, 1.45]);
  translate([183, 132, 0])
    cube([1, 1, 1.45]);
  translate([184, 132, 0])
    cube([1, 1, 1.45]);
  translate([185, 132, 0])
    cube([1, 1, 1.45]);
  translate([186, 132, 0])
    cube([1, 1, 1.45]);
  translate([187, 132, 0])
    cube([1, 1, 1.45]);
  translate([188, 132, 0])
    cube([1, 1, 1.45]);
  translate([189, 132, 0])
    cube([1, 1, 1.45]);
  translate([190, 132, 0])
    cube([1, 1, 1.45]);
  translate([191, 132, 0])
    cube([1, 1, 1.45]);
  translate([192, 132, 0])
    cube([1, 1, 1.45]);
  translate([193, 132, 0])
    cube([1, 1, 1.45]);
  translate([194, 132, 0])
    cube([1, 1, 1.45]);
  translate([195, 132, 0])
    cube([1, 1, 1.45]);
  translate([196, 132, 0])
    cube([1, 1, 1.45]);
  translate([197, 132, 0])
    cube([1, 1, 1.45]);
  translate([198, 132, 0])
    cube([1, 1, 1.45]);
  translate([199, 132, 0])
    cube([1, 1, 1.45]);
  translate([200, 132, 0])
    cube([1, 1, 1.45]);
  translate([201, 132, 0])
    cube([1, 1, 1.45]);
  translate([202, 132, 0])
    cube([1, 1, 1.45]);
  translate([203, 132, 0])
    cube([1, 1, 1.45]);
  translate([204, 132, 0])
    cube([1, 1, 1.45]);
  translate([205, 132, 0])
    cube([1, 1, 1.45]);
  translate([206, 132, 0])
    cube([1, 1, 1.45]);
  translate([207, 132, 0])
    cube([1, 1, 1.45]);
  translate([208, 132, 0])
    cube([1, 1, 1.45]);
  translate([209, 132, 0])
    cube([1, 1, 1.45]);
  translate([210, 132, 0])
    cube([1, 1, 1.45]);
  translate([211, 132, 0])
    cube([1, 1, 1.45]);
  translate([212, 132, 0])
    cube([1, 1, 1.45]);
  translate([213, 132, 0])
    cube([1, 1, 1.45]);
  translate([214, 132, 0])
    cube([1, 1, 1.45]);
  translate([215, 132, 0])
    cube([1, 1, 1.45]);
  translate([216, 132, 0])
    cube([1, 1, 1.45]);
  translate([217, 132, 0])
    cube([1, 1, 1.45]);
  translate([218, 132, 0])
    cube([1, 1, 1.45]);
  translate([219, 132, 0])
    cube([1, 1, 1.45]);
  translate([220, 132, 0])
    cube([1, 1, 1.45]);
  translate([221, 132, 0])
    cube([1, 1, 1.45]);
  translate([222, 132, 0])
    cube([1, 1, 1.45]);
  translate([223, 132, 0])
    cube([1, 1, 1.45]);
  translate([224, 132, 0])
    cube([1, 1, 1.45]);
  translate([225, 132, 0])
    cube([1, 1, 1.45]);
  translate([226, 132, 0])
    cube([1, 1, 1.45]);
  translate([227, 132, 0])
    cube([1, 1, 1.45]);
  translate([228, 132, 0])
    cube([1, 1, 1.45]);
  translate([229, 132, 0])
    cube([1, 1, 1.45]);
  translate([230, 132, 0])
    cube([1, 1, 1.45]);
  translate([231, 132, 0])
    cube([1, 1, 1.45]);
  translate([232, 132, 0])
    cube([1, 1, 1.45]);
  translate([233, 132, 0])
    cube([1, 1, 1.45]);
  translate([234, 132, 0])
    cube([1, 1, 1.45]);
  translate([235, 132, 0])
    cube([1, 1, 1.45]);
  translate([236, 132, 0])
    cube([1, 1, 1.45]);
  translate([237, 132, 0])
    cube([1, 1, 1.45]);
  translate([238, 132, 0])
    cube([1, 1, 1.45]);
  translate([239, 132, 0])
    cube([1, 1, 1.45]);
  translate([240, 132, 0])
    cube([1, 1, 1.45]);
  translate([241, 132, 0])
    cube([1, 1, 1.45]);
  translate([242, 132, 0])
    cube([1, 1, 1.45]);
  translate([243, 132, 0])
    cube([1, 1, 1.45]);
  translate([244, 132, 0])
    cube([1, 1, 1.45]);
  translate([245, 132, 0])
    cube([1, 1, 1.45]);
  translate([246, 132, 0])
    cube([1, 1, 1.45]);
  translate([0, 133, 0])
    cube([1, 1, 1.61]);
  translate([1, 133, 0])
    cube([1, 1, 1.61]);
  translate([2, 133, 0])
    cube([1, 1, 1.61]);
  translate([3, 133, 0])
    cube([1, 1, 1.61]);
  translate([4, 133, 0])
    cube([1, 1, 1.61]);
  translate([5, 133, 0])
    cube([1, 1, 1.61]);
  translate([6, 133, 0])
    cube([1, 1, 1.61]);
  translate([7, 133, 0])
    cube([1, 1, 1.61]);
  translate([8, 133, 0])
    cube([1, 1, 1.61]);
  translate([9, 133, 0])
    cube([1, 1, 1.61]);
  translate([10, 133, 0])
    cube([1, 1, 1.61]);
  translate([11, 133, 0])
    cube([1, 1, 1.61]);
  translate([12, 133, 0])
    cube([1, 1, 1.57]);
  translate([13, 133, 0])
    cube([1, 1, 1.65]);
  translate([14, 133, 0])
    cube([1, 1, 1.61]);
  translate([15, 133, 0])
    cube([1, 1, 1.65]);
  translate([16, 133, 0])
    cube([1, 1, 1.61]);
  translate([17, 133, 0])
    cube([1, 1, 1.57]);
  translate([18, 133, 0])
    cube([1, 1, 1.61]);
  translate([19, 133, 0])
    cube([1, 1, 1.57]);
  translate([20, 133, 0])
    cube([1, 1, 1.57]);
  translate([21, 133, 0])
    cube([1, 1, 1.57]);
  translate([22, 133, 0])
    cube([1, 1, 1.57]);
  translate([23, 133, 0])
    cube([1, 1, 1.57]);
  translate([24, 133, 0])
    cube([1, 1, 1.57]);
  translate([25, 133, 0])
    cube([1, 1, 1.57]);
  translate([26, 133, 0])
    cube([1, 1, 1.57]);
  translate([27, 133, 0])
    cube([1, 1, 1.57]);
  translate([28, 133, 0])
    cube([1, 1, 1.57]);
  translate([29, 133, 0])
    cube([1, 1, 1.57]);
  translate([30, 133, 0])
    cube([1, 1, 1.57]);
  translate([31, 133, 0])
    cube([1, 1, 1.53]);
  translate([32, 133, 0])
    cube([1, 1, 1.53]);
  translate([33, 133, 0])
    cube([1, 1, 1.53]);
  translate([34, 133, 0])
    cube([1, 1, 1.53]);
  translate([35, 133, 0])
    cube([1, 1, 1.53]);
  translate([36, 133, 0])
    cube([1, 1, 1.49]);
  translate([37, 133, 0])
    cube([1, 1, 1.49]);
  translate([38, 133, 0])
    cube([1, 1, 1.53]);
  translate([39, 133, 0])
    cube([1, 1, 1.49]);
  translate([40, 133, 0])
    cube([1, 1, 1.53]);
  translate([41, 133, 0])
    cube([1, 1, 1.49]);
  translate([42, 133, 0])
    cube([1, 1, 1.49]);
  translate([43, 133, 0])
    cube([1, 1, 1.49]);
  translate([44, 133, 0])
    cube([1, 1, 1.49]);
  translate([45, 133, 0])
    cube([1, 1, 1.49]);
  translate([46, 133, 0])
    cube([1, 1, 1.49]);
  translate([47, 133, 0])
    cube([1, 1, 1.49]);
  translate([48, 133, 0])
    cube([1, 1, 1.49]);
  translate([49, 133, 0])
    cube([1, 1, 7.65]);
  translate([50, 133, 0])
    cube([1, 1, 5.57]);
  translate([51, 133, 0])
    cube([1, 1, 3.49]);
  translate([52, 133, 0])
    cube([1, 1, 3.57]);
  translate([53, 133, 0])
    cube([1, 1, 3.61]);
  translate([54, 133, 0])
    cube([1, 1, 4.24]);
  translate([55, 133, 0])
    cube([1, 1, 4.67]);
  translate([56, 133, 0])
    cube([1, 1, 5.06]);
  translate([57, 133, 0])
    cube([1, 1, 5.25]);
  translate([58, 133, 0])
    cube([1, 1, 5.65]);
  translate([59, 133, 0])
    cube([1, 1, 5.96]);
  translate([60, 133, 0])
    cube([1, 1, 6.24]);
  translate([61, 133, 0])
    cube([1, 1, 6.00]);
  translate([62, 133, 0])
    cube([1, 1, 5.57]);
  translate([63, 133, 0])
    cube([1, 1, 5.45]);
  translate([64, 133, 0])
    cube([1, 1, 5.25]);
  translate([65, 133, 0])
    cube([1, 1, 5.22]);
  translate([66, 133, 0])
    cube([1, 1, 4.24]);
  translate([67, 133, 0])
    cube([1, 1, 1.65]);
  translate([68, 133, 0])
    cube([1, 1, 1.96]);
  translate([69, 133, 0])
    cube([1, 1, 5.41]);
  translate([70, 133, 0])
    cube([1, 1, 5.37]);
  translate([71, 133, 0])
    cube([1, 1, 2.55]);
  translate([72, 133, 0])
    cube([1, 1, 1.92]);
  translate([73, 133, 0])
    cube([1, 1, 1.65]);
  translate([74, 133, 0])
    cube([1, 1, 1.37]);
  translate([75, 133, 0])
    cube([1, 1, 1.33]);
  translate([76, 133, 0])
    cube([1, 1, 1.49]);
  translate([77, 133, 0])
    cube([1, 1, 1.49]);
  translate([78, 133, 0])
    cube([1, 1, 1.33]);
  translate([79, 133, 0])
    cube([1, 1, 1.53]);
  translate([80, 133, 0])
    cube([1, 1, 3.10]);
  translate([81, 133, 0])
    cube([1, 1, 1.92]);
  translate([82, 133, 0])
    cube([1, 1, 2.31]);
  translate([83, 133, 0])
    cube([1, 1, 1.69]);
  translate([84, 133, 0])
    cube([1, 1, 1.80]);
  translate([85, 133, 0])
    cube([1, 1, 1.18]);
  translate([86, 133, 0])
    cube([1, 1, 1.18]);
  translate([87, 133, 0])
    cube([1, 1, 2.16]);
  translate([88, 133, 0])
    cube([1, 1, 1.76]);
  translate([89, 133, 0])
    cube([1, 1, 1.22]);
  translate([90, 133, 0])
    cube([1, 1, 0.78]);
  translate([91, 133, 0])
    cube([1, 1, 0.94]);
  translate([92, 133, 0])
    cube([1, 1, 1.37]);
  translate([93, 133, 0])
    cube([1, 1, 1.45]);
  translate([94, 133, 0])
    cube([1, 1, 1.41]);
  translate([95, 133, 0])
    cube([1, 1, 1.80]);
  translate([96, 133, 0])
    cube([1, 1, 1.49]);
  translate([97, 133, 0])
    cube([1, 1, 1.06]);
  translate([98, 133, 0])
    cube([1, 1, 0.82]);
  translate([99, 133, 0])
    cube([1, 1, 1.02]);
  translate([100, 133, 0])
    cube([1, 1, 1.10]);
  translate([101, 133, 0])
    cube([1, 1, 1.06]);
  translate([102, 133, 0])
    cube([1, 1, 1.69]);
  translate([103, 133, 0])
    cube([1, 1, 1.92]);
  translate([104, 133, 0])
    cube([1, 1, 1.37]);
  translate([105, 133, 0])
    cube([1, 1, 1.53]);
  translate([106, 133, 0])
    cube([1, 1, 1.76]);
  translate([107, 133, 0])
    cube([1, 1, 1.22]);
  translate([108, 133, 0])
    cube([1, 1, 1.76]);
  translate([109, 133, 0])
    cube([1, 1, 1.49]);
  translate([110, 133, 0])
    cube([1, 1, 1.37]);
  translate([111, 133, 0])
    cube([1, 1, 1.92]);
  translate([112, 133, 0])
    cube([1, 1, 1.84]);
  translate([113, 133, 0])
    cube([1, 1, 2.39]);
  translate([114, 133, 0])
    cube([1, 1, 1.18]);
  translate([115, 133, 0])
    cube([1, 1, 2.31]);
  translate([116, 133, 0])
    cube([1, 1, 2.04]);
  translate([117, 133, 0])
    cube([1, 1, 2.47]);
  translate([118, 133, 0])
    cube([1, 1, 2.39]);
  translate([119, 133, 0])
    cube([1, 1, 2.24]);
  translate([120, 133, 0])
    cube([1, 1, 2.55]);
  translate([121, 133, 0])
    cube([1, 1, 2.20]);
  translate([122, 133, 0])
    cube([1, 1, 2.35]);
  translate([123, 133, 0])
    cube([1, 1, 2.39]);
  translate([124, 133, 0])
    cube([1, 1, 3.06]);
  translate([125, 133, 0])
    cube([1, 1, 2.67]);
  translate([126, 133, 0])
    cube([1, 1, 2.20]);
  translate([127, 133, 0])
    cube([1, 1, 2.59]);
  translate([128, 133, 0])
    cube([1, 1, 2.63]);
  translate([129, 133, 0])
    cube([1, 1, 1.76]);
  translate([130, 133, 0])
    cube([1, 1, 1.84]);
  translate([131, 133, 0])
    cube([1, 1, 1.49]);
  translate([132, 133, 0])
    cube([1, 1, 1.76]);
  translate([133, 133, 0])
    cube([1, 1, 1.84]);
  translate([134, 133, 0])
    cube([1, 1, 1.73]);
  translate([135, 133, 0])
    cube([1, 1, 1.84]);
  translate([136, 133, 0])
    cube([1, 1, 1.41]);
  translate([137, 133, 0])
    cube([1, 1, 1.69]);
  translate([138, 133, 0])
    cube([1, 1, 1.69]);
  translate([139, 133, 0])
    cube([1, 1, 1.80]);
  translate([140, 133, 0])
    cube([1, 1, 1.41]);
  translate([141, 133, 0])
    cube([1, 1, 1.49]);
  translate([142, 133, 0])
    cube([1, 1, 7.06]);
  translate([143, 133, 0])
    cube([1, 1, 1.37]);
  translate([144, 133, 0])
    cube([1, 1, 1.33]);
  translate([145, 133, 0])
    cube([1, 1, 1.33]);
  translate([146, 133, 0])
    cube([1, 1, 1.41]);
  translate([147, 133, 0])
    cube([1, 1, 1.41]);
  translate([148, 133, 0])
    cube([1, 1, 1.37]);
  translate([149, 133, 0])
    cube([1, 1, 1.41]);
  translate([150, 133, 0])
    cube([1, 1, 1.37]);
  translate([151, 133, 0])
    cube([1, 1, 1.37]);
  translate([152, 133, 0])
    cube([1, 1, 1.37]);
  translate([153, 133, 0])
    cube([1, 1, 1.37]);
  translate([154, 133, 0])
    cube([1, 1, 1.37]);
  translate([155, 133, 0])
    cube([1, 1, 1.37]);
  translate([156, 133, 0])
    cube([1, 1, 1.37]);
  translate([157, 133, 0])
    cube([1, 1, 1.41]);
  translate([158, 133, 0])
    cube([1, 1, 1.41]);
  translate([159, 133, 0])
    cube([1, 1, 1.41]);
  translate([160, 133, 0])
    cube([1, 1, 1.41]);
  translate([161, 133, 0])
    cube([1, 1, 1.41]);
  translate([162, 133, 0])
    cube([1, 1, 1.41]);
  translate([163, 133, 0])
    cube([1, 1, 1.41]);
  translate([164, 133, 0])
    cube([1, 1, 1.41]);
  translate([165, 133, 0])
    cube([1, 1, 1.41]);
  translate([166, 133, 0])
    cube([1, 1, 1.41]);
  translate([167, 133, 0])
    cube([1, 1, 1.41]);
  translate([168, 133, 0])
    cube([1, 1, 1.45]);
  translate([169, 133, 0])
    cube([1, 1, 1.45]);
  translate([170, 133, 0])
    cube([1, 1, 1.45]);
  translate([171, 133, 0])
    cube([1, 1, 1.45]);
  translate([172, 133, 0])
    cube([1, 1, 1.45]);
  translate([173, 133, 0])
    cube([1, 1, 1.45]);
  translate([174, 133, 0])
    cube([1, 1, 1.45]);
  translate([175, 133, 0])
    cube([1, 1, 1.45]);
  translate([176, 133, 0])
    cube([1, 1, 1.45]);
  translate([177, 133, 0])
    cube([1, 1, 1.45]);
  translate([178, 133, 0])
    cube([1, 1, 1.45]);
  translate([179, 133, 0])
    cube([1, 1, 1.45]);
  translate([180, 133, 0])
    cube([1, 1, 1.45]);
  translate([181, 133, 0])
    cube([1, 1, 1.45]);
  translate([182, 133, 0])
    cube([1, 1, 1.45]);
  translate([183, 133, 0])
    cube([1, 1, 1.45]);
  translate([184, 133, 0])
    cube([1, 1, 1.45]);
  translate([185, 133, 0])
    cube([1, 1, 1.45]);
  translate([186, 133, 0])
    cube([1, 1, 1.45]);
  translate([187, 133, 0])
    cube([1, 1, 1.45]);
  translate([188, 133, 0])
    cube([1, 1, 1.45]);
  translate([189, 133, 0])
    cube([1, 1, 1.45]);
  translate([190, 133, 0])
    cube([1, 1, 1.45]);
  translate([191, 133, 0])
    cube([1, 1, 1.45]);
  translate([192, 133, 0])
    cube([1, 1, 1.45]);
  translate([193, 133, 0])
    cube([1, 1, 1.45]);
  translate([194, 133, 0])
    cube([1, 1, 1.45]);
  translate([195, 133, 0])
    cube([1, 1, 1.45]);
  translate([196, 133, 0])
    cube([1, 1, 1.45]);
  translate([197, 133, 0])
    cube([1, 1, 1.45]);
  translate([198, 133, 0])
    cube([1, 1, 1.45]);
  translate([199, 133, 0])
    cube([1, 1, 1.45]);
  translate([200, 133, 0])
    cube([1, 1, 1.49]);
  translate([201, 133, 0])
    cube([1, 1, 1.45]);
  translate([202, 133, 0])
    cube([1, 1, 1.45]);
  translate([203, 133, 0])
    cube([1, 1, 1.45]);
  translate([204, 133, 0])
    cube([1, 1, 1.45]);
  translate([205, 133, 0])
    cube([1, 1, 1.49]);
  translate([206, 133, 0])
    cube([1, 1, 1.45]);
  translate([207, 133, 0])
    cube([1, 1, 1.45]);
  translate([208, 133, 0])
    cube([1, 1, 1.45]);
  translate([209, 133, 0])
    cube([1, 1, 1.45]);
  translate([210, 133, 0])
    cube([1, 1, 1.45]);
  translate([211, 133, 0])
    cube([1, 1, 1.45]);
  translate([212, 133, 0])
    cube([1, 1, 1.45]);
  translate([213, 133, 0])
    cube([1, 1, 1.45]);
  translate([214, 133, 0])
    cube([1, 1, 1.45]);
  translate([215, 133, 0])
    cube([1, 1, 1.45]);
  translate([216, 133, 0])
    cube([1, 1, 1.45]);
  translate([217, 133, 0])
    cube([1, 1, 1.45]);
  translate([218, 133, 0])
    cube([1, 1, 1.45]);
  translate([219, 133, 0])
    cube([1, 1, 1.45]);
  translate([220, 133, 0])
    cube([1, 1, 1.45]);
  translate([221, 133, 0])
    cube([1, 1, 1.45]);
  translate([222, 133, 0])
    cube([1, 1, 1.45]);
  translate([223, 133, 0])
    cube([1, 1, 1.45]);
  translate([224, 133, 0])
    cube([1, 1, 1.45]);
  translate([225, 133, 0])
    cube([1, 1, 1.45]);
  translate([226, 133, 0])
    cube([1, 1, 1.45]);
  translate([227, 133, 0])
    cube([1, 1, 1.45]);
  translate([228, 133, 0])
    cube([1, 1, 1.45]);
  translate([229, 133, 0])
    cube([1, 1, 1.45]);
  translate([230, 133, 0])
    cube([1, 1, 1.45]);
  translate([231, 133, 0])
    cube([1, 1, 1.45]);
  translate([232, 133, 0])
    cube([1, 1, 1.45]);
  translate([233, 133, 0])
    cube([1, 1, 1.45]);
  translate([234, 133, 0])
    cube([1, 1, 1.45]);
  translate([235, 133, 0])
    cube([1, 1, 1.45]);
  translate([236, 133, 0])
    cube([1, 1, 1.45]);
  translate([237, 133, 0])
    cube([1, 1, 1.45]);
  translate([238, 133, 0])
    cube([1, 1, 1.45]);
  translate([239, 133, 0])
    cube([1, 1, 1.45]);
  translate([240, 133, 0])
    cube([1, 1, 1.45]);
  translate([241, 133, 0])
    cube([1, 1, 1.45]);
  translate([242, 133, 0])
    cube([1, 1, 1.45]);
  translate([243, 133, 0])
    cube([1, 1, 1.45]);
  translate([244, 133, 0])
    cube([1, 1, 1.45]);
  translate([245, 133, 0])
    cube([1, 1, 1.45]);
  translate([246, 133, 0])
    cube([1, 1, 1.45]);
  translate([0, 134, 0])
    cube([1, 1, 1.61]);
  translate([1, 134, 0])
    cube([1, 1, 1.61]);
  translate([2, 134, 0])
    cube([1, 1, 1.61]);
  translate([3, 134, 0])
    cube([1, 1, 1.61]);
  translate([4, 134, 0])
    cube([1, 1, 1.61]);
  translate([5, 134, 0])
    cube([1, 1, 1.61]);
  translate([6, 134, 0])
    cube([1, 1, 1.61]);
  translate([7, 134, 0])
    cube([1, 1, 1.61]);
  translate([8, 134, 0])
    cube([1, 1, 1.61]);
  translate([9, 134, 0])
    cube([1, 1, 1.61]);
  translate([10, 134, 0])
    cube([1, 1, 1.61]);
  translate([11, 134, 0])
    cube([1, 1, 1.61]);
  translate([12, 134, 0])
    cube([1, 1, 1.57]);
  translate([13, 134, 0])
    cube([1, 1, 1.65]);
  translate([14, 134, 0])
    cube([1, 1, 1.61]);
  translate([15, 134, 0])
    cube([1, 1, 1.65]);
  translate([16, 134, 0])
    cube([1, 1, 1.61]);
  translate([17, 134, 0])
    cube([1, 1, 1.57]);
  translate([18, 134, 0])
    cube([1, 1, 1.61]);
  translate([19, 134, 0])
    cube([1, 1, 1.57]);
  translate([20, 134, 0])
    cube([1, 1, 1.57]);
  translate([21, 134, 0])
    cube([1, 1, 1.57]);
  translate([22, 134, 0])
    cube([1, 1, 1.57]);
  translate([23, 134, 0])
    cube([1, 1, 1.57]);
  translate([24, 134, 0])
    cube([1, 1, 1.57]);
  translate([25, 134, 0])
    cube([1, 1, 1.57]);
  translate([26, 134, 0])
    cube([1, 1, 1.57]);
  translate([27, 134, 0])
    cube([1, 1, 1.57]);
  translate([28, 134, 0])
    cube([1, 1, 1.57]);
  translate([29, 134, 0])
    cube([1, 1, 1.57]);
  translate([30, 134, 0])
    cube([1, 1, 1.57]);
  translate([31, 134, 0])
    cube([1, 1, 1.53]);
  translate([32, 134, 0])
    cube([1, 1, 1.57]);
  translate([33, 134, 0])
    cube([1, 1, 1.53]);
  translate([34, 134, 0])
    cube([1, 1, 1.53]);
  translate([35, 134, 0])
    cube([1, 1, 1.53]);
  translate([36, 134, 0])
    cube([1, 1, 1.57]);
  translate([37, 134, 0])
    cube([1, 1, 1.57]);
  translate([38, 134, 0])
    cube([1, 1, 1.53]);
  translate([39, 134, 0])
    cube([1, 1, 1.49]);
  translate([40, 134, 0])
    cube([1, 1, 1.53]);
  translate([41, 134, 0])
    cube([1, 1, 1.49]);
  translate([42, 134, 0])
    cube([1, 1, 1.49]);
  translate([43, 134, 0])
    cube([1, 1, 1.49]);
  translate([44, 134, 0])
    cube([1, 1, 1.49]);
  translate([45, 134, 0])
    cube([1, 1, 1.49]);
  translate([46, 134, 0])
    cube([1, 1, 1.49]);
  translate([47, 134, 0])
    cube([1, 1, 1.49]);
  translate([48, 134, 0])
    cube([1, 1, 1.49]);
  translate([49, 134, 0])
    cube([1, 1, 4.24]);
  translate([50, 134, 0])
    cube([1, 1, 6.55]);
  translate([51, 134, 0])
    cube([1, 1, 3.57]);
  translate([52, 134, 0])
    cube([1, 1, 3.80]);
  translate([53, 134, 0])
    cube([1, 1, 3.45]);
  translate([54, 134, 0])
    cube([1, 1, 4.12]);
  translate([55, 134, 0])
    cube([1, 1, 4.55]);
  translate([56, 134, 0])
    cube([1, 1, 4.94]);
  translate([57, 134, 0])
    cube([1, 1, 5.22]);
  translate([58, 134, 0])
    cube([1, 1, 5.49]);
  translate([59, 134, 0])
    cube([1, 1, 5.84]);
  translate([60, 134, 0])
    cube([1, 1, 6.16]);
  translate([61, 134, 0])
    cube([1, 1, 6.04]);
  translate([62, 134, 0])
    cube([1, 1, 5.65]);
  translate([63, 134, 0])
    cube([1, 1, 5.41]);
  translate([64, 134, 0])
    cube([1, 1, 5.33]);
  translate([65, 134, 0])
    cube([1, 1, 5.53]);
  translate([66, 134, 0])
    cube([1, 1, 5.02]);
  translate([67, 134, 0])
    cube([1, 1, 5.45]);
  translate([68, 134, 0])
    cube([1, 1, 5.49]);
  translate([69, 134, 0])
    cube([1, 1, 6.12]);
  translate([70, 134, 0])
    cube([1, 1, 6.00]);
  translate([71, 134, 0])
    cube([1, 1, 4.43]);
  translate([72, 134, 0])
    cube([1, 1, 1.22]);
  translate([73, 134, 0])
    cube([1, 1, 1.49]);
  translate([74, 134, 0])
    cube([1, 1, 1.33]);
  translate([75, 134, 0])
    cube([1, 1, 1.33]);
  translate([76, 134, 0])
    cube([1, 1, 1.41]);
  translate([77, 134, 0])
    cube([1, 1, 1.53]);
  translate([78, 134, 0])
    cube([1, 1, 1.18]);
  translate([79, 134, 0])
    cube([1, 1, 1.45]);
  translate([80, 134, 0])
    cube([1, 1, 1.49]);
  translate([81, 134, 0])
    cube([1, 1, 1.96]);
  translate([82, 134, 0])
    cube([1, 1, 2.08]);
  translate([83, 134, 0])
    cube([1, 1, 1.57]);
  translate([84, 134, 0])
    cube([1, 1, 2.75]);
  translate([85, 134, 0])
    cube([1, 1, 2.08]);
  translate([86, 134, 0])
    cube([1, 1, 1.53]);
  translate([87, 134, 0])
    cube([1, 1, 1.61]);
  translate([88, 134, 0])
    cube([1, 1, 1.41]);
  translate([89, 134, 0])
    cube([1, 1, 1.06]);
  translate([90, 134, 0])
    cube([1, 1, 1.18]);
  translate([91, 134, 0])
    cube([1, 1, 1.29]);
  translate([92, 134, 0])
    cube([1, 1, 1.25]);
  translate([93, 134, 0])
    cube([1, 1, 1.29]);
  translate([94, 134, 0])
    cube([1, 1, 1.02]);
  translate([95, 134, 0])
    cube([1, 1, 0.75]);
  translate([96, 134, 0])
    cube([1, 1, 0.98]);
  translate([97, 134, 0])
    cube([1, 1, 0.75]);
  translate([98, 134, 0])
    cube([1, 1, 1.45]);
  translate([99, 134, 0])
    cube([1, 1, 1.65]);
  translate([100, 134, 0])
    cube([1, 1, 2.04]);
  translate([101, 134, 0])
    cube([1, 1, 1.96]);
  translate([102, 134, 0])
    cube([1, 1, 1.84]);
  translate([103, 134, 0])
    cube([1, 1, 1.76]);
  translate([104, 134, 0])
    cube([1, 1, 1.84]);
  translate([105, 134, 0])
    cube([1, 1, 2.35]);
  translate([106, 134, 0])
    cube([1, 1, 1.88]);
  translate([107, 134, 0])
    cube([1, 1, 1.84]);
  translate([108, 134, 0])
    cube([1, 1, 2.08]);
  translate([109, 134, 0])
    cube([1, 1, 2.20]);
  translate([110, 134, 0])
    cube([1, 1, 2.47]);
  translate([111, 134, 0])
    cube([1, 1, 2.16]);
  translate([112, 134, 0])
    cube([1, 1, 2.35]);
  translate([113, 134, 0])
    cube([1, 1, 2.16]);
  translate([114, 134, 0])
    cube([1, 1, 2.47]);
  translate([115, 134, 0])
    cube([1, 1, 1.96]);
  translate([116, 134, 0])
    cube([1, 1, 2.20]);
  translate([117, 134, 0])
    cube([1, 1, 2.08]);
  translate([118, 134, 0])
    cube([1, 1, 1.76]);
  translate([119, 134, 0])
    cube([1, 1, 2.16]);
  translate([120, 134, 0])
    cube([1, 1, 1.65]);
  translate([121, 134, 0])
    cube([1, 1, 2.31]);
  translate([122, 134, 0])
    cube([1, 1, 2.63]);
  translate([123, 134, 0])
    cube([1, 1, 2.39]);
  translate([124, 134, 0])
    cube([1, 1, 2.20]);
  translate([125, 134, 0])
    cube([1, 1, 2.47]);
  translate([126, 134, 0])
    cube([1, 1, 2.24]);
  translate([127, 134, 0])
    cube([1, 1, 2.12]);
  translate([128, 134, 0])
    cube([1, 1, 1.57]);
  translate([129, 134, 0])
    cube([1, 1, 1.80]);
  translate([130, 134, 0])
    cube([1, 1, 1.69]);
  translate([131, 134, 0])
    cube([1, 1, 1.92]);
  translate([132, 134, 0])
    cube([1, 1, 1.80]);
  translate([133, 134, 0])
    cube([1, 1, 2.16]);
  translate([134, 134, 0])
    cube([1, 1, 1.65]);
  translate([135, 134, 0])
    cube([1, 1, 2.24]);
  translate([136, 134, 0])
    cube([1, 1, 2.16]);
  translate([137, 134, 0])
    cube([1, 1, 1.88]);
  translate([138, 134, 0])
    cube([1, 1, 1.61]);
  translate([139, 134, 0])
    cube([1, 1, 1.73]);
  translate([140, 134, 0])
    cube([1, 1, 1.65]);
  translate([141, 134, 0])
    cube([1, 1, 6.86]);
  translate([142, 134, 0])
    cube([1, 1, 7.18]);
  translate([143, 134, 0])
    cube([1, 1, 1.80]);
  translate([144, 134, 0])
    cube([1, 1, 1.41]);
  translate([145, 134, 0])
    cube([1, 1, 1.33]);
  translate([146, 134, 0])
    cube([1, 1, 1.41]);
  translate([147, 134, 0])
    cube([1, 1, 1.41]);
  translate([148, 134, 0])
    cube([1, 1, 1.37]);
  translate([149, 134, 0])
    cube([1, 1, 1.41]);
  translate([150, 134, 0])
    cube([1, 1, 1.37]);
  translate([151, 134, 0])
    cube([1, 1, 1.37]);
  translate([152, 134, 0])
    cube([1, 1, 1.37]);
  translate([153, 134, 0])
    cube([1, 1, 1.33]);
  translate([154, 134, 0])
    cube([1, 1, 1.41]);
  translate([155, 134, 0])
    cube([1, 1, 1.37]);
  translate([156, 134, 0])
    cube([1, 1, 1.37]);
  translate([157, 134, 0])
    cube([1, 1, 1.41]);
  translate([158, 134, 0])
    cube([1, 1, 1.41]);
  translate([159, 134, 0])
    cube([1, 1, 1.41]);
  translate([160, 134, 0])
    cube([1, 1, 1.41]);
  translate([161, 134, 0])
    cube([1, 1, 1.41]);
  translate([162, 134, 0])
    cube([1, 1, 1.41]);
  translate([163, 134, 0])
    cube([1, 1, 1.41]);
  translate([164, 134, 0])
    cube([1, 1, 1.41]);
  translate([165, 134, 0])
    cube([1, 1, 1.41]);
  translate([166, 134, 0])
    cube([1, 1, 1.45]);
  translate([167, 134, 0])
    cube([1, 1, 1.45]);
  translate([168, 134, 0])
    cube([1, 1, 1.45]);
  translate([169, 134, 0])
    cube([1, 1, 1.45]);
  translate([170, 134, 0])
    cube([1, 1, 1.45]);
  translate([171, 134, 0])
    cube([1, 1, 1.45]);
  translate([172, 134, 0])
    cube([1, 1, 1.45]);
  translate([173, 134, 0])
    cube([1, 1, 1.45]);
  translate([174, 134, 0])
    cube([1, 1, 1.45]);
  translate([175, 134, 0])
    cube([1, 1, 1.45]);
  translate([176, 134, 0])
    cube([1, 1, 1.45]);
  translate([177, 134, 0])
    cube([1, 1, 1.45]);
  translate([178, 134, 0])
    cube([1, 1, 1.45]);
  translate([179, 134, 0])
    cube([1, 1, 1.45]);
  translate([180, 134, 0])
    cube([1, 1, 1.45]);
  translate([181, 134, 0])
    cube([1, 1, 1.45]);
  translate([182, 134, 0])
    cube([1, 1, 1.45]);
  translate([183, 134, 0])
    cube([1, 1, 1.45]);
  translate([184, 134, 0])
    cube([1, 1, 1.45]);
  translate([185, 134, 0])
    cube([1, 1, 1.45]);
  translate([186, 134, 0])
    cube([1, 1, 1.45]);
  translate([187, 134, 0])
    cube([1, 1, 1.45]);
  translate([188, 134, 0])
    cube([1, 1, 1.45]);
  translate([189, 134, 0])
    cube([1, 1, 1.45]);
  translate([190, 134, 0])
    cube([1, 1, 1.45]);
  translate([191, 134, 0])
    cube([1, 1, 1.45]);
  translate([192, 134, 0])
    cube([1, 1, 1.45]);
  translate([193, 134, 0])
    cube([1, 1, 1.45]);
  translate([194, 134, 0])
    cube([1, 1, 1.45]);
  translate([195, 134, 0])
    cube([1, 1, 1.45]);
  translate([196, 134, 0])
    cube([1, 1, 1.45]);
  translate([197, 134, 0])
    cube([1, 1, 1.45]);
  translate([198, 134, 0])
    cube([1, 1, 1.45]);
  translate([199, 134, 0])
    cube([1, 1, 1.45]);
  translate([200, 134, 0])
    cube([1, 1, 1.49]);
  translate([201, 134, 0])
    cube([1, 1, 1.45]);
  translate([202, 134, 0])
    cube([1, 1, 1.45]);
  translate([203, 134, 0])
    cube([1, 1, 1.45]);
  translate([204, 134, 0])
    cube([1, 1, 1.45]);
  translate([205, 134, 0])
    cube([1, 1, 1.49]);
  translate([206, 134, 0])
    cube([1, 1, 1.45]);
  translate([207, 134, 0])
    cube([1, 1, 1.45]);
  translate([208, 134, 0])
    cube([1, 1, 1.45]);
  translate([209, 134, 0])
    cube([1, 1, 1.45]);
  translate([210, 134, 0])
    cube([1, 1, 1.45]);
  translate([211, 134, 0])
    cube([1, 1, 1.45]);
  translate([212, 134, 0])
    cube([1, 1, 1.45]);
  translate([213, 134, 0])
    cube([1, 1, 1.45]);
  translate([214, 134, 0])
    cube([1, 1, 1.45]);
  translate([215, 134, 0])
    cube([1, 1, 1.45]);
  translate([216, 134, 0])
    cube([1, 1, 1.45]);
  translate([217, 134, 0])
    cube([1, 1, 1.45]);
  translate([218, 134, 0])
    cube([1, 1, 1.45]);
  translate([219, 134, 0])
    cube([1, 1, 1.45]);
  translate([220, 134, 0])
    cube([1, 1, 1.45]);
  translate([221, 134, 0])
    cube([1, 1, 1.45]);
  translate([222, 134, 0])
    cube([1, 1, 1.45]);
  translate([223, 134, 0])
    cube([1, 1, 1.45]);
  translate([224, 134, 0])
    cube([1, 1, 1.45]);
  translate([225, 134, 0])
    cube([1, 1, 1.45]);
  translate([226, 134, 0])
    cube([1, 1, 1.45]);
  translate([227, 134, 0])
    cube([1, 1, 1.45]);
  translate([228, 134, 0])
    cube([1, 1, 1.45]);
  translate([229, 134, 0])
    cube([1, 1, 1.45]);
  translate([230, 134, 0])
    cube([1, 1, 1.45]);
  translate([231, 134, 0])
    cube([1, 1, 1.45]);
  translate([232, 134, 0])
    cube([1, 1, 1.45]);
  translate([233, 134, 0])
    cube([1, 1, 1.45]);
  translate([234, 134, 0])
    cube([1, 1, 1.45]);
  translate([235, 134, 0])
    cube([1, 1, 1.45]);
  translate([236, 134, 0])
    cube([1, 1, 1.45]);
  translate([237, 134, 0])
    cube([1, 1, 1.45]);
  translate([238, 134, 0])
    cube([1, 1, 1.45]);
  translate([239, 134, 0])
    cube([1, 1, 1.45]);
  translate([240, 134, 0])
    cube([1, 1, 1.45]);
  translate([241, 134, 0])
    cube([1, 1, 1.45]);
  translate([242, 134, 0])
    cube([1, 1, 1.45]);
  translate([243, 134, 0])
    cube([1, 1, 1.45]);
  translate([244, 134, 0])
    cube([1, 1, 1.45]);
  translate([245, 134, 0])
    cube([1, 1, 1.45]);
  translate([246, 134, 0])
    cube([1, 1, 1.45]);
  translate([0, 135, 0])
    cube([1, 1, 1.65]);
  translate([1, 135, 0])
    cube([1, 1, 1.61]);
  translate([2, 135, 0])
    cube([1, 1, 1.61]);
  translate([3, 135, 0])
    cube([1, 1, 1.61]);
  translate([4, 135, 0])
    cube([1, 1, 1.61]);
  translate([5, 135, 0])
    cube([1, 1, 1.61]);
  translate([6, 135, 0])
    cube([1, 1, 1.61]);
  translate([7, 135, 0])
    cube([1, 1, 1.61]);
  translate([8, 135, 0])
    cube([1, 1, 1.61]);
  translate([9, 135, 0])
    cube([1, 1, 1.61]);
  translate([10, 135, 0])
    cube([1, 1, 1.61]);
  translate([11, 135, 0])
    cube([1, 1, 1.61]);
  translate([12, 135, 0])
    cube([1, 1, 1.61]);
  translate([13, 135, 0])
    cube([1, 1, 1.61]);
  translate([14, 135, 0])
    cube([1, 1, 1.57]);
  translate([15, 135, 0])
    cube([1, 1, 1.57]);
  translate([16, 135, 0])
    cube([1, 1, 1.57]);
  translate([17, 135, 0])
    cube([1, 1, 1.57]);
  translate([18, 135, 0])
    cube([1, 1, 1.57]);
  translate([19, 135, 0])
    cube([1, 1, 1.57]);
  translate([20, 135, 0])
    cube([1, 1, 1.57]);
  translate([21, 135, 0])
    cube([1, 1, 1.57]);
  translate([22, 135, 0])
    cube([1, 1, 1.57]);
  translate([23, 135, 0])
    cube([1, 1, 1.57]);
  translate([24, 135, 0])
    cube([1, 1, 1.57]);
  translate([25, 135, 0])
    cube([1, 1, 1.57]);
  translate([26, 135, 0])
    cube([1, 1, 1.57]);
  translate([27, 135, 0])
    cube([1, 1, 1.57]);
  translate([28, 135, 0])
    cube([1, 1, 1.57]);
  translate([29, 135, 0])
    cube([1, 1, 1.57]);
  translate([30, 135, 0])
    cube([1, 1, 1.57]);
  translate([31, 135, 0])
    cube([1, 1, 1.53]);
  translate([32, 135, 0])
    cube([1, 1, 1.57]);
  translate([33, 135, 0])
    cube([1, 1, 1.53]);
  translate([34, 135, 0])
    cube([1, 1, 1.53]);
  translate([35, 135, 0])
    cube([1, 1, 1.53]);
  translate([36, 135, 0])
    cube([1, 1, 1.53]);
  translate([37, 135, 0])
    cube([1, 1, 1.57]);
  translate([38, 135, 0])
    cube([1, 1, 1.57]);
  translate([39, 135, 0])
    cube([1, 1, 1.57]);
  translate([40, 135, 0])
    cube([1, 1, 1.53]);
  translate([41, 135, 0])
    cube([1, 1, 1.49]);
  translate([42, 135, 0])
    cube([1, 1, 1.49]);
  translate([43, 135, 0])
    cube([1, 1, 1.49]);
  translate([44, 135, 0])
    cube([1, 1, 1.49]);
  translate([45, 135, 0])
    cube([1, 1, 1.49]);
  translate([46, 135, 0])
    cube([1, 1, 1.49]);
  translate([47, 135, 0])
    cube([1, 1, 1.49]);
  translate([48, 135, 0])
    cube([1, 1, 1.45]);
  translate([49, 135, 0])
    cube([1, 1, 1.29]);
  translate([50, 135, 0])
    cube([1, 1, 7.22]);
  translate([51, 135, 0])
    cube([1, 1, 4.12]);
  translate([52, 135, 0])
    cube([1, 1, 4.00]);
  translate([53, 135, 0])
    cube([1, 1, 3.49]);
  translate([54, 135, 0])
    cube([1, 1, 4.08]);
  translate([55, 135, 0])
    cube([1, 1, 4.39]);
  translate([56, 135, 0])
    cube([1, 1, 4.86]);
  translate([57, 135, 0])
    cube([1, 1, 5.10]);
  translate([58, 135, 0])
    cube([1, 1, 5.41]);
  translate([59, 135, 0])
    cube([1, 1, 5.73]);
  translate([60, 135, 0])
    cube([1, 1, 6.04]);
  translate([61, 135, 0])
    cube([1, 1, 6.20]);
  translate([62, 135, 0])
    cube([1, 1, 5.80]);
  translate([63, 135, 0])
    cube([1, 1, 5.53]);
  translate([64, 135, 0])
    cube([1, 1, 5.33]);
  translate([65, 135, 0])
    cube([1, 1, 5.10]);
  translate([66, 135, 0])
    cube([1, 1, 4.98]);
  translate([67, 135, 0])
    cube([1, 1, 5.25]);
  translate([68, 135, 0])
    cube([1, 1, 5.69]);
  translate([69, 135, 0])
    cube([1, 1, 6.04]);
  translate([70, 135, 0])
    cube([1, 1, 5.92]);
  translate([71, 135, 0])
    cube([1, 1, 5.61]);
  translate([72, 135, 0])
    cube([1, 1, 5.22]);
  translate([73, 135, 0])
    cube([1, 1, 4.86]);
  translate([74, 135, 0])
    cube([1, 1, 1.22]);
  translate([75, 135, 0])
    cube([1, 1, 1.33]);
  translate([76, 135, 0])
    cube([1, 1, 1.53]);
  translate([77, 135, 0])
    cube([1, 1, 1.49]);
  translate([78, 135, 0])
    cube([1, 1, 1.37]);
  translate([79, 135, 0])
    cube([1, 1, 1.29]);
  translate([80, 135, 0])
    cube([1, 1, 1.29]);
  translate([81, 135, 0])
    cube([1, 1, 0.78]);
  translate([82, 135, 0])
    cube([1, 1, 2.04]);
  translate([83, 135, 0])
    cube([1, 1, 1.69]);
  translate([84, 135, 0])
    cube([1, 1, 1.92]);
  translate([85, 135, 0])
    cube([1, 1, 1.73]);
  translate([86, 135, 0])
    cube([1, 1, 2.16]);
  translate([87, 135, 0])
    cube([1, 1, 1.65]);
  translate([88, 135, 0])
    cube([1, 1, 1.14]);
  translate([89, 135, 0])
    cube([1, 1, 1.18]);
  translate([90, 135, 0])
    cube([1, 1, 1.29]);
  translate([91, 135, 0])
    cube([1, 1, 0.82]);
  translate([92, 135, 0])
    cube([1, 1, 1.06]);
  translate([93, 135, 0])
    cube([1, 1, 1.22]);
  translate([94, 135, 0])
    cube([1, 1, 1.25]);
  translate([95, 135, 0])
    cube([1, 1, 1.29]);
  translate([96, 135, 0])
    cube([1, 1, 1.29]);
  translate([97, 135, 0])
    cube([1, 1, 1.18]);
  translate([98, 135, 0])
    cube([1, 1, 1.22]);
  translate([99, 135, 0])
    cube([1, 1, 1.33]);
  translate([100, 135, 0])
    cube([1, 1, 1.33]);
  translate([101, 135, 0])
    cube([1, 1, 0.90]);
  translate([102, 135, 0])
    cube([1, 1, 1.37]);
  translate([103, 135, 0])
    cube([1, 1, 1.96]);
  translate([104, 135, 0])
    cube([1, 1, 1.61]);
  translate([105, 135, 0])
    cube([1, 1, 1.61]);
  translate([106, 135, 0])
    cube([1, 1, 2.55]);
  translate([107, 135, 0])
    cube([1, 1, 2.08]);
  translate([108, 135, 0])
    cube([1, 1, 1.69]);
  translate([109, 135, 0])
    cube([1, 1, 2.51]);
  translate([110, 135, 0])
    cube([1, 1, 2.27]);
  translate([111, 135, 0])
    cube([1, 1, 2.47]);
  translate([112, 135, 0])
    cube([1, 1, 2.31]);
  translate([113, 135, 0])
    cube([1, 1, 2.20]);
  translate([114, 135, 0])
    cube([1, 1, 2.31]);
  translate([115, 135, 0])
    cube([1, 1, 2.00]);
  translate([116, 135, 0])
    cube([1, 1, 2.27]);
  translate([117, 135, 0])
    cube([1, 1, 1.65]);
  translate([118, 135, 0])
    cube([1, 1, 1.92]);
  translate([119, 135, 0])
    cube([1, 1, 1.29]);
  translate([120, 135, 0])
    cube([1, 1, 2.31]);
  translate([121, 135, 0])
    cube([1, 1, 2.43]);
  translate([122, 135, 0])
    cube([1, 1, 2.04]);
  translate([123, 135, 0])
    cube([1, 1, 1.88]);
  translate([124, 135, 0])
    cube([1, 1, 2.20]);
  translate([125, 135, 0])
    cube([1, 1, 2.39]);
  translate([126, 135, 0])
    cube([1, 1, 1.76]);
  translate([127, 135, 0])
    cube([1, 1, 1.96]);
  translate([128, 135, 0])
    cube([1, 1, 2.39]);
  translate([129, 135, 0])
    cube([1, 1, 1.69]);
  translate([130, 135, 0])
    cube([1, 1, 1.73]);
  translate([131, 135, 0])
    cube([1, 1, 2.16]);
  translate([132, 135, 0])
    cube([1, 1, 1.69]);
  translate([133, 135, 0])
    cube([1, 1, 1.88]);
  translate([134, 135, 0])
    cube([1, 1, 2.39]);
  translate([135, 135, 0])
    cube([1, 1, 2.12]);
  translate([136, 135, 0])
    cube([1, 1, 1.73]);
  translate([137, 135, 0])
    cube([1, 1, 2.08]);
  translate([138, 135, 0])
    cube([1, 1, 1.73]);
  translate([139, 135, 0])
    cube([1, 1, 1.45]);
  translate([140, 135, 0])
    cube([1, 1, 5.57]);
  translate([141, 135, 0])
    cube([1, 1, 6.59]);
  translate([142, 135, 0])
    cube([1, 1, 7.29]);
  translate([143, 135, 0])
    cube([1, 1, 6.16]);
  translate([144, 135, 0])
    cube([1, 1, 0.94]);
  translate([145, 135, 0])
    cube([1, 1, 1.41]);
  translate([146, 135, 0])
    cube([1, 1, 1.41]);
  translate([147, 135, 0])
    cube([1, 1, 1.41]);
  translate([148, 135, 0])
    cube([1, 1, 1.45]);
  translate([149, 135, 0])
    cube([1, 1, 1.45]);
  translate([150, 135, 0])
    cube([1, 1, 1.41]);
  translate([151, 135, 0])
    cube([1, 1, 1.41]);
  translate([152, 135, 0])
    cube([1, 1, 1.41]);
  translate([153, 135, 0])
    cube([1, 1, 1.37]);
  translate([154, 135, 0])
    cube([1, 1, 1.37]);
  translate([155, 135, 0])
    cube([1, 1, 1.41]);
  translate([156, 135, 0])
    cube([1, 1, 1.41]);
  translate([157, 135, 0])
    cube([1, 1, 1.41]);
  translate([158, 135, 0])
    cube([1, 1, 1.41]);
  translate([159, 135, 0])
    cube([1, 1, 1.41]);
  translate([160, 135, 0])
    cube([1, 1, 1.41]);
  translate([161, 135, 0])
    cube([1, 1, 1.41]);
  translate([162, 135, 0])
    cube([1, 1, 1.41]);
  translate([163, 135, 0])
    cube([1, 1, 1.41]);
  translate([164, 135, 0])
    cube([1, 1, 1.45]);
  translate([165, 135, 0])
    cube([1, 1, 1.45]);
  translate([166, 135, 0])
    cube([1, 1, 1.41]);
  translate([167, 135, 0])
    cube([1, 1, 1.45]);
  translate([168, 135, 0])
    cube([1, 1, 1.45]);
  translate([169, 135, 0])
    cube([1, 1, 1.45]);
  translate([170, 135, 0])
    cube([1, 1, 1.41]);
  translate([171, 135, 0])
    cube([1, 1, 1.45]);
  translate([172, 135, 0])
    cube([1, 1, 1.45]);
  translate([173, 135, 0])
    cube([1, 1, 1.45]);
  translate([174, 135, 0])
    cube([1, 1, 1.45]);
  translate([175, 135, 0])
    cube([1, 1, 1.45]);
  translate([176, 135, 0])
    cube([1, 1, 1.45]);
  translate([177, 135, 0])
    cube([1, 1, 1.45]);
  translate([178, 135, 0])
    cube([1, 1, 1.45]);
  translate([179, 135, 0])
    cube([1, 1, 1.45]);
  translate([180, 135, 0])
    cube([1, 1, 1.45]);
  translate([181, 135, 0])
    cube([1, 1, 1.45]);
  translate([182, 135, 0])
    cube([1, 1, 1.45]);
  translate([183, 135, 0])
    cube([1, 1, 1.45]);
  translate([184, 135, 0])
    cube([1, 1, 1.45]);
  translate([185, 135, 0])
    cube([1, 1, 1.45]);
  translate([186, 135, 0])
    cube([1, 1, 1.49]);
  translate([187, 135, 0])
    cube([1, 1, 1.49]);
  translate([188, 135, 0])
    cube([1, 1, 1.45]);
  translate([189, 135, 0])
    cube([1, 1, 1.45]);
  translate([190, 135, 0])
    cube([1, 1, 1.41]);
  translate([191, 135, 0])
    cube([1, 1, 1.41]);
  translate([192, 135, 0])
    cube([1, 1, 1.45]);
  translate([193, 135, 0])
    cube([1, 1, 1.45]);
  translate([194, 135, 0])
    cube([1, 1, 1.49]);
  translate([195, 135, 0])
    cube([1, 1, 1.49]);
  translate([196, 135, 0])
    cube([1, 1, 1.45]);
  translate([197, 135, 0])
    cube([1, 1, 1.49]);
  translate([198, 135, 0])
    cube([1, 1, 1.45]);
  translate([199, 135, 0])
    cube([1, 1, 1.45]);
  translate([200, 135, 0])
    cube([1, 1, 1.45]);
  translate([201, 135, 0])
    cube([1, 1, 1.45]);
  translate([202, 135, 0])
    cube([1, 1, 1.45]);
  translate([203, 135, 0])
    cube([1, 1, 1.45]);
  translate([204, 135, 0])
    cube([1, 1, 1.45]);
  translate([205, 135, 0])
    cube([1, 1, 1.45]);
  translate([206, 135, 0])
    cube([1, 1, 1.45]);
  translate([207, 135, 0])
    cube([1, 1, 1.45]);
  translate([208, 135, 0])
    cube([1, 1, 1.45]);
  translate([209, 135, 0])
    cube([1, 1, 1.45]);
  translate([210, 135, 0])
    cube([1, 1, 1.45]);
  translate([211, 135, 0])
    cube([1, 1, 1.45]);
  translate([212, 135, 0])
    cube([1, 1, 1.49]);
  translate([213, 135, 0])
    cube([1, 1, 1.45]);
  translate([214, 135, 0])
    cube([1, 1, 1.45]);
  translate([215, 135, 0])
    cube([1, 1, 1.45]);
  translate([216, 135, 0])
    cube([1, 1, 1.45]);
  translate([217, 135, 0])
    cube([1, 1, 1.45]);
  translate([218, 135, 0])
    cube([1, 1, 1.45]);
  translate([219, 135, 0])
    cube([1, 1, 1.45]);
  translate([220, 135, 0])
    cube([1, 1, 1.45]);
  translate([221, 135, 0])
    cube([1, 1, 1.45]);
  translate([222, 135, 0])
    cube([1, 1, 1.45]);
  translate([223, 135, 0])
    cube([1, 1, 1.45]);
  translate([224, 135, 0])
    cube([1, 1, 1.45]);
  translate([225, 135, 0])
    cube([1, 1, 1.45]);
  translate([226, 135, 0])
    cube([1, 1, 1.45]);
  translate([227, 135, 0])
    cube([1, 1, 1.45]);
  translate([228, 135, 0])
    cube([1, 1, 1.45]);
  translate([229, 135, 0])
    cube([1, 1, 1.45]);
  translate([230, 135, 0])
    cube([1, 1, 1.45]);
  translate([231, 135, 0])
    cube([1, 1, 1.45]);
  translate([232, 135, 0])
    cube([1, 1, 1.45]);
  translate([233, 135, 0])
    cube([1, 1, 1.45]);
  translate([234, 135, 0])
    cube([1, 1, 1.45]);
  translate([235, 135, 0])
    cube([1, 1, 1.45]);
  translate([236, 135, 0])
    cube([1, 1, 1.45]);
  translate([237, 135, 0])
    cube([1, 1, 1.45]);
  translate([238, 135, 0])
    cube([1, 1, 1.45]);
  translate([239, 135, 0])
    cube([1, 1, 1.45]);
  translate([240, 135, 0])
    cube([1, 1, 1.45]);
  translate([241, 135, 0])
    cube([1, 1, 1.45]);
  translate([242, 135, 0])
    cube([1, 1, 1.45]);
  translate([243, 135, 0])
    cube([1, 1, 1.45]);
  translate([244, 135, 0])
    cube([1, 1, 1.45]);
  translate([245, 135, 0])
    cube([1, 1, 1.45]);
  translate([246, 135, 0])
    cube([1, 1, 1.45]);
  translate([0, 136, 0])
    cube([1, 1, 1.65]);
  translate([1, 136, 0])
    cube([1, 1, 1.57]);
  translate([2, 136, 0])
    cube([1, 1, 1.65]);
  translate([3, 136, 0])
    cube([1, 1, 1.61]);
  translate([4, 136, 0])
    cube([1, 1, 1.61]);
  translate([5, 136, 0])
    cube([1, 1, 1.61]);
  translate([6, 136, 0])
    cube([1, 1, 1.61]);
  translate([7, 136, 0])
    cube([1, 1, 1.61]);
  translate([8, 136, 0])
    cube([1, 1, 1.61]);
  translate([9, 136, 0])
    cube([1, 1, 1.61]);
  translate([10, 136, 0])
    cube([1, 1, 1.61]);
  translate([11, 136, 0])
    cube([1, 1, 1.61]);
  translate([12, 136, 0])
    cube([1, 1, 1.61]);
  translate([13, 136, 0])
    cube([1, 1, 1.61]);
  translate([14, 136, 0])
    cube([1, 1, 1.61]);
  translate([15, 136, 0])
    cube([1, 1, 1.61]);
  translate([16, 136, 0])
    cube([1, 1, 1.57]);
  translate([17, 136, 0])
    cube([1, 1, 1.57]);
  translate([18, 136, 0])
    cube([1, 1, 1.57]);
  translate([19, 136, 0])
    cube([1, 1, 1.57]);
  translate([20, 136, 0])
    cube([1, 1, 1.53]);
  translate([21, 136, 0])
    cube([1, 1, 1.57]);
  translate([22, 136, 0])
    cube([1, 1, 1.57]);
  translate([23, 136, 0])
    cube([1, 1, 1.57]);
  translate([24, 136, 0])
    cube([1, 1, 1.57]);
  translate([25, 136, 0])
    cube([1, 1, 1.57]);
  translate([26, 136, 0])
    cube([1, 1, 1.57]);
  translate([27, 136, 0])
    cube([1, 1, 1.57]);
  translate([28, 136, 0])
    cube([1, 1, 1.57]);
  translate([29, 136, 0])
    cube([1, 1, 1.57]);
  translate([30, 136, 0])
    cube([1, 1, 1.57]);
  translate([31, 136, 0])
    cube([1, 1, 1.57]);
  translate([32, 136, 0])
    cube([1, 1, 1.53]);
  translate([33, 136, 0])
    cube([1, 1, 1.53]);
  translate([34, 136, 0])
    cube([1, 1, 1.53]);
  translate([35, 136, 0])
    cube([1, 1, 1.57]);
  translate([36, 136, 0])
    cube([1, 1, 1.53]);
  translate([37, 136, 0])
    cube([1, 1, 1.57]);
  translate([38, 136, 0])
    cube([1, 1, 1.53]);
  translate([39, 136, 0])
    cube([1, 1, 1.53]);
  translate([40, 136, 0])
    cube([1, 1, 1.53]);
  translate([41, 136, 0])
    cube([1, 1, 1.53]);
  translate([42, 136, 0])
    cube([1, 1, 1.53]);
  translate([43, 136, 0])
    cube([1, 1, 1.49]);
  translate([44, 136, 0])
    cube([1, 1, 1.49]);
  translate([45, 136, 0])
    cube([1, 1, 1.49]);
  translate([46, 136, 0])
    cube([1, 1, 1.49]);
  translate([47, 136, 0])
    cube([1, 1, 1.49]);
  translate([48, 136, 0])
    cube([1, 1, 1.49]);
  translate([49, 136, 0])
    cube([1, 1, 1.53]);
  translate([50, 136, 0])
    cube([1, 1, 7.76]);
  translate([51, 136, 0])
    cube([1, 1, 5.49]);
  translate([52, 136, 0])
    cube([1, 1, 4.39]);
  translate([53, 136, 0])
    cube([1, 1, 3.80]);
  translate([54, 136, 0])
    cube([1, 1, 3.92]);
  translate([55, 136, 0])
    cube([1, 1, 4.27]);
  translate([56, 136, 0])
    cube([1, 1, 4.82]);
  translate([57, 136, 0])
    cube([1, 1, 4.98]);
  translate([58, 136, 0])
    cube([1, 1, 5.33]);
  translate([59, 136, 0])
    cube([1, 1, 5.65]);
  translate([60, 136, 0])
    cube([1, 1, 5.96]);
  translate([61, 136, 0])
    cube([1, 1, 6.24]);
  translate([62, 136, 0])
    cube([1, 1, 5.92]);
  translate([63, 136, 0])
    cube([1, 1, 5.53]);
  translate([64, 136, 0])
    cube([1, 1, 5.37]);
  translate([65, 136, 0])
    cube([1, 1, 5.10]);
  translate([66, 136, 0])
    cube([1, 1, 4.98]);
  translate([67, 136, 0])
    cube([1, 1, 4.86]);
  translate([68, 136, 0])
    cube([1, 1, 5.61]);
  translate([69, 136, 0])
    cube([1, 1, 6.00]);
  translate([70, 136, 0])
    cube([1, 1, 5.92]);
  translate([71, 136, 0])
    cube([1, 1, 5.57]);
  translate([72, 136, 0])
    cube([1, 1, 5.18]);
  translate([73, 136, 0])
    cube([1, 1, 4.78]);
  translate([74, 136, 0])
    cube([1, 1, 4.98]);
  translate([75, 136, 0])
    cube([1, 1, 4.98]);
  translate([76, 136, 0])
    cube([1, 1, 1.41]);
  translate([77, 136, 0])
    cube([1, 1, 1.33]);
  translate([78, 136, 0])
    cube([1, 1, 1.49]);
  translate([79, 136, 0])
    cube([1, 1, 0.86]);
  translate([80, 136, 0])
    cube([1, 1, 1.29]);
  translate([81, 136, 0])
    cube([1, 1, 1.06]);
  translate([82, 136, 0])
    cube([1, 1, 1.92]);
  translate([83, 136, 0])
    cube([1, 1, 1.18]);
  translate([84, 136, 0])
    cube([1, 1, 1.73]);
  translate([85, 136, 0])
    cube([1, 1, 1.57]);
  translate([86, 136, 0])
    cube([1, 1, 2.16]);
  translate([87, 136, 0])
    cube([1, 1, 1.25]);
  translate([88, 136, 0])
    cube([1, 1, 1.06]);
  translate([89, 136, 0])
    cube([1, 1, 1.18]);
  translate([90, 136, 0])
    cube([1, 1, 1.73]);
  translate([91, 136, 0])
    cube([1, 1, 1.53]);
  translate([92, 136, 0])
    cube([1, 1, 1.29]);
  translate([93, 136, 0])
    cube([1, 1, 1.14]);
  translate([94, 136, 0])
    cube([1, 1, 0.94]);
  translate([95, 136, 0])
    cube([1, 1, 0.78]);
  translate([96, 136, 0])
    cube([1, 1, 0.94]);
  translate([97, 136, 0])
    cube([1, 1, 0.86]);
  translate([98, 136, 0])
    cube([1, 1, 0.94]);
  translate([99, 136, 0])
    cube([1, 1, 0.90]);
  translate([100, 136, 0])
    cube([1, 1, 1.10]);
  translate([101, 136, 0])
    cube([1, 1, 1.14]);
  translate([102, 136, 0])
    cube([1, 1, 1.37]);
  translate([103, 136, 0])
    cube([1, 1, 0.94]);
  translate([104, 136, 0])
    cube([1, 1, 1.10]);
  translate([105, 136, 0])
    cube([1, 1, 1.53]);
  translate([106, 136, 0])
    cube([1, 1, 1.37]);
  translate([107, 136, 0])
    cube([1, 1, 1.33]);
  translate([108, 136, 0])
    cube([1, 1, 1.61]);
  translate([109, 136, 0])
    cube([1, 1, 1.80]);
  translate([110, 136, 0])
    cube([1, 1, 2.08]);
  translate([111, 136, 0])
    cube([1, 1, 1.61]);
  translate([112, 136, 0])
    cube([1, 1, 2.31]);
  translate([113, 136, 0])
    cube([1, 1, 2.12]);
  translate([114, 136, 0])
    cube([1, 1, 2.12]);
  translate([115, 136, 0])
    cube([1, 1, 1.88]);
  translate([116, 136, 0])
    cube([1, 1, 1.57]);
  translate([117, 136, 0])
    cube([1, 1, 2.00]);
  translate([118, 136, 0])
    cube([1, 1, 1.29]);
  translate([119, 136, 0])
    cube([1, 1, 1.73]);
  translate([120, 136, 0])
    cube([1, 1, 2.12]);
  translate([121, 136, 0])
    cube([1, 1, 1.88]);
  translate([122, 136, 0])
    cube([1, 1, 2.04]);
  translate([123, 136, 0])
    cube([1, 1, 1.57]);
  translate([124, 136, 0])
    cube([1, 1, 1.73]);
  translate([125, 136, 0])
    cube([1, 1, 2.08]);
  translate([126, 136, 0])
    cube([1, 1, 1.53]);
  translate([127, 136, 0])
    cube([1, 1, 1.73]);
  translate([128, 136, 0])
    cube([1, 1, 1.92]);
  translate([129, 136, 0])
    cube([1, 1, 1.76]);
  translate([130, 136, 0])
    cube([1, 1, 1.65]);
  translate([131, 136, 0])
    cube([1, 1, 1.25]);
  translate([132, 136, 0])
    cube([1, 1, 1.57]);
  translate([133, 136, 0])
    cube([1, 1, 2.82]);
  translate([134, 136, 0])
    cube([1, 1, 1.80]);
  translate([135, 136, 0])
    cube([1, 1, 2.24]);
  translate([136, 136, 0])
    cube([1, 1, 2.39]);
  translate([137, 136, 0])
    cube([1, 1, 1.80]);
  translate([138, 136, 0])
    cube([1, 1, 1.88]);
  translate([139, 136, 0])
    cube([1, 1, 5.61]);
  translate([140, 136, 0])
    cube([1, 1, 5.69]);
  translate([141, 136, 0])
    cube([1, 1, 5.96]);
  translate([142, 136, 0])
    cube([1, 1, 7.18]);
  translate([143, 136, 0])
    cube([1, 1, 7.53]);
  translate([144, 136, 0])
    cube([1, 1, 1.41]);
  translate([145, 136, 0])
    cube([1, 1, 1.37]);
  translate([146, 136, 0])
    cube([1, 1, 1.37]);
  translate([147, 136, 0])
    cube([1, 1, 1.41]);
  translate([148, 136, 0])
    cube([1, 1, 1.37]);
  translate([149, 136, 0])
    cube([1, 1, 1.37]);
  translate([150, 136, 0])
    cube([1, 1, 1.41]);
  translate([151, 136, 0])
    cube([1, 1, 1.41]);
  translate([152, 136, 0])
    cube([1, 1, 1.37]);
  translate([153, 136, 0])
    cube([1, 1, 1.41]);
  translate([154, 136, 0])
    cube([1, 1, 1.41]);
  translate([155, 136, 0])
    cube([1, 1, 1.41]);
  translate([156, 136, 0])
    cube([1, 1, 1.41]);
  translate([157, 136, 0])
    cube([1, 1, 1.41]);
  translate([158, 136, 0])
    cube([1, 1, 1.41]);
  translate([159, 136, 0])
    cube([1, 1, 1.41]);
  translate([160, 136, 0])
    cube([1, 1, 1.41]);
  translate([161, 136, 0])
    cube([1, 1, 1.41]);
  translate([162, 136, 0])
    cube([1, 1, 1.41]);
  translate([163, 136, 0])
    cube([1, 1, 1.41]);
  translate([164, 136, 0])
    cube([1, 1, 1.45]);
  translate([165, 136, 0])
    cube([1, 1, 1.45]);
  translate([166, 136, 0])
    cube([1, 1, 1.49]);
  translate([167, 136, 0])
    cube([1, 1, 1.49]);
  translate([168, 136, 0])
    cube([1, 1, 1.45]);
  translate([169, 136, 0])
    cube([1, 1, 1.45]);
  translate([170, 136, 0])
    cube([1, 1, 1.45]);
  translate([171, 136, 0])
    cube([1, 1, 1.45]);
  translate([172, 136, 0])
    cube([1, 1, 1.45]);
  translate([173, 136, 0])
    cube([1, 1, 1.45]);
  translate([174, 136, 0])
    cube([1, 1, 1.45]);
  translate([175, 136, 0])
    cube([1, 1, 1.45]);
  translate([176, 136, 0])
    cube([1, 1, 1.45]);
  translate([177, 136, 0])
    cube([1, 1, 1.45]);
  translate([178, 136, 0])
    cube([1, 1, 1.45]);
  translate([179, 136, 0])
    cube([1, 1, 1.45]);
  translate([180, 136, 0])
    cube([1, 1, 1.45]);
  translate([181, 136, 0])
    cube([1, 1, 1.45]);
  translate([182, 136, 0])
    cube([1, 1, 1.45]);
  translate([183, 136, 0])
    cube([1, 1, 1.45]);
  translate([184, 136, 0])
    cube([1, 1, 1.45]);
  translate([185, 136, 0])
    cube([1, 1, 1.49]);
  translate([186, 136, 0])
    cube([1, 1, 1.49]);
  translate([187, 136, 0])
    cube([1, 1, 1.45]);
  translate([188, 136, 0])
    cube([1, 1, 1.45]);
  translate([189, 136, 0])
    cube([1, 1, 1.45]);
  translate([190, 136, 0])
    cube([1, 1, 1.45]);
  translate([191, 136, 0])
    cube([1, 1, 1.45]);
  translate([192, 136, 0])
    cube([1, 1, 1.41]);
  translate([193, 136, 0])
    cube([1, 1, 1.45]);
  translate([194, 136, 0])
    cube([1, 1, 1.53]);
  translate([195, 136, 0])
    cube([1, 1, 1.49]);
  translate([196, 136, 0])
    cube([1, 1, 1.41]);
  translate([197, 136, 0])
    cube([1, 1, 1.41]);
  translate([198, 136, 0])
    cube([1, 1, 1.41]);
  translate([199, 136, 0])
    cube([1, 1, 1.41]);
  translate([200, 136, 0])
    cube([1, 1, 1.41]);
  translate([201, 136, 0])
    cube([1, 1, 1.45]);
  translate([202, 136, 0])
    cube([1, 1, 1.45]);
  translate([203, 136, 0])
    cube([1, 1, 1.45]);
  translate([204, 136, 0])
    cube([1, 1, 1.49]);
  translate([205, 136, 0])
    cube([1, 1, 1.49]);
  translate([206, 136, 0])
    cube([1, 1, 1.49]);
  translate([207, 136, 0])
    cube([1, 1, 1.49]);
  translate([208, 136, 0])
    cube([1, 1, 1.49]);
  translate([209, 136, 0])
    cube([1, 1, 1.41]);
  translate([210, 136, 0])
    cube([1, 1, 1.41]);
  translate([211, 136, 0])
    cube([1, 1, 1.49]);
  translate([212, 136, 0])
    cube([1, 1, 1.41]);
  translate([213, 136, 0])
    cube([1, 1, 1.41]);
  translate([214, 136, 0])
    cube([1, 1, 1.45]);
  translate([215, 136, 0])
    cube([1, 1, 1.45]);
  translate([216, 136, 0])
    cube([1, 1, 1.45]);
  translate([217, 136, 0])
    cube([1, 1, 1.45]);
  translate([218, 136, 0])
    cube([1, 1, 1.45]);
  translate([219, 136, 0])
    cube([1, 1, 1.45]);
  translate([220, 136, 0])
    cube([1, 1, 1.45]);
  translate([221, 136, 0])
    cube([1, 1, 1.45]);
  translate([222, 136, 0])
    cube([1, 1, 1.45]);
  translate([223, 136, 0])
    cube([1, 1, 1.45]);
  translate([224, 136, 0])
    cube([1, 1, 1.49]);
  translate([225, 136, 0])
    cube([1, 1, 1.45]);
  translate([226, 136, 0])
    cube([1, 1, 1.45]);
  translate([227, 136, 0])
    cube([1, 1, 1.45]);
  translate([228, 136, 0])
    cube([1, 1, 1.45]);
  translate([229, 136, 0])
    cube([1, 1, 1.45]);
  translate([230, 136, 0])
    cube([1, 1, 1.45]);
  translate([231, 136, 0])
    cube([1, 1, 1.45]);
  translate([232, 136, 0])
    cube([1, 1, 1.45]);
  translate([233, 136, 0])
    cube([1, 1, 1.45]);
  translate([234, 136, 0])
    cube([1, 1, 1.45]);
  translate([235, 136, 0])
    cube([1, 1, 1.45]);
  translate([236, 136, 0])
    cube([1, 1, 1.45]);
  translate([237, 136, 0])
    cube([1, 1, 1.45]);
  translate([238, 136, 0])
    cube([1, 1, 1.45]);
  translate([239, 136, 0])
    cube([1, 1, 1.45]);
  translate([240, 136, 0])
    cube([1, 1, 1.45]);
  translate([241, 136, 0])
    cube([1, 1, 1.45]);
  translate([242, 136, 0])
    cube([1, 1, 1.45]);
  translate([243, 136, 0])
    cube([1, 1, 1.45]);
  translate([244, 136, 0])
    cube([1, 1, 1.45]);
  translate([245, 136, 0])
    cube([1, 1, 1.45]);
  translate([246, 136, 0])
    cube([1, 1, 1.45]);
  translate([0, 137, 0])
    cube([1, 1, 1.65]);
  translate([1, 137, 0])
    cube([1, 1, 1.57]);
  translate([2, 137, 0])
    cube([1, 1, 1.65]);
  translate([3, 137, 0])
    cube([1, 1, 1.65]);
  translate([4, 137, 0])
    cube([1, 1, 1.61]);
  translate([5, 137, 0])
    cube([1, 1, 1.61]);
  translate([6, 137, 0])
    cube([1, 1, 1.61]);
  translate([7, 137, 0])
    cube([1, 1, 1.61]);
  translate([8, 137, 0])
    cube([1, 1, 1.61]);
  translate([9, 137, 0])
    cube([1, 1, 1.61]);
  translate([10, 137, 0])
    cube([1, 1, 1.61]);
  translate([11, 137, 0])
    cube([1, 1, 1.61]);
  translate([12, 137, 0])
    cube([1, 1, 1.61]);
  translate([13, 137, 0])
    cube([1, 1, 1.61]);
  translate([14, 137, 0])
    cube([1, 1, 1.61]);
  translate([15, 137, 0])
    cube([1, 1, 1.61]);
  translate([16, 137, 0])
    cube([1, 1, 1.57]);
  translate([17, 137, 0])
    cube([1, 1, 1.57]);
  translate([18, 137, 0])
    cube([1, 1, 1.57]);
  translate([19, 137, 0])
    cube([1, 1, 1.57]);
  translate([20, 137, 0])
    cube([1, 1, 1.57]);
  translate([21, 137, 0])
    cube([1, 1, 1.61]);
  translate([22, 137, 0])
    cube([1, 1, 1.57]);
  translate([23, 137, 0])
    cube([1, 1, 1.57]);
  translate([24, 137, 0])
    cube([1, 1, 1.57]);
  translate([25, 137, 0])
    cube([1, 1, 1.57]);
  translate([26, 137, 0])
    cube([1, 1, 1.57]);
  translate([27, 137, 0])
    cube([1, 1, 1.57]);
  translate([28, 137, 0])
    cube([1, 1, 1.57]);
  translate([29, 137, 0])
    cube([1, 1, 1.57]);
  translate([30, 137, 0])
    cube([1, 1, 1.57]);
  translate([31, 137, 0])
    cube([1, 1, 1.57]);
  translate([32, 137, 0])
    cube([1, 1, 1.57]);
  translate([33, 137, 0])
    cube([1, 1, 1.57]);
  translate([34, 137, 0])
    cube([1, 1, 1.57]);
  translate([35, 137, 0])
    cube([1, 1, 1.57]);
  translate([36, 137, 0])
    cube([1, 1, 1.53]);
  translate([37, 137, 0])
    cube([1, 1, 1.57]);
  translate([38, 137, 0])
    cube([1, 1, 1.53]);
  translate([39, 137, 0])
    cube([1, 1, 1.53]);
  translate([40, 137, 0])
    cube([1, 1, 1.53]);
  translate([41, 137, 0])
    cube([1, 1, 1.53]);
  translate([42, 137, 0])
    cube([1, 1, 1.53]);
  translate([43, 137, 0])
    cube([1, 1, 1.53]);
  translate([44, 137, 0])
    cube([1, 1, 1.49]);
  translate([45, 137, 0])
    cube([1, 1, 1.49]);
  translate([46, 137, 0])
    cube([1, 1, 1.49]);
  translate([47, 137, 0])
    cube([1, 1, 1.49]);
  translate([48, 137, 0])
    cube([1, 1, 1.49]);
  translate([49, 137, 0])
    cube([1, 1, 1.29]);
  translate([50, 137, 0])
    cube([1, 1, 7.53]);
  translate([51, 137, 0])
    cube([1, 1, 6.12]);
  translate([52, 137, 0])
    cube([1, 1, 4.82]);
  translate([53, 137, 0])
    cube([1, 1, 4.59]);
  translate([54, 137, 0])
    cube([1, 1, 3.76]);
  translate([55, 137, 0])
    cube([1, 1, 4.31]);
  translate([56, 137, 0])
    cube([1, 1, 4.78]);
  translate([57, 137, 0])
    cube([1, 1, 4.98]);
  translate([58, 137, 0])
    cube([1, 1, 5.33]);
  translate([59, 137, 0])
    cube([1, 1, 5.53]);
  translate([60, 137, 0])
    cube([1, 1, 5.84]);
  translate([61, 137, 0])
    cube([1, 1, 6.24]);
  translate([62, 137, 0])
    cube([1, 1, 5.96]);
  translate([63, 137, 0])
    cube([1, 1, 5.69]);
  translate([64, 137, 0])
    cube([1, 1, 5.41]);
  translate([65, 137, 0])
    cube([1, 1, 5.10]);
  translate([66, 137, 0])
    cube([1, 1, 4.98]);
  translate([67, 137, 0])
    cube([1, 1, 4.86]);
  translate([68, 137, 0])
    cube([1, 1, 5.29]);
  translate([69, 137, 0])
    cube([1, 1, 6.00]);
  translate([70, 137, 0])
    cube([1, 1, 5.92]);
  translate([71, 137, 0])
    cube([1, 1, 5.57]);
  translate([72, 137, 0])
    cube([1, 1, 5.14]);
  translate([73, 137, 0])
    cube([1, 1, 4.78]);
  translate([74, 137, 0])
    cube([1, 1, 4.75]);
  translate([75, 137, 0])
    cube([1, 1, 5.06]);
  translate([76, 137, 0])
    cube([1, 1, 5.96]);
  translate([77, 137, 0])
    cube([1, 1, 5.41]);
  translate([78, 137, 0])
    cube([1, 1, 4.51]);
  translate([79, 137, 0])
    cube([1, 1, 1.45]);
  translate([80, 137, 0])
    cube([1, 1, 1.22]);
  translate([81, 137, 0])
    cube([1, 1, 0.59]);
  translate([82, 137, 0])
    cube([1, 1, 0.63]);
  translate([83, 137, 0])
    cube([1, 1, 1.49]);
  translate([84, 137, 0])
    cube([1, 1, 1.25]);
  translate([85, 137, 0])
    cube([1, 1, 1.25]);
  translate([86, 137, 0])
    cube([1, 1, 1.57]);
  translate([87, 137, 0])
    cube([1, 1, 1.65]);
  translate([88, 137, 0])
    cube([1, 1, 1.49]);
  translate([89, 137, 0])
    cube([1, 1, 1.33]);
  translate([90, 137, 0])
    cube([1, 1, 1.02]);
  translate([91, 137, 0])
    cube([1, 1, 0.94]);
  translate([92, 137, 0])
    cube([1, 1, 0.90]);
  translate([93, 137, 0])
    cube([1, 1, 1.06]);
  translate([94, 137, 0])
    cube([1, 1, 0.94]);
  translate([95, 137, 0])
    cube([1, 1, 0.94]);
  translate([96, 137, 0])
    cube([1, 1, 0.98]);
  translate([97, 137, 0])
    cube([1, 1, 0.98]);
  translate([98, 137, 0])
    cube([1, 1, 1.10]);
  translate([99, 137, 0])
    cube([1, 1, 1.33]);
  translate([100, 137, 0])
    cube([1, 1, 1.37]);
  translate([101, 137, 0])
    cube([1, 1, 1.57]);
  translate([102, 137, 0])
    cube([1, 1, 1.18]);
  translate([103, 137, 0])
    cube([1, 1, 1.65]);
  translate([104, 137, 0])
    cube([1, 1, 1.84]);
  translate([105, 137, 0])
    cube([1, 1, 1.49]);
  translate([106, 137, 0])
    cube([1, 1, 1.49]);
  translate([107, 137, 0])
    cube([1, 1, 1.33]);
  translate([108, 137, 0])
    cube([1, 1, 1.33]);
  translate([109, 137, 0])
    cube([1, 1, 1.53]);
  translate([110, 137, 0])
    cube([1, 1, 0.98]);
  translate([111, 137, 0])
    cube([1, 1, 1.33]);
  translate([112, 137, 0])
    cube([1, 1, 1.49]);
  translate([113, 137, 0])
    cube([1, 1, 1.57]);
  translate([114, 137, 0])
    cube([1, 1, 1.57]);
  translate([115, 137, 0])
    cube([1, 1, 1.33]);
  translate([116, 137, 0])
    cube([1, 1, 1.73]);
  translate([117, 137, 0])
    cube([1, 1, 1.69]);
  translate([118, 137, 0])
    cube([1, 1, 1.73]);
  translate([119, 137, 0])
    cube([1, 1, 1.57]);
  translate([120, 137, 0])
    cube([1, 1, 1.69]);
  translate([121, 137, 0])
    cube([1, 1, 2.12]);
  translate([122, 137, 0])
    cube([1, 1, 1.76]);
  translate([123, 137, 0])
    cube([1, 1, 1.33]);
  translate([124, 137, 0])
    cube([1, 1, 1.96]);
  translate([125, 137, 0])
    cube([1, 1, 2.24]);
  translate([126, 137, 0])
    cube([1, 1, 1.65]);
  translate([127, 137, 0])
    cube([1, 1, 1.53]);
  translate([128, 137, 0])
    cube([1, 1, 1.92]);
  translate([129, 137, 0])
    cube([1, 1, 2.20]);
  translate([130, 137, 0])
    cube([1, 1, 2.20]);
  translate([131, 137, 0])
    cube([1, 1, 2.08]);
  translate([132, 137, 0])
    cube([1, 1, 2.43]);
  translate([133, 137, 0])
    cube([1, 1, 1.65]);
  translate([134, 137, 0])
    cube([1, 1, 2.43]);
  translate([135, 137, 0])
    cube([1, 1, 2.04]);
  translate([136, 137, 0])
    cube([1, 1, 1.45]);
  translate([137, 137, 0])
    cube([1, 1, 3.29]);
  translate([138, 137, 0])
    cube([1, 1, 4.16]);
  translate([139, 137, 0])
    cube([1, 1, 5.92]);
  translate([140, 137, 0])
    cube([1, 1, 5.69]);
  translate([141, 137, 0])
    cube([1, 1, 5.76]);
  translate([142, 137, 0])
    cube([1, 1, 6.47]);
  translate([143, 137, 0])
    cube([1, 1, 7.76]);
  translate([144, 137, 0])
    cube([1, 1, 1.92]);
  translate([145, 137, 0])
    cube([1, 1, 1.37]);
  translate([146, 137, 0])
    cube([1, 1, 1.37]);
  translate([147, 137, 0])
    cube([1, 1, 1.45]);
  translate([148, 137, 0])
    cube([1, 1, 1.41]);
  translate([149, 137, 0])
    cube([1, 1, 1.41]);
  translate([150, 137, 0])
    cube([1, 1, 1.41]);
  translate([151, 137, 0])
    cube([1, 1, 1.41]);
  translate([152, 137, 0])
    cube([1, 1, 1.37]);
  translate([153, 137, 0])
    cube([1, 1, 1.41]);
  translate([154, 137, 0])
    cube([1, 1, 1.41]);
  translate([155, 137, 0])
    cube([1, 1, 1.41]);
  translate([156, 137, 0])
    cube([1, 1, 1.41]);
  translate([157, 137, 0])
    cube([1, 1, 1.41]);
  translate([158, 137, 0])
    cube([1, 1, 1.41]);
  translate([159, 137, 0])
    cube([1, 1, 1.41]);
  translate([160, 137, 0])
    cube([1, 1, 1.41]);
  translate([161, 137, 0])
    cube([1, 1, 1.45]);
  translate([162, 137, 0])
    cube([1, 1, 1.45]);
  translate([163, 137, 0])
    cube([1, 1, 1.41]);
  translate([164, 137, 0])
    cube([1, 1, 1.45]);
  translate([165, 137, 0])
    cube([1, 1, 1.45]);
  translate([166, 137, 0])
    cube([1, 1, 1.33]);
  translate([167, 137, 0])
    cube([1, 1, 1.33]);
  translate([168, 137, 0])
    cube([1, 1, 1.45]);
  translate([169, 137, 0])
    cube([1, 1, 1.45]);
  translate([170, 137, 0])
    cube([1, 1, 1.45]);
  translate([171, 137, 0])
    cube([1, 1, 1.45]);
  translate([172, 137, 0])
    cube([1, 1, 1.45]);
  translate([173, 137, 0])
    cube([1, 1, 1.45]);
  translate([174, 137, 0])
    cube([1, 1, 1.45]);
  translate([175, 137, 0])
    cube([1, 1, 1.45]);
  translate([176, 137, 0])
    cube([1, 1, 1.45]);
  translate([177, 137, 0])
    cube([1, 1, 1.45]);
  translate([178, 137, 0])
    cube([1, 1, 1.45]);
  translate([179, 137, 0])
    cube([1, 1, 1.45]);
  translate([180, 137, 0])
    cube([1, 1, 1.45]);
  translate([181, 137, 0])
    cube([1, 1, 1.45]);
  translate([182, 137, 0])
    cube([1, 1, 1.45]);
  translate([183, 137, 0])
    cube([1, 1, 1.45]);
  translate([184, 137, 0])
    cube([1, 1, 1.45]);
  translate([185, 137, 0])
    cube([1, 1, 1.49]);
  translate([186, 137, 0])
    cube([1, 1, 1.49]);
  translate([187, 137, 0])
    cube([1, 1, 1.45]);
  translate([188, 137, 0])
    cube([1, 1, 1.45]);
  translate([189, 137, 0])
    cube([1, 1, 1.45]);
  translate([190, 137, 0])
    cube([1, 1, 1.45]);
  translate([191, 137, 0])
    cube([1, 1, 1.45]);
  translate([192, 137, 0])
    cube([1, 1, 1.49]);
  translate([193, 137, 0])
    cube([1, 1, 1.45]);
  translate([194, 137, 0])
    cube([1, 1, 1.53]);
  translate([195, 137, 0])
    cube([1, 1, 1.49]);
  translate([196, 137, 0])
    cube([1, 1, 1.53]);
  translate([197, 137, 0])
    cube([1, 1, 1.53]);
  translate([198, 137, 0])
    cube([1, 1, 1.49]);
  translate([199, 137, 0])
    cube([1, 1, 1.49]);
  translate([200, 137, 0])
    cube([1, 1, 1.49]);
  translate([201, 137, 0])
    cube([1, 1, 1.45]);
  translate([202, 137, 0])
    cube([1, 1, 1.45]);
  translate([203, 137, 0])
    cube([1, 1, 1.45]);
  translate([204, 137, 0])
    cube([1, 1, 1.49]);
  translate([205, 137, 0])
    cube([1, 1, 1.49]);
  translate([206, 137, 0])
    cube([1, 1, 1.45]);
  translate([207, 137, 0])
    cube([1, 1, 1.45]);
  translate([208, 137, 0])
    cube([1, 1, 1.49]);
  translate([209, 137, 0])
    cube([1, 1, 1.49]);
  translate([210, 137, 0])
    cube([1, 1, 1.49]);
  translate([211, 137, 0])
    cube([1, 1, 1.49]);
  translate([212, 137, 0])
    cube([1, 1, 1.49]);
  translate([213, 137, 0])
    cube([1, 1, 1.49]);
  translate([214, 137, 0])
    cube([1, 1, 1.45]);
  translate([215, 137, 0])
    cube([1, 1, 1.45]);
  translate([216, 137, 0])
    cube([1, 1, 1.45]);
  translate([217, 137, 0])
    cube([1, 1, 1.45]);
  translate([218, 137, 0])
    cube([1, 1, 1.45]);
  translate([219, 137, 0])
    cube([1, 1, 1.45]);
  translate([220, 137, 0])
    cube([1, 1, 1.45]);
  translate([221, 137, 0])
    cube([1, 1, 1.45]);
  translate([222, 137, 0])
    cube([1, 1, 1.45]);
  translate([223, 137, 0])
    cube([1, 1, 1.45]);
  translate([224, 137, 0])
    cube([1, 1, 1.45]);
  translate([225, 137, 0])
    cube([1, 1, 1.45]);
  translate([226, 137, 0])
    cube([1, 1, 1.45]);
  translate([227, 137, 0])
    cube([1, 1, 1.45]);
  translate([228, 137, 0])
    cube([1, 1, 1.45]);
  translate([229, 137, 0])
    cube([1, 1, 1.45]);
  translate([230, 137, 0])
    cube([1, 1, 1.45]);
  translate([231, 137, 0])
    cube([1, 1, 1.45]);
  translate([232, 137, 0])
    cube([1, 1, 1.45]);
  translate([233, 137, 0])
    cube([1, 1, 1.45]);
  translate([234, 137, 0])
    cube([1, 1, 1.45]);
  translate([235, 137, 0])
    cube([1, 1, 1.45]);
  translate([236, 137, 0])
    cube([1, 1, 1.45]);
  translate([237, 137, 0])
    cube([1, 1, 1.45]);
  translate([238, 137, 0])
    cube([1, 1, 1.45]);
  translate([239, 137, 0])
    cube([1, 1, 1.45]);
  translate([240, 137, 0])
    cube([1, 1, 1.45]);
  translate([241, 137, 0])
    cube([1, 1, 1.45]);
  translate([242, 137, 0])
    cube([1, 1, 1.45]);
  translate([243, 137, 0])
    cube([1, 1, 1.45]);
  translate([244, 137, 0])
    cube([1, 1, 1.45]);
  translate([245, 137, 0])
    cube([1, 1, 1.45]);
  translate([246, 137, 0])
    cube([1, 1, 1.45]);
  translate([0, 138, 0])
    cube([1, 1, 1.65]);
  translate([1, 138, 0])
    cube([1, 1, 1.65]);
  translate([2, 138, 0])
    cube([1, 1, 1.65]);
  translate([3, 138, 0])
    cube([1, 1, 1.65]);
  translate([4, 138, 0])
    cube([1, 1, 1.61]);
  translate([5, 138, 0])
    cube([1, 1, 1.61]);
  translate([6, 138, 0])
    cube([1, 1, 1.61]);
  translate([7, 138, 0])
    cube([1, 1, 1.61]);
  translate([8, 138, 0])
    cube([1, 1, 1.61]);
  translate([9, 138, 0])
    cube([1, 1, 1.61]);
  translate([10, 138, 0])
    cube([1, 1, 1.61]);
  translate([11, 138, 0])
    cube([1, 1, 1.61]);
  translate([12, 138, 0])
    cube([1, 1, 1.65]);
  translate([13, 138, 0])
    cube([1, 1, 1.61]);
  translate([14, 138, 0])
    cube([1, 1, 1.61]);
  translate([15, 138, 0])
    cube([1, 1, 1.61]);
  translate([16, 138, 0])
    cube([1, 1, 1.61]);
  translate([17, 138, 0])
    cube([1, 1, 1.61]);
  translate([18, 138, 0])
    cube([1, 1, 1.61]);
  translate([19, 138, 0])
    cube([1, 1, 1.61]);
  translate([20, 138, 0])
    cube([1, 1, 1.61]);
  translate([21, 138, 0])
    cube([1, 1, 1.61]);
  translate([22, 138, 0])
    cube([1, 1, 1.57]);
  translate([23, 138, 0])
    cube([1, 1, 1.57]);
  translate([24, 138, 0])
    cube([1, 1, 1.57]);
  translate([25, 138, 0])
    cube([1, 1, 1.57]);
  translate([26, 138, 0])
    cube([1, 1, 1.57]);
  translate([27, 138, 0])
    cube([1, 1, 1.57]);
  translate([28, 138, 0])
    cube([1, 1, 1.57]);
  translate([29, 138, 0])
    cube([1, 1, 1.57]);
  translate([30, 138, 0])
    cube([1, 1, 1.57]);
  translate([31, 138, 0])
    cube([1, 1, 1.53]);
  translate([32, 138, 0])
    cube([1, 1, 1.57]);
  translate([33, 138, 0])
    cube([1, 1, 1.57]);
  translate([34, 138, 0])
    cube([1, 1, 1.57]);
  translate([35, 138, 0])
    cube([1, 1, 1.53]);
  translate([36, 138, 0])
    cube([1, 1, 1.49]);
  translate([37, 138, 0])
    cube([1, 1, 1.57]);
  translate([38, 138, 0])
    cube([1, 1, 1.49]);
  translate([39, 138, 0])
    cube([1, 1, 1.57]);
  translate([40, 138, 0])
    cube([1, 1, 1.53]);
  translate([41, 138, 0])
    cube([1, 1, 1.53]);
  translate([42, 138, 0])
    cube([1, 1, 1.53]);
  translate([43, 138, 0])
    cube([1, 1, 1.53]);
  translate([44, 138, 0])
    cube([1, 1, 1.53]);
  translate([45, 138, 0])
    cube([1, 1, 1.53]);
  translate([46, 138, 0])
    cube([1, 1, 1.49]);
  translate([47, 138, 0])
    cube([1, 1, 1.49]);
  translate([48, 138, 0])
    cube([1, 1, 1.49]);
  translate([49, 138, 0])
    cube([1, 1, 1.65]);
  translate([50, 138, 0])
    cube([1, 1, 7.65]);
  translate([51, 138, 0])
    cube([1, 1, 6.86]);
  translate([52, 138, 0])
    cube([1, 1, 5.29]);
  translate([53, 138, 0])
    cube([1, 1, 5.18]);
  translate([54, 138, 0])
    cube([1, 1, 3.69]);
  translate([55, 138, 0])
    cube([1, 1, 4.35]);
  translate([56, 138, 0])
    cube([1, 1, 4.63]);
  translate([57, 138, 0])
    cube([1, 1, 4.82]);
  translate([58, 138, 0])
    cube([1, 1, 5.22]);
  translate([59, 138, 0])
    cube([1, 1, 5.41]);
  translate([60, 138, 0])
    cube([1, 1, 5.69]);
  translate([61, 138, 0])
    cube([1, 1, 6.04]);
  translate([62, 138, 0])
    cube([1, 1, 5.96]);
  translate([63, 138, 0])
    cube([1, 1, 5.76]);
  translate([64, 138, 0])
    cube([1, 1, 5.49]);
  translate([65, 138, 0])
    cube([1, 1, 5.18]);
  translate([66, 138, 0])
    cube([1, 1, 5.02]);
  translate([67, 138, 0])
    cube([1, 1, 4.90]);
  translate([68, 138, 0])
    cube([1, 1, 4.94]);
  translate([69, 138, 0])
    cube([1, 1, 5.92]);
  translate([70, 138, 0])
    cube([1, 1, 5.96]);
  translate([71, 138, 0])
    cube([1, 1, 5.49]);
  translate([72, 138, 0])
    cube([1, 1, 5.10]);
  translate([73, 138, 0])
    cube([1, 1, 4.75]);
  translate([74, 138, 0])
    cube([1, 1, 4.75]);
  translate([75, 138, 0])
    cube([1, 1, 4.98]);
  translate([76, 138, 0])
    cube([1, 1, 5.18]);
  translate([77, 138, 0])
    cube([1, 1, 5.22]);
  translate([78, 138, 0])
    cube([1, 1, 5.06]);
  translate([79, 138, 0])
    cube([1, 1, 4.98]);
  translate([80, 138, 0])
    cube([1, 1, 1.76]);
  translate([81, 138, 0])
    cube([1, 1, 0.59]);
  translate([82, 138, 0])
    cube([1, 1, 0.90]);
  translate([83, 138, 0])
    cube([1, 1, 1.06]);
  translate([84, 138, 0])
    cube([1, 1, 1.33]);
  translate([85, 138, 0])
    cube([1, 1, 1.37]);
  translate([86, 138, 0])
    cube([1, 1, 1.29]);
  translate([87, 138, 0])
    cube([1, 1, 1.61]);
  translate([88, 138, 0])
    cube([1, 1, 0.75]);
  translate([89, 138, 0])
    cube([1, 1, 1.06]);
  translate([90, 138, 0])
    cube([1, 1, 1.06]);
  translate([91, 138, 0])
    cube([1, 1, 1.33]);
  translate([92, 138, 0])
    cube([1, 1, 1.10]);
  translate([93, 138, 0])
    cube([1, 1, 1.22]);
  translate([94, 138, 0])
    cube([1, 1, 1.25]);
  translate([95, 138, 0])
    cube([1, 1, 1.25]);
  translate([96, 138, 0])
    cube([1, 1, 1.18]);
  translate([97, 138, 0])
    cube([1, 1, 0.75]);
  translate([98, 138, 0])
    cube([1, 1, 0.90]);
  translate([99, 138, 0])
    cube([1, 1, 0.98]);
  translate([100, 138, 0])
    cube([1, 1, 0.86]);
  translate([101, 138, 0])
    cube([1, 1, 1.02]);
  translate([102, 138, 0])
    cube([1, 1, 1.14]);
  translate([103, 138, 0])
    cube([1, 1, 1.33]);
  translate([104, 138, 0])
    cube([1, 1, 1.29]);
  translate([105, 138, 0])
    cube([1, 1, 1.69]);
  translate([106, 138, 0])
    cube([1, 1, 1.88]);
  translate([107, 138, 0])
    cube([1, 1, 1.57]);
  translate([108, 138, 0])
    cube([1, 1, 1.57]);
  translate([109, 138, 0])
    cube([1, 1, 1.69]);
  translate([110, 138, 0])
    cube([1, 1, 1.57]);
  translate([111, 138, 0])
    cube([1, 1, 1.61]);
  translate([112, 138, 0])
    cube([1, 1, 1.65]);
  translate([113, 138, 0])
    cube([1, 1, 1.65]);
  translate([114, 138, 0])
    cube([1, 1, 1.33]);
  translate([115, 138, 0])
    cube([1, 1, 1.69]);
  translate([116, 138, 0])
    cube([1, 1, 1.57]);
  translate([117, 138, 0])
    cube([1, 1, 1.45]);
  translate([118, 138, 0])
    cube([1, 1, 1.37]);
  translate([119, 138, 0])
    cube([1, 1, 1.61]);
  translate([120, 138, 0])
    cube([1, 1, 1.88]);
  translate([121, 138, 0])
    cube([1, 1, 2.51]);
  translate([122, 138, 0])
    cube([1, 1, 2.16]);
  translate([123, 138, 0])
    cube([1, 1, 1.73]);
  translate([124, 138, 0])
    cube([1, 1, 2.08]);
  translate([125, 138, 0])
    cube([1, 1, 1.69]);
  translate([126, 138, 0])
    cube([1, 1, 1.80]);
  translate([127, 138, 0])
    cube([1, 1, 2.04]);
  translate([128, 138, 0])
    cube([1, 1, 2.59]);
  translate([129, 138, 0])
    cube([1, 1, 2.12]);
  translate([130, 138, 0])
    cube([1, 1, 1.96]);
  translate([131, 138, 0])
    cube([1, 1, 1.49]);
  translate([132, 138, 0])
    cube([1, 1, 3.18]);
  translate([133, 138, 0])
    cube([1, 1, 2.51]);
  translate([134, 138, 0])
    cube([1, 1, 3.88]);
  translate([135, 138, 0])
    cube([1, 1, 3.22]);
  translate([136, 138, 0])
    cube([1, 1, 3.06]);
  translate([137, 138, 0])
    cube([1, 1, 5.37]);
  translate([138, 138, 0])
    cube([1, 1, 5.53]);
  translate([139, 138, 0])
    cube([1, 1, 5.41]);
  translate([140, 138, 0])
    cube([1, 1, 5.57]);
  translate([141, 138, 0])
    cube([1, 1, 5.49]);
  translate([142, 138, 0])
    cube([1, 1, 5.92]);
  translate([143, 138, 0])
    cube([1, 1, 7.29]);
  translate([144, 138, 0])
    cube([1, 1, 7.25]);
  translate([145, 138, 0])
    cube([1, 1, 1.37]);
  translate([146, 138, 0])
    cube([1, 1, 1.41]);
  translate([147, 138, 0])
    cube([1, 1, 1.41]);
  translate([148, 138, 0])
    cube([1, 1, 1.41]);
  translate([149, 138, 0])
    cube([1, 1, 1.41]);
  translate([150, 138, 0])
    cube([1, 1, 1.41]);
  translate([151, 138, 0])
    cube([1, 1, 1.41]);
  translate([152, 138, 0])
    cube([1, 1, 1.41]);
  translate([153, 138, 0])
    cube([1, 1, 1.41]);
  translate([154, 138, 0])
    cube([1, 1, 1.41]);
  translate([155, 138, 0])
    cube([1, 1, 1.41]);
  translate([156, 138, 0])
    cube([1, 1, 1.41]);
  translate([157, 138, 0])
    cube([1, 1, 1.41]);
  translate([158, 138, 0])
    cube([1, 1, 1.41]);
  translate([159, 138, 0])
    cube([1, 1, 1.45]);
  translate([160, 138, 0])
    cube([1, 1, 1.45]);
  translate([161, 138, 0])
    cube([1, 1, 1.45]);
  translate([162, 138, 0])
    cube([1, 1, 1.45]);
  translate([163, 138, 0])
    cube([1, 1, 1.45]);
  translate([164, 138, 0])
    cube([1, 1, 1.45]);
  translate([165, 138, 0])
    cube([1, 1, 1.41]);
  translate([166, 138, 0])
    cube([1, 1, 1.45]);
  translate([167, 138, 0])
    cube([1, 1, 1.45]);
  translate([168, 138, 0])
    cube([1, 1, 1.45]);
  translate([169, 138, 0])
    cube([1, 1, 1.45]);
  translate([170, 138, 0])
    cube([1, 1, 1.45]);
  translate([171, 138, 0])
    cube([1, 1, 1.45]);
  translate([172, 138, 0])
    cube([1, 1, 1.45]);
  translate([173, 138, 0])
    cube([1, 1, 1.45]);
  translate([174, 138, 0])
    cube([1, 1, 1.45]);
  translate([175, 138, 0])
    cube([1, 1, 1.45]);
  translate([176, 138, 0])
    cube([1, 1, 1.45]);
  translate([177, 138, 0])
    cube([1, 1, 1.45]);
  translate([178, 138, 0])
    cube([1, 1, 1.45]);
  translate([179, 138, 0])
    cube([1, 1, 1.45]);
  translate([180, 138, 0])
    cube([1, 1, 1.45]);
  translate([181, 138, 0])
    cube([1, 1, 1.45]);
  translate([182, 138, 0])
    cube([1, 1, 1.45]);
  translate([183, 138, 0])
    cube([1, 1, 1.45]);
  translate([184, 138, 0])
    cube([1, 1, 1.49]);
  translate([185, 138, 0])
    cube([1, 1, 1.49]);
  translate([186, 138, 0])
    cube([1, 1, 1.49]);
  translate([187, 138, 0])
    cube([1, 1, 1.49]);
  translate([188, 138, 0])
    cube([1, 1, 1.45]);
  translate([189, 138, 0])
    cube([1, 1, 1.45]);
  translate([190, 138, 0])
    cube([1, 1, 1.45]);
  translate([191, 138, 0])
    cube([1, 1, 1.53]);
  translate([192, 138, 0])
    cube([1, 1, 1.49]);
  translate([193, 138, 0])
    cube([1, 1, 1.45]);
  translate([194, 138, 0])
    cube([1, 1, 1.53]);
  translate([195, 138, 0])
    cube([1, 1, 1.49]);
  translate([196, 138, 0])
    cube([1, 1, 1.49]);
  translate([197, 138, 0])
    cube([1, 1, 1.49]);
  translate([198, 138, 0])
    cube([1, 1, 1.49]);
  translate([199, 138, 0])
    cube([1, 1, 1.49]);
  translate([200, 138, 0])
    cube([1, 1, 1.49]);
  translate([201, 138, 0])
    cube([1, 1, 1.49]);
  translate([202, 138, 0])
    cube([1, 1, 1.49]);
  translate([203, 138, 0])
    cube([1, 1, 1.49]);
  translate([204, 138, 0])
    cube([1, 1, 1.49]);
  translate([205, 138, 0])
    cube([1, 1, 1.49]);
  translate([206, 138, 0])
    cube([1, 1, 1.49]);
  translate([207, 138, 0])
    cube([1, 1, 1.49]);
  translate([208, 138, 0])
    cube([1, 1, 1.49]);
  translate([209, 138, 0])
    cube([1, 1, 1.49]);
  translate([210, 138, 0])
    cube([1, 1, 1.49]);
  translate([211, 138, 0])
    cube([1, 1, 1.49]);
  translate([212, 138, 0])
    cube([1, 1, 1.49]);
  translate([213, 138, 0])
    cube([1, 1, 1.49]);
  translate([214, 138, 0])
    cube([1, 1, 1.49]);
  translate([215, 138, 0])
    cube([1, 1, 1.49]);
  translate([216, 138, 0])
    cube([1, 1, 1.49]);
  translate([217, 138, 0])
    cube([1, 1, 1.45]);
  translate([218, 138, 0])
    cube([1, 1, 1.45]);
  translate([219, 138, 0])
    cube([1, 1, 1.45]);
  translate([220, 138, 0])
    cube([1, 1, 1.49]);
  translate([221, 138, 0])
    cube([1, 1, 1.49]);
  translate([222, 138, 0])
    cube([1, 1, 1.45]);
  translate([223, 138, 0])
    cube([1, 1, 1.45]);
  translate([224, 138, 0])
    cube([1, 1, 1.45]);
  translate([225, 138, 0])
    cube([1, 1, 1.45]);
  translate([226, 138, 0])
    cube([1, 1, 1.45]);
  translate([227, 138, 0])
    cube([1, 1, 1.45]);
  translate([228, 138, 0])
    cube([1, 1, 1.45]);
  translate([229, 138, 0])
    cube([1, 1, 1.45]);
  translate([230, 138, 0])
    cube([1, 1, 1.45]);
  translate([231, 138, 0])
    cube([1, 1, 1.45]);
  translate([232, 138, 0])
    cube([1, 1, 1.49]);
  translate([233, 138, 0])
    cube([1, 1, 1.45]);
  translate([234, 138, 0])
    cube([1, 1, 1.45]);
  translate([235, 138, 0])
    cube([1, 1, 1.45]);
  translate([236, 138, 0])
    cube([1, 1, 1.45]);
  translate([237, 138, 0])
    cube([1, 1, 1.49]);
  translate([238, 138, 0])
    cube([1, 1, 1.49]);
  translate([239, 138, 0])
    cube([1, 1, 1.49]);
  translate([240, 138, 0])
    cube([1, 1, 1.45]);
  translate([241, 138, 0])
    cube([1, 1, 1.45]);
  translate([242, 138, 0])
    cube([1, 1, 1.45]);
  translate([243, 138, 0])
    cube([1, 1, 1.45]);
  translate([244, 138, 0])
    cube([1, 1, 1.45]);
  translate([245, 138, 0])
    cube([1, 1, 1.49]);
  translate([246, 138, 0])
    cube([1, 1, 1.45]);
  translate([0, 139, 0])
    cube([1, 1, 1.65]);
  translate([1, 139, 0])
    cube([1, 1, 1.65]);
  translate([2, 139, 0])
    cube([1, 1, 1.65]);
  translate([3, 139, 0])
    cube([1, 1, 1.65]);
  translate([4, 139, 0])
    cube([1, 1, 1.69]);
  translate([5, 139, 0])
    cube([1, 1, 1.69]);
  translate([6, 139, 0])
    cube([1, 1, 1.69]);
  translate([7, 139, 0])
    cube([1, 1, 1.69]);
  translate([8, 139, 0])
    cube([1, 1, 1.61]);
  translate([9, 139, 0])
    cube([1, 1, 1.61]);
  translate([10, 139, 0])
    cube([1, 1, 1.61]);
  translate([11, 139, 0])
    cube([1, 1, 1.61]);
  translate([12, 139, 0])
    cube([1, 1, 1.61]);
  translate([13, 139, 0])
    cube([1, 1, 1.69]);
  translate([14, 139, 0])
    cube([1, 1, 1.61]);
  translate([15, 139, 0])
    cube([1, 1, 1.61]);
  translate([16, 139, 0])
    cube([1, 1, 1.61]);
  translate([17, 139, 0])
    cube([1, 1, 1.61]);
  translate([18, 139, 0])
    cube([1, 1, 1.61]);
  translate([19, 139, 0])
    cube([1, 1, 1.61]);
  translate([20, 139, 0])
    cube([1, 1, 1.61]);
  translate([21, 139, 0])
    cube([1, 1, 1.61]);
  translate([22, 139, 0])
    cube([1, 1, 1.57]);
  translate([23, 139, 0])
    cube([1, 1, 1.57]);
  translate([24, 139, 0])
    cube([1, 1, 1.57]);
  translate([25, 139, 0])
    cube([1, 1, 1.57]);
  translate([26, 139, 0])
    cube([1, 1, 1.57]);
  translate([27, 139, 0])
    cube([1, 1, 1.57]);
  translate([28, 139, 0])
    cube([1, 1, 1.57]);
  translate([29, 139, 0])
    cube([1, 1, 1.57]);
  translate([30, 139, 0])
    cube([1, 1, 1.53]);
  translate([31, 139, 0])
    cube([1, 1, 1.61]);
  translate([32, 139, 0])
    cube([1, 1, 1.49]);
  translate([33, 139, 0])
    cube([1, 1, 1.57]);
  translate([34, 139, 0])
    cube([1, 1, 1.57]);
  translate([35, 139, 0])
    cube([1, 1, 1.57]);
  translate([36, 139, 0])
    cube([1, 1, 1.57]);
  translate([37, 139, 0])
    cube([1, 1, 1.53]);
  translate([38, 139, 0])
    cube([1, 1, 1.53]);
  translate([39, 139, 0])
    cube([1, 1, 1.49]);
  translate([40, 139, 0])
    cube([1, 1, 1.53]);
  translate([41, 139, 0])
    cube([1, 1, 1.53]);
  translate([42, 139, 0])
    cube([1, 1, 1.53]);
  translate([43, 139, 0])
    cube([1, 1, 1.53]);
  translate([44, 139, 0])
    cube([1, 1, 1.53]);
  translate([45, 139, 0])
    cube([1, 1, 1.53]);
  translate([46, 139, 0])
    cube([1, 1, 1.49]);
  translate([47, 139, 0])
    cube([1, 1, 1.49]);
  translate([48, 139, 0])
    cube([1, 1, 1.49]);
  translate([49, 139, 0])
    cube([1, 1, 0.94]);
  translate([50, 139, 0])
    cube([1, 1, 6.94]);
  translate([51, 139, 0])
    cube([1, 1, 7.37]);
  translate([52, 139, 0])
    cube([1, 1, 5.96]);
  translate([53, 139, 0])
    cube([1, 1, 5.65]);
  translate([54, 139, 0])
    cube([1, 1, 3.57]);
  translate([55, 139, 0])
    cube([1, 1, 4.16]);
  translate([56, 139, 0])
    cube([1, 1, 4.51]);
  translate([57, 139, 0])
    cube([1, 1, 4.75]);
  translate([58, 139, 0])
    cube([1, 1, 5.14]);
  translate([59, 139, 0])
    cube([1, 1, 5.33]);
  translate([60, 139, 0])
    cube([1, 1, 5.69]);
  translate([61, 139, 0])
    cube([1, 1, 5.80]);
  translate([62, 139, 0])
    cube([1, 1, 5.84]);
  translate([63, 139, 0])
    cube([1, 1, 5.80]);
  translate([64, 139, 0])
    cube([1, 1, 5.57]);
  translate([65, 139, 0])
    cube([1, 1, 5.33]);
  translate([66, 139, 0])
    cube([1, 1, 5.06]);
  translate([67, 139, 0])
    cube([1, 1, 4.94]);
  translate([68, 139, 0])
    cube([1, 1, 4.90]);
  translate([69, 139, 0])
    cube([1, 1, 5.57]);
  translate([70, 139, 0])
    cube([1, 1, 5.88]);
  translate([71, 139, 0])
    cube([1, 1, 5.49]);
  translate([72, 139, 0])
    cube([1, 1, 5.14]);
  translate([73, 139, 0])
    cube([1, 1, 4.78]);
  translate([74, 139, 0])
    cube([1, 1, 4.90]);
  translate([75, 139, 0])
    cube([1, 1, 5.22]);
  translate([76, 139, 0])
    cube([1, 1, 5.22]);
  translate([77, 139, 0])
    cube([1, 1, 5.10]);
  translate([78, 139, 0])
    cube([1, 1, 4.90]);
  translate([79, 139, 0])
    cube([1, 1, 4.47]);
  translate([80, 139, 0])
    cube([1, 1, 3.65]);
  translate([81, 139, 0])
    cube([1, 1, 0.98]);
  translate([82, 139, 0])
    cube([1, 1, 1.02]);
  translate([83, 139, 0])
    cube([1, 1, 1.10]);
  translate([84, 139, 0])
    cube([1, 1, 1.33]);
  translate([85, 139, 0])
    cube([1, 1, 1.14]);
  translate([86, 139, 0])
    cube([1, 1, 1.22]);
  translate([87, 139, 0])
    cube([1, 1, 1.45]);
  translate([88, 139, 0])
    cube([1, 1, 1.53]);
  translate([89, 139, 0])
    cube([1, 1, 1.29]);
  translate([90, 139, 0])
    cube([1, 1, 1.41]);
  translate([91, 139, 0])
    cube([1, 1, 1.37]);
  translate([92, 139, 0])
    cube([1, 1, 0.98]);
  translate([93, 139, 0])
    cube([1, 1, 1.33]);
  translate([94, 139, 0])
    cube([1, 1, 1.02]);
  translate([95, 139, 0])
    cube([1, 1, 1.06]);
  translate([96, 139, 0])
    cube([1, 1, 0.94]);
  translate([97, 139, 0])
    cube([1, 1, 1.41]);
  translate([98, 139, 0])
    cube([1, 1, 1.69]);
  translate([99, 139, 0])
    cube([1, 1, 1.29]);
  translate([100, 139, 0])
    cube([1, 1, 1.22]);
  translate([101, 139, 0])
    cube([1, 1, 1.02]);
  translate([102, 139, 0])
    cube([1, 1, 0.78]);
  translate([103, 139, 0])
    cube([1, 1, 0.82]);
  translate([104, 139, 0])
    cube([1, 1, 1.10]);
  translate([105, 139, 0])
    cube([1, 1, 1.14]);
  translate([106, 139, 0])
    cube([1, 1, 1.02]);
  translate([107, 139, 0])
    cube([1, 1, 1.45]);
  translate([108, 139, 0])
    cube([1, 1, 0.71]);
  translate([109, 139, 0])
    cube([1, 1, 1.29]);
  translate([110, 139, 0])
    cube([1, 1, 1.53]);
  translate([111, 139, 0])
    cube([1, 1, 1.25]);
  translate([112, 139, 0])
    cube([1, 1, 1.92]);
  translate([113, 139, 0])
    cube([1, 1, 1.33]);
  translate([114, 139, 0])
    cube([1, 1, 1.61]);
  translate([115, 139, 0])
    cube([1, 1, 1.06]);
  translate([116, 139, 0])
    cube([1, 1, 1.22]);
  translate([117, 139, 0])
    cube([1, 1, 1.33]);
  translate([118, 139, 0])
    cube([1, 1, 1.53]);
  translate([119, 139, 0])
    cube([1, 1, 1.45]);
  translate([120, 139, 0])
    cube([1, 1, 1.37]);
  translate([121, 139, 0])
    cube([1, 1, 1.65]);
  translate([122, 139, 0])
    cube([1, 1, 2.20]);
  translate([123, 139, 0])
    cube([1, 1, 2.08]);
  translate([124, 139, 0])
    cube([1, 1, 2.24]);
  translate([125, 139, 0])
    cube([1, 1, 2.35]);
  translate([126, 139, 0])
    cube([1, 1, 2.59]);
  translate([127, 139, 0])
    cube([1, 1, 2.55]);
  translate([128, 139, 0])
    cube([1, 1, 1.76]);
  translate([129, 139, 0])
    cube([1, 1, 3.18]);
  translate([130, 139, 0])
    cube([1, 1, 3.25]);
  translate([131, 139, 0])
    cube([1, 1, 2.43]);
  translate([132, 139, 0])
    cube([1, 1, 2.82]);
  translate([133, 139, 0])
    cube([1, 1, 3.53]);
  translate([134, 139, 0])
    cube([1, 1, 3.22]);
  translate([135, 139, 0])
    cube([1, 1, 3.14]);
  translate([136, 139, 0])
    cube([1, 1, 5.18]);
  translate([137, 139, 0])
    cube([1, 1, 4.00]);
  translate([138, 139, 0])
    cube([1, 1, 5.41]);
  translate([139, 139, 0])
    cube([1, 1, 5.29]);
  translate([140, 139, 0])
    cube([1, 1, 5.49]);
  translate([141, 139, 0])
    cube([1, 1, 5.65]);
  translate([142, 139, 0])
    cube([1, 1, 5.41]);
  translate([143, 139, 0])
    cube([1, 1, 6.78]);
  translate([144, 139, 0])
    cube([1, 1, 7.33]);
  translate([145, 139, 0])
    cube([1, 1, 1.29]);
  translate([146, 139, 0])
    cube([1, 1, 1.37]);
  translate([147, 139, 0])
    cube([1, 1, 1.41]);
  translate([148, 139, 0])
    cube([1, 1, 1.41]);
  translate([149, 139, 0])
    cube([1, 1, 1.41]);
  translate([150, 139, 0])
    cube([1, 1, 1.41]);
  translate([151, 139, 0])
    cube([1, 1, 1.41]);
  translate([152, 139, 0])
    cube([1, 1, 1.41]);
  translate([153, 139, 0])
    cube([1, 1, 1.41]);
  translate([154, 139, 0])
    cube([1, 1, 1.41]);
  translate([155, 139, 0])
    cube([1, 1, 1.41]);
  translate([156, 139, 0])
    cube([1, 1, 1.41]);
  translate([157, 139, 0])
    cube([1, 1, 1.41]);
  translate([158, 139, 0])
    cube([1, 1, 1.41]);
  translate([159, 139, 0])
    cube([1, 1, 1.45]);
  translate([160, 139, 0])
    cube([1, 1, 1.45]);
  translate([161, 139, 0])
    cube([1, 1, 1.45]);
  translate([162, 139, 0])
    cube([1, 1, 1.45]);
  translate([163, 139, 0])
    cube([1, 1, 1.45]);
  translate([164, 139, 0])
    cube([1, 1, 1.41]);
  translate([165, 139, 0])
    cube([1, 1, 1.49]);
  translate([166, 139, 0])
    cube([1, 1, 1.45]);
  translate([167, 139, 0])
    cube([1, 1, 1.45]);
  translate([168, 139, 0])
    cube([1, 1, 1.45]);
  translate([169, 139, 0])
    cube([1, 1, 1.45]);
  translate([170, 139, 0])
    cube([1, 1, 1.45]);
  translate([171, 139, 0])
    cube([1, 1, 1.45]);
  translate([172, 139, 0])
    cube([1, 1, 1.45]);
  translate([173, 139, 0])
    cube([1, 1, 1.45]);
  translate([174, 139, 0])
    cube([1, 1, 1.45]);
  translate([175, 139, 0])
    cube([1, 1, 1.45]);
  translate([176, 139, 0])
    cube([1, 1, 1.45]);
  translate([177, 139, 0])
    cube([1, 1, 1.49]);
  translate([178, 139, 0])
    cube([1, 1, 1.49]);
  translate([179, 139, 0])
    cube([1, 1, 1.49]);
  translate([180, 139, 0])
    cube([1, 1, 1.45]);
  translate([181, 139, 0])
    cube([1, 1, 1.45]);
  translate([182, 139, 0])
    cube([1, 1, 1.45]);
  translate([183, 139, 0])
    cube([1, 1, 1.45]);
  translate([184, 139, 0])
    cube([1, 1, 1.49]);
  translate([185, 139, 0])
    cube([1, 1, 1.49]);
  translate([186, 139, 0])
    cube([1, 1, 1.49]);
  translate([187, 139, 0])
    cube([1, 1, 1.49]);
  translate([188, 139, 0])
    cube([1, 1, 1.49]);
  translate([189, 139, 0])
    cube([1, 1, 1.49]);
  translate([190, 139, 0])
    cube([1, 1, 1.49]);
  translate([191, 139, 0])
    cube([1, 1, 1.45]);
  translate([192, 139, 0])
    cube([1, 1, 1.41]);
  translate([193, 139, 0])
    cube([1, 1, 1.45]);
  translate([194, 139, 0])
    cube([1, 1, 1.53]);
  translate([195, 139, 0])
    cube([1, 1, 1.49]);
  translate([196, 139, 0])
    cube([1, 1, 1.49]);
  translate([197, 139, 0])
    cube([1, 1, 1.49]);
  translate([198, 139, 0])
    cube([1, 1, 1.49]);
  translate([199, 139, 0])
    cube([1, 1, 1.49]);
  translate([200, 139, 0])
    cube([1, 1, 1.49]);
  translate([201, 139, 0])
    cube([1, 1, 1.49]);
  translate([202, 139, 0])
    cube([1, 1, 1.49]);
  translate([203, 139, 0])
    cube([1, 1, 1.49]);
  translate([204, 139, 0])
    cube([1, 1, 1.49]);
  translate([205, 139, 0])
    cube([1, 1, 1.49]);
  translate([206, 139, 0])
    cube([1, 1, 1.49]);
  translate([207, 139, 0])
    cube([1, 1, 1.49]);
  translate([208, 139, 0])
    cube([1, 1, 1.49]);
  translate([209, 139, 0])
    cube([1, 1, 1.49]);
  translate([210, 139, 0])
    cube([1, 1, 1.49]);
  translate([211, 139, 0])
    cube([1, 1, 1.49]);
  translate([212, 139, 0])
    cube([1, 1, 1.49]);
  translate([213, 139, 0])
    cube([1, 1, 1.49]);
  translate([214, 139, 0])
    cube([1, 1, 1.49]);
  translate([215, 139, 0])
    cube([1, 1, 1.49]);
  translate([216, 139, 0])
    cube([1, 1, 1.49]);
  translate([217, 139, 0])
    cube([1, 1, 1.45]);
  translate([218, 139, 0])
    cube([1, 1, 1.45]);
  translate([219, 139, 0])
    cube([1, 1, 1.45]);
  translate([220, 139, 0])
    cube([1, 1, 1.41]);
  translate([221, 139, 0])
    cube([1, 1, 1.41]);
  translate([222, 139, 0])
    cube([1, 1, 1.45]);
  translate([223, 139, 0])
    cube([1, 1, 1.45]);
  translate([224, 139, 0])
    cube([1, 1, 1.49]);
  translate([225, 139, 0])
    cube([1, 1, 1.45]);
  translate([226, 139, 0])
    cube([1, 1, 1.45]);
  translate([227, 139, 0])
    cube([1, 1, 1.45]);
  translate([228, 139, 0])
    cube([1, 1, 1.49]);
  translate([229, 139, 0])
    cube([1, 1, 1.49]);
  translate([230, 139, 0])
    cube([1, 1, 1.49]);
  translate([231, 139, 0])
    cube([1, 1, 1.49]);
  translate([232, 139, 0])
    cube([1, 1, 1.49]);
  translate([233, 139, 0])
    cube([1, 1, 1.45]);
  translate([234, 139, 0])
    cube([1, 1, 1.45]);
  translate([235, 139, 0])
    cube([1, 1, 1.45]);
  translate([236, 139, 0])
    cube([1, 1, 1.45]);
  translate([237, 139, 0])
    cube([1, 1, 1.49]);
  translate([238, 139, 0])
    cube([1, 1, 1.41]);
  translate([239, 139, 0])
    cube([1, 1, 1.41]);
  translate([240, 139, 0])
    cube([1, 1, 1.49]);
  translate([241, 139, 0])
    cube([1, 1, 1.45]);
  translate([242, 139, 0])
    cube([1, 1, 1.45]);
  translate([243, 139, 0])
    cube([1, 1, 1.49]);
  translate([244, 139, 0])
    cube([1, 1, 1.45]);
  translate([245, 139, 0])
    cube([1, 1, 1.49]);
  translate([246, 139, 0])
    cube([1, 1, 1.45]);
  translate([0, 140, 0])
    cube([1, 1, 1.69]);
  translate([1, 140, 0])
    cube([1, 1, 1.65]);
  translate([2, 140, 0])
    cube([1, 1, 1.65]);
  translate([3, 140, 0])
    cube([1, 1, 1.65]);
  translate([4, 140, 0])
    cube([1, 1, 1.65]);
  translate([5, 140, 0])
    cube([1, 1, 1.65]);
  translate([6, 140, 0])
    cube([1, 1, 1.65]);
  translate([7, 140, 0])
    cube([1, 1, 1.65]);
  translate([8, 140, 0])
    cube([1, 1, 1.65]);
  translate([9, 140, 0])
    cube([1, 1, 1.65]);
  translate([10, 140, 0])
    cube([1, 1, 1.65]);
  translate([11, 140, 0])
    cube([1, 1, 1.65]);
  translate([12, 140, 0])
    cube([1, 1, 1.69]);
  translate([13, 140, 0])
    cube([1, 1, 1.69]);
  translate([14, 140, 0])
    cube([1, 1, 1.65]);
  translate([15, 140, 0])
    cube([1, 1, 1.65]);
  translate([16, 140, 0])
    cube([1, 1, 1.61]);
  translate([17, 140, 0])
    cube([1, 1, 1.61]);
  translate([18, 140, 0])
    cube([1, 1, 1.65]);
  translate([19, 140, 0])
    cube([1, 1, 1.65]);
  translate([20, 140, 0])
    cube([1, 1, 1.53]);
  translate([21, 140, 0])
    cube([1, 1, 1.57]);
  translate([22, 140, 0])
    cube([1, 1, 1.61]);
  translate([23, 140, 0])
    cube([1, 1, 1.61]);
  translate([24, 140, 0])
    cube([1, 1, 1.61]);
  translate([25, 140, 0])
    cube([1, 1, 1.57]);
  translate([26, 140, 0])
    cube([1, 1, 1.57]);
  translate([27, 140, 0])
    cube([1, 1, 1.57]);
  translate([28, 140, 0])
    cube([1, 1, 1.57]);
  translate([29, 140, 0])
    cube([1, 1, 1.57]);
  translate([30, 140, 0])
    cube([1, 1, 1.57]);
  translate([31, 140, 0])
    cube([1, 1, 1.57]);
  translate([32, 140, 0])
    cube([1, 1, 1.57]);
  translate([33, 140, 0])
    cube([1, 1, 1.57]);
  translate([34, 140, 0])
    cube([1, 1, 1.57]);
  translate([35, 140, 0])
    cube([1, 1, 1.57]);
  translate([36, 140, 0])
    cube([1, 1, 1.57]);
  translate([37, 140, 0])
    cube([1, 1, 1.57]);
  translate([38, 140, 0])
    cube([1, 1, 1.57]);
  translate([39, 140, 0])
    cube([1, 1, 1.57]);
  translate([40, 140, 0])
    cube([1, 1, 1.57]);
  translate([41, 140, 0])
    cube([1, 1, 1.57]);
  translate([42, 140, 0])
    cube([1, 1, 1.53]);
  translate([43, 140, 0])
    cube([1, 1, 1.57]);
  translate([44, 140, 0])
    cube([1, 1, 1.53]);
  translate([45, 140, 0])
    cube([1, 1, 1.57]);
  translate([46, 140, 0])
    cube([1, 1, 1.53]);
  translate([47, 140, 0])
    cube([1, 1, 1.53]);
  translate([48, 140, 0])
    cube([1, 1, 1.53]);
  translate([49, 140, 0])
    cube([1, 1, 1.37]);
  translate([50, 140, 0])
    cube([1, 1, 1.84]);
  translate([51, 140, 0])
    cube([1, 1, 7.69]);
  translate([52, 140, 0])
    cube([1, 1, 6.31]);
  translate([53, 140, 0])
    cube([1, 1, 5.92]);
  translate([54, 140, 0])
    cube([1, 1, 3.37]);
  translate([55, 140, 0])
    cube([1, 1, 3.92]);
  translate([56, 140, 0])
    cube([1, 1, 4.39]);
  translate([57, 140, 0])
    cube([1, 1, 4.63]);
  translate([58, 140, 0])
    cube([1, 1, 5.02]);
  translate([59, 140, 0])
    cube([1, 1, 5.18]);
  translate([60, 140, 0])
    cube([1, 1, 5.57]);
  translate([61, 140, 0])
    cube([1, 1, 5.76]);
  translate([62, 140, 0])
    cube([1, 1, 5.84]);
  translate([63, 140, 0])
    cube([1, 1, 5.76]);
  translate([64, 140, 0])
    cube([1, 1, 5.65]);
  translate([65, 140, 0])
    cube([1, 1, 5.41]);
  translate([66, 140, 0])
    cube([1, 1, 5.18]);
  translate([67, 140, 0])
    cube([1, 1, 4.98]);
  translate([68, 140, 0])
    cube([1, 1, 4.90]);
  translate([69, 140, 0])
    cube([1, 1, 4.82]);
  translate([70, 140, 0])
    cube([1, 1, 6.04]);
  translate([71, 140, 0])
    cube([1, 1, 5.69]);
  translate([72, 140, 0])
    cube([1, 1, 5.22]);
  translate([73, 140, 0])
    cube([1, 1, 4.86]);
  translate([74, 140, 0])
    cube([1, 1, 5.06]);
  translate([75, 140, 0])
    cube([1, 1, 5.33]);
  translate([76, 140, 0])
    cube([1, 1, 5.25]);
  translate([77, 140, 0])
    cube([1, 1, 5.02]);
  translate([78, 140, 0])
    cube([1, 1, 4.63]);
  translate([79, 140, 0])
    cube([1, 1, 4.27]);
  translate([80, 140, 0])
    cube([1, 1, 2.86]);
  translate([81, 140, 0])
    cube([1, 1, 1.06]);
  translate([82, 140, 0])
    cube([1, 1, 1.25]);
  translate([83, 140, 0])
    cube([1, 1, 0.90]);
  translate([84, 140, 0])
    cube([1, 1, 1.22]);
  translate([85, 140, 0])
    cube([1, 1, 1.25]);
  translate([86, 140, 0])
    cube([1, 1, 1.22]);
  translate([87, 140, 0])
    cube([1, 1, 1.29]);
  translate([88, 140, 0])
    cube([1, 1, 1.14]);
  translate([89, 140, 0])
    cube([1, 1, 0.90]);
  translate([90, 140, 0])
    cube([1, 1, 0.55]);
  translate([91, 140, 0])
    cube([1, 1, 0.90]);
  translate([92, 140, 0])
    cube([1, 1, 1.02]);
  translate([93, 140, 0])
    cube([1, 1, 1.84]);
  translate([94, 140, 0])
    cube([1, 1, 1.29]);
  translate([95, 140, 0])
    cube([1, 1, 1.18]);
  translate([96, 140, 0])
    cube([1, 1, 1.22]);
  translate([97, 140, 0])
    cube([1, 1, 1.10]);
  translate([98, 140, 0])
    cube([1, 1, 1.10]);
  translate([99, 140, 0])
    cube([1, 1, 1.02]);
  translate([100, 140, 0])
    cube([1, 1, 0.94]);
  translate([101, 140, 0])
    cube([1, 1, 1.18]);
  translate([102, 140, 0])
    cube([1, 1, 1.25]);
  translate([103, 140, 0])
    cube([1, 1, 1.45]);
  translate([104, 140, 0])
    cube([1, 1, 1.33]);
  translate([105, 140, 0])
    cube([1, 1, 1.49]);
  translate([106, 140, 0])
    cube([1, 1, 1.41]);
  translate([107, 140, 0])
    cube([1, 1, 1.29]);
  translate([108, 140, 0])
    cube([1, 1, 1.29]);
  translate([109, 140, 0])
    cube([1, 1, 1.25]);
  translate([110, 140, 0])
    cube([1, 1, 1.29]);
  translate([111, 140, 0])
    cube([1, 1, 1.33]);
  translate([112, 140, 0])
    cube([1, 1, 1.10]);
  translate([113, 140, 0])
    cube([1, 1, 1.57]);
  translate([114, 140, 0])
    cube([1, 1, 1.41]);
  translate([115, 140, 0])
    cube([1, 1, 1.57]);
  translate([116, 140, 0])
    cube([1, 1, 0.82]);
  translate([117, 140, 0])
    cube([1, 1, 1.53]);
  translate([118, 140, 0])
    cube([1, 1, 1.29]);
  translate([119, 140, 0])
    cube([1, 1, 1.33]);
  translate([120, 140, 0])
    cube([1, 1, 1.73]);
  translate([121, 140, 0])
    cube([1, 1, 1.69]);
  translate([122, 140, 0])
    cube([1, 1, 1.88]);
  translate([123, 140, 0])
    cube([1, 1, 1.96]);
  translate([124, 140, 0])
    cube([1, 1, 2.71]);
  translate([125, 140, 0])
    cube([1, 1, 3.10]);
  translate([126, 140, 0])
    cube([1, 1, 2.00]);
  translate([127, 140, 0])
    cube([1, 1, 4.08]);
  translate([128, 140, 0])
    cube([1, 1, 2.59]);
  translate([129, 140, 0])
    cube([1, 1, 2.67]);
  translate([130, 140, 0])
    cube([1, 1, 2.59]);
  translate([131, 140, 0])
    cube([1, 1, 2.55]);
  translate([132, 140, 0])
    cube([1, 1, 3.41]);
  translate([133, 140, 0])
    cube([1, 1, 3.65]);
  translate([134, 140, 0])
    cube([1, 1, 3.25]);
  translate([135, 140, 0])
    cube([1, 1, 4.71]);
  translate([136, 140, 0])
    cube([1, 1, 4.35]);
  translate([137, 140, 0])
    cube([1, 1, 4.63]);
  translate([138, 140, 0])
    cube([1, 1, 6.67]);
  translate([139, 140, 0])
    cube([1, 1, 5.29]);
  translate([140, 140, 0])
    cube([1, 1, 5.49]);
  translate([141, 140, 0])
    cube([1, 1, 5.45]);
  translate([142, 140, 0])
    cube([1, 1, 5.29]);
  translate([143, 140, 0])
    cube([1, 1, 6.04]);
  translate([144, 140, 0])
    cube([1, 1, 7.73]);
  translate([145, 140, 0])
    cube([1, 1, 1.88]);
  translate([146, 140, 0])
    cube([1, 1, 1.14]);
  translate([147, 140, 0])
    cube([1, 1, 1.45]);
  translate([148, 140, 0])
    cube([1, 1, 1.45]);
  translate([149, 140, 0])
    cube([1, 1, 1.45]);
  translate([150, 140, 0])
    cube([1, 1, 1.45]);
  translate([151, 140, 0])
    cube([1, 1, 1.45]);
  translate([152, 140, 0])
    cube([1, 1, 1.41]);
  translate([153, 140, 0])
    cube([1, 1, 1.45]);
  translate([154, 140, 0])
    cube([1, 1, 1.45]);
  translate([155, 140, 0])
    cube([1, 1, 1.41]);
  translate([156, 140, 0])
    cube([1, 1, 1.41]);
  translate([157, 140, 0])
    cube([1, 1, 1.45]);
  translate([158, 140, 0])
    cube([1, 1, 1.45]);
  translate([159, 140, 0])
    cube([1, 1, 1.45]);
  translate([160, 140, 0])
    cube([1, 1, 1.45]);
  translate([161, 140, 0])
    cube([1, 1, 1.45]);
  translate([162, 140, 0])
    cube([1, 1, 1.45]);
  translate([163, 140, 0])
    cube([1, 1, 1.45]);
  translate([164, 140, 0])
    cube([1, 1, 1.45]);
  translate([165, 140, 0])
    cube([1, 1, 1.45]);
  translate([166, 140, 0])
    cube([1, 1, 1.45]);
  translate([167, 140, 0])
    cube([1, 1, 1.45]);
  translate([168, 140, 0])
    cube([1, 1, 1.45]);
  translate([169, 140, 0])
    cube([1, 1, 1.45]);
  translate([170, 140, 0])
    cube([1, 1, 1.45]);
  translate([171, 140, 0])
    cube([1, 1, 1.45]);
  translate([172, 140, 0])
    cube([1, 1, 1.45]);
  translate([173, 140, 0])
    cube([1, 1, 1.45]);
  translate([174, 140, 0])
    cube([1, 1, 1.45]);
  translate([175, 140, 0])
    cube([1, 1, 1.45]);
  translate([176, 140, 0])
    cube([1, 1, 1.49]);
  translate([177, 140, 0])
    cube([1, 1, 1.49]);
  translate([178, 140, 0])
    cube([1, 1, 1.49]);
  translate([179, 140, 0])
    cube([1, 1, 1.49]);
  translate([180, 140, 0])
    cube([1, 1, 1.49]);
  translate([181, 140, 0])
    cube([1, 1, 1.53]);
  translate([182, 140, 0])
    cube([1, 1, 1.45]);
  translate([183, 140, 0])
    cube([1, 1, 1.53]);
  translate([184, 140, 0])
    cube([1, 1, 1.49]);
  translate([185, 140, 0])
    cube([1, 1, 1.49]);
  translate([186, 140, 0])
    cube([1, 1, 1.49]);
  translate([187, 140, 0])
    cube([1, 1, 1.53]);
  translate([188, 140, 0])
    cube([1, 1, 1.53]);
  translate([189, 140, 0])
    cube([1, 1, 1.53]);
  translate([190, 140, 0])
    cube([1, 1, 1.53]);
  translate([191, 140, 0])
    cube([1, 1, 1.53]);
  translate([192, 140, 0])
    cube([1, 1, 1.53]);
  translate([193, 140, 0])
    cube([1, 1, 1.53]);
  translate([194, 140, 0])
    cube([1, 1, 1.53]);
  translate([195, 140, 0])
    cube([1, 1, 1.49]);
  translate([196, 140, 0])
    cube([1, 1, 1.53]);
  translate([197, 140, 0])
    cube([1, 1, 1.53]);
  translate([198, 140, 0])
    cube([1, 1, 1.53]);
  translate([199, 140, 0])
    cube([1, 1, 1.53]);
  translate([200, 140, 0])
    cube([1, 1, 1.53]);
  translate([201, 140, 0])
    cube([1, 1, 1.49]);
  translate([202, 140, 0])
    cube([1, 1, 1.49]);
  translate([203, 140, 0])
    cube([1, 1, 1.53]);
  translate([204, 140, 0])
    cube([1, 1, 1.49]);
  translate([205, 140, 0])
    cube([1, 1, 1.53]);
  translate([206, 140, 0])
    cube([1, 1, 1.53]);
  translate([207, 140, 0])
    cube([1, 1, 1.53]);
  translate([208, 140, 0])
    cube([1, 1, 1.53]);
  translate([209, 140, 0])
    cube([1, 1, 1.53]);
  translate([210, 140, 0])
    cube([1, 1, 1.53]);
  translate([211, 140, 0])
    cube([1, 1, 1.53]);
  translate([212, 140, 0])
    cube([1, 1, 1.49]);
  translate([213, 140, 0])
    cube([1, 1, 1.49]);
  translate([214, 140, 0])
    cube([1, 1, 1.49]);
  translate([215, 140, 0])
    cube([1, 1, 1.49]);
  translate([216, 140, 0])
    cube([1, 1, 1.57]);
  translate([217, 140, 0])
    cube([1, 1, 1.49]);
  translate([218, 140, 0])
    cube([1, 1, 1.49]);
  translate([219, 140, 0])
    cube([1, 1, 1.53]);
  translate([220, 140, 0])
    cube([1, 1, 1.53]);
  translate([221, 140, 0])
    cube([1, 1, 1.53]);
  translate([222, 140, 0])
    cube([1, 1, 1.49]);
  translate([223, 140, 0])
    cube([1, 1, 1.49]);
  translate([224, 140, 0])
    cube([1, 1, 1.49]);
  translate([225, 140, 0])
    cube([1, 1, 1.49]);
  translate([226, 140, 0])
    cube([1, 1, 1.49]);
  translate([227, 140, 0])
    cube([1, 1, 1.53]);
  translate([228, 140, 0])
    cube([1, 1, 1.53]);
  translate([229, 140, 0])
    cube([1, 1, 1.53]);
  translate([230, 140, 0])
    cube([1, 1, 1.53]);
  translate([231, 140, 0])
    cube([1, 1, 1.53]);
  translate([232, 140, 0])
    cube([1, 1, 1.53]);
  translate([233, 140, 0])
    cube([1, 1, 1.45]);
  translate([234, 140, 0])
    cube([1, 1, 1.49]);
  translate([235, 140, 0])
    cube([1, 1, 1.49]);
  translate([236, 140, 0])
    cube([1, 1, 1.49]);
  translate([237, 140, 0])
    cube([1, 1, 1.49]);
  translate([238, 140, 0])
    cube([1, 1, 1.49]);
  translate([239, 140, 0])
    cube([1, 1, 1.49]);
  translate([240, 140, 0])
    cube([1, 1, 1.49]);
  translate([241, 140, 0])
    cube([1, 1, 1.49]);
  translate([242, 140, 0])
    cube([1, 1, 1.49]);
  translate([243, 140, 0])
    cube([1, 1, 1.49]);
  translate([244, 140, 0])
    cube([1, 1, 1.49]);
  translate([245, 140, 0])
    cube([1, 1, 1.49]);
  translate([246, 140, 0])
    cube([1, 1, 1.49]);
  translate([0, 141, 0])
    cube([1, 1, 1.69]);
  translate([1, 141, 0])
    cube([1, 1, 1.69]);
  translate([2, 141, 0])
    cube([1, 1, 1.69]);
  translate([3, 141, 0])
    cube([1, 1, 1.65]);
  translate([4, 141, 0])
    cube([1, 1, 1.69]);
  translate([5, 141, 0])
    cube([1, 1, 1.69]);
  translate([6, 141, 0])
    cube([1, 1, 1.69]);
  translate([7, 141, 0])
    cube([1, 1, 1.69]);
  translate([8, 141, 0])
    cube([1, 1, 1.69]);
  translate([9, 141, 0])
    cube([1, 1, 1.69]);
  translate([10, 141, 0])
    cube([1, 1, 1.69]);
  translate([11, 141, 0])
    cube([1, 1, 1.69]);
  translate([12, 141, 0])
    cube([1, 1, 1.69]);
  translate([13, 141, 0])
    cube([1, 1, 1.69]);
  translate([14, 141, 0])
    cube([1, 1, 1.69]);
  translate([15, 141, 0])
    cube([1, 1, 1.69]);
  translate([16, 141, 0])
    cube([1, 1, 1.69]);
  translate([17, 141, 0])
    cube([1, 1, 1.61]);
  translate([18, 141, 0])
    cube([1, 1, 1.61]);
  translate([19, 141, 0])
    cube([1, 1, 1.65]);
  translate([20, 141, 0])
    cube([1, 1, 1.65]);
  translate([21, 141, 0])
    cube([1, 1, 1.65]);
  translate([22, 141, 0])
    cube([1, 1, 1.61]);
  translate([23, 141, 0])
    cube([1, 1, 1.61]);
  translate([24, 141, 0])
    cube([1, 1, 1.61]);
  translate([25, 141, 0])
    cube([1, 1, 1.61]);
  translate([26, 141, 0])
    cube([1, 1, 1.61]);
  translate([27, 141, 0])
    cube([1, 1, 1.57]);
  translate([28, 141, 0])
    cube([1, 1, 1.61]);
  translate([29, 141, 0])
    cube([1, 1, 1.61]);
  translate([30, 141, 0])
    cube([1, 1, 1.61]);
  translate([31, 141, 0])
    cube([1, 1, 1.61]);
  translate([32, 141, 0])
    cube([1, 1, 1.61]);
  translate([33, 141, 0])
    cube([1, 1, 1.57]);
  translate([34, 141, 0])
    cube([1, 1, 1.65]);
  translate([35, 141, 0])
    cube([1, 1, 1.57]);
  translate([36, 141, 0])
    cube([1, 1, 1.57]);
  translate([37, 141, 0])
    cube([1, 1, 1.57]);
  translate([38, 141, 0])
    cube([1, 1, 1.57]);
  translate([39, 141, 0])
    cube([1, 1, 1.57]);
  translate([40, 141, 0])
    cube([1, 1, 1.57]);
  translate([41, 141, 0])
    cube([1, 1, 1.57]);
  translate([42, 141, 0])
    cube([1, 1, 1.57]);
  translate([43, 141, 0])
    cube([1, 1, 1.57]);
  translate([44, 141, 0])
    cube([1, 1, 1.57]);
  translate([45, 141, 0])
    cube([1, 1, 1.57]);
  translate([46, 141, 0])
    cube([1, 1, 1.57]);
  translate([47, 141, 0])
    cube([1, 1, 1.57]);
  translate([48, 141, 0])
    cube([1, 1, 1.57]);
  translate([49, 141, 0])
    cube([1, 1, 1.41]);
  translate([50, 141, 0])
    cube([1, 1, 1.25]);
  translate([51, 141, 0])
    cube([1, 1, 7.69]);
  translate([52, 141, 0])
    cube([1, 1, 6.71]);
  translate([53, 141, 0])
    cube([1, 1, 6.08]);
  translate([54, 141, 0])
    cube([1, 1, 4.04]);
  translate([55, 141, 0])
    cube([1, 1, 3.69]);
  translate([56, 141, 0])
    cube([1, 1, 4.27]);
  translate([57, 141, 0])
    cube([1, 1, 4.55]);
  translate([58, 141, 0])
    cube([1, 1, 4.94]);
  translate([59, 141, 0])
    cube([1, 1, 5.18]);
  translate([60, 141, 0])
    cube([1, 1, 5.45]);
  translate([61, 141, 0])
    cube([1, 1, 5.65]);
  translate([62, 141, 0])
    cube([1, 1, 5.76]);
  translate([63, 141, 0])
    cube([1, 1, 5.80]);
  translate([64, 141, 0])
    cube([1, 1, 5.69]);
  translate([65, 141, 0])
    cube([1, 1, 5.49]);
  translate([66, 141, 0])
    cube([1, 1, 5.29]);
  translate([67, 141, 0])
    cube([1, 1, 5.06]);
  translate([68, 141, 0])
    cube([1, 1, 4.94]);
  translate([69, 141, 0])
    cube([1, 1, 4.98]);
  translate([70, 141, 0])
    cube([1, 1, 5.57]);
  translate([71, 141, 0])
    cube([1, 1, 5.53]);
  translate([72, 141, 0])
    cube([1, 1, 5.18]);
  translate([73, 141, 0])
    cube([1, 1, 5.14]);
  translate([74, 141, 0])
    cube([1, 1, 5.37]);
  translate([75, 141, 0])
    cube([1, 1, 5.41]);
  translate([76, 141, 0])
    cube([1, 1, 5.33]);
  translate([77, 141, 0])
    cube([1, 1, 5.10]);
  translate([78, 141, 0])
    cube([1, 1, 4.67]);
  translate([79, 141, 0])
    cube([1, 1, 4.31]);
  translate([80, 141, 0])
    cube([1, 1, 2.47]);
  translate([81, 141, 0])
    cube([1, 1, 1.06]);
  translate([82, 141, 0])
    cube([1, 1, 1.06]);
  translate([83, 141, 0])
    cube([1, 1, 1.10]);
  translate([84, 141, 0])
    cube([1, 1, 0.98]);
  translate([85, 141, 0])
    cube([1, 1, 1.25]);
  translate([86, 141, 0])
    cube([1, 1, 1.45]);
  translate([87, 141, 0])
    cube([1, 1, 1.49]);
  translate([88, 141, 0])
    cube([1, 1, 1.18]);
  translate([89, 141, 0])
    cube([1, 1, 1.37]);
  translate([90, 141, 0])
    cube([1, 1, 1.33]);
  translate([91, 141, 0])
    cube([1, 1, 1.14]);
  translate([92, 141, 0])
    cube([1, 1, 1.02]);
  translate([93, 141, 0])
    cube([1, 1, 1.06]);
  translate([94, 141, 0])
    cube([1, 1, 1.22]);
  translate([95, 141, 0])
    cube([1, 1, 1.10]);
  translate([96, 141, 0])
    cube([1, 1, 1.10]);
  translate([97, 141, 0])
    cube([1, 1, 0.82]);
  translate([98, 141, 0])
    cube([1, 1, 0.94]);
  translate([99, 141, 0])
    cube([1, 1, 0.98]);
  translate([100, 141, 0])
    cube([1, 1, 0.82]);
  translate([101, 141, 0])
    cube([1, 1, 0.90]);
  translate([102, 141, 0])
    cube([1, 1, 0.78]);
  translate([103, 141, 0])
    cube([1, 1, 0.94]);
  translate([104, 141, 0])
    cube([1, 1, 0.86]);
  translate([105, 141, 0])
    cube([1, 1, 0.82]);
  translate([106, 141, 0])
    cube([1, 1, 1.10]);
  translate([107, 141, 0])
    cube([1, 1, 1.22]);
  translate([108, 141, 0])
    cube([1, 1, 1.49]);
  translate([109, 141, 0])
    cube([1, 1, 1.37]);
  translate([110, 141, 0])
    cube([1, 1, 1.25]);
  translate([111, 141, 0])
    cube([1, 1, 1.25]);
  translate([112, 141, 0])
    cube([1, 1, 1.37]);
  translate([113, 141, 0])
    cube([1, 1, 0.90]);
  translate([114, 141, 0])
    cube([1, 1, 1.33]);
  translate([115, 141, 0])
    cube([1, 1, 1.45]);
  translate([116, 141, 0])
    cube([1, 1, 1.14]);
  translate([117, 141, 0])
    cube([1, 1, 1.18]);
  translate([118, 141, 0])
    cube([1, 1, 1.33]);
  translate([119, 141, 0])
    cube([1, 1, 1.69]);
  translate([120, 141, 0])
    cube([1, 1, 1.69]);
  translate([121, 141, 0])
    cube([1, 1, 1.88]);
  translate([122, 141, 0])
    cube([1, 1, 2.47]);
  translate([123, 141, 0])
    cube([1, 1, 2.63]);
  translate([124, 141, 0])
    cube([1, 1, 3.22]);
  translate([125, 141, 0])
    cube([1, 1, 2.98]);
  translate([126, 141, 0])
    cube([1, 1, 2.90]);
  translate([127, 141, 0])
    cube([1, 1, 3.18]);
  translate([128, 141, 0])
    cube([1, 1, 2.67]);
  translate([129, 141, 0])
    cube([1, 1, 3.61]);
  translate([130, 141, 0])
    cube([1, 1, 2.98]);
  translate([131, 141, 0])
    cube([1, 1, 3.14]);
  translate([132, 141, 0])
    cube([1, 1, 3.92]);
  translate([133, 141, 0])
    cube([1, 1, 3.18]);
  translate([134, 141, 0])
    cube([1, 1, 6.16]);
  translate([135, 141, 0])
    cube([1, 1, 7.57]);
  translate([136, 141, 0])
    cube([1, 1, 7.76]);
  translate([137, 141, 0])
    cube([1, 1, 7.73]);
  translate([138, 141, 0])
    cube([1, 1, 7.41]);
  translate([139, 141, 0])
    cube([1, 1, 5.29]);
  translate([140, 141, 0])
    cube([1, 1, 5.29]);
  translate([141, 141, 0])
    cube([1, 1, 5.25]);
  translate([142, 141, 0])
    cube([1, 1, 5.18]);
  translate([143, 141, 0])
    cube([1, 1, 5.65]);
  translate([144, 141, 0])
    cube([1, 1, 7.33]);
  translate([145, 141, 0])
    cube([1, 1, 7.25]);
  translate([146, 141, 0])
    cube([1, 1, 1.45]);
  translate([147, 141, 0])
    cube([1, 1, 1.45]);
  translate([148, 141, 0])
    cube([1, 1, 1.45]);
  translate([149, 141, 0])
    cube([1, 1, 1.41]);
  translate([150, 141, 0])
    cube([1, 1, 1.45]);
  translate([151, 141, 0])
    cube([1, 1, 1.45]);
  translate([152, 141, 0])
    cube([1, 1, 1.45]);
  translate([153, 141, 0])
    cube([1, 1, 1.45]);
  translate([154, 141, 0])
    cube([1, 1, 1.45]);
  translate([155, 141, 0])
    cube([1, 1, 1.45]);
  translate([156, 141, 0])
    cube([1, 1, 1.41]);
  translate([157, 141, 0])
    cube([1, 1, 1.45]);
  translate([158, 141, 0])
    cube([1, 1, 1.45]);
  translate([159, 141, 0])
    cube([1, 1, 1.45]);
  translate([160, 141, 0])
    cube([1, 1, 1.45]);
  translate([161, 141, 0])
    cube([1, 1, 1.45]);
  translate([162, 141, 0])
    cube([1, 1, 1.45]);
  translate([163, 141, 0])
    cube([1, 1, 1.45]);
  translate([164, 141, 0])
    cube([1, 1, 1.41]);
  translate([165, 141, 0])
    cube([1, 1, 1.49]);
  translate([166, 141, 0])
    cube([1, 1, 1.49]);
  translate([167, 141, 0])
    cube([1, 1, 1.49]);
  translate([168, 141, 0])
    cube([1, 1, 1.49]);
  translate([169, 141, 0])
    cube([1, 1, 1.49]);
  translate([170, 141, 0])
    cube([1, 1, 1.49]);
  translate([171, 141, 0])
    cube([1, 1, 1.49]);
  translate([172, 141, 0])
    cube([1, 1, 1.49]);
  translate([173, 141, 0])
    cube([1, 1, 1.49]);
  translate([174, 141, 0])
    cube([1, 1, 1.49]);
  translate([175, 141, 0])
    cube([1, 1, 1.49]);
  translate([176, 141, 0])
    cube([1, 1, 1.49]);
  translate([177, 141, 0])
    cube([1, 1, 1.53]);
  translate([178, 141, 0])
    cube([1, 1, 1.53]);
  translate([179, 141, 0])
    cube([1, 1, 1.49]);
  translate([180, 141, 0])
    cube([1, 1, 1.49]);
  translate([181, 141, 0])
    cube([1, 1, 1.53]);
  translate([182, 141, 0])
    cube([1, 1, 1.53]);
  translate([183, 141, 0])
    cube([1, 1, 1.53]);
  translate([184, 141, 0])
    cube([1, 1, 1.53]);
  translate([185, 141, 0])
    cube([1, 1, 1.53]);
  translate([186, 141, 0])
    cube([1, 1, 1.57]);
  translate([187, 141, 0])
    cube([1, 1, 1.53]);
  translate([188, 141, 0])
    cube([1, 1, 1.53]);
  translate([189, 141, 0])
    cube([1, 1, 1.53]);
  translate([190, 141, 0])
    cube([1, 1, 1.53]);
  translate([191, 141, 0])
    cube([1, 1, 1.53]);
  translate([192, 141, 0])
    cube([1, 1, 1.53]);
  translate([193, 141, 0])
    cube([1, 1, 1.53]);
  translate([194, 141, 0])
    cube([1, 1, 1.57]);
  translate([195, 141, 0])
    cube([1, 1, 1.57]);
  translate([196, 141, 0])
    cube([1, 1, 1.57]);
  translate([197, 141, 0])
    cube([1, 1, 1.57]);
  translate([198, 141, 0])
    cube([1, 1, 1.57]);
  translate([199, 141, 0])
    cube([1, 1, 1.57]);
  translate([200, 141, 0])
    cube([1, 1, 1.53]);
  translate([201, 141, 0])
    cube([1, 1, 1.57]);
  translate([202, 141, 0])
    cube([1, 1, 1.57]);
  translate([203, 141, 0])
    cube([1, 1, 1.57]);
  translate([204, 141, 0])
    cube([1, 1, 1.53]);
  translate([205, 141, 0])
    cube([1, 1, 1.53]);
  translate([206, 141, 0])
    cube([1, 1, 1.53]);
  translate([207, 141, 0])
    cube([1, 1, 1.53]);
  translate([208, 141, 0])
    cube([1, 1, 1.57]);
  translate([209, 141, 0])
    cube([1, 1, 1.53]);
  translate([210, 141, 0])
    cube([1, 1, 1.53]);
  translate([211, 141, 0])
    cube([1, 1, 1.53]);
  translate([212, 141, 0])
    cube([1, 1, 1.57]);
  translate([213, 141, 0])
    cube([1, 1, 1.57]);
  translate([214, 141, 0])
    cube([1, 1, 1.57]);
  translate([215, 141, 0])
    cube([1, 1, 1.57]);
  translate([216, 141, 0])
    cube([1, 1, 1.57]);
  translate([217, 141, 0])
    cube([1, 1, 1.53]);
  translate([218, 141, 0])
    cube([1, 1, 1.53]);
  translate([219, 141, 0])
    cube([1, 1, 1.53]);
  translate([220, 141, 0])
    cube([1, 1, 1.53]);
  translate([221, 141, 0])
    cube([1, 1, 1.53]);
  translate([222, 141, 0])
    cube([1, 1, 1.57]);
  translate([223, 141, 0])
    cube([1, 1, 1.57]);
  translate([224, 141, 0])
    cube([1, 1, 1.53]);
  translate([225, 141, 0])
    cube([1, 1, 1.57]);
  translate([226, 141, 0])
    cube([1, 1, 1.57]);
  translate([227, 141, 0])
    cube([1, 1, 1.53]);
  translate([228, 141, 0])
    cube([1, 1, 1.53]);
  translate([229, 141, 0])
    cube([1, 1, 1.53]);
  translate([230, 141, 0])
    cube([1, 1, 1.53]);
  translate([231, 141, 0])
    cube([1, 1, 1.53]);
  translate([232, 141, 0])
    cube([1, 1, 1.53]);
  translate([233, 141, 0])
    cube([1, 1, 1.49]);
  translate([234, 141, 0])
    cube([1, 1, 1.49]);
  translate([235, 141, 0])
    cube([1, 1, 1.53]);
  translate([236, 141, 0])
    cube([1, 1, 1.49]);
  translate([237, 141, 0])
    cube([1, 1, 1.49]);
  translate([238, 141, 0])
    cube([1, 1, 1.53]);
  translate([239, 141, 0])
    cube([1, 1, 1.53]);
  translate([240, 141, 0])
    cube([1, 1, 1.49]);
  translate([241, 141, 0])
    cube([1, 1, 1.49]);
  translate([242, 141, 0])
    cube([1, 1, 1.49]);
  translate([243, 141, 0])
    cube([1, 1, 1.53]);
  translate([244, 141, 0])
    cube([1, 1, 1.49]);
  translate([245, 141, 0])
    cube([1, 1, 1.49]);
  translate([246, 141, 0])
    cube([1, 1, 1.45]);
  translate([0, 142, 0])
    cube([1, 1, 1.69]);
  translate([1, 142, 0])
    cube([1, 1, 1.69]);
  translate([2, 142, 0])
    cube([1, 1, 1.69]);
  translate([3, 142, 0])
    cube([1, 1, 1.69]);
  translate([4, 142, 0])
    cube([1, 1, 1.69]);
  translate([5, 142, 0])
    cube([1, 1, 1.69]);
  translate([6, 142, 0])
    cube([1, 1, 1.69]);
  translate([7, 142, 0])
    cube([1, 1, 1.69]);
  translate([8, 142, 0])
    cube([1, 1, 1.69]);
  translate([9, 142, 0])
    cube([1, 1, 1.69]);
  translate([10, 142, 0])
    cube([1, 1, 1.69]);
  translate([11, 142, 0])
    cube([1, 1, 1.69]);
  translate([12, 142, 0])
    cube([1, 1, 1.69]);
  translate([13, 142, 0])
    cube([1, 1, 1.69]);
  translate([14, 142, 0])
    cube([1, 1, 1.69]);
  translate([15, 142, 0])
    cube([1, 1, 1.69]);
  translate([16, 142, 0])
    cube([1, 1, 1.69]);
  translate([17, 142, 0])
    cube([1, 1, 1.69]);
  translate([18, 142, 0])
    cube([1, 1, 1.69]);
  translate([19, 142, 0])
    cube([1, 1, 1.65]);
  translate([20, 142, 0])
    cube([1, 1, 1.65]);
  translate([21, 142, 0])
    cube([1, 1, 1.65]);
  translate([22, 142, 0])
    cube([1, 1, 1.61]);
  translate([23, 142, 0])
    cube([1, 1, 1.61]);
  translate([24, 142, 0])
    cube([1, 1, 1.61]);
  translate([25, 142, 0])
    cube([1, 1, 1.61]);
  translate([26, 142, 0])
    cube([1, 1, 1.61]);
  translate([27, 142, 0])
    cube([1, 1, 1.57]);
  translate([28, 142, 0])
    cube([1, 1, 1.61]);
  translate([29, 142, 0])
    cube([1, 1, 1.61]);
  translate([30, 142, 0])
    cube([1, 1, 1.61]);
  translate([31, 142, 0])
    cube([1, 1, 1.61]);
  translate([32, 142, 0])
    cube([1, 1, 1.61]);
  translate([33, 142, 0])
    cube([1, 1, 1.57]);
  translate([34, 142, 0])
    cube([1, 1, 1.65]);
  translate([35, 142, 0])
    cube([1, 1, 1.57]);
  translate([36, 142, 0])
    cube([1, 1, 1.57]);
  translate([37, 142, 0])
    cube([1, 1, 1.57]);
  translate([38, 142, 0])
    cube([1, 1, 1.57]);
  translate([39, 142, 0])
    cube([1, 1, 1.57]);
  translate([40, 142, 0])
    cube([1, 1, 1.57]);
  translate([41, 142, 0])
    cube([1, 1, 1.57]);
  translate([42, 142, 0])
    cube([1, 1, 1.57]);
  translate([43, 142, 0])
    cube([1, 1, 1.57]);
  translate([44, 142, 0])
    cube([1, 1, 1.57]);
  translate([45, 142, 0])
    cube([1, 1, 1.57]);
  translate([46, 142, 0])
    cube([1, 1, 1.57]);
  translate([47, 142, 0])
    cube([1, 1, 1.57]);
  translate([48, 142, 0])
    cube([1, 1, 1.57]);
  translate([49, 142, 0])
    cube([1, 1, 1.14]);
  translate([50, 142, 0])
    cube([1, 1, 1.84]);
  translate([51, 142, 0])
    cube([1, 1, 7.88]);
  translate([52, 142, 0])
    cube([1, 1, 7.10]);
  translate([53, 142, 0])
    cube([1, 1, 6.20]);
  translate([54, 142, 0])
    cube([1, 1, 4.67]);
  translate([55, 142, 0])
    cube([1, 1, 3.53]);
  translate([56, 142, 0])
    cube([1, 1, 4.20]);
  translate([57, 142, 0])
    cube([1, 1, 4.43]);
  translate([58, 142, 0])
    cube([1, 1, 4.86]);
  translate([59, 142, 0])
    cube([1, 1, 5.14]);
  translate([60, 142, 0])
    cube([1, 1, 5.33]);
  translate([61, 142, 0])
    cube([1, 1, 5.53]);
  translate([62, 142, 0])
    cube([1, 1, 5.69]);
  translate([63, 142, 0])
    cube([1, 1, 5.76]);
  translate([64, 142, 0])
    cube([1, 1, 5.76]);
  translate([65, 142, 0])
    cube([1, 1, 5.65]);
  translate([66, 142, 0])
    cube([1, 1, 5.45]);
  translate([67, 142, 0])
    cube([1, 1, 5.14]);
  translate([68, 142, 0])
    cube([1, 1, 5.06]);
  translate([69, 142, 0])
    cube([1, 1, 5.02]);
  translate([70, 142, 0])
    cube([1, 1, 4.98]);
  translate([71, 142, 0])
    cube([1, 1, 5.57]);
  translate([72, 142, 0])
    cube([1, 1, 5.45]);
  translate([73, 142, 0])
    cube([1, 1, 5.29]);
  translate([74, 142, 0])
    cube([1, 1, 5.37]);
  translate([75, 142, 0])
    cube([1, 1, 5.41]);
  translate([76, 142, 0])
    cube([1, 1, 5.33]);
  translate([77, 142, 0])
    cube([1, 1, 5.10]);
  translate([78, 142, 0])
    cube([1, 1, 4.78]);
  translate([79, 142, 0])
    cube([1, 1, 4.43]);
  translate([80, 142, 0])
    cube([1, 1, 2.55]);
  translate([81, 142, 0])
    cube([1, 1, 0.94]);
  translate([82, 142, 0])
    cube([1, 1, 1.25]);
  translate([83, 142, 0])
    cube([1, 1, 1.06]);
  translate([84, 142, 0])
    cube([1, 1, 0.24]);
  translate([85, 142, 0])
    cube([1, 1, 1.06]);
  translate([86, 142, 0])
    cube([1, 1, 1.45]);
  translate([87, 142, 0])
    cube([1, 1, 1.25]);
  translate([88, 142, 0])
    cube([1, 1, 1.37]);
  translate([89, 142, 0])
    cube([1, 1, 0.94]);
  translate([90, 142, 0])
    cube([1, 1, 1.10]);
  translate([91, 142, 0])
    cube([1, 1, 0.75]);
  translate([92, 142, 0])
    cube([1, 1, 0.86]);
  translate([93, 142, 0])
    cube([1, 1, 0.86]);
  translate([94, 142, 0])
    cube([1, 1, 0.94]);
  translate([95, 142, 0])
    cube([1, 1, 1.06]);
  translate([96, 142, 0])
    cube([1, 1, 1.18]);
  translate([97, 142, 0])
    cube([1, 1, 1.02]);
  translate([98, 142, 0])
    cube([1, 1, 1.06]);
  translate([99, 142, 0])
    cube([1, 1, 1.14]);
  translate([100, 142, 0])
    cube([1, 1, 1.14]);
  translate([101, 142, 0])
    cube([1, 1, 1.10]);
  translate([102, 142, 0])
    cube([1, 1, 1.14]);
  translate([103, 142, 0])
    cube([1, 1, 1.33]);
  translate([104, 142, 0])
    cube([1, 1, 1.22]);
  translate([105, 142, 0])
    cube([1, 1, 1.10]);
  translate([106, 142, 0])
    cube([1, 1, 1.10]);
  translate([107, 142, 0])
    cube([1, 1, 1.10]);
  translate([108, 142, 0])
    cube([1, 1, 1.06]);
  translate([109, 142, 0])
    cube([1, 1, 1.14]);
  translate([110, 142, 0])
    cube([1, 1, 1.29]);
  translate([111, 142, 0])
    cube([1, 1, 1.37]);
  translate([112, 142, 0])
    cube([1, 1, 1.41]);
  translate([113, 142, 0])
    cube([1, 1, 1.25]);
  translate([114, 142, 0])
    cube([1, 1, 0.94]);
  translate([115, 142, 0])
    cube([1, 1, 1.61]);
  translate([116, 142, 0])
    cube([1, 1, 1.49]);
  translate([117, 142, 0])
    cube([1, 1, 1.57]);
  translate([118, 142, 0])
    cube([1, 1, 1.61]);
  translate([119, 142, 0])
    cube([1, 1, 1.61]);
  translate([120, 142, 0])
    cube([1, 1, 2.00]);
  translate([121, 142, 0])
    cube([1, 1, 2.43]);
  translate([122, 142, 0])
    cube([1, 1, 2.08]);
  translate([123, 142, 0])
    cube([1, 1, 3.14]);
  translate([124, 142, 0])
    cube([1, 1, 2.63]);
  translate([125, 142, 0])
    cube([1, 1, 2.86]);
  translate([126, 142, 0])
    cube([1, 1, 3.29]);
  translate([127, 142, 0])
    cube([1, 1, 2.75]);
  translate([128, 142, 0])
    cube([1, 1, 3.29]);
  translate([129, 142, 0])
    cube([1, 1, 3.22]);
  translate([130, 142, 0])
    cube([1, 1, 2.59]);
  translate([131, 142, 0])
    cube([1, 1, 4.55]);
  translate([132, 142, 0])
    cube([1, 1, 5.69]);
  translate([133, 142, 0])
    cube([1, 1, 5.96]);
  translate([134, 142, 0])
    cube([1, 1, 7.10]);
  translate([135, 142, 0])
    cube([1, 1, 7.33]);
  translate([136, 142, 0])
    cube([1, 1, 7.80]);
  translate([137, 142, 0])
    cube([1, 1, 7.57]);
  translate([138, 142, 0])
    cube([1, 1, 7.61]);
  translate([139, 142, 0])
    cube([1, 1, 5.18]);
  translate([140, 142, 0])
    cube([1, 1, 5.18]);
  translate([141, 142, 0])
    cube([1, 1, 5.14]);
  translate([142, 142, 0])
    cube([1, 1, 4.94]);
  translate([143, 142, 0])
    cube([1, 1, 5.29]);
  translate([144, 142, 0])
    cube([1, 1, 6.82]);
  translate([145, 142, 0])
    cube([1, 1, 7.53]);
  translate([146, 142, 0])
    cube([1, 1, 1.29]);
  translate([147, 142, 0])
    cube([1, 1, 1.45]);
  translate([148, 142, 0])
    cube([1, 1, 1.45]);
  translate([149, 142, 0])
    cube([1, 1, 1.41]);
  translate([150, 142, 0])
    cube([1, 1, 1.45]);
  translate([151, 142, 0])
    cube([1, 1, 1.45]);
  translate([152, 142, 0])
    cube([1, 1, 1.45]);
  translate([153, 142, 0])
    cube([1, 1, 1.45]);
  translate([154, 142, 0])
    cube([1, 1, 1.45]);
  translate([155, 142, 0])
    cube([1, 1, 1.45]);
  translate([156, 142, 0])
    cube([1, 1, 1.41]);
  translate([157, 142, 0])
    cube([1, 1, 1.45]);
  translate([158, 142, 0])
    cube([1, 1, 1.45]);
  translate([159, 142, 0])
    cube([1, 1, 1.45]);
  translate([160, 142, 0])
    cube([1, 1, 1.49]);
  translate([161, 142, 0])
    cube([1, 1, 1.45]);
  translate([162, 142, 0])
    cube([1, 1, 1.45]);
  translate([163, 142, 0])
    cube([1, 1, 1.49]);
  translate([164, 142, 0])
    cube([1, 1, 1.41]);
  translate([165, 142, 0])
    cube([1, 1, 1.49]);
  translate([166, 142, 0])
    cube([1, 1, 1.49]);
  translate([167, 142, 0])
    cube([1, 1, 1.49]);
  translate([168, 142, 0])
    cube([1, 1, 1.49]);
  translate([169, 142, 0])
    cube([1, 1, 1.49]);
  translate([170, 142, 0])
    cube([1, 1, 1.49]);
  translate([171, 142, 0])
    cube([1, 1, 1.49]);
  translate([172, 142, 0])
    cube([1, 1, 1.49]);
  translate([173, 142, 0])
    cube([1, 1, 1.49]);
  translate([174, 142, 0])
    cube([1, 1, 1.49]);
  translate([175, 142, 0])
    cube([1, 1, 1.49]);
  translate([176, 142, 0])
    cube([1, 1, 1.49]);
  translate([177, 142, 0])
    cube([1, 1, 1.53]);
  translate([178, 142, 0])
    cube([1, 1, 1.53]);
  translate([179, 142, 0])
    cube([1, 1, 1.57]);
  translate([180, 142, 0])
    cube([1, 1, 1.49]);
  translate([181, 142, 0])
    cube([1, 1, 1.53]);
  translate([182, 142, 0])
    cube([1, 1, 1.53]);
  translate([183, 142, 0])
    cube([1, 1, 1.53]);
  translate([184, 142, 0])
    cube([1, 1, 1.53]);
  translate([185, 142, 0])
    cube([1, 1, 1.53]);
  translate([186, 142, 0])
    cube([1, 1, 1.57]);
  translate([187, 142, 0])
    cube([1, 1, 1.53]);
  translate([188, 142, 0])
    cube([1, 1, 1.53]);
  translate([189, 142, 0])
    cube([1, 1, 1.53]);
  translate([190, 142, 0])
    cube([1, 1, 1.53]);
  translate([191, 142, 0])
    cube([1, 1, 1.53]);
  translate([192, 142, 0])
    cube([1, 1, 1.53]);
  translate([193, 142, 0])
    cube([1, 1, 1.53]);
  translate([194, 142, 0])
    cube([1, 1, 1.57]);
  translate([195, 142, 0])
    cube([1, 1, 1.57]);
  translate([196, 142, 0])
    cube([1, 1, 1.57]);
  translate([197, 142, 0])
    cube([1, 1, 1.57]);
  translate([198, 142, 0])
    cube([1, 1, 1.57]);
  translate([199, 142, 0])
    cube([1, 1, 1.57]);
  translate([200, 142, 0])
    cube([1, 1, 1.57]);
  translate([201, 142, 0])
    cube([1, 1, 1.57]);
  translate([202, 142, 0])
    cube([1, 1, 1.57]);
  translate([203, 142, 0])
    cube([1, 1, 1.57]);
  translate([204, 142, 0])
    cube([1, 1, 1.57]);
  translate([205, 142, 0])
    cube([1, 1, 1.57]);
  translate([206, 142, 0])
    cube([1, 1, 1.57]);
  translate([207, 142, 0])
    cube([1, 1, 1.57]);
  translate([208, 142, 0])
    cube([1, 1, 1.57]);
  translate([209, 142, 0])
    cube([1, 1, 1.53]);
  translate([210, 142, 0])
    cube([1, 1, 1.53]);
  translate([211, 142, 0])
    cube([1, 1, 1.57]);
  translate([212, 142, 0])
    cube([1, 1, 1.57]);
  translate([213, 142, 0])
    cube([1, 1, 1.57]);
  translate([214, 142, 0])
    cube([1, 1, 1.57]);
  translate([215, 142, 0])
    cube([1, 1, 1.57]);
  translate([216, 142, 0])
    cube([1, 1, 1.57]);
  translate([217, 142, 0])
    cube([1, 1, 1.57]);
  translate([218, 142, 0])
    cube([1, 1, 1.57]);
  translate([219, 142, 0])
    cube([1, 1, 1.53]);
  translate([220, 142, 0])
    cube([1, 1, 1.53]);
  translate([221, 142, 0])
    cube([1, 1, 1.53]);
  translate([222, 142, 0])
    cube([1, 1, 1.57]);
  translate([223, 142, 0])
    cube([1, 1, 1.57]);
  translate([224, 142, 0])
    cube([1, 1, 1.57]);
  translate([225, 142, 0])
    cube([1, 1, 1.57]);
  translate([226, 142, 0])
    cube([1, 1, 1.57]);
  translate([227, 142, 0])
    cube([1, 1, 1.53]);
  translate([228, 142, 0])
    cube([1, 1, 1.57]);
  translate([229, 142, 0])
    cube([1, 1, 1.57]);
  translate([230, 142, 0])
    cube([1, 1, 1.57]);
  translate([231, 142, 0])
    cube([1, 1, 1.57]);
  translate([232, 142, 0])
    cube([1, 1, 1.57]);
  translate([233, 142, 0])
    cube([1, 1, 1.57]);
  translate([234, 142, 0])
    cube([1, 1, 1.57]);
  translate([235, 142, 0])
    cube([1, 1, 1.53]);
  translate([236, 142, 0])
    cube([1, 1, 1.57]);
  translate([237, 142, 0])
    cube([1, 1, 1.57]);
  translate([238, 142, 0])
    cube([1, 1, 1.53]);
  translate([239, 142, 0])
    cube([1, 1, 1.53]);
  translate([240, 142, 0])
    cube([1, 1, 1.57]);
  translate([241, 142, 0])
    cube([1, 1, 1.57]);
  translate([242, 142, 0])
    cube([1, 1, 1.57]);
  translate([243, 142, 0])
    cube([1, 1, 1.53]);
  translate([244, 142, 0])
    cube([1, 1, 1.57]);
  translate([245, 142, 0])
    cube([1, 1, 1.57]);
  translate([246, 142, 0])
    cube([1, 1, 1.45]);
  translate([0, 143, 0])
    cube([1, 1, 1.73]);
  translate([1, 143, 0])
    cube([1, 1, 1.73]);
  translate([2, 143, 0])
    cube([1, 1, 1.73]);
  translate([3, 143, 0])
    cube([1, 1, 1.69]);
  translate([4, 143, 0])
    cube([1, 1, 1.69]);
  translate([5, 143, 0])
    cube([1, 1, 1.69]);
  translate([6, 143, 0])
    cube([1, 1, 1.69]);
  translate([7, 143, 0])
    cube([1, 1, 1.69]);
  translate([8, 143, 0])
    cube([1, 1, 1.69]);
  translate([9, 143, 0])
    cube([1, 1, 1.69]);
  translate([10, 143, 0])
    cube([1, 1, 1.69]);
  translate([11, 143, 0])
    cube([1, 1, 1.69]);
  translate([12, 143, 0])
    cube([1, 1, 1.65]);
  translate([13, 143, 0])
    cube([1, 1, 1.65]);
  translate([14, 143, 0])
    cube([1, 1, 1.69]);
  translate([15, 143, 0])
    cube([1, 1, 1.69]);
  translate([16, 143, 0])
    cube([1, 1, 1.69]);
  translate([17, 143, 0])
    cube([1, 1, 1.65]);
  translate([18, 143, 0])
    cube([1, 1, 1.65]);
  translate([19, 143, 0])
    cube([1, 1, 1.65]);
  translate([20, 143, 0])
    cube([1, 1, 1.65]);
  translate([21, 143, 0])
    cube([1, 1, 1.65]);
  translate([22, 143, 0])
    cube([1, 1, 1.65]);
  translate([23, 143, 0])
    cube([1, 1, 1.65]);
  translate([24, 143, 0])
    cube([1, 1, 1.65]);
  translate([25, 143, 0])
    cube([1, 1, 1.61]);
  translate([26, 143, 0])
    cube([1, 1, 1.61]);
  translate([27, 143, 0])
    cube([1, 1, 1.65]);
  translate([28, 143, 0])
    cube([1, 1, 1.57]);
  translate([29, 143, 0])
    cube([1, 1, 1.61]);
  translate([30, 143, 0])
    cube([1, 1, 1.65]);
  translate([31, 143, 0])
    cube([1, 1, 1.65]);
  translate([32, 143, 0])
    cube([1, 1, 1.61]);
  translate([33, 143, 0])
    cube([1, 1, 1.61]);
  translate([34, 143, 0])
    cube([1, 1, 1.61]);
  translate([35, 143, 0])
    cube([1, 1, 1.61]);
  translate([36, 143, 0])
    cube([1, 1, 1.61]);
  translate([37, 143, 0])
    cube([1, 1, 1.61]);
  translate([38, 143, 0])
    cube([1, 1, 1.57]);
  translate([39, 143, 0])
    cube([1, 1, 1.57]);
  translate([40, 143, 0])
    cube([1, 1, 1.57]);
  translate([41, 143, 0])
    cube([1, 1, 1.57]);
  translate([42, 143, 0])
    cube([1, 1, 1.57]);
  translate([43, 143, 0])
    cube([1, 1, 1.57]);
  translate([44, 143, 0])
    cube([1, 1, 1.57]);
  translate([45, 143, 0])
    cube([1, 1, 1.57]);
  translate([46, 143, 0])
    cube([1, 1, 1.57]);
  translate([47, 143, 0])
    cube([1, 1, 1.57]);
  translate([48, 143, 0])
    cube([1, 1, 1.61]);
  translate([49, 143, 0])
    cube([1, 1, 1.57]);
  translate([50, 143, 0])
    cube([1, 1, 1.49]);
  translate([51, 143, 0])
    cube([1, 1, 7.76]);
  translate([52, 143, 0])
    cube([1, 1, 7.29]);
  translate([53, 143, 0])
    cube([1, 1, 6.27]);
  translate([54, 143, 0])
    cube([1, 1, 5.06]);
  translate([55, 143, 0])
    cube([1, 1, 3.29]);
  translate([56, 143, 0])
    cube([1, 1, 4.00]);
  translate([57, 143, 0])
    cube([1, 1, 4.35]);
  translate([58, 143, 0])
    cube([1, 1, 4.78]);
  translate([59, 143, 0])
    cube([1, 1, 4.94]);
  translate([60, 143, 0])
    cube([1, 1, 5.25]);
  translate([61, 143, 0])
    cube([1, 1, 5.45]);
  translate([62, 143, 0])
    cube([1, 1, 5.61]);
  translate([63, 143, 0])
    cube([1, 1, 5.65]);
  translate([64, 143, 0])
    cube([1, 1, 5.73]);
  translate([65, 143, 0])
    cube([1, 1, 5.69]);
  translate([66, 143, 0])
    cube([1, 1, 5.57]);
  translate([67, 143, 0])
    cube([1, 1, 5.41]);
  translate([68, 143, 0])
    cube([1, 1, 5.22]);
  translate([69, 143, 0])
    cube([1, 1, 5.14]);
  translate([70, 143, 0])
    cube([1, 1, 4.98]);
  translate([71, 143, 0])
    cube([1, 1, 5.25]);
  translate([72, 143, 0])
    cube([1, 1, 5.57]);
  translate([73, 143, 0])
    cube([1, 1, 5.33]);
  translate([74, 143, 0])
    cube([1, 1, 5.37]);
  translate([75, 143, 0])
    cube([1, 1, 5.37]);
  translate([76, 143, 0])
    cube([1, 1, 5.29]);
  translate([77, 143, 0])
    cube([1, 1, 5.18]);
  translate([78, 143, 0])
    cube([1, 1, 4.86]);
  translate([79, 143, 0])
    cube([1, 1, 4.55]);
  translate([80, 143, 0])
    cube([1, 1, 2.90]);
  translate([81, 143, 0])
    cube([1, 1, 1.02]);
  translate([82, 143, 0])
    cube([1, 1, 1.33]);
  translate([83, 143, 0])
    cube([1, 1, 2.16]);
  translate([84, 143, 0])
    cube([1, 1, 0.94]);
  translate([85, 143, 0])
    cube([1, 1, 1.33]);
  translate([86, 143, 0])
    cube([1, 1, 1.33]);
  translate([87, 143, 0])
    cube([1, 1, 1.33]);
  translate([88, 143, 0])
    cube([1, 1, 1.29]);
  translate([89, 143, 0])
    cube([1, 1, 1.45]);
  translate([90, 143, 0])
    cube([1, 1, 1.53]);
  translate([91, 143, 0])
    cube([1, 1, 1.41]);
  translate([92, 143, 0])
    cube([1, 1, 1.33]);
  translate([93, 143, 0])
    cube([1, 1, 1.29]);
  translate([94, 143, 0])
    cube([1, 1, 1.41]);
  translate([95, 143, 0])
    cube([1, 1, 1.41]);
  translate([96, 143, 0])
    cube([1, 1, 1.29]);
  translate([97, 143, 0])
    cube([1, 1, 1.18]);
  translate([98, 143, 0])
    cube([1, 1, 1.14]);
  translate([99, 143, 0])
    cube([1, 1, 0.98]);
  translate([100, 143, 0])
    cube([1, 1, 0.98]);
  translate([101, 143, 0])
    cube([1, 1, 0.86]);
  translate([102, 143, 0])
    cube([1, 1, 0.78]);
  translate([103, 143, 0])
    cube([1, 1, 0.75]);
  translate([104, 143, 0])
    cube([1, 1, 0.94]);
  translate([105, 143, 0])
    cube([1, 1, 0.86]);
  translate([106, 143, 0])
    cube([1, 1, 0.86]);
  translate([107, 143, 0])
    cube([1, 1, 0.98]);
  translate([108, 143, 0])
    cube([1, 1, 0.78]);
  translate([109, 143, 0])
    cube([1, 1, 0.90]);
  translate([110, 143, 0])
    cube([1, 1, 0.94]);
  translate([111, 143, 0])
    cube([1, 1, 1.57]);
  translate([112, 143, 0])
    cube([1, 1, 1.22]);
  translate([113, 143, 0])
    cube([1, 1, 1.18]);
  translate([114, 143, 0])
    cube([1, 1, 1.29]);
  translate([115, 143, 0])
    cube([1, 1, 1.29]);
  translate([116, 143, 0])
    cube([1, 1, 1.37]);
  translate([117, 143, 0])
    cube([1, 1, 1.61]);
  translate([118, 143, 0])
    cube([1, 1, 1.22]);
  translate([119, 143, 0])
    cube([1, 1, 2.59]);
  translate([120, 143, 0])
    cube([1, 1, 2.27]);
  translate([121, 143, 0])
    cube([1, 1, 2.51]);
  translate([122, 143, 0])
    cube([1, 1, 2.04]);
  translate([123, 143, 0])
    cube([1, 1, 3.33]);
  translate([124, 143, 0])
    cube([1, 1, 2.82]);
  translate([125, 143, 0])
    cube([1, 1, 3.92]);
  translate([126, 143, 0])
    cube([1, 1, 3.06]);
  translate([127, 143, 0])
    cube([1, 1, 2.47]);
  translate([128, 143, 0])
    cube([1, 1, 3.92]);
  translate([129, 143, 0])
    cube([1, 1, 4.63]);
  translate([130, 143, 0])
    cube([1, 1, 5.14]);
  translate([131, 143, 0])
    cube([1, 1, 5.45]);
  translate([132, 143, 0])
    cube([1, 1, 5.53]);
  translate([133, 143, 0])
    cube([1, 1, 5.84]);
  translate([134, 143, 0])
    cube([1, 1, 6.39]);
  translate([135, 143, 0])
    cube([1, 1, 7.14]);
  translate([136, 143, 0])
    cube([1, 1, 7.69]);
  translate([137, 143, 0])
    cube([1, 1, 7.69]);
  translate([138, 143, 0])
    cube([1, 1, 7.61]);
  translate([139, 143, 0])
    cube([1, 1, 5.29]);
  translate([140, 143, 0])
    cube([1, 1, 5.18]);
  translate([141, 143, 0])
    cube([1, 1, 5.18]);
  translate([142, 143, 0])
    cube([1, 1, 4.98]);
  translate([143, 143, 0])
    cube([1, 1, 5.06]);
  translate([144, 143, 0])
    cube([1, 1, 6.31]);
  translate([145, 143, 0])
    cube([1, 1, 7.80]);
  translate([146, 143, 0])
    cube([1, 1, 1.57]);
  translate([147, 143, 0])
    cube([1, 1, 1.45]);
  translate([148, 143, 0])
    cube([1, 1, 1.45]);
  translate([149, 143, 0])
    cube([1, 1, 1.45]);
  translate([150, 143, 0])
    cube([1, 1, 1.45]);
  translate([151, 143, 0])
    cube([1, 1, 1.45]);
  translate([152, 143, 0])
    cube([1, 1, 1.45]);
  translate([153, 143, 0])
    cube([1, 1, 1.45]);
  translate([154, 143, 0])
    cube([1, 1, 1.45]);
  translate([155, 143, 0])
    cube([1, 1, 1.45]);
  translate([156, 143, 0])
    cube([1, 1, 1.45]);
  translate([157, 143, 0])
    cube([1, 1, 1.45]);
  translate([158, 143, 0])
    cube([1, 1, 1.45]);
  translate([159, 143, 0])
    cube([1, 1, 1.45]);
  translate([160, 143, 0])
    cube([1, 1, 1.49]);
  translate([161, 143, 0])
    cube([1, 1, 1.45]);
  translate([162, 143, 0])
    cube([1, 1, 1.45]);
  translate([163, 143, 0])
    cube([1, 1, 1.49]);
  translate([164, 143, 0])
    cube([1, 1, 1.49]);
  translate([165, 143, 0])
    cube([1, 1, 1.49]);
  translate([166, 143, 0])
    cube([1, 1, 1.49]);
  translate([167, 143, 0])
    cube([1, 1, 1.49]);
  translate([168, 143, 0])
    cube([1, 1, 1.49]);
  translate([169, 143, 0])
    cube([1, 1, 1.49]);
  translate([170, 143, 0])
    cube([1, 1, 1.49]);
  translate([171, 143, 0])
    cube([1, 1, 1.53]);
  translate([172, 143, 0])
    cube([1, 1, 1.53]);
  translate([173, 143, 0])
    cube([1, 1, 1.53]);
  translate([174, 143, 0])
    cube([1, 1, 1.53]);
  translate([175, 143, 0])
    cube([1, 1, 1.49]);
  translate([176, 143, 0])
    cube([1, 1, 1.53]);
  translate([177, 143, 0])
    cube([1, 1, 1.53]);
  translate([178, 143, 0])
    cube([1, 1, 1.53]);
  translate([179, 143, 0])
    cube([1, 1, 1.53]);
  translate([180, 143, 0])
    cube([1, 1, 1.53]);
  translate([181, 143, 0])
    cube([1, 1, 1.57]);
  translate([182, 143, 0])
    cube([1, 1, 1.57]);
  translate([183, 143, 0])
    cube([1, 1, 1.57]);
  translate([184, 143, 0])
    cube([1, 1, 1.57]);
  translate([185, 143, 0])
    cube([1, 1, 1.57]);
  translate([186, 143, 0])
    cube([1, 1, 1.57]);
  translate([187, 143, 0])
    cube([1, 1, 1.57]);
  translate([188, 143, 0])
    cube([1, 1, 1.53]);
  translate([189, 143, 0])
    cube([1, 1, 1.57]);
  translate([190, 143, 0])
    cube([1, 1, 1.57]);
  translate([191, 143, 0])
    cube([1, 1, 1.57]);
  translate([192, 143, 0])
    cube([1, 1, 1.57]);
  translate([193, 143, 0])
    cube([1, 1, 1.57]);
  translate([194, 143, 0])
    cube([1, 1, 1.57]);
  translate([195, 143, 0])
    cube([1, 1, 1.57]);
  translate([196, 143, 0])
    cube([1, 1, 1.57]);
  translate([197, 143, 0])
    cube([1, 1, 1.57]);
  translate([198, 143, 0])
    cube([1, 1, 1.57]);
  translate([199, 143, 0])
    cube([1, 1, 1.57]);
  translate([200, 143, 0])
    cube([1, 1, 1.57]);
  translate([201, 143, 0])
    cube([1, 1, 1.57]);
  translate([202, 143, 0])
    cube([1, 1, 1.57]);
  translate([203, 143, 0])
    cube([1, 1, 1.57]);
  translate([204, 143, 0])
    cube([1, 1, 1.57]);
  translate([205, 143, 0])
    cube([1, 1, 1.57]);
  translate([206, 143, 0])
    cube([1, 1, 1.57]);
  translate([207, 143, 0])
    cube([1, 1, 1.57]);
  translate([208, 143, 0])
    cube([1, 1, 1.57]);
  translate([209, 143, 0])
    cube([1, 1, 1.57]);
  translate([210, 143, 0])
    cube([1, 1, 1.57]);
  translate([211, 143, 0])
    cube([1, 1, 1.57]);
  translate([212, 143, 0])
    cube([1, 1, 1.57]);
  translate([213, 143, 0])
    cube([1, 1, 1.57]);
  translate([214, 143, 0])
    cube([1, 1, 1.57]);
  translate([215, 143, 0])
    cube([1, 1, 1.57]);
  translate([216, 143, 0])
    cube([1, 1, 1.57]);
  translate([217, 143, 0])
    cube([1, 1, 1.57]);
  translate([218, 143, 0])
    cube([1, 1, 1.57]);
  translate([219, 143, 0])
    cube([1, 1, 1.57]);
  translate([220, 143, 0])
    cube([1, 1, 1.57]);
  translate([221, 143, 0])
    cube([1, 1, 1.49]);
  translate([222, 143, 0])
    cube([1, 1, 1.57]);
  translate([223, 143, 0])
    cube([1, 1, 1.57]);
  translate([224, 143, 0])
    cube([1, 1, 1.57]);
  translate([225, 143, 0])
    cube([1, 1, 1.57]);
  translate([226, 143, 0])
    cube([1, 1, 1.57]);
  translate([227, 143, 0])
    cube([1, 1, 1.53]);
  translate([228, 143, 0])
    cube([1, 1, 1.57]);
  translate([229, 143, 0])
    cube([1, 1, 1.57]);
  translate([230, 143, 0])
    cube([1, 1, 1.57]);
  translate([231, 143, 0])
    cube([1, 1, 1.57]);
  translate([232, 143, 0])
    cube([1, 1, 1.57]);
  translate([233, 143, 0])
    cube([1, 1, 1.57]);
  translate([234, 143, 0])
    cube([1, 1, 1.57]);
  translate([235, 143, 0])
    cube([1, 1, 1.57]);
  translate([236, 143, 0])
    cube([1, 1, 1.53]);
  translate([237, 143, 0])
    cube([1, 1, 1.57]);
  translate([238, 143, 0])
    cube([1, 1, 1.53]);
  translate([239, 143, 0])
    cube([1, 1, 1.53]);
  translate([240, 143, 0])
    cube([1, 1, 1.53]);
  translate([241, 143, 0])
    cube([1, 1, 1.57]);
  translate([242, 143, 0])
    cube([1, 1, 1.57]);
  translate([243, 143, 0])
    cube([1, 1, 1.53]);
  translate([244, 143, 0])
    cube([1, 1, 1.53]);
  translate([245, 143, 0])
    cube([1, 1, 1.57]);
  translate([246, 143, 0])
    cube([1, 1, 1.53]);
  translate([0, 144, 0])
    cube([1, 1, 1.73]);
  translate([1, 144, 0])
    cube([1, 1, 1.73]);
  translate([2, 144, 0])
    cube([1, 1, 1.73]);
  translate([3, 144, 0])
    cube([1, 1, 1.73]);
  translate([4, 144, 0])
    cube([1, 1, 1.69]);
  translate([5, 144, 0])
    cube([1, 1, 1.69]);
  translate([6, 144, 0])
    cube([1, 1, 1.69]);
  translate([7, 144, 0])
    cube([1, 1, 1.73]);
  translate([8, 144, 0])
    cube([1, 1, 1.73]);
  translate([9, 144, 0])
    cube([1, 1, 1.73]);
  translate([10, 144, 0])
    cube([1, 1, 1.73]);
  translate([11, 144, 0])
    cube([1, 1, 1.73]);
  translate([12, 144, 0])
    cube([1, 1, 1.69]);
  translate([13, 144, 0])
    cube([1, 1, 1.69]);
  translate([14, 144, 0])
    cube([1, 1, 1.69]);
  translate([15, 144, 0])
    cube([1, 1, 1.73]);
  translate([16, 144, 0])
    cube([1, 1, 1.69]);
  translate([17, 144, 0])
    cube([1, 1, 1.69]);
  translate([18, 144, 0])
    cube([1, 1, 1.69]);
  translate([19, 144, 0])
    cube([1, 1, 1.69]);
  translate([20, 144, 0])
    cube([1, 1, 1.69]);
  translate([21, 144, 0])
    cube([1, 1, 1.69]);
  translate([22, 144, 0])
    cube([1, 1, 1.69]);
  translate([23, 144, 0])
    cube([1, 1, 1.69]);
  translate([24, 144, 0])
    cube([1, 1, 1.65]);
  translate([25, 144, 0])
    cube([1, 1, 1.69]);
  translate([26, 144, 0])
    cube([1, 1, 1.69]);
  translate([27, 144, 0])
    cube([1, 1, 1.69]);
  translate([28, 144, 0])
    cube([1, 1, 1.65]);
  translate([29, 144, 0])
    cube([1, 1, 1.65]);
  translate([30, 144, 0])
    cube([1, 1, 1.65]);
  translate([31, 144, 0])
    cube([1, 1, 1.65]);
  translate([32, 144, 0])
    cube([1, 1, 1.65]);
  translate([33, 144, 0])
    cube([1, 1, 1.65]);
  translate([34, 144, 0])
    cube([1, 1, 1.65]);
  translate([35, 144, 0])
    cube([1, 1, 1.57]);
  translate([36, 144, 0])
    cube([1, 1, 1.61]);
  translate([37, 144, 0])
    cube([1, 1, 1.61]);
  translate([38, 144, 0])
    cube([1, 1, 1.61]);
  translate([39, 144, 0])
    cube([1, 1, 1.65]);
  translate([40, 144, 0])
    cube([1, 1, 1.61]);
  translate([41, 144, 0])
    cube([1, 1, 1.61]);
  translate([42, 144, 0])
    cube([1, 1, 1.61]);
  translate([43, 144, 0])
    cube([1, 1, 1.61]);
  translate([44, 144, 0])
    cube([1, 1, 1.53]);
  translate([45, 144, 0])
    cube([1, 1, 1.53]);
  translate([46, 144, 0])
    cube([1, 1, 1.53]);
  translate([47, 144, 0])
    cube([1, 1, 1.53]);
  translate([48, 144, 0])
    cube([1, 1, 1.57]);
  translate([49, 144, 0])
    cube([1, 1, 1.57]);
  translate([50, 144, 0])
    cube([1, 1, 1.57]);
  translate([51, 144, 0])
    cube([1, 1, 7.88]);
  translate([52, 144, 0])
    cube([1, 1, 7.37]);
  translate([53, 144, 0])
    cube([1, 1, 6.24]);
  translate([54, 144, 0])
    cube([1, 1, 5.18]);
  translate([55, 144, 0])
    cube([1, 1, 3.02]);
  translate([56, 144, 0])
    cube([1, 1, 3.80]);
  translate([57, 144, 0])
    cube([1, 1, 4.20]);
  translate([58, 144, 0])
    cube([1, 1, 4.71]);
  translate([59, 144, 0])
    cube([1, 1, 4.94]);
  translate([60, 144, 0])
    cube([1, 1, 5.18]);
  translate([61, 144, 0])
    cube([1, 1, 5.33]);
  translate([62, 144, 0])
    cube([1, 1, 5.57]);
  translate([63, 144, 0])
    cube([1, 1, 5.65]);
  translate([64, 144, 0])
    cube([1, 1, 5.73]);
  translate([65, 144, 0])
    cube([1, 1, 5.76]);
  translate([66, 144, 0])
    cube([1, 1, 5.73]);
  translate([67, 144, 0])
    cube([1, 1, 5.53]);
  translate([68, 144, 0])
    cube([1, 1, 5.33]);
  translate([69, 144, 0])
    cube([1, 1, 5.25]);
  translate([70, 144, 0])
    cube([1, 1, 5.06]);
  translate([71, 144, 0])
    cube([1, 1, 5.10]);
  translate([72, 144, 0])
    cube([1, 1, 5.69]);
  translate([73, 144, 0])
    cube([1, 1, 5.57]);
  translate([74, 144, 0])
    cube([1, 1, 5.53]);
  translate([75, 144, 0])
    cube([1, 1, 5.41]);
  translate([76, 144, 0])
    cube([1, 1, 5.37]);
  translate([77, 144, 0])
    cube([1, 1, 5.25]);
  translate([78, 144, 0])
    cube([1, 1, 5.02]);
  translate([79, 144, 0])
    cube([1, 1, 4.47]);
  translate([80, 144, 0])
    cube([1, 1, 3.14]);
  translate([81, 144, 0])
    cube([1, 1, 1.29]);
  translate([82, 144, 0])
    cube([1, 1, 1.25]);
  translate([83, 144, 0])
    cube([1, 1, 1.53]);
  translate([84, 144, 0])
    cube([1, 1, 1.53]);
  translate([85, 144, 0])
    cube([1, 1, 1.69]);
  translate([86, 144, 0])
    cube([1, 1, 1.06]);
  translate([87, 144, 0])
    cube([1, 1, 1.29]);
  translate([88, 144, 0])
    cube([1, 1, 1.49]);
  translate([89, 144, 0])
    cube([1, 1, 1.61]);
  translate([90, 144, 0])
    cube([1, 1, 0.98]);
  translate([91, 144, 0])
    cube([1, 1, 0.90]);
  translate([92, 144, 0])
    cube([1, 1, 0.90]);
  translate([93, 144, 0])
    cube([1, 1, 1.33]);
  translate([94, 144, 0])
    cube([1, 1, 1.14]);
  translate([95, 144, 0])
    cube([1, 1, 1.73]);
  translate([96, 144, 0])
    cube([1, 1, 1.14]);
  translate([97, 144, 0])
    cube([1, 1, 0.86]);
  translate([98, 144, 0])
    cube([1, 1, 0.90]);
  translate([99, 144, 0])
    cube([1, 1, 0.82]);
  translate([100, 144, 0])
    cube([1, 1, 0.78]);
  translate([101, 144, 0])
    cube([1, 1, 0.98]);
  translate([102, 144, 0])
    cube([1, 1, 1.06]);
  translate([103, 144, 0])
    cube([1, 1, 1.53]);
  translate([104, 144, 0])
    cube([1, 1, 1.37]);
  translate([105, 144, 0])
    cube([1, 1, 1.61]);
  translate([106, 144, 0])
    cube([1, 1, 1.25]);
  translate([107, 144, 0])
    cube([1, 1, 1.06]);
  translate([108, 144, 0])
    cube([1, 1, 1.33]);
  translate([109, 144, 0])
    cube([1, 1, 1.25]);
  translate([110, 144, 0])
    cube([1, 1, 0.98]);
  translate([111, 144, 0])
    cube([1, 1, 1.49]);
  translate([112, 144, 0])
    cube([1, 1, 1.65]);
  translate([113, 144, 0])
    cube([1, 1, 1.22]);
  translate([114, 144, 0])
    cube([1, 1, 1.84]);
  translate([115, 144, 0])
    cube([1, 1, 1.96]);
  translate([116, 144, 0])
    cube([1, 1, 1.73]);
  translate([117, 144, 0])
    cube([1, 1, 2.12]);
  translate([118, 144, 0])
    cube([1, 1, 2.31]);
  translate([119, 144, 0])
    cube([1, 1, 2.27]);
  translate([120, 144, 0])
    cube([1, 1, 2.67]);
  translate([121, 144, 0])
    cube([1, 1, 2.27]);
  translate([122, 144, 0])
    cube([1, 1, 2.78]);
  translate([123, 144, 0])
    cube([1, 1, 2.39]);
  translate([124, 144, 0])
    cube([1, 1, 3.41]);
  translate([125, 144, 0])
    cube([1, 1, 6.86]);
  translate([126, 144, 0])
    cube([1, 1, 5.37]);
  translate([127, 144, 0])
    cube([1, 1, 4.82]);
  translate([128, 144, 0])
    cube([1, 1, 5.02]);
  translate([129, 144, 0])
    cube([1, 1, 5.33]);
  translate([130, 144, 0])
    cube([1, 1, 5.33]);
  translate([131, 144, 0])
    cube([1, 1, 5.53]);
  translate([132, 144, 0])
    cube([1, 1, 5.53]);
  translate([133, 144, 0])
    cube([1, 1, 5.73]);
  translate([134, 144, 0])
    cube([1, 1, 6.12]);
  translate([135, 144, 0])
    cube([1, 1, 6.82]);
  translate([136, 144, 0])
    cube([1, 1, 7.18]);
  translate([137, 144, 0])
    cube([1, 1, 7.33]);
  translate([138, 144, 0])
    cube([1, 1, 7.33]);
  translate([139, 144, 0])
    cube([1, 1, 5.45]);
  translate([140, 144, 0])
    cube([1, 1, 5.49]);
  translate([141, 144, 0])
    cube([1, 1, 5.37]);
  translate([142, 144, 0])
    cube([1, 1, 5.14]);
  translate([143, 144, 0])
    cube([1, 1, 4.94]);
  translate([144, 144, 0])
    cube([1, 1, 5.88]);
  translate([145, 144, 0])
    cube([1, 1, 7.65]);
  translate([146, 144, 0])
    cube([1, 1, 1.96]);
  translate([147, 144, 0])
    cube([1, 1, 1.29]);
  translate([148, 144, 0])
    cube([1, 1, 1.45]);
  translate([149, 144, 0])
    cube([1, 1, 1.49]);
  translate([150, 144, 0])
    cube([1, 1, 1.45]);
  translate([151, 144, 0])
    cube([1, 1, 1.45]);
  translate([152, 144, 0])
    cube([1, 1, 1.45]);
  translate([153, 144, 0])
    cube([1, 1, 1.41]);
  translate([154, 144, 0])
    cube([1, 1, 1.41]);
  translate([155, 144, 0])
    cube([1, 1, 1.41]);
  translate([156, 144, 0])
    cube([1, 1, 1.49]);
  translate([157, 144, 0])
    cube([1, 1, 1.49]);
  translate([158, 144, 0])
    cube([1, 1, 1.49]);
  translate([159, 144, 0])
    cube([1, 1, 1.45]);
  translate([160, 144, 0])
    cube([1, 1, 1.49]);
  translate([161, 144, 0])
    cube([1, 1, 1.49]);
  translate([162, 144, 0])
    cube([1, 1, 1.49]);
  translate([163, 144, 0])
    cube([1, 1, 1.49]);
  translate([164, 144, 0])
    cube([1, 1, 1.49]);
  translate([165, 144, 0])
    cube([1, 1, 1.49]);
  translate([166, 144, 0])
    cube([1, 1, 1.49]);
  translate([167, 144, 0])
    cube([1, 1, 1.53]);
  translate([168, 144, 0])
    cube([1, 1, 1.53]);
  translate([169, 144, 0])
    cube([1, 1, 1.53]);
  translate([170, 144, 0])
    cube([1, 1, 1.53]);
  translate([171, 144, 0])
    cube([1, 1, 1.53]);
  translate([172, 144, 0])
    cube([1, 1, 1.53]);
  translate([173, 144, 0])
    cube([1, 1, 1.57]);
  translate([174, 144, 0])
    cube([1, 1, 1.53]);
  translate([175, 144, 0])
    cube([1, 1, 1.53]);
  translate([176, 144, 0])
    cube([1, 1, 1.57]);
  translate([177, 144, 0])
    cube([1, 1, 1.57]);
  translate([178, 144, 0])
    cube([1, 1, 1.57]);
  translate([179, 144, 0])
    cube([1, 1, 1.57]);
  translate([180, 144, 0])
    cube([1, 1, 1.57]);
  translate([181, 144, 0])
    cube([1, 1, 1.57]);
  translate([182, 144, 0])
    cube([1, 1, 1.53]);
  translate([183, 144, 0])
    cube([1, 1, 1.57]);
  translate([184, 144, 0])
    cube([1, 1, 1.57]);
  translate([185, 144, 0])
    cube([1, 1, 1.57]);
  translate([186, 144, 0])
    cube([1, 1, 1.57]);
  translate([187, 144, 0])
    cube([1, 1, 1.57]);
  translate([188, 144, 0])
    cube([1, 1, 1.57]);
  translate([189, 144, 0])
    cube([1, 1, 1.57]);
  translate([190, 144, 0])
    cube([1, 1, 1.57]);
  translate([191, 144, 0])
    cube([1, 1, 1.57]);
  translate([192, 144, 0])
    cube([1, 1, 1.57]);
  translate([193, 144, 0])
    cube([1, 1, 1.57]);
  translate([194, 144, 0])
    cube([1, 1, 1.57]);
  translate([195, 144, 0])
    cube([1, 1, 1.57]);
  translate([196, 144, 0])
    cube([1, 1, 1.57]);
  translate([197, 144, 0])
    cube([1, 1, 1.57]);
  translate([198, 144, 0])
    cube([1, 1, 1.61]);
  translate([199, 144, 0])
    cube([1, 1, 1.61]);
  translate([200, 144, 0])
    cube([1, 1, 1.61]);
  translate([201, 144, 0])
    cube([1, 1, 1.61]);
  translate([202, 144, 0])
    cube([1, 1, 1.61]);
  translate([203, 144, 0])
    cube([1, 1, 1.61]);
  translate([204, 144, 0])
    cube([1, 1, 1.61]);
  translate([205, 144, 0])
    cube([1, 1, 1.61]);
  translate([206, 144, 0])
    cube([1, 1, 1.53]);
  translate([207, 144, 0])
    cube([1, 1, 1.53]);
  translate([208, 144, 0])
    cube([1, 1, 1.53]);
  translate([209, 144, 0])
    cube([1, 1, 1.53]);
  translate([210, 144, 0])
    cube([1, 1, 1.53]);
  translate([211, 144, 0])
    cube([1, 1, 1.53]);
  translate([212, 144, 0])
    cube([1, 1, 1.53]);
  translate([213, 144, 0])
    cube([1, 1, 1.53]);
  translate([214, 144, 0])
    cube([1, 1, 1.53]);
  translate([215, 144, 0])
    cube([1, 1, 1.53]);
  translate([216, 144, 0])
    cube([1, 1, 1.53]);
  translate([217, 144, 0])
    cube([1, 1, 1.53]);
  translate([218, 144, 0])
    cube([1, 1, 1.53]);
  translate([219, 144, 0])
    cube([1, 1, 1.53]);
  translate([220, 144, 0])
    cube([1, 1, 1.53]);
  translate([221, 144, 0])
    cube([1, 1, 1.53]);
  translate([222, 144, 0])
    cube([1, 1, 1.53]);
  translate([223, 144, 0])
    cube([1, 1, 1.53]);
  translate([224, 144, 0])
    cube([1, 1, 1.53]);
  translate([225, 144, 0])
    cube([1, 1, 1.57]);
  translate([226, 144, 0])
    cube([1, 1, 1.57]);
  translate([227, 144, 0])
    cube([1, 1, 1.53]);
  translate([228, 144, 0])
    cube([1, 1, 1.53]);
  translate([229, 144, 0])
    cube([1, 1, 1.53]);
  translate([230, 144, 0])
    cube([1, 1, 1.61]);
  translate([231, 144, 0])
    cube([1, 1, 1.57]);
  translate([232, 144, 0])
    cube([1, 1, 1.57]);
  translate([233, 144, 0])
    cube([1, 1, 1.57]);
  translate([234, 144, 0])
    cube([1, 1, 1.57]);
  translate([235, 144, 0])
    cube([1, 1, 1.57]);
  translate([236, 144, 0])
    cube([1, 1, 1.57]);
  translate([237, 144, 0])
    cube([1, 1, 1.57]);
  translate([238, 144, 0])
    cube([1, 1, 1.57]);
  translate([239, 144, 0])
    cube([1, 1, 1.57]);
  translate([240, 144, 0])
    cube([1, 1, 1.57]);
  translate([241, 144, 0])
    cube([1, 1, 1.57]);
  translate([242, 144, 0])
    cube([1, 1, 1.57]);
  translate([243, 144, 0])
    cube([1, 1, 1.57]);
  translate([244, 144, 0])
    cube([1, 1, 1.57]);
  translate([245, 144, 0])
    cube([1, 1, 1.57]);
  translate([246, 144, 0])
    cube([1, 1, 1.53]);
  translate([0, 145, 0])
    cube([1, 1, 1.73]);
  translate([1, 145, 0])
    cube([1, 1, 1.73]);
  translate([2, 145, 0])
    cube([1, 1, 1.73]);
  translate([3, 145, 0])
    cube([1, 1, 1.73]);
  translate([4, 145, 0])
    cube([1, 1, 1.76]);
  translate([5, 145, 0])
    cube([1, 1, 1.76]);
  translate([6, 145, 0])
    cube([1, 1, 1.73]);
  translate([7, 145, 0])
    cube([1, 1, 1.76]);
  translate([8, 145, 0])
    cube([1, 1, 1.73]);
  translate([9, 145, 0])
    cube([1, 1, 1.73]);
  translate([10, 145, 0])
    cube([1, 1, 1.73]);
  translate([11, 145, 0])
    cube([1, 1, 1.73]);
  translate([12, 145, 0])
    cube([1, 1, 1.69]);
  translate([13, 145, 0])
    cube([1, 1, 1.69]);
  translate([14, 145, 0])
    cube([1, 1, 1.69]);
  translate([15, 145, 0])
    cube([1, 1, 1.73]);
  translate([16, 145, 0])
    cube([1, 1, 1.69]);
  translate([17, 145, 0])
    cube([1, 1, 1.69]);
  translate([18, 145, 0])
    cube([1, 1, 1.69]);
  translate([19, 145, 0])
    cube([1, 1, 1.69]);
  translate([20, 145, 0])
    cube([1, 1, 1.69]);
  translate([21, 145, 0])
    cube([1, 1, 1.69]);
  translate([22, 145, 0])
    cube([1, 1, 1.69]);
  translate([23, 145, 0])
    cube([1, 1, 1.69]);
  translate([24, 145, 0])
    cube([1, 1, 1.69]);
  translate([25, 145, 0])
    cube([1, 1, 1.69]);
  translate([26, 145, 0])
    cube([1, 1, 1.69]);
  translate([27, 145, 0])
    cube([1, 1, 1.69]);
  translate([28, 145, 0])
    cube([1, 1, 1.69]);
  translate([29, 145, 0])
    cube([1, 1, 1.69]);
  translate([30, 145, 0])
    cube([1, 1, 1.65]);
  translate([31, 145, 0])
    cube([1, 1, 1.65]);
  translate([32, 145, 0])
    cube([1, 1, 1.65]);
  translate([33, 145, 0])
    cube([1, 1, 1.65]);
  translate([34, 145, 0])
    cube([1, 1, 1.65]);
  translate([35, 145, 0])
    cube([1, 1, 1.65]);
  translate([36, 145, 0])
    cube([1, 1, 1.61]);
  translate([37, 145, 0])
    cube([1, 1, 1.61]);
  translate([38, 145, 0])
    cube([1, 1, 1.61]);
  translate([39, 145, 0])
    cube([1, 1, 1.65]);
  translate([40, 145, 0])
    cube([1, 1, 1.61]);
  translate([41, 145, 0])
    cube([1, 1, 1.61]);
  translate([42, 145, 0])
    cube([1, 1, 1.61]);
  translate([43, 145, 0])
    cube([1, 1, 1.61]);
  translate([44, 145, 0])
    cube([1, 1, 1.61]);
  translate([45, 145, 0])
    cube([1, 1, 1.61]);
  translate([46, 145, 0])
    cube([1, 1, 1.61]);
  translate([47, 145, 0])
    cube([1, 1, 1.61]);
  translate([48, 145, 0])
    cube([1, 1, 1.57]);
  translate([49, 145, 0])
    cube([1, 1, 1.61]);
  translate([50, 145, 0])
    cube([1, 1, 1.65]);
  translate([51, 145, 0])
    cube([1, 1, 7.76]);
  translate([52, 145, 0])
    cube([1, 1, 7.53]);
  translate([53, 145, 0])
    cube([1, 1, 6.39]);
  translate([54, 145, 0])
    cube([1, 1, 5.37]);
  translate([55, 145, 0])
    cube([1, 1, 3.45]);
  translate([56, 145, 0])
    cube([1, 1, 3.76]);
  translate([57, 145, 0])
    cube([1, 1, 4.12]);
  translate([58, 145, 0])
    cube([1, 1, 4.63]);
  translate([59, 145, 0])
    cube([1, 1, 4.94]);
  translate([60, 145, 0])
    cube([1, 1, 5.14]);
  translate([61, 145, 0])
    cube([1, 1, 5.29]);
  translate([62, 145, 0])
    cube([1, 1, 5.53]);
  translate([63, 145, 0])
    cube([1, 1, 5.61]);
  translate([64, 145, 0])
    cube([1, 1, 5.61]);
  translate([65, 145, 0])
    cube([1, 1, 5.76]);
  translate([66, 145, 0])
    cube([1, 1, 5.73]);
  translate([67, 145, 0])
    cube([1, 1, 5.65]);
  translate([68, 145, 0])
    cube([1, 1, 5.49]);
  translate([69, 145, 0])
    cube([1, 1, 5.29]);
  translate([70, 145, 0])
    cube([1, 1, 5.22]);
  translate([71, 145, 0])
    cube([1, 1, 5.14]);
  translate([72, 145, 0])
    cube([1, 1, 5.41]);
  translate([73, 145, 0])
    cube([1, 1, 5.57]);
  translate([74, 145, 0])
    cube([1, 1, 5.69]);
  translate([75, 145, 0])
    cube([1, 1, 5.61]);
  translate([76, 145, 0])
    cube([1, 1, 5.45]);
  translate([77, 145, 0])
    cube([1, 1, 5.33]);
  translate([78, 145, 0])
    cube([1, 1, 5.14]);
  translate([79, 145, 0])
    cube([1, 1, 4.82]);
  translate([80, 145, 0])
    cube([1, 1, 3.65]);
  translate([81, 145, 0])
    cube([1, 1, 1.33]);
  translate([82, 145, 0])
    cube([1, 1, 1.49]);
  translate([83, 145, 0])
    cube([1, 1, 1.06]);
  translate([84, 145, 0])
    cube([1, 1, 0.90]);
  translate([85, 145, 0])
    cube([1, 1, 1.10]);
  translate([86, 145, 0])
    cube([1, 1, 1.14]);
  translate([87, 145, 0])
    cube([1, 1, 0.98]);
  translate([88, 145, 0])
    cube([1, 1, 0.94]);
  translate([89, 145, 0])
    cube([1, 1, 1.65]);
  translate([90, 145, 0])
    cube([1, 1, 1.69]);
  translate([91, 145, 0])
    cube([1, 1, 1.65]);
  translate([92, 145, 0])
    cube([1, 1, 1.84]);
  translate([93, 145, 0])
    cube([1, 1, 2.12]);
  translate([94, 145, 0])
    cube([1, 1, 1.80]);
  translate([95, 145, 0])
    cube([1, 1, 1.73]);
  translate([96, 145, 0])
    cube([1, 1, 2.12]);
  translate([97, 145, 0])
    cube([1, 1, 2.04]);
  translate([98, 145, 0])
    cube([1, 1, 1.88]);
  translate([99, 145, 0])
    cube([1, 1, 1.92]);
  translate([100, 145, 0])
    cube([1, 1, 2.35]);
  translate([101, 145, 0])
    cube([1, 1, 2.59]);
  translate([102, 145, 0])
    cube([1, 1, 2.16]);
  translate([103, 145, 0])
    cube([1, 1, 1.80]);
  translate([104, 145, 0])
    cube([1, 1, 1.96]);
  translate([105, 145, 0])
    cube([1, 1, 1.61]);
  translate([106, 145, 0])
    cube([1, 1, 1.25]);
  translate([107, 145, 0])
    cube([1, 1, 1.45]);
  translate([108, 145, 0])
    cube([1, 1, 1.33]);
  translate([109, 145, 0])
    cube([1, 1, 1.76]);
  translate([110, 145, 0])
    cube([1, 1, 1.73]);
  translate([111, 145, 0])
    cube([1, 1, 1.65]);
  translate([112, 145, 0])
    cube([1, 1, 2.08]);
  translate([113, 145, 0])
    cube([1, 1, 1.80]);
  translate([114, 145, 0])
    cube([1, 1, 1.57]);
  translate([115, 145, 0])
    cube([1, 1, 2.31]);
  translate([116, 145, 0])
    cube([1, 1, 2.71]);
  translate([117, 145, 0])
    cube([1, 1, 2.04]);
  translate([118, 145, 0])
    cube([1, 1, 3.22]);
  translate([119, 145, 0])
    cube([1, 1, 3.53]);
  translate([120, 145, 0])
    cube([1, 1, 2.78]);
  translate([121, 145, 0])
    cube([1, 1, 3.69]);
  translate([122, 145, 0])
    cube([1, 1, 5.76]);
  translate([123, 145, 0])
    cube([1, 1, 6.04]);
  translate([124, 145, 0])
    cube([1, 1, 6.20]);
  translate([125, 145, 0])
    cube([1, 1, 6.71]);
  translate([126, 145, 0])
    cube([1, 1, 6.31]);
  translate([127, 145, 0])
    cube([1, 1, 5.53]);
  translate([128, 145, 0])
    cube([1, 1, 5.45]);
  translate([129, 145, 0])
    cube([1, 1, 5.45]);
  translate([130, 145, 0])
    cube([1, 1, 5.45]);
  translate([131, 145, 0])
    cube([1, 1, 5.49]);
  translate([132, 145, 0])
    cube([1, 1, 5.57]);
  translate([133, 145, 0])
    cube([1, 1, 5.88]);
  translate([134, 145, 0])
    cube([1, 1, 6.04]);
  translate([135, 145, 0])
    cube([1, 1, 6.59]);
  translate([136, 145, 0])
    cube([1, 1, 7.06]);
  translate([137, 145, 0])
    cube([1, 1, 7.10]);
  translate([138, 145, 0])
    cube([1, 1, 7.22]);
  translate([139, 145, 0])
    cube([1, 1, 5.65]);
  translate([140, 145, 0])
    cube([1, 1, 5.69]);
  translate([141, 145, 0])
    cube([1, 1, 5.57]);
  translate([142, 145, 0])
    cube([1, 1, 5.14]);
  translate([143, 145, 0])
    cube([1, 1, 5.10]);
  translate([144, 145, 0])
    cube([1, 1, 5.84]);
  translate([145, 145, 0])
    cube([1, 1, 6.78]);
  translate([146, 145, 0])
    cube([1, 1, 7.53]);
  translate([147, 145, 0])
    cube([1, 1, 1.45]);
  translate([148, 145, 0])
    cube([1, 1, 1.45]);
  translate([149, 145, 0])
    cube([1, 1, 1.49]);
  translate([150, 145, 0])
    cube([1, 1, 1.45]);
  translate([151, 145, 0])
    cube([1, 1, 1.45]);
  translate([152, 145, 0])
    cube([1, 1, 1.45]);
  translate([153, 145, 0])
    cube([1, 1, 1.49]);
  translate([154, 145, 0])
    cube([1, 1, 1.49]);
  translate([155, 145, 0])
    cube([1, 1, 1.49]);
  translate([156, 145, 0])
    cube([1, 1, 1.49]);
  translate([157, 145, 0])
    cube([1, 1, 1.49]);
  translate([158, 145, 0])
    cube([1, 1, 1.49]);
  translate([159, 145, 0])
    cube([1, 1, 1.45]);
  translate([160, 145, 0])
    cube([1, 1, 1.49]);
  translate([161, 145, 0])
    cube([1, 1, 1.49]);
  translate([162, 145, 0])
    cube([1, 1, 1.49]);
  translate([163, 145, 0])
    cube([1, 1, 1.53]);
  translate([164, 145, 0])
    cube([1, 1, 1.53]);
  translate([165, 145, 0])
    cube([1, 1, 1.53]);
  translate([166, 145, 0])
    cube([1, 1, 1.49]);
  translate([167, 145, 0])
    cube([1, 1, 1.53]);
  translate([168, 145, 0])
    cube([1, 1, 1.53]);
  translate([169, 145, 0])
    cube([1, 1, 1.53]);
  translate([170, 145, 0])
    cube([1, 1, 1.53]);
  translate([171, 145, 0])
    cube([1, 1, 1.53]);
  translate([172, 145, 0])
    cube([1, 1, 1.53]);
  translate([173, 145, 0])
    cube([1, 1, 1.57]);
  translate([174, 145, 0])
    cube([1, 1, 1.53]);
  translate([175, 145, 0])
    cube([1, 1, 1.53]);
  translate([176, 145, 0])
    cube([1, 1, 1.57]);
  translate([177, 145, 0])
    cube([1, 1, 1.57]);
  translate([178, 145, 0])
    cube([1, 1, 1.57]);
  translate([179, 145, 0])
    cube([1, 1, 1.57]);
  translate([180, 145, 0])
    cube([1, 1, 1.57]);
  translate([181, 145, 0])
    cube([1, 1, 1.57]);
  translate([182, 145, 0])
    cube([1, 1, 1.53]);
  translate([183, 145, 0])
    cube([1, 1, 1.57]);
  translate([184, 145, 0])
    cube([1, 1, 1.57]);
  translate([185, 145, 0])
    cube([1, 1, 1.57]);
  translate([186, 145, 0])
    cube([1, 1, 1.57]);
  translate([187, 145, 0])
    cube([1, 1, 1.57]);
  translate([188, 145, 0])
    cube([1, 1, 1.57]);
  translate([189, 145, 0])
    cube([1, 1, 1.57]);
  translate([190, 145, 0])
    cube([1, 1, 1.57]);
  translate([191, 145, 0])
    cube([1, 1, 1.57]);
  translate([192, 145, 0])
    cube([1, 1, 1.57]);
  translate([193, 145, 0])
    cube([1, 1, 1.57]);
  translate([194, 145, 0])
    cube([1, 1, 1.57]);
  translate([195, 145, 0])
    cube([1, 1, 1.57]);
  translate([196, 145, 0])
    cube([1, 1, 1.57]);
  translate([197, 145, 0])
    cube([1, 1, 1.57]);
  translate([198, 145, 0])
    cube([1, 1, 1.61]);
  translate([199, 145, 0])
    cube([1, 1, 1.61]);
  translate([200, 145, 0])
    cube([1, 1, 1.61]);
  translate([201, 145, 0])
    cube([1, 1, 1.61]);
  translate([202, 145, 0])
    cube([1, 1, 1.61]);
  translate([203, 145, 0])
    cube([1, 1, 1.61]);
  translate([204, 145, 0])
    cube([1, 1, 1.61]);
  translate([205, 145, 0])
    cube([1, 1, 1.61]);
  translate([206, 145, 0])
    cube([1, 1, 1.61]);
  translate([207, 145, 0])
    cube([1, 1, 1.61]);
  translate([208, 145, 0])
    cube([1, 1, 1.61]);
  translate([209, 145, 0])
    cube([1, 1, 1.61]);
  translate([210, 145, 0])
    cube([1, 1, 1.61]);
  translate([211, 145, 0])
    cube([1, 1, 1.61]);
  translate([212, 145, 0])
    cube([1, 1, 1.61]);
  translate([213, 145, 0])
    cube([1, 1, 1.61]);
  translate([214, 145, 0])
    cube([1, 1, 1.61]);
  translate([215, 145, 0])
    cube([1, 1, 1.61]);
  translate([216, 145, 0])
    cube([1, 1, 1.61]);
  translate([217, 145, 0])
    cube([1, 1, 1.61]);
  translate([218, 145, 0])
    cube([1, 1, 1.61]);
  translate([219, 145, 0])
    cube([1, 1, 1.61]);
  translate([220, 145, 0])
    cube([1, 1, 1.61]);
  translate([221, 145, 0])
    cube([1, 1, 1.61]);
  translate([222, 145, 0])
    cube([1, 1, 1.61]);
  translate([223, 145, 0])
    cube([1, 1, 1.61]);
  translate([224, 145, 0])
    cube([1, 1, 1.61]);
  translate([225, 145, 0])
    cube([1, 1, 1.57]);
  translate([226, 145, 0])
    cube([1, 1, 1.57]);
  translate([227, 145, 0])
    cube([1, 1, 1.53]);
  translate([228, 145, 0])
    cube([1, 1, 1.61]);
  translate([229, 145, 0])
    cube([1, 1, 1.61]);
  translate([230, 145, 0])
    cube([1, 1, 1.53]);
  translate([231, 145, 0])
    cube([1, 1, 1.65]);
  translate([232, 145, 0])
    cube([1, 1, 1.57]);
  translate([233, 145, 0])
    cube([1, 1, 1.57]);
  translate([234, 145, 0])
    cube([1, 1, 1.57]);
  translate([235, 145, 0])
    cube([1, 1, 1.57]);
  translate([236, 145, 0])
    cube([1, 1, 1.57]);
  translate([237, 145, 0])
    cube([1, 1, 1.57]);
  translate([238, 145, 0])
    cube([1, 1, 1.57]);
  translate([239, 145, 0])
    cube([1, 1, 1.57]);
  translate([240, 145, 0])
    cube([1, 1, 1.57]);
  translate([241, 145, 0])
    cube([1, 1, 1.57]);
  translate([242, 145, 0])
    cube([1, 1, 1.57]);
  translate([243, 145, 0])
    cube([1, 1, 1.57]);
  translate([244, 145, 0])
    cube([1, 1, 1.57]);
  translate([245, 145, 0])
    cube([1, 1, 1.57]);
  translate([246, 145, 0])
    cube([1, 1, 1.53]);
  translate([0, 146, 0])
    cube([1, 1, 1.76]);
  translate([1, 146, 0])
    cube([1, 1, 1.73]);
  translate([2, 146, 0])
    cube([1, 1, 1.73]);
  translate([3, 146, 0])
    cube([1, 1, 1.73]);
  translate([4, 146, 0])
    cube([1, 1, 1.73]);
  translate([5, 146, 0])
    cube([1, 1, 1.73]);
  translate([6, 146, 0])
    cube([1, 1, 1.73]);
  translate([7, 146, 0])
    cube([1, 1, 1.73]);
  translate([8, 146, 0])
    cube([1, 1, 1.73]);
  translate([9, 146, 0])
    cube([1, 1, 1.73]);
  translate([10, 146, 0])
    cube([1, 1, 1.73]);
  translate([11, 146, 0])
    cube([1, 1, 1.73]);
  translate([12, 146, 0])
    cube([1, 1, 1.73]);
  translate([13, 146, 0])
    cube([1, 1, 1.73]);
  translate([14, 146, 0])
    cube([1, 1, 1.73]);
  translate([15, 146, 0])
    cube([1, 1, 1.73]);
  translate([16, 146, 0])
    cube([1, 1, 1.73]);
  translate([17, 146, 0])
    cube([1, 1, 1.69]);
  translate([18, 146, 0])
    cube([1, 1, 1.69]);
  translate([19, 146, 0])
    cube([1, 1, 1.69]);
  translate([20, 146, 0])
    cube([1, 1, 1.65]);
  translate([21, 146, 0])
    cube([1, 1, 1.69]);
  translate([22, 146, 0])
    cube([1, 1, 1.73]);
  translate([23, 146, 0])
    cube([1, 1, 1.73]);
  translate([24, 146, 0])
    cube([1, 1, 1.69]);
  translate([25, 146, 0])
    cube([1, 1, 1.69]);
  translate([26, 146, 0])
    cube([1, 1, 1.69]);
  translate([27, 146, 0])
    cube([1, 1, 1.69]);
  translate([28, 146, 0])
    cube([1, 1, 1.69]);
  translate([29, 146, 0])
    cube([1, 1, 1.69]);
  translate([30, 146, 0])
    cube([1, 1, 1.61]);
  translate([31, 146, 0])
    cube([1, 1, 1.61]);
  translate([32, 146, 0])
    cube([1, 1, 1.65]);
  translate([33, 146, 0])
    cube([1, 1, 1.69]);
  translate([34, 146, 0])
    cube([1, 1, 1.69]);
  translate([35, 146, 0])
    cube([1, 1, 1.65]);
  translate([36, 146, 0])
    cube([1, 1, 1.65]);
  translate([37, 146, 0])
    cube([1, 1, 1.65]);
  translate([38, 146, 0])
    cube([1, 1, 1.65]);
  translate([39, 146, 0])
    cube([1, 1, 1.65]);
  translate([40, 146, 0])
    cube([1, 1, 1.61]);
  translate([41, 146, 0])
    cube([1, 1, 1.61]);
  translate([42, 146, 0])
    cube([1, 1, 1.61]);
  translate([43, 146, 0])
    cube([1, 1, 1.61]);
  translate([44, 146, 0])
    cube([1, 1, 1.61]);
  translate([45, 146, 0])
    cube([1, 1, 1.61]);
  translate([46, 146, 0])
    cube([1, 1, 1.61]);
  translate([47, 146, 0])
    cube([1, 1, 1.61]);
  translate([48, 146, 0])
    cube([1, 1, 1.61]);
  translate([49, 146, 0])
    cube([1, 1, 1.61]);
  translate([50, 146, 0])
    cube([1, 1, 1.61]);
  translate([51, 146, 0])
    cube([1, 1, 7.49]);
  translate([52, 146, 0])
    cube([1, 1, 7.61]);
  translate([53, 146, 0])
    cube([1, 1, 6.47]);
  translate([54, 146, 0])
    cube([1, 1, 5.49]);
  translate([55, 146, 0])
    cube([1, 1, 4.00]);
  translate([56, 146, 0])
    cube([1, 1, 3.49]);
  translate([57, 146, 0])
    cube([1, 1, 4.04]);
  translate([58, 146, 0])
    cube([1, 1, 4.47]);
  translate([59, 146, 0])
    cube([1, 1, 4.90]);
  translate([60, 146, 0])
    cube([1, 1, 5.14]);
  translate([61, 146, 0])
    cube([1, 1, 5.37]);
  translate([62, 146, 0])
    cube([1, 1, 5.33]);
  translate([63, 146, 0])
    cube([1, 1, 5.49]);
  translate([64, 146, 0])
    cube([1, 1, 5.61]);
  translate([65, 146, 0])
    cube([1, 1, 5.76]);
  translate([66, 146, 0])
    cube([1, 1, 5.80]);
  translate([67, 146, 0])
    cube([1, 1, 5.73]);
  translate([68, 146, 0])
    cube([1, 1, 5.61]);
  translate([69, 146, 0])
    cube([1, 1, 5.41]);
  translate([70, 146, 0])
    cube([1, 1, 5.25]);
  translate([71, 146, 0])
    cube([1, 1, 5.22]);
  translate([72, 146, 0])
    cube([1, 1, 5.10]);
  translate([73, 146, 0])
    cube([1, 1, 5.69]);
  translate([74, 146, 0])
    cube([1, 1, 5.80]);
  translate([75, 146, 0])
    cube([1, 1, 5.69]);
  translate([76, 146, 0])
    cube([1, 1, 5.57]);
  translate([77, 146, 0])
    cube([1, 1, 5.45]);
  translate([78, 146, 0])
    cube([1, 1, 5.18]);
  translate([79, 146, 0])
    cube([1, 1, 5.02]);
  translate([80, 146, 0])
    cube([1, 1, 4.20]);
  translate([81, 146, 0])
    cube([1, 1, 2.24]);
  translate([82, 146, 0])
    cube([1, 1, 1.14]);
  translate([83, 146, 0])
    cube([1, 1, 1.18]);
  translate([84, 146, 0])
    cube([1, 1, 1.96]);
  translate([85, 146, 0])
    cube([1, 1, 2.27]);
  translate([86, 146, 0])
    cube([1, 1, 1.53]);
  translate([87, 146, 0])
    cube([1, 1, 0.90]);
  translate([88, 146, 0])
    cube([1, 1, 1.29]);
  translate([89, 146, 0])
    cube([1, 1, 1.41]);
  translate([90, 146, 0])
    cube([1, 1, 1.49]);
  translate([91, 146, 0])
    cube([1, 1, 1.49]);
  translate([92, 146, 0])
    cube([1, 1, 1.61]);
  translate([93, 146, 0])
    cube([1, 1, 2.20]);
  translate([94, 146, 0])
    cube([1, 1, 2.51]);
  translate([95, 146, 0])
    cube([1, 1, 2.63]);
  translate([96, 146, 0])
    cube([1, 1, 2.47]);
  translate([97, 146, 0])
    cube([1, 1, 2.20]);
  translate([98, 146, 0])
    cube([1, 1, 2.16]);
  translate([99, 146, 0])
    cube([1, 1, 2.27]);
  translate([100, 146, 0])
    cube([1, 1, 2.16]);
  translate([101, 146, 0])
    cube([1, 1, 2.24]);
  translate([102, 146, 0])
    cube([1, 1, 2.35]);
  translate([103, 146, 0])
    cube([1, 1, 2.47]);
  translate([104, 146, 0])
    cube([1, 1, 2.47]);
  translate([105, 146, 0])
    cube([1, 1, 2.39]);
  translate([106, 146, 0])
    cube([1, 1, 2.43]);
  translate([107, 146, 0])
    cube([1, 1, 2.39]);
  translate([108, 146, 0])
    cube([1, 1, 2.43]);
  translate([109, 146, 0])
    cube([1, 1, 2.71]);
  translate([110, 146, 0])
    cube([1, 1, 2.67]);
  translate([111, 146, 0])
    cube([1, 1, 2.04]);
  translate([112, 146, 0])
    cube([1, 1, 1.92]);
  translate([113, 146, 0])
    cube([1, 1, 2.35]);
  translate([114, 146, 0])
    cube([1, 1, 3.41]);
  translate([115, 146, 0])
    cube([1, 1, 3.22]);
  translate([116, 146, 0])
    cube([1, 1, 2.24]);
  translate([117, 146, 0])
    cube([1, 1, 2.59]);
  translate([118, 146, 0])
    cube([1, 1, 3.92]);
  translate([119, 146, 0])
    cube([1, 1, 5.53]);
  translate([120, 146, 0])
    cube([1, 1, 6.04]);
  translate([121, 146, 0])
    cube([1, 1, 5.76]);
  translate([122, 146, 0])
    cube([1, 1, 5.69]);
  translate([123, 146, 0])
    cube([1, 1, 5.92]);
  translate([124, 146, 0])
    cube([1, 1, 6.51]);
  translate([125, 146, 0])
    cube([1, 1, 6.75]);
  translate([126, 146, 0])
    cube([1, 1, 6.31]);
  translate([127, 146, 0])
    cube([1, 1, 5.49]);
  translate([128, 146, 0])
    cube([1, 1, 5.57]);
  translate([129, 146, 0])
    cube([1, 1, 5.37]);
  translate([130, 146, 0])
    cube([1, 1, 5.37]);
  translate([131, 146, 0])
    cube([1, 1, 5.57]);
  translate([132, 146, 0])
    cube([1, 1, 5.73]);
  translate([133, 146, 0])
    cube([1, 1, 5.96]);
  translate([134, 146, 0])
    cube([1, 1, 6.00]);
  translate([135, 146, 0])
    cube([1, 1, 6.35]);
  translate([136, 146, 0])
    cube([1, 1, 6.94]);
  translate([137, 146, 0])
    cube([1, 1, 6.90]);
  translate([138, 146, 0])
    cube([1, 1, 6.75]);
  translate([139, 146, 0])
    cube([1, 1, 5.88]);
  translate([140, 146, 0])
    cube([1, 1, 5.92]);
  translate([141, 146, 0])
    cube([1, 1, 5.69]);
  translate([142, 146, 0])
    cube([1, 1, 5.25]);
  translate([143, 146, 0])
    cube([1, 1, 5.49]);
  translate([144, 146, 0])
    cube([1, 1, 6.16]);
  translate([145, 146, 0])
    cube([1, 1, 7.25]);
  translate([146, 146, 0])
    cube([1, 1, 7.45]);
  translate([147, 146, 0])
    cube([1, 1, 7.06]);
  translate([148, 146, 0])
    cube([1, 1, 2.16]);
  translate([149, 146, 0])
    cube([1, 1, 0.63]);
  translate([150, 146, 0])
    cube([1, 1, 1.45]);
  translate([151, 146, 0])
    cube([1, 1, 1.37]);
  translate([152, 146, 0])
    cube([1, 1, 1.49]);
  translate([153, 146, 0])
    cube([1, 1, 1.49]);
  translate([154, 146, 0])
    cube([1, 1, 1.49]);
  translate([155, 146, 0])
    cube([1, 1, 1.49]);
  translate([156, 146, 0])
    cube([1, 1, 1.49]);
  translate([157, 146, 0])
    cube([1, 1, 1.53]);
  translate([158, 146, 0])
    cube([1, 1, 1.49]);
  translate([159, 146, 0])
    cube([1, 1, 1.49]);
  translate([160, 146, 0])
    cube([1, 1, 1.53]);
  translate([161, 146, 0])
    cube([1, 1, 1.49]);
  translate([162, 146, 0])
    cube([1, 1, 1.49]);
  translate([163, 146, 0])
    cube([1, 1, 1.53]);
  translate([164, 146, 0])
    cube([1, 1, 1.53]);
  translate([165, 146, 0])
    cube([1, 1, 1.53]);
  translate([166, 146, 0])
    cube([1, 1, 1.53]);
  translate([167, 146, 0])
    cube([1, 1, 1.53]);
  translate([168, 146, 0])
    cube([1, 1, 1.53]);
  translate([169, 146, 0])
    cube([1, 1, 1.53]);
  translate([170, 146, 0])
    cube([1, 1, 1.57]);
  translate([171, 146, 0])
    cube([1, 1, 1.57]);
  translate([172, 146, 0])
    cube([1, 1, 1.57]);
  translate([173, 146, 0])
    cube([1, 1, 1.57]);
  translate([174, 146, 0])
    cube([1, 1, 1.53]);
  translate([175, 146, 0])
    cube([1, 1, 1.57]);
  translate([176, 146, 0])
    cube([1, 1, 1.57]);
  translate([177, 146, 0])
    cube([1, 1, 1.57]);
  translate([178, 146, 0])
    cube([1, 1, 1.57]);
  translate([179, 146, 0])
    cube([1, 1, 1.57]);
  translate([180, 146, 0])
    cube([1, 1, 1.57]);
  translate([181, 146, 0])
    cube([1, 1, 1.57]);
  translate([182, 146, 0])
    cube([1, 1, 1.57]);
  translate([183, 146, 0])
    cube([1, 1, 1.57]);
  translate([184, 146, 0])
    cube([1, 1, 1.57]);
  translate([185, 146, 0])
    cube([1, 1, 1.57]);
  translate([186, 146, 0])
    cube([1, 1, 1.61]);
  translate([187, 146, 0])
    cube([1, 1, 1.61]);
  translate([188, 146, 0])
    cube([1, 1, 1.57]);
  translate([189, 146, 0])
    cube([1, 1, 1.61]);
  translate([190, 146, 0])
    cube([1, 1, 1.57]);
  translate([191, 146, 0])
    cube([1, 1, 1.57]);
  translate([192, 146, 0])
    cube([1, 1, 1.57]);
  translate([193, 146, 0])
    cube([1, 1, 1.61]);
  translate([194, 146, 0])
    cube([1, 1, 1.61]);
  translate([195, 146, 0])
    cube([1, 1, 1.61]);
  translate([196, 146, 0])
    cube([1, 1, 1.57]);
  translate([197, 146, 0])
    cube([1, 1, 1.57]);
  translate([198, 146, 0])
    cube([1, 1, 1.61]);
  translate([199, 146, 0])
    cube([1, 1, 1.61]);
  translate([200, 146, 0])
    cube([1, 1, 1.61]);
  translate([201, 146, 0])
    cube([1, 1, 1.61]);
  translate([202, 146, 0])
    cube([1, 1, 1.61]);
  translate([203, 146, 0])
    cube([1, 1, 1.61]);
  translate([204, 146, 0])
    cube([1, 1, 1.61]);
  translate([205, 146, 0])
    cube([1, 1, 1.61]);
  translate([206, 146, 0])
    cube([1, 1, 1.61]);
  translate([207, 146, 0])
    cube([1, 1, 1.61]);
  translate([208, 146, 0])
    cube([1, 1, 1.61]);
  translate([209, 146, 0])
    cube([1, 1, 1.61]);
  translate([210, 146, 0])
    cube([1, 1, 1.61]);
  translate([211, 146, 0])
    cube([1, 1, 1.61]);
  translate([212, 146, 0])
    cube([1, 1, 1.61]);
  translate([213, 146, 0])
    cube([1, 1, 1.61]);
  translate([214, 146, 0])
    cube([1, 1, 1.61]);
  translate([215, 146, 0])
    cube([1, 1, 1.61]);
  translate([216, 146, 0])
    cube([1, 1, 1.61]);
  translate([217, 146, 0])
    cube([1, 1, 1.61]);
  translate([218, 146, 0])
    cube([1, 1, 1.61]);
  translate([219, 146, 0])
    cube([1, 1, 1.61]);
  translate([220, 146, 0])
    cube([1, 1, 1.61]);
  translate([221, 146, 0])
    cube([1, 1, 1.61]);
  translate([222, 146, 0])
    cube([1, 1, 1.61]);
  translate([223, 146, 0])
    cube([1, 1, 1.61]);
  translate([224, 146, 0])
    cube([1, 1, 1.61]);
  translate([225, 146, 0])
    cube([1, 1, 1.61]);
  translate([226, 146, 0])
    cube([1, 1, 1.61]);
  translate([227, 146, 0])
    cube([1, 1, 1.61]);
  translate([228, 146, 0])
    cube([1, 1, 1.61]);
  translate([229, 146, 0])
    cube([1, 1, 1.61]);
  translate([230, 146, 0])
    cube([1, 1, 1.61]);
  translate([231, 146, 0])
    cube([1, 1, 1.61]);
  translate([232, 146, 0])
    cube([1, 1, 1.57]);
  translate([233, 146, 0])
    cube([1, 1, 1.57]);
  translate([234, 146, 0])
    cube([1, 1, 1.65]);
  translate([235, 146, 0])
    cube([1, 1, 1.61]);
  translate([236, 146, 0])
    cube([1, 1, 1.61]);
  translate([237, 146, 0])
    cube([1, 1, 1.61]);
  translate([238, 146, 0])
    cube([1, 1, 1.61]);
  translate([239, 146, 0])
    cube([1, 1, 1.61]);
  translate([240, 146, 0])
    cube([1, 1, 1.57]);
  translate([241, 146, 0])
    cube([1, 1, 1.57]);
  translate([242, 146, 0])
    cube([1, 1, 1.61]);
  translate([243, 146, 0])
    cube([1, 1, 1.61]);
  translate([244, 146, 0])
    cube([1, 1, 1.57]);
  translate([245, 146, 0])
    cube([1, 1, 1.57]);
  translate([246, 146, 0])
    cube([1, 1, 1.57]);
  translate([0, 147, 0])
    cube([1, 1, 1.76]);
  translate([1, 147, 0])
    cube([1, 1, 1.80]);
  translate([2, 147, 0])
    cube([1, 1, 1.80]);
  translate([3, 147, 0])
    cube([1, 1, 1.73]);
  translate([4, 147, 0])
    cube([1, 1, 1.80]);
  translate([5, 147, 0])
    cube([1, 1, 1.80]);
  translate([6, 147, 0])
    cube([1, 1, 1.76]);
  translate([7, 147, 0])
    cube([1, 1, 1.76]);
  translate([8, 147, 0])
    cube([1, 1, 1.80]);
  translate([9, 147, 0])
    cube([1, 1, 1.73]);
  translate([10, 147, 0])
    cube([1, 1, 1.73]);
  translate([11, 147, 0])
    cube([1, 1, 1.73]);
  translate([12, 147, 0])
    cube([1, 1, 1.73]);
  translate([13, 147, 0])
    cube([1, 1, 1.73]);
  translate([14, 147, 0])
    cube([1, 1, 1.73]);
  translate([15, 147, 0])
    cube([1, 1, 1.73]);
  translate([16, 147, 0])
    cube([1, 1, 1.73]);
  translate([17, 147, 0])
    cube([1, 1, 1.69]);
  translate([18, 147, 0])
    cube([1, 1, 1.69]);
  translate([19, 147, 0])
    cube([1, 1, 1.73]);
  translate([20, 147, 0])
    cube([1, 1, 1.69]);
  translate([21, 147, 0])
    cube([1, 1, 1.76]);
  translate([22, 147, 0])
    cube([1, 1, 1.73]);
  translate([23, 147, 0])
    cube([1, 1, 1.73]);
  translate([24, 147, 0])
    cube([1, 1, 1.73]);
  translate([25, 147, 0])
    cube([1, 1, 1.69]);
  translate([26, 147, 0])
    cube([1, 1, 1.69]);
  translate([27, 147, 0])
    cube([1, 1, 1.69]);
  translate([28, 147, 0])
    cube([1, 1, 1.69]);
  translate([29, 147, 0])
    cube([1, 1, 1.69]);
  translate([30, 147, 0])
    cube([1, 1, 1.65]);
  translate([31, 147, 0])
    cube([1, 1, 1.65]);
  translate([32, 147, 0])
    cube([1, 1, 1.69]);
  translate([33, 147, 0])
    cube([1, 1, 1.69]);
  translate([34, 147, 0])
    cube([1, 1, 1.69]);
  translate([35, 147, 0])
    cube([1, 1, 1.65]);
  translate([36, 147, 0])
    cube([1, 1, 1.69]);
  translate([37, 147, 0])
    cube([1, 1, 1.69]);
  translate([38, 147, 0])
    cube([1, 1, 1.65]);
  translate([39, 147, 0])
    cube([1, 1, 1.65]);
  translate([40, 147, 0])
    cube([1, 1, 1.61]);
  translate([41, 147, 0])
    cube([1, 1, 1.61]);
  translate([42, 147, 0])
    cube([1, 1, 1.61]);
  translate([43, 147, 0])
    cube([1, 1, 1.65]);
  translate([44, 147, 0])
    cube([1, 1, 1.61]);
  translate([45, 147, 0])
    cube([1, 1, 1.61]);
  translate([46, 147, 0])
    cube([1, 1, 1.61]);
  translate([47, 147, 0])
    cube([1, 1, 1.61]);
  translate([48, 147, 0])
    cube([1, 1, 1.61]);
  translate([49, 147, 0])
    cube([1, 1, 1.61]);
  translate([50, 147, 0])
    cube([1, 1, 1.61]);
  translate([51, 147, 0])
    cube([1, 1, 2.71]);
  translate([52, 147, 0])
    cube([1, 1, 7.41]);
  translate([53, 147, 0])
    cube([1, 1, 6.39]);
  translate([54, 147, 0])
    cube([1, 1, 5.53]);
  translate([55, 147, 0])
    cube([1, 1, 4.59]);
  translate([56, 147, 0])
    cube([1, 1, 3.18]);
  translate([57, 147, 0])
    cube([1, 1, 3.88]);
  translate([58, 147, 0])
    cube([1, 1, 4.47]);
  translate([59, 147, 0])
    cube([1, 1, 4.78]);
  translate([60, 147, 0])
    cube([1, 1, 5.06]);
  translate([61, 147, 0])
    cube([1, 1, 5.22]);
  translate([62, 147, 0])
    cube([1, 1, 5.25]);
  translate([63, 147, 0])
    cube([1, 1, 5.37]);
  translate([64, 147, 0])
    cube([1, 1, 5.45]);
  translate([65, 147, 0])
    cube([1, 1, 5.69]);
  translate([66, 147, 0])
    cube([1, 1, 5.84]);
  translate([67, 147, 0])
    cube([1, 1, 5.84]);
  translate([68, 147, 0])
    cube([1, 1, 5.69]);
  translate([69, 147, 0])
    cube([1, 1, 5.53]);
  translate([70, 147, 0])
    cube([1, 1, 5.37]);
  translate([71, 147, 0])
    cube([1, 1, 5.33]);
  translate([72, 147, 0])
    cube([1, 1, 5.22]);
  translate([73, 147, 0])
    cube([1, 1, 5.41]);
  translate([74, 147, 0])
    cube([1, 1, 5.80]);
  translate([75, 147, 0])
    cube([1, 1, 5.73]);
  translate([76, 147, 0])
    cube([1, 1, 5.57]);
  translate([77, 147, 0])
    cube([1, 1, 5.45]);
  translate([78, 147, 0])
    cube([1, 1, 5.33]);
  translate([79, 147, 0])
    cube([1, 1, 5.10]);
  translate([80, 147, 0])
    cube([1, 1, 4.35]);
  translate([81, 147, 0])
    cube([1, 1, 3.53]);
  translate([82, 147, 0])
    cube([1, 1, 2.82]);
  translate([83, 147, 0])
    cube([1, 1, 0.82]);
  translate([84, 147, 0])
    cube([1, 1, 1.37]);
  translate([85, 147, 0])
    cube([1, 1, 2.12]);
  translate([86, 147, 0])
    cube([1, 1, 1.45]);
  translate([87, 147, 0])
    cube([1, 1, 1.33]);
  translate([88, 147, 0])
    cube([1, 1, 1.73]);
  translate([89, 147, 0])
    cube([1, 1, 1.76]);
  translate([90, 147, 0])
    cube([1, 1, 1.53]);
  translate([91, 147, 0])
    cube([1, 1, 1.45]);
  translate([92, 147, 0])
    cube([1, 1, 1.76]);
  translate([93, 147, 0])
    cube([1, 1, 2.16]);
  translate([94, 147, 0])
    cube([1, 1, 2.04]);
  translate([95, 147, 0])
    cube([1, 1, 2.20]);
  translate([96, 147, 0])
    cube([1, 1, 2.71]);
  translate([97, 147, 0])
    cube([1, 1, 2.59]);
  translate([98, 147, 0])
    cube([1, 1, 2.55]);
  translate([99, 147, 0])
    cube([1, 1, 2.55]);
  translate([100, 147, 0])
    cube([1, 1, 2.82]);
  translate([101, 147, 0])
    cube([1, 1, 2.67]);
  translate([102, 147, 0])
    cube([1, 1, 3.06]);
  translate([103, 147, 0])
    cube([1, 1, 2.98]);
  translate([104, 147, 0])
    cube([1, 1, 3.22]);
  translate([105, 147, 0])
    cube([1, 1, 3.14]);
  translate([106, 147, 0])
    cube([1, 1, 3.45]);
  translate([107, 147, 0])
    cube([1, 1, 2.90]);
  translate([108, 147, 0])
    cube([1, 1, 2.98]);
  translate([109, 147, 0])
    cube([1, 1, 2.59]);
  translate([110, 147, 0])
    cube([1, 1, 2.27]);
  translate([111, 147, 0])
    cube([1, 1, 1.96]);
  translate([112, 147, 0])
    cube([1, 1, 2.98]);
  translate([113, 147, 0])
    cube([1, 1, 3.14]);
  translate([114, 147, 0])
    cube([1, 1, 3.45]);
  translate([115, 147, 0])
    cube([1, 1, 4.94]);
  translate([116, 147, 0])
    cube([1, 1, 5.53]);
  translate([117, 147, 0])
    cube([1, 1, 5.80]);
  translate([118, 147, 0])
    cube([1, 1, 5.92]);
  translate([119, 147, 0])
    cube([1, 1, 6.04]);
  translate([120, 147, 0])
    cube([1, 1, 5.80]);
  translate([121, 147, 0])
    cube([1, 1, 5.57]);
  translate([122, 147, 0])
    cube([1, 1, 5.65]);
  translate([123, 147, 0])
    cube([1, 1, 5.84]);
  translate([124, 147, 0])
    cube([1, 1, 6.43]);
  translate([125, 147, 0])
    cube([1, 1, 6.71]);
  translate([126, 147, 0])
    cube([1, 1, 6.47]);
  translate([127, 147, 0])
    cube([1, 1, 5.49]);
  translate([128, 147, 0])
    cube([1, 1, 5.57]);
  translate([129, 147, 0])
    cube([1, 1, 5.57]);
  translate([130, 147, 0])
    cube([1, 1, 5.33]);
  translate([131, 147, 0])
    cube([1, 1, 5.49]);
  translate([132, 147, 0])
    cube([1, 1, 5.69]);
  translate([133, 147, 0])
    cube([1, 1, 6.12]);
  translate([134, 147, 0])
    cube([1, 1, 6.27]);
  translate([135, 147, 0])
    cube([1, 1, 6.47]);
  translate([136, 147, 0])
    cube([1, 1, 6.82]);
  translate([137, 147, 0])
    cube([1, 1, 6.55]);
  translate([138, 147, 0])
    cube([1, 1, 5.49]);
  translate([139, 147, 0])
    cube([1, 1, 6.08]);
  translate([140, 147, 0])
    cube([1, 1, 6.08]);
  translate([141, 147, 0])
    cube([1, 1, 5.92]);
  translate([142, 147, 0])
    cube([1, 1, 5.41]);
  translate([143, 147, 0])
    cube([1, 1, 5.80]);
  translate([144, 147, 0])
    cube([1, 1, 6.43]);
  translate([145, 147, 0])
    cube([1, 1, 7.57]);
  translate([146, 147, 0])
    cube([1, 1, 7.61]);
  translate([147, 147, 0])
    cube([1, 1, 6.98]);
  translate([148, 147, 0])
    cube([1, 1, 7.02]);
  translate([149, 147, 0])
    cube([1, 1, 7.02]);
  translate([150, 147, 0])
    cube([1, 1, 1.41]);
  translate([151, 147, 0])
    cube([1, 1, 1.53]);
  translate([152, 147, 0])
    cube([1, 1, 1.49]);
  translate([153, 147, 0])
    cube([1, 1, 1.49]);
  translate([154, 147, 0])
    cube([1, 1, 1.49]);
  translate([155, 147, 0])
    cube([1, 1, 1.49]);
  translate([156, 147, 0])
    cube([1, 1, 1.49]);
  translate([157, 147, 0])
    cube([1, 1, 1.53]);
  translate([158, 147, 0])
    cube([1, 1, 1.53]);
  translate([159, 147, 0])
    cube([1, 1, 1.53]);
  translate([160, 147, 0])
    cube([1, 1, 1.53]);
  translate([161, 147, 0])
    cube([1, 1, 1.57]);
  translate([162, 147, 0])
    cube([1, 1, 1.57]);
  translate([163, 147, 0])
    cube([1, 1, 1.53]);
  translate([164, 147, 0])
    cube([1, 1, 1.53]);
  translate([165, 147, 0])
    cube([1, 1, 1.53]);
  translate([166, 147, 0])
    cube([1, 1, 1.53]);
  translate([167, 147, 0])
    cube([1, 1, 1.53]);
  translate([168, 147, 0])
    cube([1, 1, 1.53]);
  translate([169, 147, 0])
    cube([1, 1, 1.53]);
  translate([170, 147, 0])
    cube([1, 1, 1.57]);
  translate([171, 147, 0])
    cube([1, 1, 1.61]);
  translate([172, 147, 0])
    cube([1, 1, 1.57]);
  translate([173, 147, 0])
    cube([1, 1, 1.57]);
  translate([174, 147, 0])
    cube([1, 1, 1.53]);
  translate([175, 147, 0])
    cube([1, 1, 1.57]);
  translate([176, 147, 0])
    cube([1, 1, 1.57]);
  translate([177, 147, 0])
    cube([1, 1, 1.57]);
  translate([178, 147, 0])
    cube([1, 1, 1.57]);
  translate([179, 147, 0])
    cube([1, 1, 1.57]);
  translate([180, 147, 0])
    cube([1, 1, 1.57]);
  translate([181, 147, 0])
    cube([1, 1, 1.57]);
  translate([182, 147, 0])
    cube([1, 1, 1.57]);
  translate([183, 147, 0])
    cube([1, 1, 1.57]);
  translate([184, 147, 0])
    cube([1, 1, 1.57]);
  translate([185, 147, 0])
    cube([1, 1, 1.57]);
  translate([186, 147, 0])
    cube([1, 1, 1.61]);
  translate([187, 147, 0])
    cube([1, 1, 1.61]);
  translate([188, 147, 0])
    cube([1, 1, 1.57]);
  translate([189, 147, 0])
    cube([1, 1, 1.61]);
  translate([190, 147, 0])
    cube([1, 1, 1.57]);
  translate([191, 147, 0])
    cube([1, 1, 1.57]);
  translate([192, 147, 0])
    cube([1, 1, 1.61]);
  translate([193, 147, 0])
    cube([1, 1, 1.61]);
  translate([194, 147, 0])
    cube([1, 1, 1.61]);
  translate([195, 147, 0])
    cube([1, 1, 1.61]);
  translate([196, 147, 0])
    cube([1, 1, 1.57]);
  translate([197, 147, 0])
    cube([1, 1, 1.57]);
  translate([198, 147, 0])
    cube([1, 1, 1.61]);
  translate([199, 147, 0])
    cube([1, 1, 1.61]);
  translate([200, 147, 0])
    cube([1, 1, 1.61]);
  translate([201, 147, 0])
    cube([1, 1, 1.61]);
  translate([202, 147, 0])
    cube([1, 1, 1.61]);
  translate([203, 147, 0])
    cube([1, 1, 1.61]);
  translate([204, 147, 0])
    cube([1, 1, 1.61]);
  translate([205, 147, 0])
    cube([1, 1, 1.61]);
  translate([206, 147, 0])
    cube([1, 1, 1.61]);
  translate([207, 147, 0])
    cube([1, 1, 1.61]);
  translate([208, 147, 0])
    cube([1, 1, 1.61]);
  translate([209, 147, 0])
    cube([1, 1, 1.61]);
  translate([210, 147, 0])
    cube([1, 1, 1.61]);
  translate([211, 147, 0])
    cube([1, 1, 1.61]);
  translate([212, 147, 0])
    cube([1, 1, 1.61]);
  translate([213, 147, 0])
    cube([1, 1, 1.61]);
  translate([214, 147, 0])
    cube([1, 1, 1.61]);
  translate([215, 147, 0])
    cube([1, 1, 1.61]);
  translate([216, 147, 0])
    cube([1, 1, 1.61]);
  translate([217, 147, 0])
    cube([1, 1, 1.61]);
  translate([218, 147, 0])
    cube([1, 1, 1.61]);
  translate([219, 147, 0])
    cube([1, 1, 1.61]);
  translate([220, 147, 0])
    cube([1, 1, 1.61]);
  translate([221, 147, 0])
    cube([1, 1, 1.61]);
  translate([222, 147, 0])
    cube([1, 1, 1.61]);
  translate([223, 147, 0])
    cube([1, 1, 1.61]);
  translate([224, 147, 0])
    cube([1, 1, 1.61]);
  translate([225, 147, 0])
    cube([1, 1, 1.61]);
  translate([226, 147, 0])
    cube([1, 1, 1.61]);
  translate([227, 147, 0])
    cube([1, 1, 1.61]);
  translate([228, 147, 0])
    cube([1, 1, 1.61]);
  translate([229, 147, 0])
    cube([1, 1, 1.61]);
  translate([230, 147, 0])
    cube([1, 1, 1.61]);
  translate([231, 147, 0])
    cube([1, 1, 1.61]);
  translate([232, 147, 0])
    cube([1, 1, 1.57]);
  translate([233, 147, 0])
    cube([1, 1, 1.57]);
  translate([234, 147, 0])
    cube([1, 1, 1.65]);
  translate([235, 147, 0])
    cube([1, 1, 1.61]);
  translate([236, 147, 0])
    cube([1, 1, 1.61]);
  translate([237, 147, 0])
    cube([1, 1, 1.61]);
  translate([238, 147, 0])
    cube([1, 1, 1.61]);
  translate([239, 147, 0])
    cube([1, 1, 1.61]);
  translate([240, 147, 0])
    cube([1, 1, 1.57]);
  translate([241, 147, 0])
    cube([1, 1, 1.53]);
  translate([242, 147, 0])
    cube([1, 1, 1.57]);
  translate([243, 147, 0])
    cube([1, 1, 1.53]);
  translate([244, 147, 0])
    cube([1, 1, 1.61]);
  translate([245, 147, 0])
    cube([1, 1, 1.61]);
  translate([246, 147, 0])
    cube([1, 1, 1.61]);
  translate([0, 148, 0])
    cube([1, 1, 1.69]);
  translate([1, 148, 0])
    cube([1, 1, 1.76]);
  translate([2, 148, 0])
    cube([1, 1, 1.76]);
  translate([3, 148, 0])
    cube([1, 1, 1.76]);
  translate([4, 148, 0])
    cube([1, 1, 1.73]);
  translate([5, 148, 0])
    cube([1, 1, 1.76]);
  translate([6, 148, 0])
    cube([1, 1, 1.76]);
  translate([7, 148, 0])
    cube([1, 1, 1.76]);
  translate([8, 148, 0])
    cube([1, 1, 1.76]);
  translate([9, 148, 0])
    cube([1, 1, 1.73]);
  translate([10, 148, 0])
    cube([1, 1, 1.73]);
  translate([11, 148, 0])
    cube([1, 1, 1.76]);
  translate([12, 148, 0])
    cube([1, 1, 1.76]);
  translate([13, 148, 0])
    cube([1, 1, 1.76]);
  translate([14, 148, 0])
    cube([1, 1, 1.73]);
  translate([15, 148, 0])
    cube([1, 1, 1.73]);
  translate([16, 148, 0])
    cube([1, 1, 1.73]);
  translate([17, 148, 0])
    cube([1, 1, 1.73]);
  translate([18, 148, 0])
    cube([1, 1, 1.73]);
  translate([19, 148, 0])
    cube([1, 1, 1.65]);
  translate([20, 148, 0])
    cube([1, 1, 1.69]);
  translate([21, 148, 0])
    cube([1, 1, 1.73]);
  translate([22, 148, 0])
    cube([1, 1, 1.73]);
  translate([23, 148, 0])
    cube([1, 1, 1.73]);
  translate([24, 148, 0])
    cube([1, 1, 1.76]);
  translate([25, 148, 0])
    cube([1, 1, 1.73]);
  translate([26, 148, 0])
    cube([1, 1, 1.73]);
  translate([27, 148, 0])
    cube([1, 1, 1.69]);
  translate([28, 148, 0])
    cube([1, 1, 1.69]);
  translate([29, 148, 0])
    cube([1, 1, 1.69]);
  translate([30, 148, 0])
    cube([1, 1, 1.69]);
  translate([31, 148, 0])
    cube([1, 1, 1.69]);
  translate([32, 148, 0])
    cube([1, 1, 1.69]);
  translate([33, 148, 0])
    cube([1, 1, 1.69]);
  translate([34, 148, 0])
    cube([1, 1, 1.69]);
  translate([35, 148, 0])
    cube([1, 1, 1.69]);
  translate([36, 148, 0])
    cube([1, 1, 1.69]);
  translate([37, 148, 0])
    cube([1, 1, 1.69]);
  translate([38, 148, 0])
    cube([1, 1, 1.65]);
  translate([39, 148, 0])
    cube([1, 1, 1.73]);
  translate([40, 148, 0])
    cube([1, 1, 1.69]);
  translate([41, 148, 0])
    cube([1, 1, 1.65]);
  translate([42, 148, 0])
    cube([1, 1, 1.65]);
  translate([43, 148, 0])
    cube([1, 1, 1.65]);
  translate([44, 148, 0])
    cube([1, 1, 1.65]);
  translate([45, 148, 0])
    cube([1, 1, 1.57]);
  translate([46, 148, 0])
    cube([1, 1, 1.61]);
  translate([47, 148, 0])
    cube([1, 1, 1.61]);
  translate([48, 148, 0])
    cube([1, 1, 1.61]);
  translate([49, 148, 0])
    cube([1, 1, 1.61]);
  translate([50, 148, 0])
    cube([1, 1, 1.53]);
  translate([51, 148, 0])
    cube([1, 1, 1.61]);
  translate([52, 148, 0])
    cube([1, 1, 7.25]);
  translate([53, 148, 0])
    cube([1, 1, 6.55]);
  translate([54, 148, 0])
    cube([1, 1, 5.65]);
  translate([55, 148, 0])
    cube([1, 1, 5.10]);
  translate([56, 148, 0])
    cube([1, 1, 3.02]);
  translate([57, 148, 0])
    cube([1, 1, 3.57]);
  translate([58, 148, 0])
    cube([1, 1, 4.35]);
  translate([59, 148, 0])
    cube([1, 1, 4.67]);
  translate([60, 148, 0])
    cube([1, 1, 4.98]);
  translate([61, 148, 0])
    cube([1, 1, 5.10]);
  translate([62, 148, 0])
    cube([1, 1, 5.10]);
  translate([63, 148, 0])
    cube([1, 1, 5.33]);
  translate([64, 148, 0])
    cube([1, 1, 5.41]);
  translate([65, 148, 0])
    cube([1, 1, 5.49]);
  translate([66, 148, 0])
    cube([1, 1, 5.73]);
  translate([67, 148, 0])
    cube([1, 1, 5.80]);
  translate([68, 148, 0])
    cube([1, 1, 5.80]);
  translate([69, 148, 0])
    cube([1, 1, 5.65]);
  translate([70, 148, 0])
    cube([1, 1, 5.57]);
  translate([71, 148, 0])
    cube([1, 1, 5.41]);
  translate([72, 148, 0])
    cube([1, 1, 5.37]);
  translate([73, 148, 0])
    cube([1, 1, 5.14]);
  translate([74, 148, 0])
    cube([1, 1, 5.92]);
  translate([75, 148, 0])
    cube([1, 1, 5.80]);
  translate([76, 148, 0])
    cube([1, 1, 5.73]);
  translate([77, 148, 0])
    cube([1, 1, 5.57]);
  translate([78, 148, 0])
    cube([1, 1, 5.29]);
  translate([79, 148, 0])
    cube([1, 1, 5.10]);
  translate([80, 148, 0])
    cube([1, 1, 4.51]);
  translate([81, 148, 0])
    cube([1, 1, 4.16]);
  translate([82, 148, 0])
    cube([1, 1, 2.75]);
  translate([83, 148, 0])
    cube([1, 1, 1.14]);
  translate([84, 148, 0])
    cube([1, 1, 0.98]);
  translate([85, 148, 0])
    cube([1, 1, 1.69]);
  translate([86, 148, 0])
    cube([1, 1, 1.22]);
  translate([87, 148, 0])
    cube([1, 1, 1.45]);
  translate([88, 148, 0])
    cube([1, 1, 2.16]);
  translate([89, 148, 0])
    cube([1, 1, 2.12]);
  translate([90, 148, 0])
    cube([1, 1, 1.33]);
  translate([91, 148, 0])
    cube([1, 1, 1.65]);
  translate([92, 148, 0])
    cube([1, 1, 1.84]);
  translate([93, 148, 0])
    cube([1, 1, 1.69]);
  translate([94, 148, 0])
    cube([1, 1, 1.76]);
  translate([95, 148, 0])
    cube([1, 1, 2.20]);
  translate([96, 148, 0])
    cube([1, 1, 2.47]);
  translate([97, 148, 0])
    cube([1, 1, 2.47]);
  translate([98, 148, 0])
    cube([1, 1, 2.78]);
  translate([99, 148, 0])
    cube([1, 1, 2.55]);
  translate([100, 148, 0])
    cube([1, 1, 2.71]);
  translate([101, 148, 0])
    cube([1, 1, 3.06]);
  translate([102, 148, 0])
    cube([1, 1, 2.98]);
  translate([103, 148, 0])
    cube([1, 1, 3.73]);
  translate([104, 148, 0])
    cube([1, 1, 3.41]);
  translate([105, 148, 0])
    cube([1, 1, 2.98]);
  translate([106, 148, 0])
    cube([1, 1, 2.98]);
  translate([107, 148, 0])
    cube([1, 1, 2.90]);
  translate([108, 148, 0])
    cube([1, 1, 3.73]);
  translate([109, 148, 0])
    cube([1, 1, 4.71]);
  translate([110, 148, 0])
    cube([1, 1, 5.14]);
  translate([111, 148, 0])
    cube([1, 1, 5.29]);
  translate([112, 148, 0])
    cube([1, 1, 5.65]);
  translate([113, 148, 0])
    cube([1, 1, 5.73]);
  translate([114, 148, 0])
    cube([1, 1, 5.76]);
  translate([115, 148, 0])
    cube([1, 1, 5.84]);
  translate([116, 148, 0])
    cube([1, 1, 5.84]);
  translate([117, 148, 0])
    cube([1, 1, 5.73]);
  translate([118, 148, 0])
    cube([1, 1, 5.73]);
  translate([119, 148, 0])
    cube([1, 1, 5.61]);
  translate([120, 148, 0])
    cube([1, 1, 5.53]);
  translate([121, 148, 0])
    cube([1, 1, 5.41]);
  translate([122, 148, 0])
    cube([1, 1, 5.53]);
  translate([123, 148, 0])
    cube([1, 1, 5.80]);
  translate([124, 148, 0])
    cube([1, 1, 6.31]);
  translate([125, 148, 0])
    cube([1, 1, 6.71]);
  translate([126, 148, 0])
    cube([1, 1, 6.51]);
  translate([127, 148, 0])
    cube([1, 1, 5.61]);
  translate([128, 148, 0])
    cube([1, 1, 5.61]);
  translate([129, 148, 0])
    cube([1, 1, 5.37]);
  translate([130, 148, 0])
    cube([1, 1, 5.29]);
  translate([131, 148, 0])
    cube([1, 1, 5.41]);
  translate([132, 148, 0])
    cube([1, 1, 5.61]);
  translate([133, 148, 0])
    cube([1, 1, 5.96]);
  translate([134, 148, 0])
    cube([1, 1, 6.27]);
  translate([135, 148, 0])
    cube([1, 1, 6.59]);
  translate([136, 148, 0])
    cube([1, 1, 6.67]);
  translate([137, 148, 0])
    cube([1, 1, 6.35]);
  translate([138, 148, 0])
    cube([1, 1, 5.65]);
  translate([139, 148, 0])
    cube([1, 1, 5.96]);
  translate([140, 148, 0])
    cube([1, 1, 6.08]);
  translate([141, 148, 0])
    cube([1, 1, 6.00]);
  translate([142, 148, 0])
    cube([1, 1, 5.57]);
  translate([143, 148, 0])
    cube([1, 1, 5.73]);
  translate([144, 148, 0])
    cube([1, 1, 6.43]);
  translate([145, 148, 0])
    cube([1, 1, 7.61]);
  translate([146, 148, 0])
    cube([1, 1, 7.65]);
  translate([147, 148, 0])
    cube([1, 1, 6.94]);
  translate([148, 148, 0])
    cube([1, 1, 6.24]);
  translate([149, 148, 0])
    cube([1, 1, 6.27]);
  translate([150, 148, 0])
    cube([1, 1, 6.90]);
  translate([151, 148, 0])
    cube([1, 1, 5.18]);
  translate([152, 148, 0])
    cube([1, 1, 1.69]);
  translate([153, 148, 0])
    cube([1, 1, 1.49]);
  translate([154, 148, 0])
    cube([1, 1, 1.49]);
  translate([155, 148, 0])
    cube([1, 1, 1.49]);
  translate([156, 148, 0])
    cube([1, 1, 1.49]);
  translate([157, 148, 0])
    cube([1, 1, 1.53]);
  translate([158, 148, 0])
    cube([1, 1, 1.53]);
  translate([159, 148, 0])
    cube([1, 1, 1.53]);
  translate([160, 148, 0])
    cube([1, 1, 1.53]);
  translate([161, 148, 0])
    cube([1, 1, 1.53]);
  translate([162, 148, 0])
    cube([1, 1, 1.53]);
  translate([163, 148, 0])
    cube([1, 1, 1.53]);
  translate([164, 148, 0])
    cube([1, 1, 1.53]);
  translate([165, 148, 0])
    cube([1, 1, 1.53]);
  translate([166, 148, 0])
    cube([1, 1, 1.53]);
  translate([167, 148, 0])
    cube([1, 1, 1.53]);
  translate([168, 148, 0])
    cube([1, 1, 1.57]);
  translate([169, 148, 0])
    cube([1, 1, 1.57]);
  translate([170, 148, 0])
    cube([1, 1, 1.57]);
  translate([171, 148, 0])
    cube([1, 1, 1.57]);
  translate([172, 148, 0])
    cube([1, 1, 1.57]);
  translate([173, 148, 0])
    cube([1, 1, 1.57]);
  translate([174, 148, 0])
    cube([1, 1, 1.57]);
  translate([175, 148, 0])
    cube([1, 1, 1.57]);
  translate([176, 148, 0])
    cube([1, 1, 1.57]);
  translate([177, 148, 0])
    cube([1, 1, 1.57]);
  translate([178, 148, 0])
    cube([1, 1, 1.57]);
  translate([179, 148, 0])
    cube([1, 1, 1.57]);
  translate([180, 148, 0])
    cube([1, 1, 1.57]);
  translate([181, 148, 0])
    cube([1, 1, 1.57]);
  translate([182, 148, 0])
    cube([1, 1, 1.53]);
  translate([183, 148, 0])
    cube([1, 1, 1.65]);
  translate([184, 148, 0])
    cube([1, 1, 1.57]);
  translate([185, 148, 0])
    cube([1, 1, 1.57]);
  translate([186, 148, 0])
    cube([1, 1, 1.57]);
  translate([187, 148, 0])
    cube([1, 1, 1.57]);
  translate([188, 148, 0])
    cube([1, 1, 1.61]);
  translate([189, 148, 0])
    cube([1, 1, 1.61]);
  translate([190, 148, 0])
    cube([1, 1, 1.61]);
  translate([191, 148, 0])
    cube([1, 1, 1.61]);
  translate([192, 148, 0])
    cube([1, 1, 1.61]);
  translate([193, 148, 0])
    cube([1, 1, 1.61]);
  translate([194, 148, 0])
    cube([1, 1, 1.61]);
  translate([195, 148, 0])
    cube([1, 1, 1.61]);
  translate([196, 148, 0])
    cube([1, 1, 1.61]);
  translate([197, 148, 0])
    cube([1, 1, 1.61]);
  translate([198, 148, 0])
    cube([1, 1, 1.61]);
  translate([199, 148, 0])
    cube([1, 1, 1.61]);
  translate([200, 148, 0])
    cube([1, 1, 1.61]);
  translate([201, 148, 0])
    cube([1, 1, 1.61]);
  translate([202, 148, 0])
    cube([1, 1, 1.61]);
  translate([203, 148, 0])
    cube([1, 1, 1.61]);
  translate([204, 148, 0])
    cube([1, 1, 1.61]);
  translate([205, 148, 0])
    cube([1, 1, 1.61]);
  translate([206, 148, 0])
    cube([1, 1, 1.61]);
  translate([207, 148, 0])
    cube([1, 1, 1.61]);
  translate([208, 148, 0])
    cube([1, 1, 1.61]);
  translate([209, 148, 0])
    cube([1, 1, 1.61]);
  translate([210, 148, 0])
    cube([1, 1, 1.61]);
  translate([211, 148, 0])
    cube([1, 1, 1.61]);
  translate([212, 148, 0])
    cube([1, 1, 1.61]);
  translate([213, 148, 0])
    cube([1, 1, 1.61]);
  translate([214, 148, 0])
    cube([1, 1, 1.61]);
  translate([215, 148, 0])
    cube([1, 1, 1.61]);
  translate([216, 148, 0])
    cube([1, 1, 1.61]);
  translate([217, 148, 0])
    cube([1, 1, 1.61]);
  translate([218, 148, 0])
    cube([1, 1, 1.61]);
  translate([219, 148, 0])
    cube([1, 1, 1.61]);
  translate([220, 148, 0])
    cube([1, 1, 1.61]);
  translate([221, 148, 0])
    cube([1, 1, 1.61]);
  translate([222, 148, 0])
    cube([1, 1, 1.61]);
  translate([223, 148, 0])
    cube([1, 1, 1.61]);
  translate([224, 148, 0])
    cube([1, 1, 1.61]);
  translate([225, 148, 0])
    cube([1, 1, 1.61]);
  translate([226, 148, 0])
    cube([1, 1, 1.61]);
  translate([227, 148, 0])
    cube([1, 1, 1.61]);
  translate([228, 148, 0])
    cube([1, 1, 1.61]);
  translate([229, 148, 0])
    cube([1, 1, 1.61]);
  translate([230, 148, 0])
    cube([1, 1, 1.61]);
  translate([231, 148, 0])
    cube([1, 1, 1.61]);
  translate([232, 148, 0])
    cube([1, 1, 1.61]);
  translate([233, 148, 0])
    cube([1, 1, 1.61]);
  translate([234, 148, 0])
    cube([1, 1, 1.61]);
  translate([235, 148, 0])
    cube([1, 1, 1.61]);
  translate([236, 148, 0])
    cube([1, 1, 1.61]);
  translate([237, 148, 0])
    cube([1, 1, 1.61]);
  translate([238, 148, 0])
    cube([1, 1, 1.61]);
  translate([239, 148, 0])
    cube([1, 1, 1.61]);
  translate([240, 148, 0])
    cube([1, 1, 1.61]);
  translate([241, 148, 0])
    cube([1, 1, 1.61]);
  translate([242, 148, 0])
    cube([1, 1, 1.61]);
  translate([243, 148, 0])
    cube([1, 1, 1.61]);
  translate([244, 148, 0])
    cube([1, 1, 1.61]);
  translate([245, 148, 0])
    cube([1, 1, 1.61]);
  translate([246, 148, 0])
    cube([1, 1, 1.61]);
  translate([0, 149, 0])
    cube([1, 1, 1.76]);
  translate([1, 149, 0])
    cube([1, 1, 1.76]);
  translate([2, 149, 0])
    cube([1, 1, 1.76]);
  translate([3, 149, 0])
    cube([1, 1, 1.76]);
  translate([4, 149, 0])
    cube([1, 1, 1.76]);
  translate([5, 149, 0])
    cube([1, 1, 1.76]);
  translate([6, 149, 0])
    cube([1, 1, 1.76]);
  translate([7, 149, 0])
    cube([1, 1, 1.76]);
  translate([8, 149, 0])
    cube([1, 1, 1.76]);
  translate([9, 149, 0])
    cube([1, 1, 1.76]);
  translate([10, 149, 0])
    cube([1, 1, 1.76]);
  translate([11, 149, 0])
    cube([1, 1, 1.76]);
  translate([12, 149, 0])
    cube([1, 1, 1.76]);
  translate([13, 149, 0])
    cube([1, 1, 1.76]);
  translate([14, 149, 0])
    cube([1, 1, 1.73]);
  translate([15, 149, 0])
    cube([1, 1, 1.76]);
  translate([16, 149, 0])
    cube([1, 1, 1.76]);
  translate([17, 149, 0])
    cube([1, 1, 1.73]);
  translate([18, 149, 0])
    cube([1, 1, 1.73]);
  translate([19, 149, 0])
    cube([1, 1, 1.73]);
  translate([20, 149, 0])
    cube([1, 1, 1.73]);
  translate([21, 149, 0])
    cube([1, 1, 1.73]);
  translate([22, 149, 0])
    cube([1, 1, 1.73]);
  translate([23, 149, 0])
    cube([1, 1, 1.73]);
  translate([24, 149, 0])
    cube([1, 1, 1.73]);
  translate([25, 149, 0])
    cube([1, 1, 1.73]);
  translate([26, 149, 0])
    cube([1, 1, 1.73]);
  translate([27, 149, 0])
    cube([1, 1, 1.73]);
  translate([28, 149, 0])
    cube([1, 1, 1.73]);
  translate([29, 149, 0])
    cube([1, 1, 1.73]);
  translate([30, 149, 0])
    cube([1, 1, 1.73]);
  translate([31, 149, 0])
    cube([1, 1, 1.65]);
  translate([32, 149, 0])
    cube([1, 1, 1.73]);
  translate([33, 149, 0])
    cube([1, 1, 1.69]);
  translate([34, 149, 0])
    cube([1, 1, 1.69]);
  translate([35, 149, 0])
    cube([1, 1, 1.69]);
  translate([36, 149, 0])
    cube([1, 1, 1.69]);
  translate([37, 149, 0])
    cube([1, 1, 1.69]);
  translate([38, 149, 0])
    cube([1, 1, 1.69]);
  translate([39, 149, 0])
    cube([1, 1, 1.69]);
  translate([40, 149, 0])
    cube([1, 1, 1.69]);
  translate([41, 149, 0])
    cube([1, 1, 1.69]);
  translate([42, 149, 0])
    cube([1, 1, 1.69]);
  translate([43, 149, 0])
    cube([1, 1, 1.65]);
  translate([44, 149, 0])
    cube([1, 1, 1.65]);
  translate([45, 149, 0])
    cube([1, 1, 1.65]);
  translate([46, 149, 0])
    cube([1, 1, 1.61]);
  translate([47, 149, 0])
    cube([1, 1, 1.69]);
  translate([48, 149, 0])
    cube([1, 1, 1.61]);
  translate([49, 149, 0])
    cube([1, 1, 1.65]);
  translate([50, 149, 0])
    cube([1, 1, 1.69]);
  translate([51, 149, 0])
    cube([1, 1, 1.61]);
  translate([52, 149, 0])
    cube([1, 1, 7.33]);
  translate([53, 149, 0])
    cube([1, 1, 6.59]);
  translate([54, 149, 0])
    cube([1, 1, 5.76]);
  translate([55, 149, 0])
    cube([1, 1, 5.29]);
  translate([56, 149, 0])
    cube([1, 1, 3.57]);
  translate([57, 149, 0])
    cube([1, 1, 3.41]);
  translate([58, 149, 0])
    cube([1, 1, 4.08]);
  translate([59, 149, 0])
    cube([1, 1, 4.59]);
  translate([60, 149, 0])
    cube([1, 1, 4.82]);
  translate([61, 149, 0])
    cube([1, 1, 4.98]);
  translate([62, 149, 0])
    cube([1, 1, 4.98]);
  translate([63, 149, 0])
    cube([1, 1, 5.14]);
  translate([64, 149, 0])
    cube([1, 1, 5.33]);
  translate([65, 149, 0])
    cube([1, 1, 5.37]);
  translate([66, 149, 0])
    cube([1, 1, 5.61]);
  translate([67, 149, 0])
    cube([1, 1, 5.80]);
  translate([68, 149, 0])
    cube([1, 1, 5.84]);
  translate([69, 149, 0])
    cube([1, 1, 5.76]);
  translate([70, 149, 0])
    cube([1, 1, 5.65]);
  translate([71, 149, 0])
    cube([1, 1, 5.53]);
  translate([72, 149, 0])
    cube([1, 1, 5.41]);
  translate([73, 149, 0])
    cube([1, 1, 5.25]);
  translate([74, 149, 0])
    cube([1, 1, 5.96]);
  translate([75, 149, 0])
    cube([1, 1, 5.84]);
  translate([76, 149, 0])
    cube([1, 1, 5.76]);
  translate([77, 149, 0])
    cube([1, 1, 5.57]);
  translate([78, 149, 0])
    cube([1, 1, 5.29]);
  translate([79, 149, 0])
    cube([1, 1, 5.02]);
  translate([80, 149, 0])
    cube([1, 1, 4.39]);
  translate([81, 149, 0])
    cube([1, 1, 4.82]);
  translate([82, 149, 0])
    cube([1, 1, 2.78]);
  translate([83, 149, 0])
    cube([1, 1, 1.49]);
  translate([84, 149, 0])
    cube([1, 1, 2.98]);
  translate([85, 149, 0])
    cube([1, 1, 1.53]);
  translate([86, 149, 0])
    cube([1, 1, 2.12]);
  translate([87, 149, 0])
    cube([1, 1, 2.55]);
  translate([88, 149, 0])
    cube([1, 1, 2.78]);
  translate([89, 149, 0])
    cube([1, 1, 2.75]);
  translate([90, 149, 0])
    cube([1, 1, 2.86]);
  translate([91, 149, 0])
    cube([1, 1, 2.78]);
  translate([92, 149, 0])
    cube([1, 1, 2.67]);
  translate([93, 149, 0])
    cube([1, 1, 2.94]);
  translate([94, 149, 0])
    cube([1, 1, 2.98]);
  translate([95, 149, 0])
    cube([1, 1, 2.90]);
  translate([96, 149, 0])
    cube([1, 1, 3.10]);
  translate([97, 149, 0])
    cube([1, 1, 3.18]);
  translate([98, 149, 0])
    cube([1, 1, 3.41]);
  translate([99, 149, 0])
    cube([1, 1, 3.61]);
  translate([100, 149, 0])
    cube([1, 1, 3.80]);
  translate([101, 149, 0])
    cube([1, 1, 4.04]);
  translate([102, 149, 0])
    cube([1, 1, 4.27]);
  translate([103, 149, 0])
    cube([1, 1, 4.43]);
  translate([104, 149, 0])
    cube([1, 1, 4.47]);
  translate([105, 149, 0])
    cube([1, 1, 4.78]);
  translate([106, 149, 0])
    cube([1, 1, 5.02]);
  translate([107, 149, 0])
    cube([1, 1, 5.14]);
  translate([108, 149, 0])
    cube([1, 1, 5.25]);
  translate([109, 149, 0])
    cube([1, 1, 5.45]);
  translate([110, 149, 0])
    cube([1, 1, 5.49]);
  translate([111, 149, 0])
    cube([1, 1, 5.61]);
  translate([112, 149, 0])
    cube([1, 1, 5.76]);
  translate([113, 149, 0])
    cube([1, 1, 5.76]);
  translate([114, 149, 0])
    cube([1, 1, 5.80]);
  translate([115, 149, 0])
    cube([1, 1, 5.73]);
  translate([116, 149, 0])
    cube([1, 1, 5.65]);
  translate([117, 149, 0])
    cube([1, 1, 5.65]);
  translate([118, 149, 0])
    cube([1, 1, 5.57]);
  translate([119, 149, 0])
    cube([1, 1, 5.41]);
  translate([120, 149, 0])
    cube([1, 1, 5.33]);
  translate([121, 149, 0])
    cube([1, 1, 5.37]);
  translate([122, 149, 0])
    cube([1, 1, 5.53]);
  translate([123, 149, 0])
    cube([1, 1, 5.88]);
  translate([124, 149, 0])
    cube([1, 1, 6.24]);
  translate([125, 149, 0])
    cube([1, 1, 6.78]);
  translate([126, 149, 0])
    cube([1, 1, 6.55]);
  translate([127, 149, 0])
    cube([1, 1, 5.49]);
  translate([128, 149, 0])
    cube([1, 1, 5.53]);
  translate([129, 149, 0])
    cube([1, 1, 5.33]);
  translate([130, 149, 0])
    cube([1, 1, 5.25]);
  translate([131, 149, 0])
    cube([1, 1, 5.37]);
  translate([132, 149, 0])
    cube([1, 1, 5.57]);
  translate([133, 149, 0])
    cube([1, 1, 5.88]);
  translate([134, 149, 0])
    cube([1, 1, 6.20]);
  translate([135, 149, 0])
    cube([1, 1, 6.51]);
  translate([136, 149, 0])
    cube([1, 1, 6.59]);
  translate([137, 149, 0])
    cube([1, 1, 6.63]);
  translate([138, 149, 0])
    cube([1, 1, 5.53]);
  translate([139, 149, 0])
    cube([1, 1, 5.84]);
  translate([140, 149, 0])
    cube([1, 1, 6.04]);
  translate([141, 149, 0])
    cube([1, 1, 6.12]);
  translate([142, 149, 0])
    cube([1, 1, 5.76]);
  translate([143, 149, 0])
    cube([1, 1, 5.61]);
  translate([144, 149, 0])
    cube([1, 1, 6.08]);
  translate([145, 149, 0])
    cube([1, 1, 7.10]);
  translate([146, 149, 0])
    cube([1, 1, 7.45]);
  translate([147, 149, 0])
    cube([1, 1, 6.67]);
  translate([148, 149, 0])
    cube([1, 1, 6.12]);
  translate([149, 149, 0])
    cube([1, 1, 5.96]);
  translate([150, 149, 0])
    cube([1, 1, 5.88]);
  translate([151, 149, 0])
    cube([1, 1, 6.47]);
  translate([152, 149, 0])
    cube([1, 1, 6.98]);
  translate([153, 149, 0])
    cube([1, 1, 1.14]);
  translate([154, 149, 0])
    cube([1, 1, 1.29]);
  translate([155, 149, 0])
    cube([1, 1, 1.53]);
  translate([156, 149, 0])
    cube([1, 1, 1.53]);
  translate([157, 149, 0])
    cube([1, 1, 1.53]);
  translate([158, 149, 0])
    cube([1, 1, 1.53]);
  translate([159, 149, 0])
    cube([1, 1, 1.53]);
  translate([160, 149, 0])
    cube([1, 1, 1.61]);
  translate([161, 149, 0])
    cube([1, 1, 1.57]);
  translate([162, 149, 0])
    cube([1, 1, 1.53]);
  translate([163, 149, 0])
    cube([1, 1, 1.57]);
  translate([164, 149, 0])
    cube([1, 1, 1.57]);
  translate([165, 149, 0])
    cube([1, 1, 1.53]);
  translate([166, 149, 0])
    cube([1, 1, 1.57]);
  translate([167, 149, 0])
    cube([1, 1, 1.57]);
  translate([168, 149, 0])
    cube([1, 1, 1.57]);
  translate([169, 149, 0])
    cube([1, 1, 1.57]);
  translate([170, 149, 0])
    cube([1, 1, 1.57]);
  translate([171, 149, 0])
    cube([1, 1, 1.57]);
  translate([172, 149, 0])
    cube([1, 1, 1.57]);
  translate([173, 149, 0])
    cube([1, 1, 1.57]);
  translate([174, 149, 0])
    cube([1, 1, 1.57]);
  translate([175, 149, 0])
    cube([1, 1, 1.57]);
  translate([176, 149, 0])
    cube([1, 1, 1.61]);
  translate([177, 149, 0])
    cube([1, 1, 1.57]);
  translate([178, 149, 0])
    cube([1, 1, 1.57]);
  translate([179, 149, 0])
    cube([1, 1, 1.61]);
  translate([180, 149, 0])
    cube([1, 1, 1.57]);
  translate([181, 149, 0])
    cube([1, 1, 1.57]);
  translate([182, 149, 0])
    cube([1, 1, 1.61]);
  translate([183, 149, 0])
    cube([1, 1, 1.61]);
  translate([184, 149, 0])
    cube([1, 1, 1.61]);
  translate([185, 149, 0])
    cube([1, 1, 1.61]);
  translate([186, 149, 0])
    cube([1, 1, 1.61]);
  translate([187, 149, 0])
    cube([1, 1, 1.61]);
  translate([188, 149, 0])
    cube([1, 1, 1.61]);
  translate([189, 149, 0])
    cube([1, 1, 1.61]);
  translate([190, 149, 0])
    cube([1, 1, 1.61]);
  translate([191, 149, 0])
    cube([1, 1, 1.61]);
  translate([192, 149, 0])
    cube([1, 1, 1.61]);
  translate([193, 149, 0])
    cube([1, 1, 1.61]);
  translate([194, 149, 0])
    cube([1, 1, 1.61]);
  translate([195, 149, 0])
    cube([1, 1, 1.61]);
  translate([196, 149, 0])
    cube([1, 1, 1.61]);
  translate([197, 149, 0])
    cube([1, 1, 1.61]);
  translate([198, 149, 0])
    cube([1, 1, 1.61]);
  translate([199, 149, 0])
    cube([1, 1, 1.61]);
  translate([200, 149, 0])
    cube([1, 1, 1.61]);
  translate([201, 149, 0])
    cube([1, 1, 1.61]);
  translate([202, 149, 0])
    cube([1, 1, 1.61]);
  translate([203, 149, 0])
    cube([1, 1, 1.61]);
  translate([204, 149, 0])
    cube([1, 1, 1.61]);
  translate([205, 149, 0])
    cube([1, 1, 1.61]);
  translate([206, 149, 0])
    cube([1, 1, 1.61]);
  translate([207, 149, 0])
    cube([1, 1, 1.61]);
  translate([208, 149, 0])
    cube([1, 1, 1.61]);
  translate([209, 149, 0])
    cube([1, 1, 1.61]);
  translate([210, 149, 0])
    cube([1, 1, 1.61]);
  translate([211, 149, 0])
    cube([1, 1, 1.61]);
  translate([212, 149, 0])
    cube([1, 1, 1.61]);
  translate([213, 149, 0])
    cube([1, 1, 1.61]);
  translate([214, 149, 0])
    cube([1, 1, 1.65]);
  translate([215, 149, 0])
    cube([1, 1, 1.61]);
  translate([216, 149, 0])
    cube([1, 1, 1.61]);
  translate([217, 149, 0])
    cube([1, 1, 1.61]);
  translate([218, 149, 0])
    cube([1, 1, 1.61]);
  translate([219, 149, 0])
    cube([1, 1, 1.61]);
  translate([220, 149, 0])
    cube([1, 1, 1.57]);
  translate([221, 149, 0])
    cube([1, 1, 1.61]);
  translate([222, 149, 0])
    cube([1, 1, 1.61]);
  translate([223, 149, 0])
    cube([1, 1, 1.61]);
  translate([224, 149, 0])
    cube([1, 1, 1.61]);
  translate([225, 149, 0])
    cube([1, 1, 1.61]);
  translate([226, 149, 0])
    cube([1, 1, 1.61]);
  translate([227, 149, 0])
    cube([1, 1, 1.61]);
  translate([228, 149, 0])
    cube([1, 1, 1.61]);
  translate([229, 149, 0])
    cube([1, 1, 1.61]);
  translate([230, 149, 0])
    cube([1, 1, 1.61]);
  translate([231, 149, 0])
    cube([1, 1, 1.61]);
  translate([232, 149, 0])
    cube([1, 1, 1.61]);
  translate([233, 149, 0])
    cube([1, 1, 1.61]);
  translate([234, 149, 0])
    cube([1, 1, 1.61]);
  translate([235, 149, 0])
    cube([1, 1, 1.61]);
  translate([236, 149, 0])
    cube([1, 1, 1.61]);
  translate([237, 149, 0])
    cube([1, 1, 1.61]);
  translate([238, 149, 0])
    cube([1, 1, 1.61]);
  translate([239, 149, 0])
    cube([1, 1, 1.61]);
  translate([240, 149, 0])
    cube([1, 1, 1.61]);
  translate([241, 149, 0])
    cube([1, 1, 1.61]);
  translate([242, 149, 0])
    cube([1, 1, 1.61]);
  translate([243, 149, 0])
    cube([1, 1, 1.61]);
  translate([244, 149, 0])
    cube([1, 1, 1.61]);
  translate([245, 149, 0])
    cube([1, 1, 1.61]);
  translate([246, 149, 0])
    cube([1, 1, 1.61]);
  translate([0, 150, 0])
    cube([1, 1, 1.76]);
  translate([1, 150, 0])
    cube([1, 1, 1.76]);
  translate([2, 150, 0])
    cube([1, 1, 1.76]);
  translate([3, 150, 0])
    cube([1, 1, 1.76]);
  translate([4, 150, 0])
    cube([1, 1, 1.76]);
  translate([5, 150, 0])
    cube([1, 1, 1.76]);
  translate([6, 150, 0])
    cube([1, 1, 1.76]);
  translate([7, 150, 0])
    cube([1, 1, 1.76]);
  translate([8, 150, 0])
    cube([1, 1, 1.76]);
  translate([9, 150, 0])
    cube([1, 1, 1.76]);
  translate([10, 150, 0])
    cube([1, 1, 1.76]);
  translate([11, 150, 0])
    cube([1, 1, 1.76]);
  translate([12, 150, 0])
    cube([1, 1, 1.76]);
  translate([13, 150, 0])
    cube([1, 1, 1.76]);
  translate([14, 150, 0])
    cube([1, 1, 1.73]);
  translate([15, 150, 0])
    cube([1, 1, 1.76]);
  translate([16, 150, 0])
    cube([1, 1, 1.76]);
  translate([17, 150, 0])
    cube([1, 1, 1.73]);
  translate([18, 150, 0])
    cube([1, 1, 1.73]);
  translate([19, 150, 0])
    cube([1, 1, 1.73]);
  translate([20, 150, 0])
    cube([1, 1, 1.73]);
  translate([21, 150, 0])
    cube([1, 1, 1.73]);
  translate([22, 150, 0])
    cube([1, 1, 1.73]);
  translate([23, 150, 0])
    cube([1, 1, 1.73]);
  translate([24, 150, 0])
    cube([1, 1, 1.73]);
  translate([25, 150, 0])
    cube([1, 1, 1.73]);
  translate([26, 150, 0])
    cube([1, 1, 1.73]);
  translate([27, 150, 0])
    cube([1, 1, 1.73]);
  translate([28, 150, 0])
    cube([1, 1, 1.73]);
  translate([29, 150, 0])
    cube([1, 1, 1.73]);
  translate([30, 150, 0])
    cube([1, 1, 1.69]);
  translate([31, 150, 0])
    cube([1, 1, 1.73]);
  translate([32, 150, 0])
    cube([1, 1, 1.73]);
  translate([33, 150, 0])
    cube([1, 1, 1.69]);
  translate([34, 150, 0])
    cube([1, 1, 1.69]);
  translate([35, 150, 0])
    cube([1, 1, 1.69]);
  translate([36, 150, 0])
    cube([1, 1, 1.73]);
  translate([37, 150, 0])
    cube([1, 1, 1.73]);
  translate([38, 150, 0])
    cube([1, 1, 1.69]);
  translate([39, 150, 0])
    cube([1, 1, 1.69]);
  translate([40, 150, 0])
    cube([1, 1, 1.69]);
  translate([41, 150, 0])
    cube([1, 1, 1.69]);
  translate([42, 150, 0])
    cube([1, 1, 1.69]);
  translate([43, 150, 0])
    cube([1, 1, 1.65]);
  translate([44, 150, 0])
    cube([1, 1, 1.65]);
  translate([45, 150, 0])
    cube([1, 1, 1.65]);
  translate([46, 150, 0])
    cube([1, 1, 1.73]);
  translate([47, 150, 0])
    cube([1, 1, 1.65]);
  translate([48, 150, 0])
    cube([1, 1, 1.69]);
  translate([49, 150, 0])
    cube([1, 1, 1.69]);
  translate([50, 150, 0])
    cube([1, 1, 1.65]);
  translate([51, 150, 0])
    cube([1, 1, 1.57]);
  translate([52, 150, 0])
    cube([1, 1, 7.22]);
  translate([53, 150, 0])
    cube([1, 1, 6.63]);
  translate([54, 150, 0])
    cube([1, 1, 5.92]);
  translate([55, 150, 0])
    cube([1, 1, 5.45]);
  translate([56, 150, 0])
    cube([1, 1, 4.16]);
  translate([57, 150, 0])
    cube([1, 1, 2.94]);
  translate([58, 150, 0])
    cube([1, 1, 3.69]);
  translate([59, 150, 0])
    cube([1, 1, 4.24]);
  translate([60, 150, 0])
    cube([1, 1, 4.67]);
  translate([61, 150, 0])
    cube([1, 1, 4.98]);
  translate([62, 150, 0])
    cube([1, 1, 4.98]);
  translate([63, 150, 0])
    cube([1, 1, 5.02]);
  translate([64, 150, 0])
    cube([1, 1, 5.18]);
  translate([65, 150, 0])
    cube([1, 1, 5.25]);
  translate([66, 150, 0])
    cube([1, 1, 5.49]);
  translate([67, 150, 0])
    cube([1, 1, 5.61]);
  translate([68, 150, 0])
    cube([1, 1, 5.80]);
  translate([69, 150, 0])
    cube([1, 1, 5.88]);
  translate([70, 150, 0])
    cube([1, 1, 5.76]);
  translate([71, 150, 0])
    cube([1, 1, 5.65]);
  translate([72, 150, 0])
    cube([1, 1, 5.53]);
  translate([73, 150, 0])
    cube([1, 1, 5.41]);
  translate([74, 150, 0])
    cube([1, 1, 5.88]);
  translate([75, 150, 0])
    cube([1, 1, 6.00]);
  translate([76, 150, 0])
    cube([1, 1, 5.80]);
  translate([77, 150, 0])
    cube([1, 1, 5.61]);
  translate([78, 150, 0])
    cube([1, 1, 5.25]);
  translate([79, 150, 0])
    cube([1, 1, 4.90]);
  translate([80, 150, 0])
    cube([1, 1, 1.57]);
  translate([81, 150, 0])
    cube([1, 1, 1.45]);
  translate([82, 150, 0])
    cube([1, 1, 4.39]);
  translate([83, 150, 0])
    cube([1, 1, 4.20]);
  translate([84, 150, 0])
    cube([1, 1, 3.88]);
  translate([85, 150, 0])
    cube([1, 1, 2.94]);
  translate([86, 150, 0])
    cube([1, 1, 3.10]);
  translate([87, 150, 0])
    cube([1, 1, 3.18]);
  translate([88, 150, 0])
    cube([1, 1, 3.10]);
  translate([89, 150, 0])
    cube([1, 1, 3.18]);
  translate([90, 150, 0])
    cube([1, 1, 3.14]);
  translate([91, 150, 0])
    cube([1, 1, 3.06]);
  translate([92, 150, 0])
    cube([1, 1, 2.98]);
  translate([93, 150, 0])
    cube([1, 1, 2.94]);
  translate([94, 150, 0])
    cube([1, 1, 3.14]);
  translate([95, 150, 0])
    cube([1, 1, 3.18]);
  translate([96, 150, 0])
    cube([1, 1, 3.29]);
  translate([97, 150, 0])
    cube([1, 1, 3.29]);
  translate([98, 150, 0])
    cube([1, 1, 3.41]);
  translate([99, 150, 0])
    cube([1, 1, 3.61]);
  translate([100, 150, 0])
    cube([1, 1, 3.88]);
  translate([101, 150, 0])
    cube([1, 1, 4.08]);
  translate([102, 150, 0])
    cube([1, 1, 4.16]);
  translate([103, 150, 0])
    cube([1, 1, 4.31]);
  translate([104, 150, 0])
    cube([1, 1, 4.55]);
  translate([105, 150, 0])
    cube([1, 1, 4.86]);
  translate([106, 150, 0])
    cube([1, 1, 4.94]);
  translate([107, 150, 0])
    cube([1, 1, 5.10]);
  translate([108, 150, 0])
    cube([1, 1, 5.29]);
  translate([109, 150, 0])
    cube([1, 1, 5.49]);
  translate([110, 150, 0])
    cube([1, 1, 5.45]);
  translate([111, 150, 0])
    cube([1, 1, 5.57]);
  translate([112, 150, 0])
    cube([1, 1, 5.57]);
  translate([113, 150, 0])
    cube([1, 1, 5.61]);
  translate([114, 150, 0])
    cube([1, 1, 5.53]);
  translate([115, 150, 0])
    cube([1, 1, 5.57]);
  translate([116, 150, 0])
    cube([1, 1, 5.53]);
  translate([117, 150, 0])
    cube([1, 1, 5.53]);
  translate([118, 150, 0])
    cube([1, 1, 5.41]);
  translate([119, 150, 0])
    cube([1, 1, 5.25]);
  translate([120, 150, 0])
    cube([1, 1, 5.25]);
  translate([121, 150, 0])
    cube([1, 1, 5.29]);
  translate([122, 150, 0])
    cube([1, 1, 5.65]);
  translate([123, 150, 0])
    cube([1, 1, 5.76]);
  translate([124, 150, 0])
    cube([1, 1, 6.16]);
  translate([125, 150, 0])
    cube([1, 1, 6.82]);
  translate([126, 150, 0])
    cube([1, 1, 6.55]);
  translate([127, 150, 0])
    cube([1, 1, 5.49]);
  translate([128, 150, 0])
    cube([1, 1, 5.41]);
  translate([129, 150, 0])
    cube([1, 1, 5.25]);
  translate([130, 150, 0])
    cube([1, 1, 5.18]);
  translate([131, 150, 0])
    cube([1, 1, 5.33]);
  translate([132, 150, 0])
    cube([1, 1, 5.49]);
  translate([133, 150, 0])
    cube([1, 1, 5.80]);
  translate([134, 150, 0])
    cube([1, 1, 6.20]);
  translate([135, 150, 0])
    cube([1, 1, 6.51]);
  translate([136, 150, 0])
    cube([1, 1, 6.35]);
  translate([137, 150, 0])
    cube([1, 1, 7.10]);
  translate([138, 150, 0])
    cube([1, 1, 5.73]);
  translate([139, 150, 0])
    cube([1, 1, 5.76]);
  translate([140, 150, 0])
    cube([1, 1, 6.00]);
  translate([141, 150, 0])
    cube([1, 1, 6.20]);
  translate([142, 150, 0])
    cube([1, 1, 6.08]);
  translate([143, 150, 0])
    cube([1, 1, 5.69]);
  translate([144, 150, 0])
    cube([1, 1, 6.04]);
  translate([145, 150, 0])
    cube([1, 1, 6.51]);
  translate([146, 150, 0])
    cube([1, 1, 7.10]);
  translate([147, 150, 0])
    cube([1, 1, 6.63]);
  translate([148, 150, 0])
    cube([1, 1, 6.00]);
  translate([149, 150, 0])
    cube([1, 1, 5.88]);
  translate([150, 150, 0])
    cube([1, 1, 5.76]);
  translate([151, 150, 0])
    cube([1, 1, 5.73]);
  translate([152, 150, 0])
    cube([1, 1, 6.35]);
  translate([153, 150, 0])
    cube([1, 1, 7.18]);
  translate([154, 150, 0])
    cube([1, 1, 4.71]);
  translate([155, 150, 0])
    cube([1, 1, 1.41]);
  translate([156, 150, 0])
    cube([1, 1, 1.53]);
  translate([157, 150, 0])
    cube([1, 1, 1.53]);
  translate([158, 150, 0])
    cube([1, 1, 1.53]);
  translate([159, 150, 0])
    cube([1, 1, 1.53]);
  translate([160, 150, 0])
    cube([1, 1, 1.53]);
  translate([161, 150, 0])
    cube([1, 1, 1.53]);
  translate([162, 150, 0])
    cube([1, 1, 1.57]);
  translate([163, 150, 0])
    cube([1, 1, 1.57]);
  translate([164, 150, 0])
    cube([1, 1, 1.49]);
  translate([165, 150, 0])
    cube([1, 1, 1.57]);
  translate([166, 150, 0])
    cube([1, 1, 1.53]);
  translate([167, 150, 0])
    cube([1, 1, 1.53]);
  translate([168, 150, 0])
    cube([1, 1, 1.57]);
  translate([169, 150, 0])
    cube([1, 1, 1.57]);
  translate([170, 150, 0])
    cube([1, 1, 1.57]);
  translate([171, 150, 0])
    cube([1, 1, 1.53]);
  translate([172, 150, 0])
    cube([1, 1, 1.57]);
  translate([173, 150, 0])
    cube([1, 1, 1.57]);
  translate([174, 150, 0])
    cube([1, 1, 1.57]);
  translate([175, 150, 0])
    cube([1, 1, 1.57]);
  translate([176, 150, 0])
    cube([1, 1, 1.61]);
  translate([177, 150, 0])
    cube([1, 1, 1.57]);
  translate([178, 150, 0])
    cube([1, 1, 1.57]);
  translate([179, 150, 0])
    cube([1, 1, 1.61]);
  translate([180, 150, 0])
    cube([1, 1, 1.61]);
  translate([181, 150, 0])
    cube([1, 1, 1.61]);
  translate([182, 150, 0])
    cube([1, 1, 1.61]);
  translate([183, 150, 0])
    cube([1, 1, 1.61]);
  translate([184, 150, 0])
    cube([1, 1, 1.61]);
  translate([185, 150, 0])
    cube([1, 1, 1.61]);
  translate([186, 150, 0])
    cube([1, 1, 1.61]);
  translate([187, 150, 0])
    cube([1, 1, 1.61]);
  translate([188, 150, 0])
    cube([1, 1, 1.61]);
  translate([189, 150, 0])
    cube([1, 1, 1.61]);
  translate([190, 150, 0])
    cube([1, 1, 1.61]);
  translate([191, 150, 0])
    cube([1, 1, 1.61]);
  translate([192, 150, 0])
    cube([1, 1, 1.61]);
  translate([193, 150, 0])
    cube([1, 1, 1.61]);
  translate([194, 150, 0])
    cube([1, 1, 1.61]);
  translate([195, 150, 0])
    cube([1, 1, 1.69]);
  translate([196, 150, 0])
    cube([1, 1, 1.61]);
  translate([197, 150, 0])
    cube([1, 1, 1.61]);
  translate([198, 150, 0])
    cube([1, 1, 1.61]);
  translate([199, 150, 0])
    cube([1, 1, 1.61]);
  translate([200, 150, 0])
    cube([1, 1, 1.61]);
  translate([201, 150, 0])
    cube([1, 1, 1.61]);
  translate([202, 150, 0])
    cube([1, 1, 1.61]);
  translate([203, 150, 0])
    cube([1, 1, 1.61]);
  translate([204, 150, 0])
    cube([1, 1, 1.61]);
  translate([205, 150, 0])
    cube([1, 1, 1.61]);
  translate([206, 150, 0])
    cube([1, 1, 1.61]);
  translate([207, 150, 0])
    cube([1, 1, 1.61]);
  translate([208, 150, 0])
    cube([1, 1, 1.61]);
  translate([209, 150, 0])
    cube([1, 1, 1.69]);
  translate([210, 150, 0])
    cube([1, 1, 1.69]);
  translate([211, 150, 0])
    cube([1, 1, 1.61]);
  translate([212, 150, 0])
    cube([1, 1, 1.61]);
  translate([213, 150, 0])
    cube([1, 1, 1.61]);
  translate([214, 150, 0])
    cube([1, 1, 1.61]);
  translate([215, 150, 0])
    cube([1, 1, 1.57]);
  translate([216, 150, 0])
    cube([1, 1, 1.61]);
  translate([217, 150, 0])
    cube([1, 1, 1.61]);
  translate([218, 150, 0])
    cube([1, 1, 1.61]);
  translate([219, 150, 0])
    cube([1, 1, 1.61]);
  translate([220, 150, 0])
    cube([1, 1, 1.57]);
  translate([221, 150, 0])
    cube([1, 1, 1.61]);
  translate([222, 150, 0])
    cube([1, 1, 1.61]);
  translate([223, 150, 0])
    cube([1, 1, 1.61]);
  translate([224, 150, 0])
    cube([1, 1, 1.61]);
  translate([225, 150, 0])
    cube([1, 1, 1.61]);
  translate([226, 150, 0])
    cube([1, 1, 1.61]);
  translate([227, 150, 0])
    cube([1, 1, 1.61]);
  translate([228, 150, 0])
    cube([1, 1, 1.61]);
  translate([229, 150, 0])
    cube([1, 1, 1.61]);
  translate([230, 150, 0])
    cube([1, 1, 1.65]);
  translate([231, 150, 0])
    cube([1, 1, 1.53]);
  translate([232, 150, 0])
    cube([1, 1, 1.61]);
  translate([233, 150, 0])
    cube([1, 1, 1.61]);
  translate([234, 150, 0])
    cube([1, 1, 1.61]);
  translate([235, 150, 0])
    cube([1, 1, 1.61]);
  translate([236, 150, 0])
    cube([1, 1, 1.61]);
  translate([237, 150, 0])
    cube([1, 1, 1.61]);
  translate([238, 150, 0])
    cube([1, 1, 1.61]);
  translate([239, 150, 0])
    cube([1, 1, 1.61]);
  translate([240, 150, 0])
    cube([1, 1, 1.61]);
  translate([241, 150, 0])
    cube([1, 1, 1.61]);
  translate([242, 150, 0])
    cube([1, 1, 1.61]);
  translate([243, 150, 0])
    cube([1, 1, 1.61]);
  translate([244, 150, 0])
    cube([1, 1, 1.61]);
  translate([245, 150, 0])
    cube([1, 1, 1.61]);
  translate([246, 150, 0])
    cube([1, 1, 1.61]);
  translate([0, 151, 0])
    cube([1, 1, 1.76]);
  translate([1, 151, 0])
    cube([1, 1, 1.76]);
  translate([2, 151, 0])
    cube([1, 1, 1.80]);
  translate([3, 151, 0])
    cube([1, 1, 1.76]);
  translate([4, 151, 0])
    cube([1, 1, 1.76]);
  translate([5, 151, 0])
    cube([1, 1, 1.76]);
  translate([6, 151, 0])
    cube([1, 1, 1.76]);
  translate([7, 151, 0])
    cube([1, 1, 1.76]);
  translate([8, 151, 0])
    cube([1, 1, 1.80]);
  translate([9, 151, 0])
    cube([1, 1, 1.76]);
  translate([10, 151, 0])
    cube([1, 1, 1.76]);
  translate([11, 151, 0])
    cube([1, 1, 1.76]);
  translate([12, 151, 0])
    cube([1, 1, 1.76]);
  translate([13, 151, 0])
    cube([1, 1, 1.76]);
  translate([14, 151, 0])
    cube([1, 1, 1.73]);
  translate([15, 151, 0])
    cube([1, 1, 1.76]);
  translate([16, 151, 0])
    cube([1, 1, 1.76]);
  translate([17, 151, 0])
    cube([1, 1, 1.73]);
  translate([18, 151, 0])
    cube([1, 1, 1.73]);
  translate([19, 151, 0])
    cube([1, 1, 1.73]);
  translate([20, 151, 0])
    cube([1, 1, 1.73]);
  translate([21, 151, 0])
    cube([1, 1, 1.73]);
  translate([22, 151, 0])
    cube([1, 1, 1.73]);
  translate([23, 151, 0])
    cube([1, 1, 1.73]);
  translate([24, 151, 0])
    cube([1, 1, 1.73]);
  translate([25, 151, 0])
    cube([1, 1, 1.73]);
  translate([26, 151, 0])
    cube([1, 1, 1.73]);
  translate([27, 151, 0])
    cube([1, 1, 1.80]);
  translate([28, 151, 0])
    cube([1, 1, 1.73]);
  translate([29, 151, 0])
    cube([1, 1, 1.73]);
  translate([30, 151, 0])
    cube([1, 1, 1.73]);
  translate([31, 151, 0])
    cube([1, 1, 1.73]);
  translate([32, 151, 0])
    cube([1, 1, 1.73]);
  translate([33, 151, 0])
    cube([1, 1, 1.73]);
  translate([34, 151, 0])
    cube([1, 1, 1.73]);
  translate([35, 151, 0])
    cube([1, 1, 1.73]);
  translate([36, 151, 0])
    cube([1, 1, 1.69]);
  translate([37, 151, 0])
    cube([1, 1, 1.69]);
  translate([38, 151, 0])
    cube([1, 1, 1.69]);
  translate([39, 151, 0])
    cube([1, 1, 1.69]);
  translate([40, 151, 0])
    cube([1, 1, 1.69]);
  translate([41, 151, 0])
    cube([1, 1, 1.69]);
  translate([42, 151, 0])
    cube([1, 1, 1.69]);
  translate([43, 151, 0])
    cube([1, 1, 1.69]);
  translate([44, 151, 0])
    cube([1, 1, 1.69]);
  translate([45, 151, 0])
    cube([1, 1, 1.69]);
  translate([46, 151, 0])
    cube([1, 1, 1.69]);
  translate([47, 151, 0])
    cube([1, 1, 1.69]);
  translate([48, 151, 0])
    cube([1, 1, 1.69]);
  translate([49, 151, 0])
    cube([1, 1, 1.69]);
  translate([50, 151, 0])
    cube([1, 1, 1.69]);
  translate([51, 151, 0])
    cube([1, 1, 1.73]);
  translate([52, 151, 0])
    cube([1, 1, 2.27]);
  translate([53, 151, 0])
    cube([1, 1, 6.67]);
  translate([54, 151, 0])
    cube([1, 1, 6.04]);
  translate([55, 151, 0])
    cube([1, 1, 5.69]);
  translate([56, 151, 0])
    cube([1, 1, 4.63]);
  translate([57, 151, 0])
    cube([1, 1, 2.94]);
  translate([58, 151, 0])
    cube([1, 1, 3.37]);
  translate([59, 151, 0])
    cube([1, 1, 4.08]);
  translate([60, 151, 0])
    cube([1, 1, 4.59]);
  translate([61, 151, 0])
    cube([1, 1, 4.90]);
  translate([62, 151, 0])
    cube([1, 1, 4.90]);
  translate([63, 151, 0])
    cube([1, 1, 4.98]);
  translate([64, 151, 0])
    cube([1, 1, 5.06]);
  translate([65, 151, 0])
    cube([1, 1, 5.14]);
  translate([66, 151, 0])
    cube([1, 1, 5.33]);
  translate([67, 151, 0])
    cube([1, 1, 5.53]);
  translate([68, 151, 0])
    cube([1, 1, 5.80]);
  translate([69, 151, 0])
    cube([1, 1, 5.96]);
  translate([70, 151, 0])
    cube([1, 1, 5.76]);
  translate([71, 151, 0])
    cube([1, 1, 5.69]);
  translate([72, 151, 0])
    cube([1, 1, 5.65]);
  translate([73, 151, 0])
    cube([1, 1, 5.57]);
  translate([74, 151, 0])
    cube([1, 1, 5.57]);
  translate([75, 151, 0])
    cube([1, 1, 6.20]);
  translate([76, 151, 0])
    cube([1, 1, 5.84]);
  translate([77, 151, 0])
    cube([1, 1, 5.65]);
  translate([78, 151, 0])
    cube([1, 1, 5.25]);
  translate([79, 151, 0])
    cube([1, 1, 4.86]);
  translate([80, 151, 0])
    cube([1, 1, 1.65]);
  translate([81, 151, 0])
    cube([1, 1, 1.33]);
  translate([82, 151, 0])
    cube([1, 1, 1.84]);
  translate([83, 151, 0])
    cube([1, 1, 4.78]);
  translate([84, 151, 0])
    cube([1, 1, 4.24]);
  translate([85, 151, 0])
    cube([1, 1, 3.73]);
  translate([86, 151, 0])
    cube([1, 1, 3.33]);
  translate([87, 151, 0])
    cube([1, 1, 3.25]);
  translate([88, 151, 0])
    cube([1, 1, 3.25]);
  translate([89, 151, 0])
    cube([1, 1, 3.29]);
  translate([90, 151, 0])
    cube([1, 1, 3.29]);
  translate([91, 151, 0])
    cube([1, 1, 3.18]);
  translate([92, 151, 0])
    cube([1, 1, 2.98]);
  translate([93, 151, 0])
    cube([1, 1, 2.86]);
  translate([94, 151, 0])
    cube([1, 1, 3.06]);
  translate([95, 151, 0])
    cube([1, 1, 3.14]);
  translate([96, 151, 0])
    cube([1, 1, 3.29]);
  translate([97, 151, 0])
    cube([1, 1, 3.22]);
  translate([98, 151, 0])
    cube([1, 1, 3.29]);
  translate([99, 151, 0])
    cube([1, 1, 3.45]);
  translate([100, 151, 0])
    cube([1, 1, 3.61]);
  translate([101, 151, 0])
    cube([1, 1, 3.92]);
  translate([102, 151, 0])
    cube([1, 1, 4.16]);
  translate([103, 151, 0])
    cube([1, 1, 4.27]);
  translate([104, 151, 0])
    cube([1, 1, 4.51]);
  translate([105, 151, 0])
    cube([1, 1, 4.75]);
  translate([106, 151, 0])
    cube([1, 1, 4.90]);
  translate([107, 151, 0])
    cube([1, 1, 4.86]);
  translate([108, 151, 0])
    cube([1, 1, 5.06]);
  translate([109, 151, 0])
    cube([1, 1, 5.22]);
  translate([110, 151, 0])
    cube([1, 1, 5.29]);
  translate([111, 151, 0])
    cube([1, 1, 5.33]);
  translate([112, 151, 0])
    cube([1, 1, 5.33]);
  translate([113, 151, 0])
    cube([1, 1, 5.37]);
  translate([114, 151, 0])
    cube([1, 1, 5.37]);
  translate([115, 151, 0])
    cube([1, 1, 5.41]);
  translate([116, 151, 0])
    cube([1, 1, 5.37]);
  translate([117, 151, 0])
    cube([1, 1, 5.33]);
  translate([118, 151, 0])
    cube([1, 1, 5.29]);
  translate([119, 151, 0])
    cube([1, 1, 5.18]);
  translate([120, 151, 0])
    cube([1, 1, 5.22]);
  translate([121, 151, 0])
    cube([1, 1, 5.29]);
  translate([122, 151, 0])
    cube([1, 1, 5.57]);
  translate([123, 151, 0])
    cube([1, 1, 5.76]);
  translate([124, 151, 0])
    cube([1, 1, 6.04]);
  translate([125, 151, 0])
    cube([1, 1, 6.63]);
  translate([126, 151, 0])
    cube([1, 1, 6.35]);
  translate([127, 151, 0])
    cube([1, 1, 5.29]);
  translate([128, 151, 0])
    cube([1, 1, 5.18]);
  translate([129, 151, 0])
    cube([1, 1, 5.22]);
  translate([130, 151, 0])
    cube([1, 1, 5.14]);
  translate([131, 151, 0])
    cube([1, 1, 5.29]);
  translate([132, 151, 0])
    cube([1, 1, 5.45]);
  translate([133, 151, 0])
    cube([1, 1, 5.80]);
  translate([134, 151, 0])
    cube([1, 1, 6.27]);
  translate([135, 151, 0])
    cube([1, 1, 6.55]);
  translate([136, 151, 0])
    cube([1, 1, 6.24]);
  translate([137, 151, 0])
    cube([1, 1, 5.57]);
  translate([138, 151, 0])
    cube([1, 1, 5.33]);
  translate([139, 151, 0])
    cube([1, 1, 5.65]);
  translate([140, 151, 0])
    cube([1, 1, 5.84]);
  translate([141, 151, 0])
    cube([1, 1, 6.20]);
  translate([142, 151, 0])
    cube([1, 1, 6.16]);
  translate([143, 151, 0])
    cube([1, 1, 6.00]);
  translate([144, 151, 0])
    cube([1, 1, 5.80]);
  translate([145, 151, 0])
    cube([1, 1, 6.00]);
  translate([146, 151, 0])
    cube([1, 1, 6.78]);
  translate([147, 151, 0])
    cube([1, 1, 6.75]);
  translate([148, 151, 0])
    cube([1, 1, 6.12]);
  translate([149, 151, 0])
    cube([1, 1, 5.92]);
  translate([150, 151, 0])
    cube([1, 1, 5.88]);
  translate([151, 151, 0])
    cube([1, 1, 5.88]);
  translate([152, 151, 0])
    cube([1, 1, 5.73]);
  translate([153, 151, 0])
    cube([1, 1, 6.00]);
  translate([154, 151, 0])
    cube([1, 1, 6.51]);
  translate([155, 151, 0])
    cube([1, 1, 7.37]);
  translate([156, 151, 0])
    cube([1, 1, 1.33]);
  translate([157, 151, 0])
    cube([1, 1, 1.49]);
  translate([158, 151, 0])
    cube([1, 1, 1.61]);
  translate([159, 151, 0])
    cube([1, 1, 1.65]);
  translate([160, 151, 0])
    cube([1, 1, 1.57]);
  translate([161, 151, 0])
    cube([1, 1, 1.57]);
  translate([162, 151, 0])
    cube([1, 1, 1.57]);
  translate([163, 151, 0])
    cube([1, 1, 1.53]);
  translate([164, 151, 0])
    cube([1, 1, 1.57]);
  translate([165, 151, 0])
    cube([1, 1, 1.57]);
  translate([166, 151, 0])
    cube([1, 1, 1.57]);
  translate([167, 151, 0])
    cube([1, 1, 1.57]);
  translate([168, 151, 0])
    cube([1, 1, 1.57]);
  translate([169, 151, 0])
    cube([1, 1, 1.57]);
  translate([170, 151, 0])
    cube([1, 1, 1.57]);
  translate([171, 151, 0])
    cube([1, 1, 1.57]);
  translate([172, 151, 0])
    cube([1, 1, 1.57]);
  translate([173, 151, 0])
    cube([1, 1, 1.57]);
  translate([174, 151, 0])
    cube([1, 1, 1.57]);
  translate([175, 151, 0])
    cube([1, 1, 1.61]);
  translate([176, 151, 0])
    cube([1, 1, 1.61]);
  translate([177, 151, 0])
    cube([1, 1, 1.61]);
  translate([178, 151, 0])
    cube([1, 1, 1.61]);
  translate([179, 151, 0])
    cube([1, 1, 1.61]);
  translate([180, 151, 0])
    cube([1, 1, 1.61]);
  translate([181, 151, 0])
    cube([1, 1, 1.61]);
  translate([182, 151, 0])
    cube([1, 1, 1.61]);
  translate([183, 151, 0])
    cube([1, 1, 1.61]);
  translate([184, 151, 0])
    cube([1, 1, 1.61]);
  translate([185, 151, 0])
    cube([1, 1, 1.61]);
  translate([186, 151, 0])
    cube([1, 1, 1.61]);
  translate([187, 151, 0])
    cube([1, 1, 1.61]);
  translate([188, 151, 0])
    cube([1, 1, 1.61]);
  translate([189, 151, 0])
    cube([1, 1, 1.61]);
  translate([190, 151, 0])
    cube([1, 1, 1.61]);
  translate([191, 151, 0])
    cube([1, 1, 1.61]);
  translate([192, 151, 0])
    cube([1, 1, 1.61]);
  translate([193, 151, 0])
    cube([1, 1, 1.65]);
  translate([194, 151, 0])
    cube([1, 1, 1.65]);
  translate([195, 151, 0])
    cube([1, 1, 1.61]);
  translate([196, 151, 0])
    cube([1, 1, 1.61]);
  translate([197, 151, 0])
    cube([1, 1, 1.61]);
  translate([198, 151, 0])
    cube([1, 1, 1.61]);
  translate([199, 151, 0])
    cube([1, 1, 1.65]);
  translate([200, 151, 0])
    cube([1, 1, 1.65]);
  translate([201, 151, 0])
    cube([1, 1, 1.61]);
  translate([202, 151, 0])
    cube([1, 1, 1.61]);
  translate([203, 151, 0])
    cube([1, 1, 1.69]);
  translate([204, 151, 0])
    cube([1, 1, 1.65]);
  translate([205, 151, 0])
    cube([1, 1, 1.65]);
  translate([206, 151, 0])
    cube([1, 1, 1.65]);
  translate([207, 151, 0])
    cube([1, 1, 1.65]);
  translate([208, 151, 0])
    cube([1, 1, 1.57]);
  translate([209, 151, 0])
    cube([1, 1, 1.61]);
  translate([210, 151, 0])
    cube([1, 1, 1.61]);
  translate([211, 151, 0])
    cube([1, 1, 1.65]);
  translate([212, 151, 0])
    cube([1, 1, 1.65]);
  translate([213, 151, 0])
    cube([1, 1, 1.61]);
  translate([214, 151, 0])
    cube([1, 1, 1.61]);
  translate([215, 151, 0])
    cube([1, 1, 1.61]);
  translate([216, 151, 0])
    cube([1, 1, 1.65]);
  translate([217, 151, 0])
    cube([1, 1, 1.61]);
  translate([218, 151, 0])
    cube([1, 1, 1.61]);
  translate([219, 151, 0])
    cube([1, 1, 1.61]);
  translate([220, 151, 0])
    cube([1, 1, 1.61]);
  translate([221, 151, 0])
    cube([1, 1, 1.65]);
  translate([222, 151, 0])
    cube([1, 1, 1.61]);
  translate([223, 151, 0])
    cube([1, 1, 1.61]);
  translate([224, 151, 0])
    cube([1, 1, 1.61]);
  translate([225, 151, 0])
    cube([1, 1, 1.61]);
  translate([226, 151, 0])
    cube([1, 1, 1.61]);
  translate([227, 151, 0])
    cube([1, 1, 1.61]);
  translate([228, 151, 0])
    cube([1, 1, 1.61]);
  translate([229, 151, 0])
    cube([1, 1, 1.61]);
  translate([230, 151, 0])
    cube([1, 1, 1.61]);
  translate([231, 151, 0])
    cube([1, 1, 1.61]);
  translate([232, 151, 0])
    cube([1, 1, 1.65]);
  translate([233, 151, 0])
    cube([1, 1, 1.61]);
  translate([234, 151, 0])
    cube([1, 1, 1.61]);
  translate([235, 151, 0])
    cube([1, 1, 1.61]);
  translate([236, 151, 0])
    cube([1, 1, 1.61]);
  translate([237, 151, 0])
    cube([1, 1, 1.61]);
  translate([238, 151, 0])
    cube([1, 1, 1.61]);
  translate([239, 151, 0])
    cube([1, 1, 1.61]);
  translate([240, 151, 0])
    cube([1, 1, 1.61]);
  translate([241, 151, 0])
    cube([1, 1, 1.61]);
  translate([242, 151, 0])
    cube([1, 1, 1.61]);
  translate([243, 151, 0])
    cube([1, 1, 1.61]);
  translate([244, 151, 0])
    cube([1, 1, 1.61]);
  translate([245, 151, 0])
    cube([1, 1, 1.61]);
  translate([246, 151, 0])
    cube([1, 1, 1.61]);
  translate([0, 152, 0])
    cube([1, 1, 1.80]);
  translate([1, 152, 0])
    cube([1, 1, 1.80]);
  translate([2, 152, 0])
    cube([1, 1, 1.80]);
  translate([3, 152, 0])
    cube([1, 1, 1.76]);
  translate([4, 152, 0])
    cube([1, 1, 1.80]);
  translate([5, 152, 0])
    cube([1, 1, 1.80]);
  translate([6, 152, 0])
    cube([1, 1, 1.76]);
  translate([7, 152, 0])
    cube([1, 1, 1.80]);
  translate([8, 152, 0])
    cube([1, 1, 1.80]);
  translate([9, 152, 0])
    cube([1, 1, 1.76]);
  translate([10, 152, 0])
    cube([1, 1, 1.80]);
  translate([11, 152, 0])
    cube([1, 1, 1.76]);
  translate([12, 152, 0])
    cube([1, 1, 1.76]);
  translate([13, 152, 0])
    cube([1, 1, 1.76]);
  translate([14, 152, 0])
    cube([1, 1, 1.76]);
  translate([15, 152, 0])
    cube([1, 1, 1.76]);
  translate([16, 152, 0])
    cube([1, 1, 1.76]);
  translate([17, 152, 0])
    cube([1, 1, 1.76]);
  translate([18, 152, 0])
    cube([1, 1, 1.76]);
  translate([19, 152, 0])
    cube([1, 1, 1.76]);
  translate([20, 152, 0])
    cube([1, 1, 1.73]);
  translate([21, 152, 0])
    cube([1, 1, 1.73]);
  translate([22, 152, 0])
    cube([1, 1, 1.73]);
  translate([23, 152, 0])
    cube([1, 1, 1.73]);
  translate([24, 152, 0])
    cube([1, 1, 1.73]);
  translate([25, 152, 0])
    cube([1, 1, 1.69]);
  translate([26, 152, 0])
    cube([1, 1, 1.76]);
  translate([27, 152, 0])
    cube([1, 1, 1.73]);
  translate([28, 152, 0])
    cube([1, 1, 1.73]);
  translate([29, 152, 0])
    cube([1, 1, 1.73]);
  translate([30, 152, 0])
    cube([1, 1, 1.73]);
  translate([31, 152, 0])
    cube([1, 1, 1.73]);
  translate([32, 152, 0])
    cube([1, 1, 1.73]);
  translate([33, 152, 0])
    cube([1, 1, 1.73]);
  translate([34, 152, 0])
    cube([1, 1, 1.73]);
  translate([35, 152, 0])
    cube([1, 1, 1.73]);
  translate([36, 152, 0])
    cube([1, 1, 1.69]);
  translate([37, 152, 0])
    cube([1, 1, 1.69]);
  translate([38, 152, 0])
    cube([1, 1, 1.65]);
  translate([39, 152, 0])
    cube([1, 1, 1.65]);
  translate([40, 152, 0])
    cube([1, 1, 1.69]);
  translate([41, 152, 0])
    cube([1, 1, 1.69]);
  translate([42, 152, 0])
    cube([1, 1, 1.69]);
  translate([43, 152, 0])
    cube([1, 1, 1.69]);
  translate([44, 152, 0])
    cube([1, 1, 1.69]);
  translate([45, 152, 0])
    cube([1, 1, 1.69]);
  translate([46, 152, 0])
    cube([1, 1, 1.69]);
  translate([47, 152, 0])
    cube([1, 1, 1.69]);
  translate([48, 152, 0])
    cube([1, 1, 1.69]);
  translate([49, 152, 0])
    cube([1, 1, 1.69]);
  translate([50, 152, 0])
    cube([1, 1, 1.69]);
  translate([51, 152, 0])
    cube([1, 1, 1.69]);
  translate([52, 152, 0])
    cube([1, 1, 1.65]);
  translate([53, 152, 0])
    cube([1, 1, 6.82]);
  translate([54, 152, 0])
    cube([1, 1, 5.92]);
  translate([55, 152, 0])
    cube([1, 1, 5.76]);
  translate([56, 152, 0])
    cube([1, 1, 4.90]);
  translate([57, 152, 0])
    cube([1, 1, 3.37]);
  translate([58, 152, 0])
    cube([1, 1, 2.94]);
  translate([59, 152, 0])
    cube([1, 1, 3.69]);
  translate([60, 152, 0])
    cube([1, 1, 4.39]);
  translate([61, 152, 0])
    cube([1, 1, 4.78]);
  translate([62, 152, 0])
    cube([1, 1, 4.90]);
  translate([63, 152, 0])
    cube([1, 1, 4.98]);
  translate([64, 152, 0])
    cube([1, 1, 5.02]);
  translate([65, 152, 0])
    cube([1, 1, 5.10]);
  translate([66, 152, 0])
    cube([1, 1, 5.18]);
  translate([67, 152, 0])
    cube([1, 1, 5.41]);
  translate([68, 152, 0])
    cube([1, 1, 5.61]);
  translate([69, 152, 0])
    cube([1, 1, 5.76]);
  translate([70, 152, 0])
    cube([1, 1, 5.80]);
  translate([71, 152, 0])
    cube([1, 1, 5.73]);
  translate([72, 152, 0])
    cube([1, 1, 5.65]);
  translate([73, 152, 0])
    cube([1, 1, 5.49]);
  translate([74, 152, 0])
    cube([1, 1, 5.53]);
  translate([75, 152, 0])
    cube([1, 1, 6.24]);
  translate([76, 152, 0])
    cube([1, 1, 5.88]);
  translate([77, 152, 0])
    cube([1, 1, 5.57]);
  translate([78, 152, 0])
    cube([1, 1, 5.14]);
  translate([79, 152, 0])
    cube([1, 1, 4.59]);
  translate([80, 152, 0])
    cube([1, 1, 1.61]);
  translate([81, 152, 0])
    cube([1, 1, 1.57]);
  translate([82, 152, 0])
    cube([1, 1, 1.61]);
  translate([83, 152, 0])
    cube([1, 1, 5.92]);
  translate([84, 152, 0])
    cube([1, 1, 4.86]);
  translate([85, 152, 0])
    cube([1, 1, 4.04]);
  translate([86, 152, 0])
    cube([1, 1, 3.53]);
  translate([87, 152, 0])
    cube([1, 1, 3.29]);
  translate([88, 152, 0])
    cube([1, 1, 3.37]);
  translate([89, 152, 0])
    cube([1, 1, 3.33]);
  translate([90, 152, 0])
    cube([1, 1, 3.33]);
  translate([91, 152, 0])
    cube([1, 1, 3.18]);
  translate([92, 152, 0])
    cube([1, 1, 3.06]);
  translate([93, 152, 0])
    cube([1, 1, 2.90]);
  translate([94, 152, 0])
    cube([1, 1, 2.90]);
  translate([95, 152, 0])
    cube([1, 1, 3.10]);
  translate([96, 152, 0])
    cube([1, 1, 3.25]);
  translate([97, 152, 0])
    cube([1, 1, 3.22]);
  translate([98, 152, 0])
    cube([1, 1, 3.22]);
  translate([99, 152, 0])
    cube([1, 1, 3.37]);
  translate([100, 152, 0])
    cube([1, 1, 3.53]);
  translate([101, 152, 0])
    cube([1, 1, 3.80]);
  translate([102, 152, 0])
    cube([1, 1, 3.96]);
  translate([103, 152, 0])
    cube([1, 1, 4.20]);
  translate([104, 152, 0])
    cube([1, 1, 4.39]);
  translate([105, 152, 0])
    cube([1, 1, 4.59]);
  translate([106, 152, 0])
    cube([1, 1, 4.75]);
  translate([107, 152, 0])
    cube([1, 1, 4.94]);
  translate([108, 152, 0])
    cube([1, 1, 4.98]);
  translate([109, 152, 0])
    cube([1, 1, 5.18]);
  translate([110, 152, 0])
    cube([1, 1, 5.14]);
  translate([111, 152, 0])
    cube([1, 1, 5.25]);
  translate([112, 152, 0])
    cube([1, 1, 5.29]);
  translate([113, 152, 0])
    cube([1, 1, 5.25]);
  translate([114, 152, 0])
    cube([1, 1, 5.29]);
  translate([115, 152, 0])
    cube([1, 1, 5.25]);
  translate([116, 152, 0])
    cube([1, 1, 5.14]);
  translate([117, 152, 0])
    cube([1, 1, 5.22]);
  translate([118, 152, 0])
    cube([1, 1, 5.02]);
  translate([119, 152, 0])
    cube([1, 1, 5.02]);
  translate([120, 152, 0])
    cube([1, 1, 5.18]);
  translate([121, 152, 0])
    cube([1, 1, 5.29]);
  translate([122, 152, 0])
    cube([1, 1, 5.61]);
  translate([123, 152, 0])
    cube([1, 1, 5.76]);
  translate([124, 152, 0])
    cube([1, 1, 6.20]);
  translate([125, 152, 0])
    cube([1, 1, 6.63]);
  translate([126, 152, 0])
    cube([1, 1, 6.08]);
  translate([127, 152, 0])
    cube([1, 1, 5.25]);
  translate([128, 152, 0])
    cube([1, 1, 5.06]);
  translate([129, 152, 0])
    cube([1, 1, 5.02]);
  translate([130, 152, 0])
    cube([1, 1, 5.02]);
  translate([131, 152, 0])
    cube([1, 1, 5.10]);
  translate([132, 152, 0])
    cube([1, 1, 5.41]);
  translate([133, 152, 0])
    cube([1, 1, 5.73]);
  translate([134, 152, 0])
    cube([1, 1, 6.31]);
  translate([135, 152, 0])
    cube([1, 1, 6.35]);
  translate([136, 152, 0])
    cube([1, 1, 6.27]);
  translate([137, 152, 0])
    cube([1, 1, 5.14]);
  translate([138, 152, 0])
    cube([1, 1, 5.37]);
  translate([139, 152, 0])
    cube([1, 1, 5.53]);
  translate([140, 152, 0])
    cube([1, 1, 5.76]);
  translate([141, 152, 0])
    cube([1, 1, 6.04]);
  translate([142, 152, 0])
    cube([1, 1, 6.31]);
  translate([143, 152, 0])
    cube([1, 1, 6.16]);
  translate([144, 152, 0])
    cube([1, 1, 5.96]);
  translate([145, 152, 0])
    cube([1, 1, 5.88]);
  translate([146, 152, 0])
    cube([1, 1, 6.27]);
  translate([147, 152, 0])
    cube([1, 1, 6.78]);
  translate([148, 152, 0])
    cube([1, 1, 6.63]);
  translate([149, 152, 0])
    cube([1, 1, 6.16]);
  translate([150, 152, 0])
    cube([1, 1, 5.88]);
  translate([151, 152, 0])
    cube([1, 1, 5.88]);
  translate([152, 152, 0])
    cube([1, 1, 5.84]);
  translate([153, 152, 0])
    cube([1, 1, 5.88]);
  translate([154, 152, 0])
    cube([1, 1, 5.84]);
  translate([155, 152, 0])
    cube([1, 1, 6.39]);
  translate([156, 152, 0])
    cube([1, 1, 7.22]);
  translate([157, 152, 0])
    cube([1, 1, 1.61]);
  translate([158, 152, 0])
    cube([1, 1, 1.33]);
  translate([159, 152, 0])
    cube([1, 1, 1.96]);
  translate([160, 152, 0])
    cube([1, 1, 1.57]);
  translate([161, 152, 0])
    cube([1, 1, 1.57]);
  translate([162, 152, 0])
    cube([1, 1, 1.53]);
  translate([163, 152, 0])
    cube([1, 1, 1.57]);
  translate([164, 152, 0])
    cube([1, 1, 1.57]);
  translate([165, 152, 0])
    cube([1, 1, 1.57]);
  translate([166, 152, 0])
    cube([1, 1, 1.57]);
  translate([167, 152, 0])
    cube([1, 1, 1.57]);
  translate([168, 152, 0])
    cube([1, 1, 1.57]);
  translate([169, 152, 0])
    cube([1, 1, 1.57]);
  translate([170, 152, 0])
    cube([1, 1, 1.57]);
  translate([171, 152, 0])
    cube([1, 1, 1.57]);
  translate([172, 152, 0])
    cube([1, 1, 1.57]);
  translate([173, 152, 0])
    cube([1, 1, 1.57]);
  translate([174, 152, 0])
    cube([1, 1, 1.49]);
  translate([175, 152, 0])
    cube([1, 1, 1.61]);
  translate([176, 152, 0])
    cube([1, 1, 1.61]);
  translate([177, 152, 0])
    cube([1, 1, 1.61]);
  translate([178, 152, 0])
    cube([1, 1, 1.61]);
  translate([179, 152, 0])
    cube([1, 1, 1.61]);
  translate([180, 152, 0])
    cube([1, 1, 1.61]);
  translate([181, 152, 0])
    cube([1, 1, 1.61]);
  translate([182, 152, 0])
    cube([1, 1, 1.61]);
  translate([183, 152, 0])
    cube([1, 1, 1.61]);
  translate([184, 152, 0])
    cube([1, 1, 1.61]);
  translate([185, 152, 0])
    cube([1, 1, 1.65]);
  translate([186, 152, 0])
    cube([1, 1, 1.65]);
  translate([187, 152, 0])
    cube([1, 1, 1.53]);
  translate([188, 152, 0])
    cube([1, 1, 1.61]);
  translate([189, 152, 0])
    cube([1, 1, 1.65]);
  translate([190, 152, 0])
    cube([1, 1, 1.65]);
  translate([191, 152, 0])
    cube([1, 1, 1.65]);
  translate([192, 152, 0])
    cube([1, 1, 1.69]);
  translate([193, 152, 0])
    cube([1, 1, 1.65]);
  translate([194, 152, 0])
    cube([1, 1, 1.65]);
  translate([195, 152, 0])
    cube([1, 1, 1.65]);
  translate([196, 152, 0])
    cube([1, 1, 1.61]);
  translate([197, 152, 0])
    cube([1, 1, 1.65]);
  translate([198, 152, 0])
    cube([1, 1, 1.65]);
  translate([199, 152, 0])
    cube([1, 1, 1.65]);
  translate([200, 152, 0])
    cube([1, 1, 1.65]);
  translate([201, 152, 0])
    cube([1, 1, 1.65]);
  translate([202, 152, 0])
    cube([1, 1, 1.65]);
  translate([203, 152, 0])
    cube([1, 1, 1.65]);
  translate([204, 152, 0])
    cube([1, 1, 1.65]);
  translate([205, 152, 0])
    cube([1, 1, 1.65]);
  translate([206, 152, 0])
    cube([1, 1, 1.65]);
  translate([207, 152, 0])
    cube([1, 1, 1.65]);
  translate([208, 152, 0])
    cube([1, 1, 1.65]);
  translate([209, 152, 0])
    cube([1, 1, 1.65]);
  translate([210, 152, 0])
    cube([1, 1, 1.65]);
  translate([211, 152, 0])
    cube([1, 1, 1.65]);
  translate([212, 152, 0])
    cube([1, 1, 1.65]);
  translate([213, 152, 0])
    cube([1, 1, 1.65]);
  translate([214, 152, 0])
    cube([1, 1, 1.61]);
  translate([215, 152, 0])
    cube([1, 1, 1.69]);
  translate([216, 152, 0])
    cube([1, 1, 1.65]);
  translate([217, 152, 0])
    cube([1, 1, 1.61]);
  translate([218, 152, 0])
    cube([1, 1, 1.61]);
  translate([219, 152, 0])
    cube([1, 1, 1.65]);
  translate([220, 152, 0])
    cube([1, 1, 1.65]);
  translate([221, 152, 0])
    cube([1, 1, 1.65]);
  translate([222, 152, 0])
    cube([1, 1, 1.65]);
  translate([223, 152, 0])
    cube([1, 1, 1.65]);
  translate([224, 152, 0])
    cube([1, 1, 1.65]);
  translate([225, 152, 0])
    cube([1, 1, 1.61]);
  translate([226, 152, 0])
    cube([1, 1, 1.61]);
  translate([227, 152, 0])
    cube([1, 1, 1.61]);
  translate([228, 152, 0])
    cube([1, 1, 1.61]);
  translate([229, 152, 0])
    cube([1, 1, 1.61]);
  translate([230, 152, 0])
    cube([1, 1, 1.61]);
  translate([231, 152, 0])
    cube([1, 1, 1.61]);
  translate([232, 152, 0])
    cube([1, 1, 1.61]);
  translate([233, 152, 0])
    cube([1, 1, 1.61]);
  translate([234, 152, 0])
    cube([1, 1, 1.61]);
  translate([235, 152, 0])
    cube([1, 1, 1.61]);
  translate([236, 152, 0])
    cube([1, 1, 1.61]);
  translate([237, 152, 0])
    cube([1, 1, 1.61]);
  translate([238, 152, 0])
    cube([1, 1, 1.61]);
  translate([239, 152, 0])
    cube([1, 1, 1.61]);
  translate([240, 152, 0])
    cube([1, 1, 1.61]);
  translate([241, 152, 0])
    cube([1, 1, 1.61]);
  translate([242, 152, 0])
    cube([1, 1, 1.61]);
  translate([243, 152, 0])
    cube([1, 1, 1.61]);
  translate([244, 152, 0])
    cube([1, 1, 1.61]);
  translate([245, 152, 0])
    cube([1, 1, 1.61]);
  translate([246, 152, 0])
    cube([1, 1, 1.61]);
  translate([0, 153, 0])
    cube([1, 1, 1.80]);
  translate([1, 153, 0])
    cube([1, 1, 1.80]);
  translate([2, 153, 0])
    cube([1, 1, 1.80]);
  translate([3, 153, 0])
    cube([1, 1, 1.76]);
  translate([4, 153, 0])
    cube([1, 1, 1.80]);
  translate([5, 153, 0])
    cube([1, 1, 1.80]);
  translate([6, 153, 0])
    cube([1, 1, 1.76]);
  translate([7, 153, 0])
    cube([1, 1, 1.80]);
  translate([8, 153, 0])
    cube([1, 1, 1.76]);
  translate([9, 153, 0])
    cube([1, 1, 1.80]);
  translate([10, 153, 0])
    cube([1, 1, 1.76]);
  translate([11, 153, 0])
    cube([1, 1, 1.76]);
  translate([12, 153, 0])
    cube([1, 1, 1.76]);
  translate([13, 153, 0])
    cube([1, 1, 1.76]);
  translate([14, 153, 0])
    cube([1, 1, 1.76]);
  translate([15, 153, 0])
    cube([1, 1, 1.76]);
  translate([16, 153, 0])
    cube([1, 1, 1.76]);
  translate([17, 153, 0])
    cube([1, 1, 1.76]);
  translate([18, 153, 0])
    cube([1, 1, 1.76]);
  translate([19, 153, 0])
    cube([1, 1, 1.76]);
  translate([20, 153, 0])
    cube([1, 1, 1.76]);
  translate([21, 153, 0])
    cube([1, 1, 1.76]);
  translate([22, 153, 0])
    cube([1, 1, 1.76]);
  translate([23, 153, 0])
    cube([1, 1, 1.76]);
  translate([24, 153, 0])
    cube([1, 1, 1.73]);
  translate([25, 153, 0])
    cube([1, 1, 1.69]);
  translate([26, 153, 0])
    cube([1, 1, 1.76]);
  translate([27, 153, 0])
    cube([1, 1, 1.73]);
  translate([28, 153, 0])
    cube([1, 1, 1.73]);
  translate([29, 153, 0])
    cube([1, 1, 1.73]);
  translate([30, 153, 0])
    cube([1, 1, 1.73]);
  translate([31, 153, 0])
    cube([1, 1, 1.73]);
  translate([32, 153, 0])
    cube([1, 1, 1.73]);
  translate([33, 153, 0])
    cube([1, 1, 1.73]);
  translate([34, 153, 0])
    cube([1, 1, 1.73]);
  translate([35, 153, 0])
    cube([1, 1, 1.73]);
  translate([36, 153, 0])
    cube([1, 1, 1.69]);
  translate([37, 153, 0])
    cube([1, 1, 1.69]);
  translate([38, 153, 0])
    cube([1, 1, 1.73]);
  translate([39, 153, 0])
    cube([1, 1, 1.73]);
  translate([40, 153, 0])
    cube([1, 1, 1.69]);
  translate([41, 153, 0])
    cube([1, 1, 1.69]);
  translate([42, 153, 0])
    cube([1, 1, 1.69]);
  translate([43, 153, 0])
    cube([1, 1, 1.69]);
  translate([44, 153, 0])
    cube([1, 1, 1.69]);
  translate([45, 153, 0])
    cube([1, 1, 1.69]);
  translate([46, 153, 0])
    cube([1, 1, 1.69]);
  translate([47, 153, 0])
    cube([1, 1, 1.69]);
  translate([48, 153, 0])
    cube([1, 1, 1.69]);
  translate([49, 153, 0])
    cube([1, 1, 1.69]);
  translate([50, 153, 0])
    cube([1, 1, 1.69]);
  translate([51, 153, 0])
    cube([1, 1, 1.69]);
  translate([52, 153, 0])
    cube([1, 1, 1.92]);
  translate([53, 153, 0])
    cube([1, 1, 7.45]);
  translate([54, 153, 0])
    cube([1, 1, 6.00]);
  translate([55, 153, 0])
    cube([1, 1, 5.84]);
  translate([56, 153, 0])
    cube([1, 1, 5.41]);
  translate([57, 153, 0])
    cube([1, 1, 3.92]);
  translate([58, 153, 0])
    cube([1, 1, 2.78]);
  translate([59, 153, 0])
    cube([1, 1, 3.37]);
  translate([60, 153, 0])
    cube([1, 1, 4.16]);
  translate([61, 153, 0])
    cube([1, 1, 4.67]);
  translate([62, 153, 0])
    cube([1, 1, 4.86]);
  translate([63, 153, 0])
    cube([1, 1, 4.90]);
  translate([64, 153, 0])
    cube([1, 1, 4.94]);
  translate([65, 153, 0])
    cube([1, 1, 5.06]);
  translate([66, 153, 0])
    cube([1, 1, 5.14]);
  translate([67, 153, 0])
    cube([1, 1, 5.25]);
  translate([68, 153, 0])
    cube([1, 1, 5.45]);
  translate([69, 153, 0])
    cube([1, 1, 5.61]);
  translate([70, 153, 0])
    cube([1, 1, 5.73]);
  translate([71, 153, 0])
    cube([1, 1, 5.65]);
  translate([72, 153, 0])
    cube([1, 1, 5.65]);
  translate([73, 153, 0])
    cube([1, 1, 5.61]);
  translate([74, 153, 0])
    cube([1, 1, 5.53]);
  translate([75, 153, 0])
    cube([1, 1, 6.24]);
  translate([76, 153, 0])
    cube([1, 1, 5.84]);
  translate([77, 153, 0])
    cube([1, 1, 5.49]);
  translate([78, 153, 0])
    cube([1, 1, 5.18]);
  translate([79, 153, 0])
    cube([1, 1, 4.12]);
  translate([80, 153, 0])
    cube([1, 1, 1.65]);
  translate([81, 153, 0])
    cube([1, 1, 1.57]);
  translate([82, 153, 0])
    cube([1, 1, 1.61]);
  translate([83, 153, 0])
    cube([1, 1, 1.49]);
  translate([84, 153, 0])
    cube([1, 1, 5.37]);
  translate([85, 153, 0])
    cube([1, 1, 4.51]);
  translate([86, 153, 0])
    cube([1, 1, 3.73]);
  translate([87, 153, 0])
    cube([1, 1, 3.49]);
  translate([88, 153, 0])
    cube([1, 1, 3.41]);
  translate([89, 153, 0])
    cube([1, 1, 3.41]);
  translate([90, 153, 0])
    cube([1, 1, 3.49]);
  translate([91, 153, 0])
    cube([1, 1, 3.25]);
  translate([92, 153, 0])
    cube([1, 1, 3.18]);
  translate([93, 153, 0])
    cube([1, 1, 2.98]);
  translate([94, 153, 0])
    cube([1, 1, 2.78]);
  translate([95, 153, 0])
    cube([1, 1, 2.86]);
  translate([96, 153, 0])
    cube([1, 1, 3.18]);
  translate([97, 153, 0])
    cube([1, 1, 3.18]);
  translate([98, 153, 0])
    cube([1, 1, 3.18]);
  translate([99, 153, 0])
    cube([1, 1, 3.25]);
  translate([100, 153, 0])
    cube([1, 1, 3.41]);
  translate([101, 153, 0])
    cube([1, 1, 3.65]);
  translate([102, 153, 0])
    cube([1, 1, 3.76]);
  translate([103, 153, 0])
    cube([1, 1, 4.04]);
  translate([104, 153, 0])
    cube([1, 1, 4.16]);
  translate([105, 153, 0])
    cube([1, 1, 4.47]);
  translate([106, 153, 0])
    cube([1, 1, 4.63]);
  translate([107, 153, 0])
    cube([1, 1, 4.75]);
  translate([108, 153, 0])
    cube([1, 1, 4.94]);
  translate([109, 153, 0])
    cube([1, 1, 4.90]);
  translate([110, 153, 0])
    cube([1, 1, 4.90]);
  translate([111, 153, 0])
    cube([1, 1, 4.90]);
  translate([112, 153, 0])
    cube([1, 1, 5.18]);
  translate([113, 153, 0])
    cube([1, 1, 5.10]);
  translate([114, 153, 0])
    cube([1, 1, 5.14]);
  translate([115, 153, 0])
    cube([1, 1, 5.10]);
  translate([116, 153, 0])
    cube([1, 1, 5.14]);
  translate([117, 153, 0])
    cube([1, 1, 4.98]);
  translate([118, 153, 0])
    cube([1, 1, 5.02]);
  translate([119, 153, 0])
    cube([1, 1, 4.90]);
  translate([120, 153, 0])
    cube([1, 1, 5.06]);
  translate([121, 153, 0])
    cube([1, 1, 5.29]);
  translate([122, 153, 0])
    cube([1, 1, 5.49]);
  translate([123, 153, 0])
    cube([1, 1, 5.65]);
  translate([124, 153, 0])
    cube([1, 1, 6.08]);
  translate([125, 153, 0])
    cube([1, 1, 6.51]);
  translate([126, 153, 0])
    cube([1, 1, 5.76]);
  translate([127, 153, 0])
    cube([1, 1, 4.98]);
  translate([128, 153, 0])
    cube([1, 1, 4.90]);
  translate([129, 153, 0])
    cube([1, 1, 4.94]);
  translate([130, 153, 0])
    cube([1, 1, 4.94]);
  translate([131, 153, 0])
    cube([1, 1, 5.22]);
  translate([132, 153, 0])
    cube([1, 1, 5.49]);
  translate([133, 153, 0])
    cube([1, 1, 6.04]);
  translate([134, 153, 0])
    cube([1, 1, 6.31]);
  translate([135, 153, 0])
    cube([1, 1, 6.24]);
  translate([136, 153, 0])
    cube([1, 1, 6.20]);
  translate([137, 153, 0])
    cube([1, 1, 5.10]);
  translate([138, 153, 0])
    cube([1, 1, 5.29]);
  translate([139, 153, 0])
    cube([1, 1, 5.37]);
  translate([140, 153, 0])
    cube([1, 1, 5.57]);
  translate([141, 153, 0])
    cube([1, 1, 5.84]);
  translate([142, 153, 0])
    cube([1, 1, 6.08]);
  translate([143, 153, 0])
    cube([1, 1, 6.16]);
  translate([144, 153, 0])
    cube([1, 1, 6.00]);
  translate([145, 153, 0])
    cube([1, 1, 6.00]);
  translate([146, 153, 0])
    cube([1, 1, 6.16]);
  translate([147, 153, 0])
    cube([1, 1, 6.51]);
  translate([148, 153, 0])
    cube([1, 1, 6.98]);
  translate([149, 153, 0])
    cube([1, 1, 6.71]);
  translate([150, 153, 0])
    cube([1, 1, 6.20]);
  translate([151, 153, 0])
    cube([1, 1, 5.96]);
  translate([152, 153, 0])
    cube([1, 1, 5.88]);
  translate([153, 153, 0])
    cube([1, 1, 5.80]);
  translate([154, 153, 0])
    cube([1, 1, 5.84]);
  translate([155, 153, 0])
    cube([1, 1, 5.73]);
  translate([156, 153, 0])
    cube([1, 1, 6.51]);
  translate([157, 153, 0])
    cube([1, 1, 6.94]);
  translate([158, 153, 0])
    cube([1, 1, 1.61]);
  translate([159, 153, 0])
    cube([1, 1, 1.41]);
  translate([160, 153, 0])
    cube([1, 1, 1.57]);
  translate([161, 153, 0])
    cube([1, 1, 1.57]);
  translate([162, 153, 0])
    cube([1, 1, 1.53]);
  translate([163, 153, 0])
    cube([1, 1, 1.57]);
  translate([164, 153, 0])
    cube([1, 1, 1.57]);
  translate([165, 153, 0])
    cube([1, 1, 1.57]);
  translate([166, 153, 0])
    cube([1, 1, 1.57]);
  translate([167, 153, 0])
    cube([1, 1, 1.57]);
  translate([168, 153, 0])
    cube([1, 1, 1.57]);
  translate([169, 153, 0])
    cube([1, 1, 1.57]);
  translate([170, 153, 0])
    cube([1, 1, 1.57]);
  translate([171, 153, 0])
    cube([1, 1, 1.57]);
  translate([172, 153, 0])
    cube([1, 1, 1.57]);
  translate([173, 153, 0])
    cube([1, 1, 1.57]);
  translate([174, 153, 0])
    cube([1, 1, 1.61]);
  translate([175, 153, 0])
    cube([1, 1, 1.61]);
  translate([176, 153, 0])
    cube([1, 1, 1.61]);
  translate([177, 153, 0])
    cube([1, 1, 1.61]);
  translate([178, 153, 0])
    cube([1, 1, 1.61]);
  translate([179, 153, 0])
    cube([1, 1, 1.61]);
  translate([180, 153, 0])
    cube([1, 1, 1.61]);
  translate([181, 153, 0])
    cube([1, 1, 1.61]);
  translate([182, 153, 0])
    cube([1, 1, 1.61]);
  translate([183, 153, 0])
    cube([1, 1, 1.61]);
  translate([184, 153, 0])
    cube([1, 1, 1.61]);
  translate([185, 153, 0])
    cube([1, 1, 1.65]);
  translate([186, 153, 0])
    cube([1, 1, 1.65]);
  translate([187, 153, 0])
    cube([1, 1, 1.61]);
  translate([188, 153, 0])
    cube([1, 1, 1.61]);
  translate([189, 153, 0])
    cube([1, 1, 1.65]);
  translate([190, 153, 0])
    cube([1, 1, 1.65]);
  translate([191, 153, 0])
    cube([1, 1, 1.65]);
  translate([192, 153, 0])
    cube([1, 1, 1.65]);
  translate([193, 153, 0])
    cube([1, 1, 1.65]);
  translate([194, 153, 0])
    cube([1, 1, 1.65]);
  translate([195, 153, 0])
    cube([1, 1, 1.65]);
  translate([196, 153, 0])
    cube([1, 1, 1.61]);
  translate([197, 153, 0])
    cube([1, 1, 1.65]);
  translate([198, 153, 0])
    cube([1, 1, 1.65]);
  translate([199, 153, 0])
    cube([1, 1, 1.65]);
  translate([200, 153, 0])
    cube([1, 1, 1.65]);
  translate([201, 153, 0])
    cube([1, 1, 1.65]);
  translate([202, 153, 0])
    cube([1, 1, 1.65]);
  translate([203, 153, 0])
    cube([1, 1, 1.65]);
  translate([204, 153, 0])
    cube([1, 1, 1.65]);
  translate([205, 153, 0])
    cube([1, 1, 1.65]);
  translate([206, 153, 0])
    cube([1, 1, 1.65]);
  translate([207, 153, 0])
    cube([1, 1, 1.65]);
  translate([208, 153, 0])
    cube([1, 1, 1.65]);
  translate([209, 153, 0])
    cube([1, 1, 1.65]);
  translate([210, 153, 0])
    cube([1, 1, 1.65]);
  translate([211, 153, 0])
    cube([1, 1, 1.65]);
  translate([212, 153, 0])
    cube([1, 1, 1.65]);
  translate([213, 153, 0])
    cube([1, 1, 1.65]);
  translate([214, 153, 0])
    cube([1, 1, 1.65]);
  translate([215, 153, 0])
    cube([1, 1, 1.61]);
  translate([216, 153, 0])
    cube([1, 1, 1.65]);
  translate([217, 153, 0])
    cube([1, 1, 1.65]);
  translate([218, 153, 0])
    cube([1, 1, 1.65]);
  translate([219, 153, 0])
    cube([1, 1, 1.65]);
  translate([220, 153, 0])
    cube([1, 1, 1.65]);
  translate([221, 153, 0])
    cube([1, 1, 1.65]);
  translate([222, 153, 0])
    cube([1, 1, 1.65]);
  translate([223, 153, 0])
    cube([1, 1, 1.65]);
  translate([224, 153, 0])
    cube([1, 1, 1.65]);
  translate([225, 153, 0])
    cube([1, 1, 1.61]);
  translate([226, 153, 0])
    cube([1, 1, 1.61]);
  translate([227, 153, 0])
    cube([1, 1, 1.61]);
  translate([228, 153, 0])
    cube([1, 1, 1.61]);
  translate([229, 153, 0])
    cube([1, 1, 1.61]);
  translate([230, 153, 0])
    cube([1, 1, 1.61]);
  translate([231, 153, 0])
    cube([1, 1, 1.61]);
  translate([232, 153, 0])
    cube([1, 1, 1.61]);
  translate([233, 153, 0])
    cube([1, 1, 1.61]);
  translate([234, 153, 0])
    cube([1, 1, 1.61]);
  translate([235, 153, 0])
    cube([1, 1, 1.61]);
  translate([236, 153, 0])
    cube([1, 1, 1.61]);
  translate([237, 153, 0])
    cube([1, 1, 1.61]);
  translate([238, 153, 0])
    cube([1, 1, 1.61]);
  translate([239, 153, 0])
    cube([1, 1, 1.61]);
  translate([240, 153, 0])
    cube([1, 1, 1.61]);
  translate([241, 153, 0])
    cube([1, 1, 1.61]);
  translate([242, 153, 0])
    cube([1, 1, 1.61]);
  translate([243, 153, 0])
    cube([1, 1, 1.61]);
  translate([244, 153, 0])
    cube([1, 1, 1.61]);
  translate([245, 153, 0])
    cube([1, 1, 1.61]);
  translate([246, 153, 0])
    cube([1, 1, 1.61]);
  translate([0, 154, 0])
    cube([1, 1, 1.80]);
  translate([1, 154, 0])
    cube([1, 1, 1.80]);
  translate([2, 154, 0])
    cube([1, 1, 1.80]);
  translate([3, 154, 0])
    cube([1, 1, 1.80]);
  translate([4, 154, 0])
    cube([1, 1, 1.80]);
  translate([5, 154, 0])
    cube([1, 1, 1.80]);
  translate([6, 154, 0])
    cube([1, 1, 1.80]);
  translate([7, 154, 0])
    cube([1, 1, 1.80]);
  translate([8, 154, 0])
    cube([1, 1, 1.80]);
  translate([9, 154, 0])
    cube([1, 1, 1.73]);
  translate([10, 154, 0])
    cube([1, 1, 1.80]);
  translate([11, 154, 0])
    cube([1, 1, 1.80]);
  translate([12, 154, 0])
    cube([1, 1, 1.76]);
  translate([13, 154, 0])
    cube([1, 1, 1.76]);
  translate([14, 154, 0])
    cube([1, 1, 1.80]);
  translate([15, 154, 0])
    cube([1, 1, 1.80]);
  translate([16, 154, 0])
    cube([1, 1, 1.76]);
  translate([17, 154, 0])
    cube([1, 1, 1.76]);
  translate([18, 154, 0])
    cube([1, 1, 1.76]);
  translate([19, 154, 0])
    cube([1, 1, 1.76]);
  translate([20, 154, 0])
    cube([1, 1, 1.76]);
  translate([21, 154, 0])
    cube([1, 1, 1.76]);
  translate([22, 154, 0])
    cube([1, 1, 1.76]);
  translate([23, 154, 0])
    cube([1, 1, 1.76]);
  translate([24, 154, 0])
    cube([1, 1, 1.80]);
  translate([25, 154, 0])
    cube([1, 1, 1.76]);
  translate([26, 154, 0])
    cube([1, 1, 1.76]);
  translate([27, 154, 0])
    cube([1, 1, 1.73]);
  translate([28, 154, 0])
    cube([1, 1, 1.73]);
  translate([29, 154, 0])
    cube([1, 1, 1.73]);
  translate([30, 154, 0])
    cube([1, 1, 1.73]);
  translate([31, 154, 0])
    cube([1, 1, 1.73]);
  translate([32, 154, 0])
    cube([1, 1, 1.73]);
  translate([33, 154, 0])
    cube([1, 1, 1.73]);
  translate([34, 154, 0])
    cube([1, 1, 1.73]);
  translate([35, 154, 0])
    cube([1, 1, 1.73]);
  translate([36, 154, 0])
    cube([1, 1, 1.73]);
  translate([37, 154, 0])
    cube([1, 1, 1.73]);
  translate([38, 154, 0])
    cube([1, 1, 1.73]);
  translate([39, 154, 0])
    cube([1, 1, 1.73]);
  translate([40, 154, 0])
    cube([1, 1, 1.73]);
  translate([41, 154, 0])
    cube([1, 1, 1.69]);
  translate([42, 154, 0])
    cube([1, 1, 1.69]);
  translate([43, 154, 0])
    cube([1, 1, 1.69]);
  translate([44, 154, 0])
    cube([1, 1, 1.69]);
  translate([45, 154, 0])
    cube([1, 1, 1.73]);
  translate([46, 154, 0])
    cube([1, 1, 1.69]);
  translate([47, 154, 0])
    cube([1, 1, 1.69]);
  translate([48, 154, 0])
    cube([1, 1, 1.69]);
  translate([49, 154, 0])
    cube([1, 1, 1.69]);
  translate([50, 154, 0])
    cube([1, 1, 1.69]);
  translate([51, 154, 0])
    cube([1, 1, 1.69]);
  translate([52, 154, 0])
    cube([1, 1, 1.65]);
  translate([53, 154, 0])
    cube([1, 1, 1.45]);
  translate([54, 154, 0])
    cube([1, 1, 6.04]);
  translate([55, 154, 0])
    cube([1, 1, 5.53]);
  translate([56, 154, 0])
    cube([1, 1, 5.92]);
  translate([57, 154, 0])
    cube([1, 1, 4.43]);
  translate([58, 154, 0])
    cube([1, 1, 2.86]);
  translate([59, 154, 0])
    cube([1, 1, 2.98]);
  translate([60, 154, 0])
    cube([1, 1, 3.80]);
  translate([61, 154, 0])
    cube([1, 1, 4.47]);
  translate([62, 154, 0])
    cube([1, 1, 4.82]);
  translate([63, 154, 0])
    cube([1, 1, 4.90]);
  translate([64, 154, 0])
    cube([1, 1, 4.90]);
  translate([65, 154, 0])
    cube([1, 1, 4.90]);
  translate([66, 154, 0])
    cube([1, 1, 4.98]);
  translate([67, 154, 0])
    cube([1, 1, 5.14]);
  translate([68, 154, 0])
    cube([1, 1, 5.22]);
  translate([69, 154, 0])
    cube([1, 1, 5.41]);
  translate([70, 154, 0])
    cube([1, 1, 5.57]);
  translate([71, 154, 0])
    cube([1, 1, 5.53]);
  translate([72, 154, 0])
    cube([1, 1, 5.57]);
  translate([73, 154, 0])
    cube([1, 1, 5.53]);
  translate([74, 154, 0])
    cube([1, 1, 5.49]);
  translate([75, 154, 0])
    cube([1, 1, 6.12]);
  translate([76, 154, 0])
    cube([1, 1, 5.84]);
  translate([77, 154, 0])
    cube([1, 1, 5.45]);
  translate([78, 154, 0])
    cube([1, 1, 5.22]);
  translate([79, 154, 0])
    cube([1, 1, 1.76]);
  translate([80, 154, 0])
    cube([1, 1, 1.65]);
  translate([81, 154, 0])
    cube([1, 1, 1.61]);
  translate([82, 154, 0])
    cube([1, 1, 1.61]);
  translate([83, 154, 0])
    cube([1, 1, 1.61]);
  translate([84, 154, 0])
    cube([1, 1, 5.96]);
  translate([85, 154, 0])
    cube([1, 1, 5.06]);
  translate([86, 154, 0])
    cube([1, 1, 4.16]);
  translate([87, 154, 0])
    cube([1, 1, 3.73]);
  translate([88, 154, 0])
    cube([1, 1, 3.53]);
  translate([89, 154, 0])
    cube([1, 1, 3.65]);
  translate([90, 154, 0])
    cube([1, 1, 3.57]);
  translate([91, 154, 0])
    cube([1, 1, 3.45]);
  translate([92, 154, 0])
    cube([1, 1, 3.25]);
  translate([93, 154, 0])
    cube([1, 1, 3.06]);
  translate([94, 154, 0])
    cube([1, 1, 2.82]);
  translate([95, 154, 0])
    cube([1, 1, 2.71]);
  translate([96, 154, 0])
    cube([1, 1, 3.02]);
  translate([97, 154, 0])
    cube([1, 1, 3.10]);
  translate([98, 154, 0])
    cube([1, 1, 3.22]);
  translate([99, 154, 0])
    cube([1, 1, 3.18]);
  translate([100, 154, 0])
    cube([1, 1, 3.33]);
  translate([101, 154, 0])
    cube([1, 1, 3.45]);
  translate([102, 154, 0])
    cube([1, 1, 3.61]);
  translate([103, 154, 0])
    cube([1, 1, 3.84]);
  translate([104, 154, 0])
    cube([1, 1, 3.92]);
  translate([105, 154, 0])
    cube([1, 1, 4.12]);
  translate([106, 154, 0])
    cube([1, 1, 4.35]);
  translate([107, 154, 0])
    cube([1, 1, 4.43]);
  translate([108, 154, 0])
    cube([1, 1, 4.51]);
  translate([109, 154, 0])
    cube([1, 1, 4.67]);
  translate([110, 154, 0])
    cube([1, 1, 4.59]);
  translate([111, 154, 0])
    cube([1, 1, 4.78]);
  translate([112, 154, 0])
    cube([1, 1, 4.86]);
  translate([113, 154, 0])
    cube([1, 1, 4.94]);
  translate([114, 154, 0])
    cube([1, 1, 4.94]);
  translate([115, 154, 0])
    cube([1, 1, 4.90]);
  translate([116, 154, 0])
    cube([1, 1, 4.75]);
  translate([117, 154, 0])
    cube([1, 1, 4.75]);
  translate([118, 154, 0])
    cube([1, 1, 4.75]);
  translate([119, 154, 0])
    cube([1, 1, 4.78]);
  translate([120, 154, 0])
    cube([1, 1, 4.94]);
  translate([121, 154, 0])
    cube([1, 1, 5.14]);
  translate([122, 154, 0])
    cube([1, 1, 5.41]);
  translate([123, 154, 0])
    cube([1, 1, 5.65]);
  translate([124, 154, 0])
    cube([1, 1, 6.00]);
  translate([125, 154, 0])
    cube([1, 1, 6.27]);
  translate([126, 154, 0])
    cube([1, 1, 5.33]);
  translate([127, 154, 0])
    cube([1, 1, 4.82]);
  translate([128, 154, 0])
    cube([1, 1, 4.82]);
  translate([129, 154, 0])
    cube([1, 1, 4.78]);
  translate([130, 154, 0])
    cube([1, 1, 4.86]);
  translate([131, 154, 0])
    cube([1, 1, 5.14]);
  translate([132, 154, 0])
    cube([1, 1, 5.49]);
  translate([133, 154, 0])
    cube([1, 1, 6.04]);
  translate([134, 154, 0])
    cube([1, 1, 6.31]);
  translate([135, 154, 0])
    cube([1, 1, 6.00]);
  translate([136, 154, 0])
    cube([1, 1, 5.18]);
  translate([137, 154, 0])
    cube([1, 1, 4.94]);
  translate([138, 154, 0])
    cube([1, 1, 5.18]);
  translate([139, 154, 0])
    cube([1, 1, 5.33]);
  translate([140, 154, 0])
    cube([1, 1, 5.49]);
  translate([141, 154, 0])
    cube([1, 1, 5.84]);
  translate([142, 154, 0])
    cube([1, 1, 5.96]);
  translate([143, 154, 0])
    cube([1, 1, 6.04]);
  translate([144, 154, 0])
    cube([1, 1, 6.00]);
  translate([145, 154, 0])
    cube([1, 1, 5.92]);
  translate([146, 154, 0])
    cube([1, 1, 6.00]);
  translate([147, 154, 0])
    cube([1, 1, 6.20]);
  translate([148, 154, 0])
    cube([1, 1, 6.59]);
  translate([149, 154, 0])
    cube([1, 1, 6.90]);
  translate([150, 154, 0])
    cube([1, 1, 6.63]);
  translate([151, 154, 0])
    cube([1, 1, 6.20]);
  translate([152, 154, 0])
    cube([1, 1, 6.00]);
  translate([153, 154, 0])
    cube([1, 1, 5.88]);
  translate([154, 154, 0])
    cube([1, 1, 5.88]);
  translate([155, 154, 0])
    cube([1, 1, 5.88]);
  translate([156, 154, 0])
    cube([1, 1, 5.73]);
  translate([157, 154, 0])
    cube([1, 1, 6.31]);
  translate([158, 154, 0])
    cube([1, 1, 7.80]);
  translate([159, 154, 0])
    cube([1, 1, 1.84]);
  translate([160, 154, 0])
    cube([1, 1, 1.80]);
  translate([161, 154, 0])
    cube([1, 1, 1.57]);
  translate([162, 154, 0])
    cube([1, 1, 1.57]);
  translate([163, 154, 0])
    cube([1, 1, 1.57]);
  translate([164, 154, 0])
    cube([1, 1, 1.57]);
  translate([165, 154, 0])
    cube([1, 1, 1.57]);
  translate([166, 154, 0])
    cube([1, 1, 1.57]);
  translate([167, 154, 0])
    cube([1, 1, 1.57]);
  translate([168, 154, 0])
    cube([1, 1, 1.57]);
  translate([169, 154, 0])
    cube([1, 1, 1.57]);
  translate([170, 154, 0])
    cube([1, 1, 1.57]);
  translate([171, 154, 0])
    cube([1, 1, 1.57]);
  translate([172, 154, 0])
    cube([1, 1, 1.57]);
  translate([173, 154, 0])
    cube([1, 1, 1.57]);
  translate([174, 154, 0])
    cube([1, 1, 1.57]);
  translate([175, 154, 0])
    cube([1, 1, 1.61]);
  translate([176, 154, 0])
    cube([1, 1, 1.61]);
  translate([177, 154, 0])
    cube([1, 1, 1.61]);
  translate([178, 154, 0])
    cube([1, 1, 1.61]);
  translate([179, 154, 0])
    cube([1, 1, 1.61]);
  translate([180, 154, 0])
    cube([1, 1, 1.61]);
  translate([181, 154, 0])
    cube([1, 1, 1.61]);
  translate([182, 154, 0])
    cube([1, 1, 1.61]);
  translate([183, 154, 0])
    cube([1, 1, 1.61]);
  translate([184, 154, 0])
    cube([1, 1, 1.61]);
  translate([185, 154, 0])
    cube([1, 1, 1.61]);
  translate([186, 154, 0])
    cube([1, 1, 1.61]);
  translate([187, 154, 0])
    cube([1, 1, 1.61]);
  translate([188, 154, 0])
    cube([1, 1, 1.61]);
  translate([189, 154, 0])
    cube([1, 1, 1.65]);
  translate([190, 154, 0])
    cube([1, 1, 1.65]);
  translate([191, 154, 0])
    cube([1, 1, 1.65]);
  translate([192, 154, 0])
    cube([1, 1, 1.65]);
  translate([193, 154, 0])
    cube([1, 1, 1.65]);
  translate([194, 154, 0])
    cube([1, 1, 1.65]);
  translate([195, 154, 0])
    cube([1, 1, 1.65]);
  translate([196, 154, 0])
    cube([1, 1, 1.69]);
  translate([197, 154, 0])
    cube([1, 1, 1.69]);
  translate([198, 154, 0])
    cube([1, 1, 1.61]);
  translate([199, 154, 0])
    cube([1, 1, 1.65]);
  translate([200, 154, 0])
    cube([1, 1, 1.65]);
  translate([201, 154, 0])
    cube([1, 1, 1.69]);
  translate([202, 154, 0])
    cube([1, 1, 1.69]);
  translate([203, 154, 0])
    cube([1, 1, 1.65]);
  translate([204, 154, 0])
    cube([1, 1, 1.65]);
  translate([205, 154, 0])
    cube([1, 1, 1.69]);
  translate([206, 154, 0])
    cube([1, 1, 1.65]);
  translate([207, 154, 0])
    cube([1, 1, 1.65]);
  translate([208, 154, 0])
    cube([1, 1, 1.65]);
  translate([209, 154, 0])
    cube([1, 1, 1.65]);
  translate([210, 154, 0])
    cube([1, 1, 1.65]);
  translate([211, 154, 0])
    cube([1, 1, 1.65]);
  translate([212, 154, 0])
    cube([1, 1, 1.65]);
  translate([213, 154, 0])
    cube([1, 1, 1.65]);
  translate([214, 154, 0])
    cube([1, 1, 1.61]);
  translate([215, 154, 0])
    cube([1, 1, 1.65]);
  translate([216, 154, 0])
    cube([1, 1, 1.65]);
  translate([217, 154, 0])
    cube([1, 1, 1.65]);
  translate([218, 154, 0])
    cube([1, 1, 1.65]);
  translate([219, 154, 0])
    cube([1, 1, 1.61]);
  translate([220, 154, 0])
    cube([1, 1, 1.65]);
  translate([221, 154, 0])
    cube([1, 1, 1.65]);
  translate([222, 154, 0])
    cube([1, 1, 1.65]);
  translate([223, 154, 0])
    cube([1, 1, 1.65]);
  translate([224, 154, 0])
    cube([1, 1, 1.65]);
  translate([225, 154, 0])
    cube([1, 1, 1.65]);
  translate([226, 154, 0])
    cube([1, 1, 1.65]);
  translate([227, 154, 0])
    cube([1, 1, 1.65]);
  translate([228, 154, 0])
    cube([1, 1, 1.61]);
  translate([229, 154, 0])
    cube([1, 1, 1.61]);
  translate([230, 154, 0])
    cube([1, 1, 1.61]);
  translate([231, 154, 0])
    cube([1, 1, 1.61]);
  translate([232, 154, 0])
    cube([1, 1, 1.61]);
  translate([233, 154, 0])
    cube([1, 1, 1.65]);
  translate([234, 154, 0])
    cube([1, 1, 1.65]);
  translate([235, 154, 0])
    cube([1, 1, 1.61]);
  translate([236, 154, 0])
    cube([1, 1, 1.65]);
  translate([237, 154, 0])
    cube([1, 1, 1.69]);
  translate([238, 154, 0])
    cube([1, 1, 1.61]);
  translate([239, 154, 0])
    cube([1, 1, 1.61]);
  translate([240, 154, 0])
    cube([1, 1, 1.61]);
  translate([241, 154, 0])
    cube([1, 1, 1.61]);
  translate([242, 154, 0])
    cube([1, 1, 1.65]);
  translate([243, 154, 0])
    cube([1, 1, 1.61]);
  translate([244, 154, 0])
    cube([1, 1, 1.57]);
  translate([245, 154, 0])
    cube([1, 1, 1.61]);
  translate([246, 154, 0])
    cube([1, 1, 1.61]);
  translate([0, 155, 0])
    cube([1, 1, 1.80]);
  translate([1, 155, 0])
    cube([1, 1, 1.80]);
  translate([2, 155, 0])
    cube([1, 1, 1.80]);
  translate([3, 155, 0])
    cube([1, 1, 1.80]);
  translate([4, 155, 0])
    cube([1, 1, 1.80]);
  translate([5, 155, 0])
    cube([1, 1, 1.80]);
  translate([6, 155, 0])
    cube([1, 1, 1.80]);
  translate([7, 155, 0])
    cube([1, 1, 1.80]);
  translate([8, 155, 0])
    cube([1, 1, 1.80]);
  translate([9, 155, 0])
    cube([1, 1, 1.80]);
  translate([10, 155, 0])
    cube([1, 1, 1.84]);
  translate([11, 155, 0])
    cube([1, 1, 1.80]);
  translate([12, 155, 0])
    cube([1, 1, 1.80]);
  translate([13, 155, 0])
    cube([1, 1, 1.80]);
  translate([14, 155, 0])
    cube([1, 1, 1.80]);
  translate([15, 155, 0])
    cube([1, 1, 1.80]);
  translate([16, 155, 0])
    cube([1, 1, 1.76]);
  translate([17, 155, 0])
    cube([1, 1, 1.76]);
  translate([18, 155, 0])
    cube([1, 1, 1.76]);
  translate([19, 155, 0])
    cube([1, 1, 1.76]);
  translate([20, 155, 0])
    cube([1, 1, 1.76]);
  translate([21, 155, 0])
    cube([1, 1, 1.76]);
  translate([22, 155, 0])
    cube([1, 1, 1.76]);
  translate([23, 155, 0])
    cube([1, 1, 1.76]);
  translate([24, 155, 0])
    cube([1, 1, 1.80]);
  translate([25, 155, 0])
    cube([1, 1, 1.76]);
  translate([26, 155, 0])
    cube([1, 1, 1.76]);
  translate([27, 155, 0])
    cube([1, 1, 1.80]);
  translate([28, 155, 0])
    cube([1, 1, 1.73]);
  translate([29, 155, 0])
    cube([1, 1, 1.73]);
  translate([30, 155, 0])
    cube([1, 1, 1.80]);
  translate([31, 155, 0])
    cube([1, 1, 1.80]);
  translate([32, 155, 0])
    cube([1, 1, 1.73]);
  translate([33, 155, 0])
    cube([1, 1, 1.73]);
  translate([34, 155, 0])
    cube([1, 1, 1.73]);
  translate([35, 155, 0])
    cube([1, 1, 1.73]);
  translate([36, 155, 0])
    cube([1, 1, 1.73]);
  translate([37, 155, 0])
    cube([1, 1, 1.73]);
  translate([38, 155, 0])
    cube([1, 1, 1.73]);
  translate([39, 155, 0])
    cube([1, 1, 1.73]);
  translate([40, 155, 0])
    cube([1, 1, 1.73]);
  translate([41, 155, 0])
    cube([1, 1, 1.69]);
  translate([42, 155, 0])
    cube([1, 1, 1.69]);
  translate([43, 155, 0])
    cube([1, 1, 1.69]);
  translate([44, 155, 0])
    cube([1, 1, 1.69]);
  translate([45, 155, 0])
    cube([1, 1, 1.73]);
  translate([46, 155, 0])
    cube([1, 1, 1.73]);
  translate([47, 155, 0])
    cube([1, 1, 1.73]);
  translate([48, 155, 0])
    cube([1, 1, 1.73]);
  translate([49, 155, 0])
    cube([1, 1, 1.69]);
  translate([50, 155, 0])
    cube([1, 1, 1.69]);
  translate([51, 155, 0])
    cube([1, 1, 1.69]);
  translate([52, 155, 0])
    cube([1, 1, 1.33]);
  translate([53, 155, 0])
    cube([1, 1, 1.88]);
  translate([54, 155, 0])
    cube([1, 1, 6.00]);
  translate([55, 155, 0])
    cube([1, 1, 5.80]);
  translate([56, 155, 0])
    cube([1, 1, 5.84]);
  translate([57, 155, 0])
    cube([1, 1, 4.94]);
  translate([58, 155, 0])
    cube([1, 1, 3.41]);
  translate([59, 155, 0])
    cube([1, 1, 2.71]);
  translate([60, 155, 0])
    cube([1, 1, 3.25]);
  translate([61, 155, 0])
    cube([1, 1, 4.27]);
  translate([62, 155, 0])
    cube([1, 1, 4.75]);
  translate([63, 155, 0])
    cube([1, 1, 4.90]);
  translate([64, 155, 0])
    cube([1, 1, 4.94]);
  translate([65, 155, 0])
    cube([1, 1, 4.90]);
  translate([66, 155, 0])
    cube([1, 1, 4.86]);
  translate([67, 155, 0])
    cube([1, 1, 4.94]);
  translate([68, 155, 0])
    cube([1, 1, 5.02]);
  translate([69, 155, 0])
    cube([1, 1, 5.22]);
  translate([70, 155, 0])
    cube([1, 1, 5.37]);
  translate([71, 155, 0])
    cube([1, 1, 5.45]);
  translate([72, 155, 0])
    cube([1, 1, 5.49]);
  translate([73, 155, 0])
    cube([1, 1, 5.45]);
  translate([74, 155, 0])
    cube([1, 1, 5.57]);
  translate([75, 155, 0])
    cube([1, 1, 6.00]);
  translate([76, 155, 0])
    cube([1, 1, 5.80]);
  translate([77, 155, 0])
    cube([1, 1, 5.37]);
  translate([78, 155, 0])
    cube([1, 1, 4.86]);
  translate([79, 155, 0])
    cube([1, 1, 1.65]);
  translate([80, 155, 0])
    cube([1, 1, 1.65]);
  translate([81, 155, 0])
    cube([1, 1, 1.57]);
  translate([82, 155, 0])
    cube([1, 1, 1.65]);
  translate([83, 155, 0])
    cube([1, 1, 1.65]);
  translate([84, 155, 0])
    cube([1, 1, 1.37]);
  translate([85, 155, 0])
    cube([1, 1, 5.73]);
  translate([86, 155, 0])
    cube([1, 1, 4.75]);
  translate([87, 155, 0])
    cube([1, 1, 3.96]);
  translate([88, 155, 0])
    cube([1, 1, 3.61]);
  translate([89, 155, 0])
    cube([1, 1, 3.65]);
  translate([90, 155, 0])
    cube([1, 1, 3.69]);
  translate([91, 155, 0])
    cube([1, 1, 3.49]);
  translate([92, 155, 0])
    cube([1, 1, 3.33]);
  translate([93, 155, 0])
    cube([1, 1, 3.18]);
  translate([94, 155, 0])
    cube([1, 1, 2.90]);
  translate([95, 155, 0])
    cube([1, 1, 2.75]);
  translate([96, 155, 0])
    cube([1, 1, 2.78]);
  translate([97, 155, 0])
    cube([1, 1, 3.02]);
  translate([98, 155, 0])
    cube([1, 1, 3.18]);
  translate([99, 155, 0])
    cube([1, 1, 3.10]);
  translate([100, 155, 0])
    cube([1, 1, 3.22]);
  translate([101, 155, 0])
    cube([1, 1, 3.33]);
  translate([102, 155, 0])
    cube([1, 1, 3.29]);
  translate([103, 155, 0])
    cube([1, 1, 3.65]);
  translate([104, 155, 0])
    cube([1, 1, 3.76]);
  translate([105, 155, 0])
    cube([1, 1, 3.92]);
  translate([106, 155, 0])
    cube([1, 1, 4.12]);
  translate([107, 155, 0])
    cube([1, 1, 4.20]);
  translate([108, 155, 0])
    cube([1, 1, 4.43]);
  translate([109, 155, 0])
    cube([1, 1, 4.35]);
  translate([110, 155, 0])
    cube([1, 1, 4.55]);
  translate([111, 155, 0])
    cube([1, 1, 4.63]);
  translate([112, 155, 0])
    cube([1, 1, 4.67]);
  translate([113, 155, 0])
    cube([1, 1, 4.82]);
  translate([114, 155, 0])
    cube([1, 1, 4.78]);
  translate([115, 155, 0])
    cube([1, 1, 4.67]);
  translate([116, 155, 0])
    cube([1, 1, 4.63]);
  translate([117, 155, 0])
    cube([1, 1, 4.71]);
  translate([118, 155, 0])
    cube([1, 1, 4.67]);
  translate([119, 155, 0])
    cube([1, 1, 4.63]);
  translate([120, 155, 0])
    cube([1, 1, 4.98]);
  translate([121, 155, 0])
    cube([1, 1, 5.06]);
  translate([122, 155, 0])
    cube([1, 1, 5.41]);
  translate([123, 155, 0])
    cube([1, 1, 5.57]);
  translate([124, 155, 0])
    cube([1, 1, 5.84]);
  translate([125, 155, 0])
    cube([1, 1, 6.20]);
  translate([126, 155, 0])
    cube([1, 1, 5.14]);
  translate([127, 155, 0])
    cube([1, 1, 4.86]);
  translate([128, 155, 0])
    cube([1, 1, 4.78]);
  translate([129, 155, 0])
    cube([1, 1, 4.63]);
  translate([130, 155, 0])
    cube([1, 1, 4.82]);
  translate([131, 155, 0])
    cube([1, 1, 5.10]);
  translate([132, 155, 0])
    cube([1, 1, 5.33]);
  translate([133, 155, 0])
    cube([1, 1, 6.12]);
  translate([134, 155, 0])
    cube([1, 1, 6.43]);
  translate([135, 155, 0])
    cube([1, 1, 5.84]);
  translate([136, 155, 0])
    cube([1, 1, 4.27]);
  translate([137, 155, 0])
    cube([1, 1, 4.67]);
  translate([138, 155, 0])
    cube([1, 1, 5.02]);
  translate([139, 155, 0])
    cube([1, 1, 5.18]);
  translate([140, 155, 0])
    cube([1, 1, 5.53]);
  translate([141, 155, 0])
    cube([1, 1, 5.65]);
  translate([142, 155, 0])
    cube([1, 1, 5.73]);
  translate([143, 155, 0])
    cube([1, 1, 5.80]);
  translate([144, 155, 0])
    cube([1, 1, 5.92]);
  translate([145, 155, 0])
    cube([1, 1, 5.92]);
  translate([146, 155, 0])
    cube([1, 1, 6.00]);
  translate([147, 155, 0])
    cube([1, 1, 6.08]);
  translate([148, 155, 0])
    cube([1, 1, 6.31]);
  translate([149, 155, 0])
    cube([1, 1, 6.55]);
  translate([150, 155, 0])
    cube([1, 1, 6.59]);
  translate([151, 155, 0])
    cube([1, 1, 6.59]);
  translate([152, 155, 0])
    cube([1, 1, 6.12]);
  translate([153, 155, 0])
    cube([1, 1, 6.04]);
  translate([154, 155, 0])
    cube([1, 1, 6.04]);
  translate([155, 155, 0])
    cube([1, 1, 6.00]);
  translate([156, 155, 0])
    cube([1, 1, 5.88]);
  translate([157, 155, 0])
    cube([1, 1, 5.80]);
  translate([158, 155, 0])
    cube([1, 1, 6.20]);
  translate([159, 155, 0])
    cube([1, 1, 6.82]);
  translate([160, 155, 0])
    cube([1, 1, 1.57]);
  translate([161, 155, 0])
    cube([1, 1, 1.57]);
  translate([162, 155, 0])
    cube([1, 1, 1.57]);
  translate([163, 155, 0])
    cube([1, 1, 1.57]);
  translate([164, 155, 0])
    cube([1, 1, 1.57]);
  translate([165, 155, 0])
    cube([1, 1, 1.57]);
  translate([166, 155, 0])
    cube([1, 1, 1.57]);
  translate([167, 155, 0])
    cube([1, 1, 1.57]);
  translate([168, 155, 0])
    cube([1, 1, 1.57]);
  translate([169, 155, 0])
    cube([1, 1, 1.57]);
  translate([170, 155, 0])
    cube([1, 1, 1.57]);
  translate([171, 155, 0])
    cube([1, 1, 1.57]);
  translate([172, 155, 0])
    cube([1, 1, 1.57]);
  translate([173, 155, 0])
    cube([1, 1, 1.57]);
  translate([174, 155, 0])
    cube([1, 1, 1.57]);
  translate([175, 155, 0])
    cube([1, 1, 1.61]);
  translate([176, 155, 0])
    cube([1, 1, 1.61]);
  translate([177, 155, 0])
    cube([1, 1, 1.61]);
  translate([178, 155, 0])
    cube([1, 1, 1.61]);
  translate([179, 155, 0])
    cube([1, 1, 1.61]);
  translate([180, 155, 0])
    cube([1, 1, 1.69]);
  translate([181, 155, 0])
    cube([1, 1, 1.69]);
  translate([182, 155, 0])
    cube([1, 1, 1.61]);
  translate([183, 155, 0])
    cube([1, 1, 1.61]);
  translate([184, 155, 0])
    cube([1, 1, 1.61]);
  translate([185, 155, 0])
    cube([1, 1, 1.69]);
  translate([186, 155, 0])
    cube([1, 1, 1.69]);
  translate([187, 155, 0])
    cube([1, 1, 1.61]);
  translate([188, 155, 0])
    cube([1, 1, 1.61]);
  translate([189, 155, 0])
    cube([1, 1, 1.65]);
  translate([190, 155, 0])
    cube([1, 1, 1.65]);
  translate([191, 155, 0])
    cube([1, 1, 1.65]);
  translate([192, 155, 0])
    cube([1, 1, 1.65]);
  translate([193, 155, 0])
    cube([1, 1, 1.65]);
  translate([194, 155, 0])
    cube([1, 1, 1.65]);
  translate([195, 155, 0])
    cube([1, 1, 1.65]);
  translate([196, 155, 0])
    cube([1, 1, 1.69]);
  translate([197, 155, 0])
    cube([1, 1, 1.69]);
  translate([198, 155, 0])
    cube([1, 1, 1.61]);
  translate([199, 155, 0])
    cube([1, 1, 1.65]);
  translate([200, 155, 0])
    cube([1, 1, 1.69]);
  translate([201, 155, 0])
    cube([1, 1, 1.69]);
  translate([202, 155, 0])
    cube([1, 1, 1.69]);
  translate([203, 155, 0])
    cube([1, 1, 1.65]);
  translate([204, 155, 0])
    cube([1, 1, 1.65]);
  translate([205, 155, 0])
    cube([1, 1, 1.69]);
  translate([206, 155, 0])
    cube([1, 1, 1.65]);
  translate([207, 155, 0])
    cube([1, 1, 1.65]);
  translate([208, 155, 0])
    cube([1, 1, 1.69]);
  translate([209, 155, 0])
    cube([1, 1, 1.73]);
  translate([210, 155, 0])
    cube([1, 1, 1.73]);
  translate([211, 155, 0])
    cube([1, 1, 1.65]);
  translate([212, 155, 0])
    cube([1, 1, 1.65]);
  translate([213, 155, 0])
    cube([1, 1, 1.65]);
  translate([214, 155, 0])
    cube([1, 1, 1.61]);
  translate([215, 155, 0])
    cube([1, 1, 1.65]);
  translate([216, 155, 0])
    cube([1, 1, 1.69]);
  translate([217, 155, 0])
    cube([1, 1, 1.69]);
  translate([218, 155, 0])
    cube([1, 1, 1.69]);
  translate([219, 155, 0])
    cube([1, 1, 1.69]);
  translate([220, 155, 0])
    cube([1, 1, 1.65]);
  translate([221, 155, 0])
    cube([1, 1, 1.65]);
  translate([222, 155, 0])
    cube([1, 1, 1.65]);
  translate([223, 155, 0])
    cube([1, 1, 1.65]);
  translate([224, 155, 0])
    cube([1, 1, 1.65]);
  translate([225, 155, 0])
    cube([1, 1, 1.65]);
  translate([226, 155, 0])
    cube([1, 1, 1.65]);
  translate([227, 155, 0])
    cube([1, 1, 1.65]);
  translate([228, 155, 0])
    cube([1, 1, 1.69]);
  translate([229, 155, 0])
    cube([1, 1, 1.69]);
  translate([230, 155, 0])
    cube([1, 1, 1.69]);
  translate([231, 155, 0])
    cube([1, 1, 1.69]);
  translate([232, 155, 0])
    cube([1, 1, 1.61]);
  translate([233, 155, 0])
    cube([1, 1, 1.65]);
  translate([234, 155, 0])
    cube([1, 1, 1.65]);
  translate([235, 155, 0])
    cube([1, 1, 1.69]);
  translate([236, 155, 0])
    cube([1, 1, 1.65]);
  translate([237, 155, 0])
    cube([1, 1, 1.69]);
  translate([238, 155, 0])
    cube([1, 1, 1.61]);
  translate([239, 155, 0])
    cube([1, 1, 1.61]);
  translate([240, 155, 0])
    cube([1, 1, 1.61]);
  translate([241, 155, 0])
    cube([1, 1, 1.61]);
  translate([242, 155, 0])
    cube([1, 1, 1.65]);
  translate([243, 155, 0])
    cube([1, 1, 1.61]);
  translate([244, 155, 0])
    cube([1, 1, 1.57]);
  translate([245, 155, 0])
    cube([1, 1, 1.61]);
  translate([246, 155, 0])
    cube([1, 1, 1.65]);
  translate([0, 156, 0])
    cube([1, 1, 1.80]);
  translate([1, 156, 0])
    cube([1, 1, 1.80]);
  translate([2, 156, 0])
    cube([1, 1, 1.80]);
  translate([3, 156, 0])
    cube([1, 1, 1.80]);
  translate([4, 156, 0])
    cube([1, 1, 1.80]);
  translate([5, 156, 0])
    cube([1, 1, 1.80]);
  translate([6, 156, 0])
    cube([1, 1, 1.80]);
  translate([7, 156, 0])
    cube([1, 1, 1.80]);
  translate([8, 156, 0])
    cube([1, 1, 1.80]);
  translate([9, 156, 0])
    cube([1, 1, 1.80]);
  translate([10, 156, 0])
    cube([1, 1, 1.80]);
  translate([11, 156, 0])
    cube([1, 1, 1.80]);
  translate([12, 156, 0])
    cube([1, 1, 1.80]);
  translate([13, 156, 0])
    cube([1, 1, 1.80]);
  translate([14, 156, 0])
    cube([1, 1, 1.80]);
  translate([15, 156, 0])
    cube([1, 1, 1.80]);
  translate([16, 156, 0])
    cube([1, 1, 1.80]);
  translate([17, 156, 0])
    cube([1, 1, 1.80]);
  translate([18, 156, 0])
    cube([1, 1, 1.80]);
  translate([19, 156, 0])
    cube([1, 1, 1.80]);
  translate([20, 156, 0])
    cube([1, 1, 1.76]);
  translate([21, 156, 0])
    cube([1, 1, 1.80]);
  translate([22, 156, 0])
    cube([1, 1, 1.76]);
  translate([23, 156, 0])
    cube([1, 1, 1.76]);
  translate([24, 156, 0])
    cube([1, 1, 1.80]);
  translate([25, 156, 0])
    cube([1, 1, 1.76]);
  translate([26, 156, 0])
    cube([1, 1, 1.76]);
  translate([27, 156, 0])
    cube([1, 1, 1.76]);
  translate([28, 156, 0])
    cube([1, 1, 1.76]);
  translate([29, 156, 0])
    cube([1, 1, 1.73]);
  translate([30, 156, 0])
    cube([1, 1, 1.73]);
  translate([31, 156, 0])
    cube([1, 1, 1.73]);
  translate([32, 156, 0])
    cube([1, 1, 1.73]);
  translate([33, 156, 0])
    cube([1, 1, 1.73]);
  translate([34, 156, 0])
    cube([1, 1, 1.73]);
  translate([35, 156, 0])
    cube([1, 1, 1.69]);
  translate([36, 156, 0])
    cube([1, 1, 1.76]);
  translate([37, 156, 0])
    cube([1, 1, 1.76]);
  translate([38, 156, 0])
    cube([1, 1, 1.73]);
  translate([39, 156, 0])
    cube([1, 1, 1.73]);
  translate([40, 156, 0])
    cube([1, 1, 1.73]);
  translate([41, 156, 0])
    cube([1, 1, 1.73]);
  translate([42, 156, 0])
    cube([1, 1, 1.73]);
  translate([43, 156, 0])
    cube([1, 1, 1.73]);
  translate([44, 156, 0])
    cube([1, 1, 1.73]);
  translate([45, 156, 0])
    cube([1, 1, 1.73]);
  translate([46, 156, 0])
    cube([1, 1, 1.69]);
  translate([47, 156, 0])
    cube([1, 1, 1.73]);
  translate([48, 156, 0])
    cube([1, 1, 1.73]);
  translate([49, 156, 0])
    cube([1, 1, 1.69]);
  translate([50, 156, 0])
    cube([1, 1, 1.69]);
  translate([51, 156, 0])
    cube([1, 1, 1.69]);
  translate([52, 156, 0])
    cube([1, 1, 1.69]);
  translate([53, 156, 0])
    cube([1, 1, 1.69]);
  translate([54, 156, 0])
    cube([1, 1, 2.16]);
  translate([55, 156, 0])
    cube([1, 1, 5.96]);
  translate([56, 156, 0])
    cube([1, 1, 5.84]);
  translate([57, 156, 0])
    cube([1, 1, 5.57]);
  translate([58, 156, 0])
    cube([1, 1, 3.84]);
  translate([59, 156, 0])
    cube([1, 1, 2.75]);
  translate([60, 156, 0])
    cube([1, 1, 2.98]);
  translate([61, 156, 0])
    cube([1, 1, 3.96]);
  translate([62, 156, 0])
    cube([1, 1, 4.51]);
  translate([63, 156, 0])
    cube([1, 1, 4.86]);
  translate([64, 156, 0])
    cube([1, 1, 4.90]);
  translate([65, 156, 0])
    cube([1, 1, 4.86]);
  translate([66, 156, 0])
    cube([1, 1, 4.86]);
  translate([67, 156, 0])
    cube([1, 1, 4.86]);
  translate([68, 156, 0])
    cube([1, 1, 4.94]);
  translate([69, 156, 0])
    cube([1, 1, 5.10]);
  translate([70, 156, 0])
    cube([1, 1, 5.18]);
  translate([71, 156, 0])
    cube([1, 1, 5.41]);
  translate([72, 156, 0])
    cube([1, 1, 5.45]);
  translate([73, 156, 0])
    cube([1, 1, 5.45]);
  translate([74, 156, 0])
    cube([1, 1, 5.49]);
  translate([75, 156, 0])
    cube([1, 1, 5.57]);
  translate([76, 156, 0])
    cube([1, 1, 5.65]);
  translate([77, 156, 0])
    cube([1, 1, 5.25]);
  translate([78, 156, 0])
    cube([1, 1, 5.14]);
  translate([79, 156, 0])
    cube([1, 1, 1.45]);
  translate([80, 156, 0])
    cube([1, 1, 1.61]);
  translate([81, 156, 0])
    cube([1, 1, 1.61]);
  translate([82, 156, 0])
    cube([1, 1, 1.65]);
  translate([83, 156, 0])
    cube([1, 1, 1.65]);
  translate([84, 156, 0])
    cube([1, 1, 1.65]);
  translate([85, 156, 0])
    cube([1, 1, 6.90]);
  translate([86, 156, 0])
    cube([1, 1, 5.22]);
  translate([87, 156, 0])
    cube([1, 1, 4.43]);
  translate([88, 156, 0])
    cube([1, 1, 3.84]);
  translate([89, 156, 0])
    cube([1, 1, 3.65]);
  translate([90, 156, 0])
    cube([1, 1, 3.73]);
  translate([91, 156, 0])
    cube([1, 1, 3.57]);
  translate([92, 156, 0])
    cube([1, 1, 3.37]);
  translate([93, 156, 0])
    cube([1, 1, 3.25]);
  translate([94, 156, 0])
    cube([1, 1, 3.02]);
  translate([95, 156, 0])
    cube([1, 1, 2.75]);
  translate([96, 156, 0])
    cube([1, 1, 2.63]);
  translate([97, 156, 0])
    cube([1, 1, 2.78]);
  translate([98, 156, 0])
    cube([1, 1, 3.02]);
  translate([99, 156, 0])
    cube([1, 1, 3.06]);
  translate([100, 156, 0])
    cube([1, 1, 3.25]);
  translate([101, 156, 0])
    cube([1, 1, 3.25]);
  translate([102, 156, 0])
    cube([1, 1, 3.29]);
  translate([103, 156, 0])
    cube([1, 1, 3.53]);
  translate([104, 156, 0])
    cube([1, 1, 3.69]);
  translate([105, 156, 0])
    cube([1, 1, 3.92]);
  translate([106, 156, 0])
    cube([1, 1, 3.96]);
  translate([107, 156, 0])
    cube([1, 1, 4.04]);
  translate([108, 156, 0])
    cube([1, 1, 4.24]);
  translate([109, 156, 0])
    cube([1, 1, 4.39]);
  translate([110, 156, 0])
    cube([1, 1, 4.31]);
  translate([111, 156, 0])
    cube([1, 1, 4.35]);
  translate([112, 156, 0])
    cube([1, 1, 4.55]);
  translate([113, 156, 0])
    cube([1, 1, 4.59]);
  translate([114, 156, 0])
    cube([1, 1, 4.63]);
  translate([115, 156, 0])
    cube([1, 1, 4.47]);
  translate([116, 156, 0])
    cube([1, 1, 4.55]);
  translate([117, 156, 0])
    cube([1, 1, 4.63]);
  translate([118, 156, 0])
    cube([1, 1, 4.55]);
  translate([119, 156, 0])
    cube([1, 1, 4.63]);
  translate([120, 156, 0])
    cube([1, 1, 4.78]);
  translate([121, 156, 0])
    cube([1, 1, 4.98]);
  translate([122, 156, 0])
    cube([1, 1, 5.14]);
  translate([123, 156, 0])
    cube([1, 1, 5.45]);
  translate([124, 156, 0])
    cube([1, 1, 5.73]);
  translate([125, 156, 0])
    cube([1, 1, 6.20]);
  translate([126, 156, 0])
    cube([1, 1, 4.71]);
  translate([127, 156, 0])
    cube([1, 1, 4.71]);
  translate([128, 156, 0])
    cube([1, 1, 4.71]);
  translate([129, 156, 0])
    cube([1, 1, 4.75]);
  translate([130, 156, 0])
    cube([1, 1, 4.86]);
  translate([131, 156, 0])
    cube([1, 1, 4.98]);
  translate([132, 156, 0])
    cube([1, 1, 5.69]);
  translate([133, 156, 0])
    cube([1, 1, 6.16]);
  translate([134, 156, 0])
    cube([1, 1, 6.47]);
  translate([135, 156, 0])
    cube([1, 1, 6.12]);
  translate([136, 156, 0])
    cube([1, 1, 3.84]);
  translate([137, 156, 0])
    cube([1, 1, 4.20]);
  translate([138, 156, 0])
    cube([1, 1, 4.71]);
  translate([139, 156, 0])
    cube([1, 1, 4.86]);
  translate([140, 156, 0])
    cube([1, 1, 5.22]);
  translate([141, 156, 0])
    cube([1, 1, 5.37]);
  translate([142, 156, 0])
    cube([1, 1, 5.49]);
  translate([143, 156, 0])
    cube([1, 1, 5.61]);
  translate([144, 156, 0])
    cube([1, 1, 5.80]);
  translate([145, 156, 0])
    cube([1, 1, 5.88]);
  translate([146, 156, 0])
    cube([1, 1, 5.96]);
  translate([147, 156, 0])
    cube([1, 1, 6.00]);
  translate([148, 156, 0])
    cube([1, 1, 6.04]);
  translate([149, 156, 0])
    cube([1, 1, 6.27]);
  translate([150, 156, 0])
    cube([1, 1, 6.35]);
  translate([151, 156, 0])
    cube([1, 1, 6.47]);
  translate([152, 156, 0])
    cube([1, 1, 6.31]);
  translate([153, 156, 0])
    cube([1, 1, 6.12]);
  translate([154, 156, 0])
    cube([1, 1, 6.04]);
  translate([155, 156, 0])
    cube([1, 1, 5.96]);
  translate([156, 156, 0])
    cube([1, 1, 5.92]);
  translate([157, 156, 0])
    cube([1, 1, 5.92]);
  translate([158, 156, 0])
    cube([1, 1, 5.92]);
  translate([159, 156, 0])
    cube([1, 1, 6.47]);
  translate([160, 156, 0])
    cube([1, 1, 7.06]);
  translate([161, 156, 0])
    cube([1, 1, 1.57]);
  translate([162, 156, 0])
    cube([1, 1, 1.53]);
  translate([163, 156, 0])
    cube([1, 1, 1.57]);
  translate([164, 156, 0])
    cube([1, 1, 1.57]);
  translate([165, 156, 0])
    cube([1, 1, 1.57]);
  translate([166, 156, 0])
    cube([1, 1, 1.57]);
  translate([167, 156, 0])
    cube([1, 1, 1.57]);
  translate([168, 156, 0])
    cube([1, 1, 1.57]);
  translate([169, 156, 0])
    cube([1, 1, 1.57]);
  translate([170, 156, 0])
    cube([1, 1, 1.57]);
  translate([171, 156, 0])
    cube([1, 1, 1.61]);
  translate([172, 156, 0])
    cube([1, 1, 1.57]);
  translate([173, 156, 0])
    cube([1, 1, 1.57]);
  translate([174, 156, 0])
    cube([1, 1, 1.61]);
  translate([175, 156, 0])
    cube([1, 1, 1.61]);
  translate([176, 156, 0])
    cube([1, 1, 1.61]);
  translate([177, 156, 0])
    cube([1, 1, 1.61]);
  translate([178, 156, 0])
    cube([1, 1, 1.61]);
  translate([179, 156, 0])
    cube([1, 1, 1.61]);
  translate([180, 156, 0])
    cube([1, 1, 1.57]);
  translate([181, 156, 0])
    cube([1, 1, 1.65]);
  translate([182, 156, 0])
    cube([1, 1, 1.61]);
  translate([183, 156, 0])
    cube([1, 1, 1.65]);
  translate([184, 156, 0])
    cube([1, 1, 1.65]);
  translate([185, 156, 0])
    cube([1, 1, 1.61]);
  translate([186, 156, 0])
    cube([1, 1, 1.65]);
  translate([187, 156, 0])
    cube([1, 1, 1.57]);
  translate([188, 156, 0])
    cube([1, 1, 1.65]);
  translate([189, 156, 0])
    cube([1, 1, 1.65]);
  translate([190, 156, 0])
    cube([1, 1, 1.69]);
  translate([191, 156, 0])
    cube([1, 1, 1.69]);
  translate([192, 156, 0])
    cube([1, 1, 1.65]);
  translate([193, 156, 0])
    cube([1, 1, 1.69]);
  translate([194, 156, 0])
    cube([1, 1, 1.73]);
  translate([195, 156, 0])
    cube([1, 1, 1.69]);
  translate([196, 156, 0])
    cube([1, 1, 1.76]);
  translate([197, 156, 0])
    cube([1, 1, 1.69]);
  translate([198, 156, 0])
    cube([1, 1, 1.65]);
  translate([199, 156, 0])
    cube([1, 1, 1.69]);
  translate([200, 156, 0])
    cube([1, 1, 1.69]);
  translate([201, 156, 0])
    cube([1, 1, 1.69]);
  translate([202, 156, 0])
    cube([1, 1, 1.69]);
  translate([203, 156, 0])
    cube([1, 1, 1.69]);
  translate([204, 156, 0])
    cube([1, 1, 1.73]);
  translate([205, 156, 0])
    cube([1, 1, 1.69]);
  translate([206, 156, 0])
    cube([1, 1, 1.69]);
  translate([207, 156, 0])
    cube([1, 1, 1.65]);
  translate([208, 156, 0])
    cube([1, 1, 1.69]);
  translate([209, 156, 0])
    cube([1, 1, 1.65]);
  translate([210, 156, 0])
    cube([1, 1, 1.69]);
  translate([211, 156, 0])
    cube([1, 1, 1.69]);
  translate([212, 156, 0])
    cube([1, 1, 1.65]);
  translate([213, 156, 0])
    cube([1, 1, 1.69]);
  translate([214, 156, 0])
    cube([1, 1, 1.69]);
  translate([215, 156, 0])
    cube([1, 1, 1.69]);
  translate([216, 156, 0])
    cube([1, 1, 1.69]);
  translate([217, 156, 0])
    cube([1, 1, 1.61]);
  translate([218, 156, 0])
    cube([1, 1, 1.73]);
  translate([219, 156, 0])
    cube([1, 1, 1.65]);
  translate([220, 156, 0])
    cube([1, 1, 1.65]);
  translate([221, 156, 0])
    cube([1, 1, 1.65]);
  translate([222, 156, 0])
    cube([1, 1, 1.65]);
  translate([223, 156, 0])
    cube([1, 1, 1.69]);
  translate([224, 156, 0])
    cube([1, 1, 1.69]);
  translate([225, 156, 0])
    cube([1, 1, 1.65]);
  translate([226, 156, 0])
    cube([1, 1, 1.65]);
  translate([227, 156, 0])
    cube([1, 1, 1.65]);
  translate([228, 156, 0])
    cube([1, 1, 1.65]);
  translate([229, 156, 0])
    cube([1, 1, 1.65]);
  translate([230, 156, 0])
    cube([1, 1, 1.65]);
  translate([231, 156, 0])
    cube([1, 1, 1.65]);
  translate([232, 156, 0])
    cube([1, 1, 1.65]);
  translate([233, 156, 0])
    cube([1, 1, 1.69]);
  translate([234, 156, 0])
    cube([1, 1, 1.69]);
  translate([235, 156, 0])
    cube([1, 1, 1.65]);
  translate([236, 156, 0])
    cube([1, 1, 1.65]);
  translate([237, 156, 0])
    cube([1, 1, 1.65]);
  translate([238, 156, 0])
    cube([1, 1, 1.65]);
  translate([239, 156, 0])
    cube([1, 1, 1.65]);
  translate([240, 156, 0])
    cube([1, 1, 1.65]);
  translate([241, 156, 0])
    cube([1, 1, 1.65]);
  translate([242, 156, 0])
    cube([1, 1, 1.65]);
  translate([243, 156, 0])
    cube([1, 1, 1.65]);
  translate([244, 156, 0])
    cube([1, 1, 1.65]);
  translate([245, 156, 0])
    cube([1, 1, 1.65]);
  translate([246, 156, 0])
    cube([1, 1, 1.65]);
  translate([0, 157, 0])
    cube([1, 1, 1.88]);
  translate([1, 157, 0])
    cube([1, 1, 1.80]);
  translate([2, 157, 0])
    cube([1, 1, 1.80]);
  translate([3, 157, 0])
    cube([1, 1, 1.76]);
  translate([4, 157, 0])
    cube([1, 1, 1.76]);
  translate([5, 157, 0])
    cube([1, 1, 1.80]);
  translate([6, 157, 0])
    cube([1, 1, 1.80]);
  translate([7, 157, 0])
    cube([1, 1, 1.80]);
  translate([8, 157, 0])
    cube([1, 1, 1.80]);
  translate([9, 157, 0])
    cube([1, 1, 1.80]);
  translate([10, 157, 0])
    cube([1, 1, 1.80]);
  translate([11, 157, 0])
    cube([1, 1, 1.80]);
  translate([12, 157, 0])
    cube([1, 1, 1.80]);
  translate([13, 157, 0])
    cube([1, 1, 1.80]);
  translate([14, 157, 0])
    cube([1, 1, 1.84]);
  translate([15, 157, 0])
    cube([1, 1, 1.84]);
  translate([16, 157, 0])
    cube([1, 1, 1.84]);
  translate([17, 157, 0])
    cube([1, 1, 1.80]);
  translate([18, 157, 0])
    cube([1, 1, 1.80]);
  translate([19, 157, 0])
    cube([1, 1, 1.80]);
  translate([20, 157, 0])
    cube([1, 1, 1.80]);
  translate([21, 157, 0])
    cube([1, 1, 1.84]);
  translate([22, 157, 0])
    cube([1, 1, 1.76]);
  translate([23, 157, 0])
    cube([1, 1, 1.76]);
  translate([24, 157, 0])
    cube([1, 1, 1.80]);
  translate([25, 157, 0])
    cube([1, 1, 1.76]);
  translate([26, 157, 0])
    cube([1, 1, 1.76]);
  translate([27, 157, 0])
    cube([1, 1, 1.76]);
  translate([28, 157, 0])
    cube([1, 1, 1.76]);
  translate([29, 157, 0])
    cube([1, 1, 1.76]);
  translate([30, 157, 0])
    cube([1, 1, 1.76]);
  translate([31, 157, 0])
    cube([1, 1, 1.76]);
  translate([32, 157, 0])
    cube([1, 1, 1.76]);
  translate([33, 157, 0])
    cube([1, 1, 1.73]);
  translate([34, 157, 0])
    cube([1, 1, 1.73]);
  translate([35, 157, 0])
    cube([1, 1, 1.76]);
  translate([36, 157, 0])
    cube([1, 1, 1.73]);
  translate([37, 157, 0])
    cube([1, 1, 1.73]);
  translate([38, 157, 0])
    cube([1, 1, 1.73]);
  translate([39, 157, 0])
    cube([1, 1, 1.73]);
  translate([40, 157, 0])
    cube([1, 1, 1.76]);
  translate([41, 157, 0])
    cube([1, 1, 1.73]);
  translate([42, 157, 0])
    cube([1, 1, 1.73]);
  translate([43, 157, 0])
    cube([1, 1, 1.73]);
  translate([44, 157, 0])
    cube([1, 1, 1.73]);
  translate([45, 157, 0])
    cube([1, 1, 1.73]);
  translate([46, 157, 0])
    cube([1, 1, 1.73]);
  translate([47, 157, 0])
    cube([1, 1, 1.69]);
  translate([48, 157, 0])
    cube([1, 1, 1.73]);
  translate([49, 157, 0])
    cube([1, 1, 1.73]);
  translate([50, 157, 0])
    cube([1, 1, 1.73]);
  translate([51, 157, 0])
    cube([1, 1, 1.73]);
  translate([52, 157, 0])
    cube([1, 1, 1.73]);
  translate([53, 157, 0])
    cube([1, 1, 1.73]);
  translate([54, 157, 0])
    cube([1, 1, 1.37]);
  translate([55, 157, 0])
    cube([1, 1, 6.12]);
  translate([56, 157, 0])
    cube([1, 1, 5.69]);
  translate([57, 157, 0])
    cube([1, 1, 5.84]);
  translate([58, 157, 0])
    cube([1, 1, 4.43]);
  translate([59, 157, 0])
    cube([1, 1, 2.94]);
  translate([60, 157, 0])
    cube([1, 1, 2.78]);
  translate([61, 157, 0])
    cube([1, 1, 3.57]);
  translate([62, 157, 0])
    cube([1, 1, 4.35]);
  translate([63, 157, 0])
    cube([1, 1, 4.78]);
  translate([64, 157, 0])
    cube([1, 1, 4.90]);
  translate([65, 157, 0])
    cube([1, 1, 4.86]);
  translate([66, 157, 0])
    cube([1, 1, 4.82]);
  translate([67, 157, 0])
    cube([1, 1, 4.86]);
  translate([68, 157, 0])
    cube([1, 1, 4.94]);
  translate([69, 157, 0])
    cube([1, 1, 5.02]);
  translate([70, 157, 0])
    cube([1, 1, 5.18]);
  translate([71, 157, 0])
    cube([1, 1, 5.29]);
  translate([72, 157, 0])
    cube([1, 1, 5.41]);
  translate([73, 157, 0])
    cube([1, 1, 5.45]);
  translate([74, 157, 0])
    cube([1, 1, 5.53]);
  translate([75, 157, 0])
    cube([1, 1, 5.61]);
  translate([76, 157, 0])
    cube([1, 1, 5.45]);
  translate([77, 157, 0])
    cube([1, 1, 5.14]);
  translate([78, 157, 0])
    cube([1, 1, 1.49]);
  translate([79, 157, 0])
    cube([1, 1, 1.73]);
  translate([80, 157, 0])
    cube([1, 1, 1.65]);
  translate([81, 157, 0])
    cube([1, 1, 1.65]);
  translate([82, 157, 0])
    cube([1, 1, 1.65]);
  translate([83, 157, 0])
    cube([1, 1, 1.69]);
  translate([84, 157, 0])
    cube([1, 1, 1.41]);
  translate([85, 157, 0])
    cube([1, 1, 2.47]);
  translate([86, 157, 0])
    cube([1, 1, 5.69]);
  translate([87, 157, 0])
    cube([1, 1, 4.71]);
  translate([88, 157, 0])
    cube([1, 1, 4.12]);
  translate([89, 157, 0])
    cube([1, 1, 3.76]);
  translate([90, 157, 0])
    cube([1, 1, 3.80]);
  translate([91, 157, 0])
    cube([1, 1, 3.69]);
  translate([92, 157, 0])
    cube([1, 1, 3.45]);
  translate([93, 157, 0])
    cube([1, 1, 3.29]);
  translate([94, 157, 0])
    cube([1, 1, 2.98]);
  translate([95, 157, 0])
    cube([1, 1, 2.78]);
  translate([96, 157, 0])
    cube([1, 1, 2.67]);
  translate([97, 157, 0])
    cube([1, 1, 2.67]);
  translate([98, 157, 0])
    cube([1, 1, 2.94]);
  translate([99, 157, 0])
    cube([1, 1, 3.10]);
  translate([100, 157, 0])
    cube([1, 1, 3.18]);
  translate([101, 157, 0])
    cube([1, 1, 3.22]);
  translate([102, 157, 0])
    cube([1, 1, 3.22]);
  translate([103, 157, 0])
    cube([1, 1, 3.33]);
  translate([104, 157, 0])
    cube([1, 1, 3.57]);
  translate([105, 157, 0])
    cube([1, 1, 3.61]);
  translate([106, 157, 0])
    cube([1, 1, 3.80]);
  translate([107, 157, 0])
    cube([1, 1, 3.92]);
  translate([108, 157, 0])
    cube([1, 1, 4.08]);
  translate([109, 157, 0])
    cube([1, 1, 4.16]);
  translate([110, 157, 0])
    cube([1, 1, 4.12]);
  translate([111, 157, 0])
    cube([1, 1, 4.24]);
  translate([112, 157, 0])
    cube([1, 1, 4.31]);
  translate([113, 157, 0])
    cube([1, 1, 4.31]);
  translate([114, 157, 0])
    cube([1, 1, 4.27]);
  translate([115, 157, 0])
    cube([1, 1, 4.27]);
  translate([116, 157, 0])
    cube([1, 1, 4.39]);
  translate([117, 157, 0])
    cube([1, 1, 4.47]);
  translate([118, 157, 0])
    cube([1, 1, 4.51]);
  translate([119, 157, 0])
    cube([1, 1, 4.51]);
  translate([120, 157, 0])
    cube([1, 1, 4.59]);
  translate([121, 157, 0])
    cube([1, 1, 4.82]);
  translate([122, 157, 0])
    cube([1, 1, 5.18]);
  translate([123, 157, 0])
    cube([1, 1, 5.33]);
  translate([124, 157, 0])
    cube([1, 1, 5.73]);
  translate([125, 157, 0])
    cube([1, 1, 6.12]);
  translate([126, 157, 0])
    cube([1, 1, 4.51]);
  translate([127, 157, 0])
    cube([1, 1, 4.63]);
  translate([128, 157, 0])
    cube([1, 1, 4.71]);
  translate([129, 157, 0])
    cube([1, 1, 4.63]);
  translate([130, 157, 0])
    cube([1, 1, 4.78]);
  translate([131, 157, 0])
    cube([1, 1, 5.18]);
  translate([132, 157, 0])
    cube([1, 1, 5.80]);
  translate([133, 157, 0])
    cube([1, 1, 6.24]);
  translate([134, 157, 0])
    cube([1, 1, 6.75]);
  translate([135, 157, 0])
    cube([1, 1, 6.16]);
  translate([136, 157, 0])
    cube([1, 1, 3.53]);
  translate([137, 157, 0])
    cube([1, 1, 3.69]);
  translate([138, 157, 0])
    cube([1, 1, 4.00]);
  translate([139, 157, 0])
    cube([1, 1, 4.43]);
  translate([140, 157, 0])
    cube([1, 1, 4.75]);
  translate([141, 157, 0])
    cube([1, 1, 4.94]);
  translate([142, 157, 0])
    cube([1, 1, 5.22]);
  translate([143, 157, 0])
    cube([1, 1, 5.33]);
  translate([144, 157, 0])
    cube([1, 1, 5.45]);
  translate([145, 157, 0])
    cube([1, 1, 5.61]);
  translate([146, 157, 0])
    cube([1, 1, 5.84]);
  translate([147, 157, 0])
    cube([1, 1, 5.92]);
  translate([148, 157, 0])
    cube([1, 1, 6.04]);
  translate([149, 157, 0])
    cube([1, 1, 6.24]);
  translate([150, 157, 0])
    cube([1, 1, 6.24]);
  translate([151, 157, 0])
    cube([1, 1, 6.35]);
  translate([152, 157, 0])
    cube([1, 1, 6.27]);
  translate([153, 157, 0])
    cube([1, 1, 6.08]);
  translate([154, 157, 0])
    cube([1, 1, 6.04]);
  translate([155, 157, 0])
    cube([1, 1, 6.00]);
  translate([156, 157, 0])
    cube([1, 1, 5.96]);
  translate([157, 157, 0])
    cube([1, 1, 5.96]);
  translate([158, 157, 0])
    cube([1, 1, 5.92]);
  translate([159, 157, 0])
    cube([1, 1, 5.88]);
  translate([160, 157, 0])
    cube([1, 1, 6.43]);
  translate([161, 157, 0])
    cube([1, 1, 5.37]);
  translate([162, 157, 0])
    cube([1, 1, 2.00]);
  translate([163, 157, 0])
    cube([1, 1, 1.61]);
  translate([164, 157, 0])
    cube([1, 1, 1.57]);
  translate([165, 157, 0])
    cube([1, 1, 1.61]);
  translate([166, 157, 0])
    cube([1, 1, 1.57]);
  translate([167, 157, 0])
    cube([1, 1, 1.57]);
  translate([168, 157, 0])
    cube([1, 1, 1.57]);
  translate([169, 157, 0])
    cube([1, 1, 1.57]);
  translate([170, 157, 0])
    cube([1, 1, 1.57]);
  translate([171, 157, 0])
    cube([1, 1, 1.61]);
  translate([172, 157, 0])
    cube([1, 1, 1.65]);
  translate([173, 157, 0])
    cube([1, 1, 1.57]);
  translate([174, 157, 0])
    cube([1, 1, 1.61]);
  translate([175, 157, 0])
    cube([1, 1, 1.61]);
  translate([176, 157, 0])
    cube([1, 1, 1.61]);
  translate([177, 157, 0])
    cube([1, 1, 1.65]);
  translate([178, 157, 0])
    cube([1, 1, 1.61]);
  translate([179, 157, 0])
    cube([1, 1, 1.61]);
  translate([180, 157, 0])
    cube([1, 1, 1.57]);
  translate([181, 157, 0])
    cube([1, 1, 1.65]);
  translate([182, 157, 0])
    cube([1, 1, 1.65]);
  translate([183, 157, 0])
    cube([1, 1, 1.65]);
  translate([184, 157, 0])
    cube([1, 1, 1.65]);
  translate([185, 157, 0])
    cube([1, 1, 1.65]);
  translate([186, 157, 0])
    cube([1, 1, 1.65]);
  translate([187, 157, 0])
    cube([1, 1, 1.65]);
  translate([188, 157, 0])
    cube([1, 1, 1.65]);
  translate([189, 157, 0])
    cube([1, 1, 1.69]);
  translate([190, 157, 0])
    cube([1, 1, 1.69]);
  translate([191, 157, 0])
    cube([1, 1, 1.69]);
  translate([192, 157, 0])
    cube([1, 1, 1.69]);
  translate([193, 157, 0])
    cube([1, 1, 1.69]);
  translate([194, 157, 0])
    cube([1, 1, 1.69]);
  translate([195, 157, 0])
    cube([1, 1, 1.69]);
  translate([196, 157, 0])
    cube([1, 1, 1.69]);
  translate([197, 157, 0])
    cube([1, 1, 1.69]);
  translate([198, 157, 0])
    cube([1, 1, 1.69]);
  translate([199, 157, 0])
    cube([1, 1, 1.69]);
  translate([200, 157, 0])
    cube([1, 1, 1.69]);
  translate([201, 157, 0])
    cube([1, 1, 1.69]);
  translate([202, 157, 0])
    cube([1, 1, 1.69]);
  translate([203, 157, 0])
    cube([1, 1, 1.69]);
  translate([204, 157, 0])
    cube([1, 1, 1.69]);
  translate([205, 157, 0])
    cube([1, 1, 1.69]);
  translate([206, 157, 0])
    cube([1, 1, 1.65]);
  translate([207, 157, 0])
    cube([1, 1, 1.65]);
  translate([208, 157, 0])
    cube([1, 1, 1.65]);
  translate([209, 157, 0])
    cube([1, 1, 1.69]);
  translate([210, 157, 0])
    cube([1, 1, 1.69]);
  translate([211, 157, 0])
    cube([1, 1, 1.69]);
  translate([212, 157, 0])
    cube([1, 1, 1.69]);
  translate([213, 157, 0])
    cube([1, 1, 1.73]);
  translate([214, 157, 0])
    cube([1, 1, 1.69]);
  translate([215, 157, 0])
    cube([1, 1, 1.69]);
  translate([216, 157, 0])
    cube([1, 1, 1.69]);
  translate([217, 157, 0])
    cube([1, 1, 1.69]);
  translate([218, 157, 0])
    cube([1, 1, 1.69]);
  translate([219, 157, 0])
    cube([1, 1, 1.69]);
  translate([220, 157, 0])
    cube([1, 1, 1.65]);
  translate([221, 157, 0])
    cube([1, 1, 1.61]);
  translate([222, 157, 0])
    cube([1, 1, 1.61]);
  translate([223, 157, 0])
    cube([1, 1, 1.65]);
  translate([224, 157, 0])
    cube([1, 1, 1.69]);
  translate([225, 157, 0])
    cube([1, 1, 1.69]);
  translate([226, 157, 0])
    cube([1, 1, 1.69]);
  translate([227, 157, 0])
    cube([1, 1, 1.69]);
  translate([228, 157, 0])
    cube([1, 1, 1.65]);
  translate([229, 157, 0])
    cube([1, 1, 1.65]);
  translate([230, 157, 0])
    cube([1, 1, 1.65]);
  translate([231, 157, 0])
    cube([1, 1, 1.65]);
  translate([232, 157, 0])
    cube([1, 1, 1.65]);
  translate([233, 157, 0])
    cube([1, 1, 1.69]);
  translate([234, 157, 0])
    cube([1, 1, 1.69]);
  translate([235, 157, 0])
    cube([1, 1, 1.65]);
  translate([236, 157, 0])
    cube([1, 1, 1.65]);
  translate([237, 157, 0])
    cube([1, 1, 1.65]);
  translate([238, 157, 0])
    cube([1, 1, 1.65]);
  translate([239, 157, 0])
    cube([1, 1, 1.65]);
  translate([240, 157, 0])
    cube([1, 1, 1.65]);
  translate([241, 157, 0])
    cube([1, 1, 1.65]);
  translate([242, 157, 0])
    cube([1, 1, 1.65]);
  translate([243, 157, 0])
    cube([1, 1, 1.65]);
  translate([244, 157, 0])
    cube([1, 1, 1.65]);
  translate([245, 157, 0])
    cube([1, 1, 1.65]);
  translate([246, 157, 0])
    cube([1, 1, 1.61]);
  translate([0, 158, 0])
    cube([1, 1, 1.88]);
  translate([1, 158, 0])
    cube([1, 1, 1.80]);
  translate([2, 158, 0])
    cube([1, 1, 1.80]);
  translate([3, 158, 0])
    cube([1, 1, 1.84]);
  translate([4, 158, 0])
    cube([1, 1, 1.84]);
  translate([5, 158, 0])
    cube([1, 1, 1.88]);
  translate([6, 158, 0])
    cube([1, 1, 1.80]);
  translate([7, 158, 0])
    cube([1, 1, 1.80]);
  translate([8, 158, 0])
    cube([1, 1, 1.88]);
  translate([9, 158, 0])
    cube([1, 1, 1.80]);
  translate([10, 158, 0])
    cube([1, 1, 1.80]);
  translate([11, 158, 0])
    cube([1, 1, 1.80]);
  translate([12, 158, 0])
    cube([1, 1, 1.80]);
  translate([13, 158, 0])
    cube([1, 1, 1.80]);
  translate([14, 158, 0])
    cube([1, 1, 1.84]);
  translate([15, 158, 0])
    cube([1, 1, 1.84]);
  translate([16, 158, 0])
    cube([1, 1, 1.84]);
  translate([17, 158, 0])
    cube([1, 1, 1.84]);
  translate([18, 158, 0])
    cube([1, 1, 1.84]);
  translate([19, 158, 0])
    cube([1, 1, 1.80]);
  translate([20, 158, 0])
    cube([1, 1, 1.80]);
  translate([21, 158, 0])
    cube([1, 1, 1.84]);
  translate([22, 158, 0])
    cube([1, 1, 1.80]);
  translate([23, 158, 0])
    cube([1, 1, 1.80]);
  translate([24, 158, 0])
    cube([1, 1, 1.80]);
  translate([25, 158, 0])
    cube([1, 1, 1.80]);
  translate([26, 158, 0])
    cube([1, 1, 1.80]);
  translate([27, 158, 0])
    cube([1, 1, 1.76]);
  translate([28, 158, 0])
    cube([1, 1, 1.80]);
  translate([29, 158, 0])
    cube([1, 1, 1.80]);
  translate([30, 158, 0])
    cube([1, 1, 1.80]);
  translate([31, 158, 0])
    cube([1, 1, 1.80]);
  translate([32, 158, 0])
    cube([1, 1, 1.84]);
  translate([33, 158, 0])
    cube([1, 1, 1.73]);
  translate([34, 158, 0])
    cube([1, 1, 1.73]);
  translate([35, 158, 0])
    cube([1, 1, 1.76]);
  translate([36, 158, 0])
    cube([1, 1, 1.76]);
  translate([37, 158, 0])
    cube([1, 1, 1.76]);
  translate([38, 158, 0])
    cube([1, 1, 1.80]);
  translate([39, 158, 0])
    cube([1, 1, 1.80]);
  translate([40, 158, 0])
    cube([1, 1, 1.76]);
  translate([41, 158, 0])
    cube([1, 1, 1.73]);
  translate([42, 158, 0])
    cube([1, 1, 1.73]);
  translate([43, 158, 0])
    cube([1, 1, 1.73]);
  translate([44, 158, 0])
    cube([1, 1, 1.73]);
  translate([45, 158, 0])
    cube([1, 1, 1.73]);
  translate([46, 158, 0])
    cube([1, 1, 1.73]);
  translate([47, 158, 0])
    cube([1, 1, 1.76]);
  translate([48, 158, 0])
    cube([1, 1, 1.76]);
  translate([49, 158, 0])
    cube([1, 1, 1.73]);
  translate([50, 158, 0])
    cube([1, 1, 1.73]);
  translate([51, 158, 0])
    cube([1, 1, 1.73]);
  translate([52, 158, 0])
    cube([1, 1, 1.69]);
  translate([53, 158, 0])
    cube([1, 1, 1.65]);
  translate([54, 158, 0])
    cube([1, 1, 1.29]);
  translate([55, 158, 0])
    cube([1, 1, 1.41]);
  translate([56, 158, 0])
    cube([1, 1, 5.88]);
  translate([57, 158, 0])
    cube([1, 1, 5.73]);
  translate([58, 158, 0])
    cube([1, 1, 5.33]);
  translate([59, 158, 0])
    cube([1, 1, 3.49]);
  translate([60, 158, 0])
    cube([1, 1, 2.67]);
  translate([61, 158, 0])
    cube([1, 1, 3.22]);
  translate([62, 158, 0])
    cube([1, 1, 4.04]);
  translate([63, 158, 0])
    cube([1, 1, 4.71]);
  translate([64, 158, 0])
    cube([1, 1, 4.86]);
  translate([65, 158, 0])
    cube([1, 1, 4.86]);
  translate([66, 158, 0])
    cube([1, 1, 4.82]);
  translate([67, 158, 0])
    cube([1, 1, 4.94]);
  translate([68, 158, 0])
    cube([1, 1, 4.94]);
  translate([69, 158, 0])
    cube([1, 1, 5.02]);
  translate([70, 158, 0])
    cube([1, 1, 5.10]);
  translate([71, 158, 0])
    cube([1, 1, 5.22]);
  translate([72, 158, 0])
    cube([1, 1, 5.41]);
  translate([73, 158, 0])
    cube([1, 1, 5.45]);
  translate([74, 158, 0])
    cube([1, 1, 5.53]);
  translate([75, 158, 0])
    cube([1, 1, 5.57]);
  translate([76, 158, 0])
    cube([1, 1, 5.45]);
  translate([77, 158, 0])
    cube([1, 1, 5.10]);
  translate([78, 158, 0])
    cube([1, 1, 1.80]);
  translate([79, 158, 0])
    cube([1, 1, 1.53]);
  translate([80, 158, 0])
    cube([1, 1, 1.65]);
  translate([81, 158, 0])
    cube([1, 1, 1.65]);
  translate([82, 158, 0])
    cube([1, 1, 1.65]);
  translate([83, 158, 0])
    cube([1, 1, 1.69]);
  translate([84, 158, 0])
    cube([1, 1, 1.61]);
  translate([85, 158, 0])
    cube([1, 1, 1.53]);
  translate([86, 158, 0])
    cube([1, 1, 6.27]);
  translate([87, 158, 0])
    cube([1, 1, 5.18]);
  translate([88, 158, 0])
    cube([1, 1, 4.27]);
  translate([89, 158, 0])
    cube([1, 1, 3.96]);
  translate([90, 158, 0])
    cube([1, 1, 3.92]);
  translate([91, 158, 0])
    cube([1, 1, 3.73]);
  translate([92, 158, 0])
    cube([1, 1, 3.53]);
  translate([93, 158, 0])
    cube([1, 1, 3.33]);
  translate([94, 158, 0])
    cube([1, 1, 3.10]);
  translate([95, 158, 0])
    cube([1, 1, 2.90]);
  translate([96, 158, 0])
    cube([1, 1, 2.67]);
  translate([97, 158, 0])
    cube([1, 1, 2.55]);
  translate([98, 158, 0])
    cube([1, 1, 2.82]);
  translate([99, 158, 0])
    cube([1, 1, 3.02]);
  translate([100, 158, 0])
    cube([1, 1, 3.18]);
  translate([101, 158, 0])
    cube([1, 1, 3.22]);
  translate([102, 158, 0])
    cube([1, 1, 3.22]);
  translate([103, 158, 0])
    cube([1, 1, 3.22]);
  translate([104, 158, 0])
    cube([1, 1, 3.45]);
  translate([105, 158, 0])
    cube([1, 1, 3.49]);
  translate([106, 158, 0])
    cube([1, 1, 3.69]);
  translate([107, 158, 0])
    cube([1, 1, 3.76]);
  translate([108, 158, 0])
    cube([1, 1, 3.96]);
  translate([109, 158, 0])
    cube([1, 1, 4.04]);
  translate([110, 158, 0])
    cube([1, 1, 4.20]);
  translate([111, 158, 0])
    cube([1, 1, 4.16]);
  translate([112, 158, 0])
    cube([1, 1, 4.20]);
  translate([113, 158, 0])
    cube([1, 1, 4.12]);
  translate([114, 158, 0])
    cube([1, 1, 4.24]);
  translate([115, 158, 0])
    cube([1, 1, 4.20]);
  translate([116, 158, 0])
    cube([1, 1, 4.24]);
  translate([117, 158, 0])
    cube([1, 1, 4.31]);
  translate([118, 158, 0])
    cube([1, 1, 4.35]);
  translate([119, 158, 0])
    cube([1, 1, 4.35]);
  translate([120, 158, 0])
    cube([1, 1, 4.47]);
  translate([121, 158, 0])
    cube([1, 1, 4.71]);
  translate([122, 158, 0])
    cube([1, 1, 5.06]);
  translate([123, 158, 0])
    cube([1, 1, 5.25]);
  translate([124, 158, 0])
    cube([1, 1, 5.73]);
  translate([125, 158, 0])
    cube([1, 1, 5.76]);
  translate([126, 158, 0])
    cube([1, 1, 4.67]);
  translate([127, 158, 0])
    cube([1, 1, 4.67]);
  translate([128, 158, 0])
    cube([1, 1, 4.63]);
  translate([129, 158, 0])
    cube([1, 1, 4.63]);
  translate([130, 158, 0])
    cube([1, 1, 4.94]);
  translate([131, 158, 0])
    cube([1, 1, 5.41]);
  translate([132, 158, 0])
    cube([1, 1, 6.12]);
  translate([133, 158, 0])
    cube([1, 1, 6.75]);
  translate([134, 158, 0])
    cube([1, 1, 6.71]);
  translate([135, 158, 0])
    cube([1, 1, 6.16]);
  translate([136, 158, 0])
    cube([1, 1, 4.16]);
  translate([137, 158, 0])
    cube([1, 1, 3.41]);
  translate([138, 158, 0])
    cube([1, 1, 3.45]);
  translate([139, 158, 0])
    cube([1, 1, 3.84]);
  translate([140, 158, 0])
    cube([1, 1, 4.24]);
  translate([141, 158, 0])
    cube([1, 1, 4.55]);
  translate([142, 158, 0])
    cube([1, 1, 4.82]);
  translate([143, 158, 0])
    cube([1, 1, 5.06]);
  translate([144, 158, 0])
    cube([1, 1, 5.25]);
  translate([145, 158, 0])
    cube([1, 1, 5.41]);
  translate([146, 158, 0])
    cube([1, 1, 5.69]);
  translate([147, 158, 0])
    cube([1, 1, 5.80]);
  translate([148, 158, 0])
    cube([1, 1, 5.96]);
  translate([149, 158, 0])
    cube([1, 1, 6.12]);
  translate([150, 158, 0])
    cube([1, 1, 6.16]);
  translate([151, 158, 0])
    cube([1, 1, 6.16]);
  translate([152, 158, 0])
    cube([1, 1, 6.16]);
  translate([153, 158, 0])
    cube([1, 1, 6.08]);
  translate([154, 158, 0])
    cube([1, 1, 6.04]);
  translate([155, 158, 0])
    cube([1, 1, 6.04]);
  translate([156, 158, 0])
    cube([1, 1, 5.96]);
  translate([157, 158, 0])
    cube([1, 1, 5.96]);
  translate([158, 158, 0])
    cube([1, 1, 5.84]);
  translate([159, 158, 0])
    cube([1, 1, 5.84]);
  translate([160, 158, 0])
    cube([1, 1, 5.88]);
  translate([161, 158, 0])
    cube([1, 1, 6.82]);
  translate([162, 158, 0])
    cube([1, 1, 2.35]);
  translate([163, 158, 0])
    cube([1, 1, 1.61]);
  translate([164, 158, 0])
    cube([1, 1, 1.61]);
  translate([165, 158, 0])
    cube([1, 1, 1.65]);
  translate([166, 158, 0])
    cube([1, 1, 1.65]);
  translate([167, 158, 0])
    cube([1, 1, 1.65]);
  translate([168, 158, 0])
    cube([1, 1, 1.65]);
  translate([169, 158, 0])
    cube([1, 1, 1.61]);
  translate([170, 158, 0])
    cube([1, 1, 1.61]);
  translate([171, 158, 0])
    cube([1, 1, 1.65]);
  translate([172, 158, 0])
    cube([1, 1, 1.57]);
  translate([173, 158, 0])
    cube([1, 1, 1.65]);
  translate([174, 158, 0])
    cube([1, 1, 1.61]);
  translate([175, 158, 0])
    cube([1, 1, 1.61]);
  translate([176, 158, 0])
    cube([1, 1, 1.69]);
  translate([177, 158, 0])
    cube([1, 1, 1.65]);
  translate([178, 158, 0])
    cube([1, 1, 1.61]);
  translate([179, 158, 0])
    cube([1, 1, 1.69]);
  translate([180, 158, 0])
    cube([1, 1, 1.65]);
  translate([181, 158, 0])
    cube([1, 1, 1.73]);
  translate([182, 158, 0])
    cube([1, 1, 1.69]);
  translate([183, 158, 0])
    cube([1, 1, 1.69]);
  translate([184, 158, 0])
    cube([1, 1, 1.69]);
  translate([185, 158, 0])
    cube([1, 1, 1.69]);
  translate([186, 158, 0])
    cube([1, 1, 1.69]);
  translate([187, 158, 0])
    cube([1, 1, 1.69]);
  translate([188, 158, 0])
    cube([1, 1, 1.65]);
  translate([189, 158, 0])
    cube([1, 1, 1.69]);
  translate([190, 158, 0])
    cube([1, 1, 1.69]);
  translate([191, 158, 0])
    cube([1, 1, 1.69]);
  translate([192, 158, 0])
    cube([1, 1, 1.69]);
  translate([193, 158, 0])
    cube([1, 1, 1.69]);
  translate([194, 158, 0])
    cube([1, 1, 1.69]);
  translate([195, 158, 0])
    cube([1, 1, 1.69]);
  translate([196, 158, 0])
    cube([1, 1, 1.69]);
  translate([197, 158, 0])
    cube([1, 1, 1.69]);
  translate([198, 158, 0])
    cube([1, 1, 1.69]);
  translate([199, 158, 0])
    cube([1, 1, 1.69]);
  translate([200, 158, 0])
    cube([1, 1, 1.73]);
  translate([201, 158, 0])
    cube([1, 1, 1.69]);
  translate([202, 158, 0])
    cube([1, 1, 1.69]);
  translate([203, 158, 0])
    cube([1, 1, 1.69]);
  translate([204, 158, 0])
    cube([1, 1, 1.69]);
  translate([205, 158, 0])
    cube([1, 1, 1.69]);
  translate([206, 158, 0])
    cube([1, 1, 1.69]);
  translate([207, 158, 0])
    cube([1, 1, 1.69]);
  translate([208, 158, 0])
    cube([1, 1, 1.69]);
  translate([209, 158, 0])
    cube([1, 1, 1.69]);
  translate([210, 158, 0])
    cube([1, 1, 1.69]);
  translate([211, 158, 0])
    cube([1, 1, 1.69]);
  translate([212, 158, 0])
    cube([1, 1, 1.69]);
  translate([213, 158, 0])
    cube([1, 1, 1.73]);
  translate([214, 158, 0])
    cube([1, 1, 1.69]);
  translate([215, 158, 0])
    cube([1, 1, 1.69]);
  translate([216, 158, 0])
    cube([1, 1, 1.69]);
  translate([217, 158, 0])
    cube([1, 1, 1.69]);
  translate([218, 158, 0])
    cube([1, 1, 1.69]);
  translate([219, 158, 0])
    cube([1, 1, 1.69]);
  translate([220, 158, 0])
    cube([1, 1, 1.73]);
  translate([221, 158, 0])
    cube([1, 1, 1.69]);
  translate([222, 158, 0])
    cube([1, 1, 1.61]);
  translate([223, 158, 0])
    cube([1, 1, 1.65]);
  translate([224, 158, 0])
    cube([1, 1, 1.69]);
  translate([225, 158, 0])
    cube([1, 1, 1.69]);
  translate([226, 158, 0])
    cube([1, 1, 1.69]);
  translate([227, 158, 0])
    cube([1, 1, 1.69]);
  translate([228, 158, 0])
    cube([1, 1, 1.65]);
  translate([229, 158, 0])
    cube([1, 1, 1.65]);
  translate([230, 158, 0])
    cube([1, 1, 1.69]);
  translate([231, 158, 0])
    cube([1, 1, 1.69]);
  translate([232, 158, 0])
    cube([1, 1, 1.69]);
  translate([233, 158, 0])
    cube([1, 1, 1.69]);
  translate([234, 158, 0])
    cube([1, 1, 1.69]);
  translate([235, 158, 0])
    cube([1, 1, 1.65]);
  translate([236, 158, 0])
    cube([1, 1, 1.65]);
  translate([237, 158, 0])
    cube([1, 1, 1.65]);
  translate([238, 158, 0])
    cube([1, 1, 1.69]);
  translate([239, 158, 0])
    cube([1, 1, 1.69]);
  translate([240, 158, 0])
    cube([1, 1, 1.65]);
  translate([241, 158, 0])
    cube([1, 1, 1.69]);
  translate([242, 158, 0])
    cube([1, 1, 1.69]);
  translate([243, 158, 0])
    cube([1, 1, 1.65]);
  translate([244, 158, 0])
    cube([1, 1, 1.65]);
  translate([245, 158, 0])
    cube([1, 1, 1.65]);
  translate([246, 158, 0])
    cube([1, 1, 1.65]);
  translate([0, 159, 0])
    cube([1, 1, 1.84]);
  translate([1, 159, 0])
    cube([1, 1, 1.84]);
  translate([2, 159, 0])
    cube([1, 1, 1.84]);
  translate([3, 159, 0])
    cube([1, 1, 1.88]);
  translate([4, 159, 0])
    cube([1, 1, 1.88]);
  translate([5, 159, 0])
    cube([1, 1, 1.88]);
  translate([6, 159, 0])
    cube([1, 1, 1.80]);
  translate([7, 159, 0])
    cube([1, 1, 1.80]);
  translate([8, 159, 0])
    cube([1, 1, 1.84]);
  translate([9, 159, 0])
    cube([1, 1, 1.88]);
  translate([10, 159, 0])
    cube([1, 1, 1.88]);
  translate([11, 159, 0])
    cube([1, 1, 1.88]);
  translate([12, 159, 0])
    cube([1, 1, 1.84]);
  translate([13, 159, 0])
    cube([1, 1, 1.84]);
  translate([14, 159, 0])
    cube([1, 1, 1.84]);
  translate([15, 159, 0])
    cube([1, 1, 1.84]);
  translate([16, 159, 0])
    cube([1, 1, 1.84]);
  translate([17, 159, 0])
    cube([1, 1, 1.84]);
  translate([18, 159, 0])
    cube([1, 1, 1.84]);
  translate([19, 159, 0])
    cube([1, 1, 1.84]);
  translate([20, 159, 0])
    cube([1, 1, 1.84]);
  translate([21, 159, 0])
    cube([1, 1, 1.84]);
  translate([22, 159, 0])
    cube([1, 1, 1.80]);
  translate([23, 159, 0])
    cube([1, 1, 1.80]);
  translate([24, 159, 0])
    cube([1, 1, 1.80]);
  translate([25, 159, 0])
    cube([1, 1, 1.80]);
  translate([26, 159, 0])
    cube([1, 1, 1.88]);
  translate([27, 159, 0])
    cube([1, 1, 1.84]);
  translate([28, 159, 0])
    cube([1, 1, 1.80]);
  translate([29, 159, 0])
    cube([1, 1, 1.80]);
  translate([30, 159, 0])
    cube([1, 1, 1.80]);
  translate([31, 159, 0])
    cube([1, 1, 1.76]);
  translate([32, 159, 0])
    cube([1, 1, 1.80]);
  translate([33, 159, 0])
    cube([1, 1, 1.80]);
  translate([34, 159, 0])
    cube([1, 1, 1.84]);
  translate([35, 159, 0])
    cube([1, 1, 1.76]);
  translate([36, 159, 0])
    cube([1, 1, 1.80]);
  translate([37, 159, 0])
    cube([1, 1, 1.80]);
  translate([38, 159, 0])
    cube([1, 1, 1.80]);
  translate([39, 159, 0])
    cube([1, 1, 1.80]);
  translate([40, 159, 0])
    cube([1, 1, 1.80]);
  translate([41, 159, 0])
    cube([1, 1, 1.80]);
  translate([42, 159, 0])
    cube([1, 1, 1.76]);
  translate([43, 159, 0])
    cube([1, 1, 1.76]);
  translate([44, 159, 0])
    cube([1, 1, 1.76]);
  translate([45, 159, 0])
    cube([1, 1, 1.76]);
  translate([46, 159, 0])
    cube([1, 1, 1.73]);
  translate([47, 159, 0])
    cube([1, 1, 1.76]);
  translate([48, 159, 0])
    cube([1, 1, 1.76]);
  translate([49, 159, 0])
    cube([1, 1, 1.76]);
  translate([50, 159, 0])
    cube([1, 1, 1.76]);
  translate([51, 159, 0])
    cube([1, 1, 1.76]);
  translate([52, 159, 0])
    cube([1, 1, 1.76]);
  translate([53, 159, 0])
    cube([1, 1, 1.76]);
  translate([54, 159, 0])
    cube([1, 1, 1.76]);
  translate([55, 159, 0])
    cube([1, 1, 1.76]);
  translate([56, 159, 0])
    cube([1, 1, 5.37]);
  translate([57, 159, 0])
    cube([1, 1, 5.49]);
  translate([58, 159, 0])
    cube([1, 1, 5.76]);
  translate([59, 159, 0])
    cube([1, 1, 4.27]);
  translate([60, 159, 0])
    cube([1, 1, 2.86]);
  translate([61, 159, 0])
    cube([1, 1, 2.86]);
  translate([62, 159, 0])
    cube([1, 1, 3.76]);
  translate([63, 159, 0])
    cube([1, 1, 4.47]);
  translate([64, 159, 0])
    cube([1, 1, 4.75]);
  translate([65, 159, 0])
    cube([1, 1, 4.86]);
  translate([66, 159, 0])
    cube([1, 1, 4.90]);
  translate([67, 159, 0])
    cube([1, 1, 4.98]);
  translate([68, 159, 0])
    cube([1, 1, 4.94]);
  translate([69, 159, 0])
    cube([1, 1, 4.94]);
  translate([70, 159, 0])
    cube([1, 1, 5.02]);
  translate([71, 159, 0])
    cube([1, 1, 5.22]);
  translate([72, 159, 0])
    cube([1, 1, 5.41]);
  translate([73, 159, 0])
    cube([1, 1, 5.49]);
  translate([74, 159, 0])
    cube([1, 1, 5.53]);
  translate([75, 159, 0])
    cube([1, 1, 5.49]);
  translate([76, 159, 0])
    cube([1, 1, 5.37]);
  translate([77, 159, 0])
    cube([1, 1, 4.75]);
  translate([78, 159, 0])
    cube([1, 1, 1.69]);
  translate([79, 159, 0])
    cube([1, 1, 1.69]);
  translate([80, 159, 0])
    cube([1, 1, 1.69]);
  translate([81, 159, 0])
    cube([1, 1, 1.69]);
  translate([82, 159, 0])
    cube([1, 1, 1.69]);
  translate([83, 159, 0])
    cube([1, 1, 1.69]);
  translate([84, 159, 0])
    cube([1, 1, 1.76]);
  translate([85, 159, 0])
    cube([1, 1, 1.61]);
  translate([86, 159, 0])
    cube([1, 1, 6.86]);
  translate([87, 159, 0])
    cube([1, 1, 5.65]);
  translate([88, 159, 0])
    cube([1, 1, 4.59]);
  translate([89, 159, 0])
    cube([1, 1, 4.00]);
  translate([90, 159, 0])
    cube([1, 1, 3.84]);
  translate([91, 159, 0])
    cube([1, 1, 3.80]);
  translate([92, 159, 0])
    cube([1, 1, 3.53]);
  translate([93, 159, 0])
    cube([1, 1, 3.37]);
  translate([94, 159, 0])
    cube([1, 1, 3.18]);
  translate([95, 159, 0])
    cube([1, 1, 3.06]);
  translate([96, 159, 0])
    cube([1, 1, 2.78]);
  translate([97, 159, 0])
    cube([1, 1, 2.59]);
  translate([98, 159, 0])
    cube([1, 1, 2.71]);
  translate([99, 159, 0])
    cube([1, 1, 2.86]);
  translate([100, 159, 0])
    cube([1, 1, 3.25]);
  translate([101, 159, 0])
    cube([1, 1, 3.22]);
  translate([102, 159, 0])
    cube([1, 1, 3.22]);
  translate([103, 159, 0])
    cube([1, 1, 3.25]);
  translate([104, 159, 0])
    cube([1, 1, 3.37]);
  translate([105, 159, 0])
    cube([1, 1, 3.41]);
  translate([106, 159, 0])
    cube([1, 1, 3.61]);
  translate([107, 159, 0])
    cube([1, 1, 3.69]);
  translate([108, 159, 0])
    cube([1, 1, 3.84]);
  translate([109, 159, 0])
    cube([1, 1, 3.84]);
  translate([110, 159, 0])
    cube([1, 1, 3.96]);
  translate([111, 159, 0])
    cube([1, 1, 4.00]);
  translate([112, 159, 0])
    cube([1, 1, 4.00]);
  translate([113, 159, 0])
    cube([1, 1, 4.08]);
  translate([114, 159, 0])
    cube([1, 1, 4.20]);
  translate([115, 159, 0])
    cube([1, 1, 4.08]);
  translate([116, 159, 0])
    cube([1, 1, 4.08]);
  translate([117, 159, 0])
    cube([1, 1, 4.16]);
  translate([118, 159, 0])
    cube([1, 1, 4.27]);
  translate([119, 159, 0])
    cube([1, 1, 4.20]);
  translate([120, 159, 0])
    cube([1, 1, 4.39]);
  translate([121, 159, 0])
    cube([1, 1, 4.75]);
  translate([122, 159, 0])
    cube([1, 1, 5.06]);
  translate([123, 159, 0])
    cube([1, 1, 5.45]);
  translate([124, 159, 0])
    cube([1, 1, 5.76]);
  translate([125, 159, 0])
    cube([1, 1, 5.49]);
  translate([126, 159, 0])
    cube([1, 1, 4.78]);
  translate([127, 159, 0])
    cube([1, 1, 4.71]);
  translate([128, 159, 0])
    cube([1, 1, 4.71]);
  translate([129, 159, 0])
    cube([1, 1, 4.82]);
  translate([130, 159, 0])
    cube([1, 1, 5.25]);
  translate([131, 159, 0])
    cube([1, 1, 5.76]);
  translate([132, 159, 0])
    cube([1, 1, 6.63]);
  translate([133, 159, 0])
    cube([1, 1, 6.90]);
  translate([134, 159, 0])
    cube([1, 1, 6.63]);
  translate([135, 159, 0])
    cube([1, 1, 6.82]);
  translate([136, 159, 0])
    cube([1, 1, 4.31]);
  translate([137, 159, 0])
    cube([1, 1, 3.61]);
  translate([138, 159, 0])
    cube([1, 1, 3.25]);
  translate([139, 159, 0])
    cube([1, 1, 3.22]);
  translate([140, 159, 0])
    cube([1, 1, 3.69]);
  translate([141, 159, 0])
    cube([1, 1, 4.08]);
  translate([142, 159, 0])
    cube([1, 1, 4.35]);
  translate([143, 159, 0])
    cube([1, 1, 4.71]);
  translate([144, 159, 0])
    cube([1, 1, 4.94]);
  translate([145, 159, 0])
    cube([1, 1, 5.14]);
  translate([146, 159, 0])
    cube([1, 1, 5.49]);
  translate([147, 159, 0])
    cube([1, 1, 5.65]);
  translate([148, 159, 0])
    cube([1, 1, 5.88]);
  translate([149, 159, 0])
    cube([1, 1, 6.08]);
  translate([150, 159, 0])
    cube([1, 1, 6.16]);
  translate([151, 159, 0])
    cube([1, 1, 6.16]);
  translate([152, 159, 0])
    cube([1, 1, 6.16]);
  translate([153, 159, 0])
    cube([1, 1, 6.08]);
  translate([154, 159, 0])
    cube([1, 1, 6.04]);
  translate([155, 159, 0])
    cube([1, 1, 6.00]);
  translate([156, 159, 0])
    cube([1, 1, 6.00]);
  translate([157, 159, 0])
    cube([1, 1, 6.00]);
  translate([158, 159, 0])
    cube([1, 1, 5.80]);
  translate([159, 159, 0])
    cube([1, 1, 5.80]);
  translate([160, 159, 0])
    cube([1, 1, 5.69]);
  translate([161, 159, 0])
    cube([1, 1, 5.73]);
  translate([162, 159, 0])
    cube([1, 1, 6.35]);
  translate([163, 159, 0])
    cube([1, 1, 1.69]);
  translate([164, 159, 0])
    cube([1, 1, 1.73]);
  translate([165, 159, 0])
    cube([1, 1, 1.61]);
  translate([166, 159, 0])
    cube([1, 1, 1.69]);
  translate([167, 159, 0])
    cube([1, 1, 1.65]);
  translate([168, 159, 0])
    cube([1, 1, 1.65]);
  translate([169, 159, 0])
    cube([1, 1, 1.65]);
  translate([170, 159, 0])
    cube([1, 1, 1.65]);
  translate([171, 159, 0])
    cube([1, 1, 1.65]);
  translate([172, 159, 0])
    cube([1, 1, 1.65]);
  translate([173, 159, 0])
    cube([1, 1, 1.69]);
  translate([174, 159, 0])
    cube([1, 1, 1.69]);
  translate([175, 159, 0])
    cube([1, 1, 1.69]);
  translate([176, 159, 0])
    cube([1, 1, 1.69]);
  translate([177, 159, 0])
    cube([1, 1, 1.69]);
  translate([178, 159, 0])
    cube([1, 1, 1.69]);
  translate([179, 159, 0])
    cube([1, 1, 1.69]);
  translate([180, 159, 0])
    cube([1, 1, 1.69]);
  translate([181, 159, 0])
    cube([1, 1, 1.69]);
  translate([182, 159, 0])
    cube([1, 1, 1.69]);
  translate([183, 159, 0])
    cube([1, 1, 1.69]);
  translate([184, 159, 0])
    cube([1, 1, 1.69]);
  translate([185, 159, 0])
    cube([1, 1, 1.69]);
  translate([186, 159, 0])
    cube([1, 1, 1.69]);
  translate([187, 159, 0])
    cube([1, 1, 1.69]);
  translate([188, 159, 0])
    cube([1, 1, 1.69]);
  translate([189, 159, 0])
    cube([1, 1, 1.69]);
  translate([190, 159, 0])
    cube([1, 1, 1.73]);
  translate([191, 159, 0])
    cube([1, 1, 1.73]);
  translate([192, 159, 0])
    cube([1, 1, 1.69]);
  translate([193, 159, 0])
    cube([1, 1, 1.73]);
  translate([194, 159, 0])
    cube([1, 1, 1.73]);
  translate([195, 159, 0])
    cube([1, 1, 1.73]);
  translate([196, 159, 0])
    cube([1, 1, 1.65]);
  translate([197, 159, 0])
    cube([1, 1, 1.76]);
  translate([198, 159, 0])
    cube([1, 1, 1.69]);
  translate([199, 159, 0])
    cube([1, 1, 1.73]);
  translate([200, 159, 0])
    cube([1, 1, 1.73]);
  translate([201, 159, 0])
    cube([1, 1, 1.69]);
  translate([202, 159, 0])
    cube([1, 1, 1.76]);
  translate([203, 159, 0])
    cube([1, 1, 1.69]);
  translate([204, 159, 0])
    cube([1, 1, 1.73]);
  translate([205, 159, 0])
    cube([1, 1, 1.73]);
  translate([206, 159, 0])
    cube([1, 1, 1.69]);
  translate([207, 159, 0])
    cube([1, 1, 1.69]);
  translate([208, 159, 0])
    cube([1, 1, 1.73]);
  translate([209, 159, 0])
    cube([1, 1, 1.73]);
  translate([210, 159, 0])
    cube([1, 1, 1.73]);
  translate([211, 159, 0])
    cube([1, 1, 1.73]);
  translate([212, 159, 0])
    cube([1, 1, 1.73]);
  translate([213, 159, 0])
    cube([1, 1, 1.73]);
  translate([214, 159, 0])
    cube([1, 1, 1.73]);
  translate([215, 159, 0])
    cube([1, 1, 1.73]);
  translate([216, 159, 0])
    cube([1, 1, 1.73]);
  translate([217, 159, 0])
    cube([1, 1, 1.65]);
  translate([218, 159, 0])
    cube([1, 1, 1.76]);
  translate([219, 159, 0])
    cube([1, 1, 1.69]);
  translate([220, 159, 0])
    cube([1, 1, 1.73]);
  translate([221, 159, 0])
    cube([1, 1, 1.73]);
  translate([222, 159, 0])
    cube([1, 1, 1.73]);
  translate([223, 159, 0])
    cube([1, 1, 1.73]);
  translate([224, 159, 0])
    cube([1, 1, 1.73]);
  translate([225, 159, 0])
    cube([1, 1, 1.69]);
  translate([226, 159, 0])
    cube([1, 1, 1.69]);
  translate([227, 159, 0])
    cube([1, 1, 1.73]);
  translate([228, 159, 0])
    cube([1, 1, 1.69]);
  translate([229, 159, 0])
    cube([1, 1, 1.69]);
  translate([230, 159, 0])
    cube([1, 1, 1.69]);
  translate([231, 159, 0])
    cube([1, 1, 1.69]);
  translate([232, 159, 0])
    cube([1, 1, 1.69]);
  translate([233, 159, 0])
    cube([1, 1, 1.69]);
  translate([234, 159, 0])
    cube([1, 1, 1.69]);
  translate([235, 159, 0])
    cube([1, 1, 1.73]);
  translate([236, 159, 0])
    cube([1, 1, 1.69]);
  translate([237, 159, 0])
    cube([1, 1, 1.69]);
  translate([238, 159, 0])
    cube([1, 1, 1.69]);
  translate([239, 159, 0])
    cube([1, 1, 1.69]);
  translate([240, 159, 0])
    cube([1, 1, 1.69]);
  translate([241, 159, 0])
    cube([1, 1, 1.73]);
  translate([242, 159, 0])
    cube([1, 1, 1.73]);
  translate([243, 159, 0])
    cube([1, 1, 1.73]);
  translate([244, 159, 0])
    cube([1, 1, 1.69]);
  translate([245, 159, 0])
    cube([1, 1, 1.69]);
  translate([246, 159, 0])
    cube([1, 1, 1.69]);
  translate([0, 160, 0])
    cube([1, 1, 1.88]);
  translate([1, 160, 0])
    cube([1, 1, 1.80]);
  translate([2, 160, 0])
    cube([1, 1, 1.88]);
  translate([3, 160, 0])
    cube([1, 1, 1.88]);
  translate([4, 160, 0])
    cube([1, 1, 1.84]);
  translate([5, 160, 0])
    cube([1, 1, 1.88]);
  translate([6, 160, 0])
    cube([1, 1, 1.84]);
  translate([7, 160, 0])
    cube([1, 1, 1.88]);
  translate([8, 160, 0])
    cube([1, 1, 1.88]);
  translate([9, 160, 0])
    cube([1, 1, 1.84]);
  translate([10, 160, 0])
    cube([1, 1, 1.84]);
  translate([11, 160, 0])
    cube([1, 1, 1.88]);
  translate([12, 160, 0])
    cube([1, 1, 1.84]);
  translate([13, 160, 0])
    cube([1, 1, 1.84]);
  translate([14, 160, 0])
    cube([1, 1, 1.84]);
  translate([15, 160, 0])
    cube([1, 1, 1.84]);
  translate([16, 160, 0])
    cube([1, 1, 1.84]);
  translate([17, 160, 0])
    cube([1, 1, 1.84]);
  translate([18, 160, 0])
    cube([1, 1, 1.84]);
  translate([19, 160, 0])
    cube([1, 1, 1.84]);
  translate([20, 160, 0])
    cube([1, 1, 1.76]);
  translate([21, 160, 0])
    cube([1, 1, 1.76]);
  translate([22, 160, 0])
    cube([1, 1, 1.84]);
  translate([23, 160, 0])
    cube([1, 1, 1.84]);
  translate([24, 160, 0])
    cube([1, 1, 1.84]);
  translate([25, 160, 0])
    cube([1, 1, 1.84]);
  translate([26, 160, 0])
    cube([1, 1, 1.84]);
  translate([27, 160, 0])
    cube([1, 1, 1.84]);
  translate([28, 160, 0])
    cube([1, 1, 1.76]);
  translate([29, 160, 0])
    cube([1, 1, 1.84]);
  translate([30, 160, 0])
    cube([1, 1, 1.84]);
  translate([31, 160, 0])
    cube([1, 1, 1.84]);
  translate([32, 160, 0])
    cube([1, 1, 1.80]);
  translate([33, 160, 0])
    cube([1, 1, 1.80]);
  translate([34, 160, 0])
    cube([1, 1, 1.88]);
  translate([35, 160, 0])
    cube([1, 1, 1.76]);
  translate([36, 160, 0])
    cube([1, 1, 1.80]);
  translate([37, 160, 0])
    cube([1, 1, 1.80]);
  translate([38, 160, 0])
    cube([1, 1, 1.80]);
  translate([39, 160, 0])
    cube([1, 1, 1.80]);
  translate([40, 160, 0])
    cube([1, 1, 1.80]);
  translate([41, 160, 0])
    cube([1, 1, 1.80]);
  translate([42, 160, 0])
    cube([1, 1, 1.80]);
  translate([43, 160, 0])
    cube([1, 1, 1.80]);
  translate([44, 160, 0])
    cube([1, 1, 1.80]);
  translate([45, 160, 0])
    cube([1, 1, 1.80]);
  translate([46, 160, 0])
    cube([1, 1, 1.80]);
  translate([47, 160, 0])
    cube([1, 1, 1.80]);
  translate([48, 160, 0])
    cube([1, 1, 1.80]);
  translate([49, 160, 0])
    cube([1, 1, 1.80]);
  translate([50, 160, 0])
    cube([1, 1, 1.76]);
  translate([51, 160, 0])
    cube([1, 1, 1.76]);
  translate([52, 160, 0])
    cube([1, 1, 1.80]);
  translate([53, 160, 0])
    cube([1, 1, 1.80]);
  translate([54, 160, 0])
    cube([1, 1, 1.80]);
  translate([55, 160, 0])
    cube([1, 1, 1.76]);
  translate([56, 160, 0])
    cube([1, 1, 2.20]);
  translate([57, 160, 0])
    cube([1, 1, 5.92]);
  translate([58, 160, 0])
    cube([1, 1, 6.08]);
  translate([59, 160, 0])
    cube([1, 1, 5.18]);
  translate([60, 160, 0])
    cube([1, 1, 3.18]);
  translate([61, 160, 0])
    cube([1, 1, 2.67]);
  translate([62, 160, 0])
    cube([1, 1, 3.45]);
  translate([63, 160, 0])
    cube([1, 1, 4.20]);
  translate([64, 160, 0])
    cube([1, 1, 4.71]);
  translate([65, 160, 0])
    cube([1, 1, 4.90]);
  translate([66, 160, 0])
    cube([1, 1, 5.02]);
  translate([67, 160, 0])
    cube([1, 1, 5.06]);
  translate([68, 160, 0])
    cube([1, 1, 4.98]);
  translate([69, 160, 0])
    cube([1, 1, 4.90]);
  translate([70, 160, 0])
    cube([1, 1, 4.98]);
  translate([71, 160, 0])
    cube([1, 1, 5.25]);
  translate([72, 160, 0])
    cube([1, 1, 5.41]);
  translate([73, 160, 0])
    cube([1, 1, 5.57]);
  translate([74, 160, 0])
    cube([1, 1, 5.53]);
  translate([75, 160, 0])
    cube([1, 1, 5.49]);
  translate([76, 160, 0])
    cube([1, 1, 5.25]);
  translate([77, 160, 0])
    cube([1, 1, 1.14]);
  translate([78, 160, 0])
    cube([1, 1, 1.69]);
  translate([79, 160, 0])
    cube([1, 1, 1.69]);
  translate([80, 160, 0])
    cube([1, 1, 1.69]);
  translate([81, 160, 0])
    cube([1, 1, 1.69]);
  translate([82, 160, 0])
    cube([1, 1, 1.69]);
  translate([83, 160, 0])
    cube([1, 1, 1.65]);
  translate([84, 160, 0])
    cube([1, 1, 1.69]);
  translate([85, 160, 0])
    cube([1, 1, 1.76]);
  translate([86, 160, 0])
    cube([1, 1, 7.18]);
  translate([87, 160, 0])
    cube([1, 1, 6.16]);
  translate([88, 160, 0])
    cube([1, 1, 4.98]);
  translate([89, 160, 0])
    cube([1, 1, 4.16]);
  translate([90, 160, 0])
    cube([1, 1, 3.92]);
  translate([91, 160, 0])
    cube([1, 1, 3.88]);
  translate([92, 160, 0])
    cube([1, 1, 3.57]);
  translate([93, 160, 0])
    cube([1, 1, 3.37]);
  translate([94, 160, 0])
    cube([1, 1, 3.10]);
  translate([95, 160, 0])
    cube([1, 1, 3.10]);
  translate([96, 160, 0])
    cube([1, 1, 2.90]);
  translate([97, 160, 0])
    cube([1, 1, 2.55]);
  translate([98, 160, 0])
    cube([1, 1, 2.59]);
  translate([99, 160, 0])
    cube([1, 1, 2.86]);
  translate([100, 160, 0])
    cube([1, 1, 2.98]);
  translate([101, 160, 0])
    cube([1, 1, 3.18]);
  translate([102, 160, 0])
    cube([1, 1, 3.29]);
  translate([103, 160, 0])
    cube([1, 1, 3.25]);
  translate([104, 160, 0])
    cube([1, 1, 3.33]);
  translate([105, 160, 0])
    cube([1, 1, 3.45]);
  translate([106, 160, 0])
    cube([1, 1, 3.61]);
  translate([107, 160, 0])
    cube([1, 1, 3.65]);
  translate([108, 160, 0])
    cube([1, 1, 3.76]);
  translate([109, 160, 0])
    cube([1, 1, 3.92]);
  translate([110, 160, 0])
    cube([1, 1, 3.88]);
  translate([111, 160, 0])
    cube([1, 1, 3.80]);
  translate([112, 160, 0])
    cube([1, 1, 3.84]);
  translate([113, 160, 0])
    cube([1, 1, 3.92]);
  translate([114, 160, 0])
    cube([1, 1, 4.08]);
  translate([115, 160, 0])
    cube([1, 1, 4.08]);
  translate([116, 160, 0])
    cube([1, 1, 3.92]);
  translate([117, 160, 0])
    cube([1, 1, 3.96]);
  translate([118, 160, 0])
    cube([1, 1, 4.00]);
  translate([119, 160, 0])
    cube([1, 1, 4.12]);
  translate([120, 160, 0])
    cube([1, 1, 4.35]);
  translate([121, 160, 0])
    cube([1, 1, 4.67]);
  translate([122, 160, 0])
    cube([1, 1, 5.22]);
  translate([123, 160, 0])
    cube([1, 1, 5.37]);
  translate([124, 160, 0])
    cube([1, 1, 5.84]);
  translate([125, 160, 0])
    cube([1, 1, 5.18]);
  translate([126, 160, 0])
    cube([1, 1, 4.78]);
  translate([127, 160, 0])
    cube([1, 1, 4.94]);
  translate([128, 160, 0])
    cube([1, 1, 4.98]);
  translate([129, 160, 0])
    cube([1, 1, 5.14]);
  translate([130, 160, 0])
    cube([1, 1, 5.61]);
  translate([131, 160, 0])
    cube([1, 1, 6.20]);
  translate([132, 160, 0])
    cube([1, 1, 6.75]);
  translate([133, 160, 0])
    cube([1, 1, 7.06]);
  translate([134, 160, 0])
    cube([1, 1, 6.67]);
  translate([135, 160, 0])
    cube([1, 1, 7.06]);
  translate([136, 160, 0])
    cube([1, 1, 6.43]);
  translate([137, 160, 0])
    cube([1, 1, 4.08]);
  translate([138, 160, 0])
    cube([1, 1, 3.18]);
  translate([139, 160, 0])
    cube([1, 1, 2.94]);
  translate([140, 160, 0])
    cube([1, 1, 3.10]);
  translate([141, 160, 0])
    cube([1, 1, 3.61]);
  translate([142, 160, 0])
    cube([1, 1, 4.00]);
  translate([143, 160, 0])
    cube([1, 1, 4.31]);
  translate([144, 160, 0])
    cube([1, 1, 4.75]);
  translate([145, 160, 0])
    cube([1, 1, 4.90]);
  translate([146, 160, 0])
    cube([1, 1, 5.22]);
  translate([147, 160, 0])
    cube([1, 1, 5.45]);
  translate([148, 160, 0])
    cube([1, 1, 5.76]);
  translate([149, 160, 0])
    cube([1, 1, 6.00]);
  translate([150, 160, 0])
    cube([1, 1, 6.04]);
  translate([151, 160, 0])
    cube([1, 1, 6.16]);
  translate([152, 160, 0])
    cube([1, 1, 6.20]);
  translate([153, 160, 0])
    cube([1, 1, 6.08]);
  translate([154, 160, 0])
    cube([1, 1, 6.04]);
  translate([155, 160, 0])
    cube([1, 1, 5.96]);
  translate([156, 160, 0])
    cube([1, 1, 5.84]);
  translate([157, 160, 0])
    cube([1, 1, 5.92]);
  translate([158, 160, 0])
    cube([1, 1, 5.84]);
  translate([159, 160, 0])
    cube([1, 1, 5.76]);
  translate([160, 160, 0])
    cube([1, 1, 5.65]);
  translate([161, 160, 0])
    cube([1, 1, 5.57]);
  translate([162, 160, 0])
    cube([1, 1, 5.84]);
  translate([163, 160, 0])
    cube([1, 1, 6.55]);
  translate([164, 160, 0])
    cube([1, 1, 1.96]);
  translate([165, 160, 0])
    cube([1, 1, 1.96]);
  translate([166, 160, 0])
    cube([1, 1, 1.65]);
  translate([167, 160, 0])
    cube([1, 1, 1.65]);
  translate([168, 160, 0])
    cube([1, 1, 1.69]);
  translate([169, 160, 0])
    cube([1, 1, 1.69]);
  translate([170, 160, 0])
    cube([1, 1, 1.69]);
  translate([171, 160, 0])
    cube([1, 1, 1.65]);
  translate([172, 160, 0])
    cube([1, 1, 1.69]);
  translate([173, 160, 0])
    cube([1, 1, 1.69]);
  translate([174, 160, 0])
    cube([1, 1, 1.69]);
  translate([175, 160, 0])
    cube([1, 1, 1.69]);
  translate([176, 160, 0])
    cube([1, 1, 1.65]);
  translate([177, 160, 0])
    cube([1, 1, 1.65]);
  translate([178, 160, 0])
    cube([1, 1, 1.73]);
  translate([179, 160, 0])
    cube([1, 1, 1.69]);
  translate([180, 160, 0])
    cube([1, 1, 1.73]);
  translate([181, 160, 0])
    cube([1, 1, 1.73]);
  translate([182, 160, 0])
    cube([1, 1, 1.73]);
  translate([183, 160, 0])
    cube([1, 1, 1.73]);
  translate([184, 160, 0])
    cube([1, 1, 1.73]);
  translate([185, 160, 0])
    cube([1, 1, 1.73]);
  translate([186, 160, 0])
    cube([1, 1, 1.73]);
  translate([187, 160, 0])
    cube([1, 1, 1.73]);
  translate([188, 160, 0])
    cube([1, 1, 1.73]);
  translate([189, 160, 0])
    cube([1, 1, 1.73]);
  translate([190, 160, 0])
    cube([1, 1, 1.76]);
  translate([191, 160, 0])
    cube([1, 1, 1.76]);
  translate([192, 160, 0])
    cube([1, 1, 1.73]);
  translate([193, 160, 0])
    cube([1, 1, 1.73]);
  translate([194, 160, 0])
    cube([1, 1, 1.76]);
  translate([195, 160, 0])
    cube([1, 1, 1.73]);
  translate([196, 160, 0])
    cube([1, 1, 1.76]);
  translate([197, 160, 0])
    cube([1, 1, 1.80]);
  translate([198, 160, 0])
    cube([1, 1, 1.76]);
  translate([199, 160, 0])
    cube([1, 1, 1.76]);
  translate([200, 160, 0])
    cube([1, 1, 1.76]);
  translate([201, 160, 0])
    cube([1, 1, 1.76]);
  translate([202, 160, 0])
    cube([1, 1, 1.76]);
  translate([203, 160, 0])
    cube([1, 1, 1.76]);
  translate([204, 160, 0])
    cube([1, 1, 1.73]);
  translate([205, 160, 0])
    cube([1, 1, 1.73]);
  translate([206, 160, 0])
    cube([1, 1, 1.73]);
  translate([207, 160, 0])
    cube([1, 1, 1.73]);
  translate([208, 160, 0])
    cube([1, 1, 1.76]);
  translate([209, 160, 0])
    cube([1, 1, 1.73]);
  translate([210, 160, 0])
    cube([1, 1, 1.73]);
  translate([211, 160, 0])
    cube([1, 1, 1.76]);
  translate([212, 160, 0])
    cube([1, 1, 1.73]);
  translate([213, 160, 0])
    cube([1, 1, 1.76]);
  translate([214, 160, 0])
    cube([1, 1, 1.73]);
  translate([215, 160, 0])
    cube([1, 1, 1.73]);
  translate([216, 160, 0])
    cube([1, 1, 1.76]);
  translate([217, 160, 0])
    cube([1, 1, 1.76]);
  translate([218, 160, 0])
    cube([1, 1, 1.76]);
  translate([219, 160, 0])
    cube([1, 1, 1.76]);
  translate([220, 160, 0])
    cube([1, 1, 1.76]);
  translate([221, 160, 0])
    cube([1, 1, 1.76]);
  translate([222, 160, 0])
    cube([1, 1, 1.69]);
  translate([223, 160, 0])
    cube([1, 1, 1.69]);
  translate([224, 160, 0])
    cube([1, 1, 1.73]);
  translate([225, 160, 0])
    cube([1, 1, 1.73]);
  translate([226, 160, 0])
    cube([1, 1, 1.73]);
  translate([227, 160, 0])
    cube([1, 1, 1.76]);
  translate([228, 160, 0])
    cube([1, 1, 1.73]);
  translate([229, 160, 0])
    cube([1, 1, 1.73]);
  translate([230, 160, 0])
    cube([1, 1, 1.73]);
  translate([231, 160, 0])
    cube([1, 1, 1.73]);
  translate([232, 160, 0])
    cube([1, 1, 1.73]);
  translate([233, 160, 0])
    cube([1, 1, 1.73]);
  translate([234, 160, 0])
    cube([1, 1, 1.73]);
  translate([235, 160, 0])
    cube([1, 1, 1.73]);
  translate([236, 160, 0])
    cube([1, 1, 1.73]);
  translate([237, 160, 0])
    cube([1, 1, 1.73]);
  translate([238, 160, 0])
    cube([1, 1, 1.73]);
  translate([239, 160, 0])
    cube([1, 1, 1.73]);
  translate([240, 160, 0])
    cube([1, 1, 1.73]);
  translate([241, 160, 0])
    cube([1, 1, 1.73]);
  translate([242, 160, 0])
    cube([1, 1, 1.73]);
  translate([243, 160, 0])
    cube([1, 1, 1.73]);
  translate([244, 160, 0])
    cube([1, 1, 1.73]);
  translate([245, 160, 0])
    cube([1, 1, 1.73]);
  translate([246, 160, 0])
    cube([1, 1, 1.73]);
  translate([0, 161, 0])
    cube([1, 1, 1.88]);
  translate([1, 161, 0])
    cube([1, 1, 1.80]);
  translate([2, 161, 0])
    cube([1, 1, 1.88]);
  translate([3, 161, 0])
    cube([1, 1, 1.88]);
  translate([4, 161, 0])
    cube([1, 1, 1.84]);
  translate([5, 161, 0])
    cube([1, 1, 1.88]);
  translate([6, 161, 0])
    cube([1, 1, 1.84]);
  translate([7, 161, 0])
    cube([1, 1, 1.88]);
  translate([8, 161, 0])
    cube([1, 1, 1.88]);
  translate([9, 161, 0])
    cube([1, 1, 1.84]);
  translate([10, 161, 0])
    cube([1, 1, 1.84]);
  translate([11, 161, 0])
    cube([1, 1, 1.88]);
  translate([12, 161, 0])
    cube([1, 1, 1.84]);
  translate([13, 161, 0])
    cube([1, 1, 1.84]);
  translate([14, 161, 0])
    cube([1, 1, 1.84]);
  translate([15, 161, 0])
    cube([1, 1, 1.84]);
  translate([16, 161, 0])
    cube([1, 1, 1.84]);
  translate([17, 161, 0])
    cube([1, 1, 1.84]);
  translate([18, 161, 0])
    cube([1, 1, 1.84]);
  translate([19, 161, 0])
    cube([1, 1, 1.84]);
  translate([20, 161, 0])
    cube([1, 1, 1.76]);
  translate([21, 161, 0])
    cube([1, 1, 1.76]);
  translate([22, 161, 0])
    cube([1, 1, 1.84]);
  translate([23, 161, 0])
    cube([1, 1, 1.84]);
  translate([24, 161, 0])
    cube([1, 1, 1.84]);
  translate([25, 161, 0])
    cube([1, 1, 1.84]);
  translate([26, 161, 0])
    cube([1, 1, 1.84]);
  translate([27, 161, 0])
    cube([1, 1, 1.84]);
  translate([28, 161, 0])
    cube([1, 1, 1.84]);
  translate([29, 161, 0])
    cube([1, 1, 1.80]);
  translate([30, 161, 0])
    cube([1, 1, 1.84]);
  translate([31, 161, 0])
    cube([1, 1, 1.84]);
  translate([32, 161, 0])
    cube([1, 1, 1.80]);
  translate([33, 161, 0])
    cube([1, 1, 1.80]);
  translate([34, 161, 0])
    cube([1, 1, 1.88]);
  translate([35, 161, 0])
    cube([1, 1, 1.84]);
  translate([36, 161, 0])
    cube([1, 1, 1.80]);
  translate([37, 161, 0])
    cube([1, 1, 1.80]);
  translate([38, 161, 0])
    cube([1, 1, 1.80]);
  translate([39, 161, 0])
    cube([1, 1, 1.80]);
  translate([40, 161, 0])
    cube([1, 1, 1.80]);
  translate([41, 161, 0])
    cube([1, 1, 1.80]);
  translate([42, 161, 0])
    cube([1, 1, 1.80]);
  translate([43, 161, 0])
    cube([1, 1, 1.80]);
  translate([44, 161, 0])
    cube([1, 1, 1.80]);
  translate([45, 161, 0])
    cube([1, 1, 1.80]);
  translate([46, 161, 0])
    cube([1, 1, 1.80]);
  translate([47, 161, 0])
    cube([1, 1, 1.80]);
  translate([48, 161, 0])
    cube([1, 1, 1.80]);
  translate([49, 161, 0])
    cube([1, 1, 1.80]);
  translate([50, 161, 0])
    cube([1, 1, 1.76]);
  translate([51, 161, 0])
    cube([1, 1, 1.76]);
  translate([52, 161, 0])
    cube([1, 1, 1.80]);
  translate([53, 161, 0])
    cube([1, 1, 1.80]);
  translate([54, 161, 0])
    cube([1, 1, 1.80]);
  translate([55, 161, 0])
    cube([1, 1, 1.76]);
  translate([56, 161, 0])
    cube([1, 1, 1.57]);
  translate([57, 161, 0])
    cube([1, 1, 1.61]);
  translate([58, 161, 0])
    cube([1, 1, 5.61]);
  translate([59, 161, 0])
    cube([1, 1, 5.96]);
  translate([60, 161, 0])
    cube([1, 1, 3.80]);
  translate([61, 161, 0])
    cube([1, 1, 2.55]);
  translate([62, 161, 0])
    cube([1, 1, 3.10]);
  translate([63, 161, 0])
    cube([1, 1, 3.80]);
  translate([64, 161, 0])
    cube([1, 1, 4.51]);
  translate([65, 161, 0])
    cube([1, 1, 4.90]);
  translate([66, 161, 0])
    cube([1, 1, 5.02]);
  translate([67, 161, 0])
    cube([1, 1, 5.06]);
  translate([68, 161, 0])
    cube([1, 1, 4.98]);
  translate([69, 161, 0])
    cube([1, 1, 4.90]);
  translate([70, 161, 0])
    cube([1, 1, 4.98]);
  translate([71, 161, 0])
    cube([1, 1, 5.25]);
  translate([72, 161, 0])
    cube([1, 1, 5.49]);
  translate([73, 161, 0])
    cube([1, 1, 5.57]);
  translate([74, 161, 0])
    cube([1, 1, 5.53]);
  translate([75, 161, 0])
    cube([1, 1, 5.45]);
  translate([76, 161, 0])
    cube([1, 1, 4.98]);
  translate([77, 161, 0])
    cube([1, 1, 1.69]);
  translate([78, 161, 0])
    cube([1, 1, 1.69]);
  translate([79, 161, 0])
    cube([1, 1, 1.69]);
  translate([80, 161, 0])
    cube([1, 1, 1.69]);
  translate([81, 161, 0])
    cube([1, 1, 1.69]);
  translate([82, 161, 0])
    cube([1, 1, 1.69]);
  translate([83, 161, 0])
    cube([1, 1, 1.73]);
  translate([84, 161, 0])
    cube([1, 1, 1.69]);
  translate([85, 161, 0])
    cube([1, 1, 1.76]);
  translate([86, 161, 0])
    cube([1, 1, 5.96]);
  translate([87, 161, 0])
    cube([1, 1, 6.39]);
  translate([88, 161, 0])
    cube([1, 1, 5.25]);
  translate([89, 161, 0])
    cube([1, 1, 4.55]);
  translate([90, 161, 0])
    cube([1, 1, 4.04]);
  translate([91, 161, 0])
    cube([1, 1, 3.80]);
  translate([92, 161, 0])
    cube([1, 1, 3.57]);
  translate([93, 161, 0])
    cube([1, 1, 3.37]);
  translate([94, 161, 0])
    cube([1, 1, 3.18]);
  translate([95, 161, 0])
    cube([1, 1, 3.14]);
  translate([96, 161, 0])
    cube([1, 1, 2.98]);
  translate([97, 161, 0])
    cube([1, 1, 2.71]);
  translate([98, 161, 0])
    cube([1, 1, 2.51]);
  translate([99, 161, 0])
    cube([1, 1, 2.71]);
  translate([100, 161, 0])
    cube([1, 1, 2.94]);
  translate([101, 161, 0])
    cube([1, 1, 3.14]);
  translate([102, 161, 0])
    cube([1, 1, 3.22]);
  translate([103, 161, 0])
    cube([1, 1, 3.29]);
  translate([104, 161, 0])
    cube([1, 1, 3.33]);
  translate([105, 161, 0])
    cube([1, 1, 3.37]);
  translate([106, 161, 0])
    cube([1, 1, 3.49]);
  translate([107, 161, 0])
    cube([1, 1, 3.57]);
  translate([108, 161, 0])
    cube([1, 1, 3.73]);
  translate([109, 161, 0])
    cube([1, 1, 3.76]);
  translate([110, 161, 0])
    cube([1, 1, 3.73]);
  translate([111, 161, 0])
    cube([1, 1, 3.76]);
  translate([112, 161, 0])
    cube([1, 1, 3.80]);
  translate([113, 161, 0])
    cube([1, 1, 3.84]);
  translate([114, 161, 0])
    cube([1, 1, 3.96]);
  translate([115, 161, 0])
    cube([1, 1, 3.96]);
  translate([116, 161, 0])
    cube([1, 1, 4.00]);
  translate([117, 161, 0])
    cube([1, 1, 3.96]);
  translate([118, 161, 0])
    cube([1, 1, 3.92]);
  translate([119, 161, 0])
    cube([1, 1, 4.16]);
  translate([120, 161, 0])
    cube([1, 1, 4.43]);
  translate([121, 161, 0])
    cube([1, 1, 4.59]);
  translate([122, 161, 0])
    cube([1, 1, 5.02]);
  translate([123, 161, 0])
    cube([1, 1, 5.53]);
  translate([124, 161, 0])
    cube([1, 1, 5.88]);
  translate([125, 161, 0])
    cube([1, 1, 5.18]);
  translate([126, 161, 0])
    cube([1, 1, 4.98]);
  translate([127, 161, 0])
    cube([1, 1, 5.02]);
  translate([128, 161, 0])
    cube([1, 1, 5.18]);
  translate([129, 161, 0])
    cube([1, 1, 5.37]);
  translate([130, 161, 0])
    cube([1, 1, 5.80]);
  translate([131, 161, 0])
    cube([1, 1, 6.35]);
  translate([132, 161, 0])
    cube([1, 1, 6.94]);
  translate([133, 161, 0])
    cube([1, 1, 7.14]);
  translate([134, 161, 0])
    cube([1, 1, 6.75]);
  translate([135, 161, 0])
    cube([1, 1, 7.45]);
  translate([136, 161, 0])
    cube([1, 1, 6.78]);
  translate([137, 161, 0])
    cube([1, 1, 5.69]);
  translate([138, 161, 0])
    cube([1, 1, 3.92]);
  translate([139, 161, 0])
    cube([1, 1, 3.14]);
  translate([140, 161, 0])
    cube([1, 1, 2.75]);
  translate([141, 161, 0])
    cube([1, 1, 3.14]);
  translate([142, 161, 0])
    cube([1, 1, 3.49]);
  translate([143, 161, 0])
    cube([1, 1, 3.88]);
  translate([144, 161, 0])
    cube([1, 1, 4.24]);
  translate([145, 161, 0])
    cube([1, 1, 4.59]);
  translate([146, 161, 0])
    cube([1, 1, 5.02]);
  translate([147, 161, 0])
    cube([1, 1, 5.25]);
  translate([148, 161, 0])
    cube([1, 1, 5.49]);
  translate([149, 161, 0])
    cube([1, 1, 5.84]);
  translate([150, 161, 0])
    cube([1, 1, 5.92]);
  translate([151, 161, 0])
    cube([1, 1, 6.08]);
  translate([152, 161, 0])
    cube([1, 1, 6.16]);
  translate([153, 161, 0])
    cube([1, 1, 6.04]);
  translate([154, 161, 0])
    cube([1, 1, 6.00]);
  translate([155, 161, 0])
    cube([1, 1, 5.96]);
  translate([156, 161, 0])
    cube([1, 1, 5.84]);
  translate([157, 161, 0])
    cube([1, 1, 5.80]);
  translate([158, 161, 0])
    cube([1, 1, 5.88]);
  translate([159, 161, 0])
    cube([1, 1, 5.73]);
  translate([160, 161, 0])
    cube([1, 1, 5.57]);
  translate([161, 161, 0])
    cube([1, 1, 5.57]);
  translate([162, 161, 0])
    cube([1, 1, 5.49]);
  translate([163, 161, 0])
    cube([1, 1, 5.84]);
  translate([164, 161, 0])
    cube([1, 1, 6.63]);
  translate([165, 161, 0])
    cube([1, 1, 1.45]);
  translate([166, 161, 0])
    cube([1, 1, 1.61]);
  translate([167, 161, 0])
    cube([1, 1, 1.61]);
  translate([168, 161, 0])
    cube([1, 1, 1.69]);
  translate([169, 161, 0])
    cube([1, 1, 1.69]);
  translate([170, 161, 0])
    cube([1, 1, 1.69]);
  translate([171, 161, 0])
    cube([1, 1, 1.65]);
  translate([172, 161, 0])
    cube([1, 1, 1.69]);
  translate([173, 161, 0])
    cube([1, 1, 1.69]);
  translate([174, 161, 0])
    cube([1, 1, 1.69]);
  translate([175, 161, 0])
    cube([1, 1, 1.69]);
  translate([176, 161, 0])
    cube([1, 1, 1.73]);
  translate([177, 161, 0])
    cube([1, 1, 1.65]);
  translate([178, 161, 0])
    cube([1, 1, 1.73]);
  translate([179, 161, 0])
    cube([1, 1, 1.69]);
  translate([180, 161, 0])
    cube([1, 1, 1.73]);
  translate([181, 161, 0])
    cube([1, 1, 1.73]);
  translate([182, 161, 0])
    cube([1, 1, 1.73]);
  translate([183, 161, 0])
    cube([1, 1, 1.73]);
  translate([184, 161, 0])
    cube([1, 1, 1.73]);
  translate([185, 161, 0])
    cube([1, 1, 1.73]);
  translate([186, 161, 0])
    cube([1, 1, 1.73]);
  translate([187, 161, 0])
    cube([1, 1, 1.73]);
  translate([188, 161, 0])
    cube([1, 1, 1.73]);
  translate([189, 161, 0])
    cube([1, 1, 1.73]);
  translate([190, 161, 0])
    cube([1, 1, 1.76]);
  translate([191, 161, 0])
    cube([1, 1, 1.76]);
  translate([192, 161, 0])
    cube([1, 1, 1.73]);
  translate([193, 161, 0])
    cube([1, 1, 1.73]);
  translate([194, 161, 0])
    cube([1, 1, 1.76]);
  translate([195, 161, 0])
    cube([1, 1, 1.76]);
  translate([196, 161, 0])
    cube([1, 1, 1.76]);
  translate([197, 161, 0])
    cube([1, 1, 1.80]);
  translate([198, 161, 0])
    cube([1, 1, 1.76]);
  translate([199, 161, 0])
    cube([1, 1, 1.76]);
  translate([200, 161, 0])
    cube([1, 1, 1.76]);
  translate([201, 161, 0])
    cube([1, 1, 1.76]);
  translate([202, 161, 0])
    cube([1, 1, 1.76]);
  translate([203, 161, 0])
    cube([1, 1, 1.76]);
  translate([204, 161, 0])
    cube([1, 1, 1.76]);
  translate([205, 161, 0])
    cube([1, 1, 1.76]);
  translate([206, 161, 0])
    cube([1, 1, 1.76]);
  translate([207, 161, 0])
    cube([1, 1, 1.76]);
  translate([208, 161, 0])
    cube([1, 1, 1.76]);
  translate([209, 161, 0])
    cube([1, 1, 1.76]);
  translate([210, 161, 0])
    cube([1, 1, 1.76]);
  translate([211, 161, 0])
    cube([1, 1, 1.76]);
  translate([212, 161, 0])
    cube([1, 1, 1.73]);
  translate([213, 161, 0])
    cube([1, 1, 1.76]);
  translate([214, 161, 0])
    cube([1, 1, 1.76]);
  translate([215, 161, 0])
    cube([1, 1, 1.76]);
  translate([216, 161, 0])
    cube([1, 1, 1.76]);
  translate([217, 161, 0])
    cube([1, 1, 1.76]);
  translate([218, 161, 0])
    cube([1, 1, 1.76]);
  translate([219, 161, 0])
    cube([1, 1, 1.76]);
  translate([220, 161, 0])
    cube([1, 1, 1.76]);
  translate([221, 161, 0])
    cube([1, 1, 1.76]);
  translate([222, 161, 0])
    cube([1, 1, 1.69]);
  translate([223, 161, 0])
    cube([1, 1, 1.69]);
  translate([224, 161, 0])
    cube([1, 1, 1.76]);
  translate([225, 161, 0])
    cube([1, 1, 1.73]);
  translate([226, 161, 0])
    cube([1, 1, 1.73]);
  translate([227, 161, 0])
    cube([1, 1, 1.76]);
  translate([228, 161, 0])
    cube([1, 1, 1.73]);
  translate([229, 161, 0])
    cube([1, 1, 1.73]);
  translate([230, 161, 0])
    cube([1, 1, 1.76]);
  translate([231, 161, 0])
    cube([1, 1, 1.76]);
  translate([232, 161, 0])
    cube([1, 1, 1.76]);
  translate([233, 161, 0])
    cube([1, 1, 1.76]);
  translate([234, 161, 0])
    cube([1, 1, 1.76]);
  translate([235, 161, 0])
    cube([1, 1, 1.73]);
  translate([236, 161, 0])
    cube([1, 1, 1.73]);
  translate([237, 161, 0])
    cube([1, 1, 1.73]);
  translate([238, 161, 0])
    cube([1, 1, 1.73]);
  translate([239, 161, 0])
    cube([1, 1, 1.73]);
  translate([240, 161, 0])
    cube([1, 1, 1.73]);
  translate([241, 161, 0])
    cube([1, 1, 1.73]);
  translate([242, 161, 0])
    cube([1, 1, 1.73]);
  translate([243, 161, 0])
    cube([1, 1, 1.73]);
  translate([244, 161, 0])
    cube([1, 1, 1.73]);
  translate([245, 161, 0])
    cube([1, 1, 1.73]);
  translate([246, 161, 0])
    cube([1, 1, 1.73]);
  translate([0, 162, 0])
    cube([1, 1, 1.88]);
  translate([1, 162, 0])
    cube([1, 1, 1.88]);
  translate([2, 162, 0])
    cube([1, 1, 1.88]);
  translate([3, 162, 0])
    cube([1, 1, 1.88]);
  translate([4, 162, 0])
    cube([1, 1, 1.88]);
  translate([5, 162, 0])
    cube([1, 1, 1.88]);
  translate([6, 162, 0])
    cube([1, 1, 1.88]);
  translate([7, 162, 0])
    cube([1, 1, 1.88]);
  translate([8, 162, 0])
    cube([1, 1, 1.88]);
  translate([9, 162, 0])
    cube([1, 1, 1.88]);
  translate([10, 162, 0])
    cube([1, 1, 1.88]);
  translate([11, 162, 0])
    cube([1, 1, 1.88]);
  translate([12, 162, 0])
    cube([1, 1, 1.88]);
  translate([13, 162, 0])
    cube([1, 1, 1.88]);
  translate([14, 162, 0])
    cube([1, 1, 1.88]);
  translate([15, 162, 0])
    cube([1, 1, 1.84]);
  translate([16, 162, 0])
    cube([1, 1, 1.88]);
  translate([17, 162, 0])
    cube([1, 1, 1.88]);
  translate([18, 162, 0])
    cube([1, 1, 1.88]);
  translate([19, 162, 0])
    cube([1, 1, 1.88]);
  translate([20, 162, 0])
    cube([1, 1, 1.84]);
  translate([21, 162, 0])
    cube([1, 1, 1.84]);
  translate([22, 162, 0])
    cube([1, 1, 1.76]);
  translate([23, 162, 0])
    cube([1, 1, 1.76]);
  translate([24, 162, 0])
    cube([1, 1, 1.84]);
  translate([25, 162, 0])
    cube([1, 1, 1.84]);
  translate([26, 162, 0])
    cube([1, 1, 1.84]);
  translate([27, 162, 0])
    cube([1, 1, 1.84]);
  translate([28, 162, 0])
    cube([1, 1, 1.84]);
  translate([29, 162, 0])
    cube([1, 1, 1.84]);
  translate([30, 162, 0])
    cube([1, 1, 1.84]);
  translate([31, 162, 0])
    cube([1, 1, 1.84]);
  translate([32, 162, 0])
    cube([1, 1, 1.84]);
  translate([33, 162, 0])
    cube([1, 1, 1.84]);
  translate([34, 162, 0])
    cube([1, 1, 1.84]);
  translate([35, 162, 0])
    cube([1, 1, 1.84]);
  translate([36, 162, 0])
    cube([1, 1, 1.76]);
  translate([37, 162, 0])
    cube([1, 1, 1.76]);
  translate([38, 162, 0])
    cube([1, 1, 1.80]);
  translate([39, 162, 0])
    cube([1, 1, 1.80]);
  translate([40, 162, 0])
    cube([1, 1, 1.80]);
  translate([41, 162, 0])
    cube([1, 1, 1.80]);
  translate([42, 162, 0])
    cube([1, 1, 1.80]);
  translate([43, 162, 0])
    cube([1, 1, 1.80]);
  translate([44, 162, 0])
    cube([1, 1, 1.80]);
  translate([45, 162, 0])
    cube([1, 1, 1.80]);
  translate([46, 162, 0])
    cube([1, 1, 1.80]);
  translate([47, 162, 0])
    cube([1, 1, 1.80]);
  translate([48, 162, 0])
    cube([1, 1, 1.80]);
  translate([49, 162, 0])
    cube([1, 1, 1.76]);
  translate([50, 162, 0])
    cube([1, 1, 1.80]);
  translate([51, 162, 0])
    cube([1, 1, 1.80]);
  translate([52, 162, 0])
    cube([1, 1, 1.80]);
  translate([53, 162, 0])
    cube([1, 1, 1.80]);
  translate([54, 162, 0])
    cube([1, 1, 1.80]);
  translate([55, 162, 0])
    cube([1, 1, 1.80]);
  translate([56, 162, 0])
    cube([1, 1, 1.80]);
  translate([57, 162, 0])
    cube([1, 1, 1.45]);
  translate([58, 162, 0])
    cube([1, 1, 2.71]);
  translate([59, 162, 0])
    cube([1, 1, 6.04]);
  translate([60, 162, 0])
    cube([1, 1, 4.59]);
  translate([61, 162, 0])
    cube([1, 1, 2.67]);
  translate([62, 162, 0])
    cube([1, 1, 2.78]);
  translate([63, 162, 0])
    cube([1, 1, 3.45]);
  translate([64, 162, 0])
    cube([1, 1, 4.27]);
  translate([65, 162, 0])
    cube([1, 1, 4.75]);
  translate([66, 162, 0])
    cube([1, 1, 4.98]);
  translate([67, 162, 0])
    cube([1, 1, 5.06]);
  translate([68, 162, 0])
    cube([1, 1, 4.98]);
  translate([69, 162, 0])
    cube([1, 1, 4.94]);
  translate([70, 162, 0])
    cube([1, 1, 5.02]);
  translate([71, 162, 0])
    cube([1, 1, 5.18]);
  translate([72, 162, 0])
    cube([1, 1, 5.49]);
  translate([73, 162, 0])
    cube([1, 1, 5.53]);
  translate([74, 162, 0])
    cube([1, 1, 5.53]);
  translate([75, 162, 0])
    cube([1, 1, 5.41]);
  translate([76, 162, 0])
    cube([1, 1, 4.39]);
  translate([77, 162, 0])
    cube([1, 1, 1.73]);
  translate([78, 162, 0])
    cube([1, 1, 1.73]);
  translate([79, 162, 0])
    cube([1, 1, 1.69]);
  translate([80, 162, 0])
    cube([1, 1, 1.73]);
  translate([81, 162, 0])
    cube([1, 1, 1.73]);
  translate([82, 162, 0])
    cube([1, 1, 1.73]);
  translate([83, 162, 0])
    cube([1, 1, 1.65]);
  translate([84, 162, 0])
    cube([1, 1, 1.73]);
  translate([85, 162, 0])
    cube([1, 1, 1.73]);
  translate([86, 162, 0])
    cube([1, 1, 4.90]);
  translate([87, 162, 0])
    cube([1, 1, 6.98]);
  translate([88, 162, 0])
    cube([1, 1, 5.69]);
  translate([89, 162, 0])
    cube([1, 1, 4.82]);
  translate([90, 162, 0])
    cube([1, 1, 4.27]);
  translate([91, 162, 0])
    cube([1, 1, 3.92]);
  translate([92, 162, 0])
    cube([1, 1, 3.65]);
  translate([93, 162, 0])
    cube([1, 1, 3.37]);
  translate([94, 162, 0])
    cube([1, 1, 3.14]);
  translate([95, 162, 0])
    cube([1, 1, 3.18]);
  translate([96, 162, 0])
    cube([1, 1, 3.02]);
  translate([97, 162, 0])
    cube([1, 1, 2.86]);
  translate([98, 162, 0])
    cube([1, 1, 2.47]);
  translate([99, 162, 0])
    cube([1, 1, 2.67]);
  translate([100, 162, 0])
    cube([1, 1, 2.86]);
  translate([101, 162, 0])
    cube([1, 1, 3.10]);
  translate([102, 162, 0])
    cube([1, 1, 3.22]);
  translate([103, 162, 0])
    cube([1, 1, 3.33]);
  translate([104, 162, 0])
    cube([1, 1, 3.29]);
  translate([105, 162, 0])
    cube([1, 1, 3.25]);
  translate([106, 162, 0])
    cube([1, 1, 3.37]);
  translate([107, 162, 0])
    cube([1, 1, 3.45]);
  translate([108, 162, 0])
    cube([1, 1, 3.53]);
  translate([109, 162, 0])
    cube([1, 1, 3.65]);
  translate([110, 162, 0])
    cube([1, 1, 3.61]);
  translate([111, 162, 0])
    cube([1, 1, 3.65]);
  translate([112, 162, 0])
    cube([1, 1, 3.69]);
  translate([113, 162, 0])
    cube([1, 1, 3.80]);
  translate([114, 162, 0])
    cube([1, 1, 3.88]);
  translate([115, 162, 0])
    cube([1, 1, 3.80]);
  translate([116, 162, 0])
    cube([1, 1, 3.92]);
  translate([117, 162, 0])
    cube([1, 1, 3.96]);
  translate([118, 162, 0])
    cube([1, 1, 3.76]);
  translate([119, 162, 0])
    cube([1, 1, 4.16]);
  translate([120, 162, 0])
    cube([1, 1, 4.47]);
  translate([121, 162, 0])
    cube([1, 1, 4.67]);
  translate([122, 162, 0])
    cube([1, 1, 5.10]);
  translate([123, 162, 0])
    cube([1, 1, 5.65]);
  translate([124, 162, 0])
    cube([1, 1, 6.16]);
  translate([125, 162, 0])
    cube([1, 1, 5.25]);
  translate([126, 162, 0])
    cube([1, 1, 5.10]);
  translate([127, 162, 0])
    cube([1, 1, 5.22]);
  translate([128, 162, 0])
    cube([1, 1, 5.22]);
  translate([129, 162, 0])
    cube([1, 1, 5.33]);
  translate([130, 162, 0])
    cube([1, 1, 5.73]);
  translate([131, 162, 0])
    cube([1, 1, 6.20]);
  translate([132, 162, 0])
    cube([1, 1, 6.94]);
  translate([133, 162, 0])
    cube([1, 1, 7.06]);
  translate([134, 162, 0])
    cube([1, 1, 6.94]);
  translate([135, 162, 0])
    cube([1, 1, 7.57]);
  translate([136, 162, 0])
    cube([1, 1, 7.10]);
  translate([137, 162, 0])
    cube([1, 1, 6.86]);
  translate([138, 162, 0])
    cube([1, 1, 2.55]);
  translate([139, 162, 0])
    cube([1, 1, 4.31]);
  translate([140, 162, 0])
    cube([1, 1, 3.10]);
  translate([141, 162, 0])
    cube([1, 1, 2.71]);
  translate([142, 162, 0])
    cube([1, 1, 2.90]);
  translate([143, 162, 0])
    cube([1, 1, 3.37]);
  translate([144, 162, 0])
    cube([1, 1, 3.88]);
  translate([145, 162, 0])
    cube([1, 1, 4.27]);
  translate([146, 162, 0])
    cube([1, 1, 4.71]);
  translate([147, 162, 0])
    cube([1, 1, 4.90]);
  translate([148, 162, 0])
    cube([1, 1, 5.33]);
  translate([149, 162, 0])
    cube([1, 1, 5.57]);
  translate([150, 162, 0])
    cube([1, 1, 5.69]);
  translate([151, 162, 0])
    cube([1, 1, 5.84]);
  translate([152, 162, 0])
    cube([1, 1, 6.04]);
  translate([153, 162, 0])
    cube([1, 1, 6.08]);
  translate([154, 162, 0])
    cube([1, 1, 6.04]);
  translate([155, 162, 0])
    cube([1, 1, 5.92]);
  translate([156, 162, 0])
    cube([1, 1, 5.80]);
  translate([157, 162, 0])
    cube([1, 1, 5.80]);
  translate([158, 162, 0])
    cube([1, 1, 5.73]);
  translate([159, 162, 0])
    cube([1, 1, 5.73]);
  translate([160, 162, 0])
    cube([1, 1, 5.65]);
  translate([161, 162, 0])
    cube([1, 1, 5.53]);
  translate([162, 162, 0])
    cube([1, 1, 5.49]);
  translate([163, 162, 0])
    cube([1, 1, 5.41]);
  translate([164, 162, 0])
    cube([1, 1, 5.84]);
  translate([165, 162, 0])
    cube([1, 1, 7.41]);
  translate([166, 162, 0])
    cube([1, 1, 2.35]);
  translate([167, 162, 0])
    cube([1, 1, 1.49]);
  translate([168, 162, 0])
    cube([1, 1, 1.69]);
  translate([169, 162, 0])
    cube([1, 1, 1.69]);
  translate([170, 162, 0])
    cube([1, 1, 1.69]);
  translate([171, 162, 0])
    cube([1, 1, 1.69]);
  translate([172, 162, 0])
    cube([1, 1, 1.69]);
  translate([173, 162, 0])
    cube([1, 1, 1.73]);
  translate([174, 162, 0])
    cube([1, 1, 1.73]);
  translate([175, 162, 0])
    cube([1, 1, 1.69]);
  translate([176, 162, 0])
    cube([1, 1, 1.73]);
  translate([177, 162, 0])
    cube([1, 1, 1.73]);
  translate([178, 162, 0])
    cube([1, 1, 1.73]);
  translate([179, 162, 0])
    cube([1, 1, 1.73]);
  translate([180, 162, 0])
    cube([1, 1, 1.73]);
  translate([181, 162, 0])
    cube([1, 1, 1.73]);
  translate([182, 162, 0])
    cube([1, 1, 1.73]);
  translate([183, 162, 0])
    cube([1, 1, 1.73]);
  translate([184, 162, 0])
    cube([1, 1, 1.73]);
  translate([185, 162, 0])
    cube([1, 1, 1.73]);
  translate([186, 162, 0])
    cube([1, 1, 1.73]);
  translate([187, 162, 0])
    cube([1, 1, 1.73]);
  translate([188, 162, 0])
    cube([1, 1, 1.76]);
  translate([189, 162, 0])
    cube([1, 1, 1.73]);
  translate([190, 162, 0])
    cube([1, 1, 1.76]);
  translate([191, 162, 0])
    cube([1, 1, 1.76]);
  translate([192, 162, 0])
    cube([1, 1, 1.73]);
  translate([193, 162, 0])
    cube([1, 1, 1.76]);
  translate([194, 162, 0])
    cube([1, 1, 1.76]);
  translate([195, 162, 0])
    cube([1, 1, 1.76]);
  translate([196, 162, 0])
    cube([1, 1, 1.76]);
  translate([197, 162, 0])
    cube([1, 1, 1.76]);
  translate([198, 162, 0])
    cube([1, 1, 1.69]);
  translate([199, 162, 0])
    cube([1, 1, 1.73]);
  translate([200, 162, 0])
    cube([1, 1, 1.76]);
  translate([201, 162, 0])
    cube([1, 1, 1.76]);
  translate([202, 162, 0])
    cube([1, 1, 1.76]);
  translate([203, 162, 0])
    cube([1, 1, 1.76]);
  translate([204, 162, 0])
    cube([1, 1, 1.76]);
  translate([205, 162, 0])
    cube([1, 1, 1.76]);
  translate([206, 162, 0])
    cube([1, 1, 1.76]);
  translate([207, 162, 0])
    cube([1, 1, 1.76]);
  translate([208, 162, 0])
    cube([1, 1, 1.76]);
  translate([209, 162, 0])
    cube([1, 1, 1.76]);
  translate([210, 162, 0])
    cube([1, 1, 1.76]);
  translate([211, 162, 0])
    cube([1, 1, 1.76]);
  translate([212, 162, 0])
    cube([1, 1, 1.76]);
  translate([213, 162, 0])
    cube([1, 1, 1.76]);
  translate([214, 162, 0])
    cube([1, 1, 1.76]);
  translate([215, 162, 0])
    cube([1, 1, 1.76]);
  translate([216, 162, 0])
    cube([1, 1, 1.76]);
  translate([217, 162, 0])
    cube([1, 1, 1.76]);
  translate([218, 162, 0])
    cube([1, 1, 1.76]);
  translate([219, 162, 0])
    cube([1, 1, 1.76]);
  translate([220, 162, 0])
    cube([1, 1, 1.73]);
  translate([221, 162, 0])
    cube([1, 1, 1.73]);
  translate([222, 162, 0])
    cube([1, 1, 1.76]);
  translate([223, 162, 0])
    cube([1, 1, 1.76]);
  translate([224, 162, 0])
    cube([1, 1, 1.76]);
  translate([225, 162, 0])
    cube([1, 1, 1.76]);
  translate([226, 162, 0])
    cube([1, 1, 1.76]);
  translate([227, 162, 0])
    cube([1, 1, 1.76]);
  translate([228, 162, 0])
    cube([1, 1, 1.73]);
  translate([229, 162, 0])
    cube([1, 1, 1.73]);
  translate([230, 162, 0])
    cube([1, 1, 1.76]);
  translate([231, 162, 0])
    cube([1, 1, 1.76]);
  translate([232, 162, 0])
    cube([1, 1, 1.76]);
  translate([233, 162, 0])
    cube([1, 1, 1.76]);
  translate([234, 162, 0])
    cube([1, 1, 1.76]);
  translate([235, 162, 0])
    cube([1, 1, 1.76]);
  translate([236, 162, 0])
    cube([1, 1, 1.73]);
  translate([237, 162, 0])
    cube([1, 1, 1.80]);
  translate([238, 162, 0])
    cube([1, 1, 1.76]);
  translate([239, 162, 0])
    cube([1, 1, 1.73]);
  translate([240, 162, 0])
    cube([1, 1, 1.73]);
  translate([241, 162, 0])
    cube([1, 1, 1.69]);
  translate([242, 162, 0])
    cube([1, 1, 1.69]);
  translate([243, 162, 0])
    cube([1, 1, 1.73]);
  translate([244, 162, 0])
    cube([1, 1, 1.73]);
  translate([245, 162, 0])
    cube([1, 1, 1.73]);
  translate([246, 162, 0])
    cube([1, 1, 1.73]);
  translate([0, 163, 0])
    cube([1, 1, 1.88]);
  translate([1, 163, 0])
    cube([1, 1, 1.88]);
  translate([2, 163, 0])
    cube([1, 1, 1.88]);
  translate([3, 163, 0])
    cube([1, 1, 1.88]);
  translate([4, 163, 0])
    cube([1, 1, 1.88]);
  translate([5, 163, 0])
    cube([1, 1, 1.88]);
  translate([6, 163, 0])
    cube([1, 1, 1.88]);
  translate([7, 163, 0])
    cube([1, 1, 1.88]);
  translate([8, 163, 0])
    cube([1, 1, 1.88]);
  translate([9, 163, 0])
    cube([1, 1, 1.88]);
  translate([10, 163, 0])
    cube([1, 1, 1.88]);
  translate([11, 163, 0])
    cube([1, 1, 1.88]);
  translate([12, 163, 0])
    cube([1, 1, 1.88]);
  translate([13, 163, 0])
    cube([1, 1, 1.88]);
  translate([14, 163, 0])
    cube([1, 1, 1.88]);
  translate([15, 163, 0])
    cube([1, 1, 1.84]);
  translate([16, 163, 0])
    cube([1, 1, 1.88]);
  translate([17, 163, 0])
    cube([1, 1, 1.84]);
  translate([18, 163, 0])
    cube([1, 1, 1.84]);
  translate([19, 163, 0])
    cube([1, 1, 1.88]);
  translate([20, 163, 0])
    cube([1, 1, 1.84]);
  translate([21, 163, 0])
    cube([1, 1, 1.84]);
  translate([22, 163, 0])
    cube([1, 1, 1.76]);
  translate([23, 163, 0])
    cube([1, 1, 1.76]);
  translate([24, 163, 0])
    cube([1, 1, 1.84]);
  translate([25, 163, 0])
    cube([1, 1, 1.84]);
  translate([26, 163, 0])
    cube([1, 1, 1.84]);
  translate([27, 163, 0])
    cube([1, 1, 1.84]);
  translate([28, 163, 0])
    cube([1, 1, 1.84]);
  translate([29, 163, 0])
    cube([1, 1, 1.84]);
  translate([30, 163, 0])
    cube([1, 1, 1.84]);
  translate([31, 163, 0])
    cube([1, 1, 1.84]);
  translate([32, 163, 0])
    cube([1, 1, 1.84]);
  translate([33, 163, 0])
    cube([1, 1, 1.84]);
  translate([34, 163, 0])
    cube([1, 1, 1.84]);
  translate([35, 163, 0])
    cube([1, 1, 1.76]);
  translate([36, 163, 0])
    cube([1, 1, 1.84]);
  translate([37, 163, 0])
    cube([1, 1, 1.76]);
  translate([38, 163, 0])
    cube([1, 1, 1.80]);
  translate([39, 163, 0])
    cube([1, 1, 1.80]);
  translate([40, 163, 0])
    cube([1, 1, 1.88]);
  translate([41, 163, 0])
    cube([1, 1, 1.80]);
  translate([42, 163, 0])
    cube([1, 1, 1.80]);
  translate([43, 163, 0])
    cube([1, 1, 1.80]);
  translate([44, 163, 0])
    cube([1, 1, 1.80]);
  translate([45, 163, 0])
    cube([1, 1, 1.80]);
  translate([46, 163, 0])
    cube([1, 1, 1.80]);
  translate([47, 163, 0])
    cube([1, 1, 1.80]);
  translate([48, 163, 0])
    cube([1, 1, 1.80]);
  translate([49, 163, 0])
    cube([1, 1, 1.76]);
  translate([50, 163, 0])
    cube([1, 1, 1.80]);
  translate([51, 163, 0])
    cube([1, 1, 1.80]);
  translate([52, 163, 0])
    cube([1, 1, 1.80]);
  translate([53, 163, 0])
    cube([1, 1, 1.80]);
  translate([54, 163, 0])
    cube([1, 1, 1.80]);
  translate([55, 163, 0])
    cube([1, 1, 1.80]);
  translate([56, 163, 0])
    cube([1, 1, 1.80]);
  translate([57, 163, 0])
    cube([1, 1, 1.96]);
  translate([58, 163, 0])
    cube([1, 1, 1.76]);
  translate([59, 163, 0])
    cube([1, 1, 2.82]);
  translate([60, 163, 0])
    cube([1, 1, 6.04]);
  translate([61, 163, 0])
    cube([1, 1, 3.10]);
  translate([62, 163, 0])
    cube([1, 1, 2.39]);
  translate([63, 163, 0])
    cube([1, 1, 3.18]);
  translate([64, 163, 0])
    cube([1, 1, 3.84]);
  translate([65, 163, 0])
    cube([1, 1, 4.59]);
  translate([66, 163, 0])
    cube([1, 1, 4.94]);
  translate([67, 163, 0])
    cube([1, 1, 5.06]);
  translate([68, 163, 0])
    cube([1, 1, 5.02]);
  translate([69, 163, 0])
    cube([1, 1, 4.98]);
  translate([70, 163, 0])
    cube([1, 1, 5.06]);
  translate([71, 163, 0])
    cube([1, 1, 5.10]);
  translate([72, 163, 0])
    cube([1, 1, 5.49]);
  translate([73, 163, 0])
    cube([1, 1, 5.57]);
  translate([74, 163, 0])
    cube([1, 1, 5.49]);
  translate([75, 163, 0])
    cube([1, 1, 5.06]);
  translate([76, 163, 0])
    cube([1, 1, 1.41]);
  translate([77, 163, 0])
    cube([1, 1, 1.65]);
  translate([78, 163, 0])
    cube([1, 1, 1.73]);
  translate([79, 163, 0])
    cube([1, 1, 1.69]);
  translate([80, 163, 0])
    cube([1, 1, 1.73]);
  translate([81, 163, 0])
    cube([1, 1, 1.65]);
  translate([82, 163, 0])
    cube([1, 1, 1.80]);
  translate([83, 163, 0])
    cube([1, 1, 1.73]);
  translate([84, 163, 0])
    cube([1, 1, 1.73]);
  translate([85, 163, 0])
    cube([1, 1, 1.73]);
  translate([86, 163, 0])
    cube([1, 1, 5.29]);
  translate([87, 163, 0])
    cube([1, 1, 7.41]);
  translate([88, 163, 0])
    cube([1, 1, 6.00]);
  translate([89, 163, 0])
    cube([1, 1, 5.14]);
  translate([90, 163, 0])
    cube([1, 1, 4.35]);
  translate([91, 163, 0])
    cube([1, 1, 3.84]);
  translate([92, 163, 0])
    cube([1, 1, 3.65]);
  translate([93, 163, 0])
    cube([1, 1, 3.37]);
  translate([94, 163, 0])
    cube([1, 1, 3.10]);
  translate([95, 163, 0])
    cube([1, 1, 3.14]);
  translate([96, 163, 0])
    cube([1, 1, 3.18]);
  translate([97, 163, 0])
    cube([1, 1, 2.98]);
  translate([98, 163, 0])
    cube([1, 1, 2.43]);
  translate([99, 163, 0])
    cube([1, 1, 2.47]);
  translate([100, 163, 0])
    cube([1, 1, 2.75]);
  translate([101, 163, 0])
    cube([1, 1, 3.02]);
  translate([102, 163, 0])
    cube([1, 1, 3.10]);
  translate([103, 163, 0])
    cube([1, 1, 3.22]);
  translate([104, 163, 0])
    cube([1, 1, 3.25]);
  translate([105, 163, 0])
    cube([1, 1, 3.22]);
  translate([106, 163, 0])
    cube([1, 1, 3.33]);
  translate([107, 163, 0])
    cube([1, 1, 3.37]);
  translate([108, 163, 0])
    cube([1, 1, 3.53]);
  translate([109, 163, 0])
    cube([1, 1, 3.57]);
  translate([110, 163, 0])
    cube([1, 1, 3.65]);
  translate([111, 163, 0])
    cube([1, 1, 3.69]);
  translate([112, 163, 0])
    cube([1, 1, 3.73]);
  translate([113, 163, 0])
    cube([1, 1, 3.80]);
  translate([114, 163, 0])
    cube([1, 1, 3.80]);
  translate([115, 163, 0])
    cube([1, 1, 3.84]);
  translate([116, 163, 0])
    cube([1, 1, 4.00]);
  translate([117, 163, 0])
    cube([1, 1, 3.84]);
  translate([118, 163, 0])
    cube([1, 1, 3.96]);
  translate([119, 163, 0])
    cube([1, 1, 4.24]);
  translate([120, 163, 0])
    cube([1, 1, 4.59]);
  translate([121, 163, 0])
    cube([1, 1, 4.78]);
  translate([122, 163, 0])
    cube([1, 1, 5.37]);
  translate([123, 163, 0])
    cube([1, 1, 5.92]);
  translate([124, 163, 0])
    cube([1, 1, 6.39]);
  translate([125, 163, 0])
    cube([1, 1, 5.06]);
  translate([126, 163, 0])
    cube([1, 1, 5.22]);
  translate([127, 163, 0])
    cube([1, 1, 5.18]);
  translate([128, 163, 0])
    cube([1, 1, 5.37]);
  translate([129, 163, 0])
    cube([1, 1, 5.33]);
  translate([130, 163, 0])
    cube([1, 1, 5.73]);
  translate([131, 163, 0])
    cube([1, 1, 6.08]);
  translate([132, 163, 0])
    cube([1, 1, 6.98]);
  translate([133, 163, 0])
    cube([1, 1, 6.98]);
  translate([134, 163, 0])
    cube([1, 1, 7.02]);
  translate([135, 163, 0])
    cube([1, 1, 7.29]);
  translate([136, 163, 0])
    cube([1, 1, 7.10]);
  translate([137, 163, 0])
    cube([1, 1, 7.14]);
  translate([138, 163, 0])
    cube([1, 1, 7.14]);
  translate([139, 163, 0])
    cube([1, 1, 0.98]);
  translate([140, 163, 0])
    cube([1, 1, 4.08]);
  translate([141, 163, 0])
    cube([1, 1, 3.25]);
  translate([142, 163, 0])
    cube([1, 1, 2.63]);
  translate([143, 163, 0])
    cube([1, 1, 2.86]);
  translate([144, 163, 0])
    cube([1, 1, 3.41]);
  translate([145, 163, 0])
    cube([1, 1, 3.84]);
  translate([146, 163, 0])
    cube([1, 1, 4.31]);
  translate([147, 163, 0])
    cube([1, 1, 4.59]);
  translate([148, 163, 0])
    cube([1, 1, 4.94]);
  translate([149, 163, 0])
    cube([1, 1, 5.29]);
  translate([150, 163, 0])
    cube([1, 1, 5.45]);
  translate([151, 163, 0])
    cube([1, 1, 5.73]);
  translate([152, 163, 0])
    cube([1, 1, 5.88]);
  translate([153, 163, 0])
    cube([1, 1, 5.88]);
  translate([154, 163, 0])
    cube([1, 1, 5.96]);
  translate([155, 163, 0])
    cube([1, 1, 5.92]);
  translate([156, 163, 0])
    cube([1, 1, 5.84]);
  translate([157, 163, 0])
    cube([1, 1, 5.73]);
  translate([158, 163, 0])
    cube([1, 1, 5.61]);
  translate([159, 163, 0])
    cube([1, 1, 5.61]);
  translate([160, 163, 0])
    cube([1, 1, 5.61]);
  translate([161, 163, 0])
    cube([1, 1, 5.49]);
  translate([162, 163, 0])
    cube([1, 1, 5.45]);
  translate([163, 163, 0])
    cube([1, 1, 5.29]);
  translate([164, 163, 0])
    cube([1, 1, 5.25]);
  translate([165, 163, 0])
    cube([1, 1, 5.69]);
  translate([166, 163, 0])
    cube([1, 1, 3.88]);
  translate([167, 163, 0])
    cube([1, 1, 1.25]);
  translate([168, 163, 0])
    cube([1, 1, 1.69]);
  translate([169, 163, 0])
    cube([1, 1, 1.69]);
  translate([170, 163, 0])
    cube([1, 1, 1.69]);
  translate([171, 163, 0])
    cube([1, 1, 1.69]);
  translate([172, 163, 0])
    cube([1, 1, 1.69]);
  translate([173, 163, 0])
    cube([1, 1, 1.73]);
  translate([174, 163, 0])
    cube([1, 1, 1.76]);
  translate([175, 163, 0])
    cube([1, 1, 1.73]);
  translate([176, 163, 0])
    cube([1, 1, 1.73]);
  translate([177, 163, 0])
    cube([1, 1, 1.73]);
  translate([178, 163, 0])
    cube([1, 1, 1.73]);
  translate([179, 163, 0])
    cube([1, 1, 1.73]);
  translate([180, 163, 0])
    cube([1, 1, 1.73]);
  translate([181, 163, 0])
    cube([1, 1, 1.73]);
  translate([182, 163, 0])
    cube([1, 1, 1.73]);
  translate([183, 163, 0])
    cube([1, 1, 1.73]);
  translate([184, 163, 0])
    cube([1, 1, 1.73]);
  translate([185, 163, 0])
    cube([1, 1, 1.73]);
  translate([186, 163, 0])
    cube([1, 1, 1.73]);
  translate([187, 163, 0])
    cube([1, 1, 1.73]);
  translate([188, 163, 0])
    cube([1, 1, 1.76]);
  translate([189, 163, 0])
    cube([1, 1, 1.73]);
  translate([190, 163, 0])
    cube([1, 1, 1.76]);
  translate([191, 163, 0])
    cube([1, 1, 1.76]);
  translate([192, 163, 0])
    cube([1, 1, 1.73]);
  translate([193, 163, 0])
    cube([1, 1, 1.76]);
  translate([194, 163, 0])
    cube([1, 1, 1.76]);
  translate([195, 163, 0])
    cube([1, 1, 1.76]);
  translate([196, 163, 0])
    cube([1, 1, 1.76]);
  translate([197, 163, 0])
    cube([1, 1, 1.76]);
  translate([198, 163, 0])
    cube([1, 1, 1.69]);
  translate([199, 163, 0])
    cube([1, 1, 1.76]);
  translate([200, 163, 0])
    cube([1, 1, 1.76]);
  translate([201, 163, 0])
    cube([1, 1, 1.76]);
  translate([202, 163, 0])
    cube([1, 1, 1.76]);
  translate([203, 163, 0])
    cube([1, 1, 1.76]);
  translate([204, 163, 0])
    cube([1, 1, 1.76]);
  translate([205, 163, 0])
    cube([1, 1, 1.76]);
  translate([206, 163, 0])
    cube([1, 1, 1.76]);
  translate([207, 163, 0])
    cube([1, 1, 1.76]);
  translate([208, 163, 0])
    cube([1, 1, 1.76]);
  translate([209, 163, 0])
    cube([1, 1, 1.76]);
  translate([210, 163, 0])
    cube([1, 1, 1.76]);
  translate([211, 163, 0])
    cube([1, 1, 1.76]);
  translate([212, 163, 0])
    cube([1, 1, 1.76]);
  translate([213, 163, 0])
    cube([1, 1, 1.76]);
  translate([214, 163, 0])
    cube([1, 1, 1.76]);
  translate([215, 163, 0])
    cube([1, 1, 1.76]);
  translate([216, 163, 0])
    cube([1, 1, 1.76]);
  translate([217, 163, 0])
    cube([1, 1, 1.76]);
  translate([218, 163, 0])
    cube([1, 1, 1.76]);
  translate([219, 163, 0])
    cube([1, 1, 1.76]);
  translate([220, 163, 0])
    cube([1, 1, 1.73]);
  translate([221, 163, 0])
    cube([1, 1, 1.73]);
  translate([222, 163, 0])
    cube([1, 1, 1.76]);
  translate([223, 163, 0])
    cube([1, 1, 1.76]);
  translate([224, 163, 0])
    cube([1, 1, 1.76]);
  translate([225, 163, 0])
    cube([1, 1, 1.76]);
  translate([226, 163, 0])
    cube([1, 1, 1.76]);
  translate([227, 163, 0])
    cube([1, 1, 1.76]);
  translate([228, 163, 0])
    cube([1, 1, 1.80]);
  translate([229, 163, 0])
    cube([1, 1, 1.80]);
  translate([230, 163, 0])
    cube([1, 1, 1.76]);
  translate([231, 163, 0])
    cube([1, 1, 1.76]);
  translate([232, 163, 0])
    cube([1, 1, 1.76]);
  translate([233, 163, 0])
    cube([1, 1, 1.76]);
  translate([234, 163, 0])
    cube([1, 1, 1.76]);
  translate([235, 163, 0])
    cube([1, 1, 1.76]);
  translate([236, 163, 0])
    cube([1, 1, 1.76]);
  translate([237, 163, 0])
    cube([1, 1, 1.69]);
  translate([238, 163, 0])
    cube([1, 1, 1.73]);
  translate([239, 163, 0])
    cube([1, 1, 1.80]);
  translate([240, 163, 0])
    cube([1, 1, 1.73]);
  translate([241, 163, 0])
    cube([1, 1, 1.69]);
  translate([242, 163, 0])
    cube([1, 1, 1.69]);
  translate([243, 163, 0])
    cube([1, 1, 1.73]);
  translate([244, 163, 0])
    cube([1, 1, 1.73]);
  translate([245, 163, 0])
    cube([1, 1, 1.73]);
  translate([246, 163, 0])
    cube([1, 1, 1.73]);
  translate([0, 164, 0])
    cube([1, 1, 1.88]);
  translate([1, 164, 0])
    cube([1, 1, 1.88]);
  translate([2, 164, 0])
    cube([1, 1, 1.88]);
  translate([3, 164, 0])
    cube([1, 1, 1.88]);
  translate([4, 164, 0])
    cube([1, 1, 1.88]);
  translate([5, 164, 0])
    cube([1, 1, 1.88]);
  translate([6, 164, 0])
    cube([1, 1, 1.88]);
  translate([7, 164, 0])
    cube([1, 1, 1.92]);
  translate([8, 164, 0])
    cube([1, 1, 1.92]);
  translate([9, 164, 0])
    cube([1, 1, 1.88]);
  translate([10, 164, 0])
    cube([1, 1, 1.88]);
  translate([11, 164, 0])
    cube([1, 1, 1.88]);
  translate([12, 164, 0])
    cube([1, 1, 1.88]);
  translate([13, 164, 0])
    cube([1, 1, 1.88]);
  translate([14, 164, 0])
    cube([1, 1, 1.80]);
  translate([15, 164, 0])
    cube([1, 1, 1.92]);
  translate([16, 164, 0])
    cube([1, 1, 1.88]);
  translate([17, 164, 0])
    cube([1, 1, 1.88]);
  translate([18, 164, 0])
    cube([1, 1, 1.88]);
  translate([19, 164, 0])
    cube([1, 1, 1.84]);
  translate([20, 164, 0])
    cube([1, 1, 1.84]);
  translate([21, 164, 0])
    cube([1, 1, 1.88]);
  translate([22, 164, 0])
    cube([1, 1, 1.84]);
  translate([23, 164, 0])
    cube([1, 1, 1.84]);
  translate([24, 164, 0])
    cube([1, 1, 1.84]);
  translate([25, 164, 0])
    cube([1, 1, 1.84]);
  translate([26, 164, 0])
    cube([1, 1, 1.84]);
  translate([27, 164, 0])
    cube([1, 1, 1.84]);
  translate([28, 164, 0])
    cube([1, 1, 1.84]);
  translate([29, 164, 0])
    cube([1, 1, 1.84]);
  translate([30, 164, 0])
    cube([1, 1, 1.84]);
  translate([31, 164, 0])
    cube([1, 1, 1.84]);
  translate([32, 164, 0])
    cube([1, 1, 1.84]);
  translate([33, 164, 0])
    cube([1, 1, 1.84]);
  translate([34, 164, 0])
    cube([1, 1, 1.84]);
  translate([35, 164, 0])
    cube([1, 1, 1.84]);
  translate([36, 164, 0])
    cube([1, 1, 1.84]);
  translate([37, 164, 0])
    cube([1, 1, 1.84]);
  translate([38, 164, 0])
    cube([1, 1, 1.84]);
  translate([39, 164, 0])
    cube([1, 1, 1.88]);
  translate([40, 164, 0])
    cube([1, 1, 1.84]);
  translate([41, 164, 0])
    cube([1, 1, 1.80]);
  translate([42, 164, 0])
    cube([1, 1, 1.80]);
  translate([43, 164, 0])
    cube([1, 1, 1.84]);
  translate([44, 164, 0])
    cube([1, 1, 1.76]);
  translate([45, 164, 0])
    cube([1, 1, 1.76]);
  translate([46, 164, 0])
    cube([1, 1, 1.80]);
  translate([47, 164, 0])
    cube([1, 1, 1.80]);
  translate([48, 164, 0])
    cube([1, 1, 1.80]);
  translate([49, 164, 0])
    cube([1, 1, 1.80]);
  translate([50, 164, 0])
    cube([1, 1, 1.84]);
  translate([51, 164, 0])
    cube([1, 1, 1.80]);
  translate([52, 164, 0])
    cube([1, 1, 1.80]);
  translate([53, 164, 0])
    cube([1, 1, 1.80]);
  translate([54, 164, 0])
    cube([1, 1, 1.80]);
  translate([55, 164, 0])
    cube([1, 1, 1.80]);
  translate([56, 164, 0])
    cube([1, 1, 1.80]);
  translate([57, 164, 0])
    cube([1, 1, 1.76]);
  translate([58, 164, 0])
    cube([1, 1, 1.76]);
  translate([59, 164, 0])
    cube([1, 1, 1.37]);
  translate([60, 164, 0])
    cube([1, 1, 5.45]);
  translate([61, 164, 0])
    cube([1, 1, 4.12]);
  translate([62, 164, 0])
    cube([1, 1, 2.35]);
  translate([63, 164, 0])
    cube([1, 1, 2.86]);
  translate([64, 164, 0])
    cube([1, 1, 3.53]);
  translate([65, 164, 0])
    cube([1, 1, 4.24]);
  translate([66, 164, 0])
    cube([1, 1, 4.82]);
  translate([67, 164, 0])
    cube([1, 1, 5.10]);
  translate([68, 164, 0])
    cube([1, 1, 5.06]);
  translate([69, 164, 0])
    cube([1, 1, 5.10]);
  translate([70, 164, 0])
    cube([1, 1, 5.10]);
  translate([71, 164, 0])
    cube([1, 1, 5.14]);
  translate([72, 164, 0])
    cube([1, 1, 5.29]);
  translate([73, 164, 0])
    cube([1, 1, 5.45]);
  translate([74, 164, 0])
    cube([1, 1, 5.37]);
  translate([75, 164, 0])
    cube([1, 1, 4.98]);
  translate([76, 164, 0])
    cube([1, 1, 1.73]);
  translate([77, 164, 0])
    cube([1, 1, 1.84]);
  translate([78, 164, 0])
    cube([1, 1, 1.76]);
  translate([79, 164, 0])
    cube([1, 1, 1.73]);
  translate([80, 164, 0])
    cube([1, 1, 1.76]);
  translate([81, 164, 0])
    cube([1, 1, 1.76]);
  translate([82, 164, 0])
    cube([1, 1, 1.76]);
  translate([83, 164, 0])
    cube([1, 1, 1.76]);
  translate([84, 164, 0])
    cube([1, 1, 1.76]);
  translate([85, 164, 0])
    cube([1, 1, 1.76]);
  translate([86, 164, 0])
    cube([1, 1, 7.37]);
  translate([87, 164, 0])
    cube([1, 1, 7.65]);
  translate([88, 164, 0])
    cube([1, 1, 6.59]);
  translate([89, 164, 0])
    cube([1, 1, 5.45]);
  translate([90, 164, 0])
    cube([1, 1, 4.63]);
  translate([91, 164, 0])
    cube([1, 1, 4.12]);
  translate([92, 164, 0])
    cube([1, 1, 3.69]);
  translate([93, 164, 0])
    cube([1, 1, 3.33]);
  translate([94, 164, 0])
    cube([1, 1, 2.98]);
  translate([95, 164, 0])
    cube([1, 1, 2.90]);
  translate([96, 164, 0])
    cube([1, 1, 3.10]);
  translate([97, 164, 0])
    cube([1, 1, 3.02]);
  translate([98, 164, 0])
    cube([1, 1, 2.55]);
  translate([99, 164, 0])
    cube([1, 1, 2.39]);
  translate([100, 164, 0])
    cube([1, 1, 2.67]);
  translate([101, 164, 0])
    cube([1, 1, 2.94]);
  translate([102, 164, 0])
    cube([1, 1, 3.10]);
  translate([103, 164, 0])
    cube([1, 1, 3.18]);
  translate([104, 164, 0])
    cube([1, 1, 3.33]);
  translate([105, 164, 0])
    cube([1, 1, 3.25]);
  translate([106, 164, 0])
    cube([1, 1, 3.33]);
  translate([107, 164, 0])
    cube([1, 1, 3.33]);
  translate([108, 164, 0])
    cube([1, 1, 3.49]);
  translate([109, 164, 0])
    cube([1, 1, 3.65]);
  translate([110, 164, 0])
    cube([1, 1, 3.65]);
  translate([111, 164, 0])
    cube([1, 1, 3.73]);
  translate([112, 164, 0])
    cube([1, 1, 3.76]);
  translate([113, 164, 0])
    cube([1, 1, 3.73]);
  translate([114, 164, 0])
    cube([1, 1, 3.69]);
  translate([115, 164, 0])
    cube([1, 1, 3.73]);
  translate([116, 164, 0])
    cube([1, 1, 3.88]);
  translate([117, 164, 0])
    cube([1, 1, 3.92]);
  translate([118, 164, 0])
    cube([1, 1, 4.04]);
  translate([119, 164, 0])
    cube([1, 1, 4.27]);
  translate([120, 164, 0])
    cube([1, 1, 4.51]);
  translate([121, 164, 0])
    cube([1, 1, 5.10]);
  translate([122, 164, 0])
    cube([1, 1, 5.65]);
  translate([123, 164, 0])
    cube([1, 1, 6.24]);
  translate([124, 164, 0])
    cube([1, 1, 6.43]);
  translate([125, 164, 0])
    cube([1, 1, 5.14]);
  translate([126, 164, 0])
    cube([1, 1, 5.33]);
  translate([127, 164, 0])
    cube([1, 1, 5.33]);
  translate([128, 164, 0])
    cube([1, 1, 5.33]);
  translate([129, 164, 0])
    cube([1, 1, 5.29]);
  translate([130, 164, 0])
    cube([1, 1, 5.69]);
  translate([131, 164, 0])
    cube([1, 1, 6.16]);
  translate([132, 164, 0])
    cube([1, 1, 6.71]);
  translate([133, 164, 0])
    cube([1, 1, 6.78]);
  translate([134, 164, 0])
    cube([1, 1, 7.25]);
  translate([135, 164, 0])
    cube([1, 1, 6.94]);
  translate([136, 164, 0])
    cube([1, 1, 6.82]);
  translate([137, 164, 0])
    cube([1, 1, 6.82]);
  translate([138, 164, 0])
    cube([1, 1, 6.86]);
  translate([139, 164, 0])
    cube([1, 1, 6.31]);
  translate([140, 164, 0])
    cube([1, 1, 1.88]);
  translate([141, 164, 0])
    cube([1, 1, 4.75]);
  translate([142, 164, 0])
    cube([1, 1, 3.33]);
  translate([143, 164, 0])
    cube([1, 1, 2.78]);
  translate([144, 164, 0])
    cube([1, 1, 2.78]);
  translate([145, 164, 0])
    cube([1, 1, 3.29]);
  translate([146, 164, 0])
    cube([1, 1, 3.73]);
  translate([147, 164, 0])
    cube([1, 1, 4.04]);
  translate([148, 164, 0])
    cube([1, 1, 4.59]);
  translate([149, 164, 0])
    cube([1, 1, 5.02]);
  translate([150, 164, 0])
    cube([1, 1, 5.14]);
  translate([151, 164, 0])
    cube([1, 1, 5.49]);
  translate([152, 164, 0])
    cube([1, 1, 5.65]);
  translate([153, 164, 0])
    cube([1, 1, 5.69]);
  translate([154, 164, 0])
    cube([1, 1, 5.80]);
  translate([155, 164, 0])
    cube([1, 1, 5.84]);
  translate([156, 164, 0])
    cube([1, 1, 5.76]);
  translate([157, 164, 0])
    cube([1, 1, 5.69]);
  translate([158, 164, 0])
    cube([1, 1, 5.61]);
  translate([159, 164, 0])
    cube([1, 1, 5.61]);
  translate([160, 164, 0])
    cube([1, 1, 5.57]);
  translate([161, 164, 0])
    cube([1, 1, 5.45]);
  translate([162, 164, 0])
    cube([1, 1, 5.33]);
  translate([163, 164, 0])
    cube([1, 1, 5.29]);
  translate([164, 164, 0])
    cube([1, 1, 5.29]);
  translate([165, 164, 0])
    cube([1, 1, 5.61]);
  translate([166, 164, 0])
    cube([1, 1, 6.35]);
  translate([167, 164, 0])
    cube([1, 1, 1.33]);
  translate([168, 164, 0])
    cube([1, 1, 1.88]);
  translate([169, 164, 0])
    cube([1, 1, 1.69]);
  translate([170, 164, 0])
    cube([1, 1, 1.69]);
  translate([171, 164, 0])
    cube([1, 1, 1.69]);
  translate([172, 164, 0])
    cube([1, 1, 1.73]);
  translate([173, 164, 0])
    cube([1, 1, 1.73]);
  translate([174, 164, 0])
    cube([1, 1, 1.73]);
  translate([175, 164, 0])
    cube([1, 1, 1.73]);
  translate([176, 164, 0])
    cube([1, 1, 1.73]);
  translate([177, 164, 0])
    cube([1, 1, 1.73]);
  translate([178, 164, 0])
    cube([1, 1, 1.73]);
  translate([179, 164, 0])
    cube([1, 1, 1.73]);
  translate([180, 164, 0])
    cube([1, 1, 1.73]);
  translate([181, 164, 0])
    cube([1, 1, 1.73]);
  translate([182, 164, 0])
    cube([1, 1, 1.73]);
  translate([183, 164, 0])
    cube([1, 1, 1.73]);
  translate([184, 164, 0])
    cube([1, 1, 1.73]);
  translate([185, 164, 0])
    cube([1, 1, 1.69]);
  translate([186, 164, 0])
    cube([1, 1, 1.76]);
  translate([187, 164, 0])
    cube([1, 1, 1.76]);
  translate([188, 164, 0])
    cube([1, 1, 1.76]);
  translate([189, 164, 0])
    cube([1, 1, 1.76]);
  translate([190, 164, 0])
    cube([1, 1, 1.76]);
  translate([191, 164, 0])
    cube([1, 1, 1.76]);
  translate([192, 164, 0])
    cube([1, 1, 1.76]);
  translate([193, 164, 0])
    cube([1, 1, 1.76]);
  translate([194, 164, 0])
    cube([1, 1, 1.76]);
  translate([195, 164, 0])
    cube([1, 1, 1.76]);
  translate([196, 164, 0])
    cube([1, 1, 1.76]);
  translate([197, 164, 0])
    cube([1, 1, 1.76]);
  translate([198, 164, 0])
    cube([1, 1, 1.80]);
  translate([199, 164, 0])
    cube([1, 1, 1.80]);
  translate([200, 164, 0])
    cube([1, 1, 1.76]);
  translate([201, 164, 0])
    cube([1, 1, 1.76]);
  translate([202, 164, 0])
    cube([1, 1, 1.76]);
  translate([203, 164, 0])
    cube([1, 1, 1.76]);
  translate([204, 164, 0])
    cube([1, 1, 1.76]);
  translate([205, 164, 0])
    cube([1, 1, 1.76]);
  translate([206, 164, 0])
    cube([1, 1, 1.76]);
  translate([207, 164, 0])
    cube([1, 1, 1.76]);
  translate([208, 164, 0])
    cube([1, 1, 1.76]);
  translate([209, 164, 0])
    cube([1, 1, 1.76]);
  translate([210, 164, 0])
    cube([1, 1, 1.80]);
  translate([211, 164, 0])
    cube([1, 1, 1.73]);
  translate([212, 164, 0])
    cube([1, 1, 1.76]);
  translate([213, 164, 0])
    cube([1, 1, 1.76]);
  translate([214, 164, 0])
    cube([1, 1, 1.76]);
  translate([215, 164, 0])
    cube([1, 1, 1.76]);
  translate([216, 164, 0])
    cube([1, 1, 1.80]);
  translate([217, 164, 0])
    cube([1, 1, 1.76]);
  translate([218, 164, 0])
    cube([1, 1, 1.80]);
  translate([219, 164, 0])
    cube([1, 1, 1.76]);
  translate([220, 164, 0])
    cube([1, 1, 1.76]);
  translate([221, 164, 0])
    cube([1, 1, 1.76]);
  translate([222, 164, 0])
    cube([1, 1, 1.76]);
  translate([223, 164, 0])
    cube([1, 1, 1.76]);
  translate([224, 164, 0])
    cube([1, 1, 1.76]);
  translate([225, 164, 0])
    cube([1, 1, 1.76]);
  translate([226, 164, 0])
    cube([1, 1, 1.76]);
  translate([227, 164, 0])
    cube([1, 1, 1.76]);
  translate([228, 164, 0])
    cube([1, 1, 1.76]);
  translate([229, 164, 0])
    cube([1, 1, 1.76]);
  translate([230, 164, 0])
    cube([1, 1, 1.76]);
  translate([231, 164, 0])
    cube([1, 1, 1.76]);
  translate([232, 164, 0])
    cube([1, 1, 1.76]);
  translate([233, 164, 0])
    cube([1, 1, 1.73]);
  translate([234, 164, 0])
    cube([1, 1, 1.73]);
  translate([235, 164, 0])
    cube([1, 1, 1.76]);
  translate([236, 164, 0])
    cube([1, 1, 1.76]);
  translate([237, 164, 0])
    cube([1, 1, 1.76]);
  translate([238, 164, 0])
    cube([1, 1, 1.73]);
  translate([239, 164, 0])
    cube([1, 1, 1.73]);
  translate([240, 164, 0])
    cube([1, 1, 1.76]);
  translate([241, 164, 0])
    cube([1, 1, 1.73]);
  translate([242, 164, 0])
    cube([1, 1, 1.73]);
  translate([243, 164, 0])
    cube([1, 1, 1.73]);
  translate([244, 164, 0])
    cube([1, 1, 1.69]);
  translate([245, 164, 0])
    cube([1, 1, 1.73]);
  translate([246, 164, 0])
    cube([1, 1, 1.73]);
  translate([0, 165, 0])
    cube([1, 1, 1.92]);
  translate([1, 165, 0])
    cube([1, 1, 1.92]);
  translate([2, 165, 0])
    cube([1, 1, 1.92]);
  translate([3, 165, 0])
    cube([1, 1, 1.92]);
  translate([4, 165, 0])
    cube([1, 1, 1.92]);
  translate([5, 165, 0])
    cube([1, 1, 1.88]);
  translate([6, 165, 0])
    cube([1, 1, 1.88]);
  translate([7, 165, 0])
    cube([1, 1, 1.92]);
  translate([8, 165, 0])
    cube([1, 1, 1.92]);
  translate([9, 165, 0])
    cube([1, 1, 1.92]);
  translate([10, 165, 0])
    cube([1, 1, 1.92]);
  translate([11, 165, 0])
    cube([1, 1, 1.88]);
  translate([12, 165, 0])
    cube([1, 1, 1.88]);
  translate([13, 165, 0])
    cube([1, 1, 1.88]);
  translate([14, 165, 0])
    cube([1, 1, 1.88]);
  translate([15, 165, 0])
    cube([1, 1, 1.88]);
  translate([16, 165, 0])
    cube([1, 1, 1.84]);
  translate([17, 165, 0])
    cube([1, 1, 1.92]);
  translate([18, 165, 0])
    cube([1, 1, 1.88]);
  translate([19, 165, 0])
    cube([1, 1, 1.88]);
  translate([20, 165, 0])
    cube([1, 1, 1.88]);
  translate([21, 165, 0])
    cube([1, 1, 1.92]);
  translate([22, 165, 0])
    cube([1, 1, 1.88]);
  translate([23, 165, 0])
    cube([1, 1, 1.88]);
  translate([24, 165, 0])
    cube([1, 1, 1.88]);
  translate([25, 165, 0])
    cube([1, 1, 1.84]);
  translate([26, 165, 0])
    cube([1, 1, 1.84]);
  translate([27, 165, 0])
    cube([1, 1, 1.88]);
  translate([28, 165, 0])
    cube([1, 1, 1.84]);
  translate([29, 165, 0])
    cube([1, 1, 1.84]);
  translate([30, 165, 0])
    cube([1, 1, 1.84]);
  translate([31, 165, 0])
    cube([1, 1, 1.84]);
  translate([32, 165, 0])
    cube([1, 1, 1.92]);
  translate([33, 165, 0])
    cube([1, 1, 1.84]);
  translate([34, 165, 0])
    cube([1, 1, 1.84]);
  translate([35, 165, 0])
    cube([1, 1, 1.84]);
  translate([36, 165, 0])
    cube([1, 1, 1.80]);
  translate([37, 165, 0])
    cube([1, 1, 1.80]);
  translate([38, 165, 0])
    cube([1, 1, 1.84]);
  translate([39, 165, 0])
    cube([1, 1, 1.84]);
  translate([40, 165, 0])
    cube([1, 1, 1.84]);
  translate([41, 165, 0])
    cube([1, 1, 1.84]);
  translate([42, 165, 0])
    cube([1, 1, 1.84]);
  translate([43, 165, 0])
    cube([1, 1, 1.84]);
  translate([44, 165, 0])
    cube([1, 1, 1.84]);
  translate([45, 165, 0])
    cube([1, 1, 1.84]);
  translate([46, 165, 0])
    cube([1, 1, 1.84]);
  translate([47, 165, 0])
    cube([1, 1, 1.84]);
  translate([48, 165, 0])
    cube([1, 1, 1.80]);
  translate([49, 165, 0])
    cube([1, 1, 1.80]);
  translate([50, 165, 0])
    cube([1, 1, 1.80]);
  translate([51, 165, 0])
    cube([1, 1, 1.80]);
  translate([52, 165, 0])
    cube([1, 1, 1.80]);
  translate([53, 165, 0])
    cube([1, 1, 1.80]);
  translate([54, 165, 0])
    cube([1, 1, 1.80]);
  translate([55, 165, 0])
    cube([1, 1, 1.80]);
  translate([56, 165, 0])
    cube([1, 1, 1.80]);
  translate([57, 165, 0])
    cube([1, 1, 1.80]);
  translate([58, 165, 0])
    cube([1, 1, 1.80]);
  translate([59, 165, 0])
    cube([1, 1, 1.80]);
  translate([60, 165, 0])
    cube([1, 1, 1.96]);
  translate([61, 165, 0])
    cube([1, 1, 5.18]);
  translate([62, 165, 0])
    cube([1, 1, 2.82]);
  translate([63, 165, 0])
    cube([1, 1, 2.59]);
  translate([64, 165, 0])
    cube([1, 1, 3.18]);
  translate([65, 165, 0])
    cube([1, 1, 3.88]);
  translate([66, 165, 0])
    cube([1, 1, 4.59]);
  translate([67, 165, 0])
    cube([1, 1, 4.90]);
  translate([68, 165, 0])
    cube([1, 1, 4.94]);
  translate([69, 165, 0])
    cube([1, 1, 5.06]);
  translate([70, 165, 0])
    cube([1, 1, 5.02]);
  translate([71, 165, 0])
    cube([1, 1, 5.14]);
  translate([72, 165, 0])
    cube([1, 1, 5.29]);
  translate([73, 165, 0])
    cube([1, 1, 5.45]);
  translate([74, 165, 0])
    cube([1, 1, 5.14]);
  translate([75, 165, 0])
    cube([1, 1, 2.27]);
  translate([76, 165, 0])
    cube([1, 1, 1.80]);
  translate([77, 165, 0])
    cube([1, 1, 1.76]);
  translate([78, 165, 0])
    cube([1, 1, 1.73]);
  translate([79, 165, 0])
    cube([1, 1, 1.73]);
  translate([80, 165, 0])
    cube([1, 1, 1.76]);
  translate([81, 165, 0])
    cube([1, 1, 1.76]);
  translate([82, 165, 0])
    cube([1, 1, 1.76]);
  translate([83, 165, 0])
    cube([1, 1, 1.73]);
  translate([84, 165, 0])
    cube([1, 1, 1.88]);
  translate([85, 165, 0])
    cube([1, 1, 2.12]);
  translate([86, 165, 0])
    cube([1, 1, 8.16]);
  translate([87, 165, 0])
    cube([1, 1, 7.84]);
  translate([88, 165, 0])
    cube([1, 1, 6.90]);
  translate([89, 165, 0])
    cube([1, 1, 5.84]);
  translate([90, 165, 0])
    cube([1, 1, 4.98]);
  translate([91, 165, 0])
    cube([1, 1, 4.31]);
  translate([92, 165, 0])
    cube([1, 1, 3.76]);
  translate([93, 165, 0])
    cube([1, 1, 3.33]);
  translate([94, 165, 0])
    cube([1, 1, 2.94]);
  translate([95, 165, 0])
    cube([1, 1, 2.86]);
  translate([96, 165, 0])
    cube([1, 1, 2.94]);
  translate([97, 165, 0])
    cube([1, 1, 3.02]);
  translate([98, 165, 0])
    cube([1, 1, 2.63]);
  translate([99, 165, 0])
    cube([1, 1, 2.39]);
  translate([100, 165, 0])
    cube([1, 1, 2.59]);
  translate([101, 165, 0])
    cube([1, 1, 2.86]);
  translate([102, 165, 0])
    cube([1, 1, 3.10]);
  translate([103, 165, 0])
    cube([1, 1, 3.22]);
  translate([104, 165, 0])
    cube([1, 1, 3.29]);
  translate([105, 165, 0])
    cube([1, 1, 3.29]);
  translate([106, 165, 0])
    cube([1, 1, 3.33]);
  translate([107, 165, 0])
    cube([1, 1, 3.33]);
  translate([108, 165, 0])
    cube([1, 1, 3.45]);
  translate([109, 165, 0])
    cube([1, 1, 3.65]);
  translate([110, 165, 0])
    cube([1, 1, 3.53]);
  translate([111, 165, 0])
    cube([1, 1, 3.57]);
  translate([112, 165, 0])
    cube([1, 1, 3.73]);
  translate([113, 165, 0])
    cube([1, 1, 3.69]);
  translate([114, 165, 0])
    cube([1, 1, 3.57]);
  translate([115, 165, 0])
    cube([1, 1, 3.57]);
  translate([116, 165, 0])
    cube([1, 1, 3.80]);
  translate([117, 165, 0])
    cube([1, 1, 4.00]);
  translate([118, 165, 0])
    cube([1, 1, 4.16]);
  translate([119, 165, 0])
    cube([1, 1, 4.59]);
  translate([120, 165, 0])
    cube([1, 1, 4.98]);
  translate([121, 165, 0])
    cube([1, 1, 5.45]);
  translate([122, 165, 0])
    cube([1, 1, 5.88]);
  translate([123, 165, 0])
    cube([1, 1, 6.31]);
  translate([124, 165, 0])
    cube([1, 1, 6.27]);
  translate([125, 165, 0])
    cube([1, 1, 5.14]);
  translate([126, 165, 0])
    cube([1, 1, 5.29]);
  translate([127, 165, 0])
    cube([1, 1, 5.33]);
  translate([128, 165, 0])
    cube([1, 1, 5.25]);
  translate([129, 165, 0])
    cube([1, 1, 5.37]);
  translate([130, 165, 0])
    cube([1, 1, 5.61]);
  translate([131, 165, 0])
    cube([1, 1, 6.04]);
  translate([132, 165, 0])
    cube([1, 1, 6.43]);
  translate([133, 165, 0])
    cube([1, 1, 6.82]);
  translate([134, 165, 0])
    cube([1, 1, 7.41]);
  translate([135, 165, 0])
    cube([1, 1, 6.51]);
  translate([136, 165, 0])
    cube([1, 1, 6.35]);
  translate([137, 165, 0])
    cube([1, 1, 6.47]);
  translate([138, 165, 0])
    cube([1, 1, 6.82]);
  translate([139, 165, 0])
    cube([1, 1, 6.67]);
  translate([140, 165, 0])
    cube([1, 1, 1.92]);
  translate([141, 165, 0])
    cube([1, 1, 0.90]);
  translate([142, 165, 0])
    cube([1, 1, 4.71]);
  translate([143, 165, 0])
    cube([1, 1, 3.69]);
  translate([144, 165, 0])
    cube([1, 1, 3.18]);
  translate([145, 165, 0])
    cube([1, 1, 2.82]);
  translate([146, 165, 0])
    cube([1, 1, 3.29]);
  translate([147, 165, 0])
    cube([1, 1, 3.69]);
  translate([148, 165, 0])
    cube([1, 1, 4.20]);
  translate([149, 165, 0])
    cube([1, 1, 4.51]);
  translate([150, 165, 0])
    cube([1, 1, 4.75]);
  translate([151, 165, 0])
    cube([1, 1, 5.14]);
  translate([152, 165, 0])
    cube([1, 1, 5.29]);
  translate([153, 165, 0])
    cube([1, 1, 5.45]);
  translate([154, 165, 0])
    cube([1, 1, 5.57]);
  translate([155, 165, 0])
    cube([1, 1, 5.57]);
  translate([156, 165, 0])
    cube([1, 1, 5.69]);
  translate([157, 165, 0])
    cube([1, 1, 5.57]);
  translate([158, 165, 0])
    cube([1, 1, 5.45]);
  translate([159, 165, 0])
    cube([1, 1, 5.37]);
  translate([160, 165, 0])
    cube([1, 1, 5.33]);
  translate([161, 165, 0])
    cube([1, 1, 5.33]);
  translate([162, 165, 0])
    cube([1, 1, 5.29]);
  translate([163, 165, 0])
    cube([1, 1, 5.22]);
  translate([164, 165, 0])
    cube([1, 1, 5.29]);
  translate([165, 165, 0])
    cube([1, 1, 5.37]);
  translate([166, 165, 0])
    cube([1, 1, 5.65]);
  translate([167, 165, 0])
    cube([1, 1, 6.47]);
  translate([168, 165, 0])
    cube([1, 1, 1.73]);
  translate([169, 165, 0])
    cube([1, 1, 1.80]);
  translate([170, 165, 0])
    cube([1, 1, 1.57]);
  translate([171, 165, 0])
    cube([1, 1, 1.73]);
  translate([172, 165, 0])
    cube([1, 1, 1.73]);
  translate([173, 165, 0])
    cube([1, 1, 1.73]);
  translate([174, 165, 0])
    cube([1, 1, 1.73]);
  translate([175, 165, 0])
    cube([1, 1, 1.73]);
  translate([176, 165, 0])
    cube([1, 1, 1.73]);
  translate([177, 165, 0])
    cube([1, 1, 1.73]);
  translate([178, 165, 0])
    cube([1, 1, 1.73]);
  translate([179, 165, 0])
    cube([1, 1, 1.73]);
  translate([180, 165, 0])
    cube([1, 1, 1.69]);
  translate([181, 165, 0])
    cube([1, 1, 1.76]);
  translate([182, 165, 0])
    cube([1, 1, 1.73]);
  translate([183, 165, 0])
    cube([1, 1, 1.73]);
  translate([184, 165, 0])
    cube([1, 1, 1.76]);
  translate([185, 165, 0])
    cube([1, 1, 1.73]);
  translate([186, 165, 0])
    cube([1, 1, 1.73]);
  translate([187, 165, 0])
    cube([1, 1, 1.76]);
  translate([188, 165, 0])
    cube([1, 1, 1.76]);
  translate([189, 165, 0])
    cube([1, 1, 1.69]);
  translate([190, 165, 0])
    cube([1, 1, 1.76]);
  translate([191, 165, 0])
    cube([1, 1, 1.76]);
  translate([192, 165, 0])
    cube([1, 1, 1.80]);
  translate([193, 165, 0])
    cube([1, 1, 1.80]);
  translate([194, 165, 0])
    cube([1, 1, 1.80]);
  translate([195, 165, 0])
    cube([1, 1, 1.80]);
  translate([196, 165, 0])
    cube([1, 1, 1.76]);
  translate([197, 165, 0])
    cube([1, 1, 1.76]);
  translate([198, 165, 0])
    cube([1, 1, 1.80]);
  translate([199, 165, 0])
    cube([1, 1, 1.80]);
  translate([200, 165, 0])
    cube([1, 1, 1.80]);
  translate([201, 165, 0])
    cube([1, 1, 1.80]);
  translate([202, 165, 0])
    cube([1, 1, 1.80]);
  translate([203, 165, 0])
    cube([1, 1, 1.80]);
  translate([204, 165, 0])
    cube([1, 1, 1.76]);
  translate([205, 165, 0])
    cube([1, 1, 1.76]);
  translate([206, 165, 0])
    cube([1, 1, 1.76]);
  translate([207, 165, 0])
    cube([1, 1, 1.76]);
  translate([208, 165, 0])
    cube([1, 1, 1.76]);
  translate([209, 165, 0])
    cube([1, 1, 1.76]);
  translate([210, 165, 0])
    cube([1, 1, 1.69]);
  translate([211, 165, 0])
    cube([1, 1, 1.73]);
  translate([212, 165, 0])
    cube([1, 1, 1.80]);
  translate([213, 165, 0])
    cube([1, 1, 1.76]);
  translate([214, 165, 0])
    cube([1, 1, 1.76]);
  translate([215, 165, 0])
    cube([1, 1, 1.76]);
  translate([216, 165, 0])
    cube([1, 1, 1.84]);
  translate([217, 165, 0])
    cube([1, 1, 1.73]);
  translate([218, 165, 0])
    cube([1, 1, 1.76]);
  translate([219, 165, 0])
    cube([1, 1, 1.76]);
  translate([220, 165, 0])
    cube([1, 1, 1.76]);
  translate([221, 165, 0])
    cube([1, 1, 1.76]);
  translate([222, 165, 0])
    cube([1, 1, 1.76]);
  translate([223, 165, 0])
    cube([1, 1, 1.76]);
  translate([224, 165, 0])
    cube([1, 1, 1.76]);
  translate([225, 165, 0])
    cube([1, 1, 1.80]);
  translate([226, 165, 0])
    cube([1, 1, 1.80]);
  translate([227, 165, 0])
    cube([1, 1, 1.76]);
  translate([228, 165, 0])
    cube([1, 1, 1.76]);
  translate([229, 165, 0])
    cube([1, 1, 1.76]);
  translate([230, 165, 0])
    cube([1, 1, 1.76]);
  translate([231, 165, 0])
    cube([1, 1, 1.76]);
  translate([232, 165, 0])
    cube([1, 1, 1.76]);
  translate([233, 165, 0])
    cube([1, 1, 1.73]);
  translate([234, 165, 0])
    cube([1, 1, 1.76]);
  translate([235, 165, 0])
    cube([1, 1, 1.76]);
  translate([236, 165, 0])
    cube([1, 1, 1.76]);
  translate([237, 165, 0])
    cube([1, 1, 1.76]);
  translate([238, 165, 0])
    cube([1, 1, 1.76]);
  translate([239, 165, 0])
    cube([1, 1, 1.76]);
  translate([240, 165, 0])
    cube([1, 1, 1.76]);
  translate([241, 165, 0])
    cube([1, 1, 1.76]);
  translate([242, 165, 0])
    cube([1, 1, 1.76]);
  translate([243, 165, 0])
    cube([1, 1, 1.76]);
  translate([244, 165, 0])
    cube([1, 1, 1.69]);
  translate([245, 165, 0])
    cube([1, 1, 1.76]);
  translate([246, 165, 0])
    cube([1, 1, 1.76]);
  translate([0, 166, 0])
    cube([1, 1, 1.88]);
  translate([1, 166, 0])
    cube([1, 1, 1.92]);
  translate([2, 166, 0])
    cube([1, 1, 1.92]);
  translate([3, 166, 0])
    cube([1, 1, 1.92]);
  translate([4, 166, 0])
    cube([1, 1, 1.92]);
  translate([5, 166, 0])
    cube([1, 1, 1.88]);
  translate([6, 166, 0])
    cube([1, 1, 1.88]);
  translate([7, 166, 0])
    cube([1, 1, 1.92]);
  translate([8, 166, 0])
    cube([1, 1, 1.92]);
  translate([9, 166, 0])
    cube([1, 1, 1.92]);
  translate([10, 166, 0])
    cube([1, 1, 1.92]);
  translate([11, 166, 0])
    cube([1, 1, 1.92]);
  translate([12, 166, 0])
    cube([1, 1, 1.88]);
  translate([13, 166, 0])
    cube([1, 1, 1.88]);
  translate([14, 166, 0])
    cube([1, 1, 1.92]);
  translate([15, 166, 0])
    cube([1, 1, 1.92]);
  translate([16, 166, 0])
    cube([1, 1, 1.96]);
  translate([17, 166, 0])
    cube([1, 1, 1.88]);
  translate([18, 166, 0])
    cube([1, 1, 1.92]);
  translate([19, 166, 0])
    cube([1, 1, 1.92]);
  translate([20, 166, 0])
    cube([1, 1, 1.88]);
  translate([21, 166, 0])
    cube([1, 1, 1.92]);
  translate([22, 166, 0])
    cube([1, 1, 1.88]);
  translate([23, 166, 0])
    cube([1, 1, 1.88]);
  translate([24, 166, 0])
    cube([1, 1, 1.88]);
  translate([25, 166, 0])
    cube([1, 1, 1.84]);
  translate([26, 166, 0])
    cube([1, 1, 1.84]);
  translate([27, 166, 0])
    cube([1, 1, 1.76]);
  translate([28, 166, 0])
    cube([1, 1, 1.92]);
  translate([29, 166, 0])
    cube([1, 1, 1.92]);
  translate([30, 166, 0])
    cube([1, 1, 1.92]);
  translate([31, 166, 0])
    cube([1, 1, 1.92]);
  translate([32, 166, 0])
    cube([1, 1, 1.92]);
  translate([33, 166, 0])
    cube([1, 1, 1.92]);
  translate([34, 166, 0])
    cube([1, 1, 1.92]);
  translate([35, 166, 0])
    cube([1, 1, 1.84]);
  translate([36, 166, 0])
    cube([1, 1, 1.88]);
  translate([37, 166, 0])
    cube([1, 1, 1.88]);
  translate([38, 166, 0])
    cube([1, 1, 1.84]);
  translate([39, 166, 0])
    cube([1, 1, 1.84]);
  translate([40, 166, 0])
    cube([1, 1, 1.84]);
  translate([41, 166, 0])
    cube([1, 1, 1.84]);
  translate([42, 166, 0])
    cube([1, 1, 1.84]);
  translate([43, 166, 0])
    cube([1, 1, 1.84]);
  translate([44, 166, 0])
    cube([1, 1, 1.84]);
  translate([45, 166, 0])
    cube([1, 1, 1.84]);
  translate([46, 166, 0])
    cube([1, 1, 1.84]);
  translate([47, 166, 0])
    cube([1, 1, 1.84]);
  translate([48, 166, 0])
    cube([1, 1, 1.84]);
  translate([49, 166, 0])
    cube([1, 1, 1.84]);
  translate([50, 166, 0])
    cube([1, 1, 1.84]);
  translate([51, 166, 0])
    cube([1, 1, 1.80]);
  translate([52, 166, 0])
    cube([1, 1, 1.80]);
  translate([53, 166, 0])
    cube([1, 1, 1.80]);
  translate([54, 166, 0])
    cube([1, 1, 1.80]);
  translate([55, 166, 0])
    cube([1, 1, 1.80]);
  translate([56, 166, 0])
    cube([1, 1, 1.80]);
  translate([57, 166, 0])
    cube([1, 1, 1.80]);
  translate([58, 166, 0])
    cube([1, 1, 1.80]);
  translate([59, 166, 0])
    cube([1, 1, 1.80]);
  translate([60, 166, 0])
    cube([1, 1, 1.61]);
  translate([61, 166, 0])
    cube([1, 1, 1.33]);
  translate([62, 166, 0])
    cube([1, 1, 3.57]);
  translate([63, 166, 0])
    cube([1, 1, 2.39]);
  translate([64, 166, 0])
    cube([1, 1, 2.71]);
  translate([65, 166, 0])
    cube([1, 1, 3.37]);
  translate([66, 166, 0])
    cube([1, 1, 4.20]);
  translate([67, 166, 0])
    cube([1, 1, 4.59]);
  translate([68, 166, 0])
    cube([1, 1, 4.82]);
  translate([69, 166, 0])
    cube([1, 1, 4.98]);
  translate([70, 166, 0])
    cube([1, 1, 4.98]);
  translate([71, 166, 0])
    cube([1, 1, 4.94]);
  translate([72, 166, 0])
    cube([1, 1, 4.98]);
  translate([73, 166, 0])
    cube([1, 1, 4.98]);
  translate([74, 166, 0])
    cube([1, 1, 4.51]);
  translate([75, 166, 0])
    cube([1, 1, 1.92]);
  translate([76, 166, 0])
    cube([1, 1, 1.80]);
  translate([77, 166, 0])
    cube([1, 1, 1.76]);
  translate([78, 166, 0])
    cube([1, 1, 1.69]);
  translate([79, 166, 0])
    cube([1, 1, 1.73]);
  translate([80, 166, 0])
    cube([1, 1, 1.76]);
  translate([81, 166, 0])
    cube([1, 1, 1.80]);
  translate([82, 166, 0])
    cube([1, 1, 1.80]);
  translate([83, 166, 0])
    cube([1, 1, 1.84]);
  translate([84, 166, 0])
    cube([1, 1, 1.49]);
  translate([85, 166, 0])
    cube([1, 1, 4.16]);
  translate([86, 166, 0])
    cube([1, 1, 8.08]);
  translate([87, 166, 0])
    cube([1, 1, 7.96]);
  translate([88, 166, 0])
    cube([1, 1, 7.14]);
  translate([89, 166, 0])
    cube([1, 1, 6.08]);
  translate([90, 166, 0])
    cube([1, 1, 5.06]);
  translate([91, 166, 0])
    cube([1, 1, 4.35]);
  translate([92, 166, 0])
    cube([1, 1, 3.57]);
  translate([93, 166, 0])
    cube([1, 1, 3.18]);
  translate([94, 166, 0])
    cube([1, 1, 2.86]);
  translate([95, 166, 0])
    cube([1, 1, 2.78]);
  translate([96, 166, 0])
    cube([1, 1, 2.82]);
  translate([97, 166, 0])
    cube([1, 1, 2.98]);
  translate([98, 166, 0])
    cube([1, 1, 2.75]);
  translate([99, 166, 0])
    cube([1, 1, 2.43]);
  translate([100, 166, 0])
    cube([1, 1, 2.55]);
  translate([101, 166, 0])
    cube([1, 1, 2.78]);
  translate([102, 166, 0])
    cube([1, 1, 3.02]);
  translate([103, 166, 0])
    cube([1, 1, 3.14]);
  translate([104, 166, 0])
    cube([1, 1, 3.29]);
  translate([105, 166, 0])
    cube([1, 1, 3.29]);
  translate([106, 166, 0])
    cube([1, 1, 3.33]);
  translate([107, 166, 0])
    cube([1, 1, 3.33]);
  translate([108, 166, 0])
    cube([1, 1, 3.33]);
  translate([109, 166, 0])
    cube([1, 1, 3.53]);
  translate([110, 166, 0])
    cube([1, 1, 3.49]);
  translate([111, 166, 0])
    cube([1, 1, 3.49]);
  translate([112, 166, 0])
    cube([1, 1, 3.69]);
  translate([113, 166, 0])
    cube([1, 1, 3.61]);
  translate([114, 166, 0])
    cube([1, 1, 3.65]);
  translate([115, 166, 0])
    cube([1, 1, 3.57]);
  translate([116, 166, 0])
    cube([1, 1, 3.80]);
  translate([117, 166, 0])
    cube([1, 1, 4.16]);
  translate([118, 166, 0])
    cube([1, 1, 4.55]);
  translate([119, 166, 0])
    cube([1, 1, 4.86]);
  translate([120, 166, 0])
    cube([1, 1, 5.14]);
  translate([121, 166, 0])
    cube([1, 1, 5.45]);
  translate([122, 166, 0])
    cube([1, 1, 6.00]);
  translate([123, 166, 0])
    cube([1, 1, 6.39]);
  translate([124, 166, 0])
    cube([1, 1, 6.27]);
  translate([125, 166, 0])
    cube([1, 1, 5.22]);
  translate([126, 166, 0])
    cube([1, 1, 5.29]);
  translate([127, 166, 0])
    cube([1, 1, 5.33]);
  translate([128, 166, 0])
    cube([1, 1, 5.22]);
  translate([129, 166, 0])
    cube([1, 1, 5.14]);
  translate([130, 166, 0])
    cube([1, 1, 5.53]);
  translate([131, 166, 0])
    cube([1, 1, 6.00]);
  translate([132, 166, 0])
    cube([1, 1, 6.35]);
  translate([133, 166, 0])
    cube([1, 1, 6.78]);
  translate([134, 166, 0])
    cube([1, 1, 7.25]);
  translate([135, 166, 0])
    cube([1, 1, 6.20]);
  translate([136, 166, 0])
    cube([1, 1, 6.12]);
  translate([137, 166, 0])
    cube([1, 1, 6.08]);
  translate([138, 166, 0])
    cube([1, 1, 6.55]);
  translate([139, 166, 0])
    cube([1, 1, 6.82]);
  translate([140, 166, 0])
    cube([1, 1, 6.82]);
  translate([141, 166, 0])
    cube([1, 1, 2.31]);
  translate([142, 166, 0])
    cube([1, 1, 1.61]);
  translate([143, 166, 0])
    cube([1, 1, 2.78]);
  translate([144, 166, 0])
    cube([1, 1, 4.43]);
  translate([145, 166, 0])
    cube([1, 1, 2.90]);
  translate([146, 166, 0])
    cube([1, 1, 2.90]);
  translate([147, 166, 0])
    cube([1, 1, 3.25]);
  translate([148, 166, 0])
    cube([1, 1, 3.69]);
  translate([149, 166, 0])
    cube([1, 1, 4.00]);
  translate([150, 166, 0])
    cube([1, 1, 4.31]);
  translate([151, 166, 0])
    cube([1, 1, 4.71]);
  translate([152, 166, 0])
    cube([1, 1, 4.98]);
  translate([153, 166, 0])
    cube([1, 1, 5.10]);
  translate([154, 166, 0])
    cube([1, 1, 5.33]);
  translate([155, 166, 0])
    cube([1, 1, 5.57]);
  translate([156, 166, 0])
    cube([1, 1, 5.57]);
  translate([157, 166, 0])
    cube([1, 1, 5.45]);
  translate([158, 166, 0])
    cube([1, 1, 5.33]);
  translate([159, 166, 0])
    cube([1, 1, 5.25]);
  translate([160, 166, 0])
    cube([1, 1, 5.18]);
  translate([161, 166, 0])
    cube([1, 1, 5.14]);
  translate([162, 166, 0])
    cube([1, 1, 5.10]);
  translate([163, 166, 0])
    cube([1, 1, 5.14]);
  translate([164, 166, 0])
    cube([1, 1, 5.14]);
  translate([165, 166, 0])
    cube([1, 1, 5.37]);
  translate([166, 166, 0])
    cube([1, 1, 5.41]);
  translate([167, 166, 0])
    cube([1, 1, 5.84]);
  translate([168, 166, 0])
    cube([1, 1, 7.18]);
  translate([169, 166, 0])
    cube([1, 1, 1.65]);
  translate([170, 166, 0])
    cube([1, 1, 1.84]);
  translate([171, 166, 0])
    cube([1, 1, 1.73]);
  translate([172, 166, 0])
    cube([1, 1, 1.73]);
  translate([173, 166, 0])
    cube([1, 1, 1.73]);
  translate([174, 166, 0])
    cube([1, 1, 1.73]);
  translate([175, 166, 0])
    cube([1, 1, 1.73]);
  translate([176, 166, 0])
    cube([1, 1, 1.73]);
  translate([177, 166, 0])
    cube([1, 1, 1.73]);
  translate([178, 166, 0])
    cube([1, 1, 1.73]);
  translate([179, 166, 0])
    cube([1, 1, 1.73]);
  translate([180, 166, 0])
    cube([1, 1, 1.73]);
  translate([181, 166, 0])
    cube([1, 1, 1.80]);
  translate([182, 166, 0])
    cube([1, 1, 1.73]);
  translate([183, 166, 0])
    cube([1, 1, 1.73]);
  translate([184, 166, 0])
    cube([1, 1, 1.76]);
  translate([185, 166, 0])
    cube([1, 1, 1.73]);
  translate([186, 166, 0])
    cube([1, 1, 1.73]);
  translate([187, 166, 0])
    cube([1, 1, 1.76]);
  translate([188, 166, 0])
    cube([1, 1, 1.73]);
  translate([189, 166, 0])
    cube([1, 1, 1.80]);
  translate([190, 166, 0])
    cube([1, 1, 1.76]);
  translate([191, 166, 0])
    cube([1, 1, 1.76]);
  translate([192, 166, 0])
    cube([1, 1, 1.80]);
  translate([193, 166, 0])
    cube([1, 1, 1.80]);
  translate([194, 166, 0])
    cube([1, 1, 1.80]);
  translate([195, 166, 0])
    cube([1, 1, 1.80]);
  translate([196, 166, 0])
    cube([1, 1, 1.76]);
  translate([197, 166, 0])
    cube([1, 1, 1.76]);
  translate([198, 166, 0])
    cube([1, 1, 1.80]);
  translate([199, 166, 0])
    cube([1, 1, 1.80]);
  translate([200, 166, 0])
    cube([1, 1, 1.80]);
  translate([201, 166, 0])
    cube([1, 1, 1.80]);
  translate([202, 166, 0])
    cube([1, 1, 1.80]);
  translate([203, 166, 0])
    cube([1, 1, 1.80]);
  translate([204, 166, 0])
    cube([1, 1, 1.76]);
  translate([205, 166, 0])
    cube([1, 1, 1.76]);
  translate([206, 166, 0])
    cube([1, 1, 1.76]);
  translate([207, 166, 0])
    cube([1, 1, 1.76]);
  translate([208, 166, 0])
    cube([1, 1, 1.76]);
  translate([209, 166, 0])
    cube([1, 1, 1.76]);
  translate([210, 166, 0])
    cube([1, 1, 1.80]);
  translate([211, 166, 0])
    cube([1, 1, 1.80]);
  translate([212, 166, 0])
    cube([1, 1, 1.80]);
  translate([213, 166, 0])
    cube([1, 1, 1.76]);
  translate([214, 166, 0])
    cube([1, 1, 1.76]);
  translate([215, 166, 0])
    cube([1, 1, 1.76]);
  translate([216, 166, 0])
    cube([1, 1, 1.84]);
  translate([217, 166, 0])
    cube([1, 1, 1.80]);
  translate([218, 166, 0])
    cube([1, 1, 1.84]);
  translate([219, 166, 0])
    cube([1, 1, 1.76]);
  translate([220, 166, 0])
    cube([1, 1, 1.76]);
  translate([221, 166, 0])
    cube([1, 1, 1.76]);
  translate([222, 166, 0])
    cube([1, 1, 1.76]);
  translate([223, 166, 0])
    cube([1, 1, 1.76]);
  translate([224, 166, 0])
    cube([1, 1, 1.76]);
  translate([225, 166, 0])
    cube([1, 1, 1.80]);
  translate([226, 166, 0])
    cube([1, 1, 1.80]);
  translate([227, 166, 0])
    cube([1, 1, 1.76]);
  translate([228, 166, 0])
    cube([1, 1, 1.76]);
  translate([229, 166, 0])
    cube([1, 1, 1.76]);
  translate([230, 166, 0])
    cube([1, 1, 1.76]);
  translate([231, 166, 0])
    cube([1, 1, 1.76]);
  translate([232, 166, 0])
    cube([1, 1, 1.76]);
  translate([233, 166, 0])
    cube([1, 1, 1.73]);
  translate([234, 166, 0])
    cube([1, 1, 1.76]);
  translate([235, 166, 0])
    cube([1, 1, 1.76]);
  translate([236, 166, 0])
    cube([1, 1, 1.76]);
  translate([237, 166, 0])
    cube([1, 1, 1.76]);
  translate([238, 166, 0])
    cube([1, 1, 1.76]);
  translate([239, 166, 0])
    cube([1, 1, 1.76]);
  translate([240, 166, 0])
    cube([1, 1, 1.76]);
  translate([241, 166, 0])
    cube([1, 1, 1.76]);
  translate([242, 166, 0])
    cube([1, 1, 1.76]);
  translate([243, 166, 0])
    cube([1, 1, 1.76]);
  translate([244, 166, 0])
    cube([1, 1, 1.69]);
  translate([245, 166, 0])
    cube([1, 1, 1.76]);
  translate([246, 166, 0])
    cube([1, 1, 1.76]);
  translate([0, 167, 0])
    cube([1, 1, 1.92]);
  translate([1, 167, 0])
    cube([1, 1, 1.92]);
  translate([2, 167, 0])
    cube([1, 1, 1.92]);
  translate([3, 167, 0])
    cube([1, 1, 1.92]);
  translate([4, 167, 0])
    cube([1, 1, 1.92]);
  translate([5, 167, 0])
    cube([1, 1, 1.92]);
  translate([6, 167, 0])
    cube([1, 1, 1.88]);
  translate([7, 167, 0])
    cube([1, 1, 1.96]);
  translate([8, 167, 0])
    cube([1, 1, 1.92]);
  translate([9, 167, 0])
    cube([1, 1, 1.92]);
  translate([10, 167, 0])
    cube([1, 1, 1.92]);
  translate([11, 167, 0])
    cube([1, 1, 1.92]);
  translate([12, 167, 0])
    cube([1, 1, 1.92]);
  translate([13, 167, 0])
    cube([1, 1, 1.92]);
  translate([14, 167, 0])
    cube([1, 1, 1.88]);
  translate([15, 167, 0])
    cube([1, 1, 1.92]);
  translate([16, 167, 0])
    cube([1, 1, 1.92]);
  translate([17, 167, 0])
    cube([1, 1, 1.88]);
  translate([18, 167, 0])
    cube([1, 1, 1.88]);
  translate([19, 167, 0])
    cube([1, 1, 1.88]);
  translate([20, 167, 0])
    cube([1, 1, 1.84]);
  translate([21, 167, 0])
    cube([1, 1, 1.92]);
  translate([22, 167, 0])
    cube([1, 1, 1.92]);
  translate([23, 167, 0])
    cube([1, 1, 1.92]);
  translate([24, 167, 0])
    cube([1, 1, 1.88]);
  translate([25, 167, 0])
    cube([1, 1, 1.88]);
  translate([26, 167, 0])
    cube([1, 1, 1.88]);
  translate([27, 167, 0])
    cube([1, 1, 1.88]);
  translate([28, 167, 0])
    cube([1, 1, 1.88]);
  translate([29, 167, 0])
    cube([1, 1, 1.84]);
  translate([30, 167, 0])
    cube([1, 1, 1.88]);
  translate([31, 167, 0])
    cube([1, 1, 1.88]);
  translate([32, 167, 0])
    cube([1, 1, 1.92]);
  translate([33, 167, 0])
    cube([1, 1, 1.92]);
  translate([34, 167, 0])
    cube([1, 1, 1.92]);
  translate([35, 167, 0])
    cube([1, 1, 1.88]);
  translate([36, 167, 0])
    cube([1, 1, 1.88]);
  translate([37, 167, 0])
    cube([1, 1, 1.88]);
  translate([38, 167, 0])
    cube([1, 1, 1.88]);
  translate([39, 167, 0])
    cube([1, 1, 1.88]);
  translate([40, 167, 0])
    cube([1, 1, 1.88]);
  translate([41, 167, 0])
    cube([1, 1, 1.88]);
  translate([42, 167, 0])
    cube([1, 1, 1.88]);
  translate([43, 167, 0])
    cube([1, 1, 1.88]);
  translate([44, 167, 0])
    cube([1, 1, 1.84]);
  translate([45, 167, 0])
    cube([1, 1, 1.84]);
  translate([46, 167, 0])
    cube([1, 1, 1.80]);
  translate([47, 167, 0])
    cube([1, 1, 1.80]);
  translate([48, 167, 0])
    cube([1, 1, 1.84]);
  translate([49, 167, 0])
    cube([1, 1, 1.84]);
  translate([50, 167, 0])
    cube([1, 1, 1.84]);
  translate([51, 167, 0])
    cube([1, 1, 1.80]);
  translate([52, 167, 0])
    cube([1, 1, 1.84]);
  translate([53, 167, 0])
    cube([1, 1, 1.84]);
  translate([54, 167, 0])
    cube([1, 1, 1.84]);
  translate([55, 167, 0])
    cube([1, 1, 1.84]);
  translate([56, 167, 0])
    cube([1, 1, 1.84]);
  translate([57, 167, 0])
    cube([1, 1, 1.84]);
  translate([58, 167, 0])
    cube([1, 1, 1.84]);
  translate([59, 167, 0])
    cube([1, 1, 1.80]);
  translate([60, 167, 0])
    cube([1, 1, 1.65]);
  translate([61, 167, 0])
    cube([1, 1, 1.84]);
  translate([62, 167, 0])
    cube([1, 1, 5.06]);
  translate([63, 167, 0])
    cube([1, 1, 2.55]);
  translate([64, 167, 0])
    cube([1, 1, 2.35]);
  translate([65, 167, 0])
    cube([1, 1, 2.75]);
  translate([66, 167, 0])
    cube([1, 1, 3.61]);
  translate([67, 167, 0])
    cube([1, 1, 4.24]);
  translate([68, 167, 0])
    cube([1, 1, 4.51]);
  translate([69, 167, 0])
    cube([1, 1, 4.82]);
  translate([70, 167, 0])
    cube([1, 1, 4.82]);
  translate([71, 167, 0])
    cube([1, 1, 4.78]);
  translate([72, 167, 0])
    cube([1, 1, 4.63]);
  translate([73, 167, 0])
    cube([1, 1, 4.20]);
  translate([74, 167, 0])
    cube([1, 1, 1.84]);
  translate([75, 167, 0])
    cube([1, 1, 1.80]);
  translate([76, 167, 0])
    cube([1, 1, 1.80]);
  translate([77, 167, 0])
    cube([1, 1, 1.80]);
  translate([78, 167, 0])
    cube([1, 1, 1.80]);
  translate([79, 167, 0])
    cube([1, 1, 1.80]);
  translate([80, 167, 0])
    cube([1, 1, 1.80]);
  translate([81, 167, 0])
    cube([1, 1, 1.76]);
  translate([82, 167, 0])
    cube([1, 1, 1.76]);
  translate([83, 167, 0])
    cube([1, 1, 1.80]);
  translate([84, 167, 0])
    cube([1, 1, 1.69]);
  translate([85, 167, 0])
    cube([1, 1, 7.33]);
  translate([86, 167, 0])
    cube([1, 1, 8.31]);
  translate([87, 167, 0])
    cube([1, 1, 8.20]);
  translate([88, 167, 0])
    cube([1, 1, 7.29]);
  translate([89, 167, 0])
    cube([1, 1, 6.20]);
  translate([90, 167, 0])
    cube([1, 1, 5.33]);
  translate([91, 167, 0])
    cube([1, 1, 4.31]);
  translate([92, 167, 0])
    cube([1, 1, 3.69]);
  translate([93, 167, 0])
    cube([1, 1, 3.22]);
  translate([94, 167, 0])
    cube([1, 1, 2.82]);
  translate([95, 167, 0])
    cube([1, 1, 2.67]);
  translate([96, 167, 0])
    cube([1, 1, 2.71]);
  translate([97, 167, 0])
    cube([1, 1, 2.78]);
  translate([98, 167, 0])
    cube([1, 1, 2.75]);
  translate([99, 167, 0])
    cube([1, 1, 2.43]);
  translate([100, 167, 0])
    cube([1, 1, 2.39]);
  translate([101, 167, 0])
    cube([1, 1, 2.82]);
  translate([102, 167, 0])
    cube([1, 1, 2.98]);
  translate([103, 167, 0])
    cube([1, 1, 3.14]);
  translate([104, 167, 0])
    cube([1, 1, 3.25]);
  translate([105, 167, 0])
    cube([1, 1, 3.25]);
  translate([106, 167, 0])
    cube([1, 1, 3.33]);
  translate([107, 167, 0])
    cube([1, 1, 3.33]);
  translate([108, 167, 0])
    cube([1, 1, 3.41]);
  translate([109, 167, 0])
    cube([1, 1, 3.41]);
  translate([110, 167, 0])
    cube([1, 1, 3.41]);
  translate([111, 167, 0])
    cube([1, 1, 3.41]);
  translate([112, 167, 0])
    cube([1, 1, 3.69]);
  translate([113, 167, 0])
    cube([1, 1, 3.57]);
  translate([114, 167, 0])
    cube([1, 1, 3.73]);
  translate([115, 167, 0])
    cube([1, 1, 3.80]);
  translate([116, 167, 0])
    cube([1, 1, 4.08]);
  translate([117, 167, 0])
    cube([1, 1, 4.43]);
  translate([118, 167, 0])
    cube([1, 1, 4.63]);
  translate([119, 167, 0])
    cube([1, 1, 4.94]);
  translate([120, 167, 0])
    cube([1, 1, 5.22]);
  translate([121, 167, 0])
    cube([1, 1, 5.53]);
  translate([122, 167, 0])
    cube([1, 1, 6.04]);
  translate([123, 167, 0])
    cube([1, 1, 6.51]);
  translate([124, 167, 0])
    cube([1, 1, 6.16]);
  translate([125, 167, 0])
    cube([1, 1, 5.22]);
  translate([126, 167, 0])
    cube([1, 1, 5.14]);
  translate([127, 167, 0])
    cube([1, 1, 5.14]);
  translate([128, 167, 0])
    cube([1, 1, 5.14]);
  translate([129, 167, 0])
    cube([1, 1, 5.18]);
  translate([130, 167, 0])
    cube([1, 1, 5.45]);
  translate([131, 167, 0])
    cube([1, 1, 5.84]);
  translate([132, 167, 0])
    cube([1, 1, 6.16]);
  translate([133, 167, 0])
    cube([1, 1, 6.82]);
  translate([134, 167, 0])
    cube([1, 1, 7.25]);
  translate([135, 167, 0])
    cube([1, 1, 6.00]);
  translate([136, 167, 0])
    cube([1, 1, 5.80]);
  translate([137, 167, 0])
    cube([1, 1, 5.84]);
  translate([138, 167, 0])
    cube([1, 1, 6.24]);
  translate([139, 167, 0])
    cube([1, 1, 6.67]);
  translate([140, 167, 0])
    cube([1, 1, 6.59]);
  translate([141, 167, 0])
    cube([1, 1, 1.76]);
  translate([142, 167, 0])
    cube([1, 1, 1.73]);
  translate([143, 167, 0])
    cube([1, 1, 1.76]);
  translate([144, 167, 0])
    cube([1, 1, 1.96]);
  translate([145, 167, 0])
    cube([1, 1, 3.73]);
  translate([146, 167, 0])
    cube([1, 1, 2.78]);
  translate([147, 167, 0])
    cube([1, 1, 2.90]);
  translate([148, 167, 0])
    cube([1, 1, 3.29]);
  translate([149, 167, 0])
    cube([1, 1, 3.65]);
  translate([150, 167, 0])
    cube([1, 1, 3.80]);
  translate([151, 167, 0])
    cube([1, 1, 4.20]);
  translate([152, 167, 0])
    cube([1, 1, 4.47]);
  translate([153, 167, 0])
    cube([1, 1, 4.78]);
  translate([154, 167, 0])
    cube([1, 1, 4.90]);
  translate([155, 167, 0])
    cube([1, 1, 5.10]);
  translate([156, 167, 0])
    cube([1, 1, 5.14]);
  translate([157, 167, 0])
    cube([1, 1, 5.33]);
  translate([158, 167, 0])
    cube([1, 1, 5.25]);
  translate([159, 167, 0])
    cube([1, 1, 5.18]);
  translate([160, 167, 0])
    cube([1, 1, 5.06]);
  translate([161, 167, 0])
    cube([1, 1, 5.02]);
  translate([162, 167, 0])
    cube([1, 1, 5.10]);
  translate([163, 167, 0])
    cube([1, 1, 5.10]);
  translate([164, 167, 0])
    cube([1, 1, 5.02]);
  translate([165, 167, 0])
    cube([1, 1, 5.10]);
  translate([166, 167, 0])
    cube([1, 1, 5.22]);
  translate([167, 167, 0])
    cube([1, 1, 5.49]);
  translate([168, 167, 0])
    cube([1, 1, 5.92]);
  translate([169, 167, 0])
    cube([1, 1, 6.59]);
  translate([170, 167, 0])
    cube([1, 1, 1.61]);
  translate([171, 167, 0])
    cube([1, 1, 1.73]);
  translate([172, 167, 0])
    cube([1, 1, 1.76]);
  translate([173, 167, 0])
    cube([1, 1, 1.76]);
  translate([174, 167, 0])
    cube([1, 1, 1.73]);
  translate([175, 167, 0])
    cube([1, 1, 1.73]);
  translate([176, 167, 0])
    cube([1, 1, 1.73]);
  translate([177, 167, 0])
    cube([1, 1, 1.80]);
  translate([178, 167, 0])
    cube([1, 1, 1.80]);
  translate([179, 167, 0])
    cube([1, 1, 1.80]);
  translate([180, 167, 0])
    cube([1, 1, 1.73]);
  translate([181, 167, 0])
    cube([1, 1, 1.73]);
  translate([182, 167, 0])
    cube([1, 1, 1.76]);
  translate([183, 167, 0])
    cube([1, 1, 1.76]);
  translate([184, 167, 0])
    cube([1, 1, 1.76]);
  translate([185, 167, 0])
    cube([1, 1, 1.76]);
  translate([186, 167, 0])
    cube([1, 1, 1.76]);
  translate([187, 167, 0])
    cube([1, 1, 1.76]);
  translate([188, 167, 0])
    cube([1, 1, 1.76]);
  translate([189, 167, 0])
    cube([1, 1, 1.76]);
  translate([190, 167, 0])
    cube([1, 1, 1.73]);
  translate([191, 167, 0])
    cube([1, 1, 1.76]);
  translate([192, 167, 0])
    cube([1, 1, 1.80]);
  translate([193, 167, 0])
    cube([1, 1, 1.80]);
  translate([194, 167, 0])
    cube([1, 1, 1.76]);
  translate([195, 167, 0])
    cube([1, 1, 1.80]);
  translate([196, 167, 0])
    cube([1, 1, 1.76]);
  translate([197, 167, 0])
    cube([1, 1, 1.80]);
  translate([198, 167, 0])
    cube([1, 1, 1.80]);
  translate([199, 167, 0])
    cube([1, 1, 1.80]);
  translate([200, 167, 0])
    cube([1, 1, 1.80]);
  translate([201, 167, 0])
    cube([1, 1, 1.80]);
  translate([202, 167, 0])
    cube([1, 1, 1.80]);
  translate([203, 167, 0])
    cube([1, 1, 1.80]);
  translate([204, 167, 0])
    cube([1, 1, 1.80]);
  translate([205, 167, 0])
    cube([1, 1, 1.84]);
  translate([206, 167, 0])
    cube([1, 1, 1.80]);
  translate([207, 167, 0])
    cube([1, 1, 1.80]);
  translate([208, 167, 0])
    cube([1, 1, 1.88]);
  translate([209, 167, 0])
    cube([1, 1, 1.80]);
  translate([210, 167, 0])
    cube([1, 1, 1.80]);
  translate([211, 167, 0])
    cube([1, 1, 1.80]);
  translate([212, 167, 0])
    cube([1, 1, 1.80]);
  translate([213, 167, 0])
    cube([1, 1, 1.80]);
  translate([214, 167, 0])
    cube([1, 1, 1.73]);
  translate([215, 167, 0])
    cube([1, 1, 1.76]);
  translate([216, 167, 0])
    cube([1, 1, 1.80]);
  translate([217, 167, 0])
    cube([1, 1, 1.80]);
  translate([218, 167, 0])
    cube([1, 1, 1.80]);
  translate([219, 167, 0])
    cube([1, 1, 1.80]);
  translate([220, 167, 0])
    cube([1, 1, 1.76]);
  translate([221, 167, 0])
    cube([1, 1, 1.76]);
  translate([222, 167, 0])
    cube([1, 1, 1.76]);
  translate([223, 167, 0])
    cube([1, 1, 1.80]);
  translate([224, 167, 0])
    cube([1, 1, 1.80]);
  translate([225, 167, 0])
    cube([1, 1, 1.76]);
  translate([226, 167, 0])
    cube([1, 1, 1.76]);
  translate([227, 167, 0])
    cube([1, 1, 1.76]);
  translate([228, 167, 0])
    cube([1, 1, 1.76]);
  translate([229, 167, 0])
    cube([1, 1, 1.76]);
  translate([230, 167, 0])
    cube([1, 1, 1.76]);
  translate([231, 167, 0])
    cube([1, 1, 1.76]);
  translate([232, 167, 0])
    cube([1, 1, 1.76]);
  translate([233, 167, 0])
    cube([1, 1, 1.76]);
  translate([234, 167, 0])
    cube([1, 1, 1.76]);
  translate([235, 167, 0])
    cube([1, 1, 1.76]);
  translate([236, 167, 0])
    cube([1, 1, 1.76]);
  translate([237, 167, 0])
    cube([1, 1, 1.76]);
  translate([238, 167, 0])
    cube([1, 1, 1.76]);
  translate([239, 167, 0])
    cube([1, 1, 1.76]);
  translate([240, 167, 0])
    cube([1, 1, 1.76]);
  translate([241, 167, 0])
    cube([1, 1, 1.76]);
  translate([242, 167, 0])
    cube([1, 1, 1.76]);
  translate([243, 167, 0])
    cube([1, 1, 1.76]);
  translate([244, 167, 0])
    cube([1, 1, 1.76]);
  translate([245, 167, 0])
    cube([1, 1, 1.76]);
  translate([246, 167, 0])
    cube([1, 1, 1.76]);
  translate([0, 168, 0])
    cube([1, 1, 1.92]);
  translate([1, 168, 0])
    cube([1, 1, 1.96]);
  translate([2, 168, 0])
    cube([1, 1, 1.96]);
  translate([3, 168, 0])
    cube([1, 1, 1.96]);
  translate([4, 168, 0])
    cube([1, 1, 1.96]);
  translate([5, 168, 0])
    cube([1, 1, 1.96]);
  translate([6, 168, 0])
    cube([1, 1, 1.96]);
  translate([7, 168, 0])
    cube([1, 1, 2.00]);
  translate([8, 168, 0])
    cube([1, 1, 1.96]);
  translate([9, 168, 0])
    cube([1, 1, 1.96]);
  translate([10, 168, 0])
    cube([1, 1, 1.96]);
  translate([11, 168, 0])
    cube([1, 1, 1.88]);
  translate([12, 168, 0])
    cube([1, 1, 1.88]);
  translate([13, 168, 0])
    cube([1, 1, 1.88]);
  translate([14, 168, 0])
    cube([1, 1, 1.92]);
  translate([15, 168, 0])
    cube([1, 1, 1.92]);
  translate([16, 168, 0])
    cube([1, 1, 1.92]);
  translate([17, 168, 0])
    cube([1, 1, 1.92]);
  translate([18, 168, 0])
    cube([1, 1, 1.92]);
  translate([19, 168, 0])
    cube([1, 1, 1.92]);
  translate([20, 168, 0])
    cube([1, 1, 1.92]);
  translate([21, 168, 0])
    cube([1, 1, 1.92]);
  translate([22, 168, 0])
    cube([1, 1, 1.92]);
  translate([23, 168, 0])
    cube([1, 1, 1.92]);
  translate([24, 168, 0])
    cube([1, 1, 1.92]);
  translate([25, 168, 0])
    cube([1, 1, 1.92]);
  translate([26, 168, 0])
    cube([1, 1, 1.92]);
  translate([27, 168, 0])
    cube([1, 1, 1.88]);
  translate([28, 168, 0])
    cube([1, 1, 1.88]);
  translate([29, 168, 0])
    cube([1, 1, 1.88]);
  translate([30, 168, 0])
    cube([1, 1, 1.92]);
  translate([31, 168, 0])
    cube([1, 1, 1.92]);
  translate([32, 168, 0])
    cube([1, 1, 1.92]);
  translate([33, 168, 0])
    cube([1, 1, 1.92]);
  translate([34, 168, 0])
    cube([1, 1, 1.92]);
  translate([35, 168, 0])
    cube([1, 1, 1.92]);
  translate([36, 168, 0])
    cube([1, 1, 1.88]);
  translate([37, 168, 0])
    cube([1, 1, 1.88]);
  translate([38, 168, 0])
    cube([1, 1, 1.92]);
  translate([39, 168, 0])
    cube([1, 1, 1.92]);
  translate([40, 168, 0])
    cube([1, 1, 1.92]);
  translate([41, 168, 0])
    cube([1, 1, 1.92]);
  translate([42, 168, 0])
    cube([1, 1, 1.92]);
  translate([43, 168, 0])
    cube([1, 1, 1.88]);
  translate([44, 168, 0])
    cube([1, 1, 1.88]);
  translate([45, 168, 0])
    cube([1, 1, 1.92]);
  translate([46, 168, 0])
    cube([1, 1, 1.88]);
  translate([47, 168, 0])
    cube([1, 1, 1.88]);
  translate([48, 168, 0])
    cube([1, 1, 1.88]);
  translate([49, 168, 0])
    cube([1, 1, 1.84]);
  translate([50, 168, 0])
    cube([1, 1, 1.84]);
  translate([51, 168, 0])
    cube([1, 1, 1.84]);
  translate([52, 168, 0])
    cube([1, 1, 1.88]);
  translate([53, 168, 0])
    cube([1, 1, 1.88]);
  translate([54, 168, 0])
    cube([1, 1, 1.84]);
  translate([55, 168, 0])
    cube([1, 1, 1.84]);
  translate([56, 168, 0])
    cube([1, 1, 1.80]);
  translate([57, 168, 0])
    cube([1, 1, 1.84]);
  translate([58, 168, 0])
    cube([1, 1, 1.84]);
  translate([59, 168, 0])
    cube([1, 1, 1.84]);
  translate([60, 168, 0])
    cube([1, 1, 1.84]);
  translate([61, 168, 0])
    cube([1, 1, 1.84]);
  translate([62, 168, 0])
    cube([1, 1, 1.61]);
  translate([63, 168, 0])
    cube([1, 1, 3.41]);
  translate([64, 168, 0])
    cube([1, 1, 2.20]);
  translate([65, 168, 0])
    cube([1, 1, 2.08]);
  translate([66, 168, 0])
    cube([1, 1, 2.63]);
  translate([67, 168, 0])
    cube([1, 1, 3.25]);
  translate([68, 168, 0])
    cube([1, 1, 4.04]);
  translate([69, 168, 0])
    cube([1, 1, 4.78]);
  translate([70, 168, 0])
    cube([1, 1, 4.51]);
  translate([71, 168, 0])
    cube([1, 1, 4.51]);
  translate([72, 168, 0])
    cube([1, 1, 4.39]);
  translate([73, 168, 0])
    cube([1, 1, 2.04]);
  translate([74, 168, 0])
    cube([1, 1, 1.80]);
  translate([75, 168, 0])
    cube([1, 1, 1.80]);
  translate([76, 168, 0])
    cube([1, 1, 1.80]);
  translate([77, 168, 0])
    cube([1, 1, 1.80]);
  translate([78, 168, 0])
    cube([1, 1, 1.80]);
  translate([79, 168, 0])
    cube([1, 1, 1.80]);
  translate([80, 168, 0])
    cube([1, 1, 1.80]);
  translate([81, 168, 0])
    cube([1, 1, 1.80]);
  translate([82, 168, 0])
    cube([1, 1, 1.80]);
  translate([83, 168, 0])
    cube([1, 1, 1.76]);
  translate([84, 168, 0])
    cube([1, 1, 1.49]);
  translate([85, 168, 0])
    cube([1, 1, 7.84]);
  translate([86, 168, 0])
    cube([1, 1, 8.47]);
  translate([87, 168, 0])
    cube([1, 1, 8.31]);
  translate([88, 168, 0])
    cube([1, 1, 7.37]);
  translate([89, 168, 0])
    cube([1, 1, 6.43]);
  translate([90, 168, 0])
    cube([1, 1, 5.22]);
  translate([91, 168, 0])
    cube([1, 1, 4.39]);
  translate([92, 168, 0])
    cube([1, 1, 3.73]);
  translate([93, 168, 0])
    cube([1, 1, 3.25]);
  translate([94, 168, 0])
    cube([1, 1, 2.98]);
  translate([95, 168, 0])
    cube([1, 1, 2.86]);
  translate([96, 168, 0])
    cube([1, 1, 2.71]);
  translate([97, 168, 0])
    cube([1, 1, 2.59]);
  translate([98, 168, 0])
    cube([1, 1, 2.63]);
  translate([99, 168, 0])
    cube([1, 1, 2.39]);
  translate([100, 168, 0])
    cube([1, 1, 2.43]);
  translate([101, 168, 0])
    cube([1, 1, 2.71]);
  translate([102, 168, 0])
    cube([1, 1, 2.98]);
  translate([103, 168, 0])
    cube([1, 1, 3.18]);
  translate([104, 168, 0])
    cube([1, 1, 3.25]);
  translate([105, 168, 0])
    cube([1, 1, 3.29]);
  translate([106, 168, 0])
    cube([1, 1, 3.25]);
  translate([107, 168, 0])
    cube([1, 1, 3.29]);
  translate([108, 168, 0])
    cube([1, 1, 3.33]);
  translate([109, 168, 0])
    cube([1, 1, 3.33]);
  translate([110, 168, 0])
    cube([1, 1, 3.33]);
  translate([111, 168, 0])
    cube([1, 1, 3.37]);
  translate([112, 168, 0])
    cube([1, 1, 3.57]);
  translate([113, 168, 0])
    cube([1, 1, 3.57]);
  translate([114, 168, 0])
    cube([1, 1, 3.80]);
  translate([115, 168, 0])
    cube([1, 1, 4.04]);
  translate([116, 168, 0])
    cube([1, 1, 4.20]);
  translate([117, 168, 0])
    cube([1, 1, 4.43]);
  translate([118, 168, 0])
    cube([1, 1, 4.67]);
  translate([119, 168, 0])
    cube([1, 1, 4.94]);
  translate([120, 168, 0])
    cube([1, 1, 5.14]);
  translate([121, 168, 0])
    cube([1, 1, 5.45]);
  translate([122, 168, 0])
    cube([1, 1, 5.92]);
  translate([123, 168, 0])
    cube([1, 1, 6.31]);
  translate([124, 168, 0])
    cube([1, 1, 6.08]);
  translate([125, 168, 0])
    cube([1, 1, 5.06]);
  translate([126, 168, 0])
    cube([1, 1, 5.14]);
  translate([127, 168, 0])
    cube([1, 1, 4.94]);
  translate([128, 168, 0])
    cube([1, 1, 5.18]);
  translate([129, 168, 0])
    cube([1, 1, 5.10]);
  translate([130, 168, 0])
    cube([1, 1, 5.29]);
  translate([131, 168, 0])
    cube([1, 1, 5.84]);
  translate([132, 168, 0])
    cube([1, 1, 6.08]);
  translate([133, 168, 0])
    cube([1, 1, 6.78]);
  translate([134, 168, 0])
    cube([1, 1, 7.33]);
  translate([135, 168, 0])
    cube([1, 1, 6.27]);
  translate([136, 168, 0])
    cube([1, 1, 5.80]);
  translate([137, 168, 0])
    cube([1, 1, 5.76]);
  translate([138, 168, 0])
    cube([1, 1, 6.04]);
  translate([139, 168, 0])
    cube([1, 1, 6.51]);
  translate([140, 168, 0])
    cube([1, 1, 7.10]);
  translate([141, 168, 0])
    cube([1, 1, 6.71]);
  translate([142, 168, 0])
    cube([1, 1, 2.08]);
  translate([143, 168, 0])
    cube([1, 1, 2.00]);
  translate([144, 168, 0])
    cube([1, 1, 1.65]);
  translate([145, 168, 0])
    cube([1, 1, 1.57]);
  translate([146, 168, 0])
    cube([1, 1, 3.92]);
  translate([147, 168, 0])
    cube([1, 1, 2.94]);
  translate([148, 168, 0])
    cube([1, 1, 2.78]);
  translate([149, 168, 0])
    cube([1, 1, 3.14]);
  translate([150, 168, 0])
    cube([1, 1, 3.49]);
  translate([151, 168, 0])
    cube([1, 1, 3.73]);
  translate([152, 168, 0])
    cube([1, 1, 4.00]);
  translate([153, 168, 0])
    cube([1, 1, 4.24]);
  translate([154, 168, 0])
    cube([1, 1, 4.51]);
  translate([155, 168, 0])
    cube([1, 1, 4.90]);
  translate([156, 168, 0])
    cube([1, 1, 4.94]);
  translate([157, 168, 0])
    cube([1, 1, 5.10]);
  translate([158, 168, 0])
    cube([1, 1, 5.10]);
  translate([159, 168, 0])
    cube([1, 1, 5.14]);
  translate([160, 168, 0])
    cube([1, 1, 5.02]);
  translate([161, 168, 0])
    cube([1, 1, 4.94]);
  translate([162, 168, 0])
    cube([1, 1, 4.98]);
  translate([163, 168, 0])
    cube([1, 1, 4.98]);
  translate([164, 168, 0])
    cube([1, 1, 5.10]);
  translate([165, 168, 0])
    cube([1, 1, 5.10]);
  translate([166, 168, 0])
    cube([1, 1, 5.06]);
  translate([167, 168, 0])
    cube([1, 1, 5.22]);
  translate([168, 168, 0])
    cube([1, 1, 5.57]);
  translate([169, 168, 0])
    cube([1, 1, 5.80]);
  translate([170, 168, 0])
    cube([1, 1, 6.67]);
  translate([171, 168, 0])
    cube([1, 1, 1.37]);
  translate([172, 168, 0])
    cube([1, 1, 1.73]);
  translate([173, 168, 0])
    cube([1, 1, 1.73]);
  translate([174, 168, 0])
    cube([1, 1, 1.73]);
  translate([175, 168, 0])
    cube([1, 1, 1.76]);
  translate([176, 168, 0])
    cube([1, 1, 1.76]);
  translate([177, 168, 0])
    cube([1, 1, 1.76]);
  translate([178, 168, 0])
    cube([1, 1, 1.73]);
  translate([179, 168, 0])
    cube([1, 1, 1.73]);
  translate([180, 168, 0])
    cube([1, 1, 1.73]);
  translate([181, 168, 0])
    cube([1, 1, 1.76]);
  translate([182, 168, 0])
    cube([1, 1, 1.76]);
  translate([183, 168, 0])
    cube([1, 1, 1.76]);
  translate([184, 168, 0])
    cube([1, 1, 1.76]);
  translate([185, 168, 0])
    cube([1, 1, 1.76]);
  translate([186, 168, 0])
    cube([1, 1, 1.76]);
  translate([187, 168, 0])
    cube([1, 1, 1.80]);
  translate([188, 168, 0])
    cube([1, 1, 1.76]);
  translate([189, 168, 0])
    cube([1, 1, 1.76]);
  translate([190, 168, 0])
    cube([1, 1, 1.80]);
  translate([191, 168, 0])
    cube([1, 1, 1.76]);
  translate([192, 168, 0])
    cube([1, 1, 1.80]);
  translate([193, 168, 0])
    cube([1, 1, 1.80]);
  translate([194, 168, 0])
    cube([1, 1, 1.76]);
  translate([195, 168, 0])
    cube([1, 1, 1.80]);
  translate([196, 168, 0])
    cube([1, 1, 1.76]);
  translate([197, 168, 0])
    cube([1, 1, 1.76]);
  translate([198, 168, 0])
    cube([1, 1, 1.80]);
  translate([199, 168, 0])
    cube([1, 1, 1.80]);
  translate([200, 168, 0])
    cube([1, 1, 1.80]);
  translate([201, 168, 0])
    cube([1, 1, 1.80]);
  translate([202, 168, 0])
    cube([1, 1, 1.80]);
  translate([203, 168, 0])
    cube([1, 1, 1.80]);
  translate([204, 168, 0])
    cube([1, 1, 1.80]);
  translate([205, 168, 0])
    cube([1, 1, 1.80]);
  translate([206, 168, 0])
    cube([1, 1, 1.80]);
  translate([207, 168, 0])
    cube([1, 1, 1.80]);
  translate([208, 168, 0])
    cube([1, 1, 1.84]);
  translate([209, 168, 0])
    cube([1, 1, 1.76]);
  translate([210, 168, 0])
    cube([1, 1, 1.76]);
  translate([211, 168, 0])
    cube([1, 1, 1.76]);
  translate([212, 168, 0])
    cube([1, 1, 1.80]);
  translate([213, 168, 0])
    cube([1, 1, 1.80]);
  translate([214, 168, 0])
    cube([1, 1, 1.76]);
  translate([215, 168, 0])
    cube([1, 1, 1.80]);
  translate([216, 168, 0])
    cube([1, 1, 1.80]);
  translate([217, 168, 0])
    cube([1, 1, 1.76]);
  translate([218, 168, 0])
    cube([1, 1, 1.80]);
  translate([219, 168, 0])
    cube([1, 1, 1.80]);
  translate([220, 168, 0])
    cube([1, 1, 1.76]);
  translate([221, 168, 0])
    cube([1, 1, 1.76]);
  translate([222, 168, 0])
    cube([1, 1, 1.73]);
  translate([223, 168, 0])
    cube([1, 1, 1.80]);
  translate([224, 168, 0])
    cube([1, 1, 1.80]);
  translate([225, 168, 0])
    cube([1, 1, 1.76]);
  translate([226, 168, 0])
    cube([1, 1, 1.80]);
  translate([227, 168, 0])
    cube([1, 1, 1.80]);
  translate([228, 168, 0])
    cube([1, 1, 1.80]);
  translate([229, 168, 0])
    cube([1, 1, 1.80]);
  translate([230, 168, 0])
    cube([1, 1, 1.80]);
  translate([231, 168, 0])
    cube([1, 1, 1.80]);
  translate([232, 168, 0])
    cube([1, 1, 1.80]);
  translate([233, 168, 0])
    cube([1, 1, 1.80]);
  translate([234, 168, 0])
    cube([1, 1, 1.80]);
  translate([235, 168, 0])
    cube([1, 1, 1.76]);
  translate([236, 168, 0])
    cube([1, 1, 1.73]);
  translate([237, 168, 0])
    cube([1, 1, 1.76]);
  translate([238, 168, 0])
    cube([1, 1, 1.76]);
  translate([239, 168, 0])
    cube([1, 1, 1.76]);
  translate([240, 168, 0])
    cube([1, 1, 1.76]);
  translate([241, 168, 0])
    cube([1, 1, 1.76]);
  translate([242, 168, 0])
    cube([1, 1, 1.76]);
  translate([243, 168, 0])
    cube([1, 1, 1.76]);
  translate([244, 168, 0])
    cube([1, 1, 1.80]);
  translate([245, 168, 0])
    cube([1, 1, 1.80]);
  translate([246, 168, 0])
    cube([1, 1, 1.76]);
  translate([0, 169, 0])
    cube([1, 1, 2.00]);
  translate([1, 169, 0])
    cube([1, 1, 1.96]);
  translate([2, 169, 0])
    cube([1, 1, 1.96]);
  translate([3, 169, 0])
    cube([1, 1, 1.96]);
  translate([4, 169, 0])
    cube([1, 1, 1.96]);
  translate([5, 169, 0])
    cube([1, 1, 1.96]);
  translate([6, 169, 0])
    cube([1, 1, 1.96]);
  translate([7, 169, 0])
    cube([1, 1, 2.00]);
  translate([8, 169, 0])
    cube([1, 1, 1.96]);
  translate([9, 169, 0])
    cube([1, 1, 1.96]);
  translate([10, 169, 0])
    cube([1, 1, 1.96]);
  translate([11, 169, 0])
    cube([1, 1, 1.96]);
  translate([12, 169, 0])
    cube([1, 1, 1.96]);
  translate([13, 169, 0])
    cube([1, 1, 1.96]);
  translate([14, 169, 0])
    cube([1, 1, 1.92]);
  translate([15, 169, 0])
    cube([1, 1, 1.92]);
  translate([16, 169, 0])
    cube([1, 1, 1.92]);
  translate([17, 169, 0])
    cube([1, 1, 1.92]);
  translate([18, 169, 0])
    cube([1, 1, 1.92]);
  translate([19, 169, 0])
    cube([1, 1, 1.96]);
  translate([20, 169, 0])
    cube([1, 1, 1.92]);
  translate([21, 169, 0])
    cube([1, 1, 1.92]);
  translate([22, 169, 0])
    cube([1, 1, 1.92]);
  translate([23, 169, 0])
    cube([1, 1, 1.92]);
  translate([24, 169, 0])
    cube([1, 1, 1.92]);
  translate([25, 169, 0])
    cube([1, 1, 1.88]);
  translate([26, 169, 0])
    cube([1, 1, 1.88]);
  translate([27, 169, 0])
    cube([1, 1, 1.96]);
  translate([28, 169, 0])
    cube([1, 1, 1.96]);
  translate([29, 169, 0])
    cube([1, 1, 1.96]);
  translate([30, 169, 0])
    cube([1, 1, 1.92]);
  translate([31, 169, 0])
    cube([1, 1, 1.92]);
  translate([32, 169, 0])
    cube([1, 1, 1.92]);
  translate([33, 169, 0])
    cube([1, 1, 1.92]);
  translate([34, 169, 0])
    cube([1, 1, 1.92]);
  translate([35, 169, 0])
    cube([1, 1, 1.84]);
  translate([36, 169, 0])
    cube([1, 1, 1.92]);
  translate([37, 169, 0])
    cube([1, 1, 1.92]);
  translate([38, 169, 0])
    cube([1, 1, 1.92]);
  translate([39, 169, 0])
    cube([1, 1, 1.92]);
  translate([40, 169, 0])
    cube([1, 1, 1.92]);
  translate([41, 169, 0])
    cube([1, 1, 1.84]);
  translate([42, 169, 0])
    cube([1, 1, 1.84]);
  translate([43, 169, 0])
    cube([1, 1, 1.88]);
  translate([44, 169, 0])
    cube([1, 1, 1.88]);
  translate([45, 169, 0])
    cube([1, 1, 1.92]);
  translate([46, 169, 0])
    cube([1, 1, 1.88]);
  translate([47, 169, 0])
    cube([1, 1, 1.88]);
  translate([48, 169, 0])
    cube([1, 1, 1.88]);
  translate([49, 169, 0])
    cube([1, 1, 1.84]);
  translate([50, 169, 0])
    cube([1, 1, 1.84]);
  translate([51, 169, 0])
    cube([1, 1, 1.84]);
  translate([52, 169, 0])
    cube([1, 1, 1.88]);
  translate([53, 169, 0])
    cube([1, 1, 1.88]);
  translate([54, 169, 0])
    cube([1, 1, 1.88]);
  translate([55, 169, 0])
    cube([1, 1, 1.88]);
  translate([56, 169, 0])
    cube([1, 1, 1.80]);
  translate([57, 169, 0])
    cube([1, 1, 1.84]);
  translate([58, 169, 0])
    cube([1, 1, 1.84]);
  translate([59, 169, 0])
    cube([1, 1, 1.84]);
  translate([60, 169, 0])
    cube([1, 1, 1.84]);
  translate([61, 169, 0])
    cube([1, 1, 1.84]);
  translate([62, 169, 0])
    cube([1, 1, 1.69]);
  translate([63, 169, 0])
    cube([1, 1, 2.16]);
  translate([64, 169, 0])
    cube([1, 1, 2.27]);
  translate([65, 169, 0])
    cube([1, 1, 2.31]);
  translate([66, 169, 0])
    cube([1, 1, 1.96]);
  translate([67, 169, 0])
    cube([1, 1, 2.04]);
  translate([68, 169, 0])
    cube([1, 1, 2.63]);
  translate([69, 169, 0])
    cube([1, 1, 3.45]);
  translate([70, 169, 0])
    cube([1, 1, 3.92]);
  translate([71, 169, 0])
    cube([1, 1, 3.84]);
  translate([72, 169, 0])
    cube([1, 1, 1.88]);
  translate([73, 169, 0])
    cube([1, 1, 1.80]);
  translate([74, 169, 0])
    cube([1, 1, 1.80]);
  translate([75, 169, 0])
    cube([1, 1, 1.80]);
  translate([76, 169, 0])
    cube([1, 1, 1.80]);
  translate([77, 169, 0])
    cube([1, 1, 1.80]);
  translate([78, 169, 0])
    cube([1, 1, 1.80]);
  translate([79, 169, 0])
    cube([1, 1, 1.80]);
  translate([80, 169, 0])
    cube([1, 1, 1.80]);
  translate([81, 169, 0])
    cube([1, 1, 1.80]);
  translate([82, 169, 0])
    cube([1, 1, 1.80]);
  translate([83, 169, 0])
    cube([1, 1, 1.73]);
  translate([84, 169, 0])
    cube([1, 1, 7.65]);
  translate([85, 169, 0])
    cube([1, 1, 8.20]);
  translate([86, 169, 0])
    cube([1, 1, 8.51]);
  translate([87, 169, 0])
    cube([1, 1, 8.31]);
  translate([88, 169, 0])
    cube([1, 1, 7.65]);
  translate([89, 169, 0])
    cube([1, 1, 6.55]);
  translate([90, 169, 0])
    cube([1, 1, 5.33]);
  translate([91, 169, 0])
    cube([1, 1, 4.47]);
  translate([92, 169, 0])
    cube([1, 1, 3.73]);
  translate([93, 169, 0])
    cube([1, 1, 3.25]);
  translate([94, 169, 0])
    cube([1, 1, 3.06]);
  translate([95, 169, 0])
    cube([1, 1, 3.06]);
  translate([96, 169, 0])
    cube([1, 1, 2.86]);
  translate([97, 169, 0])
    cube([1, 1, 2.71]);
  translate([98, 169, 0])
    cube([1, 1, 2.59]);
  translate([99, 169, 0])
    cube([1, 1, 2.55]);
  translate([100, 169, 0])
    cube([1, 1, 2.47]);
  translate([101, 169, 0])
    cube([1, 1, 2.78]);
  translate([102, 169, 0])
    cube([1, 1, 3.02]);
  translate([103, 169, 0])
    cube([1, 1, 3.10]);
  translate([104, 169, 0])
    cube([1, 1, 3.25]);
  translate([105, 169, 0])
    cube([1, 1, 3.29]);
  translate([106, 169, 0])
    cube([1, 1, 3.25]);
  translate([107, 169, 0])
    cube([1, 1, 3.29]);
  translate([108, 169, 0])
    cube([1, 1, 3.29]);
  translate([109, 169, 0])
    cube([1, 1, 3.29]);
  translate([110, 169, 0])
    cube([1, 1, 3.29]);
  translate([111, 169, 0])
    cube([1, 1, 3.45]);
  translate([112, 169, 0])
    cube([1, 1, 3.61]);
  translate([113, 169, 0])
    cube([1, 1, 3.76]);
  translate([114, 169, 0])
    cube([1, 1, 3.88]);
  translate([115, 169, 0])
    cube([1, 1, 4.04]);
  translate([116, 169, 0])
    cube([1, 1, 4.24]);
  translate([117, 169, 0])
    cube([1, 1, 4.43]);
  translate([118, 169, 0])
    cube([1, 1, 4.59]);
  translate([119, 169, 0])
    cube([1, 1, 4.90]);
  translate([120, 169, 0])
    cube([1, 1, 5.14]);
  translate([121, 169, 0])
    cube([1, 1, 5.37]);
  translate([122, 169, 0])
    cube([1, 1, 5.88]);
  translate([123, 169, 0])
    cube([1, 1, 6.35]);
  translate([124, 169, 0])
    cube([1, 1, 6.12]);
  translate([125, 169, 0])
    cube([1, 1, 5.14]);
  translate([126, 169, 0])
    cube([1, 1, 5.02]);
  translate([127, 169, 0])
    cube([1, 1, 5.02]);
  translate([128, 169, 0])
    cube([1, 1, 4.90]);
  translate([129, 169, 0])
    cube([1, 1, 5.10]);
  translate([130, 169, 0])
    cube([1, 1, 5.41]);
  translate([131, 169, 0])
    cube([1, 1, 5.61]);
  translate([132, 169, 0])
    cube([1, 1, 6.16]);
  translate([133, 169, 0])
    cube([1, 1, 6.75]);
  translate([134, 169, 0])
    cube([1, 1, 7.22]);
  translate([135, 169, 0])
    cube([1, 1, 6.86]);
  translate([136, 169, 0])
    cube([1, 1, 5.73]);
  translate([137, 169, 0])
    cube([1, 1, 5.73]);
  translate([138, 169, 0])
    cube([1, 1, 5.96]);
  translate([139, 169, 0])
    cube([1, 1, 6.39]);
  translate([140, 169, 0])
    cube([1, 1, 7.06]);
  translate([141, 169, 0])
    cube([1, 1, 6.67]);
  translate([142, 169, 0])
    cube([1, 1, 2.31]);
  translate([143, 169, 0])
    cube([1, 1, 1.57]);
  translate([144, 169, 0])
    cube([1, 1, 1.45]);
  translate([145, 169, 0])
    cube([1, 1, 1.22]);
  translate([146, 169, 0])
    cube([1, 1, 1.76]);
  translate([147, 169, 0])
    cube([1, 1, 4.04]);
  translate([148, 169, 0])
    cube([1, 1, 2.75]);
  translate([149, 169, 0])
    cube([1, 1, 2.90]);
  translate([150, 169, 0])
    cube([1, 1, 3.18]);
  translate([151, 169, 0])
    cube([1, 1, 3.41]);
  translate([152, 169, 0])
    cube([1, 1, 3.65]);
  translate([153, 169, 0])
    cube([1, 1, 3.80]);
  translate([154, 169, 0])
    cube([1, 1, 4.08]);
  translate([155, 169, 0])
    cube([1, 1, 4.31]);
  translate([156, 169, 0])
    cube([1, 1, 4.63]);
  translate([157, 169, 0])
    cube([1, 1, 4.78]);
  translate([158, 169, 0])
    cube([1, 1, 4.90]);
  translate([159, 169, 0])
    cube([1, 1, 4.94]);
  translate([160, 169, 0])
    cube([1, 1, 5.06]);
  translate([161, 169, 0])
    cube([1, 1, 4.94]);
  translate([162, 169, 0])
    cube([1, 1, 4.98]);
  translate([163, 169, 0])
    cube([1, 1, 5.10]);
  translate([164, 169, 0])
    cube([1, 1, 5.22]);
  translate([165, 169, 0])
    cube([1, 1, 5.22]);
  translate([166, 169, 0])
    cube([1, 1, 5.14]);
  translate([167, 169, 0])
    cube([1, 1, 5.18]);
  translate([168, 169, 0])
    cube([1, 1, 5.41]);
  translate([169, 169, 0])
    cube([1, 1, 5.45]);
  translate([170, 169, 0])
    cube([1, 1, 5.96]);
  translate([171, 169, 0])
    cube([1, 1, 6.59]);
  translate([172, 169, 0])
    cube([1, 1, 1.73]);
  translate([173, 169, 0])
    cube([1, 1, 1.73]);
  translate([174, 169, 0])
    cube([1, 1, 1.73]);
  translate([175, 169, 0])
    cube([1, 1, 1.76]);
  translate([176, 169, 0])
    cube([1, 1, 1.76]);
  translate([177, 169, 0])
    cube([1, 1, 1.73]);
  translate([178, 169, 0])
    cube([1, 1, 1.80]);
  translate([179, 169, 0])
    cube([1, 1, 1.76]);
  translate([180, 169, 0])
    cube([1, 1, 1.73]);
  translate([181, 169, 0])
    cube([1, 1, 1.76]);
  translate([182, 169, 0])
    cube([1, 1, 1.76]);
  translate([183, 169, 0])
    cube([1, 1, 1.76]);
  translate([184, 169, 0])
    cube([1, 1, 1.80]);
  translate([185, 169, 0])
    cube([1, 1, 1.80]);
  translate([186, 169, 0])
    cube([1, 1, 1.80]);
  translate([187, 169, 0])
    cube([1, 1, 1.80]);
  translate([188, 169, 0])
    cube([1, 1, 1.80]);
  translate([189, 169, 0])
    cube([1, 1, 1.80]);
  translate([190, 169, 0])
    cube([1, 1, 1.76]);
  translate([191, 169, 0])
    cube([1, 1, 1.84]);
  translate([192, 169, 0])
    cube([1, 1, 1.80]);
  translate([193, 169, 0])
    cube([1, 1, 1.76]);
  translate([194, 169, 0])
    cube([1, 1, 1.80]);
  translate([195, 169, 0])
    cube([1, 1, 1.80]);
  translate([196, 169, 0])
    cube([1, 1, 1.80]);
  translate([197, 169, 0])
    cube([1, 1, 1.80]);
  translate([198, 169, 0])
    cube([1, 1, 1.80]);
  translate([199, 169, 0])
    cube([1, 1, 1.80]);
  translate([200, 169, 0])
    cube([1, 1, 1.80]);
  translate([201, 169, 0])
    cube([1, 1, 1.80]);
  translate([202, 169, 0])
    cube([1, 1, 1.80]);
  translate([203, 169, 0])
    cube([1, 1, 1.80]);
  translate([204, 169, 0])
    cube([1, 1, 1.80]);
  translate([205, 169, 0])
    cube([1, 1, 1.80]);
  translate([206, 169, 0])
    cube([1, 1, 1.80]);
  translate([207, 169, 0])
    cube([1, 1, 1.80]);
  translate([208, 169, 0])
    cube([1, 1, 1.84]);
  translate([209, 169, 0])
    cube([1, 1, 1.80]);
  translate([210, 169, 0])
    cube([1, 1, 1.80]);
  translate([211, 169, 0])
    cube([1, 1, 1.76]);
  translate([212, 169, 0])
    cube([1, 1, 1.80]);
  translate([213, 169, 0])
    cube([1, 1, 1.80]);
  translate([214, 169, 0])
    cube([1, 1, 1.80]);
  translate([215, 169, 0])
    cube([1, 1, 1.84]);
  translate([216, 169, 0])
    cube([1, 1, 1.80]);
  translate([217, 169, 0])
    cube([1, 1, 1.80]);
  translate([218, 169, 0])
    cube([1, 1, 1.76]);
  translate([219, 169, 0])
    cube([1, 1, 1.80]);
  translate([220, 169, 0])
    cube([1, 1, 1.76]);
  translate([221, 169, 0])
    cube([1, 1, 1.76]);
  translate([222, 169, 0])
    cube([1, 1, 1.80]);
  translate([223, 169, 0])
    cube([1, 1, 1.80]);
  translate([224, 169, 0])
    cube([1, 1, 1.80]);
  translate([225, 169, 0])
    cube([1, 1, 1.76]);
  translate([226, 169, 0])
    cube([1, 1, 1.80]);
  translate([227, 169, 0])
    cube([1, 1, 1.80]);
  translate([228, 169, 0])
    cube([1, 1, 1.80]);
  translate([229, 169, 0])
    cube([1, 1, 1.80]);
  translate([230, 169, 0])
    cube([1, 1, 1.80]);
  translate([231, 169, 0])
    cube([1, 1, 1.80]);
  translate([232, 169, 0])
    cube([1, 1, 1.80]);
  translate([233, 169, 0])
    cube([1, 1, 1.80]);
  translate([234, 169, 0])
    cube([1, 1, 1.80]);
  translate([235, 169, 0])
    cube([1, 1, 1.76]);
  translate([236, 169, 0])
    cube([1, 1, 1.73]);
  translate([237, 169, 0])
    cube([1, 1, 1.76]);
  translate([238, 169, 0])
    cube([1, 1, 1.76]);
  translate([239, 169, 0])
    cube([1, 1, 1.76]);
  translate([240, 169, 0])
    cube([1, 1, 1.76]);
  translate([241, 169, 0])
    cube([1, 1, 1.76]);
  translate([242, 169, 0])
    cube([1, 1, 1.76]);
  translate([243, 169, 0])
    cube([1, 1, 1.80]);
  translate([244, 169, 0])
    cube([1, 1, 1.80]);
  translate([245, 169, 0])
    cube([1, 1, 1.80]);
  translate([246, 169, 0])
    cube([1, 1, 1.76]);
  translate([0, 170, 0])
    cube([1, 1, 1.96]);
  translate([1, 170, 0])
    cube([1, 1, 1.96]);
  translate([2, 170, 0])
    cube([1, 1, 1.96]);
  translate([3, 170, 0])
    cube([1, 1, 1.96]);
  translate([4, 170, 0])
    cube([1, 1, 1.96]);
  translate([5, 170, 0])
    cube([1, 1, 1.96]);
  translate([6, 170, 0])
    cube([1, 1, 1.96]);
  translate([7, 170, 0])
    cube([1, 1, 1.96]);
  translate([8, 170, 0])
    cube([1, 1, 1.96]);
  translate([9, 170, 0])
    cube([1, 1, 1.96]);
  translate([10, 170, 0])
    cube([1, 1, 1.96]);
  translate([11, 170, 0])
    cube([1, 1, 1.96]);
  translate([12, 170, 0])
    cube([1, 1, 1.96]);
  translate([13, 170, 0])
    cube([1, 1, 1.96]);
  translate([14, 170, 0])
    cube([1, 1, 1.96]);
  translate([15, 170, 0])
    cube([1, 1, 1.96]);
  translate([16, 170, 0])
    cube([1, 1, 2.00]);
  translate([17, 170, 0])
    cube([1, 1, 1.92]);
  translate([18, 170, 0])
    cube([1, 1, 1.92]);
  translate([19, 170, 0])
    cube([1, 1, 1.96]);
  translate([20, 170, 0])
    cube([1, 1, 1.92]);
  translate([21, 170, 0])
    cube([1, 1, 1.96]);
  translate([22, 170, 0])
    cube([1, 1, 1.92]);
  translate([23, 170, 0])
    cube([1, 1, 2.00]);
  translate([24, 170, 0])
    cube([1, 1, 1.92]);
  translate([25, 170, 0])
    cube([1, 1, 1.92]);
  translate([26, 170, 0])
    cube([1, 1, 2.00]);
  translate([27, 170, 0])
    cube([1, 1, 1.96]);
  translate([28, 170, 0])
    cube([1, 1, 1.96]);
  translate([29, 170, 0])
    cube([1, 1, 1.96]);
  translate([30, 170, 0])
    cube([1, 1, 1.92]);
  translate([31, 170, 0])
    cube([1, 1, 1.92]);
  translate([32, 170, 0])
    cube([1, 1, 1.92]);
  translate([33, 170, 0])
    cube([1, 1, 1.92]);
  translate([34, 170, 0])
    cube([1, 1, 1.92]);
  translate([35, 170, 0])
    cube([1, 1, 1.92]);
  translate([36, 170, 0])
    cube([1, 1, 1.92]);
  translate([37, 170, 0])
    cube([1, 1, 1.92]);
  translate([38, 170, 0])
    cube([1, 1, 1.92]);
  translate([39, 170, 0])
    cube([1, 1, 1.92]);
  translate([40, 170, 0])
    cube([1, 1, 1.92]);
  translate([41, 170, 0])
    cube([1, 1, 1.92]);
  translate([42, 170, 0])
    cube([1, 1, 1.92]);
  translate([43, 170, 0])
    cube([1, 1, 1.92]);
  translate([44, 170, 0])
    cube([1, 1, 1.92]);
  translate([45, 170, 0])
    cube([1, 1, 1.92]);
  translate([46, 170, 0])
    cube([1, 1, 1.88]);
  translate([47, 170, 0])
    cube([1, 1, 1.88]);
  translate([48, 170, 0])
    cube([1, 1, 1.88]);
  translate([49, 170, 0])
    cube([1, 1, 1.92]);
  translate([50, 170, 0])
    cube([1, 1, 1.92]);
  translate([51, 170, 0])
    cube([1, 1, 1.92]);
  translate([52, 170, 0])
    cube([1, 1, 1.88]);
  translate([53, 170, 0])
    cube([1, 1, 1.88]);
  translate([54, 170, 0])
    cube([1, 1, 1.88]);
  translate([55, 170, 0])
    cube([1, 1, 1.92]);
  translate([56, 170, 0])
    cube([1, 1, 1.88]);
  translate([57, 170, 0])
    cube([1, 1, 1.88]);
  translate([58, 170, 0])
    cube([1, 1, 1.88]);
  translate([59, 170, 0])
    cube([1, 1, 1.88]);
  translate([60, 170, 0])
    cube([1, 1, 1.84]);
  translate([61, 170, 0])
    cube([1, 1, 1.84]);
  translate([62, 170, 0])
    cube([1, 1, 1.84]);
  translate([63, 170, 0])
    cube([1, 1, 1.88]);
  translate([64, 170, 0])
    cube([1, 1, 1.88]);
  translate([65, 170, 0])
    cube([1, 1, 1.76]);
  translate([66, 170, 0])
    cube([1, 1, 1.80]);
  translate([67, 170, 0])
    cube([1, 1, 1.84]);
  translate([68, 170, 0])
    cube([1, 1, 1.80]);
  translate([69, 170, 0])
    cube([1, 1, 1.88]);
  translate([70, 170, 0])
    cube([1, 1, 1.88]);
  translate([71, 170, 0])
    cube([1, 1, 1.73]);
  translate([72, 170, 0])
    cube([1, 1, 1.88]);
  translate([73, 170, 0])
    cube([1, 1, 1.80]);
  translate([74, 170, 0])
    cube([1, 1, 1.80]);
  translate([75, 170, 0])
    cube([1, 1, 1.80]);
  translate([76, 170, 0])
    cube([1, 1, 1.80]);
  translate([77, 170, 0])
    cube([1, 1, 1.80]);
  translate([78, 170, 0])
    cube([1, 1, 1.80]);
  translate([79, 170, 0])
    cube([1, 1, 1.84]);
  translate([80, 170, 0])
    cube([1, 1, 2.04]);
  translate([81, 170, 0])
    cube([1, 1, 1.84]);
  translate([82, 170, 0])
    cube([1, 1, 2.20]);
  translate([83, 170, 0])
    cube([1, 1, 3.14]);
  translate([84, 170, 0])
    cube([1, 1, 7.29]);
  translate([85, 170, 0])
    cube([1, 1, 8.63]);
  translate([86, 170, 0])
    cube([1, 1, 8.43]);
  translate([87, 170, 0])
    cube([1, 1, 8.12]);
  translate([88, 170, 0])
    cube([1, 1, 7.41]);
  translate([89, 170, 0])
    cube([1, 1, 6.43]);
  translate([90, 170, 0])
    cube([1, 1, 5.41]);
  translate([91, 170, 0])
    cube([1, 1, 4.51]);
  translate([92, 170, 0])
    cube([1, 1, 3.69]);
  translate([93, 170, 0])
    cube([1, 1, 3.25]);
  translate([94, 170, 0])
    cube([1, 1, 3.10]);
  translate([95, 170, 0])
    cube([1, 1, 3.10]);
  translate([96, 170, 0])
    cube([1, 1, 3.06]);
  translate([97, 170, 0])
    cube([1, 1, 2.86]);
  translate([98, 170, 0])
    cube([1, 1, 2.75]);
  translate([99, 170, 0])
    cube([1, 1, 2.59]);
  translate([100, 170, 0])
    cube([1, 1, 2.59]);
  translate([101, 170, 0])
    cube([1, 1, 2.75]);
  translate([102, 170, 0])
    cube([1, 1, 2.98]);
  translate([103, 170, 0])
    cube([1, 1, 3.14]);
  translate([104, 170, 0])
    cube([1, 1, 3.29]);
  translate([105, 170, 0])
    cube([1, 1, 3.33]);
  translate([106, 170, 0])
    cube([1, 1, 3.29]);
  translate([107, 170, 0])
    cube([1, 1, 3.29]);
  translate([108, 170, 0])
    cube([1, 1, 3.25]);
  translate([109, 170, 0])
    cube([1, 1, 3.25]);
  translate([110, 170, 0])
    cube([1, 1, 3.37]);
  translate([111, 170, 0])
    cube([1, 1, 3.49]);
  translate([112, 170, 0])
    cube([1, 1, 3.69]);
  translate([113, 170, 0])
    cube([1, 1, 3.76]);
  translate([114, 170, 0])
    cube([1, 1, 4.00]);
  translate([115, 170, 0])
    cube([1, 1, 4.24]);
  translate([116, 170, 0])
    cube([1, 1, 4.31]);
  translate([117, 170, 0])
    cube([1, 1, 4.47]);
  translate([118, 170, 0])
    cube([1, 1, 4.71]);
  translate([119, 170, 0])
    cube([1, 1, 4.90]);
  translate([120, 170, 0])
    cube([1, 1, 5.10]);
  translate([121, 170, 0])
    cube([1, 1, 5.41]);
  translate([122, 170, 0])
    cube([1, 1, 5.88]);
  translate([123, 170, 0])
    cube([1, 1, 6.16]);
  translate([124, 170, 0])
    cube([1, 1, 5.88]);
  translate([125, 170, 0])
    cube([1, 1, 5.14]);
  translate([126, 170, 0])
    cube([1, 1, 5.06]);
  translate([127, 170, 0])
    cube([1, 1, 4.90]);
  translate([128, 170, 0])
    cube([1, 1, 4.94]);
  translate([129, 170, 0])
    cube([1, 1, 4.94]);
  translate([130, 170, 0])
    cube([1, 1, 5.25]);
  translate([131, 170, 0])
    cube([1, 1, 5.69]);
  translate([132, 170, 0])
    cube([1, 1, 6.16]);
  translate([133, 170, 0])
    cube([1, 1, 6.82]);
  translate([134, 170, 0])
    cube([1, 1, 7.57]);
  translate([135, 170, 0])
    cube([1, 1, 7.18]);
  translate([136, 170, 0])
    cube([1, 1, 5.65]);
  translate([137, 170, 0])
    cube([1, 1, 5.69]);
  translate([138, 170, 0])
    cube([1, 1, 5.76]);
  translate([139, 170, 0])
    cube([1, 1, 6.20]);
  translate([140, 170, 0])
    cube([1, 1, 6.94]);
  translate([141, 170, 0])
    cube([1, 1, 1.73]);
  translate([142, 170, 0])
    cube([1, 1, 2.39]);
  translate([143, 170, 0])
    cube([1, 1, 1.49]);
  translate([144, 170, 0])
    cube([1, 1, 2.31]);
  translate([145, 170, 0])
    cube([1, 1, 1.65]);
  translate([146, 170, 0])
    cube([1, 1, 1.73]);
  translate([147, 170, 0])
    cube([1, 1, 1.65]);
  translate([148, 170, 0])
    cube([1, 1, 4.08]);
  translate([149, 170, 0])
    cube([1, 1, 2.75]);
  translate([150, 170, 0])
    cube([1, 1, 2.67]);
  translate([151, 170, 0])
    cube([1, 1, 3.14]);
  translate([152, 170, 0])
    cube([1, 1, 3.41]);
  translate([153, 170, 0])
    cube([1, 1, 3.53]);
  translate([154, 170, 0])
    cube([1, 1, 3.88]);
  translate([155, 170, 0])
    cube([1, 1, 4.16]);
  translate([156, 170, 0])
    cube([1, 1, 4.24]);
  translate([157, 170, 0])
    cube([1, 1, 4.55]);
  translate([158, 170, 0])
    cube([1, 1, 4.71]);
  translate([159, 170, 0])
    cube([1, 1, 4.82]);
  translate([160, 170, 0])
    cube([1, 1, 4.90]);
  translate([161, 170, 0])
    cube([1, 1, 4.86]);
  translate([162, 170, 0])
    cube([1, 1, 4.94]);
  translate([163, 170, 0])
    cube([1, 1, 5.10]);
  translate([164, 170, 0])
    cube([1, 1, 5.22]);
  translate([165, 170, 0])
    cube([1, 1, 5.29]);
  translate([166, 170, 0])
    cube([1, 1, 5.29]);
  translate([167, 170, 0])
    cube([1, 1, 5.29]);
  translate([168, 170, 0])
    cube([1, 1, 5.33]);
  translate([169, 170, 0])
    cube([1, 1, 5.45]);
  translate([170, 170, 0])
    cube([1, 1, 5.61]);
  translate([171, 170, 0])
    cube([1, 1, 6.12]);
  translate([172, 170, 0])
    cube([1, 1, 6.94]);
  translate([173, 170, 0])
    cube([1, 1, 1.61]);
  translate([174, 170, 0])
    cube([1, 1, 1.73]);
  translate([175, 170, 0])
    cube([1, 1, 1.73]);
  translate([176, 170, 0])
    cube([1, 1, 1.80]);
  translate([177, 170, 0])
    cube([1, 1, 1.76]);
  translate([178, 170, 0])
    cube([1, 1, 1.76]);
  translate([179, 170, 0])
    cube([1, 1, 1.80]);
  translate([180, 170, 0])
    cube([1, 1, 1.76]);
  translate([181, 170, 0])
    cube([1, 1, 1.76]);
  translate([182, 170, 0])
    cube([1, 1, 1.76]);
  translate([183, 170, 0])
    cube([1, 1, 1.80]);
  translate([184, 170, 0])
    cube([1, 1, 1.80]);
  translate([185, 170, 0])
    cube([1, 1, 1.80]);
  translate([186, 170, 0])
    cube([1, 1, 1.80]);
  translate([187, 170, 0])
    cube([1, 1, 1.80]);
  translate([188, 170, 0])
    cube([1, 1, 1.80]);
  translate([189, 170, 0])
    cube([1, 1, 1.80]);
  translate([190, 170, 0])
    cube([1, 1, 1.76]);
  translate([191, 170, 0])
    cube([1, 1, 1.80]);
  translate([192, 170, 0])
    cube([1, 1, 1.80]);
  translate([193, 170, 0])
    cube([1, 1, 1.80]);
  translate([194, 170, 0])
    cube([1, 1, 1.80]);
  translate([195, 170, 0])
    cube([1, 1, 1.80]);
  translate([196, 170, 0])
    cube([1, 1, 1.80]);
  translate([197, 170, 0])
    cube([1, 1, 1.80]);
  translate([198, 170, 0])
    cube([1, 1, 1.80]);
  translate([199, 170, 0])
    cube([1, 1, 1.80]);
  translate([200, 170, 0])
    cube([1, 1, 1.80]);
  translate([201, 170, 0])
    cube([1, 1, 1.80]);
  translate([202, 170, 0])
    cube([1, 1, 1.80]);
  translate([203, 170, 0])
    cube([1, 1, 1.80]);
  translate([204, 170, 0])
    cube([1, 1, 1.80]);
  translate([205, 170, 0])
    cube([1, 1, 1.80]);
  translate([206, 170, 0])
    cube([1, 1, 1.80]);
  translate([207, 170, 0])
    cube([1, 1, 1.80]);
  translate([208, 170, 0])
    cube([1, 1, 1.80]);
  translate([209, 170, 0])
    cube([1, 1, 1.80]);
  translate([210, 170, 0])
    cube([1, 1, 1.80]);
  translate([211, 170, 0])
    cube([1, 1, 1.80]);
  translate([212, 170, 0])
    cube([1, 1, 1.80]);
  translate([213, 170, 0])
    cube([1, 1, 1.80]);
  translate([214, 170, 0])
    cube([1, 1, 1.76]);
  translate([215, 170, 0])
    cube([1, 1, 1.80]);
  translate([216, 170, 0])
    cube([1, 1, 1.80]);
  translate([217, 170, 0])
    cube([1, 1, 1.80]);
  translate([218, 170, 0])
    cube([1, 1, 1.80]);
  translate([219, 170, 0])
    cube([1, 1, 1.80]);
  translate([220, 170, 0])
    cube([1, 1, 1.76]);
  translate([221, 170, 0])
    cube([1, 1, 1.80]);
  translate([222, 170, 0])
    cube([1, 1, 1.80]);
  translate([223, 170, 0])
    cube([1, 1, 1.80]);
  translate([224, 170, 0])
    cube([1, 1, 1.80]);
  translate([225, 170, 0])
    cube([1, 1, 1.80]);
  translate([226, 170, 0])
    cube([1, 1, 1.80]);
  translate([227, 170, 0])
    cube([1, 1, 1.80]);
  translate([228, 170, 0])
    cube([1, 1, 1.73]);
  translate([229, 170, 0])
    cube([1, 1, 1.80]);
  translate([230, 170, 0])
    cube([1, 1, 1.80]);
  translate([231, 170, 0])
    cube([1, 1, 1.80]);
  translate([232, 170, 0])
    cube([1, 1, 1.76]);
  translate([233, 170, 0])
    cube([1, 1, 1.80]);
  translate([234, 170, 0])
    cube([1, 1, 1.80]);
  translate([235, 170, 0])
    cube([1, 1, 1.80]);
  translate([236, 170, 0])
    cube([1, 1, 1.76]);
  translate([237, 170, 0])
    cube([1, 1, 1.76]);
  translate([238, 170, 0])
    cube([1, 1, 1.76]);
  translate([239, 170, 0])
    cube([1, 1, 1.80]);
  translate([240, 170, 0])
    cube([1, 1, 1.76]);
  translate([241, 170, 0])
    cube([1, 1, 1.76]);
  translate([242, 170, 0])
    cube([1, 1, 1.80]);
  translate([243, 170, 0])
    cube([1, 1, 1.80]);
  translate([244, 170, 0])
    cube([1, 1, 1.76]);
  translate([245, 170, 0])
    cube([1, 1, 1.76]);
  translate([246, 170, 0])
    cube([1, 1, 1.80]);
  translate([0, 171, 0])
    cube([1, 1, 1.96]);
  translate([1, 171, 0])
    cube([1, 1, 1.96]);
  translate([2, 171, 0])
    cube([1, 1, 1.96]);
  translate([3, 171, 0])
    cube([1, 1, 1.96]);
  translate([4, 171, 0])
    cube([1, 1, 1.88]);
  translate([5, 171, 0])
    cube([1, 1, 2.00]);
  translate([6, 171, 0])
    cube([1, 1, 1.96]);
  translate([7, 171, 0])
    cube([1, 1, 1.96]);
  translate([8, 171, 0])
    cube([1, 1, 1.96]);
  translate([9, 171, 0])
    cube([1, 1, 1.96]);
  translate([10, 171, 0])
    cube([1, 1, 1.96]);
  translate([11, 171, 0])
    cube([1, 1, 1.96]);
  translate([12, 171, 0])
    cube([1, 1, 1.96]);
  translate([13, 171, 0])
    cube([1, 1, 1.96]);
  translate([14, 171, 0])
    cube([1, 1, 1.96]);
  translate([15, 171, 0])
    cube([1, 1, 1.96]);
  translate([16, 171, 0])
    cube([1, 1, 2.00]);
  translate([17, 171, 0])
    cube([1, 1, 1.92]);
  translate([18, 171, 0])
    cube([1, 1, 1.92]);
  translate([19, 171, 0])
    cube([1, 1, 1.96]);
  translate([20, 171, 0])
    cube([1, 1, 1.92]);
  translate([21, 171, 0])
    cube([1, 1, 1.96]);
  translate([22, 171, 0])
    cube([1, 1, 1.96]);
  translate([23, 171, 0])
    cube([1, 1, 1.96]);
  translate([24, 171, 0])
    cube([1, 1, 1.92]);
  translate([25, 171, 0])
    cube([1, 1, 1.92]);
  translate([26, 171, 0])
    cube([1, 1, 2.00]);
  translate([27, 171, 0])
    cube([1, 1, 1.96]);
  translate([28, 171, 0])
    cube([1, 1, 1.96]);
  translate([29, 171, 0])
    cube([1, 1, 1.96]);
  translate([30, 171, 0])
    cube([1, 1, 1.92]);
  translate([31, 171, 0])
    cube([1, 1, 1.92]);
  translate([32, 171, 0])
    cube([1, 1, 1.96]);
  translate([33, 171, 0])
    cube([1, 1, 1.92]);
  translate([34, 171, 0])
    cube([1, 1, 1.92]);
  translate([35, 171, 0])
    cube([1, 1, 1.92]);
  translate([36, 171, 0])
    cube([1, 1, 1.92]);
  translate([37, 171, 0])
    cube([1, 1, 1.92]);
  translate([38, 171, 0])
    cube([1, 1, 1.92]);
  translate([39, 171, 0])
    cube([1, 1, 1.92]);
  translate([40, 171, 0])
    cube([1, 1, 1.92]);
  translate([41, 171, 0])
    cube([1, 1, 1.92]);
  translate([42, 171, 0])
    cube([1, 1, 1.92]);
  translate([43, 171, 0])
    cube([1, 1, 1.92]);
  translate([44, 171, 0])
    cube([1, 1, 1.92]);
  translate([45, 171, 0])
    cube([1, 1, 1.92]);
  translate([46, 171, 0])
    cube([1, 1, 1.92]);
  translate([47, 171, 0])
    cube([1, 1, 1.92]);
  translate([48, 171, 0])
    cube([1, 1, 1.92]);
  translate([49, 171, 0])
    cube([1, 1, 1.92]);
  translate([50, 171, 0])
    cube([1, 1, 1.92]);
  translate([51, 171, 0])
    cube([1, 1, 1.92]);
  translate([52, 171, 0])
    cube([1, 1, 1.88]);
  translate([53, 171, 0])
    cube([1, 1, 1.88]);
  translate([54, 171, 0])
    cube([1, 1, 1.88]);
  translate([55, 171, 0])
    cube([1, 1, 1.92]);
  translate([56, 171, 0])
    cube([1, 1, 1.92]);
  translate([57, 171, 0])
    cube([1, 1, 1.88]);
  translate([58, 171, 0])
    cube([1, 1, 1.88]);
  translate([59, 171, 0])
    cube([1, 1, 1.88]);
  translate([60, 171, 0])
    cube([1, 1, 1.92]);
  translate([61, 171, 0])
    cube([1, 1, 1.92]);
  translate([62, 171, 0])
    cube([1, 1, 1.84]);
  translate([63, 171, 0])
    cube([1, 1, 1.88]);
  translate([64, 171, 0])
    cube([1, 1, 1.88]);
  translate([65, 171, 0])
    cube([1, 1, 1.84]);
  translate([66, 171, 0])
    cube([1, 1, 1.92]);
  translate([67, 171, 0])
    cube([1, 1, 2.00]);
  translate([68, 171, 0])
    cube([1, 1, 1.92]);
  translate([69, 171, 0])
    cube([1, 1, 1.84]);
  translate([70, 171, 0])
    cube([1, 1, 1.88]);
  translate([71, 171, 0])
    cube([1, 1, 1.76]);
  translate([72, 171, 0])
    cube([1, 1, 1.80]);
  translate([73, 171, 0])
    cube([1, 1, 1.80]);
  translate([74, 171, 0])
    cube([1, 1, 1.80]);
  translate([75, 171, 0])
    cube([1, 1, 1.80]);
  translate([76, 171, 0])
    cube([1, 1, 1.80]);
  translate([77, 171, 0])
    cube([1, 1, 1.80]);
  translate([78, 171, 0])
    cube([1, 1, 1.80]);
  translate([79, 171, 0])
    cube([1, 1, 1.84]);
  translate([80, 171, 0])
    cube([1, 1, 1.92]);
  translate([81, 171, 0])
    cube([1, 1, 1.76]);
  translate([82, 171, 0])
    cube([1, 1, 0.82]);
  translate([83, 171, 0])
    cube([1, 1, 1.14]);
  translate([84, 171, 0])
    cube([1, 1, 1.41]);
  translate([85, 171, 0])
    cube([1, 1, 8.04]);
  translate([86, 171, 0])
    cube([1, 1, 8.08]);
  translate([87, 171, 0])
    cube([1, 1, 7.88]);
  translate([88, 171, 0])
    cube([1, 1, 7.18]);
  translate([89, 171, 0])
    cube([1, 1, 6.31]);
  translate([90, 171, 0])
    cube([1, 1, 5.41]);
  translate([91, 171, 0])
    cube([1, 1, 4.43]);
  translate([92, 171, 0])
    cube([1, 1, 3.84]);
  translate([93, 171, 0])
    cube([1, 1, 3.33]);
  translate([94, 171, 0])
    cube([1, 1, 3.22]);
  translate([95, 171, 0])
    cube([1, 1, 3.22]);
  translate([96, 171, 0])
    cube([1, 1, 3.25]);
  translate([97, 171, 0])
    cube([1, 1, 3.10]);
  translate([98, 171, 0])
    cube([1, 1, 3.06]);
  translate([99, 171, 0])
    cube([1, 1, 2.86]);
  translate([100, 171, 0])
    cube([1, 1, 2.67]);
  translate([101, 171, 0])
    cube([1, 1, 2.86]);
  translate([102, 171, 0])
    cube([1, 1, 3.02]);
  translate([103, 171, 0])
    cube([1, 1, 3.18]);
  translate([104, 171, 0])
    cube([1, 1, 3.33]);
  translate([105, 171, 0])
    cube([1, 1, 3.45]);
  translate([106, 171, 0])
    cube([1, 1, 3.41]);
  translate([107, 171, 0])
    cube([1, 1, 3.33]);
  translate([108, 171, 0])
    cube([1, 1, 3.29]);
  translate([109, 171, 0])
    cube([1, 1, 3.49]);
  translate([110, 171, 0])
    cube([1, 1, 3.49]);
  translate([111, 171, 0])
    cube([1, 1, 3.57]);
  translate([112, 171, 0])
    cube([1, 1, 3.80]);
  translate([113, 171, 0])
    cube([1, 1, 3.88]);
  translate([114, 171, 0])
    cube([1, 1, 4.08]);
  translate([115, 171, 0])
    cube([1, 1, 4.39]);
  translate([116, 171, 0])
    cube([1, 1, 4.55]);
  translate([117, 171, 0])
    cube([1, 1, 4.63]);
  translate([118, 171, 0])
    cube([1, 1, 4.86]);
  translate([119, 171, 0])
    cube([1, 1, 5.02]);
  translate([120, 171, 0])
    cube([1, 1, 5.02]);
  translate([121, 171, 0])
    cube([1, 1, 5.25]);
  translate([122, 171, 0])
    cube([1, 1, 5.73]);
  translate([123, 171, 0])
    cube([1, 1, 6.04]);
  translate([124, 171, 0])
    cube([1, 1, 5.69]);
  translate([125, 171, 0])
    cube([1, 1, 5.06]);
  translate([126, 171, 0])
    cube([1, 1, 4.98]);
  translate([127, 171, 0])
    cube([1, 1, 4.98]);
  translate([128, 171, 0])
    cube([1, 1, 4.86]);
  translate([129, 171, 0])
    cube([1, 1, 5.02]);
  translate([130, 171, 0])
    cube([1, 1, 5.18]);
  translate([131, 171, 0])
    cube([1, 1, 5.76]);
  translate([132, 171, 0])
    cube([1, 1, 6.27]);
  translate([133, 171, 0])
    cube([1, 1, 6.86]);
  translate([134, 171, 0])
    cube([1, 1, 7.53]);
  translate([135, 171, 0])
    cube([1, 1, 7.33]);
  translate([136, 171, 0])
    cube([1, 1, 5.92]);
  translate([137, 171, 0])
    cube([1, 1, 5.88]);
  translate([138, 171, 0])
    cube([1, 1, 5.73]);
  translate([139, 171, 0])
    cube([1, 1, 5.76]);
  translate([140, 171, 0])
    cube([1, 1, 4.67]);
  translate([141, 171, 0])
    cube([1, 1, 1.76]);
  translate([142, 171, 0])
    cube([1, 1, 2.31]);
  translate([143, 171, 0])
    cube([1, 1, 6.16]);
  translate([144, 171, 0])
    cube([1, 1, 3.10]);
  translate([145, 171, 0])
    cube([1, 1, 1.69]);
  translate([146, 171, 0])
    cube([1, 1, 1.73]);
  translate([147, 171, 0])
    cube([1, 1, 1.69]);
  translate([148, 171, 0])
    cube([1, 1, 1.49]);
  translate([149, 171, 0])
    cube([1, 1, 2.00]);
  translate([150, 171, 0])
    cube([1, 1, 3.14]);
  translate([151, 171, 0])
    cube([1, 1, 2.67]);
  translate([152, 171, 0])
    cube([1, 1, 3.06]);
  translate([153, 171, 0])
    cube([1, 1, 3.14]);
  translate([154, 171, 0])
    cube([1, 1, 3.37]);
  translate([155, 171, 0])
    cube([1, 1, 3.53]);
  translate([156, 171, 0])
    cube([1, 1, 4.00]);
  translate([157, 171, 0])
    cube([1, 1, 4.12]);
  translate([158, 171, 0])
    cube([1, 1, 4.27]);
  translate([159, 171, 0])
    cube([1, 1, 4.51]);
  translate([160, 171, 0])
    cube([1, 1, 4.78]);
  translate([161, 171, 0])
    cube([1, 1, 4.82]);
  translate([162, 171, 0])
    cube([1, 1, 4.90]);
  translate([163, 171, 0])
    cube([1, 1, 5.10]);
  translate([164, 171, 0])
    cube([1, 1, 5.10]);
  translate([165, 171, 0])
    cube([1, 1, 5.29]);
  translate([166, 171, 0])
    cube([1, 1, 5.41]);
  translate([167, 171, 0])
    cube([1, 1, 5.41]);
  translate([168, 171, 0])
    cube([1, 1, 5.45]);
  translate([169, 171, 0])
    cube([1, 1, 5.33]);
  translate([170, 171, 0])
    cube([1, 1, 5.57]);
  translate([171, 171, 0])
    cube([1, 1, 5.84]);
  translate([172, 171, 0])
    cube([1, 1, 5.96]);
  translate([173, 171, 0])
    cube([1, 1, 7.02]);
  translate([174, 171, 0])
    cube([1, 1, 1.69]);
  translate([175, 171, 0])
    cube([1, 1, 1.80]);
  translate([176, 171, 0])
    cube([1, 1, 1.80]);
  translate([177, 171, 0])
    cube([1, 1, 1.80]);
  translate([178, 171, 0])
    cube([1, 1, 1.80]);
  translate([179, 171, 0])
    cube([1, 1, 1.80]);
  translate([180, 171, 0])
    cube([1, 1, 1.76]);
  translate([181, 171, 0])
    cube([1, 1, 1.76]);
  translate([182, 171, 0])
    cube([1, 1, 1.76]);
  translate([183, 171, 0])
    cube([1, 1, 1.80]);
  translate([184, 171, 0])
    cube([1, 1, 1.80]);
  translate([185, 171, 0])
    cube([1, 1, 1.80]);
  translate([186, 171, 0])
    cube([1, 1, 1.80]);
  translate([187, 171, 0])
    cube([1, 1, 1.80]);
  translate([188, 171, 0])
    cube([1, 1, 1.80]);
  translate([189, 171, 0])
    cube([1, 1, 1.80]);
  translate([190, 171, 0])
    cube([1, 1, 1.76]);
  translate([191, 171, 0])
    cube([1, 1, 1.80]);
  translate([192, 171, 0])
    cube([1, 1, 1.80]);
  translate([193, 171, 0])
    cube([1, 1, 1.80]);
  translate([194, 171, 0])
    cube([1, 1, 1.80]);
  translate([195, 171, 0])
    cube([1, 1, 1.80]);
  translate([196, 171, 0])
    cube([1, 1, 1.80]);
  translate([197, 171, 0])
    cube([1, 1, 1.80]);
  translate([198, 171, 0])
    cube([1, 1, 1.80]);
  translate([199, 171, 0])
    cube([1, 1, 1.80]);
  translate([200, 171, 0])
    cube([1, 1, 1.80]);
  translate([201, 171, 0])
    cube([1, 1, 1.80]);
  translate([202, 171, 0])
    cube([1, 1, 1.80]);
  translate([203, 171, 0])
    cube([1, 1, 1.80]);
  translate([204, 171, 0])
    cube([1, 1, 1.80]);
  translate([205, 171, 0])
    cube([1, 1, 1.80]);
  translate([206, 171, 0])
    cube([1, 1, 1.80]);
  translate([207, 171, 0])
    cube([1, 1, 1.80]);
  translate([208, 171, 0])
    cube([1, 1, 1.80]);
  translate([209, 171, 0])
    cube([1, 1, 1.80]);
  translate([210, 171, 0])
    cube([1, 1, 1.80]);
  translate([211, 171, 0])
    cube([1, 1, 1.80]);
  translate([212, 171, 0])
    cube([1, 1, 1.80]);
  translate([213, 171, 0])
    cube([1, 1, 1.80]);
  translate([214, 171, 0])
    cube([1, 1, 1.76]);
  translate([215, 171, 0])
    cube([1, 1, 1.80]);
  translate([216, 171, 0])
    cube([1, 1, 1.84]);
  translate([217, 171, 0])
    cube([1, 1, 1.80]);
  translate([218, 171, 0])
    cube([1, 1, 1.80]);
  translate([219, 171, 0])
    cube([1, 1, 1.80]);
  translate([220, 171, 0])
    cube([1, 1, 1.76]);
  translate([221, 171, 0])
    cube([1, 1, 1.80]);
  translate([222, 171, 0])
    cube([1, 1, 1.80]);
  translate([223, 171, 0])
    cube([1, 1, 1.80]);
  translate([224, 171, 0])
    cube([1, 1, 1.80]);
  translate([225, 171, 0])
    cube([1, 1, 1.80]);
  translate([226, 171, 0])
    cube([1, 1, 1.80]);
  translate([227, 171, 0])
    cube([1, 1, 1.80]);
  translate([228, 171, 0])
    cube([1, 1, 1.84]);
  translate([229, 171, 0])
    cube([1, 1, 1.80]);
  translate([230, 171, 0])
    cube([1, 1, 1.80]);
  translate([231, 171, 0])
    cube([1, 1, 1.80]);
  translate([232, 171, 0])
    cube([1, 1, 1.76]);
  translate([233, 171, 0])
    cube([1, 1, 1.80]);
  translate([234, 171, 0])
    cube([1, 1, 1.80]);
  translate([235, 171, 0])
    cube([1, 1, 1.80]);
  translate([236, 171, 0])
    cube([1, 1, 1.76]);
  translate([237, 171, 0])
    cube([1, 1, 1.76]);
  translate([238, 171, 0])
    cube([1, 1, 1.76]);
  translate([239, 171, 0])
    cube([1, 1, 1.80]);
  translate([240, 171, 0])
    cube([1, 1, 1.76]);
  translate([241, 171, 0])
    cube([1, 1, 1.76]);
  translate([242, 171, 0])
    cube([1, 1, 1.80]);
  translate([243, 171, 0])
    cube([1, 1, 1.80]);
  translate([244, 171, 0])
    cube([1, 1, 1.76]);
  translate([245, 171, 0])
    cube([1, 1, 1.76]);
  translate([246, 171, 0])
    cube([1, 1, 1.80]);
  translate([0, 172, 0])
    cube([1, 1, 1.96]);
  translate([1, 172, 0])
    cube([1, 1, 1.92]);
  translate([2, 172, 0])
    cube([1, 1, 1.92]);
  translate([3, 172, 0])
    cube([1, 1, 1.92]);
  translate([4, 172, 0])
    cube([1, 1, 1.92]);
  translate([5, 172, 0])
    cube([1, 1, 1.96]);
  translate([6, 172, 0])
    cube([1, 1, 2.00]);
  translate([7, 172, 0])
    cube([1, 1, 2.00]);
  translate([8, 172, 0])
    cube([1, 1, 1.96]);
  translate([9, 172, 0])
    cube([1, 1, 1.96]);
  translate([10, 172, 0])
    cube([1, 1, 1.96]);
  translate([11, 172, 0])
    cube([1, 1, 1.96]);
  translate([12, 172, 0])
    cube([1, 1, 1.92]);
  translate([13, 172, 0])
    cube([1, 1, 1.96]);
  translate([14, 172, 0])
    cube([1, 1, 2.00]);
  translate([15, 172, 0])
    cube([1, 1, 2.00]);
  translate([16, 172, 0])
    cube([1, 1, 1.92]);
  translate([17, 172, 0])
    cube([1, 1, 1.96]);
  translate([18, 172, 0])
    cube([1, 1, 1.96]);
  translate([19, 172, 0])
    cube([1, 1, 1.96]);
  translate([20, 172, 0])
    cube([1, 1, 1.96]);
  translate([21, 172, 0])
    cube([1, 1, 1.96]);
  translate([22, 172, 0])
    cube([1, 1, 1.96]);
  translate([23, 172, 0])
    cube([1, 1, 1.96]);
  translate([24, 172, 0])
    cube([1, 1, 1.96]);
  translate([25, 172, 0])
    cube([1, 1, 1.96]);
  translate([26, 172, 0])
    cube([1, 1, 1.96]);
  translate([27, 172, 0])
    cube([1, 1, 1.92]);
  translate([28, 172, 0])
    cube([1, 1, 1.96]);
  translate([29, 172, 0])
    cube([1, 1, 1.96]);
  translate([30, 172, 0])
    cube([1, 1, 1.96]);
  translate([31, 172, 0])
    cube([1, 1, 1.96]);
  translate([32, 172, 0])
    cube([1, 1, 1.96]);
  translate([33, 172, 0])
    cube([1, 1, 1.96]);
  translate([34, 172, 0])
    cube([1, 1, 1.96]);
  translate([35, 172, 0])
    cube([1, 1, 1.92]);
  translate([36, 172, 0])
    cube([1, 1, 1.92]);
  translate([37, 172, 0])
    cube([1, 1, 1.92]);
  translate([38, 172, 0])
    cube([1, 1, 1.92]);
  translate([39, 172, 0])
    cube([1, 1, 1.92]);
  translate([40, 172, 0])
    cube([1, 1, 1.92]);
  translate([41, 172, 0])
    cube([1, 1, 1.92]);
  translate([42, 172, 0])
    cube([1, 1, 1.92]);
  translate([43, 172, 0])
    cube([1, 1, 1.92]);
  translate([44, 172, 0])
    cube([1, 1, 1.92]);
  translate([45, 172, 0])
    cube([1, 1, 1.92]);
  translate([46, 172, 0])
    cube([1, 1, 1.92]);
  translate([47, 172, 0])
    cube([1, 1, 1.92]);
  translate([48, 172, 0])
    cube([1, 1, 1.92]);
  translate([49, 172, 0])
    cube([1, 1, 1.92]);
  translate([50, 172, 0])
    cube([1, 1, 1.92]);
  translate([51, 172, 0])
    cube([1, 1, 1.92]);
  translate([52, 172, 0])
    cube([1, 1, 1.92]);
  translate([53, 172, 0])
    cube([1, 1, 1.92]);
  translate([54, 172, 0])
    cube([1, 1, 1.80]);
  translate([55, 172, 0])
    cube([1, 1, 1.92]);
  translate([56, 172, 0])
    cube([1, 1, 1.92]);
  translate([57, 172, 0])
    cube([1, 1, 1.92]);
  translate([58, 172, 0])
    cube([1, 1, 1.92]);
  translate([59, 172, 0])
    cube([1, 1, 1.88]);
  translate([60, 172, 0])
    cube([1, 1, 1.80]);
  translate([61, 172, 0])
    cube([1, 1, 1.84]);
  translate([62, 172, 0])
    cube([1, 1, 1.88]);
  translate([63, 172, 0])
    cube([1, 1, 1.88]);
  translate([64, 172, 0])
    cube([1, 1, 1.92]);
  translate([65, 172, 0])
    cube([1, 1, 1.92]);
  translate([66, 172, 0])
    cube([1, 1, 1.92]);
  translate([67, 172, 0])
    cube([1, 1, 1.92]);
  translate([68, 172, 0])
    cube([1, 1, 1.80]);
  translate([69, 172, 0])
    cube([1, 1, 1.80]);
  translate([70, 172, 0])
    cube([1, 1, 1.84]);
  translate([71, 172, 0])
    cube([1, 1, 1.88]);
  translate([72, 172, 0])
    cube([1, 1, 1.84]);
  translate([73, 172, 0])
    cube([1, 1, 1.84]);
  translate([74, 172, 0])
    cube([1, 1, 1.84]);
  translate([75, 172, 0])
    cube([1, 1, 1.84]);
  translate([76, 172, 0])
    cube([1, 1, 1.76]);
  translate([77, 172, 0])
    cube([1, 1, 2.04]);
  translate([78, 172, 0])
    cube([1, 1, 1.37]);
  translate([79, 172, 0])
    cube([1, 1, 1.57]);
  translate([80, 172, 0])
    cube([1, 1, 1.29]);
  translate([81, 172, 0])
    cube([1, 1, 1.41]);
  translate([82, 172, 0])
    cube([1, 1, 1.73]);
  translate([83, 172, 0])
    cube([1, 1, 0.47]);
  translate([84, 172, 0])
    cube([1, 1, 2.51]);
  translate([85, 172, 0])
    cube([1, 1, 1.80]);
  translate([86, 172, 0])
    cube([1, 1, 7.22]);
  translate([87, 172, 0])
    cube([1, 1, 7.18]);
  translate([88, 172, 0])
    cube([1, 1, 6.55]);
  translate([89, 172, 0])
    cube([1, 1, 5.84]);
  translate([90, 172, 0])
    cube([1, 1, 4.90]);
  translate([91, 172, 0])
    cube([1, 1, 4.20]);
  translate([92, 172, 0])
    cube([1, 1, 3.76]);
  translate([93, 172, 0])
    cube([1, 1, 3.41]);
  translate([94, 172, 0])
    cube([1, 1, 3.37]);
  translate([95, 172, 0])
    cube([1, 1, 3.41]);
  translate([96, 172, 0])
    cube([1, 1, 3.37]);
  translate([97, 172, 0])
    cube([1, 1, 3.45]);
  translate([98, 172, 0])
    cube([1, 1, 3.33]);
  translate([99, 172, 0])
    cube([1, 1, 3.14]);
  translate([100, 172, 0])
    cube([1, 1, 2.94]);
  translate([101, 172, 0])
    cube([1, 1, 2.98]);
  translate([102, 172, 0])
    cube([1, 1, 3.02]);
  translate([103, 172, 0])
    cube([1, 1, 3.25]);
  translate([104, 172, 0])
    cube([1, 1, 3.33]);
  translate([105, 172, 0])
    cube([1, 1, 3.45]);
  translate([106, 172, 0])
    cube([1, 1, 3.45]);
  translate([107, 172, 0])
    cube([1, 1, 3.49]);
  translate([108, 172, 0])
    cube([1, 1, 3.49]);
  translate([109, 172, 0])
    cube([1, 1, 3.61]);
  translate([110, 172, 0])
    cube([1, 1, 3.57]);
  translate([111, 172, 0])
    cube([1, 1, 3.73]);
  translate([112, 172, 0])
    cube([1, 1, 3.88]);
  translate([113, 172, 0])
    cube([1, 1, 3.88]);
  translate([114, 172, 0])
    cube([1, 1, 4.24]);
  translate([115, 172, 0])
    cube([1, 1, 4.35]);
  translate([116, 172, 0])
    cube([1, 1, 4.55]);
  translate([117, 172, 0])
    cube([1, 1, 4.63]);
  translate([118, 172, 0])
    cube([1, 1, 4.71]);
  translate([119, 172, 0])
    cube([1, 1, 4.82]);
  translate([120, 172, 0])
    cube([1, 1, 5.14]);
  translate([121, 172, 0])
    cube([1, 1, 5.18]);
  translate([122, 172, 0])
    cube([1, 1, 5.76]);
  translate([123, 172, 0])
    cube([1, 1, 5.92]);
  translate([124, 172, 0])
    cube([1, 1, 5.41]);
  translate([125, 172, 0])
    cube([1, 1, 5.10]);
  translate([126, 172, 0])
    cube([1, 1, 4.90]);
  translate([127, 172, 0])
    cube([1, 1, 4.98]);
  translate([128, 172, 0])
    cube([1, 1, 4.94]);
  translate([129, 172, 0])
    cube([1, 1, 5.10]);
  translate([130, 172, 0])
    cube([1, 1, 5.33]);
  translate([131, 172, 0])
    cube([1, 1, 5.80]);
  translate([132, 172, 0])
    cube([1, 1, 6.27]);
  translate([133, 172, 0])
    cube([1, 1, 7.14]);
  translate([134, 172, 0])
    cube([1, 1, 7.53]);
  translate([135, 172, 0])
    cube([1, 1, 7.29]);
  translate([136, 172, 0])
    cube([1, 1, 6.00]);
  translate([137, 172, 0])
    cube([1, 1, 5.73]);
  translate([138, 172, 0])
    cube([1, 1, 5.92]);
  translate([139, 172, 0])
    cube([1, 1, 2.00]);
  translate([140, 172, 0])
    cube([1, 1, 1.92]);
  translate([141, 172, 0])
    cube([1, 1, 2.24]);
  translate([142, 172, 0])
    cube([1, 1, 0.90]);
  translate([143, 172, 0])
    cube([1, 1, 1.53]);
  translate([144, 172, 0])
    cube([1, 1, 3.33]);
  translate([145, 172, 0])
    cube([1, 1, 1.65]);
  translate([146, 172, 0])
    cube([1, 1, 1.57]);
  translate([147, 172, 0])
    cube([1, 1, 1.73]);
  translate([148, 172, 0])
    cube([1, 1, 1.33]);
  translate([149, 172, 0])
    cube([1, 1, 1.53]);
  translate([150, 172, 0])
    cube([1, 1, 1.49]);
  translate([151, 172, 0])
    cube([1, 1, 4.04]);
  translate([152, 172, 0])
    cube([1, 1, 2.82]);
  translate([153, 172, 0])
    cube([1, 1, 2.75]);
  translate([154, 172, 0])
    cube([1, 1, 3.10]);
  translate([155, 172, 0])
    cube([1, 1, 3.14]);
  translate([156, 172, 0])
    cube([1, 1, 3.45]);
  translate([157, 172, 0])
    cube([1, 1, 3.84]);
  translate([158, 172, 0])
    cube([1, 1, 4.08]);
  translate([159, 172, 0])
    cube([1, 1, 4.31]);
  translate([160, 172, 0])
    cube([1, 1, 4.47]);
  translate([161, 172, 0])
    cube([1, 1, 4.67]);
  translate([162, 172, 0])
    cube([1, 1, 4.90]);
  translate([163, 172, 0])
    cube([1, 1, 5.02]);
  translate([164, 172, 0])
    cube([1, 1, 5.22]);
  translate([165, 172, 0])
    cube([1, 1, 5.33]);
  translate([166, 172, 0])
    cube([1, 1, 5.41]);
  translate([167, 172, 0])
    cube([1, 1, 5.53]);
  translate([168, 172, 0])
    cube([1, 1, 5.57]);
  translate([169, 172, 0])
    cube([1, 1, 5.57]);
  translate([170, 172, 0])
    cube([1, 1, 5.69]);
  translate([171, 172, 0])
    cube([1, 1, 5.69]);
  translate([172, 172, 0])
    cube([1, 1, 5.88]);
  translate([173, 172, 0])
    cube([1, 1, 6.08]);
  translate([174, 172, 0])
    cube([1, 1, 7.14]);
  translate([175, 172, 0])
    cube([1, 1, 1.41]);
  translate([176, 172, 0])
    cube([1, 1, 2.35]);
  translate([177, 172, 0])
    cube([1, 1, 1.73]);
  translate([178, 172, 0])
    cube([1, 1, 1.76]);
  translate([179, 172, 0])
    cube([1, 1, 1.76]);
  translate([180, 172, 0])
    cube([1, 1, 1.80]);
  translate([181, 172, 0])
    cube([1, 1, 1.84]);
  translate([182, 172, 0])
    cube([1, 1, 1.76]);
  translate([183, 172, 0])
    cube([1, 1, 1.76]);
  translate([184, 172, 0])
    cube([1, 1, 1.80]);
  translate([185, 172, 0])
    cube([1, 1, 1.80]);
  translate([186, 172, 0])
    cube([1, 1, 1.80]);
  translate([187, 172, 0])
    cube([1, 1, 1.80]);
  translate([188, 172, 0])
    cube([1, 1, 1.80]);
  translate([189, 172, 0])
    cube([1, 1, 1.80]);
  translate([190, 172, 0])
    cube([1, 1, 1.80]);
  translate([191, 172, 0])
    cube([1, 1, 1.80]);
  translate([192, 172, 0])
    cube([1, 1, 1.80]);
  translate([193, 172, 0])
    cube([1, 1, 1.80]);
  translate([194, 172, 0])
    cube([1, 1, 1.80]);
  translate([195, 172, 0])
    cube([1, 1, 1.80]);
  translate([196, 172, 0])
    cube([1, 1, 1.76]);
  translate([197, 172, 0])
    cube([1, 1, 1.76]);
  translate([198, 172, 0])
    cube([1, 1, 1.80]);
  translate([199, 172, 0])
    cube([1, 1, 1.80]);
  translate([200, 172, 0])
    cube([1, 1, 1.80]);
  translate([201, 172, 0])
    cube([1, 1, 1.80]);
  translate([202, 172, 0])
    cube([1, 1, 1.80]);
  translate([203, 172, 0])
    cube([1, 1, 1.80]);
  translate([204, 172, 0])
    cube([1, 1, 1.80]);
  translate([205, 172, 0])
    cube([1, 1, 1.80]);
  translate([206, 172, 0])
    cube([1, 1, 1.80]);
  translate([207, 172, 0])
    cube([1, 1, 1.80]);
  translate([208, 172, 0])
    cube([1, 1, 1.80]);
  translate([209, 172, 0])
    cube([1, 1, 1.80]);
  translate([210, 172, 0])
    cube([1, 1, 1.80]);
  translate([211, 172, 0])
    cube([1, 1, 1.80]);
  translate([212, 172, 0])
    cube([1, 1, 1.80]);
  translate([213, 172, 0])
    cube([1, 1, 1.80]);
  translate([214, 172, 0])
    cube([1, 1, 1.80]);
  translate([215, 172, 0])
    cube([1, 1, 1.80]);
  translate([216, 172, 0])
    cube([1, 1, 1.80]);
  translate([217, 172, 0])
    cube([1, 1, 1.80]);
  translate([218, 172, 0])
    cube([1, 1, 1.80]);
  translate([219, 172, 0])
    cube([1, 1, 1.80]);
  translate([220, 172, 0])
    cube([1, 1, 1.80]);
  translate([221, 172, 0])
    cube([1, 1, 1.80]);
  translate([222, 172, 0])
    cube([1, 1, 1.80]);
  translate([223, 172, 0])
    cube([1, 1, 1.80]);
  translate([224, 172, 0])
    cube([1, 1, 1.80]);
  translate([225, 172, 0])
    cube([1, 1, 1.80]);
  translate([226, 172, 0])
    cube([1, 1, 1.80]);
  translate([227, 172, 0])
    cube([1, 1, 1.80]);
  translate([228, 172, 0])
    cube([1, 1, 1.80]);
  translate([229, 172, 0])
    cube([1, 1, 1.80]);
  translate([230, 172, 0])
    cube([1, 1, 1.80]);
  translate([231, 172, 0])
    cube([1, 1, 1.80]);
  translate([232, 172, 0])
    cube([1, 1, 1.80]);
  translate([233, 172, 0])
    cube([1, 1, 1.76]);
  translate([234, 172, 0])
    cube([1, 1, 1.80]);
  translate([235, 172, 0])
    cube([1, 1, 1.80]);
  translate([236, 172, 0])
    cube([1, 1, 1.80]);
  translate([237, 172, 0])
    cube([1, 1, 1.84]);
  translate([238, 172, 0])
    cube([1, 1, 1.80]);
  translate([239, 172, 0])
    cube([1, 1, 1.80]);
  translate([240, 172, 0])
    cube([1, 1, 1.80]);
  translate([241, 172, 0])
    cube([1, 1, 1.76]);
  translate([242, 172, 0])
    cube([1, 1, 1.84]);
  translate([243, 172, 0])
    cube([1, 1, 1.80]);
  translate([244, 172, 0])
    cube([1, 1, 1.76]);
  translate([245, 172, 0])
    cube([1, 1, 1.80]);
  translate([246, 172, 0])
    cube([1, 1, 1.80]);
  translate([0, 173, 0])
    cube([1, 1, 2.00]);
  translate([1, 173, 0])
    cube([1, 1, 2.00]);
  translate([2, 173, 0])
    cube([1, 1, 2.00]);
  translate([3, 173, 0])
    cube([1, 1, 2.00]);
  translate([4, 173, 0])
    cube([1, 1, 2.00]);
  translate([5, 173, 0])
    cube([1, 1, 2.00]);
  translate([6, 173, 0])
    cube([1, 1, 2.00]);
  translate([7, 173, 0])
    cube([1, 1, 2.00]);
  translate([8, 173, 0])
    cube([1, 1, 2.00]);
  translate([9, 173, 0])
    cube([1, 1, 1.96]);
  translate([10, 173, 0])
    cube([1, 1, 1.96]);
  translate([11, 173, 0])
    cube([1, 1, 1.96]);
  translate([12, 173, 0])
    cube([1, 1, 1.96]);
  translate([13, 173, 0])
    cube([1, 1, 2.00]);
  translate([14, 173, 0])
    cube([1, 1, 2.00]);
  translate([15, 173, 0])
    cube([1, 1, 2.00]);
  translate([16, 173, 0])
    cube([1, 1, 2.00]);
  translate([17, 173, 0])
    cube([1, 1, 2.00]);
  translate([18, 173, 0])
    cube([1, 1, 2.00]);
  translate([19, 173, 0])
    cube([1, 1, 2.00]);
  translate([20, 173, 0])
    cube([1, 1, 2.00]);
  translate([21, 173, 0])
    cube([1, 1, 2.00]);
  translate([22, 173, 0])
    cube([1, 1, 1.96]);
  translate([23, 173, 0])
    cube([1, 1, 2.00]);
  translate([24, 173, 0])
    cube([1, 1, 1.96]);
  translate([25, 173, 0])
    cube([1, 1, 2.04]);
  translate([26, 173, 0])
    cube([1, 1, 2.04]);
  translate([27, 173, 0])
    cube([1, 1, 2.00]);
  translate([28, 173, 0])
    cube([1, 1, 2.00]);
  translate([29, 173, 0])
    cube([1, 1, 2.00]);
  translate([30, 173, 0])
    cube([1, 1, 1.96]);
  translate([31, 173, 0])
    cube([1, 1, 1.92]);
  translate([32, 173, 0])
    cube([1, 1, 1.96]);
  translate([33, 173, 0])
    cube([1, 1, 1.96]);
  translate([34, 173, 0])
    cube([1, 1, 2.00]);
  translate([35, 173, 0])
    cube([1, 1, 1.96]);
  translate([36, 173, 0])
    cube([1, 1, 1.96]);
  translate([37, 173, 0])
    cube([1, 1, 1.96]);
  translate([38, 173, 0])
    cube([1, 1, 1.96]);
  translate([39, 173, 0])
    cube([1, 1, 1.96]);
  translate([40, 173, 0])
    cube([1, 1, 2.00]);
  translate([41, 173, 0])
    cube([1, 1, 1.92]);
  translate([42, 173, 0])
    cube([1, 1, 1.92]);
  translate([43, 173, 0])
    cube([1, 1, 1.92]);
  translate([44, 173, 0])
    cube([1, 1, 1.92]);
  translate([45, 173, 0])
    cube([1, 1, 1.96]);
  translate([46, 173, 0])
    cube([1, 1, 1.92]);
  translate([47, 173, 0])
    cube([1, 1, 1.92]);
  translate([48, 173, 0])
    cube([1, 1, 1.92]);
  translate([49, 173, 0])
    cube([1, 1, 1.92]);
  translate([50, 173, 0])
    cube([1, 1, 1.92]);
  translate([51, 173, 0])
    cube([1, 1, 1.92]);
  translate([52, 173, 0])
    cube([1, 1, 1.92]);
  translate([53, 173, 0])
    cube([1, 1, 1.92]);
  translate([54, 173, 0])
    cube([1, 1, 1.96]);
  translate([55, 173, 0])
    cube([1, 1, 1.92]);
  translate([56, 173, 0])
    cube([1, 1, 1.88]);
  translate([57, 173, 0])
    cube([1, 1, 1.88]);
  translate([58, 173, 0])
    cube([1, 1, 1.88]);
  translate([59, 173, 0])
    cube([1, 1, 1.92]);
  translate([60, 173, 0])
    cube([1, 1, 1.92]);
  translate([61, 173, 0])
    cube([1, 1, 1.92]);
  translate([62, 173, 0])
    cube([1, 1, 1.92]);
  translate([63, 173, 0])
    cube([1, 1, 1.92]);
  translate([64, 173, 0])
    cube([1, 1, 1.92]);
  translate([65, 173, 0])
    cube([1, 1, 1.92]);
  translate([66, 173, 0])
    cube([1, 1, 1.92]);
  translate([67, 173, 0])
    cube([1, 1, 1.92]);
  translate([68, 173, 0])
    cube([1, 1, 1.92]);
  translate([69, 173, 0])
    cube([1, 1, 1.92]);
  translate([70, 173, 0])
    cube([1, 1, 1.88]);
  translate([71, 173, 0])
    cube([1, 1, 1.88]);
  translate([72, 173, 0])
    cube([1, 1, 1.84]);
  translate([73, 173, 0])
    cube([1, 1, 1.88]);
  translate([74, 173, 0])
    cube([1, 1, 1.88]);
  translate([75, 173, 0])
    cube([1, 1, 1.88]);
  translate([76, 173, 0])
    cube([1, 1, 1.73]);
  translate([77, 173, 0])
    cube([1, 1, 1.45]);
  translate([78, 173, 0])
    cube([1, 1, 0.55]);
  translate([79, 173, 0])
    cube([1, 1, 1.65]);
  translate([80, 173, 0])
    cube([1, 1, 1.80]);
  translate([81, 173, 0])
    cube([1, 1, 1.37]);
  translate([82, 173, 0])
    cube([1, 1, 1.73]);
  translate([83, 173, 0])
    cube([1, 1, 1.45]);
  translate([84, 173, 0])
    cube([1, 1, 1.25]);
  translate([85, 173, 0])
    cube([1, 1, 3.22]);
  translate([86, 173, 0])
    cube([1, 1, 1.37]);
  translate([87, 173, 0])
    cube([1, 1, 1.65]);
  translate([88, 173, 0])
    cube([1, 1, 5.57]);
  translate([89, 173, 0])
    cube([1, 1, 4.98]);
  translate([90, 173, 0])
    cube([1, 1, 4.24]);
  translate([91, 173, 0])
    cube([1, 1, 3.92]);
  translate([92, 173, 0])
    cube([1, 1, 3.53]);
  translate([93, 173, 0])
    cube([1, 1, 3.53]);
  translate([94, 173, 0])
    cube([1, 1, 3.53]);
  translate([95, 173, 0])
    cube([1, 1, 3.57]);
  translate([96, 173, 0])
    cube([1, 1, 3.57]);
  translate([97, 173, 0])
    cube([1, 1, 3.65]);
  translate([98, 173, 0])
    cube([1, 1, 3.65]);
  translate([99, 173, 0])
    cube([1, 1, 3.53]);
  translate([100, 173, 0])
    cube([1, 1, 3.33]);
  translate([101, 173, 0])
    cube([1, 1, 3.37]);
  translate([102, 173, 0])
    cube([1, 1, 3.37]);
  translate([103, 173, 0])
    cube([1, 1, 3.37]);
  translate([104, 173, 0])
    cube([1, 1, 3.45]);
  translate([105, 173, 0])
    cube([1, 1, 3.65]);
  translate([106, 173, 0])
    cube([1, 1, 3.76]);
  translate([107, 173, 0])
    cube([1, 1, 3.57]);
  translate([108, 173, 0])
    cube([1, 1, 3.61]);
  translate([109, 173, 0])
    cube([1, 1, 3.76]);
  translate([110, 173, 0])
    cube([1, 1, 3.76]);
  translate([111, 173, 0])
    cube([1, 1, 3.73]);
  translate([112, 173, 0])
    cube([1, 1, 3.96]);
  translate([113, 173, 0])
    cube([1, 1, 4.04]);
  translate([114, 173, 0])
    cube([1, 1, 4.24]);
  translate([115, 173, 0])
    cube([1, 1, 4.35]);
  translate([116, 173, 0])
    cube([1, 1, 4.55]);
  translate([117, 173, 0])
    cube([1, 1, 4.59]);
  translate([118, 173, 0])
    cube([1, 1, 4.59]);
  translate([119, 173, 0])
    cube([1, 1, 4.75]);
  translate([120, 173, 0])
    cube([1, 1, 5.02]);
  translate([121, 173, 0])
    cube([1, 1, 5.22]);
  translate([122, 173, 0])
    cube([1, 1, 5.69]);
  translate([123, 173, 0])
    cube([1, 1, 5.92]);
  translate([124, 173, 0])
    cube([1, 1, 5.41]);
  translate([125, 173, 0])
    cube([1, 1, 5.18]);
  translate([126, 173, 0])
    cube([1, 1, 4.90]);
  translate([127, 173, 0])
    cube([1, 1, 5.06]);
  translate([128, 173, 0])
    cube([1, 1, 5.18]);
  translate([129, 173, 0])
    cube([1, 1, 5.14]);
  translate([130, 173, 0])
    cube([1, 1, 5.53]);
  translate([131, 173, 0])
    cube([1, 1, 5.88]);
  translate([132, 173, 0])
    cube([1, 1, 6.24]);
  translate([133, 173, 0])
    cube([1, 1, 6.78]);
  translate([134, 173, 0])
    cube([1, 1, 7.25]);
  translate([135, 173, 0])
    cube([1, 1, 7.02]);
  translate([136, 173, 0])
    cube([1, 1, 6.35]);
  translate([137, 173, 0])
    cube([1, 1, 1.69]);
  translate([138, 173, 0])
    cube([1, 1, 1.76]);
  translate([139, 173, 0])
    cube([1, 1, 1.88]);
  translate([140, 173, 0])
    cube([1, 1, 1.76]);
  translate([141, 173, 0])
    cube([1, 1, 1.02]);
  translate([142, 173, 0])
    cube([1, 1, 1.22]);
  translate([143, 173, 0])
    cube([1, 1, 2.24]);
  translate([144, 173, 0])
    cube([1, 1, 6.55]);
  translate([145, 173, 0])
    cube([1, 1, 2.59]);
  translate([146, 173, 0])
    cube([1, 1, 1.84]);
  translate([147, 173, 0])
    cube([1, 1, 1.73]);
  translate([148, 173, 0])
    cube([1, 1, 1.73]);
  translate([149, 173, 0])
    cube([1, 1, 1.73]);
  translate([150, 173, 0])
    cube([1, 1, 1.69]);
  translate([151, 173, 0])
    cube([1, 1, 1.69]);
  translate([152, 173, 0])
    cube([1, 1, 2.47]);
  translate([153, 173, 0])
    cube([1, 1, 2.82]);
  translate([154, 173, 0])
    cube([1, 1, 2.63]);
  translate([155, 173, 0])
    cube([1, 1, 2.71]);
  translate([156, 173, 0])
    cube([1, 1, 3.18]);
  translate([157, 173, 0])
    cube([1, 1, 3.41]);
  translate([158, 173, 0])
    cube([1, 1, 3.61]);
  translate([159, 173, 0])
    cube([1, 1, 3.92]);
  translate([160, 173, 0])
    cube([1, 1, 4.31]);
  translate([161, 173, 0])
    cube([1, 1, 4.47]);
  translate([162, 173, 0])
    cube([1, 1, 4.86]);
  translate([163, 173, 0])
    cube([1, 1, 4.94]);
  translate([164, 173, 0])
    cube([1, 1, 5.10]);
  translate([165, 173, 0])
    cube([1, 1, 5.18]);
  translate([166, 173, 0])
    cube([1, 1, 5.37]);
  translate([167, 173, 0])
    cube([1, 1, 5.53]);
  translate([168, 173, 0])
    cube([1, 1, 5.61]);
  translate([169, 173, 0])
    cube([1, 1, 5.73]);
  translate([170, 173, 0])
    cube([1, 1, 5.76]);
  translate([171, 173, 0])
    cube([1, 1, 5.80]);
  translate([172, 173, 0])
    cube([1, 1, 5.76]);
  translate([173, 173, 0])
    cube([1, 1, 5.84]);
  translate([174, 173, 0])
    cube([1, 1, 6.08]);
  translate([175, 173, 0])
    cube([1, 1, 6.98]);
  translate([176, 173, 0])
    cube([1, 1, 2.39]);
  translate([177, 173, 0])
    cube([1, 1, 1.69]);
  translate([178, 173, 0])
    cube([1, 1, 1.69]);
  translate([179, 173, 0])
    cube([1, 1, 1.80]);
  translate([180, 173, 0])
    cube([1, 1, 1.84]);
  translate([181, 173, 0])
    cube([1, 1, 1.84]);
  translate([182, 173, 0])
    cube([1, 1, 1.84]);
  translate([183, 173, 0])
    cube([1, 1, 1.84]);
  translate([184, 173, 0])
    cube([1, 1, 1.80]);
  translate([185, 173, 0])
    cube([1, 1, 1.84]);
  translate([186, 173, 0])
    cube([1, 1, 1.84]);
  translate([187, 173, 0])
    cube([1, 1, 1.84]);
  translate([188, 173, 0])
    cube([1, 1, 1.80]);
  translate([189, 173, 0])
    cube([1, 1, 1.80]);
  translate([190, 173, 0])
    cube([1, 1, 1.84]);
  translate([191, 173, 0])
    cube([1, 1, 1.88]);
  translate([192, 173, 0])
    cube([1, 1, 1.84]);
  translate([193, 173, 0])
    cube([1, 1, 1.84]);
  translate([194, 173, 0])
    cube([1, 1, 1.84]);
  translate([195, 173, 0])
    cube([1, 1, 1.80]);
  translate([196, 173, 0])
    cube([1, 1, 1.84]);
  translate([197, 173, 0])
    cube([1, 1, 1.84]);
  translate([198, 173, 0])
    cube([1, 1, 1.84]);
  translate([199, 173, 0])
    cube([1, 1, 1.84]);
  translate([200, 173, 0])
    cube([1, 1, 1.84]);
  translate([201, 173, 0])
    cube([1, 1, 1.84]);
  translate([202, 173, 0])
    cube([1, 1, 1.84]);
  translate([203, 173, 0])
    cube([1, 1, 1.80]);
  translate([204, 173, 0])
    cube([1, 1, 1.84]);
  translate([205, 173, 0])
    cube([1, 1, 1.84]);
  translate([206, 173, 0])
    cube([1, 1, 1.84]);
  translate([207, 173, 0])
    cube([1, 1, 1.84]);
  translate([208, 173, 0])
    cube([1, 1, 1.80]);
  translate([209, 173, 0])
    cube([1, 1, 1.80]);
  translate([210, 173, 0])
    cube([1, 1, 1.88]);
  translate([211, 173, 0])
    cube([1, 1, 1.88]);
  translate([212, 173, 0])
    cube([1, 1, 1.84]);
  translate([213, 173, 0])
    cube([1, 1, 1.84]);
  translate([214, 173, 0])
    cube([1, 1, 1.80]);
  translate([215, 173, 0])
    cube([1, 1, 1.84]);
  translate([216, 173, 0])
    cube([1, 1, 1.88]);
  translate([217, 173, 0])
    cube([1, 1, 1.76]);
  translate([218, 173, 0])
    cube([1, 1, 1.84]);
  translate([219, 173, 0])
    cube([1, 1, 1.84]);
  translate([220, 173, 0])
    cube([1, 1, 1.80]);
  translate([221, 173, 0])
    cube([1, 1, 1.80]);
  translate([222, 173, 0])
    cube([1, 1, 1.80]);
  translate([223, 173, 0])
    cube([1, 1, 1.80]);
  translate([224, 173, 0])
    cube([1, 1, 1.80]);
  translate([225, 173, 0])
    cube([1, 1, 1.80]);
  translate([226, 173, 0])
    cube([1, 1, 1.80]);
  translate([227, 173, 0])
    cube([1, 1, 1.84]);
  translate([228, 173, 0])
    cube([1, 1, 1.80]);
  translate([229, 173, 0])
    cube([1, 1, 1.80]);
  translate([230, 173, 0])
    cube([1, 1, 1.80]);
  translate([231, 173, 0])
    cube([1, 1, 1.80]);
  translate([232, 173, 0])
    cube([1, 1, 1.80]);
  translate([233, 173, 0])
    cube([1, 1, 1.80]);
  translate([234, 173, 0])
    cube([1, 1, 1.80]);
  translate([235, 173, 0])
    cube([1, 1, 1.80]);
  translate([236, 173, 0])
    cube([1, 1, 1.80]);
  translate([237, 173, 0])
    cube([1, 1, 1.80]);
  translate([238, 173, 0])
    cube([1, 1, 1.80]);
  translate([239, 173, 0])
    cube([1, 1, 1.80]);
  translate([240, 173, 0])
    cube([1, 1, 1.80]);
  translate([241, 173, 0])
    cube([1, 1, 1.80]);
  translate([242, 173, 0])
    cube([1, 1, 1.80]);
  translate([243, 173, 0])
    cube([1, 1, 1.80]);
  translate([244, 173, 0])
    cube([1, 1, 1.80]);
  translate([245, 173, 0])
    cube([1, 1, 1.80]);
  translate([246, 173, 0])
    cube([1, 1, 1.80]);
  translate([0, 174, 0])
    cube([1, 1, 2.00]);
  translate([1, 174, 0])
    cube([1, 1, 2.00]);
  translate([2, 174, 0])
    cube([1, 1, 2.00]);
  translate([3, 174, 0])
    cube([1, 1, 2.00]);
  translate([4, 174, 0])
    cube([1, 1, 2.00]);
  translate([5, 174, 0])
    cube([1, 1, 2.00]);
  translate([6, 174, 0])
    cube([1, 1, 2.00]);
  translate([7, 174, 0])
    cube([1, 1, 2.00]);
  translate([8, 174, 0])
    cube([1, 1, 2.00]);
  translate([9, 174, 0])
    cube([1, 1, 2.04]);
  translate([10, 174, 0])
    cube([1, 1, 2.04]);
  translate([11, 174, 0])
    cube([1, 1, 2.04]);
  translate([12, 174, 0])
    cube([1, 1, 1.96]);
  translate([13, 174, 0])
    cube([1, 1, 2.00]);
  translate([14, 174, 0])
    cube([1, 1, 2.00]);
  translate([15, 174, 0])
    cube([1, 1, 2.00]);
  translate([16, 174, 0])
    cube([1, 1, 2.00]);
  translate([17, 174, 0])
    cube([1, 1, 2.00]);
  translate([18, 174, 0])
    cube([1, 1, 2.00]);
  translate([19, 174, 0])
    cube([1, 1, 2.00]);
  translate([20, 174, 0])
    cube([1, 1, 2.00]);
  translate([21, 174, 0])
    cube([1, 1, 2.00]);
  translate([22, 174, 0])
    cube([1, 1, 1.96]);
  translate([23, 174, 0])
    cube([1, 1, 2.00]);
  translate([24, 174, 0])
    cube([1, 1, 1.96]);
  translate([25, 174, 0])
    cube([1, 1, 1.92]);
  translate([26, 174, 0])
    cube([1, 1, 1.92]);
  translate([27, 174, 0])
    cube([1, 1, 2.00]);
  translate([28, 174, 0])
    cube([1, 1, 2.00]);
  translate([29, 174, 0])
    cube([1, 1, 2.00]);
  translate([30, 174, 0])
    cube([1, 1, 1.96]);
  translate([31, 174, 0])
    cube([1, 1, 1.92]);
  translate([32, 174, 0])
    cube([1, 1, 1.96]);
  translate([33, 174, 0])
    cube([1, 1, 1.96]);
  translate([34, 174, 0])
    cube([1, 1, 2.00]);
  translate([35, 174, 0])
    cube([1, 1, 1.96]);
  translate([36, 174, 0])
    cube([1, 1, 1.96]);
  translate([37, 174, 0])
    cube([1, 1, 1.96]);
  translate([38, 174, 0])
    cube([1, 1, 1.96]);
  translate([39, 174, 0])
    cube([1, 1, 1.96]);
  translate([40, 174, 0])
    cube([1, 1, 2.00]);
  translate([41, 174, 0])
    cube([1, 1, 1.92]);
  translate([42, 174, 0])
    cube([1, 1, 1.92]);
  translate([43, 174, 0])
    cube([1, 1, 1.92]);
  translate([44, 174, 0])
    cube([1, 1, 1.92]);
  translate([45, 174, 0])
    cube([1, 1, 1.96]);
  translate([46, 174, 0])
    cube([1, 1, 1.92]);
  translate([47, 174, 0])
    cube([1, 1, 1.92]);
  translate([48, 174, 0])
    cube([1, 1, 1.92]);
  translate([49, 174, 0])
    cube([1, 1, 1.92]);
  translate([50, 174, 0])
    cube([1, 1, 1.92]);
  translate([51, 174, 0])
    cube([1, 1, 1.92]);
  translate([52, 174, 0])
    cube([1, 1, 1.92]);
  translate([53, 174, 0])
    cube([1, 1, 1.92]);
  translate([54, 174, 0])
    cube([1, 1, 1.96]);
  translate([55, 174, 0])
    cube([1, 1, 1.92]);
  translate([56, 174, 0])
    cube([1, 1, 1.92]);
  translate([57, 174, 0])
    cube([1, 1, 1.92]);
  translate([58, 174, 0])
    cube([1, 1, 1.92]);
  translate([59, 174, 0])
    cube([1, 1, 1.92]);
  translate([60, 174, 0])
    cube([1, 1, 1.92]);
  translate([61, 174, 0])
    cube([1, 1, 1.92]);
  translate([62, 174, 0])
    cube([1, 1, 1.92]);
  translate([63, 174, 0])
    cube([1, 1, 1.92]);
  translate([64, 174, 0])
    cube([1, 1, 1.92]);
  translate([65, 174, 0])
    cube([1, 1, 1.92]);
  translate([66, 174, 0])
    cube([1, 1, 1.92]);
  translate([67, 174, 0])
    cube([1, 1, 1.92]);
  translate([68, 174, 0])
    cube([1, 1, 1.92]);
  translate([69, 174, 0])
    cube([1, 1, 1.92]);
  translate([70, 174, 0])
    cube([1, 1, 1.88]);
  translate([71, 174, 0])
    cube([1, 1, 1.88]);
  translate([72, 174, 0])
    cube([1, 1, 1.88]);
  translate([73, 174, 0])
    cube([1, 1, 1.88]);
  translate([74, 174, 0])
    cube([1, 1, 1.88]);
  translate([75, 174, 0])
    cube([1, 1, 1.69]);
  translate([76, 174, 0])
    cube([1, 1, 0.98]);
  translate([77, 174, 0])
    cube([1, 1, 0.27]);
  translate([78, 174, 0])
    cube([1, 1, 5.02]);
  translate([79, 174, 0])
    cube([1, 1, 5.80]);
  translate([80, 174, 0])
    cube([1, 1, 2.86]);
  translate([81, 174, 0])
    cube([1, 1, 1.88]);
  translate([82, 174, 0])
    cube([1, 1, 1.41]);
  translate([83, 174, 0])
    cube([1, 1, 2.12]);
  translate([84, 174, 0])
    cube([1, 1, 0.51]);
  translate([85, 174, 0])
    cube([1, 1, 0.63]);
  translate([86, 174, 0])
    cube([1, 1, 0.78]);
  translate([87, 174, 0])
    cube([1, 1, 1.10]);
  translate([88, 174, 0])
    cube([1, 1, 2.04]);
  translate([89, 174, 0])
    cube([1, 1, 1.41]);
  translate([90, 174, 0])
    cube([1, 1, 3.37]);
  translate([91, 174, 0])
    cube([1, 1, 3.73]);
  translate([92, 174, 0])
    cube([1, 1, 3.65]);
  translate([93, 174, 0])
    cube([1, 1, 3.65]);
  translate([94, 174, 0])
    cube([1, 1, 3.69]);
  translate([95, 174, 0])
    cube([1, 1, 3.76]);
  translate([96, 174, 0])
    cube([1, 1, 3.76]);
  translate([97, 174, 0])
    cube([1, 1, 3.80]);
  translate([98, 174, 0])
    cube([1, 1, 3.80]);
  translate([99, 174, 0])
    cube([1, 1, 3.65]);
  translate([100, 174, 0])
    cube([1, 1, 3.65]);
  translate([101, 174, 0])
    cube([1, 1, 3.57]);
  translate([102, 174, 0])
    cube([1, 1, 3.61]);
  translate([103, 174, 0])
    cube([1, 1, 3.61]);
  translate([104, 174, 0])
    cube([1, 1, 3.73]);
  translate([105, 174, 0])
    cube([1, 1, 3.84]);
  translate([106, 174, 0])
    cube([1, 1, 3.84]);
  translate([107, 174, 0])
    cube([1, 1, 3.69]);
  translate([108, 174, 0])
    cube([1, 1, 3.73]);
  translate([109, 174, 0])
    cube([1, 1, 3.88]);
  translate([110, 174, 0])
    cube([1, 1, 3.88]);
  translate([111, 174, 0])
    cube([1, 1, 3.84]);
  translate([112, 174, 0])
    cube([1, 1, 4.04]);
  translate([113, 174, 0])
    cube([1, 1, 4.08]);
  translate([114, 174, 0])
    cube([1, 1, 4.39]);
  translate([115, 174, 0])
    cube([1, 1, 4.39]);
  translate([116, 174, 0])
    cube([1, 1, 4.35]);
  translate([117, 174, 0])
    cube([1, 1, 4.55]);
  translate([118, 174, 0])
    cube([1, 1, 4.51]);
  translate([119, 174, 0])
    cube([1, 1, 4.63]);
  translate([120, 174, 0])
    cube([1, 1, 4.94]);
  translate([121, 174, 0])
    cube([1, 1, 5.18]);
  translate([122, 174, 0])
    cube([1, 1, 5.65]);
  translate([123, 174, 0])
    cube([1, 1, 5.76]);
  translate([124, 174, 0])
    cube([1, 1, 5.33]);
  translate([125, 174, 0])
    cube([1, 1, 5.06]);
  translate([126, 174, 0])
    cube([1, 1, 5.06]);
  translate([127, 174, 0])
    cube([1, 1, 5.10]);
  translate([128, 174, 0])
    cube([1, 1, 5.14]);
  translate([129, 174, 0])
    cube([1, 1, 5.37]);
  translate([130, 174, 0])
    cube([1, 1, 5.61]);
  translate([131, 174, 0])
    cube([1, 1, 6.04]);
  translate([132, 174, 0])
    cube([1, 1, 6.27]);
  translate([133, 174, 0])
    cube([1, 1, 6.63]);
  translate([134, 174, 0])
    cube([1, 1, 6.63]);
  translate([135, 174, 0])
    cube([1, 1, 6.31]);
  translate([136, 174, 0])
    cube([1, 1, 1.96]);
  translate([137, 174, 0])
    cube([1, 1, 1.80]);
  translate([138, 174, 0])
    cube([1, 1, 1.65]);
  translate([139, 174, 0])
    cube([1, 1, 2.27]);
  translate([140, 174, 0])
    cube([1, 1, 1.80]);
  translate([141, 174, 0])
    cube([1, 1, 4.00]);
  translate([142, 174, 0])
    cube([1, 1, 1.45]);
  translate([143, 174, 0])
    cube([1, 1, 1.06]);
  translate([144, 174, 0])
    cube([1, 1, 6.51]);
  translate([145, 174, 0])
    cube([1, 1, 0.59]);
  translate([146, 174, 0])
    cube([1, 1, 2.04]);
  translate([147, 174, 0])
    cube([1, 1, 1.73]);
  translate([148, 174, 0])
    cube([1, 1, 1.73]);
  translate([149, 174, 0])
    cube([1, 1, 1.73]);
  translate([150, 174, 0])
    cube([1, 1, 1.76]);
  translate([151, 174, 0])
    cube([1, 1, 1.76]);
  translate([152, 174, 0])
    cube([1, 1, 1.02]);
  translate([153, 174, 0])
    cube([1, 1, 1.92]);
  translate([154, 174, 0])
    cube([1, 1, 3.92]);
  translate([155, 174, 0])
    cube([1, 1, 2.59]);
  translate([156, 174, 0])
    cube([1, 1, 2.75]);
  translate([157, 174, 0])
    cube([1, 1, 3.10]);
  translate([158, 174, 0])
    cube([1, 1, 3.22]);
  translate([159, 174, 0])
    cube([1, 1, 3.49]);
  translate([160, 174, 0])
    cube([1, 1, 3.92]);
  translate([161, 174, 0])
    cube([1, 1, 4.27]);
  translate([162, 174, 0])
    cube([1, 1, 4.63]);
  translate([163, 174, 0])
    cube([1, 1, 4.82]);
  translate([164, 174, 0])
    cube([1, 1, 4.98]);
  translate([165, 174, 0])
    cube([1, 1, 5.06]);
  translate([166, 174, 0])
    cube([1, 1, 5.25]);
  translate([167, 174, 0])
    cube([1, 1, 5.41]);
  translate([168, 174, 0])
    cube([1, 1, 5.57]);
  translate([169, 174, 0])
    cube([1, 1, 5.73]);
  translate([170, 174, 0])
    cube([1, 1, 5.88]);
  translate([171, 174, 0])
    cube([1, 1, 5.92]);
  translate([172, 174, 0])
    cube([1, 1, 6.08]);
  translate([173, 174, 0])
    cube([1, 1, 6.16]);
  translate([174, 174, 0])
    cube([1, 1, 6.04]);
  translate([175, 174, 0])
    cube([1, 1, 6.08]);
  translate([176, 174, 0])
    cube([1, 1, 6.39]);
  translate([177, 174, 0])
    cube([1, 1, 5.33]);
  translate([178, 174, 0])
    cube([1, 1, 1.65]);
  translate([179, 174, 0])
    cube([1, 1, 1.80]);
  translate([180, 174, 0])
    cube([1, 1, 1.84]);
  translate([181, 174, 0])
    cube([1, 1, 1.84]);
  translate([182, 174, 0])
    cube([1, 1, 1.84]);
  translate([183, 174, 0])
    cube([1, 1, 1.84]);
  translate([184, 174, 0])
    cube([1, 1, 1.80]);
  translate([185, 174, 0])
    cube([1, 1, 1.84]);
  translate([186, 174, 0])
    cube([1, 1, 1.84]);
  translate([187, 174, 0])
    cube([1, 1, 1.84]);
  translate([188, 174, 0])
    cube([1, 1, 1.88]);
  translate([189, 174, 0])
    cube([1, 1, 1.88]);
  translate([190, 174, 0])
    cube([1, 1, 1.84]);
  translate([191, 174, 0])
    cube([1, 1, 1.88]);
  translate([192, 174, 0])
    cube([1, 1, 1.84]);
  translate([193, 174, 0])
    cube([1, 1, 1.84]);
  translate([194, 174, 0])
    cube([1, 1, 1.84]);
  translate([195, 174, 0])
    cube([1, 1, 1.80]);
  translate([196, 174, 0])
    cube([1, 1, 1.84]);
  translate([197, 174, 0])
    cube([1, 1, 1.84]);
  translate([198, 174, 0])
    cube([1, 1, 1.84]);
  translate([199, 174, 0])
    cube([1, 1, 1.84]);
  translate([200, 174, 0])
    cube([1, 1, 1.84]);
  translate([201, 174, 0])
    cube([1, 1, 1.84]);
  translate([202, 174, 0])
    cube([1, 1, 1.84]);
  translate([203, 174, 0])
    cube([1, 1, 1.80]);
  translate([204, 174, 0])
    cube([1, 1, 1.84]);
  translate([205, 174, 0])
    cube([1, 1, 1.84]);
  translate([206, 174, 0])
    cube([1, 1, 1.84]);
  translate([207, 174, 0])
    cube([1, 1, 1.84]);
  translate([208, 174, 0])
    cube([1, 1, 1.80]);
  translate([209, 174, 0])
    cube([1, 1, 1.80]);
  translate([210, 174, 0])
    cube([1, 1, 1.88]);
  translate([211, 174, 0])
    cube([1, 1, 1.88]);
  translate([212, 174, 0])
    cube([1, 1, 1.84]);
  translate([213, 174, 0])
    cube([1, 1, 1.84]);
  translate([214, 174, 0])
    cube([1, 1, 1.80]);
  translate([215, 174, 0])
    cube([1, 1, 1.84]);
  translate([216, 174, 0])
    cube([1, 1, 1.88]);
  translate([217, 174, 0])
    cube([1, 1, 1.76]);
  translate([218, 174, 0])
    cube([1, 1, 1.84]);
  translate([219, 174, 0])
    cube([1, 1, 1.84]);
  translate([220, 174, 0])
    cube([1, 1, 1.84]);
  translate([221, 174, 0])
    cube([1, 1, 1.84]);
  translate([222, 174, 0])
    cube([1, 1, 1.80]);
  translate([223, 174, 0])
    cube([1, 1, 1.80]);
  translate([224, 174, 0])
    cube([1, 1, 1.80]);
  translate([225, 174, 0])
    cube([1, 1, 1.80]);
  translate([226, 174, 0])
    cube([1, 1, 1.80]);
  translate([227, 174, 0])
    cube([1, 1, 1.84]);
  translate([228, 174, 0])
    cube([1, 1, 1.80]);
  translate([229, 174, 0])
    cube([1, 1, 1.80]);
  translate([230, 174, 0])
    cube([1, 1, 1.80]);
  translate([231, 174, 0])
    cube([1, 1, 1.80]);
  translate([232, 174, 0])
    cube([1, 1, 1.80]);
  translate([233, 174, 0])
    cube([1, 1, 1.80]);
  translate([234, 174, 0])
    cube([1, 1, 1.80]);
  translate([235, 174, 0])
    cube([1, 1, 1.80]);
  translate([236, 174, 0])
    cube([1, 1, 1.80]);
  translate([237, 174, 0])
    cube([1, 1, 1.80]);
  translate([238, 174, 0])
    cube([1, 1, 1.80]);
  translate([239, 174, 0])
    cube([1, 1, 1.80]);
  translate([240, 174, 0])
    cube([1, 1, 1.80]);
  translate([241, 174, 0])
    cube([1, 1, 1.80]);
  translate([242, 174, 0])
    cube([1, 1, 1.80]);
  translate([243, 174, 0])
    cube([1, 1, 1.80]);
  translate([244, 174, 0])
    cube([1, 1, 1.80]);
  translate([245, 174, 0])
    cube([1, 1, 1.80]);
  translate([246, 174, 0])
    cube([1, 1, 1.80]);
  translate([0, 175, 0])
    cube([1, 1, 2.04]);
  translate([1, 175, 0])
    cube([1, 1, 2.00]);
  translate([2, 175, 0])
    cube([1, 1, 2.00]);
  translate([3, 175, 0])
    cube([1, 1, 2.00]);
  translate([4, 175, 0])
    cube([1, 1, 2.00]);
  translate([5, 175, 0])
    cube([1, 1, 2.00]);
  translate([6, 175, 0])
    cube([1, 1, 2.00]);
  translate([7, 175, 0])
    cube([1, 1, 2.00]);
  translate([8, 175, 0])
    cube([1, 1, 2.04]);
  translate([9, 175, 0])
    cube([1, 1, 2.00]);
  translate([10, 175, 0])
    cube([1, 1, 2.00]);
  translate([11, 175, 0])
    cube([1, 1, 2.00]);
  translate([12, 175, 0])
    cube([1, 1, 2.00]);
  translate([13, 175, 0])
    cube([1, 1, 2.00]);
  translate([14, 175, 0])
    cube([1, 1, 2.00]);
  translate([15, 175, 0])
    cube([1, 1, 2.00]);
  translate([16, 175, 0])
    cube([1, 1, 2.00]);
  translate([17, 175, 0])
    cube([1, 1, 2.00]);
  translate([18, 175, 0])
    cube([1, 1, 2.00]);
  translate([19, 175, 0])
    cube([1, 1, 2.00]);
  translate([20, 175, 0])
    cube([1, 1, 2.00]);
  translate([21, 175, 0])
    cube([1, 1, 2.00]);
  translate([22, 175, 0])
    cube([1, 1, 2.00]);
  translate([23, 175, 0])
    cube([1, 1, 2.00]);
  translate([24, 175, 0])
    cube([1, 1, 2.00]);
  translate([25, 175, 0])
    cube([1, 1, 2.00]);
  translate([26, 175, 0])
    cube([1, 1, 2.00]);
  translate([27, 175, 0])
    cube([1, 1, 2.00]);
  translate([28, 175, 0])
    cube([1, 1, 2.00]);
  translate([29, 175, 0])
    cube([1, 1, 2.00]);
  translate([30, 175, 0])
    cube([1, 1, 1.96]);
  translate([31, 175, 0])
    cube([1, 1, 2.00]);
  translate([32, 175, 0])
    cube([1, 1, 1.96]);
  translate([33, 175, 0])
    cube([1, 1, 1.96]);
  translate([34, 175, 0])
    cube([1, 1, 1.96]);
  translate([35, 175, 0])
    cube([1, 1, 1.96]);
  translate([36, 175, 0])
    cube([1, 1, 1.96]);
  translate([37, 175, 0])
    cube([1, 1, 1.96]);
  translate([38, 175, 0])
    cube([1, 1, 1.96]);
  translate([39, 175, 0])
    cube([1, 1, 1.96]);
  translate([40, 175, 0])
    cube([1, 1, 1.96]);
  translate([41, 175, 0])
    cube([1, 1, 1.92]);
  translate([42, 175, 0])
    cube([1, 1, 2.00]);
  translate([43, 175, 0])
    cube([1, 1, 1.96]);
  translate([44, 175, 0])
    cube([1, 1, 1.96]);
  translate([45, 175, 0])
    cube([1, 1, 1.96]);
  translate([46, 175, 0])
    cube([1, 1, 1.96]);
  translate([47, 175, 0])
    cube([1, 1, 1.96]);
  translate([48, 175, 0])
    cube([1, 1, 1.92]);
  translate([49, 175, 0])
    cube([1, 1, 1.92]);
  translate([50, 175, 0])
    cube([1, 1, 1.92]);
  translate([51, 175, 0])
    cube([1, 1, 1.92]);
  translate([52, 175, 0])
    cube([1, 1, 1.92]);
  translate([53, 175, 0])
    cube([1, 1, 1.92]);
  translate([54, 175, 0])
    cube([1, 1, 1.92]);
  translate([55, 175, 0])
    cube([1, 1, 1.92]);
  translate([56, 175, 0])
    cube([1, 1, 1.92]);
  translate([57, 175, 0])
    cube([1, 1, 1.92]);
  translate([58, 175, 0])
    cube([1, 1, 1.92]);
  translate([59, 175, 0])
    cube([1, 1, 1.92]);
  translate([60, 175, 0])
    cube([1, 1, 1.92]);
  translate([61, 175, 0])
    cube([1, 1, 1.92]);
  translate([62, 175, 0])
    cube([1, 1, 1.92]);
  translate([63, 175, 0])
    cube([1, 1, 1.92]);
  translate([64, 175, 0])
    cube([1, 1, 1.92]);
  translate([65, 175, 0])
    cube([1, 1, 1.92]);
  translate([66, 175, 0])
    cube([1, 1, 1.92]);
  translate([67, 175, 0])
    cube([1, 1, 1.88]);
  translate([68, 175, 0])
    cube([1, 1, 1.92]);
  translate([69, 175, 0])
    cube([1, 1, 1.88]);
  translate([70, 175, 0])
    cube([1, 1, 1.88]);
  translate([71, 175, 0])
    cube([1, 1, 1.92]);
  translate([72, 175, 0])
    cube([1, 1, 1.92]);
  translate([73, 175, 0])
    cube([1, 1, 1.76]);
  translate([74, 175, 0])
    cube([1, 1, 1.49]);
  translate([75, 175, 0])
    cube([1, 1, 0.59]);
  translate([76, 175, 0])
    cube([1, 1, 0.63]);
  translate([77, 175, 0])
    cube([1, 1, 0.55]);
  translate([78, 175, 0])
    cube([1, 1, 1.69]);
  translate([79, 175, 0])
    cube([1, 1, 7.37]);
  translate([80, 175, 0])
    cube([1, 1, 4.67]);
  translate([81, 175, 0])
    cube([1, 1, 1.53]);
  translate([82, 175, 0])
    cube([1, 1, 1.10]);
  translate([83, 175, 0])
    cube([1, 1, 0.27]);
  translate([84, 175, 0])
    cube([1, 1, 0.24]);
  translate([85, 175, 0])
    cube([1, 1, 0.78]);
  translate([86, 175, 0])
    cube([1, 1, 0.90]);
  translate([87, 175, 0])
    cube([1, 1, 0.78]);
  translate([88, 175, 0])
    cube([1, 1, 1.22]);
  translate([89, 175, 0])
    cube([1, 1, 1.37]);
  translate([90, 175, 0])
    cube([1, 1, 1.53]);
  translate([91, 175, 0])
    cube([1, 1, 1.92]);
  translate([92, 175, 0])
    cube([1, 1, 2.55]);
  translate([93, 175, 0])
    cube([1, 1, 3.57]);
  translate([94, 175, 0])
    cube([1, 1, 3.84]);
  translate([95, 175, 0])
    cube([1, 1, 3.84]);
  translate([96, 175, 0])
    cube([1, 1, 3.96]);
  translate([97, 175, 0])
    cube([1, 1, 4.00]);
  translate([98, 175, 0])
    cube([1, 1, 4.00]);
  translate([99, 175, 0])
    cube([1, 1, 3.96]);
  translate([100, 175, 0])
    cube([1, 1, 3.80]);
  translate([101, 175, 0])
    cube([1, 1, 3.84]);
  translate([102, 175, 0])
    cube([1, 1, 3.92]);
  translate([103, 175, 0])
    cube([1, 1, 3.92]);
  translate([104, 175, 0])
    cube([1, 1, 3.92]);
  translate([105, 175, 0])
    cube([1, 1, 3.88]);
  translate([106, 175, 0])
    cube([1, 1, 4.04]);
  translate([107, 175, 0])
    cube([1, 1, 3.88]);
  translate([108, 175, 0])
    cube([1, 1, 3.88]);
  translate([109, 175, 0])
    cube([1, 1, 3.92]);
  translate([110, 175, 0])
    cube([1, 1, 4.04]);
  translate([111, 175, 0])
    cube([1, 1, 4.00]);
  translate([112, 175, 0])
    cube([1, 1, 4.00]);
  translate([113, 175, 0])
    cube([1, 1, 4.16]);
  translate([114, 175, 0])
    cube([1, 1, 4.35]);
  translate([115, 175, 0])
    cube([1, 1, 4.31]);
  translate([116, 175, 0])
    cube([1, 1, 4.24]);
  translate([117, 175, 0])
    cube([1, 1, 4.39]);
  translate([118, 175, 0])
    cube([1, 1, 4.55]);
  translate([119, 175, 0])
    cube([1, 1, 4.78]);
  translate([120, 175, 0])
    cube([1, 1, 5.02]);
  translate([121, 175, 0])
    cube([1, 1, 5.29]);
  translate([122, 175, 0])
    cube([1, 1, 5.65]);
  translate([123, 175, 0])
    cube([1, 1, 5.80]);
  translate([124, 175, 0])
    cube([1, 1, 5.37]);
  translate([125, 175, 0])
    cube([1, 1, 5.18]);
  translate([126, 175, 0])
    cube([1, 1, 5.10]);
  translate([127, 175, 0])
    cube([1, 1, 5.33]);
  translate([128, 175, 0])
    cube([1, 1, 5.49]);
  translate([129, 175, 0])
    cube([1, 1, 5.45]);
  translate([130, 175, 0])
    cube([1, 1, 5.80]);
  translate([131, 175, 0])
    cube([1, 1, 5.96]);
  translate([132, 175, 0])
    cube([1, 1, 6.12]);
  translate([133, 175, 0])
    cube([1, 1, 6.39]);
  translate([134, 175, 0])
    cube([1, 1, 6.67]);
  translate([135, 175, 0])
    cube([1, 1, 5.25]);
  translate([136, 175, 0])
    cube([1, 1, 2.04]);
  translate([137, 175, 0])
    cube([1, 1, 1.88]);
  translate([138, 175, 0])
    cube([1, 1, 2.27]);
  translate([139, 175, 0])
    cube([1, 1, 1.57]);
  translate([140, 175, 0])
    cube([1, 1, 1.41]);
  translate([141, 175, 0])
    cube([1, 1, 1.06]);
  translate([142, 175, 0])
    cube([1, 1, 3.84]);
  translate([143, 175, 0])
    cube([1, 1, 1.49]);
  translate([144, 175, 0])
    cube([1, 1, 6.51]);
  translate([145, 175, 0])
    cube([1, 1, 2.67]);
  translate([146, 175, 0])
    cube([1, 1, 1.92]);
  translate([147, 175, 0])
    cube([1, 1, 1.76]);
  translate([148, 175, 0])
    cube([1, 1, 1.73]);
  translate([149, 175, 0])
    cube([1, 1, 1.76]);
  translate([150, 175, 0])
    cube([1, 1, 1.73]);
  translate([151, 175, 0])
    cube([1, 1, 1.73]);
  translate([152, 175, 0])
    cube([1, 1, 1.76]);
  translate([153, 175, 0])
    cube([1, 1, 1.73]);
  translate([154, 175, 0])
    cube([1, 1, 1.65]);
  translate([155, 175, 0])
    cube([1, 1, 1.61]);
  translate([156, 175, 0])
    cube([1, 1, 2.75]);
  translate([157, 175, 0])
    cube([1, 1, 2.82]);
  translate([158, 175, 0])
    cube([1, 1, 2.90]);
  translate([159, 175, 0])
    cube([1, 1, 3.22]);
  translate([160, 175, 0])
    cube([1, 1, 3.57]);
  translate([161, 175, 0])
    cube([1, 1, 3.80]);
  translate([162, 175, 0])
    cube([1, 1, 4.27]);
  translate([163, 175, 0])
    cube([1, 1, 4.55]);
  translate([164, 175, 0])
    cube([1, 1, 4.94]);
  translate([165, 175, 0])
    cube([1, 1, 5.06]);
  translate([166, 175, 0])
    cube([1, 1, 5.22]);
  translate([167, 175, 0])
    cube([1, 1, 5.53]);
  translate([168, 175, 0])
    cube([1, 1, 5.65]);
  translate([169, 175, 0])
    cube([1, 1, 5.73]);
  translate([170, 175, 0])
    cube([1, 1, 5.92]);
  translate([171, 175, 0])
    cube([1, 1, 5.96]);
  translate([172, 175, 0])
    cube([1, 1, 6.24]);
  translate([173, 175, 0])
    cube([1, 1, 6.27]);
  translate([174, 175, 0])
    cube([1, 1, 6.20]);
  translate([175, 175, 0])
    cube([1, 1, 6.12]);
  translate([176, 175, 0])
    cube([1, 1, 6.16]);
  translate([177, 175, 0])
    cube([1, 1, 6.39]);
  translate([178, 175, 0])
    cube([1, 1, 6.71]);
  translate([179, 175, 0])
    cube([1, 1, 2.00]);
  translate([180, 175, 0])
    cube([1, 1, 1.73]);
  translate([181, 175, 0])
    cube([1, 1, 1.84]);
  translate([182, 175, 0])
    cube([1, 1, 1.73]);
  translate([183, 175, 0])
    cube([1, 1, 1.84]);
  translate([184, 175, 0])
    cube([1, 1, 1.84]);
  translate([185, 175, 0])
    cube([1, 1, 1.84]);
  translate([186, 175, 0])
    cube([1, 1, 1.84]);
  translate([187, 175, 0])
    cube([1, 1, 1.84]);
  translate([188, 175, 0])
    cube([1, 1, 1.84]);
  translate([189, 175, 0])
    cube([1, 1, 1.84]);
  translate([190, 175, 0])
    cube([1, 1, 1.84]);
  translate([191, 175, 0])
    cube([1, 1, 1.84]);
  translate([192, 175, 0])
    cube([1, 1, 1.84]);
  translate([193, 175, 0])
    cube([1, 1, 1.84]);
  translate([194, 175, 0])
    cube([1, 1, 1.84]);
  translate([195, 175, 0])
    cube([1, 1, 1.84]);
  translate([196, 175, 0])
    cube([1, 1, 1.84]);
  translate([197, 175, 0])
    cube([1, 1, 1.84]);
  translate([198, 175, 0])
    cube([1, 1, 1.84]);
  translate([199, 175, 0])
    cube([1, 1, 1.84]);
  translate([200, 175, 0])
    cube([1, 1, 1.84]);
  translate([201, 175, 0])
    cube([1, 1, 1.88]);
  translate([202, 175, 0])
    cube([1, 1, 1.88]);
  translate([203, 175, 0])
    cube([1, 1, 1.84]);
  translate([204, 175, 0])
    cube([1, 1, 1.84]);
  translate([205, 175, 0])
    cube([1, 1, 1.88]);
  translate([206, 175, 0])
    cube([1, 1, 1.84]);
  translate([207, 175, 0])
    cube([1, 1, 1.84]);
  translate([208, 175, 0])
    cube([1, 1, 1.84]);
  translate([209, 175, 0])
    cube([1, 1, 1.84]);
  translate([210, 175, 0])
    cube([1, 1, 1.84]);
  translate([211, 175, 0])
    cube([1, 1, 1.80]);
  translate([212, 175, 0])
    cube([1, 1, 1.84]);
  translate([213, 175, 0])
    cube([1, 1, 1.84]);
  translate([214, 175, 0])
    cube([1, 1, 1.84]);
  translate([215, 175, 0])
    cube([1, 1, 1.84]);
  translate([216, 175, 0])
    cube([1, 1, 1.80]);
  translate([217, 175, 0])
    cube([1, 1, 1.84]);
  translate([218, 175, 0])
    cube([1, 1, 1.84]);
  translate([219, 175, 0])
    cube([1, 1, 1.84]);
  translate([220, 175, 0])
    cube([1, 1, 1.84]);
  translate([221, 175, 0])
    cube([1, 1, 1.84]);
  translate([222, 175, 0])
    cube([1, 1, 1.80]);
  translate([223, 175, 0])
    cube([1, 1, 1.80]);
  translate([224, 175, 0])
    cube([1, 1, 1.80]);
  translate([225, 175, 0])
    cube([1, 1, 1.80]);
  translate([226, 175, 0])
    cube([1, 1, 1.80]);
  translate([227, 175, 0])
    cube([1, 1, 1.84]);
  translate([228, 175, 0])
    cube([1, 1, 1.80]);
  translate([229, 175, 0])
    cube([1, 1, 1.80]);
  translate([230, 175, 0])
    cube([1, 1, 1.80]);
  translate([231, 175, 0])
    cube([1, 1, 1.80]);
  translate([232, 175, 0])
    cube([1, 1, 1.80]);
  translate([233, 175, 0])
    cube([1, 1, 1.80]);
  translate([234, 175, 0])
    cube([1, 1, 1.80]);
  translate([235, 175, 0])
    cube([1, 1, 1.80]);
  translate([236, 175, 0])
    cube([1, 1, 1.80]);
  translate([237, 175, 0])
    cube([1, 1, 1.80]);
  translate([238, 175, 0])
    cube([1, 1, 1.80]);
  translate([239, 175, 0])
    cube([1, 1, 1.80]);
  translate([240, 175, 0])
    cube([1, 1, 1.80]);
  translate([241, 175, 0])
    cube([1, 1, 1.80]);
  translate([242, 175, 0])
    cube([1, 1, 1.80]);
  translate([243, 175, 0])
    cube([1, 1, 1.76]);
  translate([244, 175, 0])
    cube([1, 1, 1.80]);
  translate([245, 175, 0])
    cube([1, 1, 1.80]);
  translate([246, 175, 0])
    cube([1, 1, 1.80]);
  translate([0, 176, 0])
    cube([1, 1, 2.04]);
  translate([1, 176, 0])
    cube([1, 1, 2.04]);
  translate([2, 176, 0])
    cube([1, 1, 2.04]);
  translate([3, 176, 0])
    cube([1, 1, 2.00]);
  translate([4, 176, 0])
    cube([1, 1, 2.04]);
  translate([5, 176, 0])
    cube([1, 1, 2.04]);
  translate([6, 176, 0])
    cube([1, 1, 2.04]);
  translate([7, 176, 0])
    cube([1, 1, 2.00]);
  translate([8, 176, 0])
    cube([1, 1, 2.00]);
  translate([9, 176, 0])
    cube([1, 1, 2.00]);
  translate([10, 176, 0])
    cube([1, 1, 2.00]);
  translate([11, 176, 0])
    cube([1, 1, 2.00]);
  translate([12, 176, 0])
    cube([1, 1, 2.00]);
  translate([13, 176, 0])
    cube([1, 1, 2.00]);
  translate([14, 176, 0])
    cube([1, 1, 2.04]);
  translate([15, 176, 0])
    cube([1, 1, 2.00]);
  translate([16, 176, 0])
    cube([1, 1, 2.00]);
  translate([17, 176, 0])
    cube([1, 1, 2.00]);
  translate([18, 176, 0])
    cube([1, 1, 2.00]);
  translate([19, 176, 0])
    cube([1, 1, 2.00]);
  translate([20, 176, 0])
    cube([1, 1, 2.00]);
  translate([21, 176, 0])
    cube([1, 1, 2.00]);
  translate([22, 176, 0])
    cube([1, 1, 2.00]);
  translate([23, 176, 0])
    cube([1, 1, 2.00]);
  translate([24, 176, 0])
    cube([1, 1, 2.00]);
  translate([25, 176, 0])
    cube([1, 1, 2.00]);
  translate([26, 176, 0])
    cube([1, 1, 2.00]);
  translate([27, 176, 0])
    cube([1, 1, 2.00]);
  translate([28, 176, 0])
    cube([1, 1, 2.00]);
  translate([29, 176, 0])
    cube([1, 1, 2.00]);
  translate([30, 176, 0])
    cube([1, 1, 2.00]);
  translate([31, 176, 0])
    cube([1, 1, 2.00]);
  translate([32, 176, 0])
    cube([1, 1, 2.00]);
  translate([33, 176, 0])
    cube([1, 1, 2.00]);
  translate([34, 176, 0])
    cube([1, 1, 2.00]);
  translate([35, 176, 0])
    cube([1, 1, 2.00]);
  translate([36, 176, 0])
    cube([1, 1, 1.96]);
  translate([37, 176, 0])
    cube([1, 1, 1.96]);
  translate([38, 176, 0])
    cube([1, 1, 1.96]);
  translate([39, 176, 0])
    cube([1, 1, 1.96]);
  translate([40, 176, 0])
    cube([1, 1, 1.96]);
  translate([41, 176, 0])
    cube([1, 1, 1.96]);
  translate([42, 176, 0])
    cube([1, 1, 1.96]);
  translate([43, 176, 0])
    cube([1, 1, 1.96]);
  translate([44, 176, 0])
    cube([1, 1, 1.96]);
  translate([45, 176, 0])
    cube([1, 1, 1.96]);
  translate([46, 176, 0])
    cube([1, 1, 1.96]);
  translate([47, 176, 0])
    cube([1, 1, 1.96]);
  translate([48, 176, 0])
    cube([1, 1, 1.96]);
  translate([49, 176, 0])
    cube([1, 1, 1.96]);
  translate([50, 176, 0])
    cube([1, 1, 1.96]);
  translate([51, 176, 0])
    cube([1, 1, 1.96]);
  translate([52, 176, 0])
    cube([1, 1, 1.92]);
  translate([53, 176, 0])
    cube([1, 1, 1.92]);
  translate([54, 176, 0])
    cube([1, 1, 1.88]);
  translate([55, 176, 0])
    cube([1, 1, 1.88]);
  translate([56, 176, 0])
    cube([1, 1, 1.88]);
  translate([57, 176, 0])
    cube([1, 1, 1.88]);
  translate([58, 176, 0])
    cube([1, 1, 1.88]);
  translate([59, 176, 0])
    cube([1, 1, 1.92]);
  translate([60, 176, 0])
    cube([1, 1, 1.92]);
  translate([61, 176, 0])
    cube([1, 1, 1.92]);
  translate([62, 176, 0])
    cube([1, 1, 1.92]);
  translate([63, 176, 0])
    cube([1, 1, 1.92]);
  translate([64, 176, 0])
    cube([1, 1, 1.92]);
  translate([65, 176, 0])
    cube([1, 1, 1.88]);
  translate([66, 176, 0])
    cube([1, 1, 1.92]);
  translate([67, 176, 0])
    cube([1, 1, 1.84]);
  translate([68, 176, 0])
    cube([1, 1, 1.92]);
  translate([69, 176, 0])
    cube([1, 1, 1.92]);
  translate([70, 176, 0])
    cube([1, 1, 1.92]);
  translate([71, 176, 0])
    cube([1, 1, 2.00]);
  translate([72, 176, 0])
    cube([1, 1, 1.61]);
  translate([73, 176, 0])
    cube([1, 1, 1.65]);
  translate([74, 176, 0])
    cube([1, 1, 0.55]);
  translate([75, 176, 0])
    cube([1, 1, 1.25]);
  translate([76, 176, 0])
    cube([1, 1, 1.18]);
  translate([77, 176, 0])
    cube([1, 1, 1.80]);
  translate([78, 176, 0])
    cube([1, 1, 8.39]);
  translate([79, 176, 0])
    cube([1, 1, 8.20]);
  translate([80, 176, 0])
    cube([1, 1, 3.65]);
  translate([81, 176, 0])
    cube([1, 1, 1.76]);
  translate([82, 176, 0])
    cube([1, 1, 0.35]);
  translate([83, 176, 0])
    cube([1, 1, 0.27]);
  translate([84, 176, 0])
    cube([1, 1, 0.43]);
  translate([85, 176, 0])
    cube([1, 1, 0.98]);
  translate([86, 176, 0])
    cube([1, 1, 0.82]);
  translate([87, 176, 0])
    cube([1, 1, 1.22]);
  translate([88, 176, 0])
    cube([1, 1, 0.98]);
  translate([89, 176, 0])
    cube([1, 1, 0.71]);
  translate([90, 176, 0])
    cube([1, 1, 1.18]);
  translate([91, 176, 0])
    cube([1, 1, 1.37]);
  translate([92, 176, 0])
    cube([1, 1, 1.41]);
  translate([93, 176, 0])
    cube([1, 1, 1.88]);
  translate([94, 176, 0])
    cube([1, 1, 1.76]);
  translate([95, 176, 0])
    cube([1, 1, 4.00]);
  translate([96, 176, 0])
    cube([1, 1, 4.31]);
  translate([97, 176, 0])
    cube([1, 1, 4.31]);
  translate([98, 176, 0])
    cube([1, 1, 4.20]);
  translate([99, 176, 0])
    cube([1, 1, 4.27]);
  translate([100, 176, 0])
    cube([1, 1, 4.08]);
  translate([101, 176, 0])
    cube([1, 1, 4.08]);
  translate([102, 176, 0])
    cube([1, 1, 4.12]);
  translate([103, 176, 0])
    cube([1, 1, 4.16]);
  translate([104, 176, 0])
    cube([1, 1, 4.12]);
  translate([105, 176, 0])
    cube([1, 1, 4.20]);
  translate([106, 176, 0])
    cube([1, 1, 4.12]);
  translate([107, 176, 0])
    cube([1, 1, 4.12]);
  translate([108, 176, 0])
    cube([1, 1, 4.04]);
  translate([109, 176, 0])
    cube([1, 1, 3.96]);
  translate([110, 176, 0])
    cube([1, 1, 4.04]);
  translate([111, 176, 0])
    cube([1, 1, 4.04]);
  translate([112, 176, 0])
    cube([1, 1, 4.20]);
  translate([113, 176, 0])
    cube([1, 1, 4.27]);
  translate([114, 176, 0])
    cube([1, 1, 4.27]);
  translate([115, 176, 0])
    cube([1, 1, 4.24]);
  translate([116, 176, 0])
    cube([1, 1, 4.51]);
  translate([117, 176, 0])
    cube([1, 1, 4.35]);
  translate([118, 176, 0])
    cube([1, 1, 4.63]);
  translate([119, 176, 0])
    cube([1, 1, 4.94]);
  translate([120, 176, 0])
    cube([1, 1, 5.06]);
  translate([121, 176, 0])
    cube([1, 1, 5.45]);
  translate([122, 176, 0])
    cube([1, 1, 5.73]);
  translate([123, 176, 0])
    cube([1, 1, 5.73]);
  translate([124, 176, 0])
    cube([1, 1, 5.22]);
  translate([125, 176, 0])
    cube([1, 1, 5.14]);
  translate([126, 176, 0])
    cube([1, 1, 4.98]);
  translate([127, 176, 0])
    cube([1, 1, 5.25]);
  translate([128, 176, 0])
    cube([1, 1, 5.57]);
  translate([129, 176, 0])
    cube([1, 1, 5.53]);
  translate([130, 176, 0])
    cube([1, 1, 5.69]);
  translate([131, 176, 0])
    cube([1, 1, 5.84]);
  translate([132, 176, 0])
    cube([1, 1, 5.96]);
  translate([133, 176, 0])
    cube([1, 1, 5.76]);
  translate([134, 176, 0])
    cube([1, 1, 3.76]);
  translate([135, 176, 0])
    cube([1, 1, 1.41]);
  translate([136, 176, 0])
    cube([1, 1, 1.76]);
  translate([137, 176, 0])
    cube([1, 1, 1.80]);
  translate([138, 176, 0])
    cube([1, 1, 2.00]);
  translate([139, 176, 0])
    cube([1, 1, 1.84]);
  translate([140, 176, 0])
    cube([1, 1, 1.06]);
  translate([141, 176, 0])
    cube([1, 1, 2.94]);
  translate([142, 176, 0])
    cube([1, 1, 7.37]);
  translate([143, 176, 0])
    cube([1, 1, 6.39]);
  translate([144, 176, 0])
    cube([1, 1, 2.75]);
  translate([145, 176, 0])
    cube([1, 1, 3.49]);
  translate([146, 176, 0])
    cube([1, 1, 2.00]);
  translate([147, 176, 0])
    cube([1, 1, 1.73]);
  translate([148, 176, 0])
    cube([1, 1, 1.73]);
  translate([149, 176, 0])
    cube([1, 1, 1.73]);
  translate([150, 176, 0])
    cube([1, 1, 1.73]);
  translate([151, 176, 0])
    cube([1, 1, 1.73]);
  translate([152, 176, 0])
    cube([1, 1, 1.76]);
  translate([153, 176, 0])
    cube([1, 1, 1.76]);
  translate([154, 176, 0])
    cube([1, 1, 1.76]);
  translate([155, 176, 0])
    cube([1, 1, 1.76]);
  translate([156, 176, 0])
    cube([1, 1, 1.80]);
  translate([157, 176, 0])
    cube([1, 1, 3.33]);
  translate([158, 176, 0])
    cube([1, 1, 2.63]);
  translate([159, 176, 0])
    cube([1, 1, 2.82]);
  translate([160, 176, 0])
    cube([1, 1, 3.06]);
  translate([161, 176, 0])
    cube([1, 1, 3.45]);
  translate([162, 176, 0])
    cube([1, 1, 3.88]);
  translate([163, 176, 0])
    cube([1, 1, 4.39]);
  translate([164, 176, 0])
    cube([1, 1, 4.67]);
  translate([165, 176, 0])
    cube([1, 1, 4.94]);
  translate([166, 176, 0])
    cube([1, 1, 5.02]);
  translate([167, 176, 0])
    cube([1, 1, 5.25]);
  translate([168, 176, 0])
    cube([1, 1, 5.61]);
  translate([169, 176, 0])
    cube([1, 1, 5.73]);
  translate([170, 176, 0])
    cube([1, 1, 5.92]);
  translate([171, 176, 0])
    cube([1, 1, 6.04]);
  translate([172, 176, 0])
    cube([1, 1, 6.20]);
  translate([173, 176, 0])
    cube([1, 1, 6.35]);
  translate([174, 176, 0])
    cube([1, 1, 6.35]);
  translate([175, 176, 0])
    cube([1, 1, 6.39]);
  translate([176, 176, 0])
    cube([1, 1, 6.27]);
  translate([177, 176, 0])
    cube([1, 1, 6.16]);
  translate([178, 176, 0])
    cube([1, 1, 6.35]);
  translate([179, 176, 0])
    cube([1, 1, 6.90]);
  translate([180, 176, 0])
    cube([1, 1, 1.88]);
  translate([181, 176, 0])
    cube([1, 1, 2.12]);
  translate([182, 176, 0])
    cube([1, 1, 2.00]);
  translate([183, 176, 0])
    cube([1, 1, 1.73]);
  translate([184, 176, 0])
    cube([1, 1, 1.84]);
  translate([185, 176, 0])
    cube([1, 1, 1.80]);
  translate([186, 176, 0])
    cube([1, 1, 1.80]);
  translate([187, 176, 0])
    cube([1, 1, 1.84]);
  translate([188, 176, 0])
    cube([1, 1, 1.84]);
  translate([189, 176, 0])
    cube([1, 1, 1.84]);
  translate([190, 176, 0])
    cube([1, 1, 1.84]);
  translate([191, 176, 0])
    cube([1, 1, 1.84]);
  translate([192, 176, 0])
    cube([1, 1, 1.84]);
  translate([193, 176, 0])
    cube([1, 1, 1.88]);
  translate([194, 176, 0])
    cube([1, 1, 1.80]);
  translate([195, 176, 0])
    cube([1, 1, 2.20]);
  translate([196, 176, 0])
    cube([1, 1, 2.00]);
  translate([197, 176, 0])
    cube([1, 1, 2.00]);
  translate([198, 176, 0])
    cube([1, 1, 1.96]);
  translate([199, 176, 0])
    cube([1, 1, 2.00]);
  translate([200, 176, 0])
    cube([1, 1, 1.80]);
  translate([201, 176, 0])
    cube([1, 1, 1.80]);
  translate([202, 176, 0])
    cube([1, 1, 1.88]);
  translate([203, 176, 0])
    cube([1, 1, 1.76]);
  translate([204, 176, 0])
    cube([1, 1, 1.84]);
  translate([205, 176, 0])
    cube([1, 1, 1.88]);
  translate([206, 176, 0])
    cube([1, 1, 1.84]);
  translate([207, 176, 0])
    cube([1, 1, 1.84]);
  translate([208, 176, 0])
    cube([1, 1, 1.84]);
  translate([209, 176, 0])
    cube([1, 1, 1.84]);
  translate([210, 176, 0])
    cube([1, 1, 1.84]);
  translate([211, 176, 0])
    cube([1, 1, 1.84]);
  translate([212, 176, 0])
    cube([1, 1, 1.84]);
  translate([213, 176, 0])
    cube([1, 1, 1.84]);
  translate([214, 176, 0])
    cube([1, 1, 1.84]);
  translate([215, 176, 0])
    cube([1, 1, 1.84]);
  translate([216, 176, 0])
    cube([1, 1, 1.84]);
  translate([217, 176, 0])
    cube([1, 1, 1.84]);
  translate([218, 176, 0])
    cube([1, 1, 1.84]);
  translate([219, 176, 0])
    cube([1, 1, 1.84]);
  translate([220, 176, 0])
    cube([1, 1, 1.76]);
  translate([221, 176, 0])
    cube([1, 1, 1.88]);
  translate([222, 176, 0])
    cube([1, 1, 1.76]);
  translate([223, 176, 0])
    cube([1, 1, 1.80]);
  translate([224, 176, 0])
    cube([1, 1, 1.88]);
  translate([225, 176, 0])
    cube([1, 1, 1.80]);
  translate([226, 176, 0])
    cube([1, 1, 1.80]);
  translate([227, 176, 0])
    cube([1, 1, 1.80]);
  translate([228, 176, 0])
    cube([1, 1, 1.80]);
  translate([229, 176, 0])
    cube([1, 1, 1.80]);
  translate([230, 176, 0])
    cube([1, 1, 1.80]);
  translate([231, 176, 0])
    cube([1, 1, 1.80]);
  translate([232, 176, 0])
    cube([1, 1, 1.80]);
  translate([233, 176, 0])
    cube([1, 1, 1.80]);
  translate([234, 176, 0])
    cube([1, 1, 1.80]);
  translate([235, 176, 0])
    cube([1, 1, 1.80]);
  translate([236, 176, 0])
    cube([1, 1, 1.80]);
  translate([237, 176, 0])
    cube([1, 1, 1.80]);
  translate([238, 176, 0])
    cube([1, 1, 1.80]);
  translate([239, 176, 0])
    cube([1, 1, 1.80]);
  translate([240, 176, 0])
    cube([1, 1, 1.80]);
  translate([241, 176, 0])
    cube([1, 1, 1.80]);
  translate([242, 176, 0])
    cube([1, 1, 1.80]);
  translate([243, 176, 0])
    cube([1, 1, 1.80]);
  translate([244, 176, 0])
    cube([1, 1, 1.80]);
  translate([245, 176, 0])
    cube([1, 1, 1.80]);
  translate([246, 176, 0])
    cube([1, 1, 1.80]);
  translate([0, 177, 0])
    cube([1, 1, 2.04]);
  translate([1, 177, 0])
    cube([1, 1, 2.04]);
  translate([2, 177, 0])
    cube([1, 1, 2.04]);
  translate([3, 177, 0])
    cube([1, 1, 2.04]);
  translate([4, 177, 0])
    cube([1, 1, 2.04]);
  translate([5, 177, 0])
    cube([1, 1, 2.04]);
  translate([6, 177, 0])
    cube([1, 1, 2.04]);
  translate([7, 177, 0])
    cube([1, 1, 2.00]);
  translate([8, 177, 0])
    cube([1, 1, 2.00]);
  translate([9, 177, 0])
    cube([1, 1, 2.04]);
  translate([10, 177, 0])
    cube([1, 1, 2.04]);
  translate([11, 177, 0])
    cube([1, 1, 2.04]);
  translate([12, 177, 0])
    cube([1, 1, 2.00]);
  translate([13, 177, 0])
    cube([1, 1, 2.00]);
  translate([14, 177, 0])
    cube([1, 1, 2.04]);
  translate([15, 177, 0])
    cube([1, 1, 2.00]);
  translate([16, 177, 0])
    cube([1, 1, 2.00]);
  translate([17, 177, 0])
    cube([1, 1, 2.00]);
  translate([18, 177, 0])
    cube([1, 1, 2.00]);
  translate([19, 177, 0])
    cube([1, 1, 2.00]);
  translate([20, 177, 0])
    cube([1, 1, 2.00]);
  translate([21, 177, 0])
    cube([1, 1, 2.00]);
  translate([22, 177, 0])
    cube([1, 1, 2.00]);
  translate([23, 177, 0])
    cube([1, 1, 2.00]);
  translate([24, 177, 0])
    cube([1, 1, 2.00]);
  translate([25, 177, 0])
    cube([1, 1, 2.00]);
  translate([26, 177, 0])
    cube([1, 1, 2.00]);
  translate([27, 177, 0])
    cube([1, 1, 2.00]);
  translate([28, 177, 0])
    cube([1, 1, 2.00]);
  translate([29, 177, 0])
    cube([1, 1, 2.00]);
  translate([30, 177, 0])
    cube([1, 1, 2.00]);
  translate([31, 177, 0])
    cube([1, 1, 2.00]);
  translate([32, 177, 0])
    cube([1, 1, 2.00]);
  translate([33, 177, 0])
    cube([1, 1, 2.00]);
  translate([34, 177, 0])
    cube([1, 1, 2.00]);
  translate([35, 177, 0])
    cube([1, 1, 2.00]);
  translate([36, 177, 0])
    cube([1, 1, 2.00]);
  translate([37, 177, 0])
    cube([1, 1, 2.00]);
  translate([38, 177, 0])
    cube([1, 1, 1.96]);
  translate([39, 177, 0])
    cube([1, 1, 1.96]);
  translate([40, 177, 0])
    cube([1, 1, 1.96]);
  translate([41, 177, 0])
    cube([1, 1, 1.96]);
  translate([42, 177, 0])
    cube([1, 1, 1.96]);
  translate([43, 177, 0])
    cube([1, 1, 1.96]);
  translate([44, 177, 0])
    cube([1, 1, 1.96]);
  translate([45, 177, 0])
    cube([1, 1, 1.96]);
  translate([46, 177, 0])
    cube([1, 1, 1.96]);
  translate([47, 177, 0])
    cube([1, 1, 1.96]);
  translate([48, 177, 0])
    cube([1, 1, 1.96]);
  translate([49, 177, 0])
    cube([1, 1, 1.96]);
  translate([50, 177, 0])
    cube([1, 1, 1.96]);
  translate([51, 177, 0])
    cube([1, 1, 1.96]);
  translate([52, 177, 0])
    cube([1, 1, 1.92]);
  translate([53, 177, 0])
    cube([1, 1, 1.92]);
  translate([54, 177, 0])
    cube([1, 1, 1.96]);
  translate([55, 177, 0])
    cube([1, 1, 1.96]);
  translate([56, 177, 0])
    cube([1, 1, 1.96]);
  translate([57, 177, 0])
    cube([1, 1, 1.96]);
  translate([58, 177, 0])
    cube([1, 1, 1.96]);
  translate([59, 177, 0])
    cube([1, 1, 1.92]);
  translate([60, 177, 0])
    cube([1, 1, 1.92]);
  translate([61, 177, 0])
    cube([1, 1, 1.92]);
  translate([62, 177, 0])
    cube([1, 1, 1.92]);
  translate([63, 177, 0])
    cube([1, 1, 1.92]);
  translate([64, 177, 0])
    cube([1, 1, 1.92]);
  translate([65, 177, 0])
    cube([1, 1, 1.88]);
  translate([66, 177, 0])
    cube([1, 1, 1.92]);
  translate([67, 177, 0])
    cube([1, 1, 1.88]);
  translate([68, 177, 0])
    cube([1, 1, 1.92]);
  translate([69, 177, 0])
    cube([1, 1, 1.92]);
  translate([70, 177, 0])
    cube([1, 1, 1.88]);
  translate([71, 177, 0])
    cube([1, 1, 1.84]);
  translate([72, 177, 0])
    cube([1, 1, 4.90]);
  translate([73, 177, 0])
    cube([1, 1, 0.51]);
  translate([74, 177, 0])
    cube([1, 1, 1.02]);
  translate([75, 177, 0])
    cube([1, 1, 1.41]);
  translate([76, 177, 0])
    cube([1, 1, 1.76]);
  translate([77, 177, 0])
    cube([1, 1, 6.55]);
  translate([78, 177, 0])
    cube([1, 1, 8.35]);
  translate([79, 177, 0])
    cube([1, 1, 8.20]);
  translate([80, 177, 0])
    cube([1, 1, 2.00]);
  translate([81, 177, 0])
    cube([1, 1, 1.29]);
  translate([82, 177, 0])
    cube([1, 1, 0.27]);
  translate([83, 177, 0])
    cube([1, 1, 0.35]);
  translate([84, 177, 0])
    cube([1, 1, 0.55]);
  translate([85, 177, 0])
    cube([1, 1, 0.98]);
  translate([86, 177, 0])
    cube([1, 1, 1.25]);
  translate([87, 177, 0])
    cube([1, 1, 1.25]);
  translate([88, 177, 0])
    cube([1, 1, 1.18]);
  translate([89, 177, 0])
    cube([1, 1, 0.86]);
  translate([90, 177, 0])
    cube([1, 1, 0.90]);
  translate([91, 177, 0])
    cube([1, 1, 1.25]);
  translate([92, 177, 0])
    cube([1, 1, 0.82]);
  translate([93, 177, 0])
    cube([1, 1, 1.10]);
  translate([94, 177, 0])
    cube([1, 1, 1.57]);
  translate([95, 177, 0])
    cube([1, 1, 1.84]);
  translate([96, 177, 0])
    cube([1, 1, 1.96]);
  translate([97, 177, 0])
    cube([1, 1, 2.35]);
  translate([98, 177, 0])
    cube([1, 1, 4.24]);
  translate([99, 177, 0])
    cube([1, 1, 4.35]);
  translate([100, 177, 0])
    cube([1, 1, 4.39]);
  translate([101, 177, 0])
    cube([1, 1, 4.47]);
  translate([102, 177, 0])
    cube([1, 1, 4.39]);
  translate([103, 177, 0])
    cube([1, 1, 4.43]);
  translate([104, 177, 0])
    cube([1, 1, 4.39]);
  translate([105, 177, 0])
    cube([1, 1, 4.39]);
  translate([106, 177, 0])
    cube([1, 1, 4.43]);
  translate([107, 177, 0])
    cube([1, 1, 4.27]);
  translate([108, 177, 0])
    cube([1, 1, 4.31]);
  translate([109, 177, 0])
    cube([1, 1, 4.24]);
  translate([110, 177, 0])
    cube([1, 1, 4.12]);
  translate([111, 177, 0])
    cube([1, 1, 4.16]);
  translate([112, 177, 0])
    cube([1, 1, 4.08]);
  translate([113, 177, 0])
    cube([1, 1, 4.27]);
  translate([114, 177, 0])
    cube([1, 1, 4.27]);
  translate([115, 177, 0])
    cube([1, 1, 4.27]);
  translate([116, 177, 0])
    cube([1, 1, 4.43]);
  translate([117, 177, 0])
    cube([1, 1, 4.51]);
  translate([118, 177, 0])
    cube([1, 1, 4.63]);
  translate([119, 177, 0])
    cube([1, 1, 4.90]);
  translate([120, 177, 0])
    cube([1, 1, 5.29]);
  translate([121, 177, 0])
    cube([1, 1, 5.37]);
  translate([122, 177, 0])
    cube([1, 1, 5.65]);
  translate([123, 177, 0])
    cube([1, 1, 5.53]);
  translate([124, 177, 0])
    cube([1, 1, 4.98]);
  translate([125, 177, 0])
    cube([1, 1, 5.02]);
  translate([126, 177, 0])
    cube([1, 1, 5.10]);
  translate([127, 177, 0])
    cube([1, 1, 5.33]);
  translate([128, 177, 0])
    cube([1, 1, 5.53]);
  translate([129, 177, 0])
    cube([1, 1, 5.61]);
  translate([130, 177, 0])
    cube([1, 1, 5.80]);
  translate([131, 177, 0])
    cube([1, 1, 5.53]);
  translate([132, 177, 0])
    cube([1, 1, 2.55]);
  translate([133, 177, 0])
    cube([1, 1, 1.88]);
  translate([134, 177, 0])
    cube([1, 1, 1.80]);
  translate([135, 177, 0])
    cube([1, 1, 2.51]);
  translate([136, 177, 0])
    cube([1, 1, 1.49]);
  translate([137, 177, 0])
    cube([1, 1, 2.12]);
  translate([138, 177, 0])
    cube([1, 1, 1.69]);
  translate([139, 177, 0])
    cube([1, 1, 1.33]);
  translate([140, 177, 0])
    cube([1, 1, 1.88]);
  translate([141, 177, 0])
    cube([1, 1, 6.43]);
  translate([142, 177, 0])
    cube([1, 1, 6.94]);
  translate([143, 177, 0])
    cube([1, 1, 4.51]);
  translate([144, 177, 0])
    cube([1, 1, 2.90]);
  translate([145, 177, 0])
    cube([1, 1, 1.88]);
  translate([146, 177, 0])
    cube([1, 1, 2.90]);
  translate([147, 177, 0])
    cube([1, 1, 1.73]);
  translate([148, 177, 0])
    cube([1, 1, 1.76]);
  translate([149, 177, 0])
    cube([1, 1, 1.76]);
  translate([150, 177, 0])
    cube([1, 1, 1.76]);
  translate([151, 177, 0])
    cube([1, 1, 1.76]);
  translate([152, 177, 0])
    cube([1, 1, 1.76]);
  translate([153, 177, 0])
    cube([1, 1, 1.76]);
  translate([154, 177, 0])
    cube([1, 1, 1.76]);
  translate([155, 177, 0])
    cube([1, 1, 1.76]);
  translate([156, 177, 0])
    cube([1, 1, 1.69]);
  translate([157, 177, 0])
    cube([1, 1, 1.45]);
  translate([158, 177, 0])
    cube([1, 1, 2.08]);
  translate([159, 177, 0])
    cube([1, 1, 2.86]);
  translate([160, 177, 0])
    cube([1, 1, 2.63]);
  translate([161, 177, 0])
    cube([1, 1, 2.90]);
  translate([162, 177, 0])
    cube([1, 1, 3.37]);
  translate([163, 177, 0])
    cube([1, 1, 3.80]);
  translate([164, 177, 0])
    cube([1, 1, 4.31]);
  translate([165, 177, 0])
    cube([1, 1, 4.63]);
  translate([166, 177, 0])
    cube([1, 1, 4.90]);
  translate([167, 177, 0])
    cube([1, 1, 5.22]);
  translate([168, 177, 0])
    cube([1, 1, 5.37]);
  translate([169, 177, 0])
    cube([1, 1, 5.69]);
  translate([170, 177, 0])
    cube([1, 1, 5.88]);
  translate([171, 177, 0])
    cube([1, 1, 5.88]);
  translate([172, 177, 0])
    cube([1, 1, 6.08]);
  translate([173, 177, 0])
    cube([1, 1, 6.27]);
  translate([174, 177, 0])
    cube([1, 1, 6.35]);
  translate([175, 177, 0])
    cube([1, 1, 6.47]);
  translate([176, 177, 0])
    cube([1, 1, 6.43]);
  translate([177, 177, 0])
    cube([1, 1, 6.24]);
  translate([178, 177, 0])
    cube([1, 1, 6.12]);
  translate([179, 177, 0])
    cube([1, 1, 6.20]);
  translate([180, 177, 0])
    cube([1, 1, 6.78]);
  translate([181, 177, 0])
    cube([1, 1, 0.75]);
  translate([182, 177, 0])
    cube([1, 1, 0.39]);
  translate([183, 177, 0])
    cube([1, 1, 2.78]);
  translate([184, 177, 0])
    cube([1, 1, 1.84]);
  translate([185, 177, 0])
    cube([1, 1, 1.80]);
  translate([186, 177, 0])
    cube([1, 1, 1.80]);
  translate([187, 177, 0])
    cube([1, 1, 1.84]);
  translate([188, 177, 0])
    cube([1, 1, 1.84]);
  translate([189, 177, 0])
    cube([1, 1, 1.84]);
  translate([190, 177, 0])
    cube([1, 1, 1.84]);
  translate([191, 177, 0])
    cube([1, 1, 1.84]);
  translate([192, 177, 0])
    cube([1, 1, 1.84]);
  translate([193, 177, 0])
    cube([1, 1, 1.84]);
  translate([194, 177, 0])
    cube([1, 1, 1.92]);
  translate([195, 177, 0])
    cube([1, 1, 2.04]);
  translate([196, 177, 0])
    cube([1, 1, 1.53]);
  translate([197, 177, 0])
    cube([1, 1, 1.57]);
  translate([198, 177, 0])
    cube([1, 1, 2.12]);
  translate([199, 177, 0])
    cube([1, 1, 1.69]);
  translate([200, 177, 0])
    cube([1, 1, 1.88]);
  translate([201, 177, 0])
    cube([1, 1, 1.84]);
  translate([202, 177, 0])
    cube([1, 1, 1.84]);
  translate([203, 177, 0])
    cube([1, 1, 1.88]);
  translate([204, 177, 0])
    cube([1, 1, 1.84]);
  translate([205, 177, 0])
    cube([1, 1, 1.88]);
  translate([206, 177, 0])
    cube([1, 1, 1.84]);
  translate([207, 177, 0])
    cube([1, 1, 1.84]);
  translate([208, 177, 0])
    cube([1, 1, 1.84]);
  translate([209, 177, 0])
    cube([1, 1, 1.84]);
  translate([210, 177, 0])
    cube([1, 1, 1.84]);
  translate([211, 177, 0])
    cube([1, 1, 1.84]);
  translate([212, 177, 0])
    cube([1, 1, 1.84]);
  translate([213, 177, 0])
    cube([1, 1, 1.84]);
  translate([214, 177, 0])
    cube([1, 1, 1.84]);
  translate([215, 177, 0])
    cube([1, 1, 1.84]);
  translate([216, 177, 0])
    cube([1, 1, 1.84]);
  translate([217, 177, 0])
    cube([1, 1, 1.84]);
  translate([218, 177, 0])
    cube([1, 1, 1.84]);
  translate([219, 177, 0])
    cube([1, 1, 1.84]);
  translate([220, 177, 0])
    cube([1, 1, 1.84]);
  translate([221, 177, 0])
    cube([1, 1, 1.84]);
  translate([222, 177, 0])
    cube([1, 1, 1.84]);
  translate([223, 177, 0])
    cube([1, 1, 1.80]);
  translate([224, 177, 0])
    cube([1, 1, 1.88]);
  translate([225, 177, 0])
    cube([1, 1, 1.80]);
  translate([226, 177, 0])
    cube([1, 1, 1.80]);
  translate([227, 177, 0])
    cube([1, 1, 1.80]);
  translate([228, 177, 0])
    cube([1, 1, 1.80]);
  translate([229, 177, 0])
    cube([1, 1, 1.80]);
  translate([230, 177, 0])
    cube([1, 1, 1.80]);
  translate([231, 177, 0])
    cube([1, 1, 1.80]);
  translate([232, 177, 0])
    cube([1, 1, 1.80]);
  translate([233, 177, 0])
    cube([1, 1, 1.80]);
  translate([234, 177, 0])
    cube([1, 1, 1.80]);
  translate([235, 177, 0])
    cube([1, 1, 1.80]);
  translate([236, 177, 0])
    cube([1, 1, 1.80]);
  translate([237, 177, 0])
    cube([1, 1, 1.80]);
  translate([238, 177, 0])
    cube([1, 1, 1.80]);
  translate([239, 177, 0])
    cube([1, 1, 1.80]);
  translate([240, 177, 0])
    cube([1, 1, 1.80]);
  translate([241, 177, 0])
    cube([1, 1, 1.80]);
  translate([242, 177, 0])
    cube([1, 1, 1.80]);
  translate([243, 177, 0])
    cube([1, 1, 1.80]);
  translate([244, 177, 0])
    cube([1, 1, 1.80]);
  translate([245, 177, 0])
    cube([1, 1, 1.80]);
  translate([246, 177, 0])
    cube([1, 1, 1.80]);
  translate([0, 178, 0])
    cube([1, 1, 2.04]);
  translate([1, 178, 0])
    cube([1, 1, 2.04]);
  translate([2, 178, 0])
    cube([1, 1, 2.04]);
  translate([3, 178, 0])
    cube([1, 1, 2.00]);
  translate([4, 178, 0])
    cube([1, 1, 1.96]);
  translate([5, 178, 0])
    cube([1, 1, 2.00]);
  translate([6, 178, 0])
    cube([1, 1, 2.00]);
  translate([7, 178, 0])
    cube([1, 1, 2.08]);
  translate([8, 178, 0])
    cube([1, 1, 2.04]);
  translate([9, 178, 0])
    cube([1, 1, 2.04]);
  translate([10, 178, 0])
    cube([1, 1, 2.04]);
  translate([11, 178, 0])
    cube([1, 1, 2.04]);
  translate([12, 178, 0])
    cube([1, 1, 2.00]);
  translate([13, 178, 0])
    cube([1, 1, 2.04]);
  translate([14, 178, 0])
    cube([1, 1, 2.04]);
  translate([15, 178, 0])
    cube([1, 1, 2.04]);
  translate([16, 178, 0])
    cube([1, 1, 2.04]);
  translate([17, 178, 0])
    cube([1, 1, 2.00]);
  translate([18, 178, 0])
    cube([1, 1, 2.00]);
  translate([19, 178, 0])
    cube([1, 1, 2.04]);
  translate([20, 178, 0])
    cube([1, 1, 2.00]);
  translate([21, 178, 0])
    cube([1, 1, 2.00]);
  translate([22, 178, 0])
    cube([1, 1, 2.00]);
  translate([23, 178, 0])
    cube([1, 1, 2.00]);
  translate([24, 178, 0])
    cube([1, 1, 2.00]);
  translate([25, 178, 0])
    cube([1, 1, 2.00]);
  translate([26, 178, 0])
    cube([1, 1, 2.00]);
  translate([27, 178, 0])
    cube([1, 1, 2.00]);
  translate([28, 178, 0])
    cube([1, 1, 2.00]);
  translate([29, 178, 0])
    cube([1, 1, 2.00]);
  translate([30, 178, 0])
    cube([1, 1, 2.00]);
  translate([31, 178, 0])
    cube([1, 1, 2.00]);
  translate([32, 178, 0])
    cube([1, 1, 2.00]);
  translate([33, 178, 0])
    cube([1, 1, 1.96]);
  translate([34, 178, 0])
    cube([1, 1, 1.96]);
  translate([35, 178, 0])
    cube([1, 1, 1.96]);
  translate([36, 178, 0])
    cube([1, 1, 2.00]);
  translate([37, 178, 0])
    cube([1, 1, 2.00]);
  translate([38, 178, 0])
    cube([1, 1, 2.00]);
  translate([39, 178, 0])
    cube([1, 1, 2.00]);
  translate([40, 178, 0])
    cube([1, 1, 1.96]);
  translate([41, 178, 0])
    cube([1, 1, 1.96]);
  translate([42, 178, 0])
    cube([1, 1, 1.96]);
  translate([43, 178, 0])
    cube([1, 1, 1.96]);
  translate([44, 178, 0])
    cube([1, 1, 1.92]);
  translate([45, 178, 0])
    cube([1, 1, 2.04]);
  translate([46, 178, 0])
    cube([1, 1, 2.00]);
  translate([47, 178, 0])
    cube([1, 1, 2.00]);
  translate([48, 178, 0])
    cube([1, 1, 1.96]);
  translate([49, 178, 0])
    cube([1, 1, 1.96]);
  translate([50, 178, 0])
    cube([1, 1, 1.92]);
  translate([51, 178, 0])
    cube([1, 1, 1.96]);
  translate([52, 178, 0])
    cube([1, 1, 1.96]);
  translate([53, 178, 0])
    cube([1, 1, 1.96]);
  translate([54, 178, 0])
    cube([1, 1, 1.92]);
  translate([55, 178, 0])
    cube([1, 1, 1.92]);
  translate([56, 178, 0])
    cube([1, 1, 1.96]);
  translate([57, 178, 0])
    cube([1, 1, 1.96]);
  translate([58, 178, 0])
    cube([1, 1, 1.96]);
  translate([59, 178, 0])
    cube([1, 1, 1.96]);
  translate([60, 178, 0])
    cube([1, 1, 1.92]);
  translate([61, 178, 0])
    cube([1, 1, 1.92]);
  translate([62, 178, 0])
    cube([1, 1, 1.92]);
  translate([63, 178, 0])
    cube([1, 1, 1.92]);
  translate([64, 178, 0])
    cube([1, 1, 1.92]);
  translate([65, 178, 0])
    cube([1, 1, 1.92]);
  translate([66, 178, 0])
    cube([1, 1, 1.92]);
  translate([67, 178, 0])
    cube([1, 1, 1.92]);
  translate([68, 178, 0])
    cube([1, 1, 1.88]);
  translate([69, 178, 0])
    cube([1, 1, 1.96]);
  translate([70, 178, 0])
    cube([1, 1, 2.16]);
  translate([71, 178, 0])
    cube([1, 1, 1.84]);
  translate([72, 178, 0])
    cube([1, 1, 0.63]);
  translate([73, 178, 0])
    cube([1, 1, 1.45]);
  translate([74, 178, 0])
    cube([1, 1, 1.61]);
  translate([75, 178, 0])
    cube([1, 1, 1.18]);
  translate([76, 178, 0])
    cube([1, 1, 1.88]);
  translate([77, 178, 0])
    cube([1, 1, 1.92]);
  translate([78, 178, 0])
    cube([1, 1, 7.25]);
  translate([79, 178, 0])
    cube([1, 1, 9.61]);
  translate([80, 178, 0])
    cube([1, 1, 1.53]);
  translate([81, 178, 0])
    cube([1, 1, 0.51]);
  translate([82, 178, 0])
    cube([1, 1, 0.31]);
  translate([83, 178, 0])
    cube([1, 1, 0.47]);
  translate([84, 178, 0])
    cube([1, 1, 0.55]);
  translate([85, 178, 0])
    cube([1, 1, 0.94]);
  translate([86, 178, 0])
    cube([1, 1, 1.33]);
  translate([87, 178, 0])
    cube([1, 1, 1.25]);
  translate([88, 178, 0])
    cube([1, 1, 1.25]);
  translate([89, 178, 0])
    cube([1, 1, 1.22]);
  translate([90, 178, 0])
    cube([1, 1, 1.29]);
  translate([91, 178, 0])
    cube([1, 1, 0.94]);
  translate([92, 178, 0])
    cube([1, 1, 1.18]);
  translate([93, 178, 0])
    cube([1, 1, 1.10]);
  translate([94, 178, 0])
    cube([1, 1, 0.55]);
  translate([95, 178, 0])
    cube([1, 1, 1.14]);
  translate([96, 178, 0])
    cube([1, 1, 1.33]);
  translate([97, 178, 0])
    cube([1, 1, 2.00]);
  translate([98, 178, 0])
    cube([1, 1, 2.24]);
  translate([99, 178, 0])
    cube([1, 1, 2.12]);
  translate([100, 178, 0])
    cube([1, 1, 2.16]);
  translate([101, 178, 0])
    cube([1, 1, 4.63]);
  translate([102, 178, 0])
    cube([1, 1, 4.90]);
  translate([103, 178, 0])
    cube([1, 1, 5.25]);
  translate([104, 178, 0])
    cube([1, 1, 4.55]);
  translate([105, 178, 0])
    cube([1, 1, 4.63]);
  translate([106, 178, 0])
    cube([1, 1, 4.67]);
  translate([107, 178, 0])
    cube([1, 1, 4.47]);
  translate([108, 178, 0])
    cube([1, 1, 4.47]);
  translate([109, 178, 0])
    cube([1, 1, 4.35]);
  translate([110, 178, 0])
    cube([1, 1, 4.24]);
  translate([111, 178, 0])
    cube([1, 1, 4.20]);
  translate([112, 178, 0])
    cube([1, 1, 4.20]);
  translate([113, 178, 0])
    cube([1, 1, 4.20]);
  translate([114, 178, 0])
    cube([1, 1, 4.35]);
  translate([115, 178, 0])
    cube([1, 1, 4.27]);
  translate([116, 178, 0])
    cube([1, 1, 4.39]);
  translate([117, 178, 0])
    cube([1, 1, 4.63]);
  translate([118, 178, 0])
    cube([1, 1, 4.71]);
  translate([119, 178, 0])
    cube([1, 1, 5.10]);
  translate([120, 178, 0])
    cube([1, 1, 5.22]);
  translate([121, 178, 0])
    cube([1, 1, 5.49]);
  translate([122, 178, 0])
    cube([1, 1, 5.49]);
  translate([123, 178, 0])
    cube([1, 1, 5.29]);
  translate([124, 178, 0])
    cube([1, 1, 4.82]);
  translate([125, 178, 0])
    cube([1, 1, 4.43]);
  translate([126, 178, 0])
    cube([1, 1, 4.12]);
  translate([127, 178, 0])
    cube([1, 1, 2.98]);
  translate([128, 178, 0])
    cube([1, 1, 2.08]);
  translate([129, 178, 0])
    cube([1, 1, 2.04]);
  translate([130, 178, 0])
    cube([1, 1, 2.08]);
  translate([131, 178, 0])
    cube([1, 1, 2.00]);
  translate([132, 178, 0])
    cube([1, 1, 2.24]);
  translate([133, 178, 0])
    cube([1, 1, 1.61]);
  translate([134, 178, 0])
    cube([1, 1, 2.08]);
  translate([135, 178, 0])
    cube([1, 1, 2.24]);
  translate([136, 178, 0])
    cube([1, 1, 1.96]);
  translate([137, 178, 0])
    cube([1, 1, 0.55]);
  translate([138, 178, 0])
    cube([1, 1, 1.80]);
  translate([139, 178, 0])
    cube([1, 1, 3.10]);
  translate([140, 178, 0])
    cube([1, 1, 4.78]);
  translate([141, 178, 0])
    cube([1, 1, 5.49]);
  translate([142, 178, 0])
    cube([1, 1, 5.41]);
  translate([143, 178, 0])
    cube([1, 1, 6.04]);
  translate([144, 178, 0])
    cube([1, 1, 3.02]);
  translate([145, 178, 0])
    cube([1, 1, 2.55]);
  translate([146, 178, 0])
    cube([1, 1, 3.41]);
  translate([147, 178, 0])
    cube([1, 1, 1.57]);
  translate([148, 178, 0])
    cube([1, 1, 1.73]);
  translate([149, 178, 0])
    cube([1, 1, 1.76]);
  translate([150, 178, 0])
    cube([1, 1, 1.76]);
  translate([151, 178, 0])
    cube([1, 1, 1.76]);
  translate([152, 178, 0])
    cube([1, 1, 1.76]);
  translate([153, 178, 0])
    cube([1, 1, 1.76]);
  translate([154, 178, 0])
    cube([1, 1, 1.76]);
  translate([155, 178, 0])
    cube([1, 1, 1.76]);
  translate([156, 178, 0])
    cube([1, 1, 1.76]);
  translate([157, 178, 0])
    cube([1, 1, 1.76]);
  translate([158, 178, 0])
    cube([1, 1, 1.69]);
  translate([159, 178, 0])
    cube([1, 1, 1.69]);
  translate([160, 178, 0])
    cube([1, 1, 2.16]);
  translate([161, 178, 0])
    cube([1, 1, 2.90]);
  translate([162, 178, 0])
    cube([1, 1, 2.98]);
  translate([163, 178, 0])
    cube([1, 1, 3.10]);
  translate([164, 178, 0])
    cube([1, 1, 3.76]);
  translate([165, 178, 0])
    cube([1, 1, 4.27]);
  translate([166, 178, 0])
    cube([1, 1, 4.67]);
  translate([167, 178, 0])
    cube([1, 1, 4.98]);
  translate([168, 178, 0])
    cube([1, 1, 5.18]);
  translate([169, 178, 0])
    cube([1, 1, 5.45]);
  translate([170, 178, 0])
    cube([1, 1, 5.61]);
  translate([171, 178, 0])
    cube([1, 1, 5.80]);
  translate([172, 178, 0])
    cube([1, 1, 6.00]);
  translate([173, 178, 0])
    cube([1, 1, 6.08]);
  translate([174, 178, 0])
    cube([1, 1, 6.12]);
  translate([175, 178, 0])
    cube([1, 1, 6.27]);
  translate([176, 178, 0])
    cube([1, 1, 6.43]);
  translate([177, 178, 0])
    cube([1, 1, 6.47]);
  translate([178, 178, 0])
    cube([1, 1, 6.35]);
  translate([179, 178, 0])
    cube([1, 1, 6.08]);
  translate([180, 178, 0])
    cube([1, 1, 5.61]);
  translate([181, 178, 0])
    cube([1, 1, 1.29]);
  translate([182, 178, 0])
    cube([1, 1, 3.22]);
  translate([183, 178, 0])
    cube([1, 1, 0.86]);
  translate([184, 178, 0])
    cube([1, 1, 2.59]);
  translate([185, 178, 0])
    cube([1, 1, 1.69]);
  translate([186, 178, 0])
    cube([1, 1, 1.57]);
  translate([187, 178, 0])
    cube([1, 1, 1.84]);
  translate([188, 178, 0])
    cube([1, 1, 1.84]);
  translate([189, 178, 0])
    cube([1, 1, 1.84]);
  translate([190, 178, 0])
    cube([1, 1, 1.84]);
  translate([191, 178, 0])
    cube([1, 1, 1.84]);
  translate([192, 178, 0])
    cube([1, 1, 1.84]);
  translate([193, 178, 0])
    cube([1, 1, 0.63]);
  translate([194, 178, 0])
    cube([1, 1, 0.35]);
  translate([195, 178, 0])
    cube([1, 1, 3.57]);
  translate([196, 178, 0])
    cube([1, 1, 1.73]);
  translate([197, 178, 0])
    cube([1, 1, 2.63]);
  translate([198, 178, 0])
    cube([1, 1, 2.39]);
  translate([199, 178, 0])
    cube([1, 1, 2.39]);
  translate([200, 178, 0])
    cube([1, 1, 1.45]);
  translate([201, 178, 0])
    cube([1, 1, 1.61]);
  translate([202, 178, 0])
    cube([1, 1, 1.65]);
  translate([203, 178, 0])
    cube([1, 1, 1.88]);
  translate([204, 178, 0])
    cube([1, 1, 1.88]);
  translate([205, 178, 0])
    cube([1, 1, 1.88]);
  translate([206, 178, 0])
    cube([1, 1, 1.80]);
  translate([207, 178, 0])
    cube([1, 1, 1.80]);
  translate([208, 178, 0])
    cube([1, 1, 1.84]);
  translate([209, 178, 0])
    cube([1, 1, 1.84]);
  translate([210, 178, 0])
    cube([1, 1, 1.84]);
  translate([211, 178, 0])
    cube([1, 1, 1.80]);
  translate([212, 178, 0])
    cube([1, 1, 1.84]);
  translate([213, 178, 0])
    cube([1, 1, 1.84]);
  translate([214, 178, 0])
    cube([1, 1, 1.84]);
  translate([215, 178, 0])
    cube([1, 1, 1.88]);
  translate([216, 178, 0])
    cube([1, 1, 1.84]);
  translate([217, 178, 0])
    cube([1, 1, 1.88]);
  translate([218, 178, 0])
    cube([1, 1, 1.80]);
  translate([219, 178, 0])
    cube([1, 1, 1.84]);
  translate([220, 178, 0])
    cube([1, 1, 1.84]);
  translate([221, 178, 0])
    cube([1, 1, 1.84]);
  translate([222, 178, 0])
    cube([1, 1, 1.84]);
  translate([223, 178, 0])
    cube([1, 1, 1.84]);
  translate([224, 178, 0])
    cube([1, 1, 1.84]);
  translate([225, 178, 0])
    cube([1, 1, 1.84]);
  translate([226, 178, 0])
    cube([1, 1, 1.84]);
  translate([227, 178, 0])
    cube([1, 1, 1.80]);
  translate([228, 178, 0])
    cube([1, 1, 1.80]);
  translate([229, 178, 0])
    cube([1, 1, 1.76]);
  translate([230, 178, 0])
    cube([1, 1, 1.76]);
  translate([231, 178, 0])
    cube([1, 1, 1.76]);
  translate([232, 178, 0])
    cube([1, 1, 1.84]);
  translate([233, 178, 0])
    cube([1, 1, 1.80]);
  translate([234, 178, 0])
    cube([1, 1, 1.80]);
  translate([235, 178, 0])
    cube([1, 1, 1.80]);
  translate([236, 178, 0])
    cube([1, 1, 1.84]);
  translate([237, 178, 0])
    cube([1, 1, 1.88]);
  translate([238, 178, 0])
    cube([1, 1, 1.80]);
  translate([239, 178, 0])
    cube([1, 1, 1.84]);
  translate([240, 178, 0])
    cube([1, 1, 1.80]);
  translate([241, 178, 0])
    cube([1, 1, 1.80]);
  translate([242, 178, 0])
    cube([1, 1, 1.80]);
  translate([243, 178, 0])
    cube([1, 1, 1.80]);
  translate([244, 178, 0])
    cube([1, 1, 1.80]);
  translate([245, 178, 0])
    cube([1, 1, 1.80]);
  translate([246, 178, 0])
    cube([1, 1, 1.80]);
  translate([0, 179, 0])
    cube([1, 1, 2.04]);
  translate([1, 179, 0])
    cube([1, 1, 2.04]);
  translate([2, 179, 0])
    cube([1, 1, 2.04]);
  translate([3, 179, 0])
    cube([1, 1, 2.00]);
  translate([4, 179, 0])
    cube([1, 1, 2.04]);
  translate([5, 179, 0])
    cube([1, 1, 1.96]);
  translate([6, 179, 0])
    cube([1, 1, 2.04]);
  translate([7, 179, 0])
    cube([1, 1, 2.00]);
  translate([8, 179, 0])
    cube([1, 1, 2.04]);
  translate([9, 179, 0])
    cube([1, 1, 2.04]);
  translate([10, 179, 0])
    cube([1, 1, 2.04]);
  translate([11, 179, 0])
    cube([1, 1, 2.04]);
  translate([12, 179, 0])
    cube([1, 1, 2.00]);
  translate([13, 179, 0])
    cube([1, 1, 2.04]);
  translate([14, 179, 0])
    cube([1, 1, 2.04]);
  translate([15, 179, 0])
    cube([1, 1, 2.04]);
  translate([16, 179, 0])
    cube([1, 1, 2.04]);
  translate([17, 179, 0])
    cube([1, 1, 2.00]);
  translate([18, 179, 0])
    cube([1, 1, 2.00]);
  translate([19, 179, 0])
    cube([1, 1, 2.00]);
  translate([20, 179, 0])
    cube([1, 1, 2.00]);
  translate([21, 179, 0])
    cube([1, 1, 2.00]);
  translate([22, 179, 0])
    cube([1, 1, 2.00]);
  translate([23, 179, 0])
    cube([1, 1, 2.00]);
  translate([24, 179, 0])
    cube([1, 1, 2.00]);
  translate([25, 179, 0])
    cube([1, 1, 2.00]);
  translate([26, 179, 0])
    cube([1, 1, 2.00]);
  translate([27, 179, 0])
    cube([1, 1, 2.00]);
  translate([28, 179, 0])
    cube([1, 1, 2.00]);
  translate([29, 179, 0])
    cube([1, 1, 2.00]);
  translate([30, 179, 0])
    cube([1, 1, 2.00]);
  translate([31, 179, 0])
    cube([1, 1, 2.00]);
  translate([32, 179, 0])
    cube([1, 1, 2.00]);
  translate([33, 179, 0])
    cube([1, 1, 2.04]);
  translate([34, 179, 0])
    cube([1, 1, 2.04]);
  translate([35, 179, 0])
    cube([1, 1, 1.96]);
  translate([36, 179, 0])
    cube([1, 1, 2.00]);
  translate([37, 179, 0])
    cube([1, 1, 2.00]);
  translate([38, 179, 0])
    cube([1, 1, 2.00]);
  translate([39, 179, 0])
    cube([1, 1, 2.00]);
  translate([40, 179, 0])
    cube([1, 1, 2.04]);
  translate([41, 179, 0])
    cube([1, 1, 1.92]);
  translate([42, 179, 0])
    cube([1, 1, 1.92]);
  translate([43, 179, 0])
    cube([1, 1, 2.00]);
  translate([44, 179, 0])
    cube([1, 1, 2.00]);
  translate([45, 179, 0])
    cube([1, 1, 2.00]);
  translate([46, 179, 0])
    cube([1, 1, 2.00]);
  translate([47, 179, 0])
    cube([1, 1, 2.00]);
  translate([48, 179, 0])
    cube([1, 1, 1.96]);
  translate([49, 179, 0])
    cube([1, 1, 1.96]);
  translate([50, 179, 0])
    cube([1, 1, 2.04]);
  translate([51, 179, 0])
    cube([1, 1, 1.96]);
  translate([52, 179, 0])
    cube([1, 1, 1.96]);
  translate([53, 179, 0])
    cube([1, 1, 1.96]);
  translate([54, 179, 0])
    cube([1, 1, 1.92]);
  translate([55, 179, 0])
    cube([1, 1, 1.92]);
  translate([56, 179, 0])
    cube([1, 1, 1.96]);
  translate([57, 179, 0])
    cube([1, 1, 1.96]);
  translate([58, 179, 0])
    cube([1, 1, 1.96]);
  translate([59, 179, 0])
    cube([1, 1, 2.00]);
  translate([60, 179, 0])
    cube([1, 1, 1.92]);
  translate([61, 179, 0])
    cube([1, 1, 1.92]);
  translate([62, 179, 0])
    cube([1, 1, 1.92]);
  translate([63, 179, 0])
    cube([1, 1, 1.92]);
  translate([64, 179, 0])
    cube([1, 1, 1.92]);
  translate([65, 179, 0])
    cube([1, 1, 1.92]);
  translate([66, 179, 0])
    cube([1, 1, 1.92]);
  translate([67, 179, 0])
    cube([1, 1, 1.92]);
  translate([68, 179, 0])
    cube([1, 1, 1.96]);
  translate([69, 179, 0])
    cube([1, 1, 1.92]);
  translate([70, 179, 0])
    cube([1, 1, 1.69]);
  translate([71, 179, 0])
    cube([1, 1, 0.78]);
  translate([72, 179, 0])
    cube([1, 1, 1.65]);
  translate([73, 179, 0])
    cube([1, 1, 1.88]);
  translate([74, 179, 0])
    cube([1, 1, 1.45]);
  translate([75, 179, 0])
    cube([1, 1, 1.29]);
  translate([76, 179, 0])
    cube([1, 1, 1.25]);
  translate([77, 179, 0])
    cube([1, 1, 1.06]);
  translate([78, 179, 0])
    cube([1, 1, 7.10]);
  translate([79, 179, 0])
    cube([1, 1, 1.49]);
  translate([80, 179, 0])
    cube([1, 1, 2.00]);
  translate([81, 179, 0])
    cube([1, 1, 0.16]);
  translate([82, 179, 0])
    cube([1, 1, 0.20]);
  translate([83, 179, 0])
    cube([1, 1, 0.55]);
  translate([84, 179, 0])
    cube([1, 1, 0.59]);
  translate([85, 179, 0])
    cube([1, 1, 0.90]);
  translate([86, 179, 0])
    cube([1, 1, 1.22]);
  translate([87, 179, 0])
    cube([1, 1, 1.29]);
  translate([88, 179, 0])
    cube([1, 1, 1.14]);
  translate([89, 179, 0])
    cube([1, 1, 1.10]);
  translate([90, 179, 0])
    cube([1, 1, 1.14]);
  translate([91, 179, 0])
    cube([1, 1, 1.22]);
  translate([92, 179, 0])
    cube([1, 1, 1.14]);
  translate([93, 179, 0])
    cube([1, 1, 1.18]);
  translate([94, 179, 0])
    cube([1, 1, 1.10]);
  translate([95, 179, 0])
    cube([1, 1, 0.90]);
  translate([96, 179, 0])
    cube([1, 1, 1.14]);
  translate([97, 179, 0])
    cube([1, 1, 0.63]);
  translate([98, 179, 0])
    cube([1, 1, 1.33]);
  translate([99, 179, 0])
    cube([1, 1, 1.69]);
  translate([100, 179, 0])
    cube([1, 1, 1.96]);
  translate([101, 179, 0])
    cube([1, 1, 3.22]);
  translate([102, 179, 0])
    cube([1, 1, 2.31]);
  translate([103, 179, 0])
    cube([1, 1, 2.12]);
  translate([104, 179, 0])
    cube([1, 1, 3.41]);
  translate([105, 179, 0])
    cube([1, 1, 4.86]);
  translate([106, 179, 0])
    cube([1, 1, 4.78]);
  translate([107, 179, 0])
    cube([1, 1, 4.82]);
  translate([108, 179, 0])
    cube([1, 1, 4.63]);
  translate([109, 179, 0])
    cube([1, 1, 4.51]);
  translate([110, 179, 0])
    cube([1, 1, 4.31]);
  translate([111, 179, 0])
    cube([1, 1, 4.27]);
  translate([112, 179, 0])
    cube([1, 1, 4.43]);
  translate([113, 179, 0])
    cube([1, 1, 4.35]);
  translate([114, 179, 0])
    cube([1, 1, 4.51]);
  translate([115, 179, 0])
    cube([1, 1, 4.47]);
  translate([116, 179, 0])
    cube([1, 1, 4.51]);
  translate([117, 179, 0])
    cube([1, 1, 4.67]);
  translate([118, 179, 0])
    cube([1, 1, 4.86]);
  translate([119, 179, 0])
    cube([1, 1, 5.25]);
  translate([120, 179, 0])
    cube([1, 1, 5.25]);
  translate([121, 179, 0])
    cube([1, 1, 5.37]);
  translate([122, 179, 0])
    cube([1, 1, 5.22]);
  translate([123, 179, 0])
    cube([1, 1, 1.92]);
  translate([124, 179, 0])
    cube([1, 1, 1.80]);
  translate([125, 179, 0])
    cube([1, 1, 1.88]);
  translate([126, 179, 0])
    cube([1, 1, 1.84]);
  translate([127, 179, 0])
    cube([1, 1, 1.96]);
  translate([128, 179, 0])
    cube([1, 1, 2.20]);
  translate([129, 179, 0])
    cube([1, 1, 2.00]);
  translate([130, 179, 0])
    cube([1, 1, 2.47]);
  translate([131, 179, 0])
    cube([1, 1, 2.12]);
  translate([132, 179, 0])
    cube([1, 1, 2.82]);
  translate([133, 179, 0])
    cube([1, 1, 3.96]);
  translate([134, 179, 0])
    cube([1, 1, 2.71]);
  translate([135, 179, 0])
    cube([1, 1, 1.06]);
  translate([136, 179, 0])
    cube([1, 1, 1.49]);
  translate([137, 179, 0])
    cube([1, 1, 1.22]);
  translate([138, 179, 0])
    cube([1, 1, 2.51]);
  translate([139, 179, 0])
    cube([1, 1, 4.47]);
  translate([140, 179, 0])
    cube([1, 1, 4.31]);
  translate([141, 179, 0])
    cube([1, 1, 4.63]);
  translate([142, 179, 0])
    cube([1, 1, 3.84]);
  translate([143, 179, 0])
    cube([1, 1, 2.78]);
  translate([144, 179, 0])
    cube([1, 1, 3.53]);
  translate([145, 179, 0])
    cube([1, 1, 4.04]);
  translate([146, 179, 0])
    cube([1, 1, 3.22]);
  translate([147, 179, 0])
    cube([1, 1, 3.41]);
  translate([148, 179, 0])
    cube([1, 1, 1.73]);
  translate([149, 179, 0])
    cube([1, 1, 1.76]);
  translate([150, 179, 0])
    cube([1, 1, 1.76]);
  translate([151, 179, 0])
    cube([1, 1, 1.76]);
  translate([152, 179, 0])
    cube([1, 1, 1.76]);
  translate([153, 179, 0])
    cube([1, 1, 1.76]);
  translate([154, 179, 0])
    cube([1, 1, 1.76]);
  translate([155, 179, 0])
    cube([1, 1, 1.76]);
  translate([156, 179, 0])
    cube([1, 1, 1.76]);
  translate([157, 179, 0])
    cube([1, 1, 1.76]);
  translate([158, 179, 0])
    cube([1, 1, 1.84]);
  translate([159, 179, 0])
    cube([1, 1, 1.84]);
  translate([160, 179, 0])
    cube([1, 1, 1.84]);
  translate([161, 179, 0])
    cube([1, 1, 1.76]);
  translate([162, 179, 0])
    cube([1, 1, 4.00]);
  translate([163, 179, 0])
    cube([1, 1, 2.78]);
  translate([164, 179, 0])
    cube([1, 1, 3.02]);
  translate([165, 179, 0])
    cube([1, 1, 3.65]);
  translate([166, 179, 0])
    cube([1, 1, 4.24]);
  translate([167, 179, 0])
    cube([1, 1, 4.75]);
  translate([168, 179, 0])
    cube([1, 1, 5.18]);
  translate([169, 179, 0])
    cube([1, 1, 5.22]);
  translate([170, 179, 0])
    cube([1, 1, 5.53]);
  translate([171, 179, 0])
    cube([1, 1, 5.65]);
  translate([172, 179, 0])
    cube([1, 1, 5.84]);
  translate([173, 179, 0])
    cube([1, 1, 5.92]);
  translate([174, 179, 0])
    cube([1, 1, 5.92]);
  translate([175, 179, 0])
    cube([1, 1, 6.08]);
  translate([176, 179, 0])
    cube([1, 1, 6.27]);
  translate([177, 179, 0])
    cube([1, 1, 6.35]);
  translate([178, 179, 0])
    cube([1, 1, 6.47]);
  translate([179, 179, 0])
    cube([1, 1, 6.31]);
  translate([180, 179, 0])
    cube([1, 1, 5.84]);
  translate([181, 179, 0])
    cube([1, 1, 2.39]);
  translate([182, 179, 0])
    cube([1, 1, 2.35]);
  translate([183, 179, 0])
    cube([1, 1, 2.51]);
  translate([184, 179, 0])
    cube([1, 1, 1.61]);
  translate([185, 179, 0])
    cube([1, 1, 2.12]);
  translate([186, 179, 0])
    cube([1, 1, 1.73]);
  translate([187, 179, 0])
    cube([1, 1, 1.84]);
  translate([188, 179, 0])
    cube([1, 1, 1.84]);
  translate([189, 179, 0])
    cube([1, 1, 1.84]);
  translate([190, 179, 0])
    cube([1, 1, 1.84]);
  translate([191, 179, 0])
    cube([1, 1, 1.84]);
  translate([192, 179, 0])
    cube([1, 1, 1.84]);
  translate([193, 179, 0])
    cube([1, 1, 1.76]);
  translate([194, 179, 0])
    cube([1, 1, 0.12]);
  translate([195, 179, 0])
    cube([1, 1, 0.59]);
  translate([196, 179, 0])
    cube([1, 1, 2.86]);
  translate([197, 179, 0])
    cube([1, 1, 3.45]);
  translate([198, 179, 0])
    cube([1, 1, 2.12]);
  translate([199, 179, 0])
    cube([1, 1, 1.18]);
  translate([200, 179, 0])
    cube([1, 1, 0.90]);
  translate([201, 179, 0])
    cube([1, 1, 0.55]);
  translate([202, 179, 0])
    cube([1, 1, 2.00]);
  translate([203, 179, 0])
    cube([1, 1, 1.88]);
  translate([204, 179, 0])
    cube([1, 1, 1.88]);
  translate([205, 179, 0])
    cube([1, 1, 1.88]);
  translate([206, 179, 0])
    cube([1, 1, 1.80]);
  translate([207, 179, 0])
    cube([1, 1, 1.80]);
  translate([208, 179, 0])
    cube([1, 1, 1.84]);
  translate([209, 179, 0])
    cube([1, 1, 1.84]);
  translate([210, 179, 0])
    cube([1, 1, 1.84]);
  translate([211, 179, 0])
    cube([1, 1, 1.80]);
  translate([212, 179, 0])
    cube([1, 1, 1.84]);
  translate([213, 179, 0])
    cube([1, 1, 1.84]);
  translate([214, 179, 0])
    cube([1, 1, 1.84]);
  translate([215, 179, 0])
    cube([1, 1, 1.88]);
  translate([216, 179, 0])
    cube([1, 1, 1.84]);
  translate([217, 179, 0])
    cube([1, 1, 1.88]);
  translate([218, 179, 0])
    cube([1, 1, 1.80]);
  translate([219, 179, 0])
    cube([1, 1, 1.84]);
  translate([220, 179, 0])
    cube([1, 1, 1.84]);
  translate([221, 179, 0])
    cube([1, 1, 1.84]);
  translate([222, 179, 0])
    cube([1, 1, 1.76]);
  translate([223, 179, 0])
    cube([1, 1, 1.76]);
  translate([224, 179, 0])
    cube([1, 1, 1.84]);
  translate([225, 179, 0])
    cube([1, 1, 1.84]);
  translate([226, 179, 0])
    cube([1, 1, 1.84]);
  translate([227, 179, 0])
    cube([1, 1, 1.80]);
  translate([228, 179, 0])
    cube([1, 1, 1.80]);
  translate([229, 179, 0])
    cube([1, 1, 1.88]);
  translate([230, 179, 0])
    cube([1, 1, 1.76]);
  translate([231, 179, 0])
    cube([1, 1, 1.76]);
  translate([232, 179, 0])
    cube([1, 1, 1.84]);
  translate([233, 179, 0])
    cube([1, 1, 1.84]);
  translate([234, 179, 0])
    cube([1, 1, 1.84]);
  translate([235, 179, 0])
    cube([1, 1, 1.80]);
  translate([236, 179, 0])
    cube([1, 1, 1.80]);
  translate([237, 179, 0])
    cube([1, 1, 1.80]);
  translate([238, 179, 0])
    cube([1, 1, 1.80]);
  translate([239, 179, 0])
    cube([1, 1, 1.80]);
  translate([240, 179, 0])
    cube([1, 1, 1.80]);
  translate([241, 179, 0])
    cube([1, 1, 1.80]);
  translate([242, 179, 0])
    cube([1, 1, 1.80]);
  translate([243, 179, 0])
    cube([1, 1, 1.84]);
  translate([244, 179, 0])
    cube([1, 1, 1.80]);
  translate([245, 179, 0])
    cube([1, 1, 1.80]);
  translate([246, 179, 0])
    cube([1, 1, 1.80]);
  translate([0, 180, 0])
    cube([1, 1, 2.04]);
  translate([1, 180, 0])
    cube([1, 1, 2.04]);
  translate([2, 180, 0])
    cube([1, 1, 2.04]);
  translate([3, 180, 0])
    cube([1, 1, 2.04]);
  translate([4, 180, 0])
    cube([1, 1, 2.04]);
  translate([5, 180, 0])
    cube([1, 1, 2.08]);
  translate([6, 180, 0])
    cube([1, 1, 2.04]);
  translate([7, 180, 0])
    cube([1, 1, 2.04]);
  translate([8, 180, 0])
    cube([1, 1, 2.04]);
  translate([9, 180, 0])
    cube([1, 1, 2.00]);
  translate([10, 180, 0])
    cube([1, 1, 2.04]);
  translate([11, 180, 0])
    cube([1, 1, 2.04]);
  translate([12, 180, 0])
    cube([1, 1, 2.00]);
  translate([13, 180, 0])
    cube([1, 1, 2.04]);
  translate([14, 180, 0])
    cube([1, 1, 2.00]);
  translate([15, 180, 0])
    cube([1, 1, 2.08]);
  translate([16, 180, 0])
    cube([1, 1, 2.00]);
  translate([17, 180, 0])
    cube([1, 1, 2.04]);
  translate([18, 180, 0])
    cube([1, 1, 2.04]);
  translate([19, 180, 0])
    cube([1, 1, 2.04]);
  translate([20, 180, 0])
    cube([1, 1, 2.00]);
  translate([21, 180, 0])
    cube([1, 1, 2.00]);
  translate([22, 180, 0])
    cube([1, 1, 2.00]);
  translate([23, 180, 0])
    cube([1, 1, 2.00]);
  translate([24, 180, 0])
    cube([1, 1, 2.00]);
  translate([25, 180, 0])
    cube([1, 1, 2.00]);
  translate([26, 180, 0])
    cube([1, 1, 2.00]);
  translate([27, 180, 0])
    cube([1, 1, 2.00]);
  translate([28, 180, 0])
    cube([1, 1, 2.00]);
  translate([29, 180, 0])
    cube([1, 1, 2.00]);
  translate([30, 180, 0])
    cube([1, 1, 2.00]);
  translate([31, 180, 0])
    cube([1, 1, 2.00]);
  translate([32, 180, 0])
    cube([1, 1, 2.04]);
  translate([33, 180, 0])
    cube([1, 1, 1.92]);
  translate([34, 180, 0])
    cube([1, 1, 1.96]);
  translate([35, 180, 0])
    cube([1, 1, 2.00]);
  translate([36, 180, 0])
    cube([1, 1, 2.00]);
  translate([37, 180, 0])
    cube([1, 1, 2.00]);
  translate([38, 180, 0])
    cube([1, 1, 2.00]);
  translate([39, 180, 0])
    cube([1, 1, 2.00]);
  translate([40, 180, 0])
    cube([1, 1, 2.00]);
  translate([41, 180, 0])
    cube([1, 1, 2.00]);
  translate([42, 180, 0])
    cube([1, 1, 2.00]);
  translate([43, 180, 0])
    cube([1, 1, 2.00]);
  translate([44, 180, 0])
    cube([1, 1, 2.00]);
  translate([45, 180, 0])
    cube([1, 1, 2.00]);
  translate([46, 180, 0])
    cube([1, 1, 2.00]);
  translate([47, 180, 0])
    cube([1, 1, 1.96]);
  translate([48, 180, 0])
    cube([1, 1, 2.04]);
  translate([49, 180, 0])
    cube([1, 1, 1.96]);
  translate([50, 180, 0])
    cube([1, 1, 1.96]);
  translate([51, 180, 0])
    cube([1, 1, 1.96]);
  translate([52, 180, 0])
    cube([1, 1, 1.96]);
  translate([53, 180, 0])
    cube([1, 1, 1.96]);
  translate([54, 180, 0])
    cube([1, 1, 1.96]);
  translate([55, 180, 0])
    cube([1, 1, 1.96]);
  translate([56, 180, 0])
    cube([1, 1, 1.96]);
  translate([57, 180, 0])
    cube([1, 1, 1.96]);
  translate([58, 180, 0])
    cube([1, 1, 1.96]);
  translate([59, 180, 0])
    cube([1, 1, 1.96]);
  translate([60, 180, 0])
    cube([1, 1, 1.92]);
  translate([61, 180, 0])
    cube([1, 1, 1.92]);
  translate([62, 180, 0])
    cube([1, 1, 1.92]);
  translate([63, 180, 0])
    cube([1, 1, 1.92]);
  translate([64, 180, 0])
    cube([1, 1, 1.92]);
  translate([65, 180, 0])
    cube([1, 1, 1.92]);
  translate([66, 180, 0])
    cube([1, 1, 1.92]);
  translate([67, 180, 0])
    cube([1, 1, 1.92]);
  translate([68, 180, 0])
    cube([1, 1, 2.20]);
  translate([69, 180, 0])
    cube([1, 1, 1.02]);
  translate([70, 180, 0])
    cube([1, 1, 1.22]);
  translate([71, 180, 0])
    cube([1, 1, 1.65]);
  translate([72, 180, 0])
    cube([1, 1, 2.00]);
  translate([73, 180, 0])
    cube([1, 1, 1.41]);
  translate([74, 180, 0])
    cube([1, 1, 1.61]);
  translate([75, 180, 0])
    cube([1, 1, 1.14]);
  translate([76, 180, 0])
    cube([1, 1, 2.20]);
  translate([77, 180, 0])
    cube([1, 1, 2.82]);
  translate([78, 180, 0])
    cube([1, 1, 5.02]);
  translate([79, 180, 0])
    cube([1, 1, 6.35]);
  translate([80, 180, 0])
    cube([1, 1, 0.75]);
  translate([81, 180, 0])
    cube([1, 1, 0.35]);
  translate([82, 180, 0])
    cube([1, 1, 0.31]);
  translate([83, 180, 0])
    cube([1, 1, 0.82]);
  translate([84, 180, 0])
    cube([1, 1, 0.51]);
  translate([85, 180, 0])
    cube([1, 1, 0.67]);
  translate([86, 180, 0])
    cube([1, 1, 0.55]);
  translate([87, 180, 0])
    cube([1, 1, 1.22]);
  translate([88, 180, 0])
    cube([1, 1, 1.06]);
  translate([89, 180, 0])
    cube([1, 1, 1.06]);
  translate([90, 180, 0])
    cube([1, 1, 1.29]);
  translate([91, 180, 0])
    cube([1, 1, 1.18]);
  translate([92, 180, 0])
    cube([1, 1, 1.22]);
  translate([93, 180, 0])
    cube([1, 1, 1.25]);
  translate([94, 180, 0])
    cube([1, 1, 1.25]);
  translate([95, 180, 0])
    cube([1, 1, 1.14]);
  translate([96, 180, 0])
    cube([1, 1, 0.90]);
  translate([97, 180, 0])
    cube([1, 1, 1.18]);
  translate([98, 180, 0])
    cube([1, 1, 1.10]);
  translate([99, 180, 0])
    cube([1, 1, 0.78]);
  translate([100, 180, 0])
    cube([1, 1, 1.53]);
  translate([101, 180, 0])
    cube([1, 1, 3.02]);
  translate([102, 180, 0])
    cube([1, 1, 3.25]);
  translate([103, 180, 0])
    cube([1, 1, 2.59]);
  translate([104, 180, 0])
    cube([1, 1, 2.82]);
  translate([105, 180, 0])
    cube([1, 1, 3.18]);
  translate([106, 180, 0])
    cube([1, 1, 2.59]);
  translate([107, 180, 0])
    cube([1, 1, 2.24]);
  translate([108, 180, 0])
    cube([1, 1, 2.12]);
  translate([109, 180, 0])
    cube([1, 1, 1.96]);
  translate([110, 180, 0])
    cube([1, 1, 2.04]);
  translate([111, 180, 0])
    cube([1, 1, 3.76]);
  translate([112, 180, 0])
    cube([1, 1, 4.67]);
  translate([113, 180, 0])
    cube([1, 1, 4.78]);
  translate([114, 180, 0])
    cube([1, 1, 4.78]);
  translate([115, 180, 0])
    cube([1, 1, 4.75]);
  translate([116, 180, 0])
    cube([1, 1, 5.14]);
  translate([117, 180, 0])
    cube([1, 1, 5.18]);
  translate([118, 180, 0])
    cube([1, 1, 5.45]);
  translate([119, 180, 0])
    cube([1, 1, 4.78]);
  translate([120, 180, 0])
    cube([1, 1, 1.96]);
  translate([121, 180, 0])
    cube([1, 1, 2.04]);
  translate([122, 180, 0])
    cube([1, 1, 1.88]);
  translate([123, 180, 0])
    cube([1, 1, 2.00]);
  translate([124, 180, 0])
    cube([1, 1, 2.12]);
  translate([125, 180, 0])
    cube([1, 1, 2.35]);
  translate([126, 180, 0])
    cube([1, 1, 2.31]);
  translate([127, 180, 0])
    cube([1, 1, 1.96]);
  translate([128, 180, 0])
    cube([1, 1, 2.08]);
  translate([129, 180, 0])
    cube([1, 1, 2.04]);
  translate([130, 180, 0])
    cube([1, 1, 1.88]);
  translate([131, 180, 0])
    cube([1, 1, 1.84]);
  translate([132, 180, 0])
    cube([1, 1, 0.59]);
  translate([133, 180, 0])
    cube([1, 1, 2.35]);
  translate([134, 180, 0])
    cube([1, 1, 2.04]);
  translate([135, 180, 0])
    cube([1, 1, 1.02]);
  translate([136, 180, 0])
    cube([1, 1, 1.88]);
  translate([137, 180, 0])
    cube([1, 1, 2.08]);
  translate([138, 180, 0])
    cube([1, 1, 0.90]);
  translate([139, 180, 0])
    cube([1, 1, 2.43]);
  translate([140, 180, 0])
    cube([1, 1, 2.82]);
  translate([141, 180, 0])
    cube([1, 1, 2.78]);
  translate([142, 180, 0])
    cube([1, 1, 4.55]);
  translate([143, 180, 0])
    cube([1, 1, 2.82]);
  translate([144, 180, 0])
    cube([1, 1, 2.67]);
  translate([145, 180, 0])
    cube([1, 1, 2.00]);
  translate([146, 180, 0])
    cube([1, 1, 3.69]);
  translate([147, 180, 0])
    cube([1, 1, 3.06]);
  translate([148, 180, 0])
    cube([1, 1, 1.76]);
  translate([149, 180, 0])
    cube([1, 1, 1.76]);
  translate([150, 180, 0])
    cube([1, 1, 1.80]);
  translate([151, 180, 0])
    cube([1, 1, 1.80]);
  translate([152, 180, 0])
    cube([1, 1, 1.73]);
  translate([153, 180, 0])
    cube([1, 1, 1.80]);
  translate([154, 180, 0])
    cube([1, 1, 1.80]);
  translate([155, 180, 0])
    cube([1, 1, 1.80]);
  translate([156, 180, 0])
    cube([1, 1, 1.80]);
  translate([157, 180, 0])
    cube([1, 1, 1.80]);
  translate([158, 180, 0])
    cube([1, 1, 1.80]);
  translate([159, 180, 0])
    cube([1, 1, 1.80]);
  translate([160, 180, 0])
    cube([1, 1, 1.80]);
  translate([161, 180, 0])
    cube([1, 1, 1.76]);
  translate([162, 180, 0])
    cube([1, 1, 1.61]);
  translate([163, 180, 0])
    cube([1, 1, 2.55]);
  translate([164, 180, 0])
    cube([1, 1, 3.18]);
  translate([165, 180, 0])
    cube([1, 1, 3.06]);
  translate([166, 180, 0])
    cube([1, 1, 3.45]);
  translate([167, 180, 0])
    cube([1, 1, 4.20]);
  translate([168, 180, 0])
    cube([1, 1, 4.71]);
  translate([169, 180, 0])
    cube([1, 1, 5.02]);
  translate([170, 180, 0])
    cube([1, 1, 5.18]);
  translate([171, 180, 0])
    cube([1, 1, 5.37]);
  translate([172, 180, 0])
    cube([1, 1, 5.49]);
  translate([173, 180, 0])
    cube([1, 1, 5.69]);
  translate([174, 180, 0])
    cube([1, 1, 5.69]);
  translate([175, 180, 0])
    cube([1, 1, 5.73]);
  translate([176, 180, 0])
    cube([1, 1, 5.88]);
  translate([177, 180, 0])
    cube([1, 1, 6.04]);
  translate([178, 180, 0])
    cube([1, 1, 6.20]);
  translate([179, 180, 0])
    cube([1, 1, 6.00]);
  translate([180, 180, 0])
    cube([1, 1, 2.78]);
  translate([181, 180, 0])
    cube([1, 1, 3.02]);
  translate([182, 180, 0])
    cube([1, 1, 2.12]);
  translate([183, 180, 0])
    cube([1, 1, 3.92]);
  translate([184, 180, 0])
    cube([1, 1, 2.08]);
  translate([185, 180, 0])
    cube([1, 1, 2.78]);
  translate([186, 180, 0])
    cube([1, 1, 1.65]);
  translate([187, 180, 0])
    cube([1, 1, 1.80]);
  translate([188, 180, 0])
    cube([1, 1, 1.80]);
  translate([189, 180, 0])
    cube([1, 1, 1.88]);
  translate([190, 180, 0])
    cube([1, 1, 1.84]);
  translate([191, 180, 0])
    cube([1, 1, 1.80]);
  translate([192, 180, 0])
    cube([1, 1, 1.84]);
  translate([193, 180, 0])
    cube([1, 1, 1.88]);
  translate([194, 180, 0])
    cube([1, 1, 0.51]);
  translate([195, 180, 0])
    cube([1, 1, 2.78]);
  translate([196, 180, 0])
    cube([1, 1, 2.82]);
  translate([197, 180, 0])
    cube([1, 1, 2.82]);
  translate([198, 180, 0])
    cube([1, 1, 1.80]);
  translate([199, 180, 0])
    cube([1, 1, 0.75]);
  translate([200, 180, 0])
    cube([1, 1, 0.90]);
  translate([201, 180, 0])
    cube([1, 1, 1.76]);
  translate([202, 180, 0])
    cube([1, 1, 1.80]);
  translate([203, 180, 0])
    cube([1, 1, 1.69]);
  translate([204, 180, 0])
    cube([1, 1, 1.80]);
  translate([205, 180, 0])
    cube([1, 1, 1.84]);
  translate([206, 180, 0])
    cube([1, 1, 1.84]);
  translate([207, 180, 0])
    cube([1, 1, 1.84]);
  translate([208, 180, 0])
    cube([1, 1, 1.88]);
  translate([209, 180, 0])
    cube([1, 1, 1.88]);
  translate([210, 180, 0])
    cube([1, 1, 1.88]);
  translate([211, 180, 0])
    cube([1, 1, 1.88]);
  translate([212, 180, 0])
    cube([1, 1, 1.80]);
  translate([213, 180, 0])
    cube([1, 1, 1.80]);
  translate([214, 180, 0])
    cube([1, 1, 1.88]);
  translate([215, 180, 0])
    cube([1, 1, 1.88]);
  translate([216, 180, 0])
    cube([1, 1, 1.88]);
  translate([217, 180, 0])
    cube([1, 1, 1.88]);
  translate([218, 180, 0])
    cube([1, 1, 1.80]);
  translate([219, 180, 0])
    cube([1, 1, 1.84]);
  translate([220, 180, 0])
    cube([1, 1, 1.84]);
  translate([221, 180, 0])
    cube([1, 1, 1.84]);
  translate([222, 180, 0])
    cube([1, 1, 1.84]);
  translate([223, 180, 0])
    cube([1, 1, 1.84]);
  translate([224, 180, 0])
    cube([1, 1, 1.84]);
  translate([225, 180, 0])
    cube([1, 1, 1.84]);
  translate([226, 180, 0])
    cube([1, 1, 1.84]);
  translate([227, 180, 0])
    cube([1, 1, 1.84]);
  translate([228, 180, 0])
    cube([1, 1, 1.84]);
  translate([229, 180, 0])
    cube([1, 1, 1.84]);
  translate([230, 180, 0])
    cube([1, 1, 1.84]);
  translate([231, 180, 0])
    cube([1, 1, 1.84]);
  translate([232, 180, 0])
    cube([1, 1, 1.84]);
  translate([233, 180, 0])
    cube([1, 1, 1.80]);
  translate([234, 180, 0])
    cube([1, 1, 1.84]);
  translate([235, 180, 0])
    cube([1, 1, 1.80]);
  translate([236, 180, 0])
    cube([1, 1, 1.84]);
  translate([237, 180, 0])
    cube([1, 1, 1.80]);
  translate([238, 180, 0])
    cube([1, 1, 1.80]);
  translate([239, 180, 0])
    cube([1, 1, 1.80]);
  translate([240, 180, 0])
    cube([1, 1, 1.80]);
  translate([241, 180, 0])
    cube([1, 1, 1.80]);
  translate([242, 180, 0])
    cube([1, 1, 1.80]);
  translate([243, 180, 0])
    cube([1, 1, 1.84]);
  translate([244, 180, 0])
    cube([1, 1, 1.84]);
  translate([245, 180, 0])
    cube([1, 1, 1.84]);
  translate([246, 180, 0])
    cube([1, 1, 1.80]);
  translate([0, 181, 0])
    cube([1, 1, 2.04]);
  translate([1, 181, 0])
    cube([1, 1, 2.00]);
  translate([2, 181, 0])
    cube([1, 1, 2.04]);
  translate([3, 181, 0])
    cube([1, 1, 2.04]);
  translate([4, 181, 0])
    cube([1, 1, 2.04]);
  translate([5, 181, 0])
    cube([1, 1, 2.04]);
  translate([6, 181, 0])
    cube([1, 1, 2.00]);
  translate([7, 181, 0])
    cube([1, 1, 2.00]);
  translate([8, 181, 0])
    cube([1, 1, 2.04]);
  translate([9, 181, 0])
    cube([1, 1, 2.04]);
  translate([10, 181, 0])
    cube([1, 1, 2.04]);
  translate([11, 181, 0])
    cube([1, 1, 2.04]);
  translate([12, 181, 0])
    cube([1, 1, 2.00]);
  translate([13, 181, 0])
    cube([1, 1, 2.04]);
  translate([14, 181, 0])
    cube([1, 1, 2.04]);
  translate([15, 181, 0])
    cube([1, 1, 2.04]);
  translate([16, 181, 0])
    cube([1, 1, 2.04]);
  translate([17, 181, 0])
    cube([1, 1, 2.00]);
  translate([18, 181, 0])
    cube([1, 1, 2.04]);
  translate([19, 181, 0])
    cube([1, 1, 2.00]);
  translate([20, 181, 0])
    cube([1, 1, 2.04]);
  translate([21, 181, 0])
    cube([1, 1, 2.04]);
  translate([22, 181, 0])
    cube([1, 1, 2.00]);
  translate([23, 181, 0])
    cube([1, 1, 2.00]);
  translate([24, 181, 0])
    cube([1, 1, 2.00]);
  translate([25, 181, 0])
    cube([1, 1, 2.00]);
  translate([26, 181, 0])
    cube([1, 1, 2.00]);
  translate([27, 181, 0])
    cube([1, 1, 2.00]);
  translate([28, 181, 0])
    cube([1, 1, 2.00]);
  translate([29, 181, 0])
    cube([1, 1, 2.00]);
  translate([30, 181, 0])
    cube([1, 1, 2.00]);
  translate([31, 181, 0])
    cube([1, 1, 2.04]);
  translate([32, 181, 0])
    cube([1, 1, 2.08]);
  translate([33, 181, 0])
    cube([1, 1, 2.00]);
  translate([34, 181, 0])
    cube([1, 1, 2.00]);
  translate([35, 181, 0])
    cube([1, 1, 2.00]);
  translate([36, 181, 0])
    cube([1, 1, 2.00]);
  translate([37, 181, 0])
    cube([1, 1, 2.00]);
  translate([38, 181, 0])
    cube([1, 1, 2.00]);
  translate([39, 181, 0])
    cube([1, 1, 2.00]);
  translate([40, 181, 0])
    cube([1, 1, 2.00]);
  translate([41, 181, 0])
    cube([1, 1, 1.96]);
  translate([42, 181, 0])
    cube([1, 1, 2.00]);
  translate([43, 181, 0])
    cube([1, 1, 2.00]);
  translate([44, 181, 0])
    cube([1, 1, 2.00]);
  translate([45, 181, 0])
    cube([1, 1, 2.00]);
  translate([46, 181, 0])
    cube([1, 1, 2.00]);
  translate([47, 181, 0])
    cube([1, 1, 1.96]);
  translate([48, 181, 0])
    cube([1, 1, 1.96]);
  translate([49, 181, 0])
    cube([1, 1, 2.00]);
  translate([50, 181, 0])
    cube([1, 1, 2.00]);
  translate([51, 181, 0])
    cube([1, 1, 2.00]);
  translate([52, 181, 0])
    cube([1, 1, 2.00]);
  translate([53, 181, 0])
    cube([1, 1, 2.00]);
  translate([54, 181, 0])
    cube([1, 1, 1.96]);
  translate([55, 181, 0])
    cube([1, 1, 1.96]);
  translate([56, 181, 0])
    cube([1, 1, 1.96]);
  translate([57, 181, 0])
    cube([1, 1, 1.92]);
  translate([58, 181, 0])
    cube([1, 1, 2.00]);
  translate([59, 181, 0])
    cube([1, 1, 1.96]);
  translate([60, 181, 0])
    cube([1, 1, 1.96]);
  translate([61, 181, 0])
    cube([1, 1, 1.96]);
  translate([62, 181, 0])
    cube([1, 1, 1.96]);
  translate([63, 181, 0])
    cube([1, 1, 1.96]);
  translate([64, 181, 0])
    cube([1, 1, 1.92]);
  translate([65, 181, 0])
    cube([1, 1, 1.92]);
  translate([66, 181, 0])
    cube([1, 1, 1.92]);
  translate([67, 181, 0])
    cube([1, 1, 1.92]);
  translate([68, 181, 0])
    cube([1, 1, 1.02]);
  translate([69, 181, 0])
    cube([1, 1, 6.12]);
  translate([70, 181, 0])
    cube([1, 1, 1.41]);
  translate([71, 181, 0])
    cube([1, 1, 2.00]);
  translate([72, 181, 0])
    cube([1, 1, 1.45]);
  translate([73, 181, 0])
    cube([1, 1, 1.96]);
  translate([74, 181, 0])
    cube([1, 1, 0.63]);
  translate([75, 181, 0])
    cube([1, 1, 0.12]);
  translate([76, 181, 0])
    cube([1, 1, 1.53]);
  translate([77, 181, 0])
    cube([1, 1, 1.69]);
  translate([78, 181, 0])
    cube([1, 1, 1.92]);
  translate([79, 181, 0])
    cube([1, 1, 1.25]);
  translate([80, 181, 0])
    cube([1, 1, 0.43]);
  translate([81, 181, 0])
    cube([1, 1, 0.39]);
  translate([82, 181, 0])
    cube([1, 1, 0.71]);
  translate([83, 181, 0])
    cube([1, 1, 0.51]);
  translate([84, 181, 0])
    cube([1, 1, 0.71]);
  translate([85, 181, 0])
    cube([1, 1, 0.75]);
  translate([86, 181, 0])
    cube([1, 1, 0.94]);
  translate([87, 181, 0])
    cube([1, 1, 1.02]);
  translate([88, 181, 0])
    cube([1, 1, 1.02]);
  translate([89, 181, 0])
    cube([1, 1, 0.71]);
  translate([90, 181, 0])
    cube([1, 1, 1.18]);
  translate([91, 181, 0])
    cube([1, 1, 0.78]);
  translate([92, 181, 0])
    cube([1, 1, 1.10]);
  translate([93, 181, 0])
    cube([1, 1, 1.25]);
  translate([94, 181, 0])
    cube([1, 1, 1.25]);
  translate([95, 181, 0])
    cube([1, 1, 1.25]);
  translate([96, 181, 0])
    cube([1, 1, 1.41]);
  translate([97, 181, 0])
    cube([1, 1, 1.45]);
  translate([98, 181, 0])
    cube([1, 1, 1.61]);
  translate([99, 181, 0])
    cube([1, 1, 2.12]);
  translate([100, 181, 0])
    cube([1, 1, 2.04]);
  translate([101, 181, 0])
    cube([1, 1, 3.22]);
  translate([102, 181, 0])
    cube([1, 1, 2.55]);
  translate([103, 181, 0])
    cube([1, 1, 2.75]);
  translate([104, 181, 0])
    cube([1, 1, 1.22]);
  translate([105, 181, 0])
    cube([1, 1, 2.08]);
  translate([106, 181, 0])
    cube([1, 1, 3.02]);
  translate([107, 181, 0])
    cube([1, 1, 1.73]);
  translate([108, 181, 0])
    cube([1, 1, 2.63]);
  translate([109, 181, 0])
    cube([1, 1, 2.86]);
  translate([110, 181, 0])
    cube([1, 1, 2.63]);
  translate([111, 181, 0])
    cube([1, 1, 2.63]);
  translate([112, 181, 0])
    cube([1, 1, 2.12]);
  translate([113, 181, 0])
    cube([1, 1, 2.43]);
  translate([114, 181, 0])
    cube([1, 1, 2.47]);
  translate([115, 181, 0])
    cube([1, 1, 2.24]);
  translate([116, 181, 0])
    cube([1, 1, 2.43]);
  translate([117, 181, 0])
    cube([1, 1, 2.51]);
  translate([118, 181, 0])
    cube([1, 1, 2.59]);
  translate([119, 181, 0])
    cube([1, 1, 2.75]);
  translate([120, 181, 0])
    cube([1, 1, 2.35]);
  translate([121, 181, 0])
    cube([1, 1, 2.31]);
  translate([122, 181, 0])
    cube([1, 1, 2.20]);
  translate([123, 181, 0])
    cube([1, 1, 1.84]);
  translate([124, 181, 0])
    cube([1, 1, 1.92]);
  translate([125, 181, 0])
    cube([1, 1, 1.92]);
  translate([126, 181, 0])
    cube([1, 1, 1.65]);
  translate([127, 181, 0])
    cube([1, 1, 2.35]);
  translate([128, 181, 0])
    cube([1, 1, 2.00]);
  translate([129, 181, 0])
    cube([1, 1, 1.76]);
  translate([130, 181, 0])
    cube([1, 1, 1.80]);
  translate([131, 181, 0])
    cube([1, 1, 1.65]);
  translate([132, 181, 0])
    cube([1, 1, 0.63]);
  translate([133, 181, 0])
    cube([1, 1, 1.76]);
  translate([134, 181, 0])
    cube([1, 1, 2.55]);
  translate([135, 181, 0])
    cube([1, 1, 2.71]);
  translate([136, 181, 0])
    cube([1, 1, 2.24]);
  translate([137, 181, 0])
    cube([1, 1, 2.31]);
  translate([138, 181, 0])
    cube([1, 1, 0.86]);
  translate([139, 181, 0])
    cube([1, 1, 4.86]);
  translate([140, 181, 0])
    cube([1, 1, 2.12]);
  translate([141, 181, 0])
    cube([1, 1, 1.88]);
  translate([142, 181, 0])
    cube([1, 1, 2.12]);
  translate([143, 181, 0])
    cube([1, 1, 2.47]);
  translate([144, 181, 0])
    cube([1, 1, 3.18]);
  translate([145, 181, 0])
    cube([1, 1, 3.29]);
  translate([146, 181, 0])
    cube([1, 1, 2.59]);
  translate([147, 181, 0])
    cube([1, 1, 3.06]);
  translate([148, 181, 0])
    cube([1, 1, 2.90]);
  translate([149, 181, 0])
    cube([1, 1, 1.76]);
  translate([150, 181, 0])
    cube([1, 1, 1.73]);
  translate([151, 181, 0])
    cube([1, 1, 1.76]);
  translate([152, 181, 0])
    cube([1, 1, 1.76]);
  translate([153, 181, 0])
    cube([1, 1, 1.80]);
  translate([154, 181, 0])
    cube([1, 1, 1.80]);
  translate([155, 181, 0])
    cube([1, 1, 1.80]);
  translate([156, 181, 0])
    cube([1, 1, 1.73]);
  translate([157, 181, 0])
    cube([1, 1, 1.76]);
  translate([158, 181, 0])
    cube([1, 1, 1.80]);
  translate([159, 181, 0])
    cube([1, 1, 1.80]);
  translate([160, 181, 0])
    cube([1, 1, 1.80]);
  translate([161, 181, 0])
    cube([1, 1, 1.80]);
  translate([162, 181, 0])
    cube([1, 1, 1.80]);
  translate([163, 181, 0])
    cube([1, 1, 1.80]);
  translate([164, 181, 0])
    cube([1, 1, 2.31]);
  translate([165, 181, 0])
    cube([1, 1, 4.24]);
  translate([166, 181, 0])
    cube([1, 1, 3.25]);
  translate([167, 181, 0])
    cube([1, 1, 3.57]);
  translate([168, 181, 0])
    cube([1, 1, 3.96]);
  translate([169, 181, 0])
    cube([1, 1, 4.55]);
  translate([170, 181, 0])
    cube([1, 1, 5.02]);
  translate([171, 181, 0])
    cube([1, 1, 5.14]);
  translate([172, 181, 0])
    cube([1, 1, 5.22]);
  translate([173, 181, 0])
    cube([1, 1, 5.41]);
  translate([174, 181, 0])
    cube([1, 1, 5.41]);
  translate([175, 181, 0])
    cube([1, 1, 5.45]);
  translate([176, 181, 0])
    cube([1, 1, 5.45]);
  translate([177, 181, 0])
    cube([1, 1, 5.69]);
  translate([178, 181, 0])
    cube([1, 1, 5.88]);
  translate([179, 181, 0])
    cube([1, 1, 3.37]);
  translate([180, 181, 0])
    cube([1, 1, 1.61]);
  translate([181, 181, 0])
    cube([1, 1, 2.55]);
  translate([182, 181, 0])
    cube([1, 1, 1.84]);
  translate([183, 181, 0])
    cube([1, 1, 2.08]);
  translate([184, 181, 0])
    cube([1, 1, 1.69]);
  translate([185, 181, 0])
    cube([1, 1, 1.92]);
  translate([186, 181, 0])
    cube([1, 1, 2.82]);
  translate([187, 181, 0])
    cube([1, 1, 3.57]);
  translate([188, 181, 0])
    cube([1, 1, 2.82]);
  translate([189, 181, 0])
    cube([1, 1, 1.37]);
  translate([190, 181, 0])
    cube([1, 1, 1.84]);
  translate([191, 181, 0])
    cube([1, 1, 1.80]);
  translate([192, 181, 0])
    cube([1, 1, 1.88]);
  translate([193, 181, 0])
    cube([1, 1, 2.71]);
  translate([194, 181, 0])
    cube([1, 1, 1.25]);
  translate([195, 181, 0])
    cube([1, 1, 1.22]);
  translate([196, 181, 0])
    cube([1, 1, 0.90]);
  translate([197, 181, 0])
    cube([1, 1, 2.82]);
  translate([198, 181, 0])
    cube([1, 1, 3.14]);
  translate([199, 181, 0])
    cube([1, 1, 2.00]);
  translate([200, 181, 0])
    cube([1, 1, 3.14]);
  translate([201, 181, 0])
    cube([1, 1, 2.12]);
  translate([202, 181, 0])
    cube([1, 1, 2.47]);
  translate([203, 181, 0])
    cube([1, 1, 2.39]);
  translate([204, 181, 0])
    cube([1, 1, 2.16]);
  translate([205, 181, 0])
    cube([1, 1, 1.80]);
  translate([206, 181, 0])
    cube([1, 1, 1.84]);
  translate([207, 181, 0])
    cube([1, 1, 1.88]);
  translate([208, 181, 0])
    cube([1, 1, 1.88]);
  translate([209, 181, 0])
    cube([1, 1, 1.88]);
  translate([210, 181, 0])
    cube([1, 1, 1.88]);
  translate([211, 181, 0])
    cube([1, 1, 1.88]);
  translate([212, 181, 0])
    cube([1, 1, 1.88]);
  translate([213, 181, 0])
    cube([1, 1, 1.88]);
  translate([214, 181, 0])
    cube([1, 1, 1.84]);
  translate([215, 181, 0])
    cube([1, 1, 1.88]);
  translate([216, 181, 0])
    cube([1, 1, 1.88]);
  translate([217, 181, 0])
    cube([1, 1, 1.84]);
  translate([218, 181, 0])
    cube([1, 1, 1.84]);
  translate([219, 181, 0])
    cube([1, 1, 1.88]);
  translate([220, 181, 0])
    cube([1, 1, 1.84]);
  translate([221, 181, 0])
    cube([1, 1, 1.84]);
  translate([222, 181, 0])
    cube([1, 1, 1.84]);
  translate([223, 181, 0])
    cube([1, 1, 1.84]);
  translate([224, 181, 0])
    cube([1, 1, 1.84]);
  translate([225, 181, 0])
    cube([1, 1, 1.84]);
  translate([226, 181, 0])
    cube([1, 1, 1.88]);
  translate([227, 181, 0])
    cube([1, 1, 1.84]);
  translate([228, 181, 0])
    cube([1, 1, 1.84]);
  translate([229, 181, 0])
    cube([1, 1, 1.84]);
  translate([230, 181, 0])
    cube([1, 1, 1.80]);
  translate([231, 181, 0])
    cube([1, 1, 1.88]);
  translate([232, 181, 0])
    cube([1, 1, 1.84]);
  translate([233, 181, 0])
    cube([1, 1, 1.84]);
  translate([234, 181, 0])
    cube([1, 1, 1.84]);
  translate([235, 181, 0])
    cube([1, 1, 1.84]);
  translate([236, 181, 0])
    cube([1, 1, 1.84]);
  translate([237, 181, 0])
    cube([1, 1, 1.84]);
  translate([238, 181, 0])
    cube([1, 1, 1.84]);
  translate([239, 181, 0])
    cube([1, 1, 1.88]);
  translate([240, 181, 0])
    cube([1, 1, 1.84]);
  translate([241, 181, 0])
    cube([1, 1, 1.84]);
  translate([242, 181, 0])
    cube([1, 1, 1.84]);
  translate([243, 181, 0])
    cube([1, 1, 1.84]);
  translate([244, 181, 0])
    cube([1, 1, 1.84]);
  translate([245, 181, 0])
    cube([1, 1, 1.84]);
  translate([246, 181, 0])
    cube([1, 1, 1.76]);
  translate([0, 182, 0])
    cube([1, 1, 2.04]);
  translate([1, 182, 0])
    cube([1, 1, 2.00]);
  translate([2, 182, 0])
    cube([1, 1, 2.04]);
  translate([3, 182, 0])
    cube([1, 1, 2.04]);
  translate([4, 182, 0])
    cube([1, 1, 2.04]);
  translate([5, 182, 0])
    cube([1, 1, 2.04]);
  translate([6, 182, 0])
    cube([1, 1, 2.00]);
  translate([7, 182, 0])
    cube([1, 1, 2.00]);
  translate([8, 182, 0])
    cube([1, 1, 2.04]);
  translate([9, 182, 0])
    cube([1, 1, 2.04]);
  translate([10, 182, 0])
    cube([1, 1, 2.04]);
  translate([11, 182, 0])
    cube([1, 1, 2.04]);
  translate([12, 182, 0])
    cube([1, 1, 2.00]);
  translate([13, 182, 0])
    cube([1, 1, 2.04]);
  translate([14, 182, 0])
    cube([1, 1, 2.04]);
  translate([15, 182, 0])
    cube([1, 1, 2.04]);
  translate([16, 182, 0])
    cube([1, 1, 2.04]);
  translate([17, 182, 0])
    cube([1, 1, 2.00]);
  translate([18, 182, 0])
    cube([1, 1, 2.04]);
  translate([19, 182, 0])
    cube([1, 1, 2.00]);
  translate([20, 182, 0])
    cube([1, 1, 2.04]);
  translate([21, 182, 0])
    cube([1, 1, 2.04]);
  translate([22, 182, 0])
    cube([1, 1, 2.00]);
  translate([23, 182, 0])
    cube([1, 1, 2.00]);
  translate([24, 182, 0])
    cube([1, 1, 2.00]);
  translate([25, 182, 0])
    cube([1, 1, 2.00]);
  translate([26, 182, 0])
    cube([1, 1, 2.00]);
  translate([27, 182, 0])
    cube([1, 1, 2.00]);
  translate([28, 182, 0])
    cube([1, 1, 2.00]);
  translate([29, 182, 0])
    cube([1, 1, 2.00]);
  translate([30, 182, 0])
    cube([1, 1, 2.00]);
  translate([31, 182, 0])
    cube([1, 1, 2.04]);
  translate([32, 182, 0])
    cube([1, 1, 1.96]);
  translate([33, 182, 0])
    cube([1, 1, 2.00]);
  translate([34, 182, 0])
    cube([1, 1, 2.00]);
  translate([35, 182, 0])
    cube([1, 1, 2.00]);
  translate([36, 182, 0])
    cube([1, 1, 2.00]);
  translate([37, 182, 0])
    cube([1, 1, 2.00]);
  translate([38, 182, 0])
    cube([1, 1, 2.00]);
  translate([39, 182, 0])
    cube([1, 1, 2.00]);
  translate([40, 182, 0])
    cube([1, 1, 2.00]);
  translate([41, 182, 0])
    cube([1, 1, 1.96]);
  translate([42, 182, 0])
    cube([1, 1, 2.00]);
  translate([43, 182, 0])
    cube([1, 1, 2.00]);
  translate([44, 182, 0])
    cube([1, 1, 2.00]);
  translate([45, 182, 0])
    cube([1, 1, 2.00]);
  translate([46, 182, 0])
    cube([1, 1, 2.00]);
  translate([47, 182, 0])
    cube([1, 1, 1.96]);
  translate([48, 182, 0])
    cube([1, 1, 1.96]);
  translate([49, 182, 0])
    cube([1, 1, 2.00]);
  translate([50, 182, 0])
    cube([1, 1, 2.00]);
  translate([51, 182, 0])
    cube([1, 1, 2.00]);
  translate([52, 182, 0])
    cube([1, 1, 2.00]);
  translate([53, 182, 0])
    cube([1, 1, 2.00]);
  translate([54, 182, 0])
    cube([1, 1, 1.96]);
  translate([55, 182, 0])
    cube([1, 1, 1.96]);
  translate([56, 182, 0])
    cube([1, 1, 1.96]);
  translate([57, 182, 0])
    cube([1, 1, 1.92]);
  translate([58, 182, 0])
    cube([1, 1, 2.00]);
  translate([59, 182, 0])
    cube([1, 1, 1.96]);
  translate([60, 182, 0])
    cube([1, 1, 1.96]);
  translate([61, 182, 0])
    cube([1, 1, 1.96]);
  translate([62, 182, 0])
    cube([1, 1, 1.96]);
  translate([63, 182, 0])
    cube([1, 1, 1.96]);
  translate([64, 182, 0])
    cube([1, 1, 1.92]);
  translate([65, 182, 0])
    cube([1, 1, 1.96]);
  translate([66, 182, 0])
    cube([1, 1, 1.96]);
  translate([67, 182, 0])
    cube([1, 1, 2.00]);
  translate([68, 182, 0])
    cube([1, 1, 1.84]);
  translate([69, 182, 0])
    cube([1, 1, 1.18]);
  translate([70, 182, 0])
    cube([1, 1, 1.96]);
  translate([71, 182, 0])
    cube([1, 1, 1.14]);
  translate([72, 182, 0])
    cube([1, 1, 1.49]);
  translate([73, 182, 0])
    cube([1, 1, 1.96]);
  translate([74, 182, 0])
    cube([1, 1, 5.73]);
  translate([75, 182, 0])
    cube([1, 1, 5.29]);
  translate([76, 182, 0])
    cube([1, 1, 2.55]);
  translate([77, 182, 0])
    cube([1, 1, 0.94]);
  translate([78, 182, 0])
    cube([1, 1, 0.35]);
  translate([79, 182, 0])
    cube([1, 1, 1.65]);
  translate([80, 182, 0])
    cube([1, 1, 0.31]);
  translate([81, 182, 0])
    cube([1, 1, 0.47]);
  translate([82, 182, 0])
    cube([1, 1, 2.04]);
  translate([83, 182, 0])
    cube([1, 1, 0.98]);
  translate([84, 182, 0])
    cube([1, 1, 0.94]);
  translate([85, 182, 0])
    cube([1, 1, 0.98]);
  translate([86, 182, 0])
    cube([1, 1, 0.75]);
  translate([87, 182, 0])
    cube([1, 1, 0.86]);
  translate([88, 182, 0])
    cube([1, 1, 0.71]);
  translate([89, 182, 0])
    cube([1, 1, 1.06]);
  translate([90, 182, 0])
    cube([1, 1, 1.14]);
  translate([91, 182, 0])
    cube([1, 1, 0.51]);
  translate([92, 182, 0])
    cube([1, 1, 1.25]);
  translate([93, 182, 0])
    cube([1, 1, 0.94]);
  translate([94, 182, 0])
    cube([1, 1, 1.14]);
  translate([95, 182, 0])
    cube([1, 1, 1.33]);
  translate([96, 182, 0])
    cube([1, 1, 1.41]);
  translate([97, 182, 0])
    cube([1, 1, 1.49]);
  translate([98, 182, 0])
    cube([1, 1, 1.69]);
  translate([99, 182, 0])
    cube([1, 1, 3.25]);
  translate([100, 182, 0])
    cube([1, 1, 1.76]);
  translate([101, 182, 0])
    cube([1, 1, 3.84]);
  translate([102, 182, 0])
    cube([1, 1, 4.35]);
  translate([103, 182, 0])
    cube([1, 1, 1.10]);
  translate([104, 182, 0])
    cube([1, 1, 2.78]);
  translate([105, 182, 0])
    cube([1, 1, 2.47]);
  translate([106, 182, 0])
    cube([1, 1, 1.69]);
  translate([107, 182, 0])
    cube([1, 1, 2.16]);
  translate([108, 182, 0])
    cube([1, 1, 2.51]);
  translate([109, 182, 0])
    cube([1, 1, 2.63]);
  translate([110, 182, 0])
    cube([1, 1, 2.47]);
  translate([111, 182, 0])
    cube([1, 1, 0.55]);
  translate([112, 182, 0])
    cube([1, 1, 1.92]);
  translate([113, 182, 0])
    cube([1, 1, 3.33]);
  translate([114, 182, 0])
    cube([1, 1, 2.51]);
  translate([115, 182, 0])
    cube([1, 1, 2.35]);
  translate([116, 182, 0])
    cube([1, 1, 2.55]);
  translate([117, 182, 0])
    cube([1, 1, 2.55]);
  translate([118, 182, 0])
    cube([1, 1, 0.98]);
  translate([119, 182, 0])
    cube([1, 1, 1.88]);
  translate([120, 182, 0])
    cube([1, 1, 1.92]);
  translate([121, 182, 0])
    cube([1, 1, 2.00]);
  translate([122, 182, 0])
    cube([1, 1, 1.49]);
  translate([123, 182, 0])
    cube([1, 1, 1.57]);
  translate([124, 182, 0])
    cube([1, 1, 1.80]);
  translate([125, 182, 0])
    cube([1, 1, 1.84]);
  translate([126, 182, 0])
    cube([1, 1, 1.53]);
  translate([127, 182, 0])
    cube([1, 1, 1.61]);
  translate([128, 182, 0])
    cube([1, 1, 1.88]);
  translate([129, 182, 0])
    cube([1, 1, 1.73]);
  translate([130, 182, 0])
    cube([1, 1, 1.80]);
  translate([131, 182, 0])
    cube([1, 1, 2.04]);
  translate([132, 182, 0])
    cube([1, 1, 0.94]);
  translate([133, 182, 0])
    cube([1, 1, 0.78]);
  translate([134, 182, 0])
    cube([1, 1, 2.12]);
  translate([135, 182, 0])
    cube([1, 1, 3.10]);
  translate([136, 182, 0])
    cube([1, 1, 1.92]);
  translate([137, 182, 0])
    cube([1, 1, 1.96]);
  translate([138, 182, 0])
    cube([1, 1, 1.06]);
  translate([139, 182, 0])
    cube([1, 1, 1.41]);
  translate([140, 182, 0])
    cube([1, 1, 2.98]);
  translate([141, 182, 0])
    cube([1, 1, 2.82]);
  translate([142, 182, 0])
    cube([1, 1, 2.39]);
  translate([143, 182, 0])
    cube([1, 1, 2.67]);
  translate([144, 182, 0])
    cube([1, 1, 2.94]);
  translate([145, 182, 0])
    cube([1, 1, 2.63]);
  translate([146, 182, 0])
    cube([1, 1, 3.92]);
  translate([147, 182, 0])
    cube([1, 1, 2.71]);
  translate([148, 182, 0])
    cube([1, 1, 2.90]);
  translate([149, 182, 0])
    cube([1, 1, 1.84]);
  translate([150, 182, 0])
    cube([1, 1, 1.73]);
  translate([151, 182, 0])
    cube([1, 1, 1.76]);
  translate([152, 182, 0])
    cube([1, 1, 1.76]);
  translate([153, 182, 0])
    cube([1, 1, 1.80]);
  translate([154, 182, 0])
    cube([1, 1, 1.80]);
  translate([155, 182, 0])
    cube([1, 1, 1.80]);
  translate([156, 182, 0])
    cube([1, 1, 1.80]);
  translate([157, 182, 0])
    cube([1, 1, 1.84]);
  translate([158, 182, 0])
    cube([1, 1, 1.80]);
  translate([159, 182, 0])
    cube([1, 1, 1.80]);
  translate([160, 182, 0])
    cube([1, 1, 1.80]);
  translate([161, 182, 0])
    cube([1, 1, 1.80]);
  translate([162, 182, 0])
    cube([1, 1, 1.80]);
  translate([163, 182, 0])
    cube([1, 1, 1.80]);
  translate([164, 182, 0])
    cube([1, 1, 1.76]);
  translate([165, 182, 0])
    cube([1, 1, 1.76]);
  translate([166, 182, 0])
    cube([1, 1, 1.80]);
  translate([167, 182, 0])
    cube([1, 1, 4.04]);
  translate([168, 182, 0])
    cube([1, 1, 3.22]);
  translate([169, 182, 0])
    cube([1, 1, 3.57]);
  translate([170, 182, 0])
    cube([1, 1, 4.31]);
  translate([171, 182, 0])
    cube([1, 1, 4.71]);
  translate([172, 182, 0])
    cube([1, 1, 5.02]);
  translate([173, 182, 0])
    cube([1, 1, 5.25]);
  translate([174, 182, 0])
    cube([1, 1, 5.25]);
  translate([175, 182, 0])
    cube([1, 1, 5.29]);
  translate([176, 182, 0])
    cube([1, 1, 5.41]);
  translate([177, 182, 0])
    cube([1, 1, 5.33]);
  translate([178, 182, 0])
    cube([1, 1, 3.10]);
  translate([179, 182, 0])
    cube([1, 1, 1.29]);
  translate([180, 182, 0])
    cube([1, 1, 1.80]);
  translate([181, 182, 0])
    cube([1, 1, 2.24]);
  translate([182, 182, 0])
    cube([1, 1, 2.04]);
  translate([183, 182, 0])
    cube([1, 1, 1.84]);
  translate([184, 182, 0])
    cube([1, 1, 1.37]);
  translate([185, 182, 0])
    cube([1, 1, 1.57]);
  translate([186, 182, 0])
    cube([1, 1, 1.84]);
  translate([187, 182, 0])
    cube([1, 1, 2.27]);
  translate([188, 182, 0])
    cube([1, 1, 2.08]);
  translate([189, 182, 0])
    cube([1, 1, 2.35]);
  translate([190, 182, 0])
    cube([1, 1, 2.39]);
  translate([191, 182, 0])
    cube([1, 1, 3.37]);
  translate([192, 182, 0])
    cube([1, 1, 2.82]);
  translate([193, 182, 0])
    cube([1, 1, 1.29]);
  translate([194, 182, 0])
    cube([1, 1, 1.41]);
  translate([195, 182, 0])
    cube([1, 1, 1.22]);
  translate([196, 182, 0])
    cube([1, 1, 1.37]);
  translate([197, 182, 0])
    cube([1, 1, 1.02]);
  translate([198, 182, 0])
    cube([1, 1, 1.69]);
  translate([199, 182, 0])
    cube([1, 1, 3.14]);
  translate([200, 182, 0])
    cube([1, 1, 3.33]);
  translate([201, 182, 0])
    cube([1, 1, 2.78]);
  translate([202, 182, 0])
    cube([1, 1, 2.94]);
  translate([203, 182, 0])
    cube([1, 1, 2.31]);
  translate([204, 182, 0])
    cube([1, 1, 2.35]);
  translate([205, 182, 0])
    cube([1, 1, 2.47]);
  translate([206, 182, 0])
    cube([1, 1, 1.88]);
  translate([207, 182, 0])
    cube([1, 1, 1.73]);
  translate([208, 182, 0])
    cube([1, 1, 1.88]);
  translate([209, 182, 0])
    cube([1, 1, 1.88]);
  translate([210, 182, 0])
    cube([1, 1, 1.88]);
  translate([211, 182, 0])
    cube([1, 1, 1.88]);
  translate([212, 182, 0])
    cube([1, 1, 1.88]);
  translate([213, 182, 0])
    cube([1, 1, 1.88]);
  translate([214, 182, 0])
    cube([1, 1, 1.84]);
  translate([215, 182, 0])
    cube([1, 1, 1.88]);
  translate([216, 182, 0])
    cube([1, 1, 1.88]);
  translate([217, 182, 0])
    cube([1, 1, 1.92]);
  translate([218, 182, 0])
    cube([1, 1, 1.88]);
  translate([219, 182, 0])
    cube([1, 1, 1.88]);
  translate([220, 182, 0])
    cube([1, 1, 1.84]);
  translate([221, 182, 0])
    cube([1, 1, 1.84]);
  translate([222, 182, 0])
    cube([1, 1, 1.84]);
  translate([223, 182, 0])
    cube([1, 1, 1.84]);
  translate([224, 182, 0])
    cube([1, 1, 1.84]);
  translate([225, 182, 0])
    cube([1, 1, 1.84]);
  translate([226, 182, 0])
    cube([1, 1, 1.88]);
  translate([227, 182, 0])
    cube([1, 1, 1.84]);
  translate([228, 182, 0])
    cube([1, 1, 1.84]);
  translate([229, 182, 0])
    cube([1, 1, 1.84]);
  translate([230, 182, 0])
    cube([1, 1, 1.80]);
  translate([231, 182, 0])
    cube([1, 1, 1.88]);
  translate([232, 182, 0])
    cube([1, 1, 1.84]);
  translate([233, 182, 0])
    cube([1, 1, 1.84]);
  translate([234, 182, 0])
    cube([1, 1, 1.84]);
  translate([235, 182, 0])
    cube([1, 1, 1.84]);
  translate([236, 182, 0])
    cube([1, 1, 1.84]);
  translate([237, 182, 0])
    cube([1, 1, 1.84]);
  translate([238, 182, 0])
    cube([1, 1, 1.84]);
  translate([239, 182, 0])
    cube([1, 1, 1.88]);
  translate([240, 182, 0])
    cube([1, 1, 1.84]);
  translate([241, 182, 0])
    cube([1, 1, 1.84]);
  translate([242, 182, 0])
    cube([1, 1, 1.84]);
  translate([243, 182, 0])
    cube([1, 1, 1.84]);
  translate([244, 182, 0])
    cube([1, 1, 1.84]);
  translate([245, 182, 0])
    cube([1, 1, 1.84]);
  translate([246, 182, 0])
    cube([1, 1, 1.76]);
  translate([0, 183, 0])
    cube([1, 1, 2.04]);
  translate([1, 183, 0])
    cube([1, 1, 1.96]);
  translate([2, 183, 0])
    cube([1, 1, 2.04]);
  translate([3, 183, 0])
    cube([1, 1, 2.04]);
  translate([4, 183, 0])
    cube([1, 1, 2.04]);
  translate([5, 183, 0])
    cube([1, 1, 2.04]);
  translate([6, 183, 0])
    cube([1, 1, 2.00]);
  translate([7, 183, 0])
    cube([1, 1, 2.04]);
  translate([8, 183, 0])
    cube([1, 1, 2.00]);
  translate([9, 183, 0])
    cube([1, 1, 2.04]);
  translate([10, 183, 0])
    cube([1, 1, 2.00]);
  translate([11, 183, 0])
    cube([1, 1, 2.04]);
  translate([12, 183, 0])
    cube([1, 1, 2.00]);
  translate([13, 183, 0])
    cube([1, 1, 2.04]);
  translate([14, 183, 0])
    cube([1, 1, 2.04]);
  translate([15, 183, 0])
    cube([1, 1, 2.04]);
  translate([16, 183, 0])
    cube([1, 1, 2.04]);
  translate([17, 183, 0])
    cube([1, 1, 2.04]);
  translate([18, 183, 0])
    cube([1, 1, 2.04]);
  translate([19, 183, 0])
    cube([1, 1, 2.00]);
  translate([20, 183, 0])
    cube([1, 1, 2.04]);
  translate([21, 183, 0])
    cube([1, 1, 2.04]);
  translate([22, 183, 0])
    cube([1, 1, 2.04]);
  translate([23, 183, 0])
    cube([1, 1, 2.04]);
  translate([24, 183, 0])
    cube([1, 1, 2.04]);
  translate([25, 183, 0])
    cube([1, 1, 2.00]);
  translate([26, 183, 0])
    cube([1, 1, 2.00]);
  translate([27, 183, 0])
    cube([1, 1, 2.00]);
  translate([28, 183, 0])
    cube([1, 1, 2.00]);
  translate([29, 183, 0])
    cube([1, 1, 2.04]);
  translate([30, 183, 0])
    cube([1, 1, 2.00]);
  translate([31, 183, 0])
    cube([1, 1, 2.00]);
  translate([32, 183, 0])
    cube([1, 1, 2.00]);
  translate([33, 183, 0])
    cube([1, 1, 2.00]);
  translate([34, 183, 0])
    cube([1, 1, 2.00]);
  translate([35, 183, 0])
    cube([1, 1, 2.00]);
  translate([36, 183, 0])
    cube([1, 1, 2.00]);
  translate([37, 183, 0])
    cube([1, 1, 2.00]);
  translate([38, 183, 0])
    cube([1, 1, 2.00]);
  translate([39, 183, 0])
    cube([1, 1, 2.00]);
  translate([40, 183, 0])
    cube([1, 1, 2.00]);
  translate([41, 183, 0])
    cube([1, 1, 2.00]);
  translate([42, 183, 0])
    cube([1, 1, 2.00]);
  translate([43, 183, 0])
    cube([1, 1, 2.00]);
  translate([44, 183, 0])
    cube([1, 1, 2.00]);
  translate([45, 183, 0])
    cube([1, 1, 2.00]);
  translate([46, 183, 0])
    cube([1, 1, 2.00]);
  translate([47, 183, 0])
    cube([1, 1, 2.00]);
  translate([48, 183, 0])
    cube([1, 1, 2.00]);
  translate([49, 183, 0])
    cube([1, 1, 2.00]);
  translate([50, 183, 0])
    cube([1, 1, 2.00]);
  translate([51, 183, 0])
    cube([1, 1, 2.00]);
  translate([52, 183, 0])
    cube([1, 1, 2.00]);
  translate([53, 183, 0])
    cube([1, 1, 2.00]);
  translate([54, 183, 0])
    cube([1, 1, 2.00]);
  translate([55, 183, 0])
    cube([1, 1, 2.00]);
  translate([56, 183, 0])
    cube([1, 1, 2.00]);
  translate([57, 183, 0])
    cube([1, 1, 1.96]);
  translate([58, 183, 0])
    cube([1, 1, 2.04]);
  translate([59, 183, 0])
    cube([1, 1, 2.00]);
  translate([60, 183, 0])
    cube([1, 1, 1.96]);
  translate([61, 183, 0])
    cube([1, 1, 2.00]);
  translate([62, 183, 0])
    cube([1, 1, 1.92]);
  translate([63, 183, 0])
    cube([1, 1, 1.92]);
  translate([64, 183, 0])
    cube([1, 1, 1.96]);
  translate([65, 183, 0])
    cube([1, 1, 1.92]);
  translate([66, 183, 0])
    cube([1, 1, 1.88]);
  translate([67, 183, 0])
    cube([1, 1, 1.69]);
  translate([68, 183, 0])
    cube([1, 1, 2.16]);
  translate([69, 183, 0])
    cube([1, 1, 1.69]);
  translate([70, 183, 0])
    cube([1, 1, 1.61]);
  translate([71, 183, 0])
    cube([1, 1, 1.53]);
  translate([72, 183, 0])
    cube([1, 1, 0.98]);
  translate([73, 183, 0])
    cube([1, 1, 1.73]);
  translate([74, 183, 0])
    cube([1, 1, 1.61]);
  translate([75, 183, 0])
    cube([1, 1, 1.22]);
  translate([76, 183, 0])
    cube([1, 1, 1.25]);
  translate([77, 183, 0])
    cube([1, 1, 0.94]);
  translate([78, 183, 0])
    cube([1, 1, 2.00]);
  translate([79, 183, 0])
    cube([1, 1, 1.41]);
  translate([80, 183, 0])
    cube([1, 1, 0.39]);
  translate([81, 183, 0])
    cube([1, 1, 0.51]);
  translate([82, 183, 0])
    cube([1, 1, 1.49]);
  translate([83, 183, 0])
    cube([1, 1, 1.10]);
  translate([84, 183, 0])
    cube([1, 1, 0.98]);
  translate([85, 183, 0])
    cube([1, 1, 1.10]);
  translate([86, 183, 0])
    cube([1, 1, 0.94]);
  translate([87, 183, 0])
    cube([1, 1, 0.86]);
  translate([88, 183, 0])
    cube([1, 1, 0.98]);
  translate([89, 183, 0])
    cube([1, 1, 1.18]);
  translate([90, 183, 0])
    cube([1, 1, 1.14]);
  translate([91, 183, 0])
    cube([1, 1, 1.06]);
  translate([92, 183, 0])
    cube([1, 1, 0.94]);
  translate([93, 183, 0])
    cube([1, 1, 0.55]);
  translate([94, 183, 0])
    cube([1, 1, 0.82]);
  translate([95, 183, 0])
    cube([1, 1, 1.06]);
  translate([96, 183, 0])
    cube([1, 1, 0.55]);
  translate([97, 183, 0])
    cube([1, 1, 1.92]);
  translate([98, 183, 0])
    cube([1, 1, 1.25]);
  translate([99, 183, 0])
    cube([1, 1, 1.80]);
  translate([100, 183, 0])
    cube([1, 1, 2.20]);
  translate([101, 183, 0])
    cube([1, 1, 1.76]);
  translate([102, 183, 0])
    cube([1, 1, 3.53]);
  translate([103, 183, 0])
    cube([1, 1, 4.39]);
  translate([104, 183, 0])
    cube([1, 1, 5.22]);
  translate([105, 183, 0])
    cube([1, 1, 5.37]);
  translate([106, 183, 0])
    cube([1, 1, 3.96]);
  translate([107, 183, 0])
    cube([1, 1, 2.67]);
  translate([108, 183, 0])
    cube([1, 1, 2.00]);
  translate([109, 183, 0])
    cube([1, 1, 3.69]);
  translate([110, 183, 0])
    cube([1, 1, 2.47]);
  translate([111, 183, 0])
    cube([1, 1, 0.59]);
  translate([112, 183, 0])
    cube([1, 1, 2.12]);
  translate([113, 183, 0])
    cube([1, 1, 4.20]);
  translate([114, 183, 0])
    cube([1, 1, 1.92]);
  translate([115, 183, 0])
    cube([1, 1, 1.45]);
  translate([116, 183, 0])
    cube([1, 1, 1.45]);
  translate([117, 183, 0])
    cube([1, 1, 1.25]);
  translate([118, 183, 0])
    cube([1, 1, 0.78]);
  translate([119, 183, 0])
    cube([1, 1, 3.84]);
  translate([120, 183, 0])
    cube([1, 1, 3.06]);
  translate([121, 183, 0])
    cube([1, 1, 1.57]);
  translate([122, 183, 0])
    cube([1, 1, 0.94]);
  translate([123, 183, 0])
    cube([1, 1, 1.84]);
  translate([124, 183, 0])
    cube([1, 1, 1.80]);
  translate([125, 183, 0])
    cube([1, 1, 1.84]);
  translate([126, 183, 0])
    cube([1, 1, 1.45]);
  translate([127, 183, 0])
    cube([1, 1, 1.76]);
  translate([128, 183, 0])
    cube([1, 1, 1.73]);
  translate([129, 183, 0])
    cube([1, 1, 1.76]);
  translate([130, 183, 0])
    cube([1, 1, 1.76]);
  translate([131, 183, 0])
    cube([1, 1, 1.80]);
  translate([132, 183, 0])
    cube([1, 1, 1.76]);
  translate([133, 183, 0])
    cube([1, 1, 1.45]);
  translate([134, 183, 0])
    cube([1, 1, 1.29]);
  translate([135, 183, 0])
    cube([1, 1, 2.71]);
  translate([136, 183, 0])
    cube([1, 1, 1.45]);
  translate([137, 183, 0])
    cube([1, 1, 1.76]);
  translate([138, 183, 0])
    cube([1, 1, 0.59]);
  translate([139, 183, 0])
    cube([1, 1, 1.84]);
  translate([140, 183, 0])
    cube([1, 1, 2.78]);
  translate([141, 183, 0])
    cube([1, 1, 2.20]);
  translate([142, 183, 0])
    cube([1, 1, 2.39]);
  translate([143, 183, 0])
    cube([1, 1, 2.67]);
  translate([144, 183, 0])
    cube([1, 1, 2.20]);
  translate([145, 183, 0])
    cube([1, 1, 1.76]);
  translate([146, 183, 0])
    cube([1, 1, 3.25]);
  translate([147, 183, 0])
    cube([1, 1, 3.14]);
  translate([148, 183, 0])
    cube([1, 1, 3.41]);
  translate([149, 183, 0])
    cube([1, 1, 2.63]);
  translate([150, 183, 0])
    cube([1, 1, 1.73]);
  translate([151, 183, 0])
    cube([1, 1, 1.76]);
  translate([152, 183, 0])
    cube([1, 1, 1.80]);
  translate([153, 183, 0])
    cube([1, 1, 1.80]);
  translate([154, 183, 0])
    cube([1, 1, 1.80]);
  translate([155, 183, 0])
    cube([1, 1, 1.80]);
  translate([156, 183, 0])
    cube([1, 1, 1.80]);
  translate([157, 183, 0])
    cube([1, 1, 1.80]);
  translate([158, 183, 0])
    cube([1, 1, 1.80]);
  translate([159, 183, 0])
    cube([1, 1, 1.80]);
  translate([160, 183, 0])
    cube([1, 1, 1.80]);
  translate([161, 183, 0])
    cube([1, 1, 1.80]);
  translate([162, 183, 0])
    cube([1, 1, 1.80]);
  translate([163, 183, 0])
    cube([1, 1, 1.80]);
  translate([164, 183, 0])
    cube([1, 1, 1.80]);
  translate([165, 183, 0])
    cube([1, 1, 1.80]);
  translate([166, 183, 0])
    cube([1, 1, 1.65]);
  translate([167, 183, 0])
    cube([1, 1, 2.04]);
  translate([168, 183, 0])
    cube([1, 1, 4.16]);
  translate([169, 183, 0])
    cube([1, 1, 3.22]);
  translate([170, 183, 0])
    cube([1, 1, 3.49]);
  translate([171, 183, 0])
    cube([1, 1, 4.00]);
  translate([172, 183, 0])
    cube([1, 1, 4.51]);
  translate([173, 183, 0])
    cube([1, 1, 4.98]);
  translate([174, 183, 0])
    cube([1, 1, 4.90]);
  translate([175, 183, 0])
    cube([1, 1, 5.10]);
  translate([176, 183, 0])
    cube([1, 1, 5.33]);
  translate([177, 183, 0])
    cube([1, 1, 2.63]);
  translate([178, 183, 0])
    cube([1, 1, 1.25]);
  translate([179, 183, 0])
    cube([1, 1, 1.41]);
  translate([180, 183, 0])
    cube([1, 1, 2.24]);
  translate([181, 183, 0])
    cube([1, 1, 1.65]);
  translate([182, 183, 0])
    cube([1, 1, 1.76]);
  translate([183, 183, 0])
    cube([1, 1, 1.49]);
  translate([184, 183, 0])
    cube([1, 1, 1.37]);
  translate([185, 183, 0])
    cube([1, 1, 1.45]);
  translate([186, 183, 0])
    cube([1, 1, 1.61]);
  translate([187, 183, 0])
    cube([1, 1, 1.69]);
  translate([188, 183, 0])
    cube([1, 1, 1.84]);
  translate([189, 183, 0])
    cube([1, 1, 1.96]);
  translate([190, 183, 0])
    cube([1, 1, 1.92]);
  translate([191, 183, 0])
    cube([1, 1, 1.29]);
  translate([192, 183, 0])
    cube([1, 1, 0.43]);
  translate([193, 183, 0])
    cube([1, 1, 1.14]);
  translate([194, 183, 0])
    cube([1, 1, 1.14]);
  translate([195, 183, 0])
    cube([1, 1, 1.18]);
  translate([196, 183, 0])
    cube([1, 1, 1.18]);
  translate([197, 183, 0])
    cube([1, 1, 1.22]);
  translate([198, 183, 0])
    cube([1, 1, 1.06]);
  translate([199, 183, 0])
    cube([1, 1, 1.06]);
  translate([200, 183, 0])
    cube([1, 1, 2.90]);
  translate([201, 183, 0])
    cube([1, 1, 2.94]);
  translate([202, 183, 0])
    cube([1, 1, 2.86]);
  translate([203, 183, 0])
    cube([1, 1, 3.37]);
  translate([204, 183, 0])
    cube([1, 1, 2.24]);
  translate([205, 183, 0])
    cube([1, 1, 1.61]);
  translate([206, 183, 0])
    cube([1, 1, 2.47]);
  translate([207, 183, 0])
    cube([1, 1, 2.63]);
  translate([208, 183, 0])
    cube([1, 1, 1.88]);
  translate([209, 183, 0])
    cube([1, 1, 1.92]);
  translate([210, 183, 0])
    cube([1, 1, 1.92]);
  translate([211, 183, 0])
    cube([1, 1, 1.88]);
  translate([212, 183, 0])
    cube([1, 1, 1.88]);
  translate([213, 183, 0])
    cube([1, 1, 1.88]);
  translate([214, 183, 0])
    cube([1, 1, 1.88]);
  translate([215, 183, 0])
    cube([1, 1, 1.88]);
  translate([216, 183, 0])
    cube([1, 1, 1.88]);
  translate([217, 183, 0])
    cube([1, 1, 1.88]);
  translate([218, 183, 0])
    cube([1, 1, 1.88]);
  translate([219, 183, 0])
    cube([1, 1, 1.88]);
  translate([220, 183, 0])
    cube([1, 1, 1.88]);
  translate([221, 183, 0])
    cube([1, 1, 1.88]);
  translate([222, 183, 0])
    cube([1, 1, 1.84]);
  translate([223, 183, 0])
    cube([1, 1, 1.88]);
  translate([224, 183, 0])
    cube([1, 1, 1.88]);
  translate([225, 183, 0])
    cube([1, 1, 1.88]);
  translate([226, 183, 0])
    cube([1, 1, 1.88]);
  translate([227, 183, 0])
    cube([1, 1, 1.84]);
  translate([228, 183, 0])
    cube([1, 1, 1.84]);
  translate([229, 183, 0])
    cube([1, 1, 1.84]);
  translate([230, 183, 0])
    cube([1, 1, 1.84]);
  translate([231, 183, 0])
    cube([1, 1, 1.84]);
  translate([232, 183, 0])
    cube([1, 1, 1.84]);
  translate([233, 183, 0])
    cube([1, 1, 1.76]);
  translate([234, 183, 0])
    cube([1, 1, 1.92]);
  translate([235, 183, 0])
    cube([1, 1, 1.84]);
  translate([236, 183, 0])
    cube([1, 1, 1.84]);
  translate([237, 183, 0])
    cube([1, 1, 1.84]);
  translate([238, 183, 0])
    cube([1, 1, 1.84]);
  translate([239, 183, 0])
    cube([1, 1, 1.84]);
  translate([240, 183, 0])
    cube([1, 1, 1.84]);
  translate([241, 183, 0])
    cube([1, 1, 1.84]);
  translate([242, 183, 0])
    cube([1, 1, 1.84]);
  translate([243, 183, 0])
    cube([1, 1, 1.84]);
  translate([244, 183, 0])
    cube([1, 1, 1.84]);
  translate([245, 183, 0])
    cube([1, 1, 1.84]);
  translate([246, 183, 0])
    cube([1, 1, 1.80]);
  translate([0, 184, 0])
    cube([1, 1, 2.00]);
  translate([1, 184, 0])
    cube([1, 1, 1.96]);
  translate([2, 184, 0])
    cube([1, 1, 2.04]);
  translate([3, 184, 0])
    cube([1, 1, 2.04]);
  translate([4, 184, 0])
    cube([1, 1, 2.04]);
  translate([5, 184, 0])
    cube([1, 1, 2.04]);
  translate([6, 184, 0])
    cube([1, 1, 2.04]);
  translate([7, 184, 0])
    cube([1, 1, 2.04]);
  translate([8, 184, 0])
    cube([1, 1, 2.04]);
  translate([9, 184, 0])
    cube([1, 1, 2.04]);
  translate([10, 184, 0])
    cube([1, 1, 2.04]);
  translate([11, 184, 0])
    cube([1, 1, 2.04]);
  translate([12, 184, 0])
    cube([1, 1, 2.04]);
  translate([13, 184, 0])
    cube([1, 1, 2.04]);
  translate([14, 184, 0])
    cube([1, 1, 2.04]);
  translate([15, 184, 0])
    cube([1, 1, 2.04]);
  translate([16, 184, 0])
    cube([1, 1, 2.04]);
  translate([17, 184, 0])
    cube([1, 1, 2.04]);
  translate([18, 184, 0])
    cube([1, 1, 2.04]);
  translate([19, 184, 0])
    cube([1, 1, 2.04]);
  translate([20, 184, 0])
    cube([1, 1, 2.04]);
  translate([21, 184, 0])
    cube([1, 1, 2.04]);
  translate([22, 184, 0])
    cube([1, 1, 2.00]);
  translate([23, 184, 0])
    cube([1, 1, 2.04]);
  translate([24, 184, 0])
    cube([1, 1, 2.04]);
  translate([25, 184, 0])
    cube([1, 1, 2.00]);
  translate([26, 184, 0])
    cube([1, 1, 2.04]);
  translate([27, 184, 0])
    cube([1, 1, 2.04]);
  translate([28, 184, 0])
    cube([1, 1, 2.04]);
  translate([29, 184, 0])
    cube([1, 1, 2.04]);
  translate([30, 184, 0])
    cube([1, 1, 2.04]);
  translate([31, 184, 0])
    cube([1, 1, 1.96]);
  translate([32, 184, 0])
    cube([1, 1, 2.00]);
  translate([33, 184, 0])
    cube([1, 1, 2.00]);
  translate([34, 184, 0])
    cube([1, 1, 1.96]);
  translate([35, 184, 0])
    cube([1, 1, 2.00]);
  translate([36, 184, 0])
    cube([1, 1, 2.00]);
  translate([37, 184, 0])
    cube([1, 1, 2.00]);
  translate([38, 184, 0])
    cube([1, 1, 2.04]);
  translate([39, 184, 0])
    cube([1, 1, 2.04]);
  translate([40, 184, 0])
    cube([1, 1, 2.00]);
  translate([41, 184, 0])
    cube([1, 1, 1.96]);
  translate([42, 184, 0])
    cube([1, 1, 1.96]);
  translate([43, 184, 0])
    cube([1, 1, 2.00]);
  translate([44, 184, 0])
    cube([1, 1, 2.00]);
  translate([45, 184, 0])
    cube([1, 1, 2.00]);
  translate([46, 184, 0])
    cube([1, 1, 2.00]);
  translate([47, 184, 0])
    cube([1, 1, 2.00]);
  translate([48, 184, 0])
    cube([1, 1, 2.00]);
  translate([49, 184, 0])
    cube([1, 1, 2.00]);
  translate([50, 184, 0])
    cube([1, 1, 2.00]);
  translate([51, 184, 0])
    cube([1, 1, 2.00]);
  translate([52, 184, 0])
    cube([1, 1, 2.00]);
  translate([53, 184, 0])
    cube([1, 1, 2.00]);
  translate([54, 184, 0])
    cube([1, 1, 2.00]);
  translate([55, 184, 0])
    cube([1, 1, 2.00]);
  translate([56, 184, 0])
    cube([1, 1, 2.00]);
  translate([57, 184, 0])
    cube([1, 1, 2.00]);
  translate([58, 184, 0])
    cube([1, 1, 2.00]);
  translate([59, 184, 0])
    cube([1, 1, 2.00]);
  translate([60, 184, 0])
    cube([1, 1, 2.00]);
  translate([61, 184, 0])
    cube([1, 1, 2.00]);
  translate([62, 184, 0])
    cube([1, 1, 2.00]);
  translate([63, 184, 0])
    cube([1, 1, 2.00]);
  translate([64, 184, 0])
    cube([1, 1, 1.96]);
  translate([65, 184, 0])
    cube([1, 1, 1.80]);
  translate([66, 184, 0])
    cube([1, 1, 2.08]);
  translate([67, 184, 0])
    cube([1, 1, 2.16]);
  translate([68, 184, 0])
    cube([1, 1, 1.73]);
  translate([69, 184, 0])
    cube([1, 1, 1.84]);
  translate([70, 184, 0])
    cube([1, 1, 1.14]);
  translate([71, 184, 0])
    cube([1, 1, 1.57]);
  translate([72, 184, 0])
    cube([1, 1, 1.53]);
  translate([73, 184, 0])
    cube([1, 1, 6.12]);
  translate([74, 184, 0])
    cube([1, 1, 1.41]);
  translate([75, 184, 0])
    cube([1, 1, 6.98]);
  translate([76, 184, 0])
    cube([1, 1, 1.37]);
  translate([77, 184, 0])
    cube([1, 1, 1.33]);
  translate([78, 184, 0])
    cube([1, 1, 4.24]);
  translate([79, 184, 0])
    cube([1, 1, 0.94]);
  translate([80, 184, 0])
    cube([1, 1, 0.27]);
  translate([81, 184, 0])
    cube([1, 1, 1.57]);
  translate([82, 184, 0])
    cube([1, 1, 1.49]);
  translate([83, 184, 0])
    cube([1, 1, 1.14]);
  translate([84, 184, 0])
    cube([1, 1, 1.06]);
  translate([85, 184, 0])
    cube([1, 1, 1.02]);
  translate([86, 184, 0])
    cube([1, 1, 1.10]);
  translate([87, 184, 0])
    cube([1, 1, 0.82]);
  translate([88, 184, 0])
    cube([1, 1, 1.22]);
  translate([89, 184, 0])
    cube([1, 1, 0.86]);
  translate([90, 184, 0])
    cube([1, 1, 1.02]);
  translate([91, 184, 0])
    cube([1, 1, 0.86]);
  translate([92, 184, 0])
    cube([1, 1, 1.18]);
  translate([93, 184, 0])
    cube([1, 1, 0.94]);
  translate([94, 184, 0])
    cube([1, 1, 1.18]);
  translate([95, 184, 0])
    cube([1, 1, 1.45]);
  translate([96, 184, 0])
    cube([1, 1, 0.55]);
  translate([97, 184, 0])
    cube([1, 1, 1.14]);
  translate([98, 184, 0])
    cube([1, 1, 1.06]);
  translate([99, 184, 0])
    cube([1, 1, 1.80]);
  translate([100, 184, 0])
    cube([1, 1, 1.88]);
  translate([101, 184, 0])
    cube([1, 1, 3.18]);
  translate([102, 184, 0])
    cube([1, 1, 3.69]);
  translate([103, 184, 0])
    cube([1, 1, 4.59]);
  translate([104, 184, 0])
    cube([1, 1, 4.98]);
  translate([105, 184, 0])
    cube([1, 1, 5.02]);
  translate([106, 184, 0])
    cube([1, 1, 4.47]);
  translate([107, 184, 0])
    cube([1, 1, 4.12]);
  translate([108, 184, 0])
    cube([1, 1, 3.88]);
  translate([109, 184, 0])
    cube([1, 1, 3.88]);
  translate([110, 184, 0])
    cube([1, 1, 4.12]);
  translate([111, 184, 0])
    cube([1, 1, 1.22]);
  translate([112, 184, 0])
    cube([1, 1, 2.51]);
  translate([113, 184, 0])
    cube([1, 1, 2.20]);
  translate([114, 184, 0])
    cube([1, 1, 2.43]);
  translate([115, 184, 0])
    cube([1, 1, 2.08]);
  translate([116, 184, 0])
    cube([1, 1, 1.92]);
  translate([117, 184, 0])
    cube([1, 1, 1.96]);
  translate([118, 184, 0])
    cube([1, 1, 1.92]);
  translate([119, 184, 0])
    cube([1, 1, 1.80]);
  translate([120, 184, 0])
    cube([1, 1, 2.20]);
  translate([121, 184, 0])
    cube([1, 1, 1.22]);
  translate([122, 184, 0])
    cube([1, 1, 1.61]);
  translate([123, 184, 0])
    cube([1, 1, 1.84]);
  translate([124, 184, 0])
    cube([1, 1, 1.80]);
  translate([125, 184, 0])
    cube([1, 1, 1.80]);
  translate([126, 184, 0])
    cube([1, 1, 2.04]);
  translate([127, 184, 0])
    cube([1, 1, 2.04]);
  translate([128, 184, 0])
    cube([1, 1, 1.80]);
  translate([129, 184, 0])
    cube([1, 1, 1.76]);
  translate([130, 184, 0])
    cube([1, 1, 1.76]);
  translate([131, 184, 0])
    cube([1, 1, 1.69]);
  translate([132, 184, 0])
    cube([1, 1, 2.51]);
  translate([133, 184, 0])
    cube([1, 1, 1.37]);
  translate([134, 184, 0])
    cube([1, 1, 2.71]);
  translate([135, 184, 0])
    cube([1, 1, 5.14]);
  translate([136, 184, 0])
    cube([1, 1, 2.51]);
  translate([137, 184, 0])
    cube([1, 1, 2.16]);
  translate([138, 184, 0])
    cube([1, 1, 2.24]);
  translate([139, 184, 0])
    cube([1, 1, 2.59]);
  translate([140, 184, 0])
    cube([1, 1, 2.51]);
  translate([141, 184, 0])
    cube([1, 1, 1.88]);
  translate([142, 184, 0])
    cube([1, 1, 2.67]);
  translate([143, 184, 0])
    cube([1, 1, 2.98]);
  translate([144, 184, 0])
    cube([1, 1, 2.12]);
  translate([145, 184, 0])
    cube([1, 1, 3.14]);
  translate([146, 184, 0])
    cube([1, 1, 2.51]);
  translate([147, 184, 0])
    cube([1, 1, 3.25]);
  translate([148, 184, 0])
    cube([1, 1, 2.00]);
  translate([149, 184, 0])
    cube([1, 1, 3.57]);
  translate([150, 184, 0])
    cube([1, 1, 1.73]);
  translate([151, 184, 0])
    cube([1, 1, 1.76]);
  translate([152, 184, 0])
    cube([1, 1, 1.80]);
  translate([153, 184, 0])
    cube([1, 1, 1.76]);
  translate([154, 184, 0])
    cube([1, 1, 1.80]);
  translate([155, 184, 0])
    cube([1, 1, 1.80]);
  translate([156, 184, 0])
    cube([1, 1, 1.80]);
  translate([157, 184, 0])
    cube([1, 1, 1.80]);
  translate([158, 184, 0])
    cube([1, 1, 1.80]);
  translate([159, 184, 0])
    cube([1, 1, 1.80]);
  translate([160, 184, 0])
    cube([1, 1, 1.80]);
  translate([161, 184, 0])
    cube([1, 1, 1.80]);
  translate([162, 184, 0])
    cube([1, 1, 1.80]);
  translate([163, 184, 0])
    cube([1, 1, 1.80]);
  translate([164, 184, 0])
    cube([1, 1, 1.80]);
  translate([165, 184, 0])
    cube([1, 1, 1.80]);
  translate([166, 184, 0])
    cube([1, 1, 1.80]);
  translate([167, 184, 0])
    cube([1, 1, 1.84]);
  translate([168, 184, 0])
    cube([1, 1, 1.80]);
  translate([169, 184, 0])
    cube([1, 1, 2.04]);
  translate([170, 184, 0])
    cube([1, 1, 3.10]);
  translate([171, 184, 0])
    cube([1, 1, 3.25]);
  translate([172, 184, 0])
    cube([1, 1, 3.61]);
  translate([173, 184, 0])
    cube([1, 1, 4.20]);
  translate([174, 184, 0])
    cube([1, 1, 4.55]);
  translate([175, 184, 0])
    cube([1, 1, 4.47]);
  translate([176, 184, 0])
    cube([1, 1, 1.84]);
  translate([177, 184, 0])
    cube([1, 1, 1.18]);
  translate([178, 184, 0])
    cube([1, 1, 1.33]);
  translate([179, 184, 0])
    cube([1, 1, 1.61]);
  translate([180, 184, 0])
    cube([1, 1, 1.41]);
  translate([181, 184, 0])
    cube([1, 1, 1.69]);
  translate([182, 184, 0])
    cube([1, 1, 1.37]);
  translate([183, 184, 0])
    cube([1, 1, 1.14]);
  translate([184, 184, 0])
    cube([1, 1, 1.22]);
  translate([185, 184, 0])
    cube([1, 1, 1.37]);
  translate([186, 184, 0])
    cube([1, 1, 1.45]);
  translate([187, 184, 0])
    cube([1, 1, 1.53]);
  translate([188, 184, 0])
    cube([1, 1, 1.53]);
  translate([189, 184, 0])
    cube([1, 1, 1.76]);
  translate([190, 184, 0])
    cube([1, 1, 0.55]);
  translate([191, 184, 0])
    cube([1, 1, 0.31]);
  translate([192, 184, 0])
    cube([1, 1, 0.35]);
  translate([193, 184, 0])
    cube([1, 1, 0.31]);
  translate([194, 184, 0])
    cube([1, 1, 1.06]);
  translate([195, 184, 0])
    cube([1, 1, 1.14]);
  translate([196, 184, 0])
    cube([1, 1, 1.10]);
  translate([197, 184, 0])
    cube([1, 1, 1.10]);
  translate([198, 184, 0])
    cube([1, 1, 1.14]);
  translate([199, 184, 0])
    cube([1, 1, 1.18]);
  translate([200, 184, 0])
    cube([1, 1, 1.10]);
  translate([201, 184, 0])
    cube([1, 1, 1.33]);
  translate([202, 184, 0])
    cube([1, 1, 2.67]);
  translate([203, 184, 0])
    cube([1, 1, 2.82]);
  translate([204, 184, 0])
    cube([1, 1, 2.75]);
  translate([205, 184, 0])
    cube([1, 1, 3.25]);
  translate([206, 184, 0])
    cube([1, 1, 2.00]);
  translate([207, 184, 0])
    cube([1, 1, 2.39]);
  translate([208, 184, 0])
    cube([1, 1, 2.47]);
  translate([209, 184, 0])
    cube([1, 1, 1.92]);
  translate([210, 184, 0])
    cube([1, 1, 1.84]);
  translate([211, 184, 0])
    cube([1, 1, 1.96]);
  translate([212, 184, 0])
    cube([1, 1, 1.88]);
  translate([213, 184, 0])
    cube([1, 1, 1.88]);
  translate([214, 184, 0])
    cube([1, 1, 1.88]);
  translate([215, 184, 0])
    cube([1, 1, 1.88]);
  translate([216, 184, 0])
    cube([1, 1, 1.88]);
  translate([217, 184, 0])
    cube([1, 1, 1.88]);
  translate([218, 184, 0])
    cube([1, 1, 1.92]);
  translate([219, 184, 0])
    cube([1, 1, 1.88]);
  translate([220, 184, 0])
    cube([1, 1, 1.88]);
  translate([221, 184, 0])
    cube([1, 1, 1.88]);
  translate([222, 184, 0])
    cube([1, 1, 1.88]);
  translate([223, 184, 0])
    cube([1, 1, 1.88]);
  translate([224, 184, 0])
    cube([1, 1, 1.88]);
  translate([225, 184, 0])
    cube([1, 1, 1.92]);
  translate([226, 184, 0])
    cube([1, 1, 1.92]);
  translate([227, 184, 0])
    cube([1, 1, 1.88]);
  translate([228, 184, 0])
    cube([1, 1, 1.80]);
  translate([229, 184, 0])
    cube([1, 1, 1.88]);
  translate([230, 184, 0])
    cube([1, 1, 1.80]);
  translate([231, 184, 0])
    cube([1, 1, 1.92]);
  translate([232, 184, 0])
    cube([1, 1, 1.88]);
  translate([233, 184, 0])
    cube([1, 1, 1.84]);
  translate([234, 184, 0])
    cube([1, 1, 1.84]);
  translate([235, 184, 0])
    cube([1, 1, 1.84]);
  translate([236, 184, 0])
    cube([1, 1, 1.84]);
  translate([237, 184, 0])
    cube([1, 1, 1.92]);
  translate([238, 184, 0])
    cube([1, 1, 1.84]);
  translate([239, 184, 0])
    cube([1, 1, 1.84]);
  translate([240, 184, 0])
    cube([1, 1, 1.88]);
  translate([241, 184, 0])
    cube([1, 1, 1.84]);
  translate([242, 184, 0])
    cube([1, 1, 1.84]);
  translate([243, 184, 0])
    cube([1, 1, 1.84]);
  translate([244, 184, 0])
    cube([1, 1, 1.84]);
  translate([245, 184, 0])
    cube([1, 1, 1.84]);
  translate([246, 184, 0])
    cube([1, 1, 1.80]);
  translate([0, 185, 0])
    cube([1, 1, 2.00]);
  translate([1, 185, 0])
    cube([1, 1, 1.96]);
  translate([2, 185, 0])
    cube([1, 1, 2.04]);
  translate([3, 185, 0])
    cube([1, 1, 2.04]);
  translate([4, 185, 0])
    cube([1, 1, 2.04]);
  translate([5, 185, 0])
    cube([1, 1, 2.04]);
  translate([6, 185, 0])
    cube([1, 1, 2.04]);
  translate([7, 185, 0])
    cube([1, 1, 2.04]);
  translate([8, 185, 0])
    cube([1, 1, 2.00]);
  translate([9, 185, 0])
    cube([1, 1, 2.04]);
  translate([10, 185, 0])
    cube([1, 1, 2.04]);
  translate([11, 185, 0])
    cube([1, 1, 2.04]);
  translate([12, 185, 0])
    cube([1, 1, 2.04]);
  translate([13, 185, 0])
    cube([1, 1, 2.04]);
  translate([14, 185, 0])
    cube([1, 1, 2.04]);
  translate([15, 185, 0])
    cube([1, 1, 2.04]);
  translate([16, 185, 0])
    cube([1, 1, 2.04]);
  translate([17, 185, 0])
    cube([1, 1, 2.04]);
  translate([18, 185, 0])
    cube([1, 1, 2.04]);
  translate([19, 185, 0])
    cube([1, 1, 2.04]);
  translate([20, 185, 0])
    cube([1, 1, 2.04]);
  translate([21, 185, 0])
    cube([1, 1, 2.04]);
  translate([22, 185, 0])
    cube([1, 1, 2.00]);
  translate([23, 185, 0])
    cube([1, 1, 2.04]);
  translate([24, 185, 0])
    cube([1, 1, 2.04]);
  translate([25, 185, 0])
    cube([1, 1, 2.00]);
  translate([26, 185, 0])
    cube([1, 1, 2.04]);
  translate([27, 185, 0])
    cube([1, 1, 2.04]);
  translate([28, 185, 0])
    cube([1, 1, 2.04]);
  translate([29, 185, 0])
    cube([1, 1, 2.04]);
  translate([30, 185, 0])
    cube([1, 1, 2.00]);
  translate([31, 185, 0])
    cube([1, 1, 2.04]);
  translate([32, 185, 0])
    cube([1, 1, 2.00]);
  translate([33, 185, 0])
    cube([1, 1, 2.08]);
  translate([34, 185, 0])
    cube([1, 1, 2.00]);
  translate([35, 185, 0])
    cube([1, 1, 2.00]);
  translate([36, 185, 0])
    cube([1, 1, 2.00]);
  translate([37, 185, 0])
    cube([1, 1, 2.00]);
  translate([38, 185, 0])
    cube([1, 1, 2.04]);
  translate([39, 185, 0])
    cube([1, 1, 2.04]);
  translate([40, 185, 0])
    cube([1, 1, 2.00]);
  translate([41, 185, 0])
    cube([1, 1, 1.96]);
  translate([42, 185, 0])
    cube([1, 1, 1.96]);
  translate([43, 185, 0])
    cube([1, 1, 2.00]);
  translate([44, 185, 0])
    cube([1, 1, 2.00]);
  translate([45, 185, 0])
    cube([1, 1, 2.00]);
  translate([46, 185, 0])
    cube([1, 1, 2.00]);
  translate([47, 185, 0])
    cube([1, 1, 2.00]);
  translate([48, 185, 0])
    cube([1, 1, 2.00]);
  translate([49, 185, 0])
    cube([1, 1, 2.00]);
  translate([50, 185, 0])
    cube([1, 1, 2.00]);
  translate([51, 185, 0])
    cube([1, 1, 2.00]);
  translate([52, 185, 0])
    cube([1, 1, 2.00]);
  translate([53, 185, 0])
    cube([1, 1, 2.00]);
  translate([54, 185, 0])
    cube([1, 1, 2.00]);
  translate([55, 185, 0])
    cube([1, 1, 2.00]);
  translate([56, 185, 0])
    cube([1, 1, 2.00]);
  translate([57, 185, 0])
    cube([1, 1, 2.00]);
  translate([58, 185, 0])
    cube([1, 1, 2.00]);
  translate([59, 185, 0])
    cube([1, 1, 2.00]);
  translate([60, 185, 0])
    cube([1, 1, 2.00]);
  translate([61, 185, 0])
    cube([1, 1, 2.00]);
  translate([62, 185, 0])
    cube([1, 1, 2.00]);
  translate([63, 185, 0])
    cube([1, 1, 2.00]);
  translate([64, 185, 0])
    cube([1, 1, 1.96]);
  translate([65, 185, 0])
    cube([1, 1, 1.65]);
  translate([66, 185, 0])
    cube([1, 1, 1.80]);
  translate([67, 185, 0])
    cube([1, 1, 1.76]);
  translate([68, 185, 0])
    cube([1, 1, 2.08]);
  translate([69, 185, 0])
    cube([1, 1, 1.57]);
  translate([70, 185, 0])
    cube([1, 1, 1.33]);
  translate([71, 185, 0])
    cube([1, 1, 1.49]);
  translate([72, 185, 0])
    cube([1, 1, 0.98]);
  translate([73, 185, 0])
    cube([1, 1, 1.69]);
  translate([74, 185, 0])
    cube([1, 1, 0.59]);
  translate([75, 185, 0])
    cube([1, 1, 8.35]);
  translate([76, 185, 0])
    cube([1, 1, 1.33]);
  translate([77, 185, 0])
    cube([1, 1, 1.10]);
  translate([78, 185, 0])
    cube([1, 1, 1.61]);
  translate([79, 185, 0])
    cube([1, 1, 0.55]);
  translate([80, 185, 0])
    cube([1, 1, 0.59]);
  translate([81, 185, 0])
    cube([1, 1, 1.41]);
  translate([82, 185, 0])
    cube([1, 1, 1.61]);
  translate([83, 185, 0])
    cube([1, 1, 1.65]);
  translate([84, 185, 0])
    cube([1, 1, 1.22]);
  translate([85, 185, 0])
    cube([1, 1, 1.25]);
  translate([86, 185, 0])
    cube([1, 1, 1.10]);
  translate([87, 185, 0])
    cube([1, 1, 1.18]);
  translate([88, 185, 0])
    cube([1, 1, 1.33]);
  translate([89, 185, 0])
    cube([1, 1, 1.14]);
  translate([90, 185, 0])
    cube([1, 1, 1.25]);
  translate([91, 185, 0])
    cube([1, 1, 1.14]);
  translate([92, 185, 0])
    cube([1, 1, 1.37]);
  translate([93, 185, 0])
    cube([1, 1, 1.29]);
  translate([94, 185, 0])
    cube([1, 1, 0.98]);
  translate([95, 185, 0])
    cube([1, 1, 1.29]);
  translate([96, 185, 0])
    cube([1, 1, 1.37]);
  translate([97, 185, 0])
    cube([1, 1, 1.22]);
  translate([98, 185, 0])
    cube([1, 1, 0.82]);
  translate([99, 185, 0])
    cube([1, 1, 1.02]);
  translate([100, 185, 0])
    cube([1, 1, 0.94]);
  translate([101, 185, 0])
    cube([1, 1, 3.14]);
  translate([102, 185, 0])
    cube([1, 1, 1.76]);
  translate([103, 185, 0])
    cube([1, 1, 1.80]);
  translate([104, 185, 0])
    cube([1, 1, 4.20]);
  translate([105, 185, 0])
    cube([1, 1, 4.78]);
  translate([106, 185, 0])
    cube([1, 1, 4.24]);
  translate([107, 185, 0])
    cube([1, 1, 3.73]);
  translate([108, 185, 0])
    cube([1, 1, 3.41]);
  translate([109, 185, 0])
    cube([1, 1, 3.22]);
  translate([110, 185, 0])
    cube([1, 1, 2.86]);
  translate([111, 185, 0])
    cube([1, 1, 0.71]);
  translate([112, 185, 0])
    cube([1, 1, 1.84]);
  translate([113, 185, 0])
    cube([1, 1, 2.04]);
  translate([114, 185, 0])
    cube([1, 1, 2.59]);
  translate([115, 185, 0])
    cube([1, 1, 2.67]);
  translate([116, 185, 0])
    cube([1, 1, 2.47]);
  translate([117, 185, 0])
    cube([1, 1, 2.08]);
  translate([118, 185, 0])
    cube([1, 1, 2.12]);
  translate([119, 185, 0])
    cube([1, 1, 1.80]);
  translate([120, 185, 0])
    cube([1, 1, 2.16]);
  translate([121, 185, 0])
    cube([1, 1, 1.37]);
  translate([122, 185, 0])
    cube([1, 1, 1.65]);
  translate([123, 185, 0])
    cube([1, 1, 1.88]);
  translate([124, 185, 0])
    cube([1, 1, 1.80]);
  translate([125, 185, 0])
    cube([1, 1, 1.80]);
  translate([126, 185, 0])
    cube([1, 1, 2.24]);
  translate([127, 185, 0])
    cube([1, 1, 1.80]);
  translate([128, 185, 0])
    cube([1, 1, 1.80]);
  translate([129, 185, 0])
    cube([1, 1, 1.76]);
  translate([130, 185, 0])
    cube([1, 1, 1.76]);
  translate([131, 185, 0])
    cube([1, 1, 1.57]);
  translate([132, 185, 0])
    cube([1, 1, 2.00]);
  translate([133, 185, 0])
    cube([1, 1, 0.94]);
  translate([134, 185, 0])
    cube([1, 1, 1.61]);
  translate([135, 185, 0])
    cube([1, 1, 1.92]);
  translate([136, 185, 0])
    cube([1, 1, 1.88]);
  translate([137, 185, 0])
    cube([1, 1, 2.04]);
  translate([138, 185, 0])
    cube([1, 1, 2.43]);
  translate([139, 185, 0])
    cube([1, 1, 2.20]);
  translate([140, 185, 0])
    cube([1, 1, 1.92]);
  translate([141, 185, 0])
    cube([1, 1, 2.20]);
  translate([142, 185, 0])
    cube([1, 1, 2.04]);
  translate([143, 185, 0])
    cube([1, 1, 2.31]);
  translate([144, 185, 0])
    cube([1, 1, 2.90]);
  translate([145, 185, 0])
    cube([1, 1, 2.00]);
  translate([146, 185, 0])
    cube([1, 1, 2.51]);
  translate([147, 185, 0])
    cube([1, 1, 3.22]);
  translate([148, 185, 0])
    cube([1, 1, 2.98]);
  translate([149, 185, 0])
    cube([1, 1, 3.65]);
  translate([150, 185, 0])
    cube([1, 1, 1.73]);
  translate([151, 185, 0])
    cube([1, 1, 1.96]);
  translate([152, 185, 0])
    cube([1, 1, 1.80]);
  translate([153, 185, 0])
    cube([1, 1, 1.76]);
  translate([154, 185, 0])
    cube([1, 1, 1.80]);
  translate([155, 185, 0])
    cube([1, 1, 1.80]);
  translate([156, 185, 0])
    cube([1, 1, 1.80]);
  translate([157, 185, 0])
    cube([1, 1, 1.80]);
  translate([158, 185, 0])
    cube([1, 1, 1.80]);
  translate([159, 185, 0])
    cube([1, 1, 1.80]);
  translate([160, 185, 0])
    cube([1, 1, 1.80]);
  translate([161, 185, 0])
    cube([1, 1, 1.80]);
  translate([162, 185, 0])
    cube([1, 1, 1.80]);
  translate([163, 185, 0])
    cube([1, 1, 1.80]);
  translate([164, 185, 0])
    cube([1, 1, 1.80]);
  translate([165, 185, 0])
    cube([1, 1, 1.80]);
  translate([166, 185, 0])
    cube([1, 1, 1.80]);
  translate([167, 185, 0])
    cube([1, 1, 1.84]);
  translate([168, 185, 0])
    cube([1, 1, 1.80]);
  translate([169, 185, 0])
    cube([1, 1, 1.92]);
  translate([170, 185, 0])
    cube([1, 1, 1.84]);
  translate([171, 185, 0])
    cube([1, 1, 4.12]);
  translate([172, 185, 0])
    cube([1, 1, 3.33]);
  translate([173, 185, 0])
    cube([1, 1, 3.45]);
  translate([174, 185, 0])
    cube([1, 1, 3.41]);
  translate([175, 185, 0])
    cube([1, 1, 1.33]);
  translate([176, 185, 0])
    cube([1, 1, 1.25]);
  translate([177, 185, 0])
    cube([1, 1, 1.18]);
  translate([178, 185, 0])
    cube([1, 1, 1.33]);
  translate([179, 185, 0])
    cube([1, 1, 1.41]);
  translate([180, 185, 0])
    cube([1, 1, 1.49]);
  translate([181, 185, 0])
    cube([1, 1, 1.45]);
  translate([182, 185, 0])
    cube([1, 1, 1.10]);
  translate([183, 185, 0])
    cube([1, 1, 0.98]);
  translate([184, 185, 0])
    cube([1, 1, 1.25]);
  translate([185, 185, 0])
    cube([1, 1, 1.49]);
  translate([186, 185, 0])
    cube([1, 1, 1.45]);
  translate([187, 185, 0])
    cube([1, 1, 1.49]);
  translate([188, 185, 0])
    cube([1, 1, 1.49]);
  translate([189, 185, 0])
    cube([1, 1, 1.49]);
  translate([190, 185, 0])
    cube([1, 1, 1.22]);
  translate([191, 185, 0])
    cube([1, 1, 0.20]);
  translate([192, 185, 0])
    cube([1, 1, 0.35]);
  translate([193, 185, 0])
    cube([1, 1, 0.35]);
  translate([194, 185, 0])
    cube([1, 1, 0.55]);
  translate([195, 185, 0])
    cube([1, 1, 0.27]);
  translate([196, 185, 0])
    cube([1, 1, 1.22]);
  translate([197, 185, 0])
    cube([1, 1, 1.25]);
  translate([198, 185, 0])
    cube([1, 1, 1.14]);
  translate([199, 185, 0])
    cube([1, 1, 1.18]);
  translate([200, 185, 0])
    cube([1, 1, 1.10]);
  translate([201, 185, 0])
    cube([1, 1, 0.78]);
  translate([202, 185, 0])
    cube([1, 1, 0.90]);
  translate([203, 185, 0])
    cube([1, 1, 2.71]);
  translate([204, 185, 0])
    cube([1, 1, 2.98]);
  translate([205, 185, 0])
    cube([1, 1, 2.94]);
  translate([206, 185, 0])
    cube([1, 1, 2.67]);
  translate([207, 185, 0])
    cube([1, 1, 2.67]);
  translate([208, 185, 0])
    cube([1, 1, 2.43]);
  translate([209, 185, 0])
    cube([1, 1, 2.35]);
  translate([210, 185, 0])
    cube([1, 1, 2.47]);
  translate([211, 185, 0])
    cube([1, 1, 1.84]);
  translate([212, 185, 0])
    cube([1, 1, 1.88]);
  translate([213, 185, 0])
    cube([1, 1, 1.88]);
  translate([214, 185, 0])
    cube([1, 1, 1.88]);
  translate([215, 185, 0])
    cube([1, 1, 1.88]);
  translate([216, 185, 0])
    cube([1, 1, 1.88]);
  translate([217, 185, 0])
    cube([1, 1, 1.88]);
  translate([218, 185, 0])
    cube([1, 1, 1.92]);
  translate([219, 185, 0])
    cube([1, 1, 1.88]);
  translate([220, 185, 0])
    cube([1, 1, 1.88]);
  translate([221, 185, 0])
    cube([1, 1, 1.88]);
  translate([222, 185, 0])
    cube([1, 1, 1.88]);
  translate([223, 185, 0])
    cube([1, 1, 1.88]);
  translate([224, 185, 0])
    cube([1, 1, 1.88]);
  translate([225, 185, 0])
    cube([1, 1, 1.88]);
  translate([226, 185, 0])
    cube([1, 1, 1.88]);
  translate([227, 185, 0])
    cube([1, 1, 1.88]);
  translate([228, 185, 0])
    cube([1, 1, 1.84]);
  translate([229, 185, 0])
    cube([1, 1, 1.84]);
  translate([230, 185, 0])
    cube([1, 1, 1.84]);
  translate([231, 185, 0])
    cube([1, 1, 1.84]);
  translate([232, 185, 0])
    cube([1, 1, 1.88]);
  translate([233, 185, 0])
    cube([1, 1, 1.80]);
  translate([234, 185, 0])
    cube([1, 1, 1.88]);
  translate([235, 185, 0])
    cube([1, 1, 1.88]);
  translate([236, 185, 0])
    cube([1, 1, 1.92]);
  translate([237, 185, 0])
    cube([1, 1, 1.88]);
  translate([238, 185, 0])
    cube([1, 1, 1.84]);
  translate([239, 185, 0])
    cube([1, 1, 1.84]);
  translate([240, 185, 0])
    cube([1, 1, 1.88]);
  translate([241, 185, 0])
    cube([1, 1, 1.84]);
  translate([242, 185, 0])
    cube([1, 1, 1.84]);
  translate([243, 185, 0])
    cube([1, 1, 1.84]);
  translate([244, 185, 0])
    cube([1, 1, 1.84]);
  translate([245, 185, 0])
    cube([1, 1, 1.84]);
  translate([246, 185, 0])
    cube([1, 1, 1.80]);
  translate([0, 186, 0])
    cube([1, 1, 2.04]);
  translate([1, 186, 0])
    cube([1, 1, 2.04]);
  translate([2, 186, 0])
    cube([1, 1, 2.04]);
  translate([3, 186, 0])
    cube([1, 1, 2.04]);
  translate([4, 186, 0])
    cube([1, 1, 2.04]);
  translate([5, 186, 0])
    cube([1, 1, 2.04]);
  translate([6, 186, 0])
    cube([1, 1, 1.96]);
  translate([7, 186, 0])
    cube([1, 1, 2.00]);
  translate([8, 186, 0])
    cube([1, 1, 2.00]);
  translate([9, 186, 0])
    cube([1, 1, 2.04]);
  translate([10, 186, 0])
    cube([1, 1, 2.04]);
  translate([11, 186, 0])
    cube([1, 1, 2.04]);
  translate([12, 186, 0])
    cube([1, 1, 2.04]);
  translate([13, 186, 0])
    cube([1, 1, 2.04]);
  translate([14, 186, 0])
    cube([1, 1, 2.04]);
  translate([15, 186, 0])
    cube([1, 1, 2.04]);
  translate([16, 186, 0])
    cube([1, 1, 2.04]);
  translate([17, 186, 0])
    cube([1, 1, 2.04]);
  translate([18, 186, 0])
    cube([1, 1, 2.04]);
  translate([19, 186, 0])
    cube([1, 1, 2.04]);
  translate([20, 186, 0])
    cube([1, 1, 2.04]);
  translate([21, 186, 0])
    cube([1, 1, 2.04]);
  translate([22, 186, 0])
    cube([1, 1, 2.00]);
  translate([23, 186, 0])
    cube([1, 1, 2.04]);
  translate([24, 186, 0])
    cube([1, 1, 2.04]);
  translate([25, 186, 0])
    cube([1, 1, 2.04]);
  translate([26, 186, 0])
    cube([1, 1, 2.04]);
  translate([27, 186, 0])
    cube([1, 1, 2.00]);
  translate([28, 186, 0])
    cube([1, 1, 2.04]);
  translate([29, 186, 0])
    cube([1, 1, 2.04]);
  translate([30, 186, 0])
    cube([1, 1, 2.04]);
  translate([31, 186, 0])
    cube([1, 1, 2.04]);
  translate([32, 186, 0])
    cube([1, 1, 2.04]);
  translate([33, 186, 0])
    cube([1, 1, 2.00]);
  translate([34, 186, 0])
    cube([1, 1, 2.04]);
  translate([35, 186, 0])
    cube([1, 1, 2.00]);
  translate([36, 186, 0])
    cube([1, 1, 2.04]);
  translate([37, 186, 0])
    cube([1, 1, 2.04]);
  translate([38, 186, 0])
    cube([1, 1, 2.00]);
  translate([39, 186, 0])
    cube([1, 1, 2.00]);
  translate([40, 186, 0])
    cube([1, 1, 2.08]);
  translate([41, 186, 0])
    cube([1, 1, 2.04]);
  translate([42, 186, 0])
    cube([1, 1, 2.04]);
  translate([43, 186, 0])
    cube([1, 1, 2.00]);
  translate([44, 186, 0])
    cube([1, 1, 2.00]);
  translate([45, 186, 0])
    cube([1, 1, 2.04]);
  translate([46, 186, 0])
    cube([1, 1, 2.00]);
  translate([47, 186, 0])
    cube([1, 1, 2.00]);
  translate([48, 186, 0])
    cube([1, 1, 2.04]);
  translate([49, 186, 0])
    cube([1, 1, 2.04]);
  translate([50, 186, 0])
    cube([1, 1, 2.04]);
  translate([51, 186, 0])
    cube([1, 1, 2.00]);
  translate([52, 186, 0])
    cube([1, 1, 2.00]);
  translate([53, 186, 0])
    cube([1, 1, 2.00]);
  translate([54, 186, 0])
    cube([1, 1, 2.00]);
  translate([55, 186, 0])
    cube([1, 1, 2.00]);
  translate([56, 186, 0])
    cube([1, 1, 2.00]);
  translate([57, 186, 0])
    cube([1, 1, 2.00]);
  translate([58, 186, 0])
    cube([1, 1, 2.00]);
  translate([59, 186, 0])
    cube([1, 1, 2.00]);
  translate([60, 186, 0])
    cube([1, 1, 1.96]);
  translate([61, 186, 0])
    cube([1, 1, 1.96]);
  translate([62, 186, 0])
    cube([1, 1, 2.00]);
  translate([63, 186, 0])
    cube([1, 1, 2.00]);
  translate([64, 186, 0])
    cube([1, 1, 2.31]);
  translate([65, 186, 0])
    cube([1, 1, 2.47]);
  translate([66, 186, 0])
    cube([1, 1, 1.02]);
  translate([67, 186, 0])
    cube([1, 1, 1.53]);
  translate([68, 186, 0])
    cube([1, 1, 1.25]);
  translate([69, 186, 0])
    cube([1, 1, 1.76]);
  translate([70, 186, 0])
    cube([1, 1, 1.41]);
  translate([71, 186, 0])
    cube([1, 1, 1.02]);
  translate([72, 186, 0])
    cube([1, 1, 0.86]);
  translate([73, 186, 0])
    cube([1, 1, 2.00]);
  translate([74, 186, 0])
    cube([1, 1, 3.14]);
  translate([75, 186, 0])
    cube([1, 1, 8.98]);
  translate([76, 186, 0])
    cube([1, 1, 1.37]);
  translate([77, 186, 0])
    cube([1, 1, 1.22]);
  translate([78, 186, 0])
    cube([1, 1, 2.43]);
  translate([79, 186, 0])
    cube([1, 1, 0.27]);
  translate([80, 186, 0])
    cube([1, 1, 3.14]);
  translate([81, 186, 0])
    cube([1, 1, 1.25]);
  translate([82, 186, 0])
    cube([1, 1, 1.49]);
  translate([83, 186, 0])
    cube([1, 1, 1.37]);
  translate([84, 186, 0])
    cube([1, 1, 1.37]);
  translate([85, 186, 0])
    cube([1, 1, 1.84]);
  translate([86, 186, 0])
    cube([1, 1, 1.80]);
  translate([87, 186, 0])
    cube([1, 1, 1.22]);
  translate([88, 186, 0])
    cube([1, 1, 0.82]);
  translate([89, 186, 0])
    cube([1, 1, 1.10]);
  translate([90, 186, 0])
    cube([1, 1, 1.25]);
  translate([91, 186, 0])
    cube([1, 1, 0.98]);
  translate([92, 186, 0])
    cube([1, 1, 1.10]);
  translate([93, 186, 0])
    cube([1, 1, 1.14]);
  translate([94, 186, 0])
    cube([1, 1, 1.14]);
  translate([95, 186, 0])
    cube([1, 1, 1.33]);
  translate([96, 186, 0])
    cube([1, 1, 1.18]);
  translate([97, 186, 0])
    cube([1, 1, 1.65]);
  translate([98, 186, 0])
    cube([1, 1, 0.98]);
  translate([99, 186, 0])
    cube([1, 1, 1.53]);
  translate([100, 186, 0])
    cube([1, 1, 1.37]);
  translate([101, 186, 0])
    cube([1, 1, 3.25]);
  translate([102, 186, 0])
    cube([1, 1, 0.51]);
  translate([103, 186, 0])
    cube([1, 1, 1.33]);
  translate([104, 186, 0])
    cube([1, 1, 2.71]);
  translate([105, 186, 0])
    cube([1, 1, 3.25]);
  translate([106, 186, 0])
    cube([1, 1, 2.27]);
  translate([107, 186, 0])
    cube([1, 1, 0.98]);
  translate([108, 186, 0])
    cube([1, 1, 2.20]);
  translate([109, 186, 0])
    cube([1, 1, 2.43]);
  translate([110, 186, 0])
    cube([1, 1, 2.51]);
  translate([111, 186, 0])
    cube([1, 1, 1.76]);
  translate([112, 186, 0])
    cube([1, 1, 1.76]);
  translate([113, 186, 0])
    cube([1, 1, 1.65]);
  translate([114, 186, 0])
    cube([1, 1, 2.51]);
  translate([115, 186, 0])
    cube([1, 1, 2.55]);
  translate([116, 186, 0])
    cube([1, 1, 2.43]);
  translate([117, 186, 0])
    cube([1, 1, 2.24]);
  translate([118, 186, 0])
    cube([1, 1, 1.33]);
  translate([119, 186, 0])
    cube([1, 1, 1.84]);
  translate([120, 186, 0])
    cube([1, 1, 1.49]);
  translate([121, 186, 0])
    cube([1, 1, 0.94]);
  translate([122, 186, 0])
    cube([1, 1, 0.98]);
  translate([123, 186, 0])
    cube([1, 1, 1.57]);
  translate([124, 186, 0])
    cube([1, 1, 1.84]);
  translate([125, 186, 0])
    cube([1, 1, 1.80]);
  translate([126, 186, 0])
    cube([1, 1, 1.96]);
  translate([127, 186, 0])
    cube([1, 1, 1.84]);
  translate([128, 186, 0])
    cube([1, 1, 1.92]);
  translate([129, 186, 0])
    cube([1, 1, 1.76]);
  translate([130, 186, 0])
    cube([1, 1, 1.73]);
  translate([131, 186, 0])
    cube([1, 1, 1.80]);
  translate([132, 186, 0])
    cube([1, 1, 1.88]);
  translate([133, 186, 0])
    cube([1, 1, 0.55]);
  translate([134, 186, 0])
    cube([1, 1, 1.22]);
  translate([135, 186, 0])
    cube([1, 1, 2.16]);
  translate([136, 186, 0])
    cube([1, 1, 2.08]);
  translate([137, 186, 0])
    cube([1, 1, 2.35]);
  translate([138, 186, 0])
    cube([1, 1, 2.27]);
  translate([139, 186, 0])
    cube([1, 1, 2.16]);
  translate([140, 186, 0])
    cube([1, 1, 1.92]);
  translate([141, 186, 0])
    cube([1, 1, 2.16]);
  translate([142, 186, 0])
    cube([1, 1, 2.00]);
  translate([143, 186, 0])
    cube([1, 1, 1.88]);
  translate([144, 186, 0])
    cube([1, 1, 2.08]);
  translate([145, 186, 0])
    cube([1, 1, 2.27]);
  translate([146, 186, 0])
    cube([1, 1, 2.04]);
  translate([147, 186, 0])
    cube([1, 1, 3.10]);
  translate([148, 186, 0])
    cube([1, 1, 2.71]);
  translate([149, 186, 0])
    cube([1, 1, 3.22]);
  translate([150, 186, 0])
    cube([1, 1, 2.47]);
  translate([151, 186, 0])
    cube([1, 1, 1.88]);
  translate([152, 186, 0])
    cube([1, 1, 1.80]);
  translate([153, 186, 0])
    cube([1, 1, 1.80]);
  translate([154, 186, 0])
    cube([1, 1, 1.80]);
  translate([155, 186, 0])
    cube([1, 1, 1.80]);
  translate([156, 186, 0])
    cube([1, 1, 1.80]);
  translate([157, 186, 0])
    cube([1, 1, 1.80]);
  translate([158, 186, 0])
    cube([1, 1, 1.80]);
  translate([159, 186, 0])
    cube([1, 1, 1.80]);
  translate([160, 186, 0])
    cube([1, 1, 1.80]);
  translate([161, 186, 0])
    cube([1, 1, 1.80]);
  translate([162, 186, 0])
    cube([1, 1, 1.80]);
  translate([163, 186, 0])
    cube([1, 1, 1.80]);
  translate([164, 186, 0])
    cube([1, 1, 1.80]);
  translate([165, 186, 0])
    cube([1, 1, 1.84]);
  translate([166, 186, 0])
    cube([1, 1, 1.80]);
  translate([167, 186, 0])
    cube([1, 1, 1.80]);
  translate([168, 186, 0])
    cube([1, 1, 1.80]);
  translate([169, 186, 0])
    cube([1, 1, 1.80]);
  translate([170, 186, 0])
    cube([1, 1, 1.80]);
  translate([171, 186, 0])
    cube([1, 1, 4.27]);
  translate([172, 186, 0])
    cube([1, 1, 2.31]);
  translate([173, 186, 0])
    cube([1, 1, 4.04]);
  translate([174, 186, 0])
    cube([1, 1, 1.06]);
  translate([175, 186, 0])
    cube([1, 1, 0.78]);
  translate([176, 186, 0])
    cube([1, 1, 1.25]);
  translate([177, 186, 0])
    cube([1, 1, 1.25]);
  translate([178, 186, 0])
    cube([1, 1, 1.25]);
  translate([179, 186, 0])
    cube([1, 1, 1.25]);
  translate([180, 186, 0])
    cube([1, 1, 1.22]);
  translate([181, 186, 0])
    cube([1, 1, 1.18]);
  translate([182, 186, 0])
    cube([1, 1, 1.06]);
  translate([183, 186, 0])
    cube([1, 1, 1.22]);
  translate([184, 186, 0])
    cube([1, 1, 2.51]);
  translate([185, 186, 0])
    cube([1, 1, 2.00]);
  translate([186, 186, 0])
    cube([1, 1, 1.73]);
  translate([187, 186, 0])
    cube([1, 1, 1.57]);
  translate([188, 186, 0])
    cube([1, 1, 1.61]);
  translate([189, 186, 0])
    cube([1, 1, 1.61]);
  translate([190, 186, 0])
    cube([1, 1, 1.61]);
  translate([191, 186, 0])
    cube([1, 1, 1.53]);
  translate([192, 186, 0])
    cube([1, 1, 0.67]);
  translate([193, 186, 0])
    cube([1, 1, 0.71]);
  translate([194, 186, 0])
    cube([1, 1, 0.63]);
  translate([195, 186, 0])
    cube([1, 1, 0.39]);
  translate([196, 186, 0])
    cube([1, 1, 0.59]);
  translate([197, 186, 0])
    cube([1, 1, 1.25]);
  translate([198, 186, 0])
    cube([1, 1, 1.06]);
  translate([199, 186, 0])
    cube([1, 1, 0.98]);
  translate([200, 186, 0])
    cube([1, 1, 1.14]);
  translate([201, 186, 0])
    cube([1, 1, 1.06]);
  translate([202, 186, 0])
    cube([1, 1, 0.90]);
  translate([203, 186, 0])
    cube([1, 1, 1.14]);
  translate([204, 186, 0])
    cube([1, 1, 1.69]);
  translate([205, 186, 0])
    cube([1, 1, 3.02]);
  translate([206, 186, 0])
    cube([1, 1, 2.86]);
  translate([207, 186, 0])
    cube([1, 1, 2.98]);
  translate([208, 186, 0])
    cube([1, 1, 3.65]);
  translate([209, 186, 0])
    cube([1, 1, 2.43]);
  translate([210, 186, 0])
    cube([1, 1, 2.43]);
  translate([211, 186, 0])
    cube([1, 1, 2.39]);
  translate([212, 186, 0])
    cube([1, 1, 1.84]);
  translate([213, 186, 0])
    cube([1, 1, 1.88]);
  translate([214, 186, 0])
    cube([1, 1, 1.84]);
  translate([215, 186, 0])
    cube([1, 1, 1.88]);
  translate([216, 186, 0])
    cube([1, 1, 1.88]);
  translate([217, 186, 0])
    cube([1, 1, 1.88]);
  translate([218, 186, 0])
    cube([1, 1, 1.88]);
  translate([219, 186, 0])
    cube([1, 1, 1.88]);
  translate([220, 186, 0])
    cube([1, 1, 1.88]);
  translate([221, 186, 0])
    cube([1, 1, 1.88]);
  translate([222, 186, 0])
    cube([1, 1, 1.88]);
  translate([223, 186, 0])
    cube([1, 1, 1.88]);
  translate([224, 186, 0])
    cube([1, 1, 1.88]);
  translate([225, 186, 0])
    cube([1, 1, 1.88]);
  translate([226, 186, 0])
    cube([1, 1, 1.88]);
  translate([227, 186, 0])
    cube([1, 1, 1.88]);
  translate([228, 186, 0])
    cube([1, 1, 1.88]);
  translate([229, 186, 0])
    cube([1, 1, 1.88]);
  translate([230, 186, 0])
    cube([1, 1, 1.84]);
  translate([231, 186, 0])
    cube([1, 1, 1.84]);
  translate([232, 186, 0])
    cube([1, 1, 1.88]);
  translate([233, 186, 0])
    cube([1, 1, 1.84]);
  translate([234, 186, 0])
    cube([1, 1, 1.88]);
  translate([235, 186, 0])
    cube([1, 1, 1.88]);
  translate([236, 186, 0])
    cube([1, 1, 1.88]);
  translate([237, 186, 0])
    cube([1, 1, 1.88]);
  translate([238, 186, 0])
    cube([1, 1, 1.84]);
  translate([239, 186, 0])
    cube([1, 1, 1.80]);
  translate([240, 186, 0])
    cube([1, 1, 1.88]);
  translate([241, 186, 0])
    cube([1, 1, 1.84]);
  translate([242, 186, 0])
    cube([1, 1, 1.84]);
  translate([243, 186, 0])
    cube([1, 1, 1.84]);
  translate([244, 186, 0])
    cube([1, 1, 1.84]);
  translate([245, 186, 0])
    cube([1, 1, 1.84]);
  translate([246, 186, 0])
    cube([1, 1, 1.84]);
  translate([0, 187, 0])
    cube([1, 1, 2.04]);
  translate([1, 187, 0])
    cube([1, 1, 2.04]);
  translate([2, 187, 0])
    cube([1, 1, 2.04]);
  translate([3, 187, 0])
    cube([1, 1, 2.04]);
  translate([4, 187, 0])
    cube([1, 1, 2.04]);
  translate([5, 187, 0])
    cube([1, 1, 2.04]);
  translate([6, 187, 0])
    cube([1, 1, 1.96]);
  translate([7, 187, 0])
    cube([1, 1, 2.00]);
  translate([8, 187, 0])
    cube([1, 1, 2.04]);
  translate([9, 187, 0])
    cube([1, 1, 2.04]);
  translate([10, 187, 0])
    cube([1, 1, 2.04]);
  translate([11, 187, 0])
    cube([1, 1, 2.04]);
  translate([12, 187, 0])
    cube([1, 1, 2.04]);
  translate([13, 187, 0])
    cube([1, 1, 2.04]);
  translate([14, 187, 0])
    cube([1, 1, 2.04]);
  translate([15, 187, 0])
    cube([1, 1, 2.04]);
  translate([16, 187, 0])
    cube([1, 1, 2.04]);
  translate([17, 187, 0])
    cube([1, 1, 2.04]);
  translate([18, 187, 0])
    cube([1, 1, 2.04]);
  translate([19, 187, 0])
    cube([1, 1, 2.04]);
  translate([20, 187, 0])
    cube([1, 1, 2.04]);
  translate([21, 187, 0])
    cube([1, 1, 2.04]);
  translate([22, 187, 0])
    cube([1, 1, 2.00]);
  translate([23, 187, 0])
    cube([1, 1, 2.04]);
  translate([24, 187, 0])
    cube([1, 1, 2.04]);
  translate([25, 187, 0])
    cube([1, 1, 2.04]);
  translate([26, 187, 0])
    cube([1, 1, 2.04]);
  translate([27, 187, 0])
    cube([1, 1, 2.00]);
  translate([28, 187, 0])
    cube([1, 1, 2.04]);
  translate([29, 187, 0])
    cube([1, 1, 2.04]);
  translate([30, 187, 0])
    cube([1, 1, 2.04]);
  translate([31, 187, 0])
    cube([1, 1, 2.04]);
  translate([32, 187, 0])
    cube([1, 1, 2.04]);
  translate([33, 187, 0])
    cube([1, 1, 2.00]);
  translate([34, 187, 0])
    cube([1, 1, 2.04]);
  translate([35, 187, 0])
    cube([1, 1, 2.00]);
  translate([36, 187, 0])
    cube([1, 1, 2.04]);
  translate([37, 187, 0])
    cube([1, 1, 2.04]);
  translate([38, 187, 0])
    cube([1, 1, 2.00]);
  translate([39, 187, 0])
    cube([1, 1, 2.00]);
  translate([40, 187, 0])
    cube([1, 1, 2.08]);
  translate([41, 187, 0])
    cube([1, 1, 2.04]);
  translate([42, 187, 0])
    cube([1, 1, 2.04]);
  translate([43, 187, 0])
    cube([1, 1, 2.04]);
  translate([44, 187, 0])
    cube([1, 1, 2.00]);
  translate([45, 187, 0])
    cube([1, 1, 2.04]);
  translate([46, 187, 0])
    cube([1, 1, 2.00]);
  translate([47, 187, 0])
    cube([1, 1, 2.00]);
  translate([48, 187, 0])
    cube([1, 1, 2.04]);
  translate([49, 187, 0])
    cube([1, 1, 2.04]);
  translate([50, 187, 0])
    cube([1, 1, 2.04]);
  translate([51, 187, 0])
    cube([1, 1, 2.00]);
  translate([52, 187, 0])
    cube([1, 1, 2.00]);
  translate([53, 187, 0])
    cube([1, 1, 2.00]);
  translate([54, 187, 0])
    cube([1, 1, 2.00]);
  translate([55, 187, 0])
    cube([1, 1, 2.00]);
  translate([56, 187, 0])
    cube([1, 1, 2.00]);
  translate([57, 187, 0])
    cube([1, 1, 2.00]);
  translate([58, 187, 0])
    cube([1, 1, 2.00]);
  translate([59, 187, 0])
    cube([1, 1, 2.00]);
  translate([60, 187, 0])
    cube([1, 1, 2.04]);
  translate([61, 187, 0])
    cube([1, 1, 2.04]);
  translate([62, 187, 0])
    cube([1, 1, 2.00]);
  translate([63, 187, 0])
    cube([1, 1, 2.00]);
  translate([64, 187, 0])
    cube([1, 1, 1.65]);
  translate([65, 187, 0])
    cube([1, 1, 6.27]);
  translate([66, 187, 0])
    cube([1, 1, 1.84]);
  translate([67, 187, 0])
    cube([1, 1, 1.61]);
  translate([68, 187, 0])
    cube([1, 1, 1.53]);
  translate([69, 187, 0])
    cube([1, 1, 1.45]);
  translate([70, 187, 0])
    cube([1, 1, 0.78]);
  translate([71, 187, 0])
    cube([1, 1, 1.41]);
  translate([72, 187, 0])
    cube([1, 1, 3.18]);
  translate([73, 187, 0])
    cube([1, 1, 0.98]);
  translate([74, 187, 0])
    cube([1, 1, 8.78]);
  translate([75, 187, 0])
    cube([1, 1, 8.82]);
  translate([76, 187, 0])
    cube([1, 1, 2.16]);
  translate([77, 187, 0])
    cube([1, 1, 0.90]);
  translate([78, 187, 0])
    cube([1, 1, 1.14]);
  translate([79, 187, 0])
    cube([1, 1, 1.29]);
  translate([80, 187, 0])
    cube([1, 1, 1.41]);
  translate([81, 187, 0])
    cube([1, 1, 1.37]);
  translate([82, 187, 0])
    cube([1, 1, 1.29]);
  translate([83, 187, 0])
    cube([1, 1, 1.61]);
  translate([84, 187, 0])
    cube([1, 1, 1.76]);
  translate([85, 187, 0])
    cube([1, 1, 1.41]);
  translate([86, 187, 0])
    cube([1, 1, 1.22]);
  translate([87, 187, 0])
    cube([1, 1, 1.22]);
  translate([88, 187, 0])
    cube([1, 1, 1.80]);
  translate([89, 187, 0])
    cube([1, 1, 1.49]);
  translate([90, 187, 0])
    cube([1, 1, 1.53]);
  translate([91, 187, 0])
    cube([1, 1, 0.98]);
  translate([92, 187, 0])
    cube([1, 1, 1.18]);
  translate([93, 187, 0])
    cube([1, 1, 1.06]);
  translate([94, 187, 0])
    cube([1, 1, 1.22]);
  translate([95, 187, 0])
    cube([1, 1, 1.29]);
  translate([96, 187, 0])
    cube([1, 1, 1.57]);
  translate([97, 187, 0])
    cube([1, 1, 1.65]);
  translate([98, 187, 0])
    cube([1, 1, 1.45]);
  translate([99, 187, 0])
    cube([1, 1, 2.00]);
  translate([100, 187, 0])
    cube([1, 1, 2.00]);
  translate([101, 187, 0])
    cube([1, 1, 1.41]);
  translate([102, 187, 0])
    cube([1, 1, 1.49]);
  translate([103, 187, 0])
    cube([1, 1, 3.69]);
  translate([104, 187, 0])
    cube([1, 1, 3.25]);
  translate([105, 187, 0])
    cube([1, 1, 5.14]);
  translate([106, 187, 0])
    cube([1, 1, 1.37]);
  translate([107, 187, 0])
    cube([1, 1, 0.98]);
  translate([108, 187, 0])
    cube([1, 1, 0.59]);
  translate([109, 187, 0])
    cube([1, 1, 2.75]);
  translate([110, 187, 0])
    cube([1, 1, 2.43]);
  translate([111, 187, 0])
    cube([1, 1, 2.71]);
  translate([112, 187, 0])
    cube([1, 1, 1.53]);
  translate([113, 187, 0])
    cube([1, 1, 1.29]);
  translate([114, 187, 0])
    cube([1, 1, 0.75]);
  translate([115, 187, 0])
    cube([1, 1, 0.94]);
  translate([116, 187, 0])
    cube([1, 1, 1.02]);
  translate([117, 187, 0])
    cube([1, 1, 0.94]);
  translate([118, 187, 0])
    cube([1, 1, 1.41]);
  translate([119, 187, 0])
    cube([1, 1, 1.84]);
  translate([120, 187, 0])
    cube([1, 1, 1.76]);
  translate([121, 187, 0])
    cube([1, 1, 0.94]);
  translate([122, 187, 0])
    cube([1, 1, 2.24]);
  translate([123, 187, 0])
    cube([1, 1, 1.96]);
  translate([124, 187, 0])
    cube([1, 1, 1.73]);
  translate([125, 187, 0])
    cube([1, 1, 1.80]);
  translate([126, 187, 0])
    cube([1, 1, 1.80]);
  translate([127, 187, 0])
    cube([1, 1, 1.84]);
  translate([128, 187, 0])
    cube([1, 1, 1.57]);
  translate([129, 187, 0])
    cube([1, 1, 1.76]);
  translate([130, 187, 0])
    cube([1, 1, 1.73]);
  translate([131, 187, 0])
    cube([1, 1, 1.61]);
  translate([132, 187, 0])
    cube([1, 1, 1.69]);
  translate([133, 187, 0])
    cube([1, 1, 2.51]);
  translate([134, 187, 0])
    cube([1, 1, 1.88]);
  translate([135, 187, 0])
    cube([1, 1, 2.27]);
  translate([136, 187, 0])
    cube([1, 1, 2.27]);
  translate([137, 187, 0])
    cube([1, 1, 2.31]);
  translate([138, 187, 0])
    cube([1, 1, 2.31]);
  translate([139, 187, 0])
    cube([1, 1, 2.47]);
  translate([140, 187, 0])
    cube([1, 1, 1.92]);
  translate([141, 187, 0])
    cube([1, 1, 1.84]);
  translate([142, 187, 0])
    cube([1, 1, 1.84]);
  translate([143, 187, 0])
    cube([1, 1, 1.96]);
  translate([144, 187, 0])
    cube([1, 1, 2.00]);
  translate([145, 187, 0])
    cube([1, 1, 2.04]);
  translate([146, 187, 0])
    cube([1, 1, 2.43]);
  translate([147, 187, 0])
    cube([1, 1, 1.96]);
  translate([148, 187, 0])
    cube([1, 1, 2.47]);
  translate([149, 187, 0])
    cube([1, 1, 2.67]);
  translate([150, 187, 0])
    cube([1, 1, 2.39]);
  translate([151, 187, 0])
    cube([1, 1, 1.88]);
  translate([152, 187, 0])
    cube([1, 1, 1.80]);
  translate([153, 187, 0])
    cube([1, 1, 1.80]);
  translate([154, 187, 0])
    cube([1, 1, 1.80]);
  translate([155, 187, 0])
    cube([1, 1, 1.80]);
  translate([156, 187, 0])
    cube([1, 1, 1.80]);
  translate([157, 187, 0])
    cube([1, 1, 1.80]);
  translate([158, 187, 0])
    cube([1, 1, 1.80]);
  translate([159, 187, 0])
    cube([1, 1, 1.80]);
  translate([160, 187, 0])
    cube([1, 1, 1.80]);
  translate([161, 187, 0])
    cube([1, 1, 1.80]);
  translate([162, 187, 0])
    cube([1, 1, 1.80]);
  translate([163, 187, 0])
    cube([1, 1, 1.80]);
  translate([164, 187, 0])
    cube([1, 1, 1.80]);
  translate([165, 187, 0])
    cube([1, 1, 1.84]);
  translate([166, 187, 0])
    cube([1, 1, 1.80]);
  translate([167, 187, 0])
    cube([1, 1, 1.80]);
  translate([168, 187, 0])
    cube([1, 1, 1.80]);
  translate([169, 187, 0])
    cube([1, 1, 1.80]);
  translate([170, 187, 0])
    cube([1, 1, 1.80]);
  translate([171, 187, 0])
    cube([1, 1, 1.65]);
  translate([172, 187, 0])
    cube([1, 1, 2.00]);
  translate([173, 187, 0])
    cube([1, 1, 0.82]);
  translate([174, 187, 0])
    cube([1, 1, 0.78]);
  translate([175, 187, 0])
    cube([1, 1, 1.14]);
  translate([176, 187, 0])
    cube([1, 1, 1.29]);
  translate([177, 187, 0])
    cube([1, 1, 1.33]);
  translate([178, 187, 0])
    cube([1, 1, 1.22]);
  translate([179, 187, 0])
    cube([1, 1, 1.25]);
  translate([180, 187, 0])
    cube([1, 1, 1.22]);
  translate([181, 187, 0])
    cube([1, 1, 1.18]);
  translate([182, 187, 0])
    cube([1, 1, 1.14]);
  translate([183, 187, 0])
    cube([1, 1, 3.73]);
  translate([184, 187, 0])
    cube([1, 1, 5.41]);
  translate([185, 187, 0])
    cube([1, 1, 5.45]);
  translate([186, 187, 0])
    cube([1, 1, 2.75]);
  translate([187, 187, 0])
    cube([1, 1, 1.96]);
  translate([188, 187, 0])
    cube([1, 1, 1.76]);
  translate([189, 187, 0])
    cube([1, 1, 1.61]);
  translate([190, 187, 0])
    cube([1, 1, 1.92]);
  translate([191, 187, 0])
    cube([1, 1, 1.84]);
  translate([192, 187, 0])
    cube([1, 1, 1.69]);
  translate([193, 187, 0])
    cube([1, 1, 0.39]);
  translate([194, 187, 0])
    cube([1, 1, 0.43]);
  translate([195, 187, 0])
    cube([1, 1, 0.31]);
  translate([196, 187, 0])
    cube([1, 1, 0.24]);
  translate([197, 187, 0])
    cube([1, 1, 0.35]);
  translate([198, 187, 0])
    cube([1, 1, 0.51]);
  translate([199, 187, 0])
    cube([1, 1, 1.10]);
  translate([200, 187, 0])
    cube([1, 1, 1.25]);
  translate([201, 187, 0])
    cube([1, 1, 1.10]);
  translate([202, 187, 0])
    cube([1, 1, 1.14]);
  translate([203, 187, 0])
    cube([1, 1, 1.33]);
  translate([204, 187, 0])
    cube([1, 1, 0.98]);
  translate([205, 187, 0])
    cube([1, 1, 1.37]);
  translate([206, 187, 0])
    cube([1, 1, 2.86]);
  translate([207, 187, 0])
    cube([1, 1, 2.86]);
  translate([208, 187, 0])
    cube([1, 1, 2.90]);
  translate([209, 187, 0])
    cube([1, 1, 2.59]);
  translate([210, 187, 0])
    cube([1, 1, 2.24]);
  translate([211, 187, 0])
    cube([1, 1, 2.39]);
  translate([212, 187, 0])
    cube([1, 1, 2.86]);
  translate([213, 187, 0])
    cube([1, 1, 2.31]);
  translate([214, 187, 0])
    cube([1, 1, 1.84]);
  translate([215, 187, 0])
    cube([1, 1, 1.88]);
  translate([216, 187, 0])
    cube([1, 1, 1.88]);
  translate([217, 187, 0])
    cube([1, 1, 1.88]);
  translate([218, 187, 0])
    cube([1, 1, 1.88]);
  translate([219, 187, 0])
    cube([1, 1, 1.88]);
  translate([220, 187, 0])
    cube([1, 1, 1.88]);
  translate([221, 187, 0])
    cube([1, 1, 1.88]);
  translate([222, 187, 0])
    cube([1, 1, 1.88]);
  translate([223, 187, 0])
    cube([1, 1, 1.88]);
  translate([224, 187, 0])
    cube([1, 1, 1.88]);
  translate([225, 187, 0])
    cube([1, 1, 1.88]);
  translate([226, 187, 0])
    cube([1, 1, 1.88]);
  translate([227, 187, 0])
    cube([1, 1, 1.88]);
  translate([228, 187, 0])
    cube([1, 1, 1.88]);
  translate([229, 187, 0])
    cube([1, 1, 1.88]);
  translate([230, 187, 0])
    cube([1, 1, 1.92]);
  translate([231, 187, 0])
    cube([1, 1, 1.92]);
  translate([232, 187, 0])
    cube([1, 1, 1.88]);
  translate([233, 187, 0])
    cube([1, 1, 1.84]);
  translate([234, 187, 0])
    cube([1, 1, 1.88]);
  translate([235, 187, 0])
    cube([1, 1, 1.88]);
  translate([236, 187, 0])
    cube([1, 1, 1.88]);
  translate([237, 187, 0])
    cube([1, 1, 1.88]);
  translate([238, 187, 0])
    cube([1, 1, 1.84]);
  translate([239, 187, 0])
    cube([1, 1, 1.80]);
  translate([240, 187, 0])
    cube([1, 1, 1.88]);
  translate([241, 187, 0])
    cube([1, 1, 1.84]);
  translate([242, 187, 0])
    cube([1, 1, 1.84]);
  translate([243, 187, 0])
    cube([1, 1, 1.84]);
  translate([244, 187, 0])
    cube([1, 1, 1.92]);
  translate([245, 187, 0])
    cube([1, 1, 1.92]);
  translate([246, 187, 0])
    cube([1, 1, 1.84]);
  translate([0, 188, 0])
    cube([1, 1, 2.04]);
  translate([1, 188, 0])
    cube([1, 1, 2.04]);
  translate([2, 188, 0])
    cube([1, 1, 2.04]);
  translate([3, 188, 0])
    cube([1, 1, 2.04]);
  translate([4, 188, 0])
    cube([1, 1, 2.04]);
  translate([5, 188, 0])
    cube([1, 1, 2.04]);
  translate([6, 188, 0])
    cube([1, 1, 2.04]);
  translate([7, 188, 0])
    cube([1, 1, 2.04]);
  translate([8, 188, 0])
    cube([1, 1, 2.04]);
  translate([9, 188, 0])
    cube([1, 1, 2.04]);
  translate([10, 188, 0])
    cube([1, 1, 2.08]);
  translate([11, 188, 0])
    cube([1, 1, 2.08]);
  translate([12, 188, 0])
    cube([1, 1, 2.04]);
  translate([13, 188, 0])
    cube([1, 1, 2.04]);
  translate([14, 188, 0])
    cube([1, 1, 2.08]);
  translate([15, 188, 0])
    cube([1, 1, 2.04]);
  translate([16, 188, 0])
    cube([1, 1, 2.04]);
  translate([17, 188, 0])
    cube([1, 1, 2.04]);
  translate([18, 188, 0])
    cube([1, 1, 2.04]);
  translate([19, 188, 0])
    cube([1, 1, 2.04]);
  translate([20, 188, 0])
    cube([1, 1, 2.00]);
  translate([21, 188, 0])
    cube([1, 1, 2.04]);
  translate([22, 188, 0])
    cube([1, 1, 2.08]);
  translate([23, 188, 0])
    cube([1, 1, 2.08]);
  translate([24, 188, 0])
    cube([1, 1, 2.04]);
  translate([25, 188, 0])
    cube([1, 1, 2.04]);
  translate([26, 188, 0])
    cube([1, 1, 2.04]);
  translate([27, 188, 0])
    cube([1, 1, 2.04]);
  translate([28, 188, 0])
    cube([1, 1, 2.04]);
  translate([29, 188, 0])
    cube([1, 1, 2.04]);
  translate([30, 188, 0])
    cube([1, 1, 2.04]);
  translate([31, 188, 0])
    cube([1, 1, 2.04]);
  translate([32, 188, 0])
    cube([1, 1, 2.04]);
  translate([33, 188, 0])
    cube([1, 1, 2.00]);
  translate([34, 188, 0])
    cube([1, 1, 2.04]);
  translate([35, 188, 0])
    cube([1, 1, 2.00]);
  translate([36, 188, 0])
    cube([1, 1, 2.04]);
  translate([37, 188, 0])
    cube([1, 1, 2.04]);
  translate([38, 188, 0])
    cube([1, 1, 2.04]);
  translate([39, 188, 0])
    cube([1, 1, 2.04]);
  translate([40, 188, 0])
    cube([1, 1, 2.04]);
  translate([41, 188, 0])
    cube([1, 1, 2.04]);
  translate([42, 188, 0])
    cube([1, 1, 2.04]);
  translate([43, 188, 0])
    cube([1, 1, 2.04]);
  translate([44, 188, 0])
    cube([1, 1, 2.04]);
  translate([45, 188, 0])
    cube([1, 1, 2.00]);
  translate([46, 188, 0])
    cube([1, 1, 2.04]);
  translate([47, 188, 0])
    cube([1, 1, 2.04]);
  translate([48, 188, 0])
    cube([1, 1, 2.08]);
  translate([49, 188, 0])
    cube([1, 1, 2.04]);
  translate([50, 188, 0])
    cube([1, 1, 2.00]);
  translate([51, 188, 0])
    cube([1, 1, 2.08]);
  translate([52, 188, 0])
    cube([1, 1, 2.00]);
  translate([53, 188, 0])
    cube([1, 1, 2.00]);
  translate([54, 188, 0])
    cube([1, 1, 2.00]);
  translate([55, 188, 0])
    cube([1, 1, 2.00]);
  translate([56, 188, 0])
    cube([1, 1, 2.00]);
  translate([57, 188, 0])
    cube([1, 1, 2.00]);
  translate([58, 188, 0])
    cube([1, 1, 2.00]);
  translate([59, 188, 0])
    cube([1, 1, 2.00]);
  translate([60, 188, 0])
    cube([1, 1, 2.00]);
  translate([61, 188, 0])
    cube([1, 1, 2.00]);
  translate([62, 188, 0])
    cube([1, 1, 2.00]);
  translate([63, 188, 0])
    cube([1, 1, 2.00]);
  translate([64, 188, 0])
    cube([1, 1, 1.61]);
  translate([65, 188, 0])
    cube([1, 1, 2.47]);
  translate([66, 188, 0])
    cube([1, 1, 2.20]);
  translate([67, 188, 0])
    cube([1, 1, 1.76]);
  translate([68, 188, 0])
    cube([1, 1, 0.86]);
  translate([69, 188, 0])
    cube([1, 1, 0.82]);
  translate([70, 188, 0])
    cube([1, 1, 1.06]);
  translate([71, 188, 0])
    cube([1, 1, 1.57]);
  translate([72, 188, 0])
    cube([1, 1, 1.65]);
  translate([73, 188, 0])
    cube([1, 1, 0.43]);
  translate([74, 188, 0])
    cube([1, 1, 9.02]);
  translate([75, 188, 0])
    cube([1, 1, 7.65]);
  translate([76, 188, 0])
    cube([1, 1, 4.24]);
  translate([77, 188, 0])
    cube([1, 1, 0.90]);
  translate([78, 188, 0])
    cube([1, 1, 1.22]);
  translate([79, 188, 0])
    cube([1, 1, 5.29]);
  translate([80, 188, 0])
    cube([1, 1, 1.33]);
  translate([81, 188, 0])
    cube([1, 1, 1.41]);
  translate([82, 188, 0])
    cube([1, 1, 1.57]);
  translate([83, 188, 0])
    cube([1, 1, 1.84]);
  translate([84, 188, 0])
    cube([1, 1, 1.18]);
  translate([85, 188, 0])
    cube([1, 1, 1.45]);
  translate([86, 188, 0])
    cube([1, 1, 2.00]);
  translate([87, 188, 0])
    cube([1, 1, 2.31]);
  translate([88, 188, 0])
    cube([1, 1, 2.08]);
  translate([89, 188, 0])
    cube([1, 1, 2.08]);
  translate([90, 188, 0])
    cube([1, 1, 1.96]);
  translate([91, 188, 0])
    cube([1, 1, 1.61]);
  translate([92, 188, 0])
    cube([1, 1, 1.18]);
  translate([93, 188, 0])
    cube([1, 1, 1.14]);
  translate([94, 188, 0])
    cube([1, 1, 1.10]);
  translate([95, 188, 0])
    cube([1, 1, 1.18]);
  translate([96, 188, 0])
    cube([1, 1, 1.37]);
  translate([97, 188, 0])
    cube([1, 1, 1.49]);
  translate([98, 188, 0])
    cube([1, 1, 1.61]);
  translate([99, 188, 0])
    cube([1, 1, 1.80]);
  translate([100, 188, 0])
    cube([1, 1, 1.73]);
  translate([101, 188, 0])
    cube([1, 1, 1.33]);
  translate([102, 188, 0])
    cube([1, 1, 1.61]);
  translate([103, 188, 0])
    cube([1, 1, 2.59]);
  translate([104, 188, 0])
    cube([1, 1, 2.12]);
  translate([105, 188, 0])
    cube([1, 1, 1.69]);
  translate([106, 188, 0])
    cube([1, 1, 0.90]);
  translate([107, 188, 0])
    cube([1, 1, 2.35]);
  translate([108, 188, 0])
    cube([1, 1, 2.39]);
  translate([109, 188, 0])
    cube([1, 1, 2.24]);
  translate([110, 188, 0])
    cube([1, 1, 1.88]);
  translate([111, 188, 0])
    cube([1, 1, 1.18]);
  translate([112, 188, 0])
    cube([1, 1, 1.33]);
  translate([113, 188, 0])
    cube([1, 1, 1.14]);
  translate([114, 188, 0])
    cube([1, 1, 1.06]);
  translate([115, 188, 0])
    cube([1, 1, 0.90]);
  translate([116, 188, 0])
    cube([1, 1, 0.82]);
  translate([117, 188, 0])
    cube([1, 1, 0.71]);
  translate([118, 188, 0])
    cube([1, 1, 0.98]);
  translate([119, 188, 0])
    cube([1, 1, 1.18]);
  translate([120, 188, 0])
    cube([1, 1, 1.49]);
  translate([121, 188, 0])
    cube([1, 1, 1.37]);
  translate([122, 188, 0])
    cube([1, 1, 0.71]);
  translate([123, 188, 0])
    cube([1, 1, 1.69]);
  translate([124, 188, 0])
    cube([1, 1, 1.80]);
  translate([125, 188, 0])
    cube([1, 1, 1.80]);
  translate([126, 188, 0])
    cube([1, 1, 1.76]);
  translate([127, 188, 0])
    cube([1, 1, 1.45]);
  translate([128, 188, 0])
    cube([1, 1, 1.25]);
  translate([129, 188, 0])
    cube([1, 1, 1.18]);
  translate([130, 188, 0])
    cube([1, 1, 1.37]);
  translate([131, 188, 0])
    cube([1, 1, 2.12]);
  translate([132, 188, 0])
    cube([1, 1, 2.43]);
  translate([133, 188, 0])
    cube([1, 1, 2.39]);
  translate([134, 188, 0])
    cube([1, 1, 2.12]);
  translate([135, 188, 0])
    cube([1, 1, 2.08]);
  translate([136, 188, 0])
    cube([1, 1, 2.04]);
  translate([137, 188, 0])
    cube([1, 1, 1.92]);
  translate([138, 188, 0])
    cube([1, 1, 2.00]);
  translate([139, 188, 0])
    cube([1, 1, 2.20]);
  translate([140, 188, 0])
    cube([1, 1, 1.92]);
  translate([141, 188, 0])
    cube([1, 1, 1.96]);
  translate([142, 188, 0])
    cube([1, 1, 1.80]);
  translate([143, 188, 0])
    cube([1, 1, 1.88]);
  translate([144, 188, 0])
    cube([1, 1, 1.88]);
  translate([145, 188, 0])
    cube([1, 1, 1.88]);
  translate([146, 188, 0])
    cube([1, 1, 2.08]);
  translate([147, 188, 0])
    cube([1, 1, 2.24]);
  translate([148, 188, 0])
    cube([1, 1, 2.20]);
  translate([149, 188, 0])
    cube([1, 1, 2.27]);
  translate([150, 188, 0])
    cube([1, 1, 2.35]);
  translate([151, 188, 0])
    cube([1, 1, 2.20]);
  translate([152, 188, 0])
    cube([1, 1, 1.80]);
  translate([153, 188, 0])
    cube([1, 1, 1.80]);
  translate([154, 188, 0])
    cube([1, 1, 1.80]);
  translate([155, 188, 0])
    cube([1, 1, 1.80]);
  translate([156, 188, 0])
    cube([1, 1, 1.80]);
  translate([157, 188, 0])
    cube([1, 1, 1.80]);
  translate([158, 188, 0])
    cube([1, 1, 1.80]);
  translate([159, 188, 0])
    cube([1, 1, 1.80]);
  translate([160, 188, 0])
    cube([1, 1, 1.80]);
  translate([161, 188, 0])
    cube([1, 1, 1.80]);
  translate([162, 188, 0])
    cube([1, 1, 1.84]);
  translate([163, 188, 0])
    cube([1, 1, 1.80]);
  translate([164, 188, 0])
    cube([1, 1, 1.84]);
  translate([165, 188, 0])
    cube([1, 1, 1.84]);
  translate([166, 188, 0])
    cube([1, 1, 1.84]);
  translate([167, 188, 0])
    cube([1, 1, 1.84]);
  translate([168, 188, 0])
    cube([1, 1, 1.84]);
  translate([169, 188, 0])
    cube([1, 1, 1.84]);
  translate([170, 188, 0])
    cube([1, 1, 1.84]);
  translate([171, 188, 0])
    cube([1, 1, 1.92]);
  translate([172, 188, 0])
    cube([1, 1, 2.20]);
  translate([173, 188, 0])
    cube([1, 1, 1.96]);
  translate([174, 188, 0])
    cube([1, 1, 1.33]);
  translate([175, 188, 0])
    cube([1, 1, 1.41]);
  translate([176, 188, 0])
    cube([1, 1, 1.37]);
  translate([177, 188, 0])
    cube([1, 1, 1.14]);
  translate([178, 188, 0])
    cube([1, 1, 1.22]);
  translate([179, 188, 0])
    cube([1, 1, 1.25]);
  translate([180, 188, 0])
    cube([1, 1, 1.18]);
  translate([181, 188, 0])
    cube([1, 1, 1.18]);
  translate([182, 188, 0])
    cube([1, 1, 1.29]);
  translate([183, 188, 0])
    cube([1, 1, 3.84]);
  translate([184, 188, 0])
    cube([1, 1, 5.80]);
  translate([185, 188, 0])
    cube([1, 1, 6.67]);
  translate([186, 188, 0])
    cube([1, 1, 5.41]);
  translate([187, 188, 0])
    cube([1, 1, 2.55]);
  translate([188, 188, 0])
    cube([1, 1, 1.65]);
  translate([189, 188, 0])
    cube([1, 1, 1.84]);
  translate([190, 188, 0])
    cube([1, 1, 2.31]);
  translate([191, 188, 0])
    cube([1, 1, 2.43]);
  translate([192, 188, 0])
    cube([1, 1, 1.65]);
  translate([193, 188, 0])
    cube([1, 1, 0.27]);
  translate([194, 188, 0])
    cube([1, 1, 0.43]);
  translate([195, 188, 0])
    cube([1, 1, 0.39]);
  translate([196, 188, 0])
    cube([1, 1, 0.43]);
  translate([197, 188, 0])
    cube([1, 1, 0.43]);
  translate([198, 188, 0])
    cube([1, 1, 0.43]);
  translate([199, 188, 0])
    cube([1, 1, 0.47]);
  translate([200, 188, 0])
    cube([1, 1, 0.86]);
  translate([201, 188, 0])
    cube([1, 1, 1.10]);
  translate([202, 188, 0])
    cube([1, 1, 1.14]);
  translate([203, 188, 0])
    cube([1, 1, 1.06]);
  translate([204, 188, 0])
    cube([1, 1, 0.78]);
  translate([205, 188, 0])
    cube([1, 1, 1.14]);
  translate([206, 188, 0])
    cube([1, 1, 1.14]);
  translate([207, 188, 0])
    cube([1, 1, 1.49]);
  translate([208, 188, 0])
    cube([1, 1, 2.86]);
  translate([209, 188, 0])
    cube([1, 1, 2.71]);
  translate([210, 188, 0])
    cube([1, 1, 2.82]);
  translate([211, 188, 0])
    cube([1, 1, 3.57]);
  translate([212, 188, 0])
    cube([1, 1, 2.35]);
  translate([213, 188, 0])
    cube([1, 1, 2.27]);
  translate([214, 188, 0])
    cube([1, 1, 1.69]);
  translate([215, 188, 0])
    cube([1, 1, 1.92]);
  translate([216, 188, 0])
    cube([1, 1, 1.92]);
  translate([217, 188, 0])
    cube([1, 1, 1.88]);
  translate([218, 188, 0])
    cube([1, 1, 1.88]);
  translate([219, 188, 0])
    cube([1, 1, 1.88]);
  translate([220, 188, 0])
    cube([1, 1, 1.88]);
  translate([221, 188, 0])
    cube([1, 1, 1.88]);
  translate([222, 188, 0])
    cube([1, 1, 1.88]);
  translate([223, 188, 0])
    cube([1, 1, 1.88]);
  translate([224, 188, 0])
    cube([1, 1, 1.88]);
  translate([225, 188, 0])
    cube([1, 1, 1.88]);
  translate([226, 188, 0])
    cube([1, 1, 1.88]);
  translate([227, 188, 0])
    cube([1, 1, 1.96]);
  translate([228, 188, 0])
    cube([1, 1, 1.88]);
  translate([229, 188, 0])
    cube([1, 1, 1.88]);
  translate([230, 188, 0])
    cube([1, 1, 1.88]);
  translate([231, 188, 0])
    cube([1, 1, 1.88]);
  translate([232, 188, 0])
    cube([1, 1, 1.88]);
  translate([233, 188, 0])
    cube([1, 1, 1.88]);
  translate([234, 188, 0])
    cube([1, 1, 1.88]);
  translate([235, 188, 0])
    cube([1, 1, 1.88]);
  translate([236, 188, 0])
    cube([1, 1, 1.92]);
  translate([237, 188, 0])
    cube([1, 1, 1.92]);
  translate([238, 188, 0])
    cube([1, 1, 1.88]);
  translate([239, 188, 0])
    cube([1, 1, 1.88]);
  translate([240, 188, 0])
    cube([1, 1, 1.84]);
  translate([241, 188, 0])
    cube([1, 1, 1.88]);
  translate([242, 188, 0])
    cube([1, 1, 1.88]);
  translate([243, 188, 0])
    cube([1, 1, 1.88]);
  translate([244, 188, 0])
    cube([1, 1, 1.88]);
  translate([245, 188, 0])
    cube([1, 1, 1.88]);
  translate([246, 188, 0])
    cube([1, 1, 1.88]);
  translate([0, 189, 0])
    cube([1, 1, 2.04]);
  translate([1, 189, 0])
    cube([1, 1, 2.04]);
  translate([2, 189, 0])
    cube([1, 1, 2.04]);
  translate([3, 189, 0])
    cube([1, 1, 2.04]);
  translate([4, 189, 0])
    cube([1, 1, 2.08]);
  translate([5, 189, 0])
    cube([1, 1, 2.08]);
  translate([6, 189, 0])
    cube([1, 1, 2.04]);
  translate([7, 189, 0])
    cube([1, 1, 2.04]);
  translate([8, 189, 0])
    cube([1, 1, 2.08]);
  translate([9, 189, 0])
    cube([1, 1, 2.04]);
  translate([10, 189, 0])
    cube([1, 1, 2.04]);
  translate([11, 189, 0])
    cube([1, 1, 2.08]);
  translate([12, 189, 0])
    cube([1, 1, 2.04]);
  translate([13, 189, 0])
    cube([1, 1, 2.08]);
  translate([14, 189, 0])
    cube([1, 1, 2.04]);
  translate([15, 189, 0])
    cube([1, 1, 2.04]);
  translate([16, 189, 0])
    cube([1, 1, 2.04]);
  translate([17, 189, 0])
    cube([1, 1, 2.04]);
  translate([18, 189, 0])
    cube([1, 1, 2.04]);
  translate([19, 189, 0])
    cube([1, 1, 2.04]);
  translate([20, 189, 0])
    cube([1, 1, 2.04]);
  translate([21, 189, 0])
    cube([1, 1, 2.04]);
  translate([22, 189, 0])
    cube([1, 1, 2.04]);
  translate([23, 189, 0])
    cube([1, 1, 2.04]);
  translate([24, 189, 0])
    cube([1, 1, 2.04]);
  translate([25, 189, 0])
    cube([1, 1, 2.04]);
  translate([26, 189, 0])
    cube([1, 1, 2.04]);
  translate([27, 189, 0])
    cube([1, 1, 2.04]);
  translate([28, 189, 0])
    cube([1, 1, 2.04]);
  translate([29, 189, 0])
    cube([1, 1, 2.04]);
  translate([30, 189, 0])
    cube([1, 1, 2.04]);
  translate([31, 189, 0])
    cube([1, 1, 2.04]);
  translate([32, 189, 0])
    cube([1, 1, 2.04]);
  translate([33, 189, 0])
    cube([1, 1, 2.04]);
  translate([34, 189, 0])
    cube([1, 1, 2.04]);
  translate([35, 189, 0])
    cube([1, 1, 2.04]);
  translate([36, 189, 0])
    cube([1, 1, 2.04]);
  translate([37, 189, 0])
    cube([1, 1, 2.04]);
  translate([38, 189, 0])
    cube([1, 1, 2.04]);
  translate([39, 189, 0])
    cube([1, 1, 2.04]);
  translate([40, 189, 0])
    cube([1, 1, 2.04]);
  translate([41, 189, 0])
    cube([1, 1, 2.04]);
  translate([42, 189, 0])
    cube([1, 1, 2.04]);
  translate([43, 189, 0])
    cube([1, 1, 2.04]);
  translate([44, 189, 0])
    cube([1, 1, 1.96]);
  translate([45, 189, 0])
    cube([1, 1, 2.04]);
  translate([46, 189, 0])
    cube([1, 1, 2.04]);
  translate([47, 189, 0])
    cube([1, 1, 2.04]);
  translate([48, 189, 0])
    cube([1, 1, 2.04]);
  translate([49, 189, 0])
    cube([1, 1, 2.00]);
  translate([50, 189, 0])
    cube([1, 1, 2.04]);
  translate([51, 189, 0])
    cube([1, 1, 2.00]);
  translate([52, 189, 0])
    cube([1, 1, 2.00]);
  translate([53, 189, 0])
    cube([1, 1, 2.00]);
  translate([54, 189, 0])
    cube([1, 1, 2.00]);
  translate([55, 189, 0])
    cube([1, 1, 2.00]);
  translate([56, 189, 0])
    cube([1, 1, 2.00]);
  translate([57, 189, 0])
    cube([1, 1, 2.00]);
  translate([58, 189, 0])
    cube([1, 1, 2.04]);
  translate([59, 189, 0])
    cube([1, 1, 2.00]);
  translate([60, 189, 0])
    cube([1, 1, 2.04]);
  translate([61, 189, 0])
    cube([1, 1, 2.00]);
  translate([62, 189, 0])
    cube([1, 1, 2.00]);
  translate([63, 189, 0])
    cube([1, 1, 2.00]);
  translate([64, 189, 0])
    cube([1, 1, 1.92]);
  translate([65, 189, 0])
    cube([1, 1, 1.96]);
  translate([66, 189, 0])
    cube([1, 1, 1.33]);
  translate([67, 189, 0])
    cube([1, 1, 5.22]);
  translate([68, 189, 0])
    cube([1, 1, 1.57]);
  translate([69, 189, 0])
    cube([1, 1, 1.69]);
  translate([70, 189, 0])
    cube([1, 1, 0.86]);
  translate([71, 189, 0])
    cube([1, 1, 0.31]);
  translate([72, 189, 0])
    cube([1, 1, 7.02]);
  translate([73, 189, 0])
    cube([1, 1, 0.94]);
  translate([74, 189, 0])
    cube([1, 1, 7.88]);
  translate([75, 189, 0])
    cube([1, 1, 3.18]);
  translate([76, 189, 0])
    cube([1, 1, 1.37]);
  translate([77, 189, 0])
    cube([1, 1, 1.37]);
  translate([78, 189, 0])
    cube([1, 1, 3.06]);
  translate([79, 189, 0])
    cube([1, 1, 1.18]);
  translate([80, 189, 0])
    cube([1, 1, 1.53]);
  translate([81, 189, 0])
    cube([1, 1, 1.96]);
  translate([82, 189, 0])
    cube([1, 1, 1.80]);
  translate([83, 189, 0])
    cube([1, 1, 0.86]);
  translate([84, 189, 0])
    cube([1, 1, 1.80]);
  translate([85, 189, 0])
    cube([1, 1, 1.92]);
  translate([86, 189, 0])
    cube([1, 1, 2.43]);
  translate([87, 189, 0])
    cube([1, 1, 2.43]);
  translate([88, 189, 0])
    cube([1, 1, 2.35]);
  translate([89, 189, 0])
    cube([1, 1, 1.92]);
  translate([90, 189, 0])
    cube([1, 1, 2.12]);
  translate([91, 189, 0])
    cube([1, 1, 2.08]);
  translate([92, 189, 0])
    cube([1, 1, 1.80]);
  translate([93, 189, 0])
    cube([1, 1, 1.57]);
  translate([94, 189, 0])
    cube([1, 1, 1.29]);
  translate([95, 189, 0])
    cube([1, 1, 1.18]);
  translate([96, 189, 0])
    cube([1, 1, 1.25]);
  translate([97, 189, 0])
    cube([1, 1, 1.33]);
  translate([98, 189, 0])
    cube([1, 1, 1.37]);
  translate([99, 189, 0])
    cube([1, 1, 1.45]);
  translate([100, 189, 0])
    cube([1, 1, 1.10]);
  translate([101, 189, 0])
    cube([1, 1, 1.53]);
  translate([102, 189, 0])
    cube([1, 1, 1.53]);
  translate([103, 189, 0])
    cube([1, 1, 1.80]);
  translate([104, 189, 0])
    cube([1, 1, 2.35]);
  translate([105, 189, 0])
    cube([1, 1, 3.06]);
  translate([106, 189, 0])
    cube([1, 1, 1.37]);
  translate([107, 189, 0])
    cube([1, 1, 1.14]);
  translate([108, 189, 0])
    cube([1, 1, 1.61]);
  translate([109, 189, 0])
    cube([1, 1, 1.76]);
  translate([110, 189, 0])
    cube([1, 1, 0.94]);
  translate([111, 189, 0])
    cube([1, 1, 0.98]);
  translate([112, 189, 0])
    cube([1, 1, 1.14]);
  translate([113, 189, 0])
    cube([1, 1, 2.35]);
  translate([114, 189, 0])
    cube([1, 1, 2.71]);
  translate([115, 189, 0])
    cube([1, 1, 2.24]);
  translate([116, 189, 0])
    cube([1, 1, 2.12]);
  translate([117, 189, 0])
    cube([1, 1, 2.00]);
  translate([118, 189, 0])
    cube([1, 1, 0.94]);
  translate([119, 189, 0])
    cube([1, 1, 1.02]);
  translate([120, 189, 0])
    cube([1, 1, 1.29]);
  translate([121, 189, 0])
    cube([1, 1, 1.80]);
  translate([122, 189, 0])
    cube([1, 1, 1.41]);
  translate([123, 189, 0])
    cube([1, 1, 1.18]);
  translate([124, 189, 0])
    cube([1, 1, 1.49]);
  translate([125, 189, 0])
    cube([1, 1, 1.41]);
  translate([126, 189, 0])
    cube([1, 1, 1.61]);
  translate([127, 189, 0])
    cube([1, 1, 1.61]);
  translate([128, 189, 0])
    cube([1, 1, 2.86]);
  translate([129, 189, 0])
    cube([1, 1, 0.75]);
  translate([130, 189, 0])
    cube([1, 1, 2.78]);
  translate([131, 189, 0])
    cube([1, 1, 2.08]);
  translate([132, 189, 0])
    cube([1, 1, 1.84]);
  translate([133, 189, 0])
    cube([1, 1, 2.59]);
  translate([134, 189, 0])
    cube([1, 1, 2.00]);
  translate([135, 189, 0])
    cube([1, 1, 1.73]);
  translate([136, 189, 0])
    cube([1, 1, 2.00]);
  translate([137, 189, 0])
    cube([1, 1, 2.12]);
  translate([138, 189, 0])
    cube([1, 1, 2.08]);
  translate([139, 189, 0])
    cube([1, 1, 1.96]);
  translate([140, 189, 0])
    cube([1, 1, 2.20]);
  translate([141, 189, 0])
    cube([1, 1, 2.08]);
  translate([142, 189, 0])
    cube([1, 1, 1.53]);
  translate([143, 189, 0])
    cube([1, 1, 1.88]);
  translate([144, 189, 0])
    cube([1, 1, 2.51]);
  translate([145, 189, 0])
    cube([1, 1, 2.39]);
  translate([146, 189, 0])
    cube([1, 1, 2.55]);
  translate([147, 189, 0])
    cube([1, 1, 1.96]);
  translate([148, 189, 0])
    cube([1, 1, 2.16]);
  translate([149, 189, 0])
    cube([1, 1, 2.12]);
  translate([150, 189, 0])
    cube([1, 1, 1.96]);
  translate([151, 189, 0])
    cube([1, 1, 2.31]);
  translate([152, 189, 0])
    cube([1, 1, 1.88]);
  translate([153, 189, 0])
    cube([1, 1, 1.80]);
  translate([154, 189, 0])
    cube([1, 1, 1.88]);
  translate([155, 189, 0])
    cube([1, 1, 1.84]);
  translate([156, 189, 0])
    cube([1, 1, 1.84]);
  translate([157, 189, 0])
    cube([1, 1, 1.84]);
  translate([158, 189, 0])
    cube([1, 1, 1.80]);
  translate([159, 189, 0])
    cube([1, 1, 1.84]);
  translate([160, 189, 0])
    cube([1, 1, 1.84]);
  translate([161, 189, 0])
    cube([1, 1, 1.84]);
  translate([162, 189, 0])
    cube([1, 1, 1.84]);
  translate([163, 189, 0])
    cube([1, 1, 1.80]);
  translate([164, 189, 0])
    cube([1, 1, 1.84]);
  translate([165, 189, 0])
    cube([1, 1, 1.84]);
  translate([166, 189, 0])
    cube([1, 1, 1.84]);
  translate([167, 189, 0])
    cube([1, 1, 1.84]);
  translate([168, 189, 0])
    cube([1, 1, 1.84]);
  translate([169, 189, 0])
    cube([1, 1, 1.80]);
  translate([170, 189, 0])
    cube([1, 1, 1.88]);
  translate([171, 189, 0])
    cube([1, 1, 1.84]);
  translate([172, 189, 0])
    cube([1, 1, 1.96]);
  translate([173, 189, 0])
    cube([1, 1, 2.27]);
  translate([174, 189, 0])
    cube([1, 1, 2.08]);
  translate([175, 189, 0])
    cube([1, 1, 1.45]);
  translate([176, 189, 0])
    cube([1, 1, 1.25]);
  translate([177, 189, 0])
    cube([1, 1, 1.29]);
  translate([178, 189, 0])
    cube([1, 1, 1.25]);
  translate([179, 189, 0])
    cube([1, 1, 1.22]);
  translate([180, 189, 0])
    cube([1, 1, 1.14]);
  translate([181, 189, 0])
    cube([1, 1, 1.18]);
  translate([182, 189, 0])
    cube([1, 1, 0.98]);
  translate([183, 189, 0])
    cube([1, 1, 1.84]);
  translate([184, 189, 0])
    cube([1, 1, 3.45]);
  translate([185, 189, 0])
    cube([1, 1, 4.67]);
  translate([186, 189, 0])
    cube([1, 1, 5.61]);
  translate([187, 189, 0])
    cube([1, 1, 2.04]);
  translate([188, 189, 0])
    cube([1, 1, 1.53]);
  translate([189, 189, 0])
    cube([1, 1, 1.69]);
  translate([190, 189, 0])
    cube([1, 1, 2.16]);
  translate([191, 189, 0])
    cube([1, 1, 3.22]);
  translate([192, 189, 0])
    cube([1, 1, 2.00]);
  translate([193, 189, 0])
    cube([1, 1, 0.82]);
  translate([194, 189, 0])
    cube([1, 1, 1.45]);
  translate([195, 189, 0])
    cube([1, 1, 0.59]);
  translate([196, 189, 0])
    cube([1, 1, 0.51]);
  translate([197, 189, 0])
    cube([1, 1, 0.47]);
  translate([198, 189, 0])
    cube([1, 1, 0.47]);
  translate([199, 189, 0])
    cube([1, 1, 0.39]);
  translate([200, 189, 0])
    cube([1, 1, 0.39]);
  translate([201, 189, 0])
    cube([1, 1, 0.51]);
  translate([202, 189, 0])
    cube([1, 1, 0.98]);
  translate([203, 189, 0])
    cube([1, 1, 1.06]);
  translate([204, 189, 0])
    cube([1, 1, 1.10]);
  translate([205, 189, 0])
    cube([1, 1, 1.10]);
  translate([206, 189, 0])
    cube([1, 1, 1.18]);
  translate([207, 189, 0])
    cube([1, 1, 0.98]);
  translate([208, 189, 0])
    cube([1, 1, 1.02]);
  translate([209, 189, 0])
    cube([1, 1, 2.63]);
  translate([210, 189, 0])
    cube([1, 1, 2.94]);
  translate([211, 189, 0])
    cube([1, 1, 2.59]);
  translate([212, 189, 0])
    cube([1, 1, 0.39]);
  translate([213, 189, 0])
    cube([1, 1, 1.18]);
  translate([214, 189, 0])
    cube([1, 1, 1.65]);
  translate([215, 189, 0])
    cube([1, 1, 1.57]);
  translate([216, 189, 0])
    cube([1, 1, 1.69]);
  translate([217, 189, 0])
    cube([1, 1, 1.73]);
  translate([218, 189, 0])
    cube([1, 1, 1.73]);
  translate([219, 189, 0])
    cube([1, 1, 1.88]);
  translate([220, 189, 0])
    cube([1, 1, 1.92]);
  translate([221, 189, 0])
    cube([1, 1, 1.92]);
  translate([222, 189, 0])
    cube([1, 1, 1.92]);
  translate([223, 189, 0])
    cube([1, 1, 1.92]);
  translate([224, 189, 0])
    cube([1, 1, 1.88]);
  translate([225, 189, 0])
    cube([1, 1, 1.88]);
  translate([226, 189, 0])
    cube([1, 1, 1.88]);
  translate([227, 189, 0])
    cube([1, 1, 1.88]);
  translate([228, 189, 0])
    cube([1, 1, 1.92]);
  translate([229, 189, 0])
    cube([1, 1, 1.92]);
  translate([230, 189, 0])
    cube([1, 1, 1.92]);
  translate([231, 189, 0])
    cube([1, 1, 1.92]);
  translate([232, 189, 0])
    cube([1, 1, 1.92]);
  translate([233, 189, 0])
    cube([1, 1, 1.88]);
  translate([234, 189, 0])
    cube([1, 1, 1.88]);
  translate([235, 189, 0])
    cube([1, 1, 1.88]);
  translate([236, 189, 0])
    cube([1, 1, 1.88]);
  translate([237, 189, 0])
    cube([1, 1, 1.88]);
  translate([238, 189, 0])
    cube([1, 1, 1.88]);
  translate([239, 189, 0])
    cube([1, 1, 1.88]);
  translate([240, 189, 0])
    cube([1, 1, 1.88]);
  translate([241, 189, 0])
    cube([1, 1, 1.88]);
  translate([242, 189, 0])
    cube([1, 1, 1.88]);
  translate([243, 189, 0])
    cube([1, 1, 1.84]);
  translate([244, 189, 0])
    cube([1, 1, 1.88]);
  translate([245, 189, 0])
    cube([1, 1, 1.88]);
  translate([246, 189, 0])
    cube([1, 1, 1.88]);
  translate([0, 190, 0])
    cube([1, 1, 2.04]);
  translate([1, 190, 0])
    cube([1, 1, 2.04]);
  translate([2, 190, 0])
    cube([1, 1, 2.04]);
  translate([3, 190, 0])
    cube([1, 1, 2.04]);
  translate([4, 190, 0])
    cube([1, 1, 2.08]);
  translate([5, 190, 0])
    cube([1, 1, 2.08]);
  translate([6, 190, 0])
    cube([1, 1, 2.04]);
  translate([7, 190, 0])
    cube([1, 1, 2.04]);
  translate([8, 190, 0])
    cube([1, 1, 2.08]);
  translate([9, 190, 0])
    cube([1, 1, 2.04]);
  translate([10, 190, 0])
    cube([1, 1, 2.04]);
  translate([11, 190, 0])
    cube([1, 1, 2.08]);
  translate([12, 190, 0])
    cube([1, 1, 2.04]);
  translate([13, 190, 0])
    cube([1, 1, 2.08]);
  translate([14, 190, 0])
    cube([1, 1, 2.04]);
  translate([15, 190, 0])
    cube([1, 1, 2.04]);
  translate([16, 190, 0])
    cube([1, 1, 2.04]);
  translate([17, 190, 0])
    cube([1, 1, 2.04]);
  translate([18, 190, 0])
    cube([1, 1, 2.04]);
  translate([19, 190, 0])
    cube([1, 1, 2.04]);
  translate([20, 190, 0])
    cube([1, 1, 2.04]);
  translate([21, 190, 0])
    cube([1, 1, 2.04]);
  translate([22, 190, 0])
    cube([1, 1, 2.04]);
  translate([23, 190, 0])
    cube([1, 1, 2.04]);
  translate([24, 190, 0])
    cube([1, 1, 2.04]);
  translate([25, 190, 0])
    cube([1, 1, 2.04]);
  translate([26, 190, 0])
    cube([1, 1, 2.04]);
  translate([27, 190, 0])
    cube([1, 1, 2.04]);
  translate([28, 190, 0])
    cube([1, 1, 2.04]);
  translate([29, 190, 0])
    cube([1, 1, 2.04]);
  translate([30, 190, 0])
    cube([1, 1, 2.04]);
  translate([31, 190, 0])
    cube([1, 1, 2.04]);
  translate([32, 190, 0])
    cube([1, 1, 2.04]);
  translate([33, 190, 0])
    cube([1, 1, 2.04]);
  translate([34, 190, 0])
    cube([1, 1, 2.04]);
  translate([35, 190, 0])
    cube([1, 1, 2.04]);
  translate([36, 190, 0])
    cube([1, 1, 2.04]);
  translate([37, 190, 0])
    cube([1, 1, 2.04]);
  translate([38, 190, 0])
    cube([1, 1, 2.04]);
  translate([39, 190, 0])
    cube([1, 1, 2.04]);
  translate([40, 190, 0])
    cube([1, 1, 2.04]);
  translate([41, 190, 0])
    cube([1, 1, 2.04]);
  translate([42, 190, 0])
    cube([1, 1, 2.04]);
  translate([43, 190, 0])
    cube([1, 1, 2.04]);
  translate([44, 190, 0])
    cube([1, 1, 2.08]);
  translate([45, 190, 0])
    cube([1, 1, 2.00]);
  translate([46, 190, 0])
    cube([1, 1, 2.00]);
  translate([47, 190, 0])
    cube([1, 1, 2.00]);
  translate([48, 190, 0])
    cube([1, 1, 2.04]);
  translate([49, 190, 0])
    cube([1, 1, 2.00]);
  translate([50, 190, 0])
    cube([1, 1, 2.04]);
  translate([51, 190, 0])
    cube([1, 1, 2.00]);
  translate([52, 190, 0])
    cube([1, 1, 2.00]);
  translate([53, 190, 0])
    cube([1, 1, 2.00]);
  translate([54, 190, 0])
    cube([1, 1, 2.00]);
  translate([55, 190, 0])
    cube([1, 1, 2.00]);
  translate([56, 190, 0])
    cube([1, 1, 2.00]);
  translate([57, 190, 0])
    cube([1, 1, 2.00]);
  translate([58, 190, 0])
    cube([1, 1, 2.04]);
  translate([59, 190, 0])
    cube([1, 1, 2.00]);
  translate([60, 190, 0])
    cube([1, 1, 2.04]);
  translate([61, 190, 0])
    cube([1, 1, 2.00]);
  translate([62, 190, 0])
    cube([1, 1, 2.00]);
  translate([63, 190, 0])
    cube([1, 1, 2.00]);
  translate([64, 190, 0])
    cube([1, 1, 1.96]);
  translate([65, 190, 0])
    cube([1, 1, 1.88]);
  translate([66, 190, 0])
    cube([1, 1, 1.41]);
  translate([67, 190, 0])
    cube([1, 1, 1.06]);
  translate([68, 190, 0])
    cube([1, 1, 1.02]);
  translate([69, 190, 0])
    cube([1, 1, 0.55]);
  translate([70, 190, 0])
    cube([1, 1, 1.06]);
  translate([71, 190, 0])
    cube([1, 1, 0.20]);
  translate([72, 190, 0])
    cube([1, 1, 0.67]);
  translate([73, 190, 0])
    cube([1, 1, 2.12]);
  translate([74, 190, 0])
    cube([1, 1, 0.67]);
  translate([75, 190, 0])
    cube([1, 1, 0.51]);
  translate([76, 190, 0])
    cube([1, 1, 0.71]);
  translate([77, 190, 0])
    cube([1, 1, 2.55]);
  translate([78, 190, 0])
    cube([1, 1, 4.86]);
  translate([79, 190, 0])
    cube([1, 1, 1.41]);
  translate([80, 190, 0])
    cube([1, 1, 1.92]);
  translate([81, 190, 0])
    cube([1, 1, 1.25]);
  translate([82, 190, 0])
    cube([1, 1, 1.25]);
  translate([83, 190, 0])
    cube([1, 1, 1.61]);
  translate([84, 190, 0])
    cube([1, 1, 2.04]);
  translate([85, 190, 0])
    cube([1, 1, 1.53]);
  translate([86, 190, 0])
    cube([1, 1, 1.96]);
  translate([87, 190, 0])
    cube([1, 1, 1.29]);
  translate([88, 190, 0])
    cube([1, 1, 1.96]);
  translate([89, 190, 0])
    cube([1, 1, 2.12]);
  translate([90, 190, 0])
    cube([1, 1, 2.27]);
  translate([91, 190, 0])
    cube([1, 1, 2.35]);
  translate([92, 190, 0])
    cube([1, 1, 2.08]);
  translate([93, 190, 0])
    cube([1, 1, 1.88]);
  translate([94, 190, 0])
    cube([1, 1, 1.76]);
  translate([95, 190, 0])
    cube([1, 1, 1.41]);
  translate([96, 190, 0])
    cube([1, 1, 1.49]);
  translate([97, 190, 0])
    cube([1, 1, 1.25]);
  translate([98, 190, 0])
    cube([1, 1, 1.33]);
  translate([99, 190, 0])
    cube([1, 1, 1.06]);
  translate([100, 190, 0])
    cube([1, 1, 1.37]);
  translate([101, 190, 0])
    cube([1, 1, 1.06]);
  translate([102, 190, 0])
    cube([1, 1, 1.49]);
  translate([103, 190, 0])
    cube([1, 1, 2.04]);
  translate([104, 190, 0])
    cube([1, 1, 1.73]);
  translate([105, 190, 0])
    cube([1, 1, 2.16]);
  translate([106, 190, 0])
    cube([1, 1, 2.16]);
  translate([107, 190, 0])
    cube([1, 1, 2.00]);
  translate([108, 190, 0])
    cube([1, 1, 2.24]);
  translate([109, 190, 0])
    cube([1, 1, 1.73]);
  translate([110, 190, 0])
    cube([1, 1, 1.92]);
  translate([111, 190, 0])
    cube([1, 1, 1.33]);
  translate([112, 190, 0])
    cube([1, 1, 1.61]);
  translate([113, 190, 0])
    cube([1, 1, 1.49]);
  translate([114, 190, 0])
    cube([1, 1, 1.18]);
  translate([115, 190, 0])
    cube([1, 1, 1.22]);
  translate([116, 190, 0])
    cube([1, 1, 1.33]);
  translate([117, 190, 0])
    cube([1, 1, 1.37]);
  translate([118, 190, 0])
    cube([1, 1, 1.37]);
  translate([119, 190, 0])
    cube([1, 1, 1.57]);
  translate([120, 190, 0])
    cube([1, 1, 1.69]);
  translate([121, 190, 0])
    cube([1, 1, 2.16]);
  translate([122, 190, 0])
    cube([1, 1, 1.41]);
  translate([123, 190, 0])
    cube([1, 1, 1.96]);
  translate([124, 190, 0])
    cube([1, 1, 2.31]);
  translate([125, 190, 0])
    cube([1, 1, 1.84]);
  translate([126, 190, 0])
    cube([1, 1, 1.53]);
  translate([127, 190, 0])
    cube([1, 1, 2.16]);
  translate([128, 190, 0])
    cube([1, 1, 2.67]);
  translate([129, 190, 0])
    cube([1, 1, 2.51]);
  translate([130, 190, 0])
    cube([1, 1, 1.80]);
  translate([131, 190, 0])
    cube([1, 1, 2.55]);
  translate([132, 190, 0])
    cube([1, 1, 1.84]);
  translate([133, 190, 0])
    cube([1, 1, 2.31]);
  translate([134, 190, 0])
    cube([1, 1, 1.96]);
  translate([135, 190, 0])
    cube([1, 1, 2.24]);
  translate([136, 190, 0])
    cube([1, 1, 1.84]);
  translate([137, 190, 0])
    cube([1, 1, 2.04]);
  translate([138, 190, 0])
    cube([1, 1, 2.24]);
  translate([139, 190, 0])
    cube([1, 1, 1.73]);
  translate([140, 190, 0])
    cube([1, 1, 2.08]);
  translate([141, 190, 0])
    cube([1, 1, 2.75]);
  translate([142, 190, 0])
    cube([1, 1, 2.27]);
  translate([143, 190, 0])
    cube([1, 1, 2.31]);
  translate([144, 190, 0])
    cube([1, 1, 2.24]);
  translate([145, 190, 0])
    cube([1, 1, 2.20]);
  translate([146, 190, 0])
    cube([1, 1, 2.35]);
  translate([147, 190, 0])
    cube([1, 1, 2.39]);
  translate([148, 190, 0])
    cube([1, 1, 2.08]);
  translate([149, 190, 0])
    cube([1, 1, 1.96]);
  translate([150, 190, 0])
    cube([1, 1, 2.16]);
  translate([151, 190, 0])
    cube([1, 1, 2.08]);
  translate([152, 190, 0])
    cube([1, 1, 1.96]);
  translate([153, 190, 0])
    cube([1, 1, 1.80]);
  translate([154, 190, 0])
    cube([1, 1, 1.88]);
  translate([155, 190, 0])
    cube([1, 1, 1.84]);
  translate([156, 190, 0])
    cube([1, 1, 1.84]);
  translate([157, 190, 0])
    cube([1, 1, 1.84]);
  translate([158, 190, 0])
    cube([1, 1, 1.84]);
  translate([159, 190, 0])
    cube([1, 1, 1.88]);
  translate([160, 190, 0])
    cube([1, 1, 1.84]);
  translate([161, 190, 0])
    cube([1, 1, 1.84]);
  translate([162, 190, 0])
    cube([1, 1, 1.84]);
  translate([163, 190, 0])
    cube([1, 1, 1.84]);
  translate([164, 190, 0])
    cube([1, 1, 1.84]);
  translate([165, 190, 0])
    cube([1, 1, 1.84]);
  translate([166, 190, 0])
    cube([1, 1, 1.84]);
  translate([167, 190, 0])
    cube([1, 1, 1.84]);
  translate([168, 190, 0])
    cube([1, 1, 1.84]);
  translate([169, 190, 0])
    cube([1, 1, 1.80]);
  translate([170, 190, 0])
    cube([1, 1, 1.88]);
  translate([171, 190, 0])
    cube([1, 1, 1.84]);
  translate([172, 190, 0])
    cube([1, 1, 1.73]);
  translate([173, 190, 0])
    cube([1, 1, 1.96]);
  translate([174, 190, 0])
    cube([1, 1, 2.47]);
  translate([175, 190, 0])
    cube([1, 1, 1.14]);
  translate([176, 190, 0])
    cube([1, 1, 1.45]);
  translate([177, 190, 0])
    cube([1, 1, 1.29]);
  translate([178, 190, 0])
    cube([1, 1, 1.25]);
  translate([179, 190, 0])
    cube([1, 1, 1.22]);
  translate([180, 190, 0])
    cube([1, 1, 1.10]);
  translate([181, 190, 0])
    cube([1, 1, 1.14]);
  translate([182, 190, 0])
    cube([1, 1, 0.94]);
  translate([183, 190, 0])
    cube([1, 1, 0.94]);
  translate([184, 190, 0])
    cube([1, 1, 1.69]);
  translate([185, 190, 0])
    cube([1, 1, 2.31]);
  translate([186, 190, 0])
    cube([1, 1, 2.39]);
  translate([187, 190, 0])
    cube([1, 1, 2.27]);
  translate([188, 190, 0])
    cube([1, 1, 1.61]);
  translate([189, 190, 0])
    cube([1, 1, 1.49]);
  translate([190, 190, 0])
    cube([1, 1, 1.69]);
  translate([191, 190, 0])
    cube([1, 1, 2.94]);
  translate([192, 190, 0])
    cube([1, 1, 2.98]);
  translate([193, 190, 0])
    cube([1, 1, 4.39]);
  translate([194, 190, 0])
    cube([1, 1, 0.27]);
  translate([195, 190, 0])
    cube([1, 1, 0.63]);
  translate([196, 190, 0])
    cube([1, 1, 0.59]);
  translate([197, 190, 0])
    cube([1, 1, 0.55]);
  translate([198, 190, 0])
    cube([1, 1, 0.51]);
  translate([199, 190, 0])
    cube([1, 1, 0.43]);
  translate([200, 190, 0])
    cube([1, 1, 0.39]);
  translate([201, 190, 0])
    cube([1, 1, 0.35]);
  translate([202, 190, 0])
    cube([1, 1, 0.35]);
  translate([203, 190, 0])
    cube([1, 1, 0.82]);
  translate([204, 190, 0])
    cube([1, 1, 1.10]);
  translate([205, 190, 0])
    cube([1, 1, 1.10]);
  translate([206, 190, 0])
    cube([1, 1, 0.98]);
  translate([207, 190, 0])
    cube([1, 1, 1.02]);
  translate([208, 190, 0])
    cube([1, 1, 1.33]);
  translate([209, 190, 0])
    cube([1, 1, 0.82]);
  translate([210, 190, 0])
    cube([1, 1, 0.55]);
  translate([211, 190, 0])
    cube([1, 1, 0.43]);
  translate([212, 190, 0])
    cube([1, 1, 0.16]);
  translate([213, 190, 0])
    cube([1, 1, 0.04]);
  translate([214, 190, 0])
    cube([1, 1, 1.10]);
  translate([215, 190, 0])
    cube([1, 1, 1.65]);
  translate([216, 190, 0])
    cube([1, 1, 1.69]);
  translate([217, 190, 0])
    cube([1, 1, 1.25]);
  translate([218, 190, 0])
    cube([1, 1, 1.41]);
  translate([219, 190, 0])
    cube([1, 1, 1.88]);
  translate([220, 190, 0])
    cube([1, 1, 1.92]);
  translate([221, 190, 0])
    cube([1, 1, 1.92]);
  translate([222, 190, 0])
    cube([1, 1, 1.92]);
  translate([223, 190, 0])
    cube([1, 1, 1.92]);
  translate([224, 190, 0])
    cube([1, 1, 1.88]);
  translate([225, 190, 0])
    cube([1, 1, 1.92]);
  translate([226, 190, 0])
    cube([1, 1, 1.92]);
  translate([227, 190, 0])
    cube([1, 1, 1.92]);
  translate([228, 190, 0])
    cube([1, 1, 1.92]);
  translate([229, 190, 0])
    cube([1, 1, 1.92]);
  translate([230, 190, 0])
    cube([1, 1, 1.92]);
  translate([231, 190, 0])
    cube([1, 1, 1.92]);
  translate([232, 190, 0])
    cube([1, 1, 1.92]);
  translate([233, 190, 0])
    cube([1, 1, 1.88]);
  translate([234, 190, 0])
    cube([1, 1, 1.88]);
  translate([235, 190, 0])
    cube([1, 1, 1.88]);
  translate([236, 190, 0])
    cube([1, 1, 1.88]);
  translate([237, 190, 0])
    cube([1, 1, 1.88]);
  translate([238, 190, 0])
    cube([1, 1, 1.88]);
  translate([239, 190, 0])
    cube([1, 1, 1.88]);
  translate([240, 190, 0])
    cube([1, 1, 1.88]);
  translate([241, 190, 0])
    cube([1, 1, 1.88]);
  translate([242, 190, 0])
    cube([1, 1, 1.88]);
  translate([243, 190, 0])
    cube([1, 1, 1.84]);
  translate([244, 190, 0])
    cube([1, 1, 1.88]);
  translate([245, 190, 0])
    cube([1, 1, 1.88]);
  translate([246, 190, 0])
    cube([1, 1, 1.88]);
  translate([0, 191, 0])
    cube([1, 1, 2.08]);
  translate([1, 191, 0])
    cube([1, 1, 2.08]);
  translate([2, 191, 0])
    cube([1, 1, 2.08]);
  translate([3, 191, 0])
    cube([1, 1, 2.08]);
  translate([4, 191, 0])
    cube([1, 1, 2.08]);
  translate([5, 191, 0])
    cube([1, 1, 2.08]);
  translate([6, 191, 0])
    cube([1, 1, 2.08]);
  translate([7, 191, 0])
    cube([1, 1, 2.08]);
  translate([8, 191, 0])
    cube([1, 1, 2.08]);
  translate([9, 191, 0])
    cube([1, 1, 2.08]);
  translate([10, 191, 0])
    cube([1, 1, 2.08]);
  translate([11, 191, 0])
    cube([1, 1, 2.04]);
  translate([12, 191, 0])
    cube([1, 1, 2.04]);
  translate([13, 191, 0])
    cube([1, 1, 2.04]);
  translate([14, 191, 0])
    cube([1, 1, 2.04]);
  translate([15, 191, 0])
    cube([1, 1, 2.04]);
  translate([16, 191, 0])
    cube([1, 1, 2.08]);
  translate([17, 191, 0])
    cube([1, 1, 2.04]);
  translate([18, 191, 0])
    cube([1, 1, 2.04]);
  translate([19, 191, 0])
    cube([1, 1, 2.04]);
  translate([20, 191, 0])
    cube([1, 1, 2.08]);
  translate([21, 191, 0])
    cube([1, 1, 2.04]);
  translate([22, 191, 0])
    cube([1, 1, 2.08]);
  translate([23, 191, 0])
    cube([1, 1, 2.08]);
  translate([24, 191, 0])
    cube([1, 1, 2.04]);
  translate([25, 191, 0])
    cube([1, 1, 2.04]);
  translate([26, 191, 0])
    cube([1, 1, 2.04]);
  translate([27, 191, 0])
    cube([1, 1, 2.04]);
  translate([28, 191, 0])
    cube([1, 1, 2.04]);
  translate([29, 191, 0])
    cube([1, 1, 2.04]);
  translate([30, 191, 0])
    cube([1, 1, 2.04]);
  translate([31, 191, 0])
    cube([1, 1, 2.04]);
  translate([32, 191, 0])
    cube([1, 1, 2.04]);
  translate([33, 191, 0])
    cube([1, 1, 2.04]);
  translate([34, 191, 0])
    cube([1, 1, 2.04]);
  translate([35, 191, 0])
    cube([1, 1, 2.04]);
  translate([36, 191, 0])
    cube([1, 1, 2.04]);
  translate([37, 191, 0])
    cube([1, 1, 2.04]);
  translate([38, 191, 0])
    cube([1, 1, 2.04]);
  translate([39, 191, 0])
    cube([1, 1, 2.04]);
  translate([40, 191, 0])
    cube([1, 1, 2.04]);
  translate([41, 191, 0])
    cube([1, 1, 2.04]);
  translate([42, 191, 0])
    cube([1, 1, 2.04]);
  translate([43, 191, 0])
    cube([1, 1, 2.04]);
  translate([44, 191, 0])
    cube([1, 1, 2.04]);
  translate([45, 191, 0])
    cube([1, 1, 2.04]);
  translate([46, 191, 0])
    cube([1, 1, 2.04]);
  translate([47, 191, 0])
    cube([1, 1, 2.04]);
  translate([48, 191, 0])
    cube([1, 1, 2.04]);
  translate([49, 191, 0])
    cube([1, 1, 2.00]);
  translate([50, 191, 0])
    cube([1, 1, 2.04]);
  translate([51, 191, 0])
    cube([1, 1, 2.04]);
  translate([52, 191, 0])
    cube([1, 1, 2.04]);
  translate([53, 191, 0])
    cube([1, 1, 2.04]);
  translate([54, 191, 0])
    cube([1, 1, 2.04]);
  translate([55, 191, 0])
    cube([1, 1, 2.04]);
  translate([56, 191, 0])
    cube([1, 1, 2.04]);
  translate([57, 191, 0])
    cube([1, 1, 2.00]);
  translate([58, 191, 0])
    cube([1, 1, 2.04]);
  translate([59, 191, 0])
    cube([1, 1, 2.00]);
  translate([60, 191, 0])
    cube([1, 1, 2.00]);
  translate([61, 191, 0])
    cube([1, 1, 2.00]);
  translate([62, 191, 0])
    cube([1, 1, 2.00]);
  translate([63, 191, 0])
    cube([1, 1, 2.00]);
  translate([64, 191, 0])
    cube([1, 1, 2.00]);
  translate([65, 191, 0])
    cube([1, 1, 1.96]);
  translate([66, 191, 0])
    cube([1, 1, 1.96]);
  translate([67, 191, 0])
    cube([1, 1, 2.00]);
  translate([68, 191, 0])
    cube([1, 1, 2.20]);
  translate([69, 191, 0])
    cube([1, 1, 2.71]);
  translate([70, 191, 0])
    cube([1, 1, 4.24]);
  translate([71, 191, 0])
    cube([1, 1, 6.86]);
  translate([72, 191, 0])
    cube([1, 1, 2.35]);
  translate([73, 191, 0])
    cube([1, 1, 5.33]);
  translate([74, 191, 0])
    cube([1, 1, 6.98]);
  translate([75, 191, 0])
    cube([1, 1, 8.71]);
  translate([76, 191, 0])
    cube([1, 1, 1.06]);
  translate([77, 191, 0])
    cube([1, 1, 2.39]);
  translate([78, 191, 0])
    cube([1, 1, 1.61]);
  translate([79, 191, 0])
    cube([1, 1, 1.65]);
  translate([80, 191, 0])
    cube([1, 1, 1.80]);
  translate([81, 191, 0])
    cube([1, 1, 1.37]);
  translate([82, 191, 0])
    cube([1, 1, 1.53]);
  translate([83, 191, 0])
    cube([1, 1, 2.00]);
  translate([84, 191, 0])
    cube([1, 1, 2.20]);
  translate([85, 191, 0])
    cube([1, 1, 1.80]);
  translate([86, 191, 0])
    cube([1, 1, 1.88]);
  translate([87, 191, 0])
    cube([1, 1, 1.57]);
  translate([88, 191, 0])
    cube([1, 1, 1.80]);
  translate([89, 191, 0])
    cube([1, 1, 2.12]);
  translate([90, 191, 0])
    cube([1, 1, 1.88]);
  translate([91, 191, 0])
    cube([1, 1, 1.73]);
  translate([92, 191, 0])
    cube([1, 1, 2.12]);
  translate([93, 191, 0])
    cube([1, 1, 1.96]);
  translate([94, 191, 0])
    cube([1, 1, 1.80]);
  translate([95, 191, 0])
    cube([1, 1, 1.73]);
  translate([96, 191, 0])
    cube([1, 1, 1.41]);
  translate([97, 191, 0])
    cube([1, 1, 1.37]);
  translate([98, 191, 0])
    cube([1, 1, 1.45]);
  translate([99, 191, 0])
    cube([1, 1, 1.25]);
  translate([100, 191, 0])
    cube([1, 1, 1.33]);
  translate([101, 191, 0])
    cube([1, 1, 1.45]);
  translate([102, 191, 0])
    cube([1, 1, 1.33]);
  translate([103, 191, 0])
    cube([1, 1, 1.65]);
  translate([104, 191, 0])
    cube([1, 1, 1.61]);
  translate([105, 191, 0])
    cube([1, 1, 1.69]);
  translate([106, 191, 0])
    cube([1, 1, 2.00]);
  translate([107, 191, 0])
    cube([1, 1, 1.88]);
  translate([108, 191, 0])
    cube([1, 1, 2.12]);
  translate([109, 191, 0])
    cube([1, 1, 1.76]);
  translate([110, 191, 0])
    cube([1, 1, 1.37]);
  translate([111, 191, 0])
    cube([1, 1, 1.76]);
  translate([112, 191, 0])
    cube([1, 1, 1.45]);
  translate([113, 191, 0])
    cube([1, 1, 1.57]);
  translate([114, 191, 0])
    cube([1, 1, 1.49]);
  translate([115, 191, 0])
    cube([1, 1, 1.88]);
  translate([116, 191, 0])
    cube([1, 1, 1.53]);
  translate([117, 191, 0])
    cube([1, 1, 2.00]);
  translate([118, 191, 0])
    cube([1, 1, 2.82]);
  translate([119, 191, 0])
    cube([1, 1, 2.24]);
  translate([120, 191, 0])
    cube([1, 1, 1.84]);
  translate([121, 191, 0])
    cube([1, 1, 2.31]);
  translate([122, 191, 0])
    cube([1, 1, 1.80]);
  translate([123, 191, 0])
    cube([1, 1, 2.35]);
  translate([124, 191, 0])
    cube([1, 1, 1.76]);
  translate([125, 191, 0])
    cube([1, 1, 2.35]);
  translate([126, 191, 0])
    cube([1, 1, 1.49]);
  translate([127, 191, 0])
    cube([1, 1, 2.00]);
  translate([128, 191, 0])
    cube([1, 1, 1.80]);
  translate([129, 191, 0])
    cube([1, 1, 2.55]);
  translate([130, 191, 0])
    cube([1, 1, 2.00]);
  translate([131, 191, 0])
    cube([1, 1, 1.84]);
  translate([132, 191, 0])
    cube([1, 1, 2.51]);
  translate([133, 191, 0])
    cube([1, 1, 2.31]);
  translate([134, 191, 0])
    cube([1, 1, 1.73]);
  translate([135, 191, 0])
    cube([1, 1, 1.65]);
  translate([136, 191, 0])
    cube([1, 1, 2.63]);
  translate([137, 191, 0])
    cube([1, 1, 1.92]);
  translate([138, 191, 0])
    cube([1, 1, 3.06]);
  translate([139, 191, 0])
    cube([1, 1, 1.37]);
  translate([140, 191, 0])
    cube([1, 1, 1.57]);
  translate([141, 191, 0])
    cube([1, 1, 2.55]);
  translate([142, 191, 0])
    cube([1, 1, 1.73]);
  translate([143, 191, 0])
    cube([1, 1, 2.67]);
  translate([144, 191, 0])
    cube([1, 1, 1.76]);
  translate([145, 191, 0])
    cube([1, 1, 2.71]);
  translate([146, 191, 0])
    cube([1, 1, 2.16]);
  translate([147, 191, 0])
    cube([1, 1, 2.20]);
  translate([148, 191, 0])
    cube([1, 1, 2.08]);
  translate([149, 191, 0])
    cube([1, 1, 2.00]);
  translate([150, 191, 0])
    cube([1, 1, 2.16]);
  translate([151, 191, 0])
    cube([1, 1, 2.20]);
  translate([152, 191, 0])
    cube([1, 1, 2.12]);
  translate([153, 191, 0])
    cube([1, 1, 1.88]);
  translate([154, 191, 0])
    cube([1, 1, 1.84]);
  translate([155, 191, 0])
    cube([1, 1, 1.84]);
  translate([156, 191, 0])
    cube([1, 1, 1.84]);
  translate([157, 191, 0])
    cube([1, 1, 1.84]);
  translate([158, 191, 0])
    cube([1, 1, 1.84]);
  translate([159, 191, 0])
    cube([1, 1, 1.84]);
  translate([160, 191, 0])
    cube([1, 1, 1.88]);
  translate([161, 191, 0])
    cube([1, 1, 1.88]);
  translate([162, 191, 0])
    cube([1, 1, 1.84]);
  translate([163, 191, 0])
    cube([1, 1, 1.84]);
  translate([164, 191, 0])
    cube([1, 1, 1.84]);
  translate([165, 191, 0])
    cube([1, 1, 1.84]);
  translate([166, 191, 0])
    cube([1, 1, 1.88]);
  translate([167, 191, 0])
    cube([1, 1, 1.88]);
  translate([168, 191, 0])
    cube([1, 1, 1.84]);
  translate([169, 191, 0])
    cube([1, 1, 1.80]);
  translate([170, 191, 0])
    cube([1, 1, 1.88]);
  translate([171, 191, 0])
    cube([1, 1, 1.88]);
  translate([172, 191, 0])
    cube([1, 1, 1.88]);
  translate([173, 191, 0])
    cube([1, 1, 1.92]);
  translate([174, 191, 0])
    cube([1, 1, 1.84]);
  translate([175, 191, 0])
    cube([1, 1, 1.76]);
  translate([176, 191, 0])
    cube([1, 1, 1.49]);
  translate([177, 191, 0])
    cube([1, 1, 1.22]);
  translate([178, 191, 0])
    cube([1, 1, 1.22]);
  translate([179, 191, 0])
    cube([1, 1, 1.18]);
  translate([180, 191, 0])
    cube([1, 1, 1.18]);
  translate([181, 191, 0])
    cube([1, 1, 1.14]);
  translate([182, 191, 0])
    cube([1, 1, 1.02]);
  translate([183, 191, 0])
    cube([1, 1, 0.94]);
  translate([184, 191, 0])
    cube([1, 1, 0.86]);
  translate([185, 191, 0])
    cube([1, 1, 1.18]);
  translate([186, 191, 0])
    cube([1, 1, 1.92]);
  translate([187, 191, 0])
    cube([1, 1, 1.88]);
  translate([188, 191, 0])
    cube([1, 1, 2.31]);
  translate([189, 191, 0])
    cube([1, 1, 1.96]);
  translate([190, 191, 0])
    cube([1, 1, 1.33]);
  translate([191, 191, 0])
    cube([1, 1, 2.08]);
  translate([192, 191, 0])
    cube([1, 1, 6.20]);
  translate([193, 191, 0])
    cube([1, 1, 6.82]);
  translate([194, 191, 0])
    cube([1, 1, 4.43]);
  translate([195, 191, 0])
    cube([1, 1, 0.24]);
  translate([196, 191, 0])
    cube([1, 1, 0.51]);
  translate([197, 191, 0])
    cube([1, 1, 0.59]);
  translate([198, 191, 0])
    cube([1, 1, 0.51]);
  translate([199, 191, 0])
    cube([1, 1, 0.47]);
  translate([200, 191, 0])
    cube([1, 1, 0.43]);
  translate([201, 191, 0])
    cube([1, 1, 0.35]);
  translate([202, 191, 0])
    cube([1, 1, 0.39]);
  translate([203, 191, 0])
    cube([1, 1, 0.31]);
  translate([204, 191, 0])
    cube([1, 1, 0.24]);
  translate([205, 191, 0])
    cube([1, 1, 1.29]);
  translate([206, 191, 0])
    cube([1, 1, 0.98]);
  translate([207, 191, 0])
    cube([1, 1, 1.10]);
  translate([208, 191, 0])
    cube([1, 1, 1.02]);
  translate([209, 191, 0])
    cube([1, 1, 0.71]);
  translate([210, 191, 0])
    cube([1, 1, 1.41]);
  translate([211, 191, 0])
    cube([1, 1, 0.35]);
  translate([212, 191, 0])
    cube([1, 1, 0.31]);
  translate([213, 191, 0])
    cube([1, 1, 0.39]);
  translate([214, 191, 0])
    cube([1, 1, 0.31]);
  translate([215, 191, 0])
    cube([1, 1, 0.47]);
  translate([216, 191, 0])
    cube([1, 1, 1.33]);
  translate([217, 191, 0])
    cube([1, 1, 1.14]);
  translate([218, 191, 0])
    cube([1, 1, 2.04]);
  translate([219, 191, 0])
    cube([1, 1, 2.43]);
  translate([220, 191, 0])
    cube([1, 1, 1.96]);
  translate([221, 191, 0])
    cube([1, 1, 1.92]);
  translate([222, 191, 0])
    cube([1, 1, 1.92]);
  translate([223, 191, 0])
    cube([1, 1, 1.92]);
  translate([224, 191, 0])
    cube([1, 1, 1.88]);
  translate([225, 191, 0])
    cube([1, 1, 1.88]);
  translate([226, 191, 0])
    cube([1, 1, 1.88]);
  translate([227, 191, 0])
    cube([1, 1, 1.92]);
  translate([228, 191, 0])
    cube([1, 1, 1.92]);
  translate([229, 191, 0])
    cube([1, 1, 1.92]);
  translate([230, 191, 0])
    cube([1, 1, 1.92]);
  translate([231, 191, 0])
    cube([1, 1, 1.92]);
  translate([232, 191, 0])
    cube([1, 1, 1.88]);
  translate([233, 191, 0])
    cube([1, 1, 1.88]);
  translate([234, 191, 0])
    cube([1, 1, 1.92]);
  translate([235, 191, 0])
    cube([1, 1, 1.92]);
  translate([236, 191, 0])
    cube([1, 1, 1.88]);
  translate([237, 191, 0])
    cube([1, 1, 1.88]);
  translate([238, 191, 0])
    cube([1, 1, 1.88]);
  translate([239, 191, 0])
    cube([1, 1, 1.88]);
  translate([240, 191, 0])
    cube([1, 1, 1.88]);
  translate([241, 191, 0])
    cube([1, 1, 1.88]);
  translate([242, 191, 0])
    cube([1, 1, 1.88]);
  translate([243, 191, 0])
    cube([1, 1, 1.88]);
  translate([244, 191, 0])
    cube([1, 1, 1.88]);
  translate([245, 191, 0])
    cube([1, 1, 1.88]);
  translate([246, 191, 0])
    cube([1, 1, 1.88]);
  translate([0, 192, 0])
    cube([1, 1, 2.08]);
  translate([1, 192, 0])
    cube([1, 1, 2.08]);
  translate([2, 192, 0])
    cube([1, 1, 2.08]);
  translate([3, 192, 0])
    cube([1, 1, 2.08]);
  translate([4, 192, 0])
    cube([1, 1, 2.08]);
  translate([5, 192, 0])
    cube([1, 1, 2.08]);
  translate([6, 192, 0])
    cube([1, 1, 2.08]);
  translate([7, 192, 0])
    cube([1, 1, 2.08]);
  translate([8, 192, 0])
    cube([1, 1, 2.04]);
  translate([9, 192, 0])
    cube([1, 1, 2.04]);
  translate([10, 192, 0])
    cube([1, 1, 2.08]);
  translate([11, 192, 0])
    cube([1, 1, 2.04]);
  translate([12, 192, 0])
    cube([1, 1, 2.04]);
  translate([13, 192, 0])
    cube([1, 1, 2.08]);
  translate([14, 192, 0])
    cube([1, 1, 2.04]);
  translate([15, 192, 0])
    cube([1, 1, 2.04]);
  translate([16, 192, 0])
    cube([1, 1, 2.04]);
  translate([17, 192, 0])
    cube([1, 1, 2.04]);
  translate([18, 192, 0])
    cube([1, 1, 2.04]);
  translate([19, 192, 0])
    cube([1, 1, 2.08]);
  translate([20, 192, 0])
    cube([1, 1, 2.08]);
  translate([21, 192, 0])
    cube([1, 1, 2.08]);
  translate([22, 192, 0])
    cube([1, 1, 2.08]);
  translate([23, 192, 0])
    cube([1, 1, 2.08]);
  translate([24, 192, 0])
    cube([1, 1, 2.08]);
  translate([25, 192, 0])
    cube([1, 1, 2.08]);
  translate([26, 192, 0])
    cube([1, 1, 2.08]);
  translate([27, 192, 0])
    cube([1, 1, 2.00]);
  translate([28, 192, 0])
    cube([1, 1, 2.00]);
  translate([29, 192, 0])
    cube([1, 1, 2.00]);
  translate([30, 192, 0])
    cube([1, 1, 2.04]);
  translate([31, 192, 0])
    cube([1, 1, 2.00]);
  translate([32, 192, 0])
    cube([1, 1, 2.04]);
  translate([33, 192, 0])
    cube([1, 1, 2.04]);
  translate([34, 192, 0])
    cube([1, 1, 2.04]);
  translate([35, 192, 0])
    cube([1, 1, 2.04]);
  translate([36, 192, 0])
    cube([1, 1, 2.04]);
  translate([37, 192, 0])
    cube([1, 1, 2.04]);
  translate([38, 192, 0])
    cube([1, 1, 2.04]);
  translate([39, 192, 0])
    cube([1, 1, 2.04]);
  translate([40, 192, 0])
    cube([1, 1, 2.04]);
  translate([41, 192, 0])
    cube([1, 1, 2.04]);
  translate([42, 192, 0])
    cube([1, 1, 2.04]);
  translate([43, 192, 0])
    cube([1, 1, 2.04]);
  translate([44, 192, 0])
    cube([1, 1, 2.04]);
  translate([45, 192, 0])
    cube([1, 1, 2.04]);
  translate([46, 192, 0])
    cube([1, 1, 2.04]);
  translate([47, 192, 0])
    cube([1, 1, 2.04]);
  translate([48, 192, 0])
    cube([1, 1, 2.04]);
  translate([49, 192, 0])
    cube([1, 1, 2.04]);
  translate([50, 192, 0])
    cube([1, 1, 2.04]);
  translate([51, 192, 0])
    cube([1, 1, 2.04]);
  translate([52, 192, 0])
    cube([1, 1, 2.00]);
  translate([53, 192, 0])
    cube([1, 1, 2.04]);
  translate([54, 192, 0])
    cube([1, 1, 2.00]);
  translate([55, 192, 0])
    cube([1, 1, 2.04]);
  translate([56, 192, 0])
    cube([1, 1, 2.04]);
  translate([57, 192, 0])
    cube([1, 1, 2.04]);
  translate([58, 192, 0])
    cube([1, 1, 2.04]);
  translate([59, 192, 0])
    cube([1, 1, 2.00]);
  translate([60, 192, 0])
    cube([1, 1, 2.00]);
  translate([61, 192, 0])
    cube([1, 1, 2.00]);
  translate([62, 192, 0])
    cube([1, 1, 2.00]);
  translate([63, 192, 0])
    cube([1, 1, 2.00]);
  translate([64, 192, 0])
    cube([1, 1, 2.00]);
  translate([65, 192, 0])
    cube([1, 1, 2.00]);
  translate([66, 192, 0])
    cube([1, 1, 2.04]);
  translate([67, 192, 0])
    cube([1, 1, 2.00]);
  translate([68, 192, 0])
    cube([1, 1, 2.12]);
  translate([69, 192, 0])
    cube([1, 1, 2.27]);
  translate([70, 192, 0])
    cube([1, 1, 6.24]);
  translate([71, 192, 0])
    cube([1, 1, 8.98]);
  translate([72, 192, 0])
    cube([1, 1, 7.73]);
  translate([73, 192, 0])
    cube([1, 1, 0.82]);
  translate([74, 192, 0])
    cube([1, 1, 3.65]);
  translate([75, 192, 0])
    cube([1, 1, 7.22]);
  translate([76, 192, 0])
    cube([1, 1, 5.76]);
  translate([77, 192, 0])
    cube([1, 1, 3.65]);
  translate([78, 192, 0])
    cube([1, 1, 1.14]);
  translate([79, 192, 0])
    cube([1, 1, 1.33]);
  translate([80, 192, 0])
    cube([1, 1, 1.73]);
  translate([81, 192, 0])
    cube([1, 1, 1.33]);
  translate([82, 192, 0])
    cube([1, 1, 1.53]);
  translate([83, 192, 0])
    cube([1, 1, 1.88]);
  translate([84, 192, 0])
    cube([1, 1, 1.76]);
  translate([85, 192, 0])
    cube([1, 1, 1.84]);
  translate([86, 192, 0])
    cube([1, 1, 1.92]);
  translate([87, 192, 0])
    cube([1, 1, 1.65]);
  translate([88, 192, 0])
    cube([1, 1, 1.61]);
  translate([89, 192, 0])
    cube([1, 1, 1.61]);
  translate([90, 192, 0])
    cube([1, 1, 1.92]);
  translate([91, 192, 0])
    cube([1, 1, 1.80]);
  translate([92, 192, 0])
    cube([1, 1, 1.88]);
  translate([93, 192, 0])
    cube([1, 1, 1.92]);
  translate([94, 192, 0])
    cube([1, 1, 2.20]);
  translate([95, 192, 0])
    cube([1, 1, 2.35]);
  translate([96, 192, 0])
    cube([1, 1, 2.24]);
  translate([97, 192, 0])
    cube([1, 1, 1.61]);
  translate([98, 192, 0])
    cube([1, 1, 1.49]);
  translate([99, 192, 0])
    cube([1, 1, 1.41]);
  translate([100, 192, 0])
    cube([1, 1, 1.92]);
  translate([101, 192, 0])
    cube([1, 1, 1.76]);
  translate([102, 192, 0])
    cube([1, 1, 1.65]);
  translate([103, 192, 0])
    cube([1, 1, 1.57]);
  translate([104, 192, 0])
    cube([1, 1, 1.73]);
  translate([105, 192, 0])
    cube([1, 1, 1.76]);
  translate([106, 192, 0])
    cube([1, 1, 1.57]);
  translate([107, 192, 0])
    cube([1, 1, 1.61]);
  translate([108, 192, 0])
    cube([1, 1, 1.61]);
  translate([109, 192, 0])
    cube([1, 1, 1.45]);
  translate([110, 192, 0])
    cube([1, 1, 1.57]);
  translate([111, 192, 0])
    cube([1, 1, 1.73]);
  translate([112, 192, 0])
    cube([1, 1, 1.45]);
  translate([113, 192, 0])
    cube([1, 1, 1.69]);
  translate([114, 192, 0])
    cube([1, 1, 1.80]);
  translate([115, 192, 0])
    cube([1, 1, 1.88]);
  translate([116, 192, 0])
    cube([1, 1, 2.24]);
  translate([117, 192, 0])
    cube([1, 1, 2.20]);
  translate([118, 192, 0])
    cube([1, 1, 2.55]);
  translate([119, 192, 0])
    cube([1, 1, 1.65]);
  translate([120, 192, 0])
    cube([1, 1, 2.04]);
  translate([121, 192, 0])
    cube([1, 1, 2.67]);
  translate([122, 192, 0])
    cube([1, 1, 2.20]);
  translate([123, 192, 0])
    cube([1, 1, 1.53]);
  translate([124, 192, 0])
    cube([1, 1, 2.00]);
  translate([125, 192, 0])
    cube([1, 1, 2.12]);
  translate([126, 192, 0])
    cube([1, 1, 1.57]);
  translate([127, 192, 0])
    cube([1, 1, 2.67]);
  translate([128, 192, 0])
    cube([1, 1, 1.96]);
  translate([129, 192, 0])
    cube([1, 1, 2.51]);
  translate([130, 192, 0])
    cube([1, 1, 2.12]);
  translate([131, 192, 0])
    cube([1, 1, 2.20]);
  translate([132, 192, 0])
    cube([1, 1, 1.92]);
  translate([133, 192, 0])
    cube([1, 1, 1.88]);
  translate([134, 192, 0])
    cube([1, 1, 1.76]);
  translate([135, 192, 0])
    cube([1, 1, 1.41]);
  translate([136, 192, 0])
    cube([1, 1, 1.65]);
  translate([137, 192, 0])
    cube([1, 1, 1.57]);
  translate([138, 192, 0])
    cube([1, 1, 2.55]);
  translate([139, 192, 0])
    cube([1, 1, 2.47]);
  translate([140, 192, 0])
    cube([1, 1, 1.96]);
  translate([141, 192, 0])
    cube([1, 1, 3.10]);
  translate([142, 192, 0])
    cube([1, 1, 1.84]);
  translate([143, 192, 0])
    cube([1, 1, 2.67]);
  translate([144, 192, 0])
    cube([1, 1, 2.31]);
  translate([145, 192, 0])
    cube([1, 1, 1.61]);
  translate([146, 192, 0])
    cube([1, 1, 2.35]);
  translate([147, 192, 0])
    cube([1, 1, 2.47]);
  translate([148, 192, 0])
    cube([1, 1, 1.96]);
  translate([149, 192, 0])
    cube([1, 1, 2.27]);
  translate([150, 192, 0])
    cube([1, 1, 1.92]);
  translate([151, 192, 0])
    cube([1, 1, 1.76]);
  translate([152, 192, 0])
    cube([1, 1, 2.24]);
  translate([153, 192, 0])
    cube([1, 1, 1.69]);
  translate([154, 192, 0])
    cube([1, 1, 2.16]);
  translate([155, 192, 0])
    cube([1, 1, 1.88]);
  translate([156, 192, 0])
    cube([1, 1, 1.80]);
  translate([157, 192, 0])
    cube([1, 1, 1.84]);
  translate([158, 192, 0])
    cube([1, 1, 1.84]);
  translate([159, 192, 0])
    cube([1, 1, 1.88]);
  translate([160, 192, 0])
    cube([1, 1, 1.88]);
  translate([161, 192, 0])
    cube([1, 1, 1.88]);
  translate([162, 192, 0])
    cube([1, 1, 1.88]);
  translate([163, 192, 0])
    cube([1, 1, 1.84]);
  translate([164, 192, 0])
    cube([1, 1, 1.84]);
  translate([165, 192, 0])
    cube([1, 1, 1.84]);
  translate([166, 192, 0])
    cube([1, 1, 1.84]);
  translate([167, 192, 0])
    cube([1, 1, 1.88]);
  translate([168, 192, 0])
    cube([1, 1, 1.84]);
  translate([169, 192, 0])
    cube([1, 1, 1.80]);
  translate([170, 192, 0])
    cube([1, 1, 1.92]);
  translate([171, 192, 0])
    cube([1, 1, 1.88]);
  translate([172, 192, 0])
    cube([1, 1, 1.84]);
  translate([173, 192, 0])
    cube([1, 1, 1.92]);
  translate([174, 192, 0])
    cube([1, 1, 1.88]);
  translate([175, 192, 0])
    cube([1, 1, 1.88]);
  translate([176, 192, 0])
    cube([1, 1, 1.33]);
  translate([177, 192, 0])
    cube([1, 1, 1.25]);
  translate([178, 192, 0])
    cube([1, 1, 1.22]);
  translate([179, 192, 0])
    cube([1, 1, 1.18]);
  translate([180, 192, 0])
    cube([1, 1, 1.14]);
  translate([181, 192, 0])
    cube([1, 1, 1.10]);
  translate([182, 192, 0])
    cube([1, 1, 1.02]);
  translate([183, 192, 0])
    cube([1, 1, 0.98]);
  translate([184, 192, 0])
    cube([1, 1, 0.94]);
  translate([185, 192, 0])
    cube([1, 1, 0.78]);
  translate([186, 192, 0])
    cube([1, 1, 0.63]);
  translate([187, 192, 0])
    cube([1, 1, 0.82]);
  translate([188, 192, 0])
    cube([1, 1, 1.18]);
  translate([189, 192, 0])
    cube([1, 1, 2.51]);
  translate([190, 192, 0])
    cube([1, 1, 1.57]);
  translate([191, 192, 0])
    cube([1, 1, 2.71]);
  translate([192, 192, 0])
    cube([1, 1, 5.88]);
  translate([193, 192, 0])
    cube([1, 1, 6.35]);
  translate([194, 192, 0])
    cube([1, 1, 6.31]);
  translate([195, 192, 0])
    cube([1, 1, 1.14]);
  translate([196, 192, 0])
    cube([1, 1, 0.43]);
  translate([197, 192, 0])
    cube([1, 1, 0.63]);
  translate([198, 192, 0])
    cube([1, 1, 0.43]);
  translate([199, 192, 0])
    cube([1, 1, 0.43]);
  translate([200, 192, 0])
    cube([1, 1, 0.39]);
  translate([201, 192, 0])
    cube([1, 1, 0.39]);
  translate([202, 192, 0])
    cube([1, 1, 0.43]);
  translate([203, 192, 0])
    cube([1, 1, 0.31]);
  translate([204, 192, 0])
    cube([1, 1, 0.35]);
  translate([205, 192, 0])
    cube([1, 1, 0.39]);
  translate([206, 192, 0])
    cube([1, 1, 0.51]);
  translate([207, 192, 0])
    cube([1, 1, 1.10]);
  translate([208, 192, 0])
    cube([1, 1, 1.06]);
  translate([209, 192, 0])
    cube([1, 1, 1.02]);
  translate([210, 192, 0])
    cube([1, 1, 2.51]);
  translate([211, 192, 0])
    cube([1, 1, 0.71]);
  translate([212, 192, 0])
    cube([1, 1, 0.35]);
  translate([213, 192, 0])
    cube([1, 1, 0.43]);
  translate([214, 192, 0])
    cube([1, 1, 0.35]);
  translate([215, 192, 0])
    cube([1, 1, 0.31]);
  translate([216, 192, 0])
    cube([1, 1, 0.39]);
  translate([217, 192, 0])
    cube([1, 1, 3.57]);
  translate([218, 192, 0])
    cube([1, 1, 2.04]);
  translate([219, 192, 0])
    cube([1, 1, 2.35]);
  translate([220, 192, 0])
    cube([1, 1, 2.47]);
  translate([221, 192, 0])
    cube([1, 1, 2.31]);
  translate([222, 192, 0])
    cube([1, 1, 2.00]);
  translate([223, 192, 0])
    cube([1, 1, 2.04]);
  translate([224, 192, 0])
    cube([1, 1, 1.92]);
  translate([225, 192, 0])
    cube([1, 1, 1.92]);
  translate([226, 192, 0])
    cube([1, 1, 1.92]);
  translate([227, 192, 0])
    cube([1, 1, 1.92]);
  translate([228, 192, 0])
    cube([1, 1, 1.92]);
  translate([229, 192, 0])
    cube([1, 1, 1.92]);
  translate([230, 192, 0])
    cube([1, 1, 1.92]);
  translate([231, 192, 0])
    cube([1, 1, 1.92]);
  translate([232, 192, 0])
    cube([1, 1, 1.92]);
  translate([233, 192, 0])
    cube([1, 1, 1.88]);
  translate([234, 192, 0])
    cube([1, 1, 1.88]);
  translate([235, 192, 0])
    cube([1, 1, 1.96]);
  translate([236, 192, 0])
    cube([1, 1, 1.92]);
  translate([237, 192, 0])
    cube([1, 1, 1.92]);
  translate([238, 192, 0])
    cube([1, 1, 1.92]);
  translate([239, 192, 0])
    cube([1, 1, 1.88]);
  translate([240, 192, 0])
    cube([1, 1, 1.88]);
  translate([241, 192, 0])
    cube([1, 1, 1.92]);
  translate([242, 192, 0])
    cube([1, 1, 1.92]);
  translate([243, 192, 0])
    cube([1, 1, 1.84]);
  translate([244, 192, 0])
    cube([1, 1, 1.88]);
  translate([245, 192, 0])
    cube([1, 1, 1.88]);
  translate([246, 192, 0])
    cube([1, 1, 1.88]);
  translate([0, 193, 0])
    cube([1, 1, 2.08]);
  translate([1, 193, 0])
    cube([1, 1, 2.08]);
  translate([2, 193, 0])
    cube([1, 1, 2.08]);
  translate([3, 193, 0])
    cube([1, 1, 2.08]);
  translate([4, 193, 0])
    cube([1, 1, 2.08]);
  translate([5, 193, 0])
    cube([1, 1, 2.08]);
  translate([6, 193, 0])
    cube([1, 1, 2.04]);
  translate([7, 193, 0])
    cube([1, 1, 2.04]);
  translate([8, 193, 0])
    cube([1, 1, 2.04]);
  translate([9, 193, 0])
    cube([1, 1, 2.04]);
  translate([10, 193, 0])
    cube([1, 1, 2.08]);
  translate([11, 193, 0])
    cube([1, 1, 2.04]);
  translate([12, 193, 0])
    cube([1, 1, 2.04]);
  translate([13, 193, 0])
    cube([1, 1, 2.08]);
  translate([14, 193, 0])
    cube([1, 1, 2.04]);
  translate([15, 193, 0])
    cube([1, 1, 2.04]);
  translate([16, 193, 0])
    cube([1, 1, 2.04]);
  translate([17, 193, 0])
    cube([1, 1, 2.04]);
  translate([18, 193, 0])
    cube([1, 1, 2.04]);
  translate([19, 193, 0])
    cube([1, 1, 2.08]);
  translate([20, 193, 0])
    cube([1, 1, 2.08]);
  translate([21, 193, 0])
    cube([1, 1, 2.08]);
  translate([22, 193, 0])
    cube([1, 1, 2.08]);
  translate([23, 193, 0])
    cube([1, 1, 2.08]);
  translate([24, 193, 0])
    cube([1, 1, 2.08]);
  translate([25, 193, 0])
    cube([1, 1, 2.08]);
  translate([26, 193, 0])
    cube([1, 1, 2.08]);
  translate([27, 193, 0])
    cube([1, 1, 2.08]);
  translate([28, 193, 0])
    cube([1, 1, 2.08]);
  translate([29, 193, 0])
    cube([1, 1, 2.08]);
  translate([30, 193, 0])
    cube([1, 1, 2.08]);
  translate([31, 193, 0])
    cube([1, 1, 2.04]);
  translate([32, 193, 0])
    cube([1, 1, 2.04]);
  translate([33, 193, 0])
    cube([1, 1, 2.04]);
  translate([34, 193, 0])
    cube([1, 1, 2.04]);
  translate([35, 193, 0])
    cube([1, 1, 2.04]);
  translate([36, 193, 0])
    cube([1, 1, 2.04]);
  translate([37, 193, 0])
    cube([1, 1, 2.04]);
  translate([38, 193, 0])
    cube([1, 1, 2.04]);
  translate([39, 193, 0])
    cube([1, 1, 2.04]);
  translate([40, 193, 0])
    cube([1, 1, 2.04]);
  translate([41, 193, 0])
    cube([1, 1, 2.04]);
  translate([42, 193, 0])
    cube([1, 1, 2.04]);
  translate([43, 193, 0])
    cube([1, 1, 2.04]);
  translate([44, 193, 0])
    cube([1, 1, 2.04]);
  translate([45, 193, 0])
    cube([1, 1, 2.04]);
  translate([46, 193, 0])
    cube([1, 1, 2.04]);
  translate([47, 193, 0])
    cube([1, 1, 2.04]);
  translate([48, 193, 0])
    cube([1, 1, 2.04]);
  translate([49, 193, 0])
    cube([1, 1, 2.04]);
  translate([50, 193, 0])
    cube([1, 1, 2.04]);
  translate([51, 193, 0])
    cube([1, 1, 2.04]);
  translate([52, 193, 0])
    cube([1, 1, 2.00]);
  translate([53, 193, 0])
    cube([1, 1, 2.04]);
  translate([54, 193, 0])
    cube([1, 1, 2.00]);
  translate([55, 193, 0])
    cube([1, 1, 2.04]);
  translate([56, 193, 0])
    cube([1, 1, 2.04]);
  translate([57, 193, 0])
    cube([1, 1, 2.04]);
  translate([58, 193, 0])
    cube([1, 1, 2.04]);
  translate([59, 193, 0])
    cube([1, 1, 2.00]);
  translate([60, 193, 0])
    cube([1, 1, 2.00]);
  translate([61, 193, 0])
    cube([1, 1, 2.00]);
  translate([62, 193, 0])
    cube([1, 1, 2.00]);
  translate([63, 193, 0])
    cube([1, 1, 2.00]);
  translate([64, 193, 0])
    cube([1, 1, 2.00]);
  translate([65, 193, 0])
    cube([1, 1, 2.00]);
  translate([66, 193, 0])
    cube([1, 1, 2.04]);
  translate([67, 193, 0])
    cube([1, 1, 2.04]);
  translate([68, 193, 0])
    cube([1, 1, 1.88]);
  translate([69, 193, 0])
    cube([1, 1, 6.47]);
  translate([70, 193, 0])
    cube([1, 1, 6.24]);
  translate([71, 193, 0])
    cube([1, 1, 8.35]);
  translate([72, 193, 0])
    cube([1, 1, 4.12]);
  translate([73, 193, 0])
    cube([1, 1, 3.61]);
  translate([74, 193, 0])
    cube([1, 1, 7.57]);
  translate([75, 193, 0])
    cube([1, 1, 7.76]);
  translate([76, 193, 0])
    cube([1, 1, 4.90]);
  translate([77, 193, 0])
    cube([1, 1, 2.51]);
  translate([78, 193, 0])
    cube([1, 1, 0.94]);
  translate([79, 193, 0])
    cube([1, 1, 1.49]);
  translate([80, 193, 0])
    cube([1, 1, 1.45]);
  translate([81, 193, 0])
    cube([1, 1, 1.53]);
  translate([82, 193, 0])
    cube([1, 1, 1.61]);
  translate([83, 193, 0])
    cube([1, 1, 2.04]);
  translate([84, 193, 0])
    cube([1, 1, 2.08]);
  translate([85, 193, 0])
    cube([1, 1, 1.57]);
  translate([86, 193, 0])
    cube([1, 1, 1.92]);
  translate([87, 193, 0])
    cube([1, 1, 1.84]);
  translate([88, 193, 0])
    cube([1, 1, 1.73]);
  translate([89, 193, 0])
    cube([1, 1, 1.73]);
  translate([90, 193, 0])
    cube([1, 1, 1.88]);
  translate([91, 193, 0])
    cube([1, 1, 2.12]);
  translate([92, 193, 0])
    cube([1, 1, 1.92]);
  translate([93, 193, 0])
    cube([1, 1, 1.96]);
  translate([94, 193, 0])
    cube([1, 1, 1.96]);
  translate([95, 193, 0])
    cube([1, 1, 2.08]);
  translate([96, 193, 0])
    cube([1, 1, 2.04]);
  translate([97, 193, 0])
    cube([1, 1, 2.04]);
  translate([98, 193, 0])
    cube([1, 1, 2.08]);
  translate([99, 193, 0])
    cube([1, 1, 1.76]);
  translate([100, 193, 0])
    cube([1, 1, 1.88]);
  translate([101, 193, 0])
    cube([1, 1, 1.49]);
  translate([102, 193, 0])
    cube([1, 1, 1.53]);
  translate([103, 193, 0])
    cube([1, 1, 1.61]);
  translate([104, 193, 0])
    cube([1, 1, 1.61]);
  translate([105, 193, 0])
    cube([1, 1, 1.10]);
  translate([106, 193, 0])
    cube([1, 1, 1.14]);
  translate([107, 193, 0])
    cube([1, 1, 1.25]);
  translate([108, 193, 0])
    cube([1, 1, 1.57]);
  translate([109, 193, 0])
    cube([1, 1, 1.49]);
  translate([110, 193, 0])
    cube([1, 1, 1.65]);
  translate([111, 193, 0])
    cube([1, 1, 1.49]);
  translate([112, 193, 0])
    cube([1, 1, 1.96]);
  translate([113, 193, 0])
    cube([1, 1, 2.16]);
  translate([114, 193, 0])
    cube([1, 1, 2.16]);
  translate([115, 193, 0])
    cube([1, 1, 2.24]);
  translate([116, 193, 0])
    cube([1, 1, 2.12]);
  translate([117, 193, 0])
    cube([1, 1, 1.69]);
  translate([118, 193, 0])
    cube([1, 1, 1.49]);
  translate([119, 193, 0])
    cube([1, 1, 1.73]);
  translate([120, 193, 0])
    cube([1, 1, 1.96]);
  translate([121, 193, 0])
    cube([1, 1, 1.53]);
  translate([122, 193, 0])
    cube([1, 1, 1.92]);
  translate([123, 193, 0])
    cube([1, 1, 1.57]);
  translate([124, 193, 0])
    cube([1, 1, 2.12]);
  translate([125, 193, 0])
    cube([1, 1, 1.92]);
  translate([126, 193, 0])
    cube([1, 1, 1.80]);
  translate([127, 193, 0])
    cube([1, 1, 2.12]);
  translate([128, 193, 0])
    cube([1, 1, 2.16]);
  translate([129, 193, 0])
    cube([1, 1, 1.96]);
  translate([130, 193, 0])
    cube([1, 1, 1.73]);
  translate([131, 193, 0])
    cube([1, 1, 1.84]);
  translate([132, 193, 0])
    cube([1, 1, 1.96]);
  translate([133, 193, 0])
    cube([1, 1, 2.12]);
  translate([134, 193, 0])
    cube([1, 1, 2.16]);
  translate([135, 193, 0])
    cube([1, 1, 2.43]);
  translate([136, 193, 0])
    cube([1, 1, 1.84]);
  translate([137, 193, 0])
    cube([1, 1, 2.43]);
  translate([138, 193, 0])
    cube([1, 1, 2.59]);
  translate([139, 193, 0])
    cube([1, 1, 2.55]);
  translate([140, 193, 0])
    cube([1, 1, 2.08]);
  translate([141, 193, 0])
    cube([1, 1, 2.82]);
  translate([142, 193, 0])
    cube([1, 1, 2.75]);
  translate([143, 193, 0])
    cube([1, 1, 2.27]);
  translate([144, 193, 0])
    cube([1, 1, 2.43]);
  translate([145, 193, 0])
    cube([1, 1, 2.31]);
  translate([146, 193, 0])
    cube([1, 1, 2.16]);
  translate([147, 193, 0])
    cube([1, 1, 2.55]);
  translate([148, 193, 0])
    cube([1, 1, 2.24]);
  translate([149, 193, 0])
    cube([1, 1, 1.80]);
  translate([150, 193, 0])
    cube([1, 1, 1.92]);
  translate([151, 193, 0])
    cube([1, 1, 2.00]);
  translate([152, 193, 0])
    cube([1, 1, 2.20]);
  translate([153, 193, 0])
    cube([1, 1, 2.47]);
  translate([154, 193, 0])
    cube([1, 1, 1.80]);
  translate([155, 193, 0])
    cube([1, 1, 1.84]);
  translate([156, 193, 0])
    cube([1, 1, 1.80]);
  translate([157, 193, 0])
    cube([1, 1, 1.84]);
  translate([158, 193, 0])
    cube([1, 1, 1.84]);
  translate([159, 193, 0])
    cube([1, 1, 1.88]);
  translate([160, 193, 0])
    cube([1, 1, 1.88]);
  translate([161, 193, 0])
    cube([1, 1, 1.88]);
  translate([162, 193, 0])
    cube([1, 1, 1.88]);
  translate([163, 193, 0])
    cube([1, 1, 1.88]);
  translate([164, 193, 0])
    cube([1, 1, 1.84]);
  translate([165, 193, 0])
    cube([1, 1, 1.84]);
  translate([166, 193, 0])
    cube([1, 1, 1.84]);
  translate([167, 193, 0])
    cube([1, 1, 1.88]);
  translate([168, 193, 0])
    cube([1, 1, 1.88]);
  translate([169, 193, 0])
    cube([1, 1, 1.84]);
  translate([170, 193, 0])
    cube([1, 1, 1.88]);
  translate([171, 193, 0])
    cube([1, 1, 1.88]);
  translate([172, 193, 0])
    cube([1, 1, 1.92]);
  translate([173, 193, 0])
    cube([1, 1, 1.88]);
  translate([174, 193, 0])
    cube([1, 1, 1.88]);
  translate([175, 193, 0])
    cube([1, 1, 1.88]);
  translate([176, 193, 0])
    cube([1, 1, 1.96]);
  translate([177, 193, 0])
    cube([1, 1, 1.37]);
  translate([178, 193, 0])
    cube([1, 1, 1.22]);
  translate([179, 193, 0])
    cube([1, 1, 1.18]);
  translate([180, 193, 0])
    cube([1, 1, 1.14]);
  translate([181, 193, 0])
    cube([1, 1, 1.10]);
  translate([182, 193, 0])
    cube([1, 1, 1.02]);
  translate([183, 193, 0])
    cube([1, 1, 0.98]);
  translate([184, 193, 0])
    cube([1, 1, 0.82]);
  translate([185, 193, 0])
    cube([1, 1, 0.63]);
  translate([186, 193, 0])
    cube([1, 1, 0.47]);
  translate([187, 193, 0])
    cube([1, 1, 0.31]);
  translate([188, 193, 0])
    cube([1, 1, 0.86]);
  translate([189, 193, 0])
    cube([1, 1, 0.47]);
  translate([190, 193, 0])
    cube([1, 1, 1.84]);
  translate([191, 193, 0])
    cube([1, 1, 4.94]);
  translate([192, 193, 0])
    cube([1, 1, 5.25]);
  translate([193, 193, 0])
    cube([1, 1, 6.27]);
  translate([194, 193, 0])
    cube([1, 1, 6.78]);
  translate([195, 193, 0])
    cube([1, 1, 6.35]);
  translate([196, 193, 0])
    cube([1, 1, 0.35]);
  translate([197, 193, 0])
    cube([1, 1, 0.55]);
  translate([198, 193, 0])
    cube([1, 1, 0.43]);
  translate([199, 193, 0])
    cube([1, 1, 0.43]);
  translate([200, 193, 0])
    cube([1, 1, 0.39]);
  translate([201, 193, 0])
    cube([1, 1, 0.39]);
  translate([202, 193, 0])
    cube([1, 1, 0.35]);
  translate([203, 193, 0])
    cube([1, 1, 0.71]);
  translate([204, 193, 0])
    cube([1, 1, 0.27]);
  translate([205, 193, 0])
    cube([1, 1, 0.31]);
  translate([206, 193, 0])
    cube([1, 1, 0.20]);
  translate([207, 193, 0])
    cube([1, 1, 0.27]);
  translate([208, 193, 0])
    cube([1, 1, 1.18]);
  translate([209, 193, 0])
    cube([1, 1, 1.41]);
  translate([210, 193, 0])
    cube([1, 1, 0.78]);
  translate([211, 193, 0])
    cube([1, 1, 3.02]);
  translate([212, 193, 0])
    cube([1, 1, 0.90]);
  translate([213, 193, 0])
    cube([1, 1, 0.94]);
  translate([214, 193, 0])
    cube([1, 1, 0.16]);
  translate([215, 193, 0])
    cube([1, 1, 0.31]);
  translate([216, 193, 0])
    cube([1, 1, 0.27]);
  translate([217, 193, 0])
    cube([1, 1, 3.22]);
  translate([218, 193, 0])
    cube([1, 1, 2.98]);
  translate([219, 193, 0])
    cube([1, 1, 3.29]);
  translate([220, 193, 0])
    cube([1, 1, 2.31]);
  translate([221, 193, 0])
    cube([1, 1, 2.43]);
  translate([222, 193, 0])
    cube([1, 1, 2.27]);
  translate([223, 193, 0])
    cube([1, 1, 1.96]);
  translate([224, 193, 0])
    cube([1, 1, 1.88]);
  translate([225, 193, 0])
    cube([1, 1, 1.92]);
  translate([226, 193, 0])
    cube([1, 1, 1.92]);
  translate([227, 193, 0])
    cube([1, 1, 1.92]);
  translate([228, 193, 0])
    cube([1, 1, 1.92]);
  translate([229, 193, 0])
    cube([1, 1, 1.92]);
  translate([230, 193, 0])
    cube([1, 1, 1.92]);
  translate([231, 193, 0])
    cube([1, 1, 1.92]);
  translate([232, 193, 0])
    cube([1, 1, 1.92]);
  translate([233, 193, 0])
    cube([1, 1, 1.92]);
  translate([234, 193, 0])
    cube([1, 1, 1.92]);
  translate([235, 193, 0])
    cube([1, 1, 1.88]);
  translate([236, 193, 0])
    cube([1, 1, 1.92]);
  translate([237, 193, 0])
    cube([1, 1, 1.92]);
  translate([238, 193, 0])
    cube([1, 1, 1.92]);
  translate([239, 193, 0])
    cube([1, 1, 1.88]);
  translate([240, 193, 0])
    cube([1, 1, 1.92]);
  translate([241, 193, 0])
    cube([1, 1, 1.92]);
  translate([242, 193, 0])
    cube([1, 1, 1.92]);
  translate([243, 193, 0])
    cube([1, 1, 1.92]);
  translate([244, 193, 0])
    cube([1, 1, 1.88]);
  translate([245, 193, 0])
    cube([1, 1, 1.88]);
  translate([246, 193, 0])
    cube([1, 1, 1.88]);
  translate([0, 194, 0])
    cube([1, 1, 2.08]);
  translate([1, 194, 0])
    cube([1, 1, 2.08]);
  translate([2, 194, 0])
    cube([1, 1, 2.08]);
  translate([3, 194, 0])
    cube([1, 1, 2.08]);
  translate([4, 194, 0])
    cube([1, 1, 2.08]);
  translate([5, 194, 0])
    cube([1, 1, 2.08]);
  translate([6, 194, 0])
    cube([1, 1, 2.08]);
  translate([7, 194, 0])
    cube([1, 1, 2.08]);
  translate([8, 194, 0])
    cube([1, 1, 2.04]);
  translate([9, 194, 0])
    cube([1, 1, 2.04]);
  translate([10, 194, 0])
    cube([1, 1, 2.12]);
  translate([11, 194, 0])
    cube([1, 1, 2.04]);
  translate([12, 194, 0])
    cube([1, 1, 2.04]);
  translate([13, 194, 0])
    cube([1, 1, 2.08]);
  translate([14, 194, 0])
    cube([1, 1, 2.04]);
  translate([15, 194, 0])
    cube([1, 1, 2.04]);
  translate([16, 194, 0])
    cube([1, 1, 2.04]);
  translate([17, 194, 0])
    cube([1, 1, 2.00]);
  translate([18, 194, 0])
    cube([1, 1, 2.04]);
  translate([19, 194, 0])
    cube([1, 1, 2.04]);
  translate([20, 194, 0])
    cube([1, 1, 2.08]);
  translate([21, 194, 0])
    cube([1, 1, 2.08]);
  translate([22, 194, 0])
    cube([1, 1, 2.08]);
  translate([23, 194, 0])
    cube([1, 1, 2.08]);
  translate([24, 194, 0])
    cube([1, 1, 2.08]);
  translate([25, 194, 0])
    cube([1, 1, 2.04]);
  translate([26, 194, 0])
    cube([1, 1, 2.12]);
  translate([27, 194, 0])
    cube([1, 1, 2.08]);
  translate([28, 194, 0])
    cube([1, 1, 2.00]);
  translate([29, 194, 0])
    cube([1, 1, 2.00]);
  translate([30, 194, 0])
    cube([1, 1, 2.04]);
  translate([31, 194, 0])
    cube([1, 1, 2.04]);
  translate([32, 194, 0])
    cube([1, 1, 2.04]);
  translate([33, 194, 0])
    cube([1, 1, 2.08]);
  translate([34, 194, 0])
    cube([1, 1, 2.08]);
  translate([35, 194, 0])
    cube([1, 1, 2.08]);
  translate([36, 194, 0])
    cube([1, 1, 2.04]);
  translate([37, 194, 0])
    cube([1, 1, 2.04]);
  translate([38, 194, 0])
    cube([1, 1, 2.04]);
  translate([39, 194, 0])
    cube([1, 1, 2.08]);
  translate([40, 194, 0])
    cube([1, 1, 2.04]);
  translate([41, 194, 0])
    cube([1, 1, 2.04]);
  translate([42, 194, 0])
    cube([1, 1, 2.04]);
  translate([43, 194, 0])
    cube([1, 1, 2.04]);
  translate([44, 194, 0])
    cube([1, 1, 2.04]);
  translate([45, 194, 0])
    cube([1, 1, 2.04]);
  translate([46, 194, 0])
    cube([1, 1, 2.04]);
  translate([47, 194, 0])
    cube([1, 1, 2.04]);
  translate([48, 194, 0])
    cube([1, 1, 2.04]);
  translate([49, 194, 0])
    cube([1, 1, 2.04]);
  translate([50, 194, 0])
    cube([1, 1, 2.04]);
  translate([51, 194, 0])
    cube([1, 1, 2.04]);
  translate([52, 194, 0])
    cube([1, 1, 2.08]);
  translate([53, 194, 0])
    cube([1, 1, 2.04]);
  translate([54, 194, 0])
    cube([1, 1, 2.04]);
  translate([55, 194, 0])
    cube([1, 1, 2.04]);
  translate([56, 194, 0])
    cube([1, 1, 2.00]);
  translate([57, 194, 0])
    cube([1, 1, 1.96]);
  translate([58, 194, 0])
    cube([1, 1, 1.96]);
  translate([59, 194, 0])
    cube([1, 1, 2.00]);
  translate([60, 194, 0])
    cube([1, 1, 2.00]);
  translate([61, 194, 0])
    cube([1, 1, 2.00]);
  translate([62, 194, 0])
    cube([1, 1, 2.00]);
  translate([63, 194, 0])
    cube([1, 1, 2.00]);
  translate([64, 194, 0])
    cube([1, 1, 2.00]);
  translate([65, 194, 0])
    cube([1, 1, 1.92]);
  translate([66, 194, 0])
    cube([1, 1, 2.04]);
  translate([67, 194, 0])
    cube([1, 1, 2.04]);
  translate([68, 194, 0])
    cube([1, 1, 1.57]);
  translate([69, 194, 0])
    cube([1, 1, 6.12]);
  translate([70, 194, 0])
    cube([1, 1, 6.43]);
  translate([71, 194, 0])
    cube([1, 1, 7.49]);
  translate([72, 194, 0])
    cube([1, 1, 2.94]);
  translate([73, 194, 0])
    cube([1, 1, 6.35]);
  translate([74, 194, 0])
    cube([1, 1, 7.73]);
  translate([75, 194, 0])
    cube([1, 1, 7.02]);
  translate([76, 194, 0])
    cube([1, 1, 3.14]);
  translate([77, 194, 0])
    cube([1, 1, 1.10]);
  translate([78, 194, 0])
    cube([1, 1, 1.10]);
  translate([79, 194, 0])
    cube([1, 1, 1.22]);
  translate([80, 194, 0])
    cube([1, 1, 1.53]);
  translate([81, 194, 0])
    cube([1, 1, 1.73]);
  translate([82, 194, 0])
    cube([1, 1, 1.41]);
  translate([83, 194, 0])
    cube([1, 1, 1.73]);
  translate([84, 194, 0])
    cube([1, 1, 2.24]);
  translate([85, 194, 0])
    cube([1, 1, 2.63]);
  translate([86, 194, 0])
    cube([1, 1, 2.27]);
  translate([87, 194, 0])
    cube([1, 1, 2.20]);
  translate([88, 194, 0])
    cube([1, 1, 1.92]);
  translate([89, 194, 0])
    cube([1, 1, 1.65]);
  translate([90, 194, 0])
    cube([1, 1, 1.73]);
  translate([91, 194, 0])
    cube([1, 1, 1.92]);
  translate([92, 194, 0])
    cube([1, 1, 2.16]);
  translate([93, 194, 0])
    cube([1, 1, 2.04]);
  translate([94, 194, 0])
    cube([1, 1, 2.12]);
  translate([95, 194, 0])
    cube([1, 1, 2.51]);
  translate([96, 194, 0])
    cube([1, 1, 2.12]);
  translate([97, 194, 0])
    cube([1, 1, 2.20]);
  translate([98, 194, 0])
    cube([1, 1, 1.84]);
  translate([99, 194, 0])
    cube([1, 1, 1.49]);
  translate([100, 194, 0])
    cube([1, 1, 1.65]);
  translate([101, 194, 0])
    cube([1, 1, 1.61]);
  translate([102, 194, 0])
    cube([1, 1, 1.53]);
  translate([103, 194, 0])
    cube([1, 1, 1.41]);
  translate([104, 194, 0])
    cube([1, 1, 1.73]);
  translate([105, 194, 0])
    cube([1, 1, 1.41]);
  translate([106, 194, 0])
    cube([1, 1, 1.45]);
  translate([107, 194, 0])
    cube([1, 1, 1.65]);
  translate([108, 194, 0])
    cube([1, 1, 1.65]);
  translate([109, 194, 0])
    cube([1, 1, 2.00]);
  translate([110, 194, 0])
    cube([1, 1, 2.00]);
  translate([111, 194, 0])
    cube([1, 1, 2.16]);
  translate([112, 194, 0])
    cube([1, 1, 1.76]);
  translate([113, 194, 0])
    cube([1, 1, 1.69]);
  translate([114, 194, 0])
    cube([1, 1, 1.80]);
  translate([115, 194, 0])
    cube([1, 1, 1.96]);
  translate([116, 194, 0])
    cube([1, 1, 1.76]);
  translate([117, 194, 0])
    cube([1, 1, 1.53]);
  translate([118, 194, 0])
    cube([1, 1, 1.69]);
  translate([119, 194, 0])
    cube([1, 1, 2.16]);
  translate([120, 194, 0])
    cube([1, 1, 2.47]);
  translate([121, 194, 0])
    cube([1, 1, 2.12]);
  translate([122, 194, 0])
    cube([1, 1, 2.24]);
  translate([123, 194, 0])
    cube([1, 1, 1.57]);
  translate([124, 194, 0])
    cube([1, 1, 2.00]);
  translate([125, 194, 0])
    cube([1, 1, 1.96]);
  translate([126, 194, 0])
    cube([1, 1, 1.76]);
  translate([127, 194, 0])
    cube([1, 1, 1.76]);
  translate([128, 194, 0])
    cube([1, 1, 2.35]);
  translate([129, 194, 0])
    cube([1, 1, 2.08]);
  translate([130, 194, 0])
    cube([1, 1, 2.04]);
  translate([131, 194, 0])
    cube([1, 1, 1.88]);
  translate([132, 194, 0])
    cube([1, 1, 1.73]);
  translate([133, 194, 0])
    cube([1, 1, 1.92]);
  translate([134, 194, 0])
    cube([1, 1, 1.45]);
  translate([135, 194, 0])
    cube([1, 1, 2.08]);
  translate([136, 194, 0])
    cube([1, 1, 2.16]);
  translate([137, 194, 0])
    cube([1, 1, 2.27]);
  translate([138, 194, 0])
    cube([1, 1, 1.69]);
  translate([139, 194, 0])
    cube([1, 1, 2.71]);
  translate([140, 194, 0])
    cube([1, 1, 2.20]);
  translate([141, 194, 0])
    cube([1, 1, 1.88]);
  translate([142, 194, 0])
    cube([1, 1, 2.24]);
  translate([143, 194, 0])
    cube([1, 1, 2.55]);
  translate([144, 194, 0])
    cube([1, 1, 1.88]);
  translate([145, 194, 0])
    cube([1, 1, 2.20]);
  translate([146, 194, 0])
    cube([1, 1, 2.31]);
  translate([147, 194, 0])
    cube([1, 1, 2.00]);
  translate([148, 194, 0])
    cube([1, 1, 2.08]);
  translate([149, 194, 0])
    cube([1, 1, 1.88]);
  translate([150, 194, 0])
    cube([1, 1, 2.00]);
  translate([151, 194, 0])
    cube([1, 1, 2.00]);
  translate([152, 194, 0])
    cube([1, 1, 1.88]);
  translate([153, 194, 0])
    cube([1, 1, 1.80]);
  translate([154, 194, 0])
    cube([1, 1, 1.80]);
  translate([155, 194, 0])
    cube([1, 1, 1.88]);
  translate([156, 194, 0])
    cube([1, 1, 1.88]);
  translate([157, 194, 0])
    cube([1, 1, 1.88]);
  translate([158, 194, 0])
    cube([1, 1, 1.84]);
  translate([159, 194, 0])
    cube([1, 1, 1.84]);
  translate([160, 194, 0])
    cube([1, 1, 1.92]);
  translate([161, 194, 0])
    cube([1, 1, 1.88]);
  translate([162, 194, 0])
    cube([1, 1, 1.88]);
  translate([163, 194, 0])
    cube([1, 1, 1.88]);
  translate([164, 194, 0])
    cube([1, 1, 1.88]);
  translate([165, 194, 0])
    cube([1, 1, 1.84]);
  translate([166, 194, 0])
    cube([1, 1, 1.84]);
  translate([167, 194, 0])
    cube([1, 1, 1.88]);
  translate([168, 194, 0])
    cube([1, 1, 1.88]);
  translate([169, 194, 0])
    cube([1, 1, 1.84]);
  translate([170, 194, 0])
    cube([1, 1, 1.88]);
  translate([171, 194, 0])
    cube([1, 1, 1.92]);
  translate([172, 194, 0])
    cube([1, 1, 1.92]);
  translate([173, 194, 0])
    cube([1, 1, 1.92]);
  translate([174, 194, 0])
    cube([1, 1, 1.88]);
  translate([175, 194, 0])
    cube([1, 1, 1.92]);
  translate([176, 194, 0])
    cube([1, 1, 1.88]);
  translate([177, 194, 0])
    cube([1, 1, 1.88]);
  translate([178, 194, 0])
    cube([1, 1, 1.41]);
  translate([179, 194, 0])
    cube([1, 1, 1.14]);
  translate([180, 194, 0])
    cube([1, 1, 1.14]);
  translate([181, 194, 0])
    cube([1, 1, 1.14]);
  translate([182, 194, 0])
    cube([1, 1, 0.98]);
  translate([183, 194, 0])
    cube([1, 1, 0.86]);
  translate([184, 194, 0])
    cube([1, 1, 0.86]);
  translate([185, 194, 0])
    cube([1, 1, 0.47]);
  translate([186, 194, 0])
    cube([1, 1, 0.08]);
  translate([187, 194, 0])
    cube([1, 1, 1.41]);
  translate([188, 194, 0])
    cube([1, 1, 1.25]);
  translate([189, 194, 0])
    cube([1, 1, 0.31]);
  translate([190, 194, 0])
    cube([1, 1, 0.08]);
  translate([191, 194, 0])
    cube([1, 1, 6.47]);
  translate([192, 194, 0])
    cube([1, 1, 4.59]);
  translate([193, 194, 0])
    cube([1, 1, 5.92]);
  translate([194, 194, 0])
    cube([1, 1, 6.08]);
  translate([195, 194, 0])
    cube([1, 1, 5.69]);
  translate([196, 194, 0])
    cube([1, 1, 0.47]);
  translate([197, 194, 0])
    cube([1, 1, 0.39]);
  translate([198, 194, 0])
    cube([1, 1, 0.43]);
  translate([199, 194, 0])
    cube([1, 1, 0.43]);
  translate([200, 194, 0])
    cube([1, 1, 0.43]);
  translate([201, 194, 0])
    cube([1, 1, 0.35]);
  translate([202, 194, 0])
    cube([1, 1, 0.35]);
  translate([203, 194, 0])
    cube([1, 1, 0.67]);
  translate([204, 194, 0])
    cube([1, 1, 0.63]);
  translate([205, 194, 0])
    cube([1, 1, 0.47]);
  translate([206, 194, 0])
    cube([1, 1, 0.24]);
  translate([207, 194, 0])
    cube([1, 1, 0.27]);
  translate([208, 194, 0])
    cube([1, 1, 0.31]);
  translate([209, 194, 0])
    cube([1, 1, 0.39]);
  translate([210, 194, 0])
    cube([1, 1, 1.33]);
  translate([211, 194, 0])
    cube([1, 1, 1.06]);
  translate([212, 194, 0])
    cube([1, 1, 1.25]);
  translate([213, 194, 0])
    cube([1, 1, 2.75]);
  translate([214, 194, 0])
    cube([1, 1, 1.22]);
  translate([215, 194, 0])
    cube([1, 1, 0.12]);
  translate([216, 194, 0])
    cube([1, 1, 1.25]);
  translate([217, 194, 0])
    cube([1, 1, 0.90]);
  translate([218, 194, 0])
    cube([1, 1, 2.94]);
  translate([219, 194, 0])
    cube([1, 1, 2.94]);
  translate([220, 194, 0])
    cube([1, 1, 3.25]);
  translate([221, 194, 0])
    cube([1, 1, 2.24]);
  translate([222, 194, 0])
    cube([1, 1, 2.27]);
  translate([223, 194, 0])
    cube([1, 1, 2.12]);
  translate([224, 194, 0])
    cube([1, 1, 2.67]);
  translate([225, 194, 0])
    cube([1, 1, 1.92]);
  translate([226, 194, 0])
    cube([1, 1, 1.96]);
  translate([227, 194, 0])
    cube([1, 1, 1.88]);
  translate([228, 194, 0])
    cube([1, 1, 1.92]);
  translate([229, 194, 0])
    cube([1, 1, 1.92]);
  translate([230, 194, 0])
    cube([1, 1, 1.92]);
  translate([231, 194, 0])
    cube([1, 1, 1.92]);
  translate([232, 194, 0])
    cube([1, 1, 1.92]);
  translate([233, 194, 0])
    cube([1, 1, 1.92]);
  translate([234, 194, 0])
    cube([1, 1, 1.88]);
  translate([235, 194, 0])
    cube([1, 1, 1.88]);
  translate([236, 194, 0])
    cube([1, 1, 1.92]);
  translate([237, 194, 0])
    cube([1, 1, 1.92]);
  translate([238, 194, 0])
    cube([1, 1, 1.88]);
  translate([239, 194, 0])
    cube([1, 1, 1.84]);
  translate([240, 194, 0])
    cube([1, 1, 1.88]);
  translate([241, 194, 0])
    cube([1, 1, 1.92]);
  translate([242, 194, 0])
    cube([1, 1, 1.92]);
  translate([243, 194, 0])
    cube([1, 1, 1.88]);
  translate([244, 194, 0])
    cube([1, 1, 1.92]);
  translate([245, 194, 0])
    cube([1, 1, 1.92]);
  translate([246, 194, 0])
    cube([1, 1, 1.92]);
  translate([0, 195, 0])
    cube([1, 1, 2.08]);
  translate([1, 195, 0])
    cube([1, 1, 2.08]);
  translate([2, 195, 0])
    cube([1, 1, 2.08]);
  translate([3, 195, 0])
    cube([1, 1, 2.08]);
  translate([4, 195, 0])
    cube([1, 1, 2.08]);
  translate([5, 195, 0])
    cube([1, 1, 2.08]);
  translate([6, 195, 0])
    cube([1, 1, 2.08]);
  translate([7, 195, 0])
    cube([1, 1, 2.08]);
  translate([8, 195, 0])
    cube([1, 1, 2.08]);
  translate([9, 195, 0])
    cube([1, 1, 2.04]);
  translate([10, 195, 0])
    cube([1, 1, 2.12]);
  translate([11, 195, 0])
    cube([1, 1, 2.04]);
  translate([12, 195, 0])
    cube([1, 1, 2.04]);
  translate([13, 195, 0])
    cube([1, 1, 2.08]);
  translate([14, 195, 0])
    cube([1, 1, 2.04]);
  translate([15, 195, 0])
    cube([1, 1, 2.04]);
  translate([16, 195, 0])
    cube([1, 1, 2.04]);
  translate([17, 195, 0])
    cube([1, 1, 2.08]);
  translate([18, 195, 0])
    cube([1, 1, 2.12]);
  translate([19, 195, 0])
    cube([1, 1, 2.04]);
  translate([20, 195, 0])
    cube([1, 1, 2.08]);
  translate([21, 195, 0])
    cube([1, 1, 2.08]);
  translate([22, 195, 0])
    cube([1, 1, 2.08]);
  translate([23, 195, 0])
    cube([1, 1, 2.08]);
  translate([24, 195, 0])
    cube([1, 1, 2.08]);
  translate([25, 195, 0])
    cube([1, 1, 2.04]);
  translate([26, 195, 0])
    cube([1, 1, 2.12]);
  translate([27, 195, 0])
    cube([1, 1, 2.08]);
  translate([28, 195, 0])
    cube([1, 1, 2.00]);
  translate([29, 195, 0])
    cube([1, 1, 2.00]);
  translate([30, 195, 0])
    cube([1, 1, 2.04]);
  translate([31, 195, 0])
    cube([1, 1, 2.04]);
  translate([32, 195, 0])
    cube([1, 1, 2.04]);
  translate([33, 195, 0])
    cube([1, 1, 2.00]);
  translate([34, 195, 0])
    cube([1, 1, 2.00]);
  translate([35, 195, 0])
    cube([1, 1, 2.00]);
  translate([36, 195, 0])
    cube([1, 1, 2.04]);
  translate([37, 195, 0])
    cube([1, 1, 2.04]);
  translate([38, 195, 0])
    cube([1, 1, 2.04]);
  translate([39, 195, 0])
    cube([1, 1, 2.08]);
  translate([40, 195, 0])
    cube([1, 1, 2.04]);
  translate([41, 195, 0])
    cube([1, 1, 2.08]);
  translate([42, 195, 0])
    cube([1, 1, 2.08]);
  translate([43, 195, 0])
    cube([1, 1, 2.04]);
  translate([44, 195, 0])
    cube([1, 1, 2.04]);
  translate([45, 195, 0])
    cube([1, 1, 2.04]);
  translate([46, 195, 0])
    cube([1, 1, 2.04]);
  translate([47, 195, 0])
    cube([1, 1, 2.04]);
  translate([48, 195, 0])
    cube([1, 1, 2.04]);
  translate([49, 195, 0])
    cube([1, 1, 2.04]);
  translate([50, 195, 0])
    cube([1, 1, 2.04]);
  translate([51, 195, 0])
    cube([1, 1, 2.04]);
  translate([52, 195, 0])
    cube([1, 1, 2.00]);
  translate([53, 195, 0])
    cube([1, 1, 2.08]);
  translate([54, 195, 0])
    cube([1, 1, 2.04]);
  translate([55, 195, 0])
    cube([1, 1, 2.04]);
  translate([56, 195, 0])
    cube([1, 1, 2.04]);
  translate([57, 195, 0])
    cube([1, 1, 2.00]);
  translate([58, 195, 0])
    cube([1, 1, 2.00]);
  translate([59, 195, 0])
    cube([1, 1, 2.00]);
  translate([60, 195, 0])
    cube([1, 1, 2.00]);
  translate([61, 195, 0])
    cube([1, 1, 2.00]);
  translate([62, 195, 0])
    cube([1, 1, 2.00]);
  translate([63, 195, 0])
    cube([1, 1, 2.00]);
  translate([64, 195, 0])
    cube([1, 1, 2.00]);
  translate([65, 195, 0])
    cube([1, 1, 1.92]);
  translate([66, 195, 0])
    cube([1, 1, 2.04]);
  translate([67, 195, 0])
    cube([1, 1, 1.96]);
  translate([68, 195, 0])
    cube([1, 1, 3.80]);
  translate([69, 195, 0])
    cube([1, 1, 6.31]);
  translate([70, 195, 0])
    cube([1, 1, 6.04]);
  translate([71, 195, 0])
    cube([1, 1, 7.37]);
  translate([72, 195, 0])
    cube([1, 1, 0.90]);
  translate([73, 195, 0])
    cube([1, 1, 6.71]);
  translate([74, 195, 0])
    cube([1, 1, 2.98]);
  translate([75, 195, 0])
    cube([1, 1, 6.67]);
  translate([76, 195, 0])
    cube([1, 1, 8.00]);
  translate([77, 195, 0])
    cube([1, 1, 1.06]);
  translate([78, 195, 0])
    cube([1, 1, 1.06]);
  translate([79, 195, 0])
    cube([1, 1, 1.41]);
  translate([80, 195, 0])
    cube([1, 1, 1.41]);
  translate([81, 195, 0])
    cube([1, 1, 1.33]);
  translate([82, 195, 0])
    cube([1, 1, 1.65]);
  translate([83, 195, 0])
    cube([1, 1, 1.69]);
  translate([84, 195, 0])
    cube([1, 1, 1.84]);
  translate([85, 195, 0])
    cube([1, 1, 1.69]);
  translate([86, 195, 0])
    cube([1, 1, 1.69]);
  translate([87, 195, 0])
    cube([1, 1, 1.69]);
  translate([88, 195, 0])
    cube([1, 1, 2.12]);
  translate([89, 195, 0])
    cube([1, 1, 1.88]);
  translate([90, 195, 0])
    cube([1, 1, 1.88]);
  translate([91, 195, 0])
    cube([1, 1, 2.16]);
  translate([92, 195, 0])
    cube([1, 1, 2.00]);
  translate([93, 195, 0])
    cube([1, 1, 2.20]);
  translate([94, 195, 0])
    cube([1, 1, 1.92]);
  translate([95, 195, 0])
    cube([1, 1, 1.80]);
  translate([96, 195, 0])
    cube([1, 1, 1.84]);
  translate([97, 195, 0])
    cube([1, 1, 1.80]);
  translate([98, 195, 0])
    cube([1, 1, 1.76]);
  translate([99, 195, 0])
    cube([1, 1, 1.73]);
  translate([100, 195, 0])
    cube([1, 1, 1.73]);
  translate([101, 195, 0])
    cube([1, 1, 1.65]);
  translate([102, 195, 0])
    cube([1, 1, 1.41]);
  translate([103, 195, 0])
    cube([1, 1, 1.53]);
  translate([104, 195, 0])
    cube([1, 1, 1.53]);
  translate([105, 195, 0])
    cube([1, 1, 1.69]);
  translate([106, 195, 0])
    cube([1, 1, 1.76]);
  translate([107, 195, 0])
    cube([1, 1, 1.73]);
  translate([108, 195, 0])
    cube([1, 1, 1.76]);
  translate([109, 195, 0])
    cube([1, 1, 1.65]);
  translate([110, 195, 0])
    cube([1, 1, 1.73]);
  translate([111, 195, 0])
    cube([1, 1, 1.29]);
  translate([112, 195, 0])
    cube([1, 1, 1.29]);
  translate([113, 195, 0])
    cube([1, 1, 1.29]);
  translate([114, 195, 0])
    cube([1, 1, 1.14]);
  translate([115, 195, 0])
    cube([1, 1, 1.45]);
  translate([116, 195, 0])
    cube([1, 1, 1.33]);
  translate([117, 195, 0])
    cube([1, 1, 1.84]);
  translate([118, 195, 0])
    cube([1, 1, 1.76]);
  translate([119, 195, 0])
    cube([1, 1, 2.35]);
  translate([120, 195, 0])
    cube([1, 1, 1.61]);
  translate([121, 195, 0])
    cube([1, 1, 1.92]);
  translate([122, 195, 0])
    cube([1, 1, 2.20]);
  translate([123, 195, 0])
    cube([1, 1, 2.00]);
  translate([124, 195, 0])
    cube([1, 1, 2.00]);
  translate([125, 195, 0])
    cube([1, 1, 2.00]);
  translate([126, 195, 0])
    cube([1, 1, 1.37]);
  translate([127, 195, 0])
    cube([1, 1, 1.73]);
  translate([128, 195, 0])
    cube([1, 1, 1.61]);
  translate([129, 195, 0])
    cube([1, 1, 1.92]);
  translate([130, 195, 0])
    cube([1, 1, 2.59]);
  translate([131, 195, 0])
    cube([1, 1, 1.92]);
  translate([132, 195, 0])
    cube([1, 1, 1.33]);
  translate([133, 195, 0])
    cube([1, 1, 2.12]);
  translate([134, 195, 0])
    cube([1, 1, 2.04]);
  translate([135, 195, 0])
    cube([1, 1, 1.65]);
  translate([136, 195, 0])
    cube([1, 1, 2.39]);
  translate([137, 195, 0])
    cube([1, 1, 2.78]);
  translate([138, 195, 0])
    cube([1, 1, 2.31]);
  translate([139, 195, 0])
    cube([1, 1, 2.27]);
  translate([140, 195, 0])
    cube([1, 1, 2.35]);
  translate([141, 195, 0])
    cube([1, 1, 2.51]);
  translate([142, 195, 0])
    cube([1, 1, 1.49]);
  translate([143, 195, 0])
    cube([1, 1, 2.35]);
  translate([144, 195, 0])
    cube([1, 1, 2.08]);
  translate([145, 195, 0])
    cube([1, 1, 2.43]);
  translate([146, 195, 0])
    cube([1, 1, 2.39]);
  translate([147, 195, 0])
    cube([1, 1, 2.00]);
  translate([148, 195, 0])
    cube([1, 1, 1.96]);
  translate([149, 195, 0])
    cube([1, 1, 2.39]);
  translate([150, 195, 0])
    cube([1, 1, 2.12]);
  translate([151, 195, 0])
    cube([1, 1, 1.49]);
  translate([152, 195, 0])
    cube([1, 1, 2.00]);
  translate([153, 195, 0])
    cube([1, 1, 2.04]);
  translate([154, 195, 0])
    cube([1, 1, 1.88]);
  translate([155, 195, 0])
    cube([1, 1, 1.88]);
  translate([156, 195, 0])
    cube([1, 1, 1.88]);
  translate([157, 195, 0])
    cube([1, 1, 1.88]);
  translate([158, 195, 0])
    cube([1, 1, 1.84]);
  translate([159, 195, 0])
    cube([1, 1, 1.84]);
  translate([160, 195, 0])
    cube([1, 1, 1.92]);
  translate([161, 195, 0])
    cube([1, 1, 1.88]);
  translate([162, 195, 0])
    cube([1, 1, 1.88]);
  translate([163, 195, 0])
    cube([1, 1, 1.88]);
  translate([164, 195, 0])
    cube([1, 1, 1.88]);
  translate([165, 195, 0])
    cube([1, 1, 1.84]);
  translate([166, 195, 0])
    cube([1, 1, 1.84]);
  translate([167, 195, 0])
    cube([1, 1, 1.88]);
  translate([168, 195, 0])
    cube([1, 1, 1.88]);
  translate([169, 195, 0])
    cube([1, 1, 1.88]);
  translate([170, 195, 0])
    cube([1, 1, 1.92]);
  translate([171, 195, 0])
    cube([1, 1, 1.92]);
  translate([172, 195, 0])
    cube([1, 1, 1.92]);
  translate([173, 195, 0])
    cube([1, 1, 1.92]);
  translate([174, 195, 0])
    cube([1, 1, 1.88]);
  translate([175, 195, 0])
    cube([1, 1, 1.92]);
  translate([176, 195, 0])
    cube([1, 1, 1.96]);
  translate([177, 195, 0])
    cube([1, 1, 1.84]);
  translate([178, 195, 0])
    cube([1, 1, 1.88]);
  translate([179, 195, 0])
    cube([1, 1, 1.49]);
  translate([180, 195, 0])
    cube([1, 1, 1.10]);
  translate([181, 195, 0])
    cube([1, 1, 1.10]);
  translate([182, 195, 0])
    cube([1, 1, 0.98]);
  translate([183, 195, 0])
    cube([1, 1, 0.86]);
  translate([184, 195, 0])
    cube([1, 1, 0.75]);
  translate([185, 195, 0])
    cube([1, 1, 1.14]);
  translate([186, 195, 0])
    cube([1, 1, 1.53]);
  translate([187, 195, 0])
    cube([1, 1, 1.96]);
  translate([188, 195, 0])
    cube([1, 1, 0.51]);
  translate([189, 195, 0])
    cube([1, 1, 0.55]);
  translate([190, 195, 0])
    cube([1, 1, 0.16]);
  translate([191, 195, 0])
    cube([1, 1, 0.55]);
  translate([192, 195, 0])
    cube([1, 1, 4.51]);
  translate([193, 195, 0])
    cube([1, 1, 5.18]);
  translate([194, 195, 0])
    cube([1, 1, 6.08]);
  translate([195, 195, 0])
    cube([1, 1, 5.92]);
  translate([196, 195, 0])
    cube([1, 1, 5.57]);
  translate([197, 195, 0])
    cube([1, 1, 0.39]);
  translate([198, 195, 0])
    cube([1, 1, 0.43]);
  translate([199, 195, 0])
    cube([1, 1, 0.43]);
  translate([200, 195, 0])
    cube([1, 1, 0.43]);
  translate([201, 195, 0])
    cube([1, 1, 0.35]);
  translate([202, 195, 0])
    cube([1, 1, 0.35]);
  translate([203, 195, 0])
    cube([1, 1, 0.39]);
  translate([204, 195, 0])
    cube([1, 1, 1.37]);
  translate([205, 195, 0])
    cube([1, 1, 1.53]);
  translate([206, 195, 0])
    cube([1, 1, 0.67]);
  translate([207, 195, 0])
    cube([1, 1, 0.47]);
  translate([208, 195, 0])
    cube([1, 1, 0.35]);
  translate([209, 195, 0])
    cube([1, 1, 0.39]);
  translate([210, 195, 0])
    cube([1, 1, 0.31]);
  translate([211, 195, 0])
    cube([1, 1, 1.22]);
  translate([212, 195, 0])
    cube([1, 1, 1.06]);
  translate([213, 195, 0])
    cube([1, 1, 1.45]);
  translate([214, 195, 0])
    cube([1, 1, 2.78]);
  translate([215, 195, 0])
    cube([1, 1, 1.06]);
  translate([216, 195, 0])
    cube([1, 1, 1.02]);
  translate([217, 195, 0])
    cube([1, 1, 1.22]);
  translate([218, 195, 0])
    cube([1, 1, 1.06]);
  translate([219, 195, 0])
    cube([1, 1, 1.92]);
  translate([220, 195, 0])
    cube([1, 1, 3.06]);
  translate([221, 195, 0])
    cube([1, 1, 3.02]);
  translate([222, 195, 0])
    cube([1, 1, 3.92]);
  translate([223, 195, 0])
    cube([1, 1, 2.24]);
  translate([224, 195, 0])
    cube([1, 1, 2.27]);
  translate([225, 195, 0])
    cube([1, 1, 2.43]);
  translate([226, 195, 0])
    cube([1, 1, 2.16]);
  translate([227, 195, 0])
    cube([1, 1, 1.88]);
  translate([228, 195, 0])
    cube([1, 1, 1.92]);
  translate([229, 195, 0])
    cube([1, 1, 1.92]);
  translate([230, 195, 0])
    cube([1, 1, 1.92]);
  translate([231, 195, 0])
    cube([1, 1, 1.92]);
  translate([232, 195, 0])
    cube([1, 1, 1.92]);
  translate([233, 195, 0])
    cube([1, 1, 1.92]);
  translate([234, 195, 0])
    cube([1, 1, 1.88]);
  translate([235, 195, 0])
    cube([1, 1, 1.88]);
  translate([236, 195, 0])
    cube([1, 1, 1.92]);
  translate([237, 195, 0])
    cube([1, 1, 1.92]);
  translate([238, 195, 0])
    cube([1, 1, 1.96]);
  translate([239, 195, 0])
    cube([1, 1, 1.92]);
  translate([240, 195, 0])
    cube([1, 1, 1.96]);
  translate([241, 195, 0])
    cube([1, 1, 1.92]);
  translate([242, 195, 0])
    cube([1, 1, 1.92]);
  translate([243, 195, 0])
    cube([1, 1, 1.92]);
  translate([244, 195, 0])
    cube([1, 1, 1.92]);
  translate([245, 195, 0])
    cube([1, 1, 1.92]);
  translate([246, 195, 0])
    cube([1, 1, 1.92]);
  translate([0, 196, 0])
    cube([1, 1, 2.12]);
  translate([1, 196, 0])
    cube([1, 1, 2.08]);
  translate([2, 196, 0])
    cube([1, 1, 2.08]);
  translate([3, 196, 0])
    cube([1, 1, 2.08]);
  translate([4, 196, 0])
    cube([1, 1, 2.08]);
  translate([5, 196, 0])
    cube([1, 1, 2.08]);
  translate([6, 196, 0])
    cube([1, 1, 2.08]);
  translate([7, 196, 0])
    cube([1, 1, 2.08]);
  translate([8, 196, 0])
    cube([1, 1, 2.08]);
  translate([9, 196, 0])
    cube([1, 1, 2.08]);
  translate([10, 196, 0])
    cube([1, 1, 2.08]);
  translate([11, 196, 0])
    cube([1, 1, 2.08]);
  translate([12, 196, 0])
    cube([1, 1, 2.04]);
  translate([13, 196, 0])
    cube([1, 1, 2.04]);
  translate([14, 196, 0])
    cube([1, 1, 2.04]);
  translate([15, 196, 0])
    cube([1, 1, 2.04]);
  translate([16, 196, 0])
    cube([1, 1, 2.16]);
  translate([17, 196, 0])
    cube([1, 1, 2.08]);
  translate([18, 196, 0])
    cube([1, 1, 2.08]);
  translate([19, 196, 0])
    cube([1, 1, 2.08]);
  translate([20, 196, 0])
    cube([1, 1, 2.04]);
  translate([21, 196, 0])
    cube([1, 1, 2.04]);
  translate([22, 196, 0])
    cube([1, 1, 2.08]);
  translate([23, 196, 0])
    cube([1, 1, 2.08]);
  translate([24, 196, 0])
    cube([1, 1, 2.04]);
  translate([25, 196, 0])
    cube([1, 1, 2.04]);
  translate([26, 196, 0])
    cube([1, 1, 2.08]);
  translate([27, 196, 0])
    cube([1, 1, 2.08]);
  translate([28, 196, 0])
    cube([1, 1, 2.04]);
  translate([29, 196, 0])
    cube([1, 1, 2.04]);
  translate([30, 196, 0])
    cube([1, 1, 2.04]);
  translate([31, 196, 0])
    cube([1, 1, 2.04]);
  translate([32, 196, 0])
    cube([1, 1, 2.04]);
  translate([33, 196, 0])
    cube([1, 1, 2.04]);
  translate([34, 196, 0])
    cube([1, 1, 2.12]);
  translate([35, 196, 0])
    cube([1, 1, 2.04]);
  translate([36, 196, 0])
    cube([1, 1, 2.08]);
  translate([37, 196, 0])
    cube([1, 1, 2.08]);
  translate([38, 196, 0])
    cube([1, 1, 2.04]);
  translate([39, 196, 0])
    cube([1, 1, 2.04]);
  translate([40, 196, 0])
    cube([1, 1, 2.04]);
  translate([41, 196, 0])
    cube([1, 1, 2.04]);
  translate([42, 196, 0])
    cube([1, 1, 2.04]);
  translate([43, 196, 0])
    cube([1, 1, 2.04]);
  translate([44, 196, 0])
    cube([1, 1, 2.04]);
  translate([45, 196, 0])
    cube([1, 1, 2.04]);
  translate([46, 196, 0])
    cube([1, 1, 2.04]);
  translate([47, 196, 0])
    cube([1, 1, 2.04]);
  translate([48, 196, 0])
    cube([1, 1, 2.04]);
  translate([49, 196, 0])
    cube([1, 1, 2.04]);
  translate([50, 196, 0])
    cube([1, 1, 2.04]);
  translate([51, 196, 0])
    cube([1, 1, 2.04]);
  translate([52, 196, 0])
    cube([1, 1, 2.04]);
  translate([53, 196, 0])
    cube([1, 1, 2.04]);
  translate([54, 196, 0])
    cube([1, 1, 2.04]);
  translate([55, 196, 0])
    cube([1, 1, 2.04]);
  translate([56, 196, 0])
    cube([1, 1, 2.00]);
  translate([57, 196, 0])
    cube([1, 1, 2.04]);
  translate([58, 196, 0])
    cube([1, 1, 2.04]);
  translate([59, 196, 0])
    cube([1, 1, 2.04]);
  translate([60, 196, 0])
    cube([1, 1, 1.96]);
  translate([61, 196, 0])
    cube([1, 1, 2.04]);
  translate([62, 196, 0])
    cube([1, 1, 2.04]);
  translate([63, 196, 0])
    cube([1, 1, 2.04]);
  translate([64, 196, 0])
    cube([1, 1, 2.04]);
  translate([65, 196, 0])
    cube([1, 1, 2.00]);
  translate([66, 196, 0])
    cube([1, 1, 2.08]);
  translate([67, 196, 0])
    cube([1, 1, 1.84]);
  translate([68, 196, 0])
    cube([1, 1, 6.31]);
  translate([69, 196, 0])
    cube([1, 1, 5.14]);
  translate([70, 196, 0])
    cube([1, 1, 8.47]);
  translate([71, 196, 0])
    cube([1, 1, 7.61]);
  translate([72, 196, 0])
    cube([1, 1, 1.49]);
  translate([73, 196, 0])
    cube([1, 1, 1.65]);
  translate([74, 196, 0])
    cube([1, 1, 1.10]);
  translate([75, 196, 0])
    cube([1, 1, 5.65]);
  translate([76, 196, 0])
    cube([1, 1, 3.49]);
  translate([77, 196, 0])
    cube([1, 1, 1.25]);
  translate([78, 196, 0])
    cube([1, 1, 1.06]);
  translate([79, 196, 0])
    cube([1, 1, 1.45]);
  translate([80, 196, 0])
    cube([1, 1, 1.45]);
  translate([81, 196, 0])
    cube([1, 1, 1.41]);
  translate([82, 196, 0])
    cube([1, 1, 1.49]);
  translate([83, 196, 0])
    cube([1, 1, 1.69]);
  translate([84, 196, 0])
    cube([1, 1, 1.84]);
  translate([85, 196, 0])
    cube([1, 1, 1.76]);
  translate([86, 196, 0])
    cube([1, 1, 1.80]);
  translate([87, 196, 0])
    cube([1, 1, 1.73]);
  translate([88, 196, 0])
    cube([1, 1, 2.00]);
  translate([89, 196, 0])
    cube([1, 1, 1.96]);
  translate([90, 196, 0])
    cube([1, 1, 1.88]);
  translate([91, 196, 0])
    cube([1, 1, 2.08]);
  translate([92, 196, 0])
    cube([1, 1, 1.96]);
  translate([93, 196, 0])
    cube([1, 1, 1.92]);
  translate([94, 196, 0])
    cube([1, 1, 1.92]);
  translate([95, 196, 0])
    cube([1, 1, 1.80]);
  translate([96, 196, 0])
    cube([1, 1, 1.92]);
  translate([97, 196, 0])
    cube([1, 1, 1.65]);
  translate([98, 196, 0])
    cube([1, 1, 1.84]);
  translate([99, 196, 0])
    cube([1, 1, 1.65]);
  translate([100, 196, 0])
    cube([1, 1, 1.45]);
  translate([101, 196, 0])
    cube([1, 1, 1.37]);
  translate([102, 196, 0])
    cube([1, 1, 1.37]);
  translate([103, 196, 0])
    cube([1, 1, 1.18]);
  translate([104, 196, 0])
    cube([1, 1, 1.37]);
  translate([105, 196, 0])
    cube([1, 1, 1.33]);
  translate([106, 196, 0])
    cube([1, 1, 1.53]);
  translate([107, 196, 0])
    cube([1, 1, 1.53]);
  translate([108, 196, 0])
    cube([1, 1, 1.61]);
  translate([109, 196, 0])
    cube([1, 1, 1.29]);
  translate([110, 196, 0])
    cube([1, 1, 1.29]);
  translate([111, 196, 0])
    cube([1, 1, 1.49]);
  translate([112, 196, 0])
    cube([1, 1, 1.37]);
  translate([113, 196, 0])
    cube([1, 1, 1.45]);
  translate([114, 196, 0])
    cube([1, 1, 1.45]);
  translate([115, 196, 0])
    cube([1, 1, 1.92]);
  translate([116, 196, 0])
    cube([1, 1, 2.27]);
  translate([117, 196, 0])
    cube([1, 1, 1.88]);
  translate([118, 196, 0])
    cube([1, 1, 1.53]);
  translate([119, 196, 0])
    cube([1, 1, 1.25]);
  translate([120, 196, 0])
    cube([1, 1, 2.43]);
  translate([121, 196, 0])
    cube([1, 1, 2.35]);
  translate([122, 196, 0])
    cube([1, 1, 1.57]);
  translate([123, 196, 0])
    cube([1, 1, 2.08]);
  translate([124, 196, 0])
    cube([1, 1, 1.73]);
  translate([125, 196, 0])
    cube([1, 1, 2.51]);
  translate([126, 196, 0])
    cube([1, 1, 1.49]);
  translate([127, 196, 0])
    cube([1, 1, 2.12]);
  translate([128, 196, 0])
    cube([1, 1, 2.20]);
  translate([129, 196, 0])
    cube([1, 1, 2.12]);
  translate([130, 196, 0])
    cube([1, 1, 1.76]);
  translate([131, 196, 0])
    cube([1, 1, 1.76]);
  translate([132, 196, 0])
    cube([1, 1, 1.80]);
  translate([133, 196, 0])
    cube([1, 1, 2.00]);
  translate([134, 196, 0])
    cube([1, 1, 1.84]);
  translate([135, 196, 0])
    cube([1, 1, 2.43]);
  translate([136, 196, 0])
    cube([1, 1, 2.27]);
  translate([137, 196, 0])
    cube([1, 1, 3.02]);
  translate([138, 196, 0])
    cube([1, 1, 2.55]);
  translate([139, 196, 0])
    cube([1, 1, 2.04]);
  translate([140, 196, 0])
    cube([1, 1, 2.16]);
  translate([141, 196, 0])
    cube([1, 1, 2.78]);
  translate([142, 196, 0])
    cube([1, 1, 1.33]);
  translate([143, 196, 0])
    cube([1, 1, 2.51]);
  translate([144, 196, 0])
    cube([1, 1, 2.20]);
  translate([145, 196, 0])
    cube([1, 1, 2.59]);
  translate([146, 196, 0])
    cube([1, 1, 2.16]);
  translate([147, 196, 0])
    cube([1, 1, 2.12]);
  translate([148, 196, 0])
    cube([1, 1, 2.00]);
  translate([149, 196, 0])
    cube([1, 1, 2.00]);
  translate([150, 196, 0])
    cube([1, 1, 1.76]);
  translate([151, 196, 0])
    cube([1, 1, 1.88]);
  translate([152, 196, 0])
    cube([1, 1, 1.92]);
  translate([153, 196, 0])
    cube([1, 1, 1.92]);
  translate([154, 196, 0])
    cube([1, 1, 2.71]);
  translate([155, 196, 0])
    cube([1, 1, 1.88]);
  translate([156, 196, 0])
    cube([1, 1, 1.92]);
  translate([157, 196, 0])
    cube([1, 1, 1.92]);
  translate([158, 196, 0])
    cube([1, 1, 1.92]);
  translate([159, 196, 0])
    cube([1, 1, 1.92]);
  translate([160, 196, 0])
    cube([1, 1, 1.88]);
  translate([161, 196, 0])
    cube([1, 1, 1.88]);
  translate([162, 196, 0])
    cube([1, 1, 1.92]);
  translate([163, 196, 0])
    cube([1, 1, 1.92]);
  translate([164, 196, 0])
    cube([1, 1, 1.92]);
  translate([165, 196, 0])
    cube([1, 1, 1.92]);
  translate([166, 196, 0])
    cube([1, 1, 1.92]);
  translate([167, 196, 0])
    cube([1, 1, 1.92]);
  translate([168, 196, 0])
    cube([1, 1, 1.96]);
  translate([169, 196, 0])
    cube([1, 1, 1.84]);
  translate([170, 196, 0])
    cube([1, 1, 1.92]);
  translate([171, 196, 0])
    cube([1, 1, 1.92]);
  translate([172, 196, 0])
    cube([1, 1, 1.92]);
  translate([173, 196, 0])
    cube([1, 1, 1.92]);
  translate([174, 196, 0])
    cube([1, 1, 1.92]);
  translate([175, 196, 0])
    cube([1, 1, 1.92]);
  translate([176, 196, 0])
    cube([1, 1, 1.92]);
  translate([177, 196, 0])
    cube([1, 1, 1.80]);
  translate([178, 196, 0])
    cube([1, 1, 1.84]);
  translate([179, 196, 0])
    cube([1, 1, 1.92]);
  translate([180, 196, 0])
    cube([1, 1, 1.84]);
  translate([181, 196, 0])
    cube([1, 1, 1.02]);
  translate([182, 196, 0])
    cube([1, 1, 0.86]);
  translate([183, 196, 0])
    cube([1, 1, 0.82]);
  translate([184, 196, 0])
    cube([1, 1, 2.27]);
  translate([185, 196, 0])
    cube([1, 1, 1.25]);
  translate([186, 196, 0])
    cube([1, 1, 1.49]);
  translate([187, 196, 0])
    cube([1, 1, 0.59]);
  translate([188, 196, 0])
    cube([1, 1, 0.43]);
  translate([189, 196, 0])
    cube([1, 1, 0.43]);
  translate([190, 196, 0])
    cube([1, 1, 0.39]);
  translate([191, 196, 0])
    cube([1, 1, 0.47]);
  translate([192, 196, 0])
    cube([1, 1, 5.37]);
  translate([193, 196, 0])
    cube([1, 1, 5.18]);
  translate([194, 196, 0])
    cube([1, 1, 5.84]);
  translate([195, 196, 0])
    cube([1, 1, 6.12]);
  translate([196, 196, 0])
    cube([1, 1, 5.65]);
  translate([197, 196, 0])
    cube([1, 1, 0.51]);
  translate([198, 196, 0])
    cube([1, 1, 0.43]);
  translate([199, 196, 0])
    cube([1, 1, 0.39]);
  translate([200, 196, 0])
    cube([1, 1, 0.47]);
  translate([201, 196, 0])
    cube([1, 1, 0.39]);
  translate([202, 196, 0])
    cube([1, 1, 0.39]);
  translate([203, 196, 0])
    cube([1, 1, 0.47]);
  translate([204, 196, 0])
    cube([1, 1, 2.08]);
  translate([205, 196, 0])
    cube([1, 1, 1.92]);
  translate([206, 196, 0])
    cube([1, 1, 2.20]);
  translate([207, 196, 0])
    cube([1, 1, 1.22]);
  translate([208, 196, 0])
    cube([1, 1, 0.31]);
  translate([209, 196, 0])
    cube([1, 1, 0.43]);
  translate([210, 196, 0])
    cube([1, 1, 0.35]);
  translate([211, 196, 0])
    cube([1, 1, 1.02]);
  translate([212, 196, 0])
    cube([1, 1, 0.59]);
  translate([213, 196, 0])
    cube([1, 1, 1.69]);
  translate([214, 196, 0])
    cube([1, 1, 1.14]);
  translate([215, 196, 0])
    cube([1, 1, 1.41]);
  translate([216, 196, 0])
    cube([1, 1, 2.75]);
  translate([217, 196, 0])
    cube([1, 1, 0.90]);
  translate([218, 196, 0])
    cube([1, 1, 0.94]);
  translate([219, 196, 0])
    cube([1, 1, 1.06]);
  translate([220, 196, 0])
    cube([1, 1, 1.25]);
  translate([221, 196, 0])
    cube([1, 1, 2.75]);
  translate([222, 196, 0])
    cube([1, 1, 2.90]);
  translate([223, 196, 0])
    cube([1, 1, 3.18]);
  translate([224, 196, 0])
    cube([1, 1, 2.04]);
  translate([225, 196, 0])
    cube([1, 1, 2.31]);
  translate([226, 196, 0])
    cube([1, 1, 2.39]);
  translate([227, 196, 0])
    cube([1, 1, 2.39]);
  translate([228, 196, 0])
    cube([1, 1, 1.84]);
  translate([229, 196, 0])
    cube([1, 1, 1.92]);
  translate([230, 196, 0])
    cube([1, 1, 1.92]);
  translate([231, 196, 0])
    cube([1, 1, 1.96]);
  translate([232, 196, 0])
    cube([1, 1, 1.92]);
  translate([233, 196, 0])
    cube([1, 1, 1.92]);
  translate([234, 196, 0])
    cube([1, 1, 1.92]);
  translate([235, 196, 0])
    cube([1, 1, 1.92]);
  translate([236, 196, 0])
    cube([1, 1, 1.92]);
  translate([237, 196, 0])
    cube([1, 1, 1.92]);
  translate([238, 196, 0])
    cube([1, 1, 1.92]);
  translate([239, 196, 0])
    cube([1, 1, 1.92]);
  translate([240, 196, 0])
    cube([1, 1, 1.92]);
  translate([241, 196, 0])
    cube([1, 1, 1.92]);
  translate([242, 196, 0])
    cube([1, 1, 1.92]);
  translate([243, 196, 0])
    cube([1, 1, 1.92]);
  translate([244, 196, 0])
    cube([1, 1, 1.92]);
  translate([245, 196, 0])
    cube([1, 1, 1.92]);
  translate([246, 196, 0])
    cube([1, 1, 1.92]);
  translate([0, 197, 0])
    cube([1, 1, 2.12]);
  translate([1, 197, 0])
    cube([1, 1, 2.08]);
  translate([2, 197, 0])
    cube([1, 1, 2.08]);
  translate([3, 197, 0])
    cube([1, 1, 2.08]);
  translate([4, 197, 0])
    cube([1, 1, 2.08]);
  translate([5, 197, 0])
    cube([1, 1, 2.08]);
  translate([6, 197, 0])
    cube([1, 1, 2.08]);
  translate([7, 197, 0])
    cube([1, 1, 2.08]);
  translate([8, 197, 0])
    cube([1, 1, 2.08]);
  translate([9, 197, 0])
    cube([1, 1, 2.08]);
  translate([10, 197, 0])
    cube([1, 1, 2.08]);
  translate([11, 197, 0])
    cube([1, 1, 2.08]);
  translate([12, 197, 0])
    cube([1, 1, 2.08]);
  translate([13, 197, 0])
    cube([1, 1, 2.08]);
  translate([14, 197, 0])
    cube([1, 1, 2.08]);
  translate([15, 197, 0])
    cube([1, 1, 2.08]);
  translate([16, 197, 0])
    cube([1, 1, 2.08]);
  translate([17, 197, 0])
    cube([1, 1, 2.08]);
  translate([18, 197, 0])
    cube([1, 1, 2.08]);
  translate([19, 197, 0])
    cube([1, 1, 2.08]);
  translate([20, 197, 0])
    cube([1, 1, 2.04]);
  translate([21, 197, 0])
    cube([1, 1, 2.08]);
  translate([22, 197, 0])
    cube([1, 1, 2.08]);
  translate([23, 197, 0])
    cube([1, 1, 2.08]);
  translate([24, 197, 0])
    cube([1, 1, 2.08]);
  translate([25, 197, 0])
    cube([1, 1, 2.00]);
  translate([26, 197, 0])
    cube([1, 1, 2.04]);
  translate([27, 197, 0])
    cube([1, 1, 2.08]);
  translate([28, 197, 0])
    cube([1, 1, 2.08]);
  translate([29, 197, 0])
    cube([1, 1, 2.08]);
  translate([30, 197, 0])
    cube([1, 1, 2.08]);
  translate([31, 197, 0])
    cube([1, 1, 2.04]);
  translate([32, 197, 0])
    cube([1, 1, 2.04]);
  translate([33, 197, 0])
    cube([1, 1, 2.08]);
  translate([34, 197, 0])
    cube([1, 1, 2.08]);
  translate([35, 197, 0])
    cube([1, 1, 2.12]);
  translate([36, 197, 0])
    cube([1, 1, 2.04]);
  translate([37, 197, 0])
    cube([1, 1, 2.12]);
  translate([38, 197, 0])
    cube([1, 1, 2.08]);
  translate([39, 197, 0])
    cube([1, 1, 2.12]);
  translate([40, 197, 0])
    cube([1, 1, 2.08]);
  translate([41, 197, 0])
    cube([1, 1, 2.04]);
  translate([42, 197, 0])
    cube([1, 1, 2.08]);
  translate([43, 197, 0])
    cube([1, 1, 2.04]);
  translate([44, 197, 0])
    cube([1, 1, 2.04]);
  translate([45, 197, 0])
    cube([1, 1, 2.04]);
  translate([46, 197, 0])
    cube([1, 1, 2.04]);
  translate([47, 197, 0])
    cube([1, 1, 2.04]);
  translate([48, 197, 0])
    cube([1, 1, 2.04]);
  translate([49, 197, 0])
    cube([1, 1, 2.04]);
  translate([50, 197, 0])
    cube([1, 1, 2.04]);
  translate([51, 197, 0])
    cube([1, 1, 2.04]);
  translate([52, 197, 0])
    cube([1, 1, 2.04]);
  translate([53, 197, 0])
    cube([1, 1, 2.04]);
  translate([54, 197, 0])
    cube([1, 1, 2.04]);
  translate([55, 197, 0])
    cube([1, 1, 2.04]);
  translate([56, 197, 0])
    cube([1, 1, 2.04]);
  translate([57, 197, 0])
    cube([1, 1, 2.00]);
  translate([58, 197, 0])
    cube([1, 1, 2.04]);
  translate([59, 197, 0])
    cube([1, 1, 2.00]);
  translate([60, 197, 0])
    cube([1, 1, 2.04]);
  translate([61, 197, 0])
    cube([1, 1, 2.04]);
  translate([62, 197, 0])
    cube([1, 1, 2.04]);
  translate([63, 197, 0])
    cube([1, 1, 2.04]);
  translate([64, 197, 0])
    cube([1, 1, 2.04]);
  translate([65, 197, 0])
    cube([1, 1, 2.00]);
  translate([66, 197, 0])
    cube([1, 1, 2.00]);
  translate([67, 197, 0])
    cube([1, 1, 1.73]);
  translate([68, 197, 0])
    cube([1, 1, 5.80]);
  translate([69, 197, 0])
    cube([1, 1, 5.92]);
  translate([70, 197, 0])
    cube([1, 1, 8.31]);
  translate([71, 197, 0])
    cube([1, 1, 7.14]);
  translate([72, 197, 0])
    cube([1, 1, 6.55]);
  translate([73, 197, 0])
    cube([1, 1, 4.35]);
  translate([74, 197, 0])
    cube([1, 1, 2.27]);
  translate([75, 197, 0])
    cube([1, 1, 4.20]);
  translate([76, 197, 0])
    cube([1, 1, 1.49]);
  translate([77, 197, 0])
    cube([1, 1, 1.14]);
  translate([78, 197, 0])
    cube([1, 1, 1.25]);
  translate([79, 197, 0])
    cube([1, 1, 1.69]);
  translate([80, 197, 0])
    cube([1, 1, 1.96]);
  translate([81, 197, 0])
    cube([1, 1, 1.33]);
  translate([82, 197, 0])
    cube([1, 1, 1.49]);
  translate([83, 197, 0])
    cube([1, 1, 1.73]);
  translate([84, 197, 0])
    cube([1, 1, 2.04]);
  translate([85, 197, 0])
    cube([1, 1, 1.96]);
  translate([86, 197, 0])
    cube([1, 1, 1.73]);
  translate([87, 197, 0])
    cube([1, 1, 2.51]);
  translate([88, 197, 0])
    cube([1, 1, 2.08]);
  translate([89, 197, 0])
    cube([1, 1, 2.08]);
  translate([90, 197, 0])
    cube([1, 1, 2.12]);
  translate([91, 197, 0])
    cube([1, 1, 2.12]);
  translate([92, 197, 0])
    cube([1, 1, 1.88]);
  translate([93, 197, 0])
    cube([1, 1, 2.16]);
  translate([94, 197, 0])
    cube([1, 1, 1.96]);
  translate([95, 197, 0])
    cube([1, 1, 1.73]);
  translate([96, 197, 0])
    cube([1, 1, 1.61]);
  translate([97, 197, 0])
    cube([1, 1, 1.76]);
  translate([98, 197, 0])
    cube([1, 1, 2.00]);
  translate([99, 197, 0])
    cube([1, 1, 1.84]);
  translate([100, 197, 0])
    cube([1, 1, 1.41]);
  translate([101, 197, 0])
    cube([1, 1, 1.57]);
  translate([102, 197, 0])
    cube([1, 1, 1.22]);
  translate([103, 197, 0])
    cube([1, 1, 1.25]);
  translate([104, 197, 0])
    cube([1, 1, 1.76]);
  translate([105, 197, 0])
    cube([1, 1, 1.29]);
  translate([106, 197, 0])
    cube([1, 1, 1.22]);
  translate([107, 197, 0])
    cube([1, 1, 1.45]);
  translate([108, 197, 0])
    cube([1, 1, 1.65]);
  translate([109, 197, 0])
    cube([1, 1, 2.04]);
  translate([110, 197, 0])
    cube([1, 1, 1.88]);
  translate([111, 197, 0])
    cube([1, 1, 2.27]);
  translate([112, 197, 0])
    cube([1, 1, 1.73]);
  translate([113, 197, 0])
    cube([1, 1, 1.37]);
  translate([114, 197, 0])
    cube([1, 1, 1.73]);
  translate([115, 197, 0])
    cube([1, 1, 1.33]);
  translate([116, 197, 0])
    cube([1, 1, 1.84]);
  translate([117, 197, 0])
    cube([1, 1, 1.29]);
  translate([118, 197, 0])
    cube([1, 1, 1.80]);
  translate([119, 197, 0])
    cube([1, 1, 1.92]);
  translate([120, 197, 0])
    cube([1, 1, 1.73]);
  translate([121, 197, 0])
    cube([1, 1, 1.41]);
  translate([122, 197, 0])
    cube([1, 1, 1.96]);
  translate([123, 197, 0])
    cube([1, 1, 2.20]);
  translate([124, 197, 0])
    cube([1, 1, 1.53]);
  translate([125, 197, 0])
    cube([1, 1, 2.00]);
  translate([126, 197, 0])
    cube([1, 1, 1.69]);
  translate([127, 197, 0])
    cube([1, 1, 1.61]);
  translate([128, 197, 0])
    cube([1, 1, 2.59]);
  translate([129, 197, 0])
    cube([1, 1, 2.00]);
  translate([130, 197, 0])
    cube([1, 1, 1.80]);
  translate([131, 197, 0])
    cube([1, 1, 1.88]);
  translate([132, 197, 0])
    cube([1, 1, 1.76]);
  translate([133, 197, 0])
    cube([1, 1, 2.12]);
  translate([134, 197, 0])
    cube([1, 1, 2.75]);
  translate([135, 197, 0])
    cube([1, 1, 2.16]);
  translate([136, 197, 0])
    cube([1, 1, 2.59]);
  translate([137, 197, 0])
    cube([1, 1, 2.20]);
  translate([138, 197, 0])
    cube([1, 1, 3.02]);
  translate([139, 197, 0])
    cube([1, 1, 2.59]);
  translate([140, 197, 0])
    cube([1, 1, 2.08]);
  translate([141, 197, 0])
    cube([1, 1, 2.27]);
  translate([142, 197, 0])
    cube([1, 1, 2.27]);
  translate([143, 197, 0])
    cube([1, 1, 2.55]);
  translate([144, 197, 0])
    cube([1, 1, 2.51]);
  translate([145, 197, 0])
    cube([1, 1, 1.92]);
  translate([146, 197, 0])
    cube([1, 1, 2.20]);
  translate([147, 197, 0])
    cube([1, 1, 2.24]);
  translate([148, 197, 0])
    cube([1, 1, 1.96]);
  translate([149, 197, 0])
    cube([1, 1, 2.08]);
  translate([150, 197, 0])
    cube([1, 1, 1.92]);
  translate([151, 197, 0])
    cube([1, 1, 1.96]);
  translate([152, 197, 0])
    cube([1, 1, 1.88]);
  translate([153, 197, 0])
    cube([1, 1, 1.88]);
  translate([154, 197, 0])
    cube([1, 1, 2.00]);
  translate([155, 197, 0])
    cube([1, 1, 1.80]);
  translate([156, 197, 0])
    cube([1, 1, 1.88]);
  translate([157, 197, 0])
    cube([1, 1, 1.92]);
  translate([158, 197, 0])
    cube([1, 1, 1.88]);
  translate([159, 197, 0])
    cube([1, 1, 1.92]);
  translate([160, 197, 0])
    cube([1, 1, 1.92]);
  translate([161, 197, 0])
    cube([1, 1, 1.92]);
  translate([162, 197, 0])
    cube([1, 1, 1.92]);
  translate([163, 197, 0])
    cube([1, 1, 1.88]);
  translate([164, 197, 0])
    cube([1, 1, 1.92]);
  translate([165, 197, 0])
    cube([1, 1, 1.92]);
  translate([166, 197, 0])
    cube([1, 1, 1.92]);
  translate([167, 197, 0])
    cube([1, 1, 1.96]);
  translate([168, 197, 0])
    cube([1, 1, 1.92]);
  translate([169, 197, 0])
    cube([1, 1, 1.88]);
  translate([170, 197, 0])
    cube([1, 1, 1.92]);
  translate([171, 197, 0])
    cube([1, 1, 1.92]);
  translate([172, 197, 0])
    cube([1, 1, 1.92]);
  translate([173, 197, 0])
    cube([1, 1, 1.92]);
  translate([174, 197, 0])
    cube([1, 1, 1.84]);
  translate([175, 197, 0])
    cube([1, 1, 1.92]);
  translate([176, 197, 0])
    cube([1, 1, 1.92]);
  translate([177, 197, 0])
    cube([1, 1, 1.88]);
  translate([178, 197, 0])
    cube([1, 1, 1.92]);
  translate([179, 197, 0])
    cube([1, 1, 1.92]);
  translate([180, 197, 0])
    cube([1, 1, 1.92]);
  translate([181, 197, 0])
    cube([1, 1, 1.92]);
  translate([182, 197, 0])
    cube([1, 1, 1.33]);
  translate([183, 197, 0])
    cube([1, 1, 0.90]);
  translate([184, 197, 0])
    cube([1, 1, 3.02]);
  translate([185, 197, 0])
    cube([1, 1, 1.73]);
  translate([186, 197, 0])
    cube([1, 1, 0.43]);
  translate([187, 197, 0])
    cube([1, 1, 0.47]);
  translate([188, 197, 0])
    cube([1, 1, 0.43]);
  translate([189, 197, 0])
    cube([1, 1, 0.43]);
  translate([190, 197, 0])
    cube([1, 1, 0.43]);
  translate([191, 197, 0])
    cube([1, 1, 0.43]);
  translate([192, 197, 0])
    cube([1, 1, 2.86]);
  translate([193, 197, 0])
    cube([1, 1, 4.59]);
  translate([194, 197, 0])
    cube([1, 1, 5.57]);
  translate([195, 197, 0])
    cube([1, 1, 6.86]);
  translate([196, 197, 0])
    cube([1, 1, 6.35]);
  translate([197, 197, 0])
    cube([1, 1, 0.31]);
  translate([198, 197, 0])
    cube([1, 1, 0.39]);
  translate([199, 197, 0])
    cube([1, 1, 0.39]);
  translate([200, 197, 0])
    cube([1, 1, 0.39]);
  translate([201, 197, 0])
    cube([1, 1, 0.43]);
  translate([202, 197, 0])
    cube([1, 1, 0.31]);
  translate([203, 197, 0])
    cube([1, 1, 0.75]);
  translate([204, 197, 0])
    cube([1, 1, 1.96]);
  translate([205, 197, 0])
    cube([1, 1, 2.04]);
  translate([206, 197, 0])
    cube([1, 1, 2.00]);
  translate([207, 197, 0])
    cube([1, 1, 1.88]);
  translate([208, 197, 0])
    cube([1, 1, 0.39]);
  translate([209, 197, 0])
    cube([1, 1, 0.63]);
  translate([210, 197, 0])
    cube([1, 1, 0.90]);
  translate([211, 197, 0])
    cube([1, 1, 0.47]);
  translate([212, 197, 0])
    cube([1, 1, 0.71]);
  translate([213, 197, 0])
    cube([1, 1, 0.39]);
  translate([214, 197, 0])
    cube([1, 1, 1.29]);
  translate([215, 197, 0])
    cube([1, 1, 1.41]);
  translate([216, 197, 0])
    cube([1, 1, 1.10]);
  translate([217, 197, 0])
    cube([1, 1, 2.39]);
  translate([218, 197, 0])
    cube([1, 1, 1.69]);
  translate([219, 197, 0])
    cube([1, 1, 0.90]);
  translate([220, 197, 0])
    cube([1, 1, 1.06]);
  translate([221, 197, 0])
    cube([1, 1, 1.06]);
  translate([222, 197, 0])
    cube([1, 1, 1.41]);
  translate([223, 197, 0])
    cube([1, 1, 2.86]);
  translate([224, 197, 0])
    cube([1, 1, 2.94]);
  translate([225, 197, 0])
    cube([1, 1, 4.16]);
  translate([226, 197, 0])
    cube([1, 1, 2.63]);
  translate([227, 197, 0])
    cube([1, 1, 1.84]);
  translate([228, 197, 0])
    cube([1, 1, 2.31]);
  translate([229, 197, 0])
    cube([1, 1, 2.24]);
  translate([230, 197, 0])
    cube([1, 1, 1.92]);
  translate([231, 197, 0])
    cube([1, 1, 2.27]);
  translate([232, 197, 0])
    cube([1, 1, 1.96]);
  translate([233, 197, 0])
    cube([1, 1, 1.92]);
  translate([234, 197, 0])
    cube([1, 1, 1.92]);
  translate([235, 197, 0])
    cube([1, 1, 1.92]);
  translate([236, 197, 0])
    cube([1, 1, 1.92]);
  translate([237, 197, 0])
    cube([1, 1, 1.92]);
  translate([238, 197, 0])
    cube([1, 1, 1.92]);
  translate([239, 197, 0])
    cube([1, 1, 1.92]);
  translate([240, 197, 0])
    cube([1, 1, 1.92]);
  translate([241, 197, 0])
    cube([1, 1, 1.92]);
  translate([242, 197, 0])
    cube([1, 1, 1.92]);
  translate([243, 197, 0])
    cube([1, 1, 1.92]);
  translate([244, 197, 0])
    cube([1, 1, 1.92]);
  translate([245, 197, 0])
    cube([1, 1, 1.92]);
  translate([246, 197, 0])
    cube([1, 1, 1.92]);
  translate([0, 198, 0])
    cube([1, 1, 2.12]);
  translate([1, 198, 0])
    cube([1, 1, 2.08]);
  translate([2, 198, 0])
    cube([1, 1, 2.08]);
  translate([3, 198, 0])
    cube([1, 1, 2.08]);
  translate([4, 198, 0])
    cube([1, 1, 2.00]);
  translate([5, 198, 0])
    cube([1, 1, 2.12]);
  translate([6, 198, 0])
    cube([1, 1, 2.08]);
  translate([7, 198, 0])
    cube([1, 1, 2.08]);
  translate([8, 198, 0])
    cube([1, 1, 2.08]);
  translate([9, 198, 0])
    cube([1, 1, 2.08]);
  translate([10, 198, 0])
    cube([1, 1, 2.08]);
  translate([11, 198, 0])
    cube([1, 1, 2.08]);
  translate([12, 198, 0])
    cube([1, 1, 2.08]);
  translate([13, 198, 0])
    cube([1, 1, 2.08]);
  translate([14, 198, 0])
    cube([1, 1, 2.08]);
  translate([15, 198, 0])
    cube([1, 1, 2.08]);
  translate([16, 198, 0])
    cube([1, 1, 2.08]);
  translate([17, 198, 0])
    cube([1, 1, 2.08]);
  translate([18, 198, 0])
    cube([1, 1, 2.08]);
  translate([19, 198, 0])
    cube([1, 1, 2.08]);
  translate([20, 198, 0])
    cube([1, 1, 2.04]);
  translate([21, 198, 0])
    cube([1, 1, 2.08]);
  translate([22, 198, 0])
    cube([1, 1, 2.08]);
  translate([23, 198, 0])
    cube([1, 1, 2.08]);
  translate([24, 198, 0])
    cube([1, 1, 2.08]);
  translate([25, 198, 0])
    cube([1, 1, 2.04]);
  translate([26, 198, 0])
    cube([1, 1, 2.12]);
  translate([27, 198, 0])
    cube([1, 1, 2.08]);
  translate([28, 198, 0])
    cube([1, 1, 2.08]);
  translate([29, 198, 0])
    cube([1, 1, 2.08]);
  translate([30, 198, 0])
    cube([1, 1, 2.08]);
  translate([31, 198, 0])
    cube([1, 1, 2.04]);
  translate([32, 198, 0])
    cube([1, 1, 2.04]);
  translate([33, 198, 0])
    cube([1, 1, 2.08]);
  translate([34, 198, 0])
    cube([1, 1, 2.08]);
  translate([35, 198, 0])
    cube([1, 1, 2.12]);
  translate([36, 198, 0])
    cube([1, 1, 2.04]);
  translate([37, 198, 0])
    cube([1, 1, 2.12]);
  translate([38, 198, 0])
    cube([1, 1, 2.08]);
  translate([39, 198, 0])
    cube([1, 1, 2.12]);
  translate([40, 198, 0])
    cube([1, 1, 2.08]);
  translate([41, 198, 0])
    cube([1, 1, 2.04]);
  translate([42, 198, 0])
    cube([1, 1, 2.08]);
  translate([43, 198, 0])
    cube([1, 1, 2.04]);
  translate([44, 198, 0])
    cube([1, 1, 2.04]);
  translate([45, 198, 0])
    cube([1, 1, 2.04]);
  translate([46, 198, 0])
    cube([1, 1, 2.08]);
  translate([47, 198, 0])
    cube([1, 1, 2.08]);
  translate([48, 198, 0])
    cube([1, 1, 2.08]);
  translate([49, 198, 0])
    cube([1, 1, 2.04]);
  translate([50, 198, 0])
    cube([1, 1, 2.04]);
  translate([51, 198, 0])
    cube([1, 1, 2.04]);
  translate([52, 198, 0])
    cube([1, 1, 2.04]);
  translate([53, 198, 0])
    cube([1, 1, 2.04]);
  translate([54, 198, 0])
    cube([1, 1, 2.04]);
  translate([55, 198, 0])
    cube([1, 1, 2.04]);
  translate([56, 198, 0])
    cube([1, 1, 2.04]);
  translate([57, 198, 0])
    cube([1, 1, 2.00]);
  translate([58, 198, 0])
    cube([1, 1, 2.04]);
  translate([59, 198, 0])
    cube([1, 1, 2.00]);
  translate([60, 198, 0])
    cube([1, 1, 2.04]);
  translate([61, 198, 0])
    cube([1, 1, 2.04]);
  translate([62, 198, 0])
    cube([1, 1, 2.04]);
  translate([63, 198, 0])
    cube([1, 1, 2.04]);
  translate([64, 198, 0])
    cube([1, 1, 2.04]);
  translate([65, 198, 0])
    cube([1, 1, 1.96]);
  translate([66, 198, 0])
    cube([1, 1, 1.96]);
  translate([67, 198, 0])
    cube([1, 1, 4.94]);
  translate([68, 198, 0])
    cube([1, 1, 6.86]);
  translate([69, 198, 0])
    cube([1, 1, 5.96]);
  translate([70, 198, 0])
    cube([1, 1, 4.12]);
  translate([71, 198, 0])
    cube([1, 1, 6.98]);
  translate([72, 198, 0])
    cube([1, 1, 6.47]);
  translate([73, 198, 0])
    cube([1, 1, 2.27]);
  translate([74, 198, 0])
    cube([1, 1, 3.29]);
  translate([75, 198, 0])
    cube([1, 1, 4.75]);
  translate([76, 198, 0])
    cube([1, 1, 1.45]);
  translate([77, 198, 0])
    cube([1, 1, 1.49]);
  translate([78, 198, 0])
    cube([1, 1, 1.37]);
  translate([79, 198, 0])
    cube([1, 1, 1.57]);
  translate([80, 198, 0])
    cube([1, 1, 1.88]);
  translate([81, 198, 0])
    cube([1, 1, 1.45]);
  translate([82, 198, 0])
    cube([1, 1, 1.57]);
  translate([83, 198, 0])
    cube([1, 1, 1.69]);
  translate([84, 198, 0])
    cube([1, 1, 1.96]);
  translate([85, 198, 0])
    cube([1, 1, 1.61]);
  translate([86, 198, 0])
    cube([1, 1, 1.96]);
  translate([87, 198, 0])
    cube([1, 1, 2.08]);
  translate([88, 198, 0])
    cube([1, 1, 1.88]);
  translate([89, 198, 0])
    cube([1, 1, 1.61]);
  translate([90, 198, 0])
    cube([1, 1, 1.53]);
  translate([91, 198, 0])
    cube([1, 1, 1.53]);
  translate([92, 198, 0])
    cube([1, 1, 1.96]);
  translate([93, 198, 0])
    cube([1, 1, 2.00]);
  translate([94, 198, 0])
    cube([1, 1, 2.20]);
  translate([95, 198, 0])
    cube([1, 1, 2.27]);
  translate([96, 198, 0])
    cube([1, 1, 2.04]);
  translate([97, 198, 0])
    cube([1, 1, 1.96]);
  translate([98, 198, 0])
    cube([1, 1, 2.04]);
  translate([99, 198, 0])
    cube([1, 1, 1.57]);
  translate([100, 198, 0])
    cube([1, 1, 1.65]);
  translate([101, 198, 0])
    cube([1, 1, 1.65]);
  translate([102, 198, 0])
    cube([1, 1, 1.92]);
  translate([103, 198, 0])
    cube([1, 1, 1.84]);
  translate([104, 198, 0])
    cube([1, 1, 1.69]);
  translate([105, 198, 0])
    cube([1, 1, 1.76]);
  translate([106, 198, 0])
    cube([1, 1, 1.88]);
  translate([107, 198, 0])
    cube([1, 1, 1.69]);
  translate([108, 198, 0])
    cube([1, 1, 1.76]);
  translate([109, 198, 0])
    cube([1, 1, 1.65]);
  translate([110, 198, 0])
    cube([1, 1, 1.69]);
  translate([111, 198, 0])
    cube([1, 1, 1.02]);
  translate([112, 198, 0])
    cube([1, 1, 1.57]);
  translate([113, 198, 0])
    cube([1, 1, 1.49]);
  translate([114, 198, 0])
    cube([1, 1, 1.41]);
  translate([115, 198, 0])
    cube([1, 1, 1.37]);
  translate([116, 198, 0])
    cube([1, 1, 1.84]);
  translate([117, 198, 0])
    cube([1, 1, 2.12]);
  translate([118, 198, 0])
    cube([1, 1, 1.80]);
  translate([119, 198, 0])
    cube([1, 1, 1.73]);
  translate([120, 198, 0])
    cube([1, 1, 1.10]);
  translate([121, 198, 0])
    cube([1, 1, 1.80]);
  translate([122, 198, 0])
    cube([1, 1, 2.12]);
  translate([123, 198, 0])
    cube([1, 1, 1.33]);
  translate([124, 198, 0])
    cube([1, 1, 1.88]);
  translate([125, 198, 0])
    cube([1, 1, 1.76]);
  translate([126, 198, 0])
    cube([1, 1, 1.73]);
  translate([127, 198, 0])
    cube([1, 1, 2.00]);
  translate([128, 198, 0])
    cube([1, 1, 2.31]);
  translate([129, 198, 0])
    cube([1, 1, 2.67]);
  translate([130, 198, 0])
    cube([1, 1, 1.65]);
  translate([131, 198, 0])
    cube([1, 1, 2.35]);
  translate([132, 198, 0])
    cube([1, 1, 1.96]);
  translate([133, 198, 0])
    cube([1, 1, 2.04]);
  translate([134, 198, 0])
    cube([1, 1, 3.06]);
  translate([135, 198, 0])
    cube([1, 1, 2.31]);
  translate([136, 198, 0])
    cube([1, 1, 2.78]);
  translate([137, 198, 0])
    cube([1, 1, 2.51]);
  translate([138, 198, 0])
    cube([1, 1, 2.04]);
  translate([139, 198, 0])
    cube([1, 1, 3.02]);
  translate([140, 198, 0])
    cube([1, 1, 1.45]);
  translate([141, 198, 0])
    cube([1, 1, 2.35]);
  translate([142, 198, 0])
    cube([1, 1, 2.24]);
  translate([143, 198, 0])
    cube([1, 1, 2.86]);
  translate([144, 198, 0])
    cube([1, 1, 2.51]);
  translate([145, 198, 0])
    cube([1, 1, 2.24]);
  translate([146, 198, 0])
    cube([1, 1, 2.47]);
  translate([147, 198, 0])
    cube([1, 1, 2.08]);
  translate([148, 198, 0])
    cube([1, 1, 2.27]);
  translate([149, 198, 0])
    cube([1, 1, 1.88]);
  translate([150, 198, 0])
    cube([1, 1, 1.96]);
  translate([151, 198, 0])
    cube([1, 1, 1.73]);
  translate([152, 198, 0])
    cube([1, 1, 2.24]);
  translate([153, 198, 0])
    cube([1, 1, 1.73]);
  translate([154, 198, 0])
    cube([1, 1, 2.12]);
  translate([155, 198, 0])
    cube([1, 1, 2.78]);
  translate([156, 198, 0])
    cube([1, 1, 1.88]);
  translate([157, 198, 0])
    cube([1, 1, 1.92]);
  translate([158, 198, 0])
    cube([1, 1, 1.88]);
  translate([159, 198, 0])
    cube([1, 1, 1.92]);
  translate([160, 198, 0])
    cube([1, 1, 1.92]);
  translate([161, 198, 0])
    cube([1, 1, 1.92]);
  translate([162, 198, 0])
    cube([1, 1, 1.92]);
  translate([163, 198, 0])
    cube([1, 1, 1.88]);
  translate([164, 198, 0])
    cube([1, 1, 1.92]);
  translate([165, 198, 0])
    cube([1, 1, 1.92]);
  translate([166, 198, 0])
    cube([1, 1, 1.92]);
  translate([167, 198, 0])
    cube([1, 1, 1.96]);
  translate([168, 198, 0])
    cube([1, 1, 1.92]);
  translate([169, 198, 0])
    cube([1, 1, 1.88]);
  translate([170, 198, 0])
    cube([1, 1, 1.92]);
  translate([171, 198, 0])
    cube([1, 1, 1.92]);
  translate([172, 198, 0])
    cube([1, 1, 1.92]);
  translate([173, 198, 0])
    cube([1, 1, 1.92]);
  translate([174, 198, 0])
    cube([1, 1, 1.84]);
  translate([175, 198, 0])
    cube([1, 1, 1.92]);
  translate([176, 198, 0])
    cube([1, 1, 1.92]);
  translate([177, 198, 0])
    cube([1, 1, 1.88]);
  translate([178, 198, 0])
    cube([1, 1, 1.92]);
  translate([179, 198, 0])
    cube([1, 1, 1.96]);
  translate([180, 198, 0])
    cube([1, 1, 1.88]);
  translate([181, 198, 0])
    cube([1, 1, 1.88]);
  translate([182, 198, 0])
    cube([1, 1, 1.76]);
  translate([183, 198, 0])
    cube([1, 1, 3.10]);
  translate([184, 198, 0])
    cube([1, 1, 2.12]);
  translate([185, 198, 0])
    cube([1, 1, 0.47]);
  translate([186, 198, 0])
    cube([1, 1, 0.51]);
  translate([187, 198, 0])
    cube([1, 1, 0.47]);
  translate([188, 198, 0])
    cube([1, 1, 0.43]);
  translate([189, 198, 0])
    cube([1, 1, 0.43]);
  translate([190, 198, 0])
    cube([1, 1, 0.43]);
  translate([191, 198, 0])
    cube([1, 1, 0.43]);
  translate([192, 198, 0])
    cube([1, 1, 0.39]);
  translate([193, 198, 0])
    cube([1, 1, 4.51]);
  translate([194, 198, 0])
    cube([1, 1, 5.33]);
  translate([195, 198, 0])
    cube([1, 1, 6.86]);
  translate([196, 198, 0])
    cube([1, 1, 7.02]);
  translate([197, 198, 0])
    cube([1, 1, 0.16]);
  translate([198, 198, 0])
    cube([1, 1, 0.39]);
  translate([199, 198, 0])
    cube([1, 1, 0.39]);
  translate([200, 198, 0])
    cube([1, 1, 0.71]);
  translate([201, 198, 0])
    cube([1, 1, 0.39]);
  translate([202, 198, 0])
    cube([1, 1, 1.25]);
  translate([203, 198, 0])
    cube([1, 1, 0.31]);
  translate([204, 198, 0])
    cube([1, 1, 6.20]);
  translate([205, 198, 0])
    cube([1, 1, 2.08]);
  translate([206, 198, 0])
    cube([1, 1, 1.96]);
  translate([207, 198, 0])
    cube([1, 1, 0.27]);
  translate([208, 198, 0])
    cube([1, 1, 1.37]);
  translate([209, 198, 0])
    cube([1, 1, 2.04]);
  translate([210, 198, 0])
    cube([1, 1, 1.18]);
  translate([211, 198, 0])
    cube([1, 1, 0.43]);
  translate([212, 198, 0])
    cube([1, 1, 0.39]);
  translate([213, 198, 0])
    cube([1, 1, 0.27]);
  translate([214, 198, 0])
    cube([1, 1, 0.08]);
  translate([215, 198, 0])
    cube([1, 1, 0.12]);
  translate([216, 198, 0])
    cube([1, 1, 1.37]);
  translate([217, 198, 0])
    cube([1, 1, 1.02]);
  translate([218, 198, 0])
    cube([1, 1, 1.14]);
  translate([219, 198, 0])
    cube([1, 1, 2.94]);
  translate([220, 198, 0])
    cube([1, 1, 1.06]);
  translate([221, 198, 0])
    cube([1, 1, 1.06]);
  translate([222, 198, 0])
    cube([1, 1, 0.98]);
  translate([223, 198, 0])
    cube([1, 1, 0.90]);
  translate([224, 198, 0])
    cube([1, 1, 2.94]);
  translate([225, 198, 0])
    cube([1, 1, 2.78]);
  translate([226, 198, 0])
    cube([1, 1, 3.18]);
  translate([227, 198, 0])
    cube([1, 1, 2.31]);
  translate([228, 198, 0])
    cube([1, 1, 2.39]);
  translate([229, 198, 0])
    cube([1, 1, 2.39]);
  translate([230, 198, 0])
    cube([1, 1, 2.78]);
  translate([231, 198, 0])
    cube([1, 1, 1.84]);
  translate([232, 198, 0])
    cube([1, 1, 2.00]);
  translate([233, 198, 0])
    cube([1, 1, 1.92]);
  translate([234, 198, 0])
    cube([1, 1, 1.92]);
  translate([235, 198, 0])
    cube([1, 1, 1.92]);
  translate([236, 198, 0])
    cube([1, 1, 1.92]);
  translate([237, 198, 0])
    cube([1, 1, 1.92]);
  translate([238, 198, 0])
    cube([1, 1, 1.92]);
  translate([239, 198, 0])
    cube([1, 1, 1.92]);
  translate([240, 198, 0])
    cube([1, 1, 1.92]);
  translate([241, 198, 0])
    cube([1, 1, 1.92]);
  translate([242, 198, 0])
    cube([1, 1, 1.92]);
  translate([243, 198, 0])
    cube([1, 1, 1.92]);
  translate([244, 198, 0])
    cube([1, 1, 1.92]);
  translate([245, 198, 0])
    cube([1, 1, 1.92]);
  translate([246, 198, 0])
    cube([1, 1, 1.92]);
  translate([0, 199, 0])
    cube([1, 1, 2.08]);
  translate([1, 199, 0])
    cube([1, 1, 2.04]);
  translate([2, 199, 0])
    cube([1, 1, 2.12]);
  translate([3, 199, 0])
    cube([1, 1, 2.12]);
  translate([4, 199, 0])
    cube([1, 1, 2.12]);
  translate([5, 199, 0])
    cube([1, 1, 2.12]);
  translate([6, 199, 0])
    cube([1, 1, 2.04]);
  translate([7, 199, 0])
    cube([1, 1, 2.04]);
  translate([8, 199, 0])
    cube([1, 1, 2.08]);
  translate([9, 199, 0])
    cube([1, 1, 2.08]);
  translate([10, 199, 0])
    cube([1, 1, 2.08]);
  translate([11, 199, 0])
    cube([1, 1, 2.08]);
  translate([12, 199, 0])
    cube([1, 1, 2.12]);
  translate([13, 199, 0])
    cube([1, 1, 2.08]);
  translate([14, 199, 0])
    cube([1, 1, 2.08]);
  translate([15, 199, 0])
    cube([1, 1, 2.04]);
  translate([16, 199, 0])
    cube([1, 1, 2.08]);
  translate([17, 199, 0])
    cube([1, 1, 2.04]);
  translate([18, 199, 0])
    cube([1, 1, 2.16]);
  translate([19, 199, 0])
    cube([1, 1, 2.12]);
  translate([20, 199, 0])
    cube([1, 1, 2.12]);
  translate([21, 199, 0])
    cube([1, 1, 2.12]);
  translate([22, 199, 0])
    cube([1, 1, 2.08]);
  translate([23, 199, 0])
    cube([1, 1, 2.08]);
  translate([24, 199, 0])
    cube([1, 1, 2.08]);
  translate([25, 199, 0])
    cube([1, 1, 2.08]);
  translate([26, 199, 0])
    cube([1, 1, 2.08]);
  translate([27, 199, 0])
    cube([1, 1, 2.08]);
  translate([28, 199, 0])
    cube([1, 1, 2.08]);
  translate([29, 199, 0])
    cube([1, 1, 2.08]);
  translate([30, 199, 0])
    cube([1, 1, 2.08]);
  translate([31, 199, 0])
    cube([1, 1, 2.08]);
  translate([32, 199, 0])
    cube([1, 1, 2.08]);
  translate([33, 199, 0])
    cube([1, 1, 2.08]);
  translate([34, 199, 0])
    cube([1, 1, 2.08]);
  translate([35, 199, 0])
    cube([1, 1, 2.08]);
  translate([36, 199, 0])
    cube([1, 1, 2.04]);
  translate([37, 199, 0])
    cube([1, 1, 2.12]);
  translate([38, 199, 0])
    cube([1, 1, 2.08]);
  translate([39, 199, 0])
    cube([1, 1, 2.08]);
  translate([40, 199, 0])
    cube([1, 1, 2.08]);
  translate([41, 199, 0])
    cube([1, 1, 2.08]);
  translate([42, 199, 0])
    cube([1, 1, 2.08]);
  translate([43, 199, 0])
    cube([1, 1, 2.08]);
  translate([44, 199, 0])
    cube([1, 1, 2.04]);
  translate([45, 199, 0])
    cube([1, 1, 2.08]);
  translate([46, 199, 0])
    cube([1, 1, 2.08]);
  translate([47, 199, 0])
    cube([1, 1, 2.08]);
  translate([48, 199, 0])
    cube([1, 1, 2.08]);
  translate([49, 199, 0])
    cube([1, 1, 2.08]);
  translate([50, 199, 0])
    cube([1, 1, 2.08]);
  translate([51, 199, 0])
    cube([1, 1, 2.04]);
  translate([52, 199, 0])
    cube([1, 1, 2.04]);
  translate([53, 199, 0])
    cube([1, 1, 2.04]);
  translate([54, 199, 0])
    cube([1, 1, 2.08]);
  translate([55, 199, 0])
    cube([1, 1, 2.08]);
  translate([56, 199, 0])
    cube([1, 1, 2.04]);
  translate([57, 199, 0])
    cube([1, 1, 2.04]);
  translate([58, 199, 0])
    cube([1, 1, 2.08]);
  translate([59, 199, 0])
    cube([1, 1, 2.04]);
  translate([60, 199, 0])
    cube([1, 1, 2.04]);
  translate([61, 199, 0])
    cube([1, 1, 2.04]);
  translate([62, 199, 0])
    cube([1, 1, 2.04]);
  translate([63, 199, 0])
    cube([1, 1, 2.04]);
  translate([64, 199, 0])
    cube([1, 1, 2.04]);
  translate([65, 199, 0])
    cube([1, 1, 2.08]);
  translate([66, 199, 0])
    cube([1, 1, 2.04]);
  translate([67, 199, 0])
    cube([1, 1, 6.35]);
  translate([68, 199, 0])
    cube([1, 1, 5.96]);
  translate([69, 199, 0])
    cube([1, 1, 5.69]);
  translate([70, 199, 0])
    cube([1, 1, 2.82]);
  translate([71, 199, 0])
    cube([1, 1, 6.86]);
  translate([72, 199, 0])
    cube([1, 1, 4.20]);
  translate([73, 199, 0])
    cube([1, 1, 2.27]);
  translate([74, 199, 0])
    cube([1, 1, 2.71]);
  translate([75, 199, 0])
    cube([1, 1, 2.12]);
  translate([76, 199, 0])
    cube([1, 1, 0.90]);
  translate([77, 199, 0])
    cube([1, 1, 1.53]);
  translate([78, 199, 0])
    cube([1, 1, 1.29]);
  translate([79, 199, 0])
    cube([1, 1, 2.08]);
  translate([80, 199, 0])
    cube([1, 1, 1.69]);
  translate([81, 199, 0])
    cube([1, 1, 1.41]);
  translate([82, 199, 0])
    cube([1, 1, 1.49]);
  translate([83, 199, 0])
    cube([1, 1, 1.69]);
  translate([84, 199, 0])
    cube([1, 1, 1.53]);
  translate([85, 199, 0])
    cube([1, 1, 1.73]);
  translate([86, 199, 0])
    cube([1, 1, 1.22]);
  translate([87, 199, 0])
    cube([1, 1, 1.49]);
  translate([88, 199, 0])
    cube([1, 1, 1.88]);
  translate([89, 199, 0])
    cube([1, 1, 2.08]);
  translate([90, 199, 0])
    cube([1, 1, 1.96]);
  translate([91, 199, 0])
    cube([1, 1, 1.76]);
  translate([92, 199, 0])
    cube([1, 1, 1.65]);
  translate([93, 199, 0])
    cube([1, 1, 2.20]);
  translate([94, 199, 0])
    cube([1, 1, 1.92]);
  translate([95, 199, 0])
    cube([1, 1, 1.73]);
  translate([96, 199, 0])
    cube([1, 1, 2.20]);
  translate([97, 199, 0])
    cube([1, 1, 1.84]);
  translate([98, 199, 0])
    cube([1, 1, 2.12]);
  translate([99, 199, 0])
    cube([1, 1, 1.45]);
  translate([100, 199, 0])
    cube([1, 1, 1.73]);
  translate([101, 199, 0])
    cube([1, 1, 2.24]);
  translate([102, 199, 0])
    cube([1, 1, 2.82]);
  translate([103, 199, 0])
    cube([1, 1, 2.78]);
  translate([104, 199, 0])
    cube([1, 1, 2.27]);
  translate([105, 199, 0])
    cube([1, 1, 2.00]);
  translate([106, 199, 0])
    cube([1, 1, 1.61]);
  translate([107, 199, 0])
    cube([1, 1, 1.41]);
  translate([108, 199, 0])
    cube([1, 1, 1.29]);
  translate([109, 199, 0])
    cube([1, 1, 1.76]);
  translate([110, 199, 0])
    cube([1, 1, 1.41]);
  translate([111, 199, 0])
    cube([1, 1, 1.14]);
  translate([112, 199, 0])
    cube([1, 1, 1.61]);
  translate([113, 199, 0])
    cube([1, 1, 1.65]);
  translate([114, 199, 0])
    cube([1, 1, 1.88]);
  translate([115, 199, 0])
    cube([1, 1, 1.45]);
  translate([116, 199, 0])
    cube([1, 1, 2.12]);
  translate([117, 199, 0])
    cube([1, 1, 1.96]);
  translate([118, 199, 0])
    cube([1, 1, 1.65]);
  translate([119, 199, 0])
    cube([1, 1, 1.49]);
  translate([120, 199, 0])
    cube([1, 1, 2.00]);
  translate([121, 199, 0])
    cube([1, 1, 2.16]);
  translate([122, 199, 0])
    cube([1, 1, 1.76]);
  translate([123, 199, 0])
    cube([1, 1, 2.63]);
  translate([124, 199, 0])
    cube([1, 1, 2.04]);
  translate([125, 199, 0])
    cube([1, 1, 1.80]);
  translate([126, 199, 0])
    cube([1, 1, 2.00]);
  translate([127, 199, 0])
    cube([1, 1, 1.73]);
  translate([128, 199, 0])
    cube([1, 1, 1.96]);
  translate([129, 199, 0])
    cube([1, 1, 1.84]);
  translate([130, 199, 0])
    cube([1, 1, 2.00]);
  translate([131, 199, 0])
    cube([1, 1, 2.31]);
  translate([132, 199, 0])
    cube([1, 1, 1.53]);
  translate([133, 199, 0])
    cube([1, 1, 1.88]);
  translate([134, 199, 0])
    cube([1, 1, 2.35]);
  translate([135, 199, 0])
    cube([1, 1, 1.73]);
  translate([136, 199, 0])
    cube([1, 1, 2.67]);
  translate([137, 199, 0])
    cube([1, 1, 2.35]);
  translate([138, 199, 0])
    cube([1, 1, 2.39]);
  translate([139, 199, 0])
    cube([1, 1, 1.76]);
  translate([140, 199, 0])
    cube([1, 1, 2.78]);
  translate([141, 199, 0])
    cube([1, 1, 2.31]);
  translate([142, 199, 0])
    cube([1, 1, 1.73]);
  translate([143, 199, 0])
    cube([1, 1, 2.59]);
  translate([144, 199, 0])
    cube([1, 1, 2.31]);
  translate([145, 199, 0])
    cube([1, 1, 2.20]);
  translate([146, 199, 0])
    cube([1, 1, 2.67]);
  translate([147, 199, 0])
    cube([1, 1, 1.92]);
  translate([148, 199, 0])
    cube([1, 1, 2.24]);
  translate([149, 199, 0])
    cube([1, 1, 1.88]);
  translate([150, 199, 0])
    cube([1, 1, 1.69]);
  translate([151, 199, 0])
    cube([1, 1, 2.27]);
  translate([152, 199, 0])
    cube([1, 1, 1.84]);
  translate([153, 199, 0])
    cube([1, 1, 1.76]);
  translate([154, 199, 0])
    cube([1, 1, 1.92]);
  translate([155, 199, 0])
    cube([1, 1, 2.20]);
  translate([156, 199, 0])
    cube([1, 1, 2.04]);
  translate([157, 199, 0])
    cube([1, 1, 2.00]);
  translate([158, 199, 0])
    cube([1, 1, 1.92]);
  translate([159, 199, 0])
    cube([1, 1, 1.92]);
  translate([160, 199, 0])
    cube([1, 1, 1.92]);
  translate([161, 199, 0])
    cube([1, 1, 1.92]);
  translate([162, 199, 0])
    cube([1, 1, 1.92]);
  translate([163, 199, 0])
    cube([1, 1, 1.92]);
  translate([164, 199, 0])
    cube([1, 1, 1.92]);
  translate([165, 199, 0])
    cube([1, 1, 1.92]);
  translate([166, 199, 0])
    cube([1, 1, 1.92]);
  translate([167, 199, 0])
    cube([1, 1, 1.92]);
  translate([168, 199, 0])
    cube([1, 1, 1.92]);
  translate([169, 199, 0])
    cube([1, 1, 1.88]);
  translate([170, 199, 0])
    cube([1, 1, 1.96]);
  translate([171, 199, 0])
    cube([1, 1, 1.92]);
  translate([172, 199, 0])
    cube([1, 1, 1.92]);
  translate([173, 199, 0])
    cube([1, 1, 1.92]);
  translate([174, 199, 0])
    cube([1, 1, 1.92]);
  translate([175, 199, 0])
    cube([1, 1, 1.92]);
  translate([176, 199, 0])
    cube([1, 1, 1.92]);
  translate([177, 199, 0])
    cube([1, 1, 1.92]);
  translate([178, 199, 0])
    cube([1, 1, 1.92]);
  translate([179, 199, 0])
    cube([1, 1, 1.96]);
  translate([180, 199, 0])
    cube([1, 1, 2.04]);
  translate([181, 199, 0])
    cube([1, 1, 2.08]);
  translate([182, 199, 0])
    cube([1, 1, 6.39]);
  translate([183, 199, 0])
    cube([1, 1, 2.31]);
  translate([184, 199, 0])
    cube([1, 1, 0.63]);
  translate([185, 199, 0])
    cube([1, 1, 0.59]);
  translate([186, 199, 0])
    cube([1, 1, 0.51]);
  translate([187, 199, 0])
    cube([1, 1, 0.47]);
  translate([188, 199, 0])
    cube([1, 1, 0.43]);
  translate([189, 199, 0])
    cube([1, 1, 0.51]);
  translate([190, 199, 0])
    cube([1, 1, 0.47]);
  translate([191, 199, 0])
    cube([1, 1, 0.43]);
  translate([192, 199, 0])
    cube([1, 1, 0.39]);
  translate([193, 199, 0])
    cube([1, 1, 0.39]);
  translate([194, 199, 0])
    cube([1, 1, 4.90]);
  translate([195, 199, 0])
    cube([1, 1, 5.57]);
  translate([196, 199, 0])
    cube([1, 1, 6.43]);
  translate([197, 199, 0])
    cube([1, 1, 0.08]);
  translate([198, 199, 0])
    cube([1, 1, 0.59]);
  translate([199, 199, 0])
    cube([1, 1, 1.06]);
  translate([200, 199, 0])
    cube([1, 1, 0.82]);
  translate([201, 199, 0])
    cube([1, 1, 0.31]);
  translate([202, 199, 0])
    cube([1, 1, 1.18]);
  translate([203, 199, 0])
    cube([1, 1, 0.35]);
  translate([204, 199, 0])
    cube([1, 1, 1.29]);
  translate([205, 199, 0])
    cube([1, 1, 2.59]);
  translate([206, 199, 0])
    cube([1, 1, 2.12]);
  translate([207, 199, 0])
    cube([1, 1, 0.16]);
  translate([208, 199, 0])
    cube([1, 1, 1.80]);
  translate([209, 199, 0])
    cube([1, 1, 1.84]);
  translate([210, 199, 0])
    cube([1, 1, 1.92]);
  translate([211, 199, 0])
    cube([1, 1, 1.22]);
  translate([212, 199, 0])
    cube([1, 1, 0.86]);
  translate([213, 199, 0])
    cube([1, 1, 0.31]);
  translate([214, 199, 0])
    cube([1, 1, 0.27]);
  translate([215, 199, 0])
    cube([1, 1, 0.35]);
  translate([216, 199, 0])
    cube([1, 1, 0.39]);
  translate([217, 199, 0])
    cube([1, 1, 0.90]);
  translate([218, 199, 0])
    cube([1, 1, 1.33]);
  translate([219, 199, 0])
    cube([1, 1, 1.02]);
  translate([220, 199, 0])
    cube([1, 1, 2.08]);
  translate([221, 199, 0])
    cube([1, 1, 2.27]);
  translate([222, 199, 0])
    cube([1, 1, 1.06]);
  translate([223, 199, 0])
    cube([1, 1, 0.90]);
  translate([224, 199, 0])
    cube([1, 1, 1.14]);
  translate([225, 199, 0])
    cube([1, 1, 1.18]);
  translate([226, 199, 0])
    cube([1, 1, 2.90]);
  translate([227, 199, 0])
    cube([1, 1, 2.82]);
  translate([228, 199, 0])
    cube([1, 1, 3.29]);
  translate([229, 199, 0])
    cube([1, 1, 2.55]);
  translate([230, 199, 0])
    cube([1, 1, 0.59]);
  translate([231, 199, 0])
    cube([1, 1, 0.16]);
  translate([232, 199, 0])
    cube([1, 1, 2.08]);
  translate([233, 199, 0])
    cube([1, 1, 1.92]);
  translate([234, 199, 0])
    cube([1, 1, 1.96]);
  translate([235, 199, 0])
    cube([1, 1, 1.96]);
  translate([236, 199, 0])
    cube([1, 1, 1.92]);
  translate([237, 199, 0])
    cube([1, 1, 1.92]);
  translate([238, 199, 0])
    cube([1, 1, 1.92]);
  translate([239, 199, 0])
    cube([1, 1, 1.92]);
  translate([240, 199, 0])
    cube([1, 1, 1.92]);
  translate([241, 199, 0])
    cube([1, 1, 1.92]);
  translate([242, 199, 0])
    cube([1, 1, 1.92]);
  translate([243, 199, 0])
    cube([1, 1, 1.92]);
  translate([244, 199, 0])
    cube([1, 1, 1.92]);
  translate([245, 199, 0])
    cube([1, 1, 1.92]);
  translate([246, 199, 0])
    cube([1, 1, 1.92]);
  translate([0, 200, 0])
    cube([1, 1, 2.12]);
  translate([1, 200, 0])
    cube([1, 1, 2.08]);
  translate([2, 200, 0])
    cube([1, 1, 2.12]);
  translate([3, 200, 0])
    cube([1, 1, 2.12]);
  translate([4, 200, 0])
    cube([1, 1, 2.12]);
  translate([5, 200, 0])
    cube([1, 1, 2.12]);
  translate([6, 200, 0])
    cube([1, 1, 2.08]);
  translate([7, 200, 0])
    cube([1, 1, 2.08]);
  translate([8, 200, 0])
    cube([1, 1, 2.12]);
  translate([9, 200, 0])
    cube([1, 1, 2.08]);
  translate([10, 200, 0])
    cube([1, 1, 2.12]);
  translate([11, 200, 0])
    cube([1, 1, 2.12]);
  translate([12, 200, 0])
    cube([1, 1, 2.12]);
  translate([13, 200, 0])
    cube([1, 1, 2.12]);
  translate([14, 200, 0])
    cube([1, 1, 2.12]);
  translate([15, 200, 0])
    cube([1, 1, 2.12]);
  translate([16, 200, 0])
    cube([1, 1, 2.12]);
  translate([17, 200, 0])
    cube([1, 1, 2.12]);
  translate([18, 200, 0])
    cube([1, 1, 2.12]);
  translate([19, 200, 0])
    cube([1, 1, 2.12]);
  translate([20, 200, 0])
    cube([1, 1, 2.12]);
  translate([21, 200, 0])
    cube([1, 1, 2.12]);
  translate([22, 200, 0])
    cube([1, 1, 2.12]);
  translate([23, 200, 0])
    cube([1, 1, 2.12]);
  translate([24, 200, 0])
    cube([1, 1, 2.08]);
  translate([25, 200, 0])
    cube([1, 1, 2.08]);
  translate([26, 200, 0])
    cube([1, 1, 2.08]);
  translate([27, 200, 0])
    cube([1, 1, 2.04]);
  translate([28, 200, 0])
    cube([1, 1, 2.12]);
  translate([29, 200, 0])
    cube([1, 1, 2.12]);
  translate([30, 200, 0])
    cube([1, 1, 2.12]);
  translate([31, 200, 0])
    cube([1, 1, 2.04]);
  translate([32, 200, 0])
    cube([1, 1, 2.12]);
  translate([33, 200, 0])
    cube([1, 1, 2.12]);
  translate([34, 200, 0])
    cube([1, 1, 2.12]);
  translate([35, 200, 0])
    cube([1, 1, 2.12]);
  translate([36, 200, 0])
    cube([1, 1, 2.08]);
  translate([37, 200, 0])
    cube([1, 1, 2.12]);
  translate([38, 200, 0])
    cube([1, 1, 2.08]);
  translate([39, 200, 0])
    cube([1, 1, 2.08]);
  translate([40, 200, 0])
    cube([1, 1, 2.08]);
  translate([41, 200, 0])
    cube([1, 1, 2.08]);
  translate([42, 200, 0])
    cube([1, 1, 2.08]);
  translate([43, 200, 0])
    cube([1, 1, 2.08]);
  translate([44, 200, 0])
    cube([1, 1, 2.08]);
  translate([45, 200, 0])
    cube([1, 1, 2.08]);
  translate([46, 200, 0])
    cube([1, 1, 2.08]);
  translate([47, 200, 0])
    cube([1, 1, 2.08]);
  translate([48, 200, 0])
    cube([1, 1, 2.12]);
  translate([49, 200, 0])
    cube([1, 1, 2.08]);
  translate([50, 200, 0])
    cube([1, 1, 2.08]);
  translate([51, 200, 0])
    cube([1, 1, 2.08]);
  translate([52, 200, 0])
    cube([1, 1, 2.08]);
  translate([53, 200, 0])
    cube([1, 1, 2.08]);
  translate([54, 200, 0])
    cube([1, 1, 2.08]);
  translate([55, 200, 0])
    cube([1, 1, 2.08]);
  translate([56, 200, 0])
    cube([1, 1, 2.08]);
  translate([57, 200, 0])
    cube([1, 1, 2.00]);
  translate([58, 200, 0])
    cube([1, 1, 2.00]);
  translate([59, 200, 0])
    cube([1, 1, 2.04]);
  translate([60, 200, 0])
    cube([1, 1, 2.04]);
  translate([61, 200, 0])
    cube([1, 1, 2.04]);
  translate([62, 200, 0])
    cube([1, 1, 2.04]);
  translate([63, 200, 0])
    cube([1, 1, 2.04]);
  translate([64, 200, 0])
    cube([1, 1, 2.04]);
  translate([65, 200, 0])
    cube([1, 1, 2.43]);
  translate([66, 200, 0])
    cube([1, 1, 1.53]);
  translate([67, 200, 0])
    cube([1, 1, 5.96]);
  translate([68, 200, 0])
    cube([1, 1, 6.00]);
  translate([69, 200, 0])
    cube([1, 1, 5.92]);
  translate([70, 200, 0])
    cube([1, 1, 1.41]);
  translate([71, 200, 0])
    cube([1, 1, 6.12]);
  translate([72, 200, 0])
    cube([1, 1, 3.96]);
  translate([73, 200, 0])
    cube([1, 1, 0.82]);
  translate([74, 200, 0])
    cube([1, 1, 1.37]);
  translate([75, 200, 0])
    cube([1, 1, 1.29]);
  translate([76, 200, 0])
    cube([1, 1, 1.06]);
  translate([77, 200, 0])
    cube([1, 1, 1.92]);
  translate([78, 200, 0])
    cube([1, 1, 2.08]);
  translate([79, 200, 0])
    cube([1, 1, 1.73]);
  translate([80, 200, 0])
    cube([1, 1, 1.76]);
  translate([81, 200, 0])
    cube([1, 1, 1.49]);
  translate([82, 200, 0])
    cube([1, 1, 1.76]);
  translate([83, 200, 0])
    cube([1, 1, 1.49]);
  translate([84, 200, 0])
    cube([1, 1, 1.84]);
  translate([85, 200, 0])
    cube([1, 1, 2.12]);
  translate([86, 200, 0])
    cube([1, 1, 2.08]);
  translate([87, 200, 0])
    cube([1, 1, 1.25]);
  translate([88, 200, 0])
    cube([1, 1, 2.27]);
  translate([89, 200, 0])
    cube([1, 1, 2.39]);
  translate([90, 200, 0])
    cube([1, 1, 1.88]);
  translate([91, 200, 0])
    cube([1, 1, 2.27]);
  translate([92, 200, 0])
    cube([1, 1, 2.08]);
  translate([93, 200, 0])
    cube([1, 1, 1.57]);
  translate([94, 200, 0])
    cube([1, 1, 1.88]);
  translate([95, 200, 0])
    cube([1, 1, 1.37]);
  translate([96, 200, 0])
    cube([1, 1, 1.73]);
  translate([97, 200, 0])
    cube([1, 1, 1.88]);
  translate([98, 200, 0])
    cube([1, 1, 2.16]);
  translate([99, 200, 0])
    cube([1, 1, 1.84]);
  translate([100, 200, 0])
    cube([1, 1, 1.80]);
  translate([101, 200, 0])
    cube([1, 1, 2.12]);
  translate([102, 200, 0])
    cube([1, 1, 2.51]);
  translate([103, 200, 0])
    cube([1, 1, 2.43]);
  translate([104, 200, 0])
    cube([1, 1, 1.92]);
  translate([105, 200, 0])
    cube([1, 1, 1.37]);
  translate([106, 200, 0])
    cube([1, 1, 1.84]);
  translate([107, 200, 0])
    cube([1, 1, 2.04]);
  translate([108, 200, 0])
    cube([1, 1, 1.65]);
  translate([109, 200, 0])
    cube([1, 1, 2.24]);
  translate([110, 200, 0])
    cube([1, 1, 1.65]);
  translate([111, 200, 0])
    cube([1, 1, 1.80]);
  translate([112, 200, 0])
    cube([1, 1, 1.61]);
  translate([113, 200, 0])
    cube([1, 1, 1.57]);
  translate([114, 200, 0])
    cube([1, 1, 1.45]);
  translate([115, 200, 0])
    cube([1, 1, 1.37]);
  translate([116, 200, 0])
    cube([1, 1, 1.41]);
  translate([117, 200, 0])
    cube([1, 1, 1.80]);
  translate([118, 200, 0])
    cube([1, 1, 1.57]);
  translate([119, 200, 0])
    cube([1, 1, 2.08]);
  translate([120, 200, 0])
    cube([1, 1, 2.08]);
  translate([121, 200, 0])
    cube([1, 1, 1.69]);
  translate([122, 200, 0])
    cube([1, 1, 2.00]);
  translate([123, 200, 0])
    cube([1, 1, 2.67]);
  translate([124, 200, 0])
    cube([1, 1, 1.49]);
  translate([125, 200, 0])
    cube([1, 1, 2.08]);
  translate([126, 200, 0])
    cube([1, 1, 1.73]);
  translate([127, 200, 0])
    cube([1, 1, 2.63]);
  translate([128, 200, 0])
    cube([1, 1, 2.16]);
  translate([129, 200, 0])
    cube([1, 1, 1.65]);
  translate([130, 200, 0])
    cube([1, 1, 2.55]);
  translate([131, 200, 0])
    cube([1, 1, 1.76]);
  translate([132, 200, 0])
    cube([1, 1, 2.47]);
  translate([133, 200, 0])
    cube([1, 1, 2.20]);
  translate([134, 200, 0])
    cube([1, 1, 3.02]);
  translate([135, 200, 0])
    cube([1, 1, 2.31]);
  translate([136, 200, 0])
    cube([1, 1, 1.92]);
  translate([137, 200, 0])
    cube([1, 1, 2.63]);
  translate([138, 200, 0])
    cube([1, 1, 1.69]);
  translate([139, 200, 0])
    cube([1, 1, 2.27]);
  translate([140, 200, 0])
    cube([1, 1, 2.82]);
  translate([141, 200, 0])
    cube([1, 1, 2.35]);
  translate([142, 200, 0])
    cube([1, 1, 2.00]);
  translate([143, 200, 0])
    cube([1, 1, 2.51]);
  translate([144, 200, 0])
    cube([1, 1, 2.16]);
  translate([145, 200, 0])
    cube([1, 1, 2.16]);
  translate([146, 200, 0])
    cube([1, 1, 2.04]);
  translate([147, 200, 0])
    cube([1, 1, 1.96]);
  translate([148, 200, 0])
    cube([1, 1, 2.04]);
  translate([149, 200, 0])
    cube([1, 1, 2.08]);
  translate([150, 200, 0])
    cube([1, 1, 1.88]);
  translate([151, 200, 0])
    cube([1, 1, 1.53]);
  translate([152, 200, 0])
    cube([1, 1, 2.04]);
  translate([153, 200, 0])
    cube([1, 1, 1.96]);
  translate([154, 200, 0])
    cube([1, 1, 1.92]);
  translate([155, 200, 0])
    cube([1, 1, 1.88]);
  translate([156, 200, 0])
    cube([1, 1, 2.08]);
  translate([157, 200, 0])
    cube([1, 1, 2.00]);
  translate([158, 200, 0])
    cube([1, 1, 1.88]);
  translate([159, 200, 0])
    cube([1, 1, 1.92]);
  translate([160, 200, 0])
    cube([1, 1, 1.92]);
  translate([161, 200, 0])
    cube([1, 1, 1.92]);
  translate([162, 200, 0])
    cube([1, 1, 1.92]);
  translate([163, 200, 0])
    cube([1, 1, 2.04]);
  translate([164, 200, 0])
    cube([1, 1, 1.88]);
  translate([165, 200, 0])
    cube([1, 1, 1.96]);
  translate([166, 200, 0])
    cube([1, 1, 1.88]);
  translate([167, 200, 0])
    cube([1, 1, 1.92]);
  translate([168, 200, 0])
    cube([1, 1, 2.12]);
  translate([169, 200, 0])
    cube([1, 1, 1.92]);
  translate([170, 200, 0])
    cube([1, 1, 1.96]);
  translate([171, 200, 0])
    cube([1, 1, 2.00]);
  translate([172, 200, 0])
    cube([1, 1, 1.92]);
  translate([173, 200, 0])
    cube([1, 1, 1.96]);
  translate([174, 200, 0])
    cube([1, 1, 2.00]);
  translate([175, 200, 0])
    cube([1, 1, 1.88]);
  translate([176, 200, 0])
    cube([1, 1, 1.88]);
  translate([177, 200, 0])
    cube([1, 1, 1.88]);
  translate([178, 200, 0])
    cube([1, 1, 1.88]);
  translate([179, 200, 0])
    cube([1, 1, 1.96]);
  translate([180, 200, 0])
    cube([1, 1, 2.00]);
  translate([181, 200, 0])
    cube([1, 1, 6.12]);
  translate([182, 200, 0])
    cube([1, 1, 0.20]);
  translate([183, 200, 0])
    cube([1, 1, 0.39]);
  translate([184, 200, 0])
    cube([1, 1, 0.51]);
  translate([185, 200, 0])
    cube([1, 1, 0.43]);
  translate([186, 200, 0])
    cube([1, 1, 0.47]);
  translate([187, 200, 0])
    cube([1, 1, 0.47]);
  translate([188, 200, 0])
    cube([1, 1, 0.47]);
  translate([189, 200, 0])
    cube([1, 1, 0.47]);
  translate([190, 200, 0])
    cube([1, 1, 0.43]);
  translate([191, 200, 0])
    cube([1, 1, 0.43]);
  translate([192, 200, 0])
    cube([1, 1, 0.51]);
  translate([193, 200, 0])
    cube([1, 1, 0.39]);
  translate([194, 200, 0])
    cube([1, 1, 3.61]);
  translate([195, 200, 0])
    cube([1, 1, 3.10]);
  translate([196, 200, 0])
    cube([1, 1, 0.63]);
  translate([197, 200, 0])
    cube([1, 1, 0.35]);
  translate([198, 200, 0])
    cube([1, 1, 0.71]);
  translate([199, 200, 0])
    cube([1, 1, 1.25]);
  translate([200, 200, 0])
    cube([1, 1, 2.51]);
  translate([201, 200, 0])
    cube([1, 1, 2.27]);
  translate([202, 200, 0])
    cube([1, 1, 2.55]);
  translate([203, 200, 0])
    cube([1, 1, 1.37]);
  translate([204, 200, 0])
    cube([1, 1, 0.86]);
  translate([205, 200, 0])
    cube([1, 1, 1.18]);
  translate([206, 200, 0])
    cube([1, 1, 2.08]);
  translate([207, 200, 0])
    cube([1, 1, 0.39]);
  translate([208, 200, 0])
    cube([1, 1, 1.92]);
  translate([209, 200, 0])
    cube([1, 1, 1.84]);
  translate([210, 200, 0])
    cube([1, 1, 2.04]);
  translate([211, 200, 0])
    cube([1, 1, 1.92]);
  translate([212, 200, 0])
    cube([1, 1, 1.10]);
  translate([213, 200, 0])
    cube([1, 1, 1.18]);
  translate([214, 200, 0])
    cube([1, 1, 0.47]);
  translate([215, 200, 0])
    cube([1, 1, 0.35]);
  translate([216, 200, 0])
    cube([1, 1, 0.78]);
  translate([217, 200, 0])
    cube([1, 1, 0.31]);
  translate([218, 200, 0])
    cube([1, 1, 0.35]);
  translate([219, 200, 0])
    cube([1, 1, 1.69]);
  translate([220, 200, 0])
    cube([1, 1, 0.90]);
  translate([221, 200, 0])
    cube([1, 1, 1.14]);
  translate([222, 200, 0])
    cube([1, 1, 2.47]);
  translate([223, 200, 0])
    cube([1, 1, 0.55]);
  translate([224, 200, 0])
    cube([1, 1, 1.02]);
  translate([225, 200, 0])
    cube([1, 1, 0.90]);
  translate([226, 200, 0])
    cube([1, 1, 0.98]);
  translate([227, 200, 0])
    cube([1, 1, 2.90]);
  translate([228, 200, 0])
    cube([1, 1, 3.02]);
  translate([229, 200, 0])
    cube([1, 1, 3.29]);
  translate([230, 200, 0])
    cube([1, 1, 2.98]);
  translate([231, 200, 0])
    cube([1, 1, 0.55]);
  translate([232, 200, 0])
    cube([1, 1, 3.29]);
  translate([233, 200, 0])
    cube([1, 1, 2.55]);
  translate([234, 200, 0])
    cube([1, 1, 1.73]);
  translate([235, 200, 0])
    cube([1, 1, 2.00]);
  translate([236, 200, 0])
    cube([1, 1, 1.96]);
  translate([237, 200, 0])
    cube([1, 1, 1.96]);
  translate([238, 200, 0])
    cube([1, 1, 1.92]);
  translate([239, 200, 0])
    cube([1, 1, 1.92]);
  translate([240, 200, 0])
    cube([1, 1, 1.92]);
  translate([241, 200, 0])
    cube([1, 1, 1.92]);
  translate([242, 200, 0])
    cube([1, 1, 1.92]);
  translate([243, 200, 0])
    cube([1, 1, 1.92]);
  translate([244, 200, 0])
    cube([1, 1, 1.92]);
  translate([245, 200, 0])
    cube([1, 1, 1.92]);
  translate([246, 200, 0])
    cube([1, 1, 1.92]);
  translate([0, 201, 0])
    cube([1, 1, 2.12]);
  translate([1, 201, 0])
    cube([1, 1, 2.08]);
  translate([2, 201, 0])
    cube([1, 1, 2.12]);
  translate([3, 201, 0])
    cube([1, 1, 2.12]);
  translate([4, 201, 0])
    cube([1, 1, 2.12]);
  translate([5, 201, 0])
    cube([1, 1, 2.12]);
  translate([6, 201, 0])
    cube([1, 1, 2.08]);
  translate([7, 201, 0])
    cube([1, 1, 2.08]);
  translate([8, 201, 0])
    cube([1, 1, 2.12]);
  translate([9, 201, 0])
    cube([1, 1, 2.08]);
  translate([10, 201, 0])
    cube([1, 1, 2.12]);
  translate([11, 201, 0])
    cube([1, 1, 2.12]);
  translate([12, 201, 0])
    cube([1, 1, 2.12]);
  translate([13, 201, 0])
    cube([1, 1, 2.12]);
  translate([14, 201, 0])
    cube([1, 1, 2.12]);
  translate([15, 201, 0])
    cube([1, 1, 2.12]);
  translate([16, 201, 0])
    cube([1, 1, 2.12]);
  translate([17, 201, 0])
    cube([1, 1, 2.12]);
  translate([18, 201, 0])
    cube([1, 1, 2.12]);
  translate([19, 201, 0])
    cube([1, 1, 2.12]);
  translate([20, 201, 0])
    cube([1, 1, 2.12]);
  translate([21, 201, 0])
    cube([1, 1, 2.12]);
  translate([22, 201, 0])
    cube([1, 1, 2.12]);
  translate([23, 201, 0])
    cube([1, 1, 2.12]);
  translate([24, 201, 0])
    cube([1, 1, 2.08]);
  translate([25, 201, 0])
    cube([1, 1, 2.08]);
  translate([26, 201, 0])
    cube([1, 1, 2.08]);
  translate([27, 201, 0])
    cube([1, 1, 2.08]);
  translate([28, 201, 0])
    cube([1, 1, 2.12]);
  translate([29, 201, 0])
    cube([1, 1, 2.12]);
  translate([30, 201, 0])
    cube([1, 1, 2.08]);
  translate([31, 201, 0])
    cube([1, 1, 2.12]);
  translate([32, 201, 0])
    cube([1, 1, 2.12]);
  translate([33, 201, 0])
    cube([1, 1, 2.12]);
  translate([34, 201, 0])
    cube([1, 1, 2.12]);
  translate([35, 201, 0])
    cube([1, 1, 2.12]);
  translate([36, 201, 0])
    cube([1, 1, 2.08]);
  translate([37, 201, 0])
    cube([1, 1, 2.12]);
  translate([38, 201, 0])
    cube([1, 1, 2.08]);
  translate([39, 201, 0])
    cube([1, 1, 2.08]);
  translate([40, 201, 0])
    cube([1, 1, 2.08]);
  translate([41, 201, 0])
    cube([1, 1, 2.08]);
  translate([42, 201, 0])
    cube([1, 1, 2.08]);
  translate([43, 201, 0])
    cube([1, 1, 2.08]);
  translate([44, 201, 0])
    cube([1, 1, 2.12]);
  translate([45, 201, 0])
    cube([1, 1, 2.12]);
  translate([46, 201, 0])
    cube([1, 1, 2.08]);
  translate([47, 201, 0])
    cube([1, 1, 2.08]);
  translate([48, 201, 0])
    cube([1, 1, 2.12]);
  translate([49, 201, 0])
    cube([1, 1, 2.08]);
  translate([50, 201, 0])
    cube([1, 1, 2.08]);
  translate([51, 201, 0])
    cube([1, 1, 2.08]);
  translate([52, 201, 0])
    cube([1, 1, 2.08]);
  translate([53, 201, 0])
    cube([1, 1, 2.08]);
  translate([54, 201, 0])
    cube([1, 1, 2.08]);
  translate([55, 201, 0])
    cube([1, 1, 2.08]);
  translate([56, 201, 0])
    cube([1, 1, 2.08]);
  translate([57, 201, 0])
    cube([1, 1, 2.08]);
  translate([58, 201, 0])
    cube([1, 1, 2.08]);
  translate([59, 201, 0])
    cube([1, 1, 2.04]);
  translate([60, 201, 0])
    cube([1, 1, 2.04]);
  translate([61, 201, 0])
    cube([1, 1, 2.04]);
  translate([62, 201, 0])
    cube([1, 1, 2.04]);
  translate([63, 201, 0])
    cube([1, 1, 2.04]);
  translate([64, 201, 0])
    cube([1, 1, 2.04]);
  translate([65, 201, 0])
    cube([1, 1, 1.96]);
  translate([66, 201, 0])
    cube([1, 1, 5.41]);
  translate([67, 201, 0])
    cube([1, 1, 5.22]);
  translate([68, 201, 0])
    cube([1, 1, 6.43]);
  translate([69, 201, 0])
    cube([1, 1, 6.35]);
  translate([70, 201, 0])
    cube([1, 1, 7.45]);
  translate([71, 201, 0])
    cube([1, 1, 4.75]);
  translate([72, 201, 0])
    cube([1, 1, 2.43]);
  translate([73, 201, 0])
    cube([1, 1, 0.71]);
  translate([74, 201, 0])
    cube([1, 1, 4.75]);
  translate([75, 201, 0])
    cube([1, 1, 1.14]);
  translate([76, 201, 0])
    cube([1, 1, 1.53]);
  translate([77, 201, 0])
    cube([1, 1, 1.25]);
  translate([78, 201, 0])
    cube([1, 1, 1.73]);
  translate([79, 201, 0])
    cube([1, 1, 1.92]);
  translate([80, 201, 0])
    cube([1, 1, 1.45]);
  translate([81, 201, 0])
    cube([1, 1, 1.69]);
  translate([82, 201, 0])
    cube([1, 1, 1.53]);
  translate([83, 201, 0])
    cube([1, 1, 1.76]);
  translate([84, 201, 0])
    cube([1, 1, 1.57]);
  translate([85, 201, 0])
    cube([1, 1, 2.27]);
  translate([86, 201, 0])
    cube([1, 1, 1.61]);
  translate([87, 201, 0])
    cube([1, 1, 1.84]);
  translate([88, 201, 0])
    cube([1, 1, 1.80]);
  translate([89, 201, 0])
    cube([1, 1, 2.16]);
  translate([90, 201, 0])
    cube([1, 1, 2.47]);
  translate([91, 201, 0])
    cube([1, 1, 2.59]);
  translate([92, 201, 0])
    cube([1, 1, 2.27]);
  translate([93, 201, 0])
    cube([1, 1, 2.31]);
  translate([94, 201, 0])
    cube([1, 1, 1.80]);
  translate([95, 201, 0])
    cube([1, 1, 2.00]);
  translate([96, 201, 0])
    cube([1, 1, 1.80]);
  translate([97, 201, 0])
    cube([1, 1, 1.37]);
  translate([98, 201, 0])
    cube([1, 1, 1.18]);
  translate([99, 201, 0])
    cube([1, 1, 1.69]);
  translate([100, 201, 0])
    cube([1, 1, 1.92]);
  translate([101, 201, 0])
    cube([1, 1, 2.51]);
  translate([102, 201, 0])
    cube([1, 1, 3.10]);
  translate([103, 201, 0])
    cube([1, 1, 2.75]);
  translate([104, 201, 0])
    cube([1, 1, 2.35]);
  translate([105, 201, 0])
    cube([1, 1, 2.55]);
  translate([106, 201, 0])
    cube([1, 1, 2.35]);
  translate([107, 201, 0])
    cube([1, 1, 2.12]);
  translate([108, 201, 0])
    cube([1, 1, 1.80]);
  translate([109, 201, 0])
    cube([1, 1, 1.57]);
  translate([110, 201, 0])
    cube([1, 1, 1.53]);
  translate([111, 201, 0])
    cube([1, 1, 1.33]);
  translate([112, 201, 0])
    cube([1, 1, 1.69]);
  translate([113, 201, 0])
    cube([1, 1, 1.45]);
  translate([114, 201, 0])
    cube([1, 1, 1.49]);
  translate([115, 201, 0])
    cube([1, 1, 2.27]);
  translate([116, 201, 0])
    cube([1, 1, 2.12]);
  translate([117, 201, 0])
    cube([1, 1, 2.35]);
  translate([118, 201, 0])
    cube([1, 1, 2.39]);
  translate([119, 201, 0])
    cube([1, 1, 2.20]);
  translate([120, 201, 0])
    cube([1, 1, 1.73]);
  translate([121, 201, 0])
    cube([1, 1, 1.84]);
  translate([122, 201, 0])
    cube([1, 1, 1.61]);
  translate([123, 201, 0])
    cube([1, 1, 1.41]);
  translate([124, 201, 0])
    cube([1, 1, 1.76]);
  translate([125, 201, 0])
    cube([1, 1, 2.35]);
  translate([126, 201, 0])
    cube([1, 1, 1.65]);
  translate([127, 201, 0])
    cube([1, 1, 1.96]);
  translate([128, 201, 0])
    cube([1, 1, 1.76]);
  translate([129, 201, 0])
    cube([1, 1, 1.37]);
  translate([130, 201, 0])
    cube([1, 1, 1.80]);
  translate([131, 201, 0])
    cube([1, 1, 2.31]);
  translate([132, 201, 0])
    cube([1, 1, 2.27]);
  translate([133, 201, 0])
    cube([1, 1, 1.84]);
  translate([134, 201, 0])
    cube([1, 1, 3.29]);
  translate([135, 201, 0])
    cube([1, 1, 2.63]);
  translate([136, 201, 0])
    cube([1, 1, 1.76]);
  translate([137, 201, 0])
    cube([1, 1, 2.71]);
  translate([138, 201, 0])
    cube([1, 1, 2.75]);
  translate([139, 201, 0])
    cube([1, 1, 2.51]);
  translate([140, 201, 0])
    cube([1, 1, 2.82]);
  translate([141, 201, 0])
    cube([1, 1, 2.51]);
  translate([142, 201, 0])
    cube([1, 1, 2.04]);
  translate([143, 201, 0])
    cube([1, 1, 2.24]);
  translate([144, 201, 0])
    cube([1, 1, 2.24]);
  translate([145, 201, 0])
    cube([1, 1, 2.55]);
  translate([146, 201, 0])
    cube([1, 1, 2.43]);
  translate([147, 201, 0])
    cube([1, 1, 2.16]);
  translate([148, 201, 0])
    cube([1, 1, 1.76]);
  translate([149, 201, 0])
    cube([1, 1, 1.80]);
  translate([150, 201, 0])
    cube([1, 1, 1.84]);
  translate([151, 201, 0])
    cube([1, 1, 1.73]);
  translate([152, 201, 0])
    cube([1, 1, 1.88]);
  translate([153, 201, 0])
    cube([1, 1, 1.84]);
  translate([154, 201, 0])
    cube([1, 1, 1.80]);
  translate([155, 201, 0])
    cube([1, 1, 1.92]);
  translate([156, 201, 0])
    cube([1, 1, 2.20]);
  translate([157, 201, 0])
    cube([1, 1, 2.35]);
  translate([158, 201, 0])
    cube([1, 1, 1.88]);
  translate([159, 201, 0])
    cube([1, 1, 1.92]);
  translate([160, 201, 0])
    cube([1, 1, 1.92]);
  translate([161, 201, 0])
    cube([1, 1, 1.92]);
  translate([162, 201, 0])
    cube([1, 1, 1.92]);
  translate([163, 201, 0])
    cube([1, 1, 1.96]);
  translate([164, 201, 0])
    cube([1, 1, 1.73]);
  translate([165, 201, 0])
    cube([1, 1, 1.53]);
  translate([166, 201, 0])
    cube([1, 1, 1.37]);
  translate([167, 201, 0])
    cube([1, 1, 1.53]);
  translate([168, 201, 0])
    cube([1, 1, 1.33]);
  translate([169, 201, 0])
    cube([1, 1, 1.69]);
  translate([170, 201, 0])
    cube([1, 1, 2.04]);
  translate([171, 201, 0])
    cube([1, 1, 1.88]);
  translate([172, 201, 0])
    cube([1, 1, 1.92]);
  translate([173, 201, 0])
    cube([1, 1, 1.96]);
  translate([174, 201, 0])
    cube([1, 1, 1.96]);
  translate([175, 201, 0])
    cube([1, 1, 1.96]);
  translate([176, 201, 0])
    cube([1, 1, 1.96]);
  translate([177, 201, 0])
    cube([1, 1, 1.96]);
  translate([178, 201, 0])
    cube([1, 1, 1.96]);
  translate([179, 201, 0])
    cube([1, 1, 1.96]);
  translate([180, 201, 0])
    cube([1, 1, 1.88]);
  translate([181, 201, 0])
    cube([1, 1, 7.53]);
  translate([182, 201, 0])
    cube([1, 1, 0.75]);
  translate([183, 201, 0])
    cube([1, 1, 0.94]);
  translate([184, 201, 0])
    cube([1, 1, 0.55]);
  translate([185, 201, 0])
    cube([1, 1, 0.51]);
  translate([186, 201, 0])
    cube([1, 1, 0.55]);
  translate([187, 201, 0])
    cube([1, 1, 0.51]);
  translate([188, 201, 0])
    cube([1, 1, 0.47]);
  translate([189, 201, 0])
    cube([1, 1, 0.47]);
  translate([190, 201, 0])
    cube([1, 1, 0.39]);
  translate([191, 201, 0])
    cube([1, 1, 0.47]);
  translate([192, 201, 0])
    cube([1, 1, 0.39]);
  translate([193, 201, 0])
    cube([1, 1, 6.08]);
  translate([194, 201, 0])
    cube([1, 1, 5.84]);
  translate([195, 201, 0])
    cube([1, 1, 5.76]);
  translate([196, 201, 0])
    cube([1, 1, 6.43]);
  translate([197, 201, 0])
    cube([1, 1, 6.47]);
  translate([198, 201, 0])
    cube([1, 1, 6.08]);
  translate([199, 201, 0])
    cube([1, 1, 5.61]);
  translate([200, 201, 0])
    cube([1, 1, 5.96]);
  translate([201, 201, 0])
    cube([1, 1, 5.02]);
  translate([202, 201, 0])
    cube([1, 1, 2.43]);
  translate([203, 201, 0])
    cube([1, 1, 7.45]);
  translate([204, 201, 0])
    cube([1, 1, 0.47]);
  translate([205, 201, 0])
    cube([1, 1, 0.90]);
  translate([206, 201, 0])
    cube([1, 1, 1.14]);
  translate([207, 201, 0])
    cube([1, 1, 2.00]);
  translate([208, 201, 0])
    cube([1, 1, 0.63]);
  translate([209, 201, 0])
    cube([1, 1, 2.08]);
  translate([210, 201, 0])
    cube([1, 1, 2.04]);
  translate([211, 201, 0])
    cube([1, 1, 2.04]);
  translate([212, 201, 0])
    cube([1, 1, 1.92]);
  translate([213, 201, 0])
    cube([1, 1, 1.45]);
  translate([214, 201, 0])
    cube([1, 1, 0.31]);
  translate([215, 201, 0])
    cube([1, 1, 0.35]);
  translate([216, 201, 0])
    cube([1, 1, 0.63]);
  translate([217, 201, 0])
    cube([1, 1, 0.35]);
  translate([218, 201, 0])
    cube([1, 1, 0.98]);
  translate([219, 201, 0])
    cube([1, 1, 0.35]);
  translate([220, 201, 0])
    cube([1, 1, 0.71]);
  translate([221, 201, 0])
    cube([1, 1, 1.57]);
  translate([222, 201, 0])
    cube([1, 1, 0.86]);
  translate([223, 201, 0])
    cube([1, 1, 2.12]);
  translate([224, 201, 0])
    cube([1, 1, 2.31]);
  translate([225, 201, 0])
    cube([1, 1, 1.02]);
  translate([226, 201, 0])
    cube([1, 1, 0.94]);
  translate([227, 201, 0])
    cube([1, 1, 0.78]);
  translate([228, 201, 0])
    cube([1, 1, 0.94]);
  translate([229, 201, 0])
    cube([1, 1, 2.82]);
  translate([230, 201, 0])
    cube([1, 1, 3.22]);
  translate([231, 201, 0])
    cube([1, 1, 1.80]);
  translate([232, 201, 0])
    cube([1, 1, 2.08]);
  translate([233, 201, 0])
    cube([1, 1, 9.10]);
  translate([234, 201, 0])
    cube([1, 1, 0.39]);
  translate([235, 201, 0])
    cube([1, 1, 1.06]);
  translate([236, 201, 0])
    cube([1, 1, 2.00]);
  translate([237, 201, 0])
    cube([1, 1, 2.00]);
  translate([238, 201, 0])
    cube([1, 1, 1.96]);
  translate([239, 201, 0])
    cube([1, 1, 1.96]);
  translate([240, 201, 0])
    cube([1, 1, 1.92]);
  translate([241, 201, 0])
    cube([1, 1, 1.92]);
  translate([242, 201, 0])
    cube([1, 1, 1.92]);
  translate([243, 201, 0])
    cube([1, 1, 1.92]);
  translate([244, 201, 0])
    cube([1, 1, 1.92]);
  translate([245, 201, 0])
    cube([1, 1, 1.92]);
  translate([246, 201, 0])
    cube([1, 1, 1.92]);
  translate([0, 202, 0])
    cube([1, 1, 2.12]);
  translate([1, 202, 0])
    cube([1, 1, 2.08]);
  translate([2, 202, 0])
    cube([1, 1, 2.08]);
  translate([3, 202, 0])
    cube([1, 1, 2.12]);
  translate([4, 202, 0])
    cube([1, 1, 2.12]);
  translate([5, 202, 0])
    cube([1, 1, 2.12]);
  translate([6, 202, 0])
    cube([1, 1, 2.08]);
  translate([7, 202, 0])
    cube([1, 1, 2.08]);
  translate([8, 202, 0])
    cube([1, 1, 2.08]);
  translate([9, 202, 0])
    cube([1, 1, 2.12]);
  translate([10, 202, 0])
    cube([1, 1, 2.12]);
  translate([11, 202, 0])
    cube([1, 1, 2.12]);
  translate([12, 202, 0])
    cube([1, 1, 2.08]);
  translate([13, 202, 0])
    cube([1, 1, 2.08]);
  translate([14, 202, 0])
    cube([1, 1, 2.08]);
  translate([15, 202, 0])
    cube([1, 1, 2.12]);
  translate([16, 202, 0])
    cube([1, 1, 2.12]);
  translate([17, 202, 0])
    cube([1, 1, 2.12]);
  translate([18, 202, 0])
    cube([1, 1, 2.12]);
  translate([19, 202, 0])
    cube([1, 1, 2.12]);
  translate([20, 202, 0])
    cube([1, 1, 2.12]);
  translate([21, 202, 0])
    cube([1, 1, 2.12]);
  translate([22, 202, 0])
    cube([1, 1, 2.12]);
  translate([23, 202, 0])
    cube([1, 1, 2.12]);
  translate([24, 202, 0])
    cube([1, 1, 2.12]);
  translate([25, 202, 0])
    cube([1, 1, 2.08]);
  translate([26, 202, 0])
    cube([1, 1, 2.08]);
  translate([27, 202, 0])
    cube([1, 1, 2.12]);
  translate([28, 202, 0])
    cube([1, 1, 2.12]);
  translate([29, 202, 0])
    cube([1, 1, 2.12]);
  translate([30, 202, 0])
    cube([1, 1, 2.12]);
  translate([31, 202, 0])
    cube([1, 1, 2.08]);
  translate([32, 202, 0])
    cube([1, 1, 2.12]);
  translate([33, 202, 0])
    cube([1, 1, 2.12]);
  translate([34, 202, 0])
    cube([1, 1, 2.12]);
  translate([35, 202, 0])
    cube([1, 1, 2.12]);
  translate([36, 202, 0])
    cube([1, 1, 2.12]);
  translate([37, 202, 0])
    cube([1, 1, 2.12]);
  translate([38, 202, 0])
    cube([1, 1, 2.12]);
  translate([39, 202, 0])
    cube([1, 1, 2.12]);
  translate([40, 202, 0])
    cube([1, 1, 2.12]);
  translate([41, 202, 0])
    cube([1, 1, 2.12]);
  translate([42, 202, 0])
    cube([1, 1, 2.12]);
  translate([43, 202, 0])
    cube([1, 1, 2.08]);
  translate([44, 202, 0])
    cube([1, 1, 2.12]);
  translate([45, 202, 0])
    cube([1, 1, 2.12]);
  translate([46, 202, 0])
    cube([1, 1, 2.04]);
  translate([47, 202, 0])
    cube([1, 1, 2.08]);
  translate([48, 202, 0])
    cube([1, 1, 2.08]);
  translate([49, 202, 0])
    cube([1, 1, 2.08]);
  translate([50, 202, 0])
    cube([1, 1, 2.08]);
  translate([51, 202, 0])
    cube([1, 1, 2.08]);
  translate([52, 202, 0])
    cube([1, 1, 2.08]);
  translate([53, 202, 0])
    cube([1, 1, 2.08]);
  translate([54, 202, 0])
    cube([1, 1, 2.08]);
  translate([55, 202, 0])
    cube([1, 1, 2.04]);
  translate([56, 202, 0])
    cube([1, 1, 2.00]);
  translate([57, 202, 0])
    cube([1, 1, 2.08]);
  translate([58, 202, 0])
    cube([1, 1, 2.00]);
  translate([59, 202, 0])
    cube([1, 1, 1.96]);
  translate([60, 202, 0])
    cube([1, 1, 2.08]);
  translate([61, 202, 0])
    cube([1, 1, 2.20]);
  translate([62, 202, 0])
    cube([1, 1, 1.69]);
  translate([63, 202, 0])
    cube([1, 1, 2.00]);
  translate([64, 202, 0])
    cube([1, 1, 2.08]);
  translate([65, 202, 0])
    cube([1, 1, 2.31]);
  translate([66, 202, 0])
    cube([1, 1, 6.27]);
  translate([67, 202, 0])
    cube([1, 1, 6.20]);
  translate([68, 202, 0])
    cube([1, 1, 6.59]);
  translate([69, 202, 0])
    cube([1, 1, 1.57]);
  translate([70, 202, 0])
    cube([1, 1, 5.25]);
  translate([71, 202, 0])
    cube([1, 1, 4.63]);
  translate([72, 202, 0])
    cube([1, 1, 4.20]);
  translate([73, 202, 0])
    cube([1, 1, 1.92]);
  translate([74, 202, 0])
    cube([1, 1, 0.90]);
  translate([75, 202, 0])
    cube([1, 1, 1.73]);
  translate([76, 202, 0])
    cube([1, 1, 1.61]);
  translate([77, 202, 0])
    cube([1, 1, 1.57]);
  translate([78, 202, 0])
    cube([1, 1, 1.69]);
  translate([79, 202, 0])
    cube([1, 1, 2.35]);
  translate([80, 202, 0])
    cube([1, 1, 1.96]);
  translate([81, 202, 0])
    cube([1, 1, 1.65]);
  translate([82, 202, 0])
    cube([1, 1, 1.57]);
  translate([83, 202, 0])
    cube([1, 1, 1.76]);
  translate([84, 202, 0])
    cube([1, 1, 1.92]);
  translate([85, 202, 0])
    cube([1, 1, 2.16]);
  translate([86, 202, 0])
    cube([1, 1, 2.43]);
  translate([87, 202, 0])
    cube([1, 1, 2.51]);
  translate([88, 202, 0])
    cube([1, 1, 2.08]);
  translate([89, 202, 0])
    cube([1, 1, 2.08]);
  translate([90, 202, 0])
    cube([1, 1, 2.27]);
  translate([91, 202, 0])
    cube([1, 1, 2.12]);
  translate([92, 202, 0])
    cube([1, 1, 2.43]);
  translate([93, 202, 0])
    cube([1, 1, 2.67]);
  translate([94, 202, 0])
    cube([1, 1, 2.43]);
  translate([95, 202, 0])
    cube([1, 1, 1.76]);
  translate([96, 202, 0])
    cube([1, 1, 2.20]);
  translate([97, 202, 0])
    cube([1, 1, 2.00]);
  translate([98, 202, 0])
    cube([1, 1, 1.84]);
  translate([99, 202, 0])
    cube([1, 1, 1.45]);
  translate([100, 202, 0])
    cube([1, 1, 1.06]);
  translate([101, 202, 0])
    cube([1, 1, 2.24]);
  translate([102, 202, 0])
    cube([1, 1, 2.71]);
  translate([103, 202, 0])
    cube([1, 1, 3.29]);
  translate([104, 202, 0])
    cube([1, 1, 2.12]);
  translate([105, 202, 0])
    cube([1, 1, 2.16]);
  translate([106, 202, 0])
    cube([1, 1, 2.71]);
  translate([107, 202, 0])
    cube([1, 1, 2.08]);
  translate([108, 202, 0])
    cube([1, 1, 1.41]);
  translate([109, 202, 0])
    cube([1, 1, 1.65]);
  translate([110, 202, 0])
    cube([1, 1, 2.00]);
  translate([111, 202, 0])
    cube([1, 1, 1.92]);
  translate([112, 202, 0])
    cube([1, 1, 2.04]);
  translate([113, 202, 0])
    cube([1, 1, 2.04]);
  translate([114, 202, 0])
    cube([1, 1, 2.00]);
  translate([115, 202, 0])
    cube([1, 1, 1.92]);
  translate([116, 202, 0])
    cube([1, 1, 2.04]);
  translate([117, 202, 0])
    cube([1, 1, 1.53]);
  translate([118, 202, 0])
    cube([1, 1, 1.73]);
  translate([119, 202, 0])
    cube([1, 1, 1.41]);
  translate([120, 202, 0])
    cube([1, 1, 1.76]);
  translate([121, 202, 0])
    cube([1, 1, 2.39]);
  translate([122, 202, 0])
    cube([1, 1, 2.12]);
  translate([123, 202, 0])
    cube([1, 1, 2.04]);
  translate([124, 202, 0])
    cube([1, 1, 2.31]);
  translate([125, 202, 0])
    cube([1, 1, 1.92]);
  translate([126, 202, 0])
    cube([1, 1, 1.88]);
  translate([127, 202, 0])
    cube([1, 1, 2.12]);
  translate([128, 202, 0])
    cube([1, 1, 2.27]);
  translate([129, 202, 0])
    cube([1, 1, 2.71]);
  translate([130, 202, 0])
    cube([1, 1, 2.04]);
  translate([131, 202, 0])
    cube([1, 1, 2.08]);
  translate([132, 202, 0])
    cube([1, 1, 2.43]);
  translate([133, 202, 0])
    cube([1, 1, 2.43]);
  translate([134, 202, 0])
    cube([1, 1, 2.16]);
  translate([135, 202, 0])
    cube([1, 1, 2.47]);
  translate([136, 202, 0])
    cube([1, 1, 2.16]);
  translate([137, 202, 0])
    cube([1, 1, 2.82]);
  translate([138, 202, 0])
    cube([1, 1, 2.78]);
  translate([139, 202, 0])
    cube([1, 1, 2.82]);
  translate([140, 202, 0])
    cube([1, 1, 2.55]);
  translate([141, 202, 0])
    cube([1, 1, 2.67]);
  translate([142, 202, 0])
    cube([1, 1, 2.20]);
  translate([143, 202, 0])
    cube([1, 1, 1.96]);
  translate([144, 202, 0])
    cube([1, 1, 2.04]);
  translate([145, 202, 0])
    cube([1, 1, 2.24]);
  translate([146, 202, 0])
    cube([1, 1, 2.55]);
  translate([147, 202, 0])
    cube([1, 1, 2.43]);
  translate([148, 202, 0])
    cube([1, 1, 1.84]);
  translate([149, 202, 0])
    cube([1, 1, 2.04]);
  translate([150, 202, 0])
    cube([1, 1, 2.12]);
  translate([151, 202, 0])
    cube([1, 1, 1.92]);
  translate([152, 202, 0])
    cube([1, 1, 1.96]);
  translate([153, 202, 0])
    cube([1, 1, 1.88]);
  translate([154, 202, 0])
    cube([1, 1, 1.88]);
  translate([155, 202, 0])
    cube([1, 1, 1.96]);
  translate([156, 202, 0])
    cube([1, 1, 2.00]);
  translate([157, 202, 0])
    cube([1, 1, 1.96]);
  translate([158, 202, 0])
    cube([1, 1, 1.92]);
  translate([159, 202, 0])
    cube([1, 1, 1.92]);
  translate([160, 202, 0])
    cube([1, 1, 1.88]);
  translate([161, 202, 0])
    cube([1, 1, 2.00]);
  translate([162, 202, 0])
    cube([1, 1, 0.98]);
  translate([163, 202, 0])
    cube([1, 1, 1.18]);
  translate([164, 202, 0])
    cube([1, 1, 1.29]);
  translate([165, 202, 0])
    cube([1, 1, 1.37]);
  translate([166, 202, 0])
    cube([1, 1, 1.84]);
  translate([167, 202, 0])
    cube([1, 1, 2.63]);
  translate([168, 202, 0])
    cube([1, 1, 1.69]);
  translate([169, 202, 0])
    cube([1, 1, 1.29]);
  translate([170, 202, 0])
    cube([1, 1, 1.18]);
  translate([171, 202, 0])
    cube([1, 1, 1.88]);
  translate([172, 202, 0])
    cube([1, 1, 1.92]);
  translate([173, 202, 0])
    cube([1, 1, 2.00]);
  translate([174, 202, 0])
    cube([1, 1, 2.00]);
  translate([175, 202, 0])
    cube([1, 1, 2.00]);
  translate([176, 202, 0])
    cube([1, 1, 1.96]);
  translate([177, 202, 0])
    cube([1, 1, 1.96]);
  translate([178, 202, 0])
    cube([1, 1, 1.96]);
  translate([179, 202, 0])
    cube([1, 1, 1.96]);
  translate([180, 202, 0])
    cube([1, 1, 1.92]);
  translate([181, 202, 0])
    cube([1, 1, 2.20]);
  translate([182, 202, 0])
    cube([1, 1, 0.47]);
  translate([183, 202, 0])
    cube([1, 1, 0.43]);
  translate([184, 202, 0])
    cube([1, 1, 0.55]);
  translate([185, 202, 0])
    cube([1, 1, 0.67]);
  translate([186, 202, 0])
    cube([1, 1, 0.71]);
  translate([187, 202, 0])
    cube([1, 1, 0.63]);
  translate([188, 202, 0])
    cube([1, 1, 0.59]);
  translate([189, 202, 0])
    cube([1, 1, 0.43]);
  translate([190, 202, 0])
    cube([1, 1, 0.47]);
  translate([191, 202, 0])
    cube([1, 1, 0.47]);
  translate([192, 202, 0])
    cube([1, 1, 0.31]);
  translate([193, 202, 0])
    cube([1, 1, 2.00]);
  translate([194, 202, 0])
    cube([1, 1, 4.59]);
  translate([195, 202, 0])
    cube([1, 1, 4.47]);
  translate([196, 202, 0])
    cube([1, 1, 5.61]);
  translate([197, 202, 0])
    cube([1, 1, 6.04]);
  translate([198, 202, 0])
    cube([1, 1, 6.27]);
  translate([199, 202, 0])
    cube([1, 1, 6.24]);
  translate([200, 202, 0])
    cube([1, 1, 6.47]);
  translate([201, 202, 0])
    cube([1, 1, 6.12]);
  translate([202, 202, 0])
    cube([1, 1, 3.57]);
  translate([203, 202, 0])
    cube([1, 1, 4.71]);
  translate([204, 202, 0])
    cube([1, 1, 2.04]);
  translate([205, 202, 0])
    cube([1, 1, 0.27]);
  translate([206, 202, 0])
    cube([1, 1, 0.75]);
  translate([207, 202, 0])
    cube([1, 1, 0.86]);
  translate([208, 202, 0])
    cube([1, 1, 1.10]);
  translate([209, 202, 0])
    cube([1, 1, 2.04]);
  translate([210, 202, 0])
    cube([1, 1, 2.04]);
  translate([211, 202, 0])
    cube([1, 1, 2.00]);
  translate([212, 202, 0])
    cube([1, 1, 1.92]);
  translate([213, 202, 0])
    cube([1, 1, 1.96]);
  translate([214, 202, 0])
    cube([1, 1, 2.27]);
  translate([215, 202, 0])
    cube([1, 1, 0.24]);
  translate([216, 202, 0])
    cube([1, 1, 0.20]);
  translate([217, 202, 0])
    cube([1, 1, 0.71]);
  translate([218, 202, 0])
    cube([1, 1, 0.35]);
  translate([219, 202, 0])
    cube([1, 1, 0.63]);
  translate([220, 202, 0])
    cube([1, 1, 0.27]);
  translate([221, 202, 0])
    cube([1, 1, 0.24]);
  translate([222, 202, 0])
    cube([1, 1, 1.76]);
  translate([223, 202, 0])
    cube([1, 1, 1.06]);
  translate([224, 202, 0])
    cube([1, 1, 0.90]);
  translate([225, 202, 0])
    cube([1, 1, 2.63]);
  translate([226, 202, 0])
    cube([1, 1, 1.25]);
  translate([227, 202, 0])
    cube([1, 1, 0.94]);
  translate([228, 202, 0])
    cube([1, 1, 1.18]);
  translate([229, 202, 0])
    cube([1, 1, 1.14]);
  translate([230, 202, 0])
    cube([1, 1, 2.16]);
  translate([231, 202, 0])
    cube([1, 1, 2.86]);
  translate([232, 202, 0])
    cube([1, 1, 1.45]);
  translate([233, 202, 0])
    cube([1, 1, 1.29]);
  translate([234, 202, 0])
    cube([1, 1, 0.12]);
  translate([235, 202, 0])
    cube([1, 1, 0.24]);
  translate([236, 202, 0])
    cube([1, 1, 0.27]);
  translate([237, 202, 0])
    cube([1, 1, 1.96]);
  translate([238, 202, 0])
    cube([1, 1, 2.00]);
  translate([239, 202, 0])
    cube([1, 1, 2.39]);
  translate([240, 202, 0])
    cube([1, 1, 1.96]);
  translate([241, 202, 0])
    cube([1, 1, 1.92]);
  translate([242, 202, 0])
    cube([1, 1, 1.92]);
  translate([243, 202, 0])
    cube([1, 1, 1.92]);
  translate([244, 202, 0])
    cube([1, 1, 1.92]);
  translate([245, 202, 0])
    cube([1, 1, 1.92]);
  translate([246, 202, 0])
    cube([1, 1, 1.92]);
  translate([0, 203, 0])
    cube([1, 1, 2.12]);
  translate([1, 203, 0])
    cube([1, 1, 2.08]);
  translate([2, 203, 0])
    cube([1, 1, 2.08]);
  translate([3, 203, 0])
    cube([1, 1, 2.12]);
  translate([4, 203, 0])
    cube([1, 1, 2.12]);
  translate([5, 203, 0])
    cube([1, 1, 2.12]);
  translate([6, 203, 0])
    cube([1, 1, 2.16]);
  translate([7, 203, 0])
    cube([1, 1, 2.16]);
  translate([8, 203, 0])
    cube([1, 1, 2.16]);
  translate([9, 203, 0])
    cube([1, 1, 2.12]);
  translate([10, 203, 0])
    cube([1, 1, 2.12]);
  translate([11, 203, 0])
    cube([1, 1, 2.08]);
  translate([12, 203, 0])
    cube([1, 1, 2.08]);
  translate([13, 203, 0])
    cube([1, 1, 2.08]);
  translate([14, 203, 0])
    cube([1, 1, 2.08]);
  translate([15, 203, 0])
    cube([1, 1, 2.12]);
  translate([16, 203, 0])
    cube([1, 1, 2.12]);
  translate([17, 203, 0])
    cube([1, 1, 2.12]);
  translate([18, 203, 0])
    cube([1, 1, 2.12]);
  translate([19, 203, 0])
    cube([1, 1, 2.12]);
  translate([20, 203, 0])
    cube([1, 1, 2.12]);
  translate([21, 203, 0])
    cube([1, 1, 2.12]);
  translate([22, 203, 0])
    cube([1, 1, 2.12]);
  translate([23, 203, 0])
    cube([1, 1, 2.12]);
  translate([24, 203, 0])
    cube([1, 1, 2.12]);
  translate([25, 203, 0])
    cube([1, 1, 2.16]);
  translate([26, 203, 0])
    cube([1, 1, 2.16]);
  translate([27, 203, 0])
    cube([1, 1, 2.12]);
  translate([28, 203, 0])
    cube([1, 1, 2.12]);
  translate([29, 203, 0])
    cube([1, 1, 2.12]);
  translate([30, 203, 0])
    cube([1, 1, 2.12]);
  translate([31, 203, 0])
    cube([1, 1, 2.08]);
  translate([32, 203, 0])
    cube([1, 1, 2.12]);
  translate([33, 203, 0])
    cube([1, 1, 2.12]);
  translate([34, 203, 0])
    cube([1, 1, 2.12]);
  translate([35, 203, 0])
    cube([1, 1, 2.12]);
  translate([36, 203, 0])
    cube([1, 1, 2.12]);
  translate([37, 203, 0])
    cube([1, 1, 2.12]);
  translate([38, 203, 0])
    cube([1, 1, 2.12]);
  translate([39, 203, 0])
    cube([1, 1, 2.12]);
  translate([40, 203, 0])
    cube([1, 1, 2.16]);
  translate([41, 203, 0])
    cube([1, 1, 2.12]);
  translate([42, 203, 0])
    cube([1, 1, 2.12]);
  translate([43, 203, 0])
    cube([1, 1, 2.08]);
  translate([44, 203, 0])
    cube([1, 1, 2.12]);
  translate([45, 203, 0])
    cube([1, 1, 2.12]);
  translate([46, 203, 0])
    cube([1, 1, 2.04]);
  translate([47, 203, 0])
    cube([1, 1, 2.08]);
  translate([48, 203, 0])
    cube([1, 1, 2.08]);
  translate([49, 203, 0])
    cube([1, 1, 2.08]);
  translate([50, 203, 0])
    cube([1, 1, 2.08]);
  translate([51, 203, 0])
    cube([1, 1, 2.08]);
  translate([52, 203, 0])
    cube([1, 1, 2.08]);
  translate([53, 203, 0])
    cube([1, 1, 2.08]);
  translate([54, 203, 0])
    cube([1, 1, 2.08]);
  translate([55, 203, 0])
    cube([1, 1, 2.04]);
  translate([56, 203, 0])
    cube([1, 1, 2.12]);
  translate([57, 203, 0])
    cube([1, 1, 2.08]);
  translate([58, 203, 0])
    cube([1, 1, 1.65]);
  translate([59, 203, 0])
    cube([1, 1, 1.22]);
  translate([60, 203, 0])
    cube([1, 1, 1.22]);
  translate([61, 203, 0])
    cube([1, 1, 1.65]);
  translate([62, 203, 0])
    cube([1, 1, 3.61]);
  translate([63, 203, 0])
    cube([1, 1, 2.82]);
  translate([64, 203, 0])
    cube([1, 1, 1.49]);
  translate([65, 203, 0])
    cube([1, 1, 2.24]);
  translate([66, 203, 0])
    cube([1, 1, 5.80]);
  translate([67, 203, 0])
    cube([1, 1, 6.12]);
  translate([68, 203, 0])
    cube([1, 1, 5.92]);
  translate([69, 203, 0])
    cube([1, 1, 3.69]);
  translate([70, 203, 0])
    cube([1, 1, 3.29]);
  translate([71, 203, 0])
    cube([1, 1, 3.10]);
  translate([72, 203, 0])
    cube([1, 1, 1.06]);
  translate([73, 203, 0])
    cube([1, 1, 3.22]);
  translate([74, 203, 0])
    cube([1, 1, 0.98]);
  translate([75, 203, 0])
    cube([1, 1, 0.71]);
  translate([76, 203, 0])
    cube([1, 1, 1.92]);
  translate([77, 203, 0])
    cube([1, 1, 1.14]);
  translate([78, 203, 0])
    cube([1, 1, 1.45]);
  translate([79, 203, 0])
    cube([1, 1, 2.16]);
  translate([80, 203, 0])
    cube([1, 1, 2.16]);
  translate([81, 203, 0])
    cube([1, 1, 2.51]);
  translate([82, 203, 0])
    cube([1, 1, 1.84]);
  translate([83, 203, 0])
    cube([1, 1, 2.04]);
  translate([84, 203, 0])
    cube([1, 1, 1.80]);
  translate([85, 203, 0])
    cube([1, 1, 1.88]);
  translate([86, 203, 0])
    cube([1, 1, 2.12]);
  translate([87, 203, 0])
    cube([1, 1, 2.12]);
  translate([88, 203, 0])
    cube([1, 1, 2.35]);
  translate([89, 203, 0])
    cube([1, 1, 1.80]);
  translate([90, 203, 0])
    cube([1, 1, 2.16]);
  translate([91, 203, 0])
    cube([1, 1, 2.78]);
  translate([92, 203, 0])
    cube([1, 1, 2.31]);
  translate([93, 203, 0])
    cube([1, 1, 2.27]);
  translate([94, 203, 0])
    cube([1, 1, 2.16]);
  translate([95, 203, 0])
    cube([1, 1, 2.39]);
  translate([96, 203, 0])
    cube([1, 1, 2.00]);
  translate([97, 203, 0])
    cube([1, 1, 2.31]);
  translate([98, 203, 0])
    cube([1, 1, 1.96]);
  translate([99, 203, 0])
    cube([1, 1, 2.24]);
  translate([100, 203, 0])
    cube([1, 1, 2.63]);
  translate([101, 203, 0])
    cube([1, 1, 2.00]);
  translate([102, 203, 0])
    cube([1, 1, 1.80]);
  translate([103, 203, 0])
    cube([1, 1, 2.98]);
  translate([104, 203, 0])
    cube([1, 1, 2.08]);
  translate([105, 203, 0])
    cube([1, 1, 1.92]);
  translate([106, 203, 0])
    cube([1, 1, 3.10]);
  translate([107, 203, 0])
    cube([1, 1, 2.27]);
  translate([108, 203, 0])
    cube([1, 1, 2.31]);
  translate([109, 203, 0])
    cube([1, 1, 2.43]);
  translate([110, 203, 0])
    cube([1, 1, 2.51]);
  translate([111, 203, 0])
    cube([1, 1, 2.27]);
  translate([112, 203, 0])
    cube([1, 1, 1.73]);
  translate([113, 203, 0])
    cube([1, 1, 1.57]);
  translate([114, 203, 0])
    cube([1, 1, 1.61]);
  translate([115, 203, 0])
    cube([1, 1, 1.25]);
  translate([116, 203, 0])
    cube([1, 1, 1.53]);
  translate([117, 203, 0])
    cube([1, 1, 1.73]);
  translate([118, 203, 0])
    cube([1, 1, 1.69]);
  translate([119, 203, 0])
    cube([1, 1, 2.35]);
  translate([120, 203, 0])
    cube([1, 1, 2.31]);
  translate([121, 203, 0])
    cube([1, 1, 1.76]);
  translate([122, 203, 0])
    cube([1, 1, 1.57]);
  translate([123, 203, 0])
    cube([1, 1, 2.35]);
  translate([124, 203, 0])
    cube([1, 1, 2.08]);
  translate([125, 203, 0])
    cube([1, 1, 2.12]);
  translate([126, 203, 0])
    cube([1, 1, 2.16]);
  translate([127, 203, 0])
    cube([1, 1, 1.33]);
  translate([128, 203, 0])
    cube([1, 1, 2.47]);
  translate([129, 203, 0])
    cube([1, 1, 2.71]);
  translate([130, 203, 0])
    cube([1, 1, 2.16]);
  translate([131, 203, 0])
    cube([1, 1, 2.35]);
  translate([132, 203, 0])
    cube([1, 1, 2.20]);
  translate([133, 203, 0])
    cube([1, 1, 2.63]);
  translate([134, 203, 0])
    cube([1, 1, 1.25]);
  translate([135, 203, 0])
    cube([1, 1, 1.69]);
  translate([136, 203, 0])
    cube([1, 1, 2.08]);
  translate([137, 203, 0])
    cube([1, 1, 2.31]);
  translate([138, 203, 0])
    cube([1, 1, 2.67]);
  translate([139, 203, 0])
    cube([1, 1, 2.67]);
  translate([140, 203, 0])
    cube([1, 1, 2.55]);
  translate([141, 203, 0])
    cube([1, 1, 2.27]);
  translate([142, 203, 0])
    cube([1, 1, 2.16]);
  translate([143, 203, 0])
    cube([1, 1, 2.24]);
  translate([144, 203, 0])
    cube([1, 1, 2.24]);
  translate([145, 203, 0])
    cube([1, 1, 2.04]);
  translate([146, 203, 0])
    cube([1, 1, 1.65]);
  translate([147, 203, 0])
    cube([1, 1, 1.69]);
  translate([148, 203, 0])
    cube([1, 1, 2.47]);
  translate([149, 203, 0])
    cube([1, 1, 2.27]);
  translate([150, 203, 0])
    cube([1, 1, 2.31]);
  translate([151, 203, 0])
    cube([1, 1, 2.24]);
  translate([152, 203, 0])
    cube([1, 1, 2.12]);
  translate([153, 203, 0])
    cube([1, 1, 1.96]);
  translate([154, 203, 0])
    cube([1, 1, 2.08]);
  translate([155, 203, 0])
    cube([1, 1, 1.96]);
  translate([156, 203, 0])
    cube([1, 1, 2.94]);
  translate([157, 203, 0])
    cube([1, 1, 2.43]);
  translate([158, 203, 0])
    cube([1, 1, 1.92]);
  translate([159, 203, 0])
    cube([1, 1, 1.92]);
  translate([160, 203, 0])
    cube([1, 1, 1.88]);
  translate([161, 203, 0])
    cube([1, 1, 0.78]);
  translate([162, 203, 0])
    cube([1, 1, 0.94]);
  translate([163, 203, 0])
    cube([1, 1, 1.14]);
  translate([164, 203, 0])
    cube([1, 1, 1.22]);
  translate([165, 203, 0])
    cube([1, 1, 1.25]);
  translate([166, 203, 0])
    cube([1, 1, 2.47]);
  translate([167, 203, 0])
    cube([1, 1, 3.10]);
  translate([168, 203, 0])
    cube([1, 1, 2.71]);
  translate([169, 203, 0])
    cube([1, 1, 1.41]);
  translate([170, 203, 0])
    cube([1, 1, 1.37]);
  translate([171, 203, 0])
    cube([1, 1, 1.53]);
  translate([172, 203, 0])
    cube([1, 1, 1.92]);
  translate([173, 203, 0])
    cube([1, 1, 2.00]);
  translate([174, 203, 0])
    cube([1, 1, 1.96]);
  translate([175, 203, 0])
    cube([1, 1, 1.92]);
  translate([176, 203, 0])
    cube([1, 1, 1.96]);
  translate([177, 203, 0])
    cube([1, 1, 1.96]);
  translate([178, 203, 0])
    cube([1, 1, 1.96]);
  translate([179, 203, 0])
    cube([1, 1, 1.96]);
  translate([180, 203, 0])
    cube([1, 1, 1.76]);
  translate([181, 203, 0])
    cube([1, 1, 1.73]);
  translate([182, 203, 0])
    cube([1, 1, 2.20]);
  translate([183, 203, 0])
    cube([1, 1, 0.67]);
  translate([184, 203, 0])
    cube([1, 1, 0.51]);
  translate([185, 203, 0])
    cube([1, 1, 0.75]);
  translate([186, 203, 0])
    cube([1, 1, 0.55]);
  translate([187, 203, 0])
    cube([1, 1, 0.75]);
  translate([188, 203, 0])
    cube([1, 1, 0.59]);
  translate([189, 203, 0])
    cube([1, 1, 0.51]);
  translate([190, 203, 0])
    cube([1, 1, 0.47]);
  translate([191, 203, 0])
    cube([1, 1, 0.47]);
  translate([192, 203, 0])
    cube([1, 1, 2.67]);
  translate([193, 203, 0])
    cube([1, 1, 1.92]);
  translate([194, 203, 0])
    cube([1, 1, 0.35]);
  translate([195, 203, 0])
    cube([1, 1, 2.75]);
  translate([196, 203, 0])
    cube([1, 1, 3.73]);
  translate([197, 203, 0])
    cube([1, 1, 4.47]);
  translate([198, 203, 0])
    cube([1, 1, 5.25]);
  translate([199, 203, 0])
    cube([1, 1, 5.76]);
  translate([200, 203, 0])
    cube([1, 1, 5.80]);
  translate([201, 203, 0])
    cube([1, 1, 4.86]);
  translate([202, 203, 0])
    cube([1, 1, 3.41]);
  translate([203, 203, 0])
    cube([1, 1, 1.57]);
  translate([204, 203, 0])
    cube([1, 1, 1.96]);
  translate([205, 203, 0])
    cube([1, 1, 2.00]);
  translate([206, 203, 0])
    cube([1, 1, 2.08]);
  translate([207, 203, 0])
    cube([1, 1, 0.16]);
  translate([208, 203, 0])
    cube([1, 1, 0.86]);
  translate([209, 203, 0])
    cube([1, 1, 1.29]);
  translate([210, 203, 0])
    cube([1, 1, 1.96]);
  translate([211, 203, 0])
    cube([1, 1, 2.16]);
  translate([212, 203, 0])
    cube([1, 1, 1.92]);
  translate([213, 203, 0])
    cube([1, 1, 1.96]);
  translate([214, 203, 0])
    cube([1, 1, 2.51]);
  translate([215, 203, 0])
    cube([1, 1, 0.47]);
  translate([216, 203, 0])
    cube([1, 1, 1.18]);
  translate([217, 203, 0])
    cube([1, 1, 0.35]);
  translate([218, 203, 0])
    cube([1, 1, 0.35]);
  translate([219, 203, 0])
    cube([1, 1, 0.71]);
  translate([220, 203, 0])
    cube([1, 1, 0.47]);
  translate([221, 203, 0])
    cube([1, 1, 1.33]);
  translate([222, 203, 0])
    cube([1, 1, 0.04]);
  translate([223, 203, 0])
    cube([1, 1, 0.35]);
  translate([224, 203, 0])
    cube([1, 1, 1.49]);
  translate([225, 203, 0])
    cube([1, 1, 1.02]);
  translate([226, 203, 0])
    cube([1, 1, 1.69]);
  translate([227, 203, 0])
    cube([1, 1, 2.47]);
  translate([228, 203, 0])
    cube([1, 1, 0.86]);
  translate([229, 203, 0])
    cube([1, 1, 0.94]);
  translate([230, 203, 0])
    cube([1, 1, 0.90]);
  translate([231, 203, 0])
    cube([1, 1, 1.14]);
  translate([232, 203, 0])
    cube([1, 1, 0.90]);
  translate([233, 203, 0])
    cube([1, 1, 0.55]);
  translate([234, 203, 0])
    cube([1, 1, 0.27]);
  translate([235, 203, 0])
    cube([1, 1, 0.75]);
  translate([236, 203, 0])
    cube([1, 1, 0.04]);
  translate([237, 203, 0])
    cube([1, 1, 0.31]);
  translate([238, 203, 0])
    cube([1, 1, 0.51]);
  translate([239, 203, 0])
    cube([1, 1, 1.76]);
  translate([240, 203, 0])
    cube([1, 1, 1.96]);
  translate([241, 203, 0])
    cube([1, 1, 1.92]);
  translate([242, 203, 0])
    cube([1, 1, 1.92]);
  translate([243, 203, 0])
    cube([1, 1, 1.92]);
  translate([244, 203, 0])
    cube([1, 1, 1.92]);
  translate([245, 203, 0])
    cube([1, 1, 1.92]);
  translate([246, 203, 0])
    cube([1, 1, 1.92]);
  translate([0, 204, 0])
    cube([1, 1, 2.12]);
  translate([1, 204, 0])
    cube([1, 1, 2.12]);
  translate([2, 204, 0])
    cube([1, 1, 2.12]);
  translate([3, 204, 0])
    cube([1, 1, 2.16]);
  translate([4, 204, 0])
    cube([1, 1, 2.12]);
  translate([5, 204, 0])
    cube([1, 1, 2.12]);
  translate([6, 204, 0])
    cube([1, 1, 2.12]);
  translate([7, 204, 0])
    cube([1, 1, 2.12]);
  translate([8, 204, 0])
    cube([1, 1, 2.12]);
  translate([9, 204, 0])
    cube([1, 1, 2.12]);
  translate([10, 204, 0])
    cube([1, 1, 2.12]);
  translate([11, 204, 0])
    cube([1, 1, 2.12]);
  translate([12, 204, 0])
    cube([1, 1, 2.08]);
  translate([13, 204, 0])
    cube([1, 1, 2.12]);
  translate([14, 204, 0])
    cube([1, 1, 2.12]);
  translate([15, 204, 0])
    cube([1, 1, 2.12]);
  translate([16, 204, 0])
    cube([1, 1, 2.12]);
  translate([17, 204, 0])
    cube([1, 1, 2.08]);
  translate([18, 204, 0])
    cube([1, 1, 2.12]);
  translate([19, 204, 0])
    cube([1, 1, 2.12]);
  translate([20, 204, 0])
    cube([1, 1, 2.12]);
  translate([21, 204, 0])
    cube([1, 1, 2.12]);
  translate([22, 204, 0])
    cube([1, 1, 2.12]);
  translate([23, 204, 0])
    cube([1, 1, 2.12]);
  translate([24, 204, 0])
    cube([1, 1, 2.12]);
  translate([25, 204, 0])
    cube([1, 1, 2.12]);
  translate([26, 204, 0])
    cube([1, 1, 2.12]);
  translate([27, 204, 0])
    cube([1, 1, 2.12]);
  translate([28, 204, 0])
    cube([1, 1, 2.12]);
  translate([29, 204, 0])
    cube([1, 1, 2.12]);
  translate([30, 204, 0])
    cube([1, 1, 2.12]);
  translate([31, 204, 0])
    cube([1, 1, 2.12]);
  translate([32, 204, 0])
    cube([1, 1, 2.12]);
  translate([33, 204, 0])
    cube([1, 1, 2.12]);
  translate([34, 204, 0])
    cube([1, 1, 2.12]);
  translate([35, 204, 0])
    cube([1, 1, 2.12]);
  translate([36, 204, 0])
    cube([1, 1, 2.12]);
  translate([37, 204, 0])
    cube([1, 1, 2.12]);
  translate([38, 204, 0])
    cube([1, 1, 2.12]);
  translate([39, 204, 0])
    cube([1, 1, 2.12]);
  translate([40, 204, 0])
    cube([1, 1, 2.12]);
  translate([41, 204, 0])
    cube([1, 1, 2.12]);
  translate([42, 204, 0])
    cube([1, 1, 2.12]);
  translate([43, 204, 0])
    cube([1, 1, 2.12]);
  translate([44, 204, 0])
    cube([1, 1, 2.12]);
  translate([45, 204, 0])
    cube([1, 1, 2.12]);
  translate([46, 204, 0])
    cube([1, 1, 2.12]);
  translate([47, 204, 0])
    cube([1, 1, 2.00]);
  translate([48, 204, 0])
    cube([1, 1, 2.16]);
  translate([49, 204, 0])
    cube([1, 1, 2.08]);
  translate([50, 204, 0])
    cube([1, 1, 2.08]);
  translate([51, 204, 0])
    cube([1, 1, 2.08]);
  translate([52, 204, 0])
    cube([1, 1, 2.08]);
  translate([53, 204, 0])
    cube([1, 1, 2.08]);
  translate([54, 204, 0])
    cube([1, 1, 2.08]);
  translate([55, 204, 0])
    cube([1, 1, 2.08]);
  translate([56, 204, 0])
    cube([1, 1, 4.27]);
  translate([57, 204, 0])
    cube([1, 1, 4.24]);
  translate([58, 204, 0])
    cube([1, 1, 1.22]);
  translate([59, 204, 0])
    cube([1, 1, 1.18]);
  translate([60, 204, 0])
    cube([1, 1, 1.25]);
  translate([61, 204, 0])
    cube([1, 1, 1.49]);
  translate([62, 204, 0])
    cube([1, 1, 5.06]);
  translate([63, 204, 0])
    cube([1, 1, 4.51]);
  translate([64, 204, 0])
    cube([1, 1, 3.02]);
  translate([65, 204, 0])
    cube([1, 1, 0.98]);
  translate([66, 204, 0])
    cube([1, 1, 1.57]);
  translate([67, 204, 0])
    cube([1, 1, 5.53]);
  translate([68, 204, 0])
    cube([1, 1, 2.20]);
  translate([69, 204, 0])
    cube([1, 1, 7.57]);
  translate([70, 204, 0])
    cube([1, 1, 3.65]);
  translate([71, 204, 0])
    cube([1, 1, 3.53]);
  translate([72, 204, 0])
    cube([1, 1, 1.92]);
  translate([73, 204, 0])
    cube([1, 1, 2.86]);
  translate([74, 204, 0])
    cube([1, 1, 1.18]);
  translate([75, 204, 0])
    cube([1, 1, 1.37]);
  translate([76, 204, 0])
    cube([1, 1, 1.76]);
  translate([77, 204, 0])
    cube([1, 1, 2.08]);
  translate([78, 204, 0])
    cube([1, 1, 1.33]);
  translate([79, 204, 0])
    cube([1, 1, 2.00]);
  translate([80, 204, 0])
    cube([1, 1, 2.43]);
  translate([81, 204, 0])
    cube([1, 1, 2.63]);
  translate([82, 204, 0])
    cube([1, 1, 2.59]);
  translate([83, 204, 0])
    cube([1, 1, 2.00]);
  translate([84, 204, 0])
    cube([1, 1, 2.20]);
  translate([85, 204, 0])
    cube([1, 1, 2.04]);
  translate([86, 204, 0])
    cube([1, 1, 1.73]);
  translate([87, 204, 0])
    cube([1, 1, 1.53]);
  translate([88, 204, 0])
    cube([1, 1, 1.76]);
  translate([89, 204, 0])
    cube([1, 1, 1.18]);
  translate([90, 204, 0])
    cube([1, 1, 1.57]);
  translate([91, 204, 0])
    cube([1, 1, 2.31]);
  translate([92, 204, 0])
    cube([1, 1, 2.24]);
  translate([93, 204, 0])
    cube([1, 1, 2.67]);
  translate([94, 204, 0])
    cube([1, 1, 2.47]);
  translate([95, 204, 0])
    cube([1, 1, 2.71]);
  translate([96, 204, 0])
    cube([1, 1, 1.88]);
  translate([97, 204, 0])
    cube([1, 1, 1.92]);
  translate([98, 204, 0])
    cube([1, 1, 2.04]);
  translate([99, 204, 0])
    cube([1, 1, 2.31]);
  translate([100, 204, 0])
    cube([1, 1, 3.14]);
  translate([101, 204, 0])
    cube([1, 1, 2.43]);
  translate([102, 204, 0])
    cube([1, 1, 1.49]);
  translate([103, 204, 0])
    cube([1, 1, 1.18]);
  translate([104, 204, 0])
    cube([1, 1, 1.84]);
  translate([105, 204, 0])
    cube([1, 1, 1.73]);
  translate([106, 204, 0])
    cube([1, 1, 2.75]);
  translate([107, 204, 0])
    cube([1, 1, 1.96]);
  translate([108, 204, 0])
    cube([1, 1, 2.00]);
  translate([109, 204, 0])
    cube([1, 1, 2.94]);
  translate([110, 204, 0])
    cube([1, 1, 2.27]);
  translate([111, 204, 0])
    cube([1, 1, 1.73]);
  translate([112, 204, 0])
    cube([1, 1, 1.37]);
  translate([113, 204, 0])
    cube([1, 1, 1.76]);
  translate([114, 204, 0])
    cube([1, 1, 1.57]);
  translate([115, 204, 0])
    cube([1, 1, 1.49]);
  translate([116, 204, 0])
    cube([1, 1, 2.51]);
  translate([117, 204, 0])
    cube([1, 1, 2.51]);
  translate([118, 204, 0])
    cube([1, 1, 2.63]);
  translate([119, 204, 0])
    cube([1, 1, 2.04]);
  translate([120, 204, 0])
    cube([1, 1, 1.88]);
  translate([121, 204, 0])
    cube([1, 1, 2.08]);
  translate([122, 204, 0])
    cube([1, 1, 2.27]);
  translate([123, 204, 0])
    cube([1, 1, 2.78]);
  translate([124, 204, 0])
    cube([1, 1, 2.27]);
  translate([125, 204, 0])
    cube([1, 1, 1.53]);
  translate([126, 204, 0])
    cube([1, 1, 2.71]);
  translate([127, 204, 0])
    cube([1, 1, 1.53]);
  translate([128, 204, 0])
    cube([1, 1, 1.84]);
  translate([129, 204, 0])
    cube([1, 1, 2.31]);
  translate([130, 204, 0])
    cube([1, 1, 1.96]);
  translate([131, 204, 0])
    cube([1, 1, 2.16]);
  translate([132, 204, 0])
    cube([1, 1, 2.24]);
  translate([133, 204, 0])
    cube([1, 1, 2.00]);
  translate([134, 204, 0])
    cube([1, 1, 1.49]);
  translate([135, 204, 0])
    cube([1, 1, 1.69]);
  translate([136, 204, 0])
    cube([1, 1, 2.12]);
  translate([137, 204, 0])
    cube([1, 1, 2.24]);
  translate([138, 204, 0])
    cube([1, 1, 2.04]);
  translate([139, 204, 0])
    cube([1, 1, 2.47]);
  translate([140, 204, 0])
    cube([1, 1, 3.06]);
  translate([141, 204, 0])
    cube([1, 1, 2.71]);
  translate([142, 204, 0])
    cube([1, 1, 2.35]);
  translate([143, 204, 0])
    cube([1, 1, 2.78]);
  translate([144, 204, 0])
    cube([1, 1, 2.63]);
  translate([145, 204, 0])
    cube([1, 1, 1.76]);
  translate([146, 204, 0])
    cube([1, 1, 2.39]);
  translate([147, 204, 0])
    cube([1, 1, 2.43]);
  translate([148, 204, 0])
    cube([1, 1, 2.47]);
  translate([149, 204, 0])
    cube([1, 1, 2.47]);
  translate([150, 204, 0])
    cube([1, 1, 2.27]);
  translate([151, 204, 0])
    cube([1, 1, 2.24]);
  translate([152, 204, 0])
    cube([1, 1, 1.37]);
  translate([153, 204, 0])
    cube([1, 1, 1.88]);
  translate([154, 204, 0])
    cube([1, 1, 3.73]);
  translate([155, 204, 0])
    cube([1, 1, 4.90]);
  translate([156, 204, 0])
    cube([1, 1, 5.53]);
  translate([157, 204, 0])
    cube([1, 1, 5.45]);
  translate([158, 204, 0])
    cube([1, 1, 1.96]);
  translate([159, 204, 0])
    cube([1, 1, 1.96]);
  translate([160, 204, 0])
    cube([1, 1, 1.65]);
  translate([161, 204, 0])
    cube([1, 1, 1.61]);
  translate([162, 204, 0])
    cube([1, 1, 0.94]);
  translate([163, 204, 0])
    cube([1, 1, 1.14]);
  translate([164, 204, 0])
    cube([1, 1, 1.14]);
  translate([165, 204, 0])
    cube([1, 1, 1.33]);
  translate([166, 204, 0])
    cube([1, 1, 1.76]);
  translate([167, 204, 0])
    cube([1, 1, 2.94]);
  translate([168, 204, 0])
    cube([1, 1, 2.71]);
  translate([169, 204, 0])
    cube([1, 1, 1.96]);
  translate([170, 204, 0])
    cube([1, 1, 1.80]);
  translate([171, 204, 0])
    cube([1, 1, 1.25]);
  translate([172, 204, 0])
    cube([1, 1, 1.92]);
  translate([173, 204, 0])
    cube([1, 1, 2.00]);
  translate([174, 204, 0])
    cube([1, 1, 1.96]);
  translate([175, 204, 0])
    cube([1, 1, 1.96]);
  translate([176, 204, 0])
    cube([1, 1, 1.96]);
  translate([177, 204, 0])
    cube([1, 1, 1.96]);
  translate([178, 204, 0])
    cube([1, 1, 1.96]);
  translate([179, 204, 0])
    cube([1, 1, 1.96]);
  translate([180, 204, 0])
    cube([1, 1, 1.96]);
  translate([181, 204, 0])
    cube([1, 1, 2.00]);
  translate([182, 204, 0])
    cube([1, 1, 1.92]);
  translate([183, 204, 0])
    cube([1, 1, 1.96]);
  translate([184, 204, 0])
    cube([1, 1, 1.14]);
  translate([185, 204, 0])
    cube([1, 1, 0.43]);
  translate([186, 204, 0])
    cube([1, 1, 0.51]);
  translate([187, 204, 0])
    cube([1, 1, 0.43]);
  translate([188, 204, 0])
    cube([1, 1, 0.98]);
  translate([189, 204, 0])
    cube([1, 1, 0.47]);
  translate([190, 204, 0])
    cube([1, 1, 0.51]);
  translate([191, 204, 0])
    cube([1, 1, 1.53]);
  translate([192, 204, 0])
    cube([1, 1, 6.43]);
  translate([193, 204, 0])
    cube([1, 1, 5.92]);
  translate([194, 204, 0])
    cube([1, 1, 5.88]);
  translate([195, 204, 0])
    cube([1, 1, 3.76]);
  translate([196, 204, 0])
    cube([1, 1, 2.39]);
  translate([197, 204, 0])
    cube([1, 1, 2.59]);
  translate([198, 204, 0])
    cube([1, 1, 3.69]);
  translate([199, 204, 0])
    cube([1, 1, 4.59]);
  translate([200, 204, 0])
    cube([1, 1, 1.53]);
  translate([201, 204, 0])
    cube([1, 1, 2.12]);
  translate([202, 204, 0])
    cube([1, 1, 2.00]);
  translate([203, 204, 0])
    cube([1, 1, 2.00]);
  translate([204, 204, 0])
    cube([1, 1, 2.00]);
  translate([205, 204, 0])
    cube([1, 1, 2.00]);
  translate([206, 204, 0])
    cube([1, 1, 1.92]);
  translate([207, 204, 0])
    cube([1, 1, 1.96]);
  translate([208, 204, 0])
    cube([1, 1, 2.08]);
  translate([209, 204, 0])
    cube([1, 1, 0.35]);
  translate([210, 204, 0])
    cube([1, 1, 1.02]);
  translate([211, 204, 0])
    cube([1, 1, 1.49]);
  translate([212, 204, 0])
    cube([1, 1, 1.80]);
  translate([213, 204, 0])
    cube([1, 1, 2.86]);
  translate([214, 204, 0])
    cube([1, 1, 0.12]);
  translate([215, 204, 0])
    cube([1, 1, 2.20]);
  translate([216, 204, 0])
    cube([1, 1, 2.08]);
  translate([217, 204, 0])
    cube([1, 1, 2.08]);
  translate([218, 204, 0])
    cube([1, 1, 1.14]);
  translate([219, 204, 0])
    cube([1, 1, 0.47]);
  translate([220, 204, 0])
    cube([1, 1, 0.67]);
  translate([221, 204, 0])
    cube([1, 1, 0.47]);
  translate([222, 204, 0])
    cube([1, 1, 0.16]);
  translate([223, 204, 0])
    cube([1, 1, 0.43]);
  translate([224, 204, 0])
    cube([1, 1, 0.43]);
  translate([225, 204, 0])
    cube([1, 1, 1.41]);
  translate([226, 204, 0])
    cube([1, 1, 1.06]);
  translate([227, 204, 0])
    cube([1, 1, 0.71]);
  translate([228, 204, 0])
    cube([1, 1, 2.47]);
  translate([229, 204, 0])
    cube([1, 1, 1.33]);
  translate([230, 204, 0])
    cube([1, 1, 1.10]);
  translate([231, 204, 0])
    cube([1, 1, 0.90]);
  translate([232, 204, 0])
    cube([1, 1, 0.35]);
  translate([233, 204, 0])
    cube([1, 1, 0.51]);
  translate([234, 204, 0])
    cube([1, 1, 0.86]);
  translate([235, 204, 0])
    cube([1, 1, 0.75]);
  translate([236, 204, 0])
    cube([1, 1, 0.78]);
  translate([237, 204, 0])
    cube([1, 1, 0.39]);
  translate([238, 204, 0])
    cube([1, 1, 0.16]);
  translate([239, 204, 0])
    cube([1, 1, 0.27]);
  translate([240, 204, 0])
    cube([1, 1, 1.92]);
  translate([241, 204, 0])
    cube([1, 1, 1.84]);
  translate([242, 204, 0])
    cube([1, 1, 1.96]);
  translate([243, 204, 0])
    cube([1, 1, 1.92]);
  translate([244, 204, 0])
    cube([1, 1, 1.92]);
  translate([245, 204, 0])
    cube([1, 1, 1.96]);
  translate([246, 204, 0])
    cube([1, 1, 1.92]);
  translate([0, 205, 0])
    cube([1, 1, 2.12]);
  translate([1, 205, 0])
    cube([1, 1, 2.12]);
  translate([2, 205, 0])
    cube([1, 1, 2.12]);
  translate([3, 205, 0])
    cube([1, 1, 2.12]);
  translate([4, 205, 0])
    cube([1, 1, 2.16]);
  translate([5, 205, 0])
    cube([1, 1, 2.16]);
  translate([6, 205, 0])
    cube([1, 1, 2.08]);
  translate([7, 205, 0])
    cube([1, 1, 2.08]);
  translate([8, 205, 0])
    cube([1, 1, 2.12]);
  translate([9, 205, 0])
    cube([1, 1, 2.12]);
  translate([10, 205, 0])
    cube([1, 1, 2.12]);
  translate([11, 205, 0])
    cube([1, 1, 2.12]);
  translate([12, 205, 0])
    cube([1, 1, 2.12]);
  translate([13, 205, 0])
    cube([1, 1, 2.12]);
  translate([14, 205, 0])
    cube([1, 1, 2.12]);
  translate([15, 205, 0])
    cube([1, 1, 2.12]);
  translate([16, 205, 0])
    cube([1, 1, 2.16]);
  translate([17, 205, 0])
    cube([1, 1, 2.12]);
  translate([18, 205, 0])
    cube([1, 1, 2.12]);
  translate([19, 205, 0])
    cube([1, 1, 2.12]);
  translate([20, 205, 0])
    cube([1, 1, 2.12]);
  translate([21, 205, 0])
    cube([1, 1, 2.12]);
  translate([22, 205, 0])
    cube([1, 1, 2.12]);
  translate([23, 205, 0])
    cube([1, 1, 2.12]);
  translate([24, 205, 0])
    cube([1, 1, 2.16]);
  translate([25, 205, 0])
    cube([1, 1, 2.12]);
  translate([26, 205, 0])
    cube([1, 1, 2.16]);
  translate([27, 205, 0])
    cube([1, 1, 2.12]);
  translate([28, 205, 0])
    cube([1, 1, 2.12]);
  translate([29, 205, 0])
    cube([1, 1, 2.12]);
  translate([30, 205, 0])
    cube([1, 1, 2.12]);
  translate([31, 205, 0])
    cube([1, 1, 2.12]);
  translate([32, 205, 0])
    cube([1, 1, 2.12]);
  translate([33, 205, 0])
    cube([1, 1, 2.12]);
  translate([34, 205, 0])
    cube([1, 1, 2.12]);
  translate([35, 205, 0])
    cube([1, 1, 2.12]);
  translate([36, 205, 0])
    cube([1, 1, 2.12]);
  translate([37, 205, 0])
    cube([1, 1, 2.12]);
  translate([38, 205, 0])
    cube([1, 1, 2.12]);
  translate([39, 205, 0])
    cube([1, 1, 2.12]);
  translate([40, 205, 0])
    cube([1, 1, 2.12]);
  translate([41, 205, 0])
    cube([1, 1, 2.12]);
  translate([42, 205, 0])
    cube([1, 1, 2.12]);
  translate([43, 205, 0])
    cube([1, 1, 2.12]);
  translate([44, 205, 0])
    cube([1, 1, 2.12]);
  translate([45, 205, 0])
    cube([1, 1, 2.12]);
  translate([46, 205, 0])
    cube([1, 1, 2.12]);
  translate([47, 205, 0])
    cube([1, 1, 2.12]);
  translate([48, 205, 0])
    cube([1, 1, 2.12]);
  translate([49, 205, 0])
    cube([1, 1, 2.12]);
  translate([50, 205, 0])
    cube([1, 1, 2.12]);
  translate([51, 205, 0])
    cube([1, 1, 2.12]);
  translate([52, 205, 0])
    cube([1, 1, 2.04]);
  translate([53, 205, 0])
    cube([1, 1, 2.08]);
  translate([54, 205, 0])
    cube([1, 1, 1.88]);
  translate([55, 205, 0])
    cube([1, 1, 6.55]);
  translate([56, 205, 0])
    cube([1, 1, 7.37]);
  translate([57, 205, 0])
    cube([1, 1, 2.98]);
  translate([58, 205, 0])
    cube([1, 1, 1.14]);
  translate([59, 205, 0])
    cube([1, 1, 1.22]);
  translate([60, 205, 0])
    cube([1, 1, 1.29]);
  translate([61, 205, 0])
    cube([1, 1, 1.96]);
  translate([62, 205, 0])
    cube([1, 1, 3.80]);
  translate([63, 205, 0])
    cube([1, 1, 4.94]);
  translate([64, 205, 0])
    cube([1, 1, 3.14]);
  translate([65, 205, 0])
    cube([1, 1, 1.45]);
  translate([66, 205, 0])
    cube([1, 1, 1.25]);
  translate([67, 205, 0])
    cube([1, 1, 0.98]);
  translate([68, 205, 0])
    cube([1, 1, 1.02]);
  translate([69, 205, 0])
    cube([1, 1, 5.96]);
  translate([70, 205, 0])
    cube([1, 1, 2.94]);
  translate([71, 205, 0])
    cube([1, 1, 1.22]);
  translate([72, 205, 0])
    cube([1, 1, 1.73]);
  translate([73, 205, 0])
    cube([1, 1, 1.06]);
  translate([74, 205, 0])
    cube([1, 1, 1.92]);
  translate([75, 205, 0])
    cube([1, 1, 1.25]);
  translate([76, 205, 0])
    cube([1, 1, 2.04]);
  translate([77, 205, 0])
    cube([1, 1, 2.59]);
  translate([78, 205, 0])
    cube([1, 1, 1.14]);
  translate([79, 205, 0])
    cube([1, 1, 1.92]);
  translate([80, 205, 0])
    cube([1, 1, 2.43]);
  translate([81, 205, 0])
    cube([1, 1, 3.02]);
  translate([82, 205, 0])
    cube([1, 1, 2.63]);
  translate([83, 205, 0])
    cube([1, 1, 2.67]);
  translate([84, 205, 0])
    cube([1, 1, 2.24]);
  translate([85, 205, 0])
    cube([1, 1, 2.12]);
  translate([86, 205, 0])
    cube([1, 1, 2.04]);
  translate([87, 205, 0])
    cube([1, 1, 2.12]);
  translate([88, 205, 0])
    cube([1, 1, 2.47]);
  translate([89, 205, 0])
    cube([1, 1, 2.86]);
  translate([90, 205, 0])
    cube([1, 1, 2.71]);
  translate([91, 205, 0])
    cube([1, 1, 2.47]);
  translate([92, 205, 0])
    cube([1, 1, 1.88]);
  translate([93, 205, 0])
    cube([1, 1, 1.84]);
  translate([94, 205, 0])
    cube([1, 1, 2.63]);
  translate([95, 205, 0])
    cube([1, 1, 2.75]);
  translate([96, 205, 0])
    cube([1, 1, 2.39]);
  translate([97, 205, 0])
    cube([1, 1, 2.08]);
  translate([98, 205, 0])
    cube([1, 1, 2.67]);
  translate([99, 205, 0])
    cube([1, 1, 2.78]);
  translate([100, 205, 0])
    cube([1, 1, 2.63]);
  translate([101, 205, 0])
    cube([1, 1, 2.12]);
  translate([102, 205, 0])
    cube([1, 1, 1.76]);
  translate([103, 205, 0])
    cube([1, 1, 2.67]);
  translate([104, 205, 0])
    cube([1, 1, 2.31]);
  translate([105, 205, 0])
    cube([1, 1, 1.88]);
  translate([106, 205, 0])
    cube([1, 1, 1.84]);
  translate([107, 205, 0])
    cube([1, 1, 1.69]);
  translate([108, 205, 0])
    cube([1, 1, 1.96]);
  translate([109, 205, 0])
    cube([1, 1, 2.47]);
  translate([110, 205, 0])
    cube([1, 1, 2.43]);
  translate([111, 205, 0])
    cube([1, 1, 1.53]);
  translate([112, 205, 0])
    cube([1, 1, 1.69]);
  translate([113, 205, 0])
    cube([1, 1, 2.47]);
  translate([114, 205, 0])
    cube([1, 1, 2.35]);
  translate([115, 205, 0])
    cube([1, 1, 2.24]);
  translate([116, 205, 0])
    cube([1, 1, 2.24]);
  translate([117, 205, 0])
    cube([1, 1, 2.08]);
  translate([118, 205, 0])
    cube([1, 1, 1.73]);
  translate([119, 205, 0])
    cube([1, 1, 1.84]);
  translate([120, 205, 0])
    cube([1, 1, 1.88]);
  translate([121, 205, 0])
    cube([1, 1, 2.43]);
  translate([122, 205, 0])
    cube([1, 1, 2.59]);
  translate([123, 205, 0])
    cube([1, 1, 2.04]);
  translate([124, 205, 0])
    cube([1, 1, 1.65]);
  translate([125, 205, 0])
    cube([1, 1, 1.49]);
  translate([126, 205, 0])
    cube([1, 1, 2.00]);
  translate([127, 205, 0])
    cube([1, 1, 2.24]);
  translate([128, 205, 0])
    cube([1, 1, 1.18]);
  translate([129, 205, 0])
    cube([1, 1, 2.24]);
  translate([130, 205, 0])
    cube([1, 1, 1.92]);
  translate([131, 205, 0])
    cube([1, 1, 2.00]);
  translate([132, 205, 0])
    cube([1, 1, 1.22]);
  translate([133, 205, 0])
    cube([1, 1, 1.49]);
  translate([134, 205, 0])
    cube([1, 1, 1.45]);
  translate([135, 205, 0])
    cube([1, 1, 1.49]);
  translate([136, 205, 0])
    cube([1, 1, 1.61]);
  translate([137, 205, 0])
    cube([1, 1, 2.04]);
  translate([138, 205, 0])
    cube([1, 1, 2.35]);
  translate([139, 205, 0])
    cube([1, 1, 2.47]);
  translate([140, 205, 0])
    cube([1, 1, 2.31]);
  translate([141, 205, 0])
    cube([1, 1, 2.43]);
  translate([142, 205, 0])
    cube([1, 1, 2.43]);
  translate([143, 205, 0])
    cube([1, 1, 2.51]);
  translate([144, 205, 0])
    cube([1, 1, 1.80]);
  translate([145, 205, 0])
    cube([1, 1, 2.67]);
  translate([146, 205, 0])
    cube([1, 1, 2.35]);
  translate([147, 205, 0])
    cube([1, 1, 2.35]);
  translate([148, 205, 0])
    cube([1, 1, 2.08]);
  translate([149, 205, 0])
    cube([1, 1, 2.43]);
  translate([150, 205, 0])
    cube([1, 1, 2.39]);
  translate([151, 205, 0])
    cube([1, 1, 4.47]);
  translate([152, 205, 0])
    cube([1, 1, 5.10]);
  translate([153, 205, 0])
    cube([1, 1, 4.78]);
  translate([154, 205, 0])
    cube([1, 1, 4.86]);
  translate([155, 205, 0])
    cube([1, 1, 4.94]);
  translate([156, 205, 0])
    cube([1, 1, 5.22]);
  translate([157, 205, 0])
    cube([1, 1, 5.69]);
  translate([158, 205, 0])
    cube([1, 1, 2.47]);
  translate([159, 205, 0])
    cube([1, 1, 1.80]);
  translate([160, 205, 0])
    cube([1, 1, 1.10]);
  translate([161, 205, 0])
    cube([1, 1, 1.92]);
  translate([162, 205, 0])
    cube([1, 1, 1.06]);
  translate([163, 205, 0])
    cube([1, 1, 1.33]);
  translate([164, 205, 0])
    cube([1, 1, 1.57]);
  translate([165, 205, 0])
    cube([1, 1, 1.76]);
  translate([166, 205, 0])
    cube([1, 1, 2.08]);
  translate([167, 205, 0])
    cube([1, 1, 3.73]);
  translate([168, 205, 0])
    cube([1, 1, 4.04]);
  translate([169, 205, 0])
    cube([1, 1, 2.24]);
  translate([170, 205, 0])
    cube([1, 1, 1.88]);
  translate([171, 205, 0])
    cube([1, 1, 1.88]);
  translate([172, 205, 0])
    cube([1, 1, 1.88]);
  translate([173, 205, 0])
    cube([1, 1, 2.00]);
  translate([174, 205, 0])
    cube([1, 1, 1.96]);
  translate([175, 205, 0])
    cube([1, 1, 2.00]);
  translate([176, 205, 0])
    cube([1, 1, 1.96]);
  translate([177, 205, 0])
    cube([1, 1, 1.96]);
  translate([178, 205, 0])
    cube([1, 1, 1.96]);
  translate([179, 205, 0])
    cube([1, 1, 1.96]);
  translate([180, 205, 0])
    cube([1, 1, 1.96]);
  translate([181, 205, 0])
    cube([1, 1, 1.96]);
  translate([182, 205, 0])
    cube([1, 1, 2.04]);
  translate([183, 205, 0])
    cube([1, 1, 2.04]);
  translate([184, 205, 0])
    cube([1, 1, 1.96]);
  translate([185, 205, 0])
    cube([1, 1, 1.80]);
  translate([186, 205, 0])
    cube([1, 1, 0.27]);
  translate([187, 205, 0])
    cube([1, 1, 0.27]);
  translate([188, 205, 0])
    cube([1, 1, 0.55]);
  translate([189, 205, 0])
    cube([1, 1, 0.51]);
  translate([190, 205, 0])
    cube([1, 1, 0.86]);
  translate([191, 205, 0])
    cube([1, 1, 0.35]);
  translate([192, 205, 0])
    cube([1, 1, 3.76]);
  translate([193, 205, 0])
    cube([1, 1, 4.86]);
  translate([194, 205, 0])
    cube([1, 1, 4.90]);
  translate([195, 205, 0])
    cube([1, 1, 5.33]);
  translate([196, 205, 0])
    cube([1, 1, 5.61]);
  translate([197, 205, 0])
    cube([1, 1, 5.96]);
  translate([198, 205, 0])
    cube([1, 1, 4.98]);
  translate([199, 205, 0])
    cube([1, 1, 1.88]);
  translate([200, 205, 0])
    cube([1, 1, 2.04]);
  translate([201, 205, 0])
    cube([1, 1, 2.04]);
  translate([202, 205, 0])
    cube([1, 1, 2.00]);
  translate([203, 205, 0])
    cube([1, 1, 2.00]);
  translate([204, 205, 0])
    cube([1, 1, 2.00]);
  translate([205, 205, 0])
    cube([1, 1, 2.00]);
  translate([206, 205, 0])
    cube([1, 1, 2.00]);
  translate([207, 205, 0])
    cube([1, 1, 1.96]);
  translate([208, 205, 0])
    cube([1, 1, 2.00]);
  translate([209, 205, 0])
    cube([1, 1, 1.92]);
  translate([210, 205, 0])
    cube([1, 1, 1.49]);
  translate([211, 205, 0])
    cube([1, 1, 0.35]);
  translate([212, 205, 0])
    cube([1, 1, 0.43]);
  translate([213, 205, 0])
    cube([1, 1, 0.16]);
  translate([214, 205, 0])
    cube([1, 1, 2.08]);
  translate([215, 205, 0])
    cube([1, 1, 2.04]);
  translate([216, 205, 0])
    cube([1, 1, 2.00]);
  translate([217, 205, 0])
    cube([1, 1, 2.00]);
  translate([218, 205, 0])
    cube([1, 1, 2.00]);
  translate([219, 205, 0])
    cube([1, 1, 1.88]);
  translate([220, 205, 0])
    cube([1, 1, 0.43]);
  translate([221, 205, 0])
    cube([1, 1, 0.78]);
  translate([222, 205, 0])
    cube([1, 1, 0.78]);
  translate([223, 205, 0])
    cube([1, 1, 0.43]);
  translate([224, 205, 0])
    cube([1, 1, 1.22]);
  translate([225, 205, 0])
    cube([1, 1, 0.20]);
  translate([226, 205, 0])
    cube([1, 1, 0.39]);
  translate([227, 205, 0])
    cube([1, 1, 1.73]);
  translate([228, 205, 0])
    cube([1, 1, 0.78]);
  translate([229, 205, 0])
    cube([1, 1, 1.06]);
  translate([230, 205, 0])
    cube([1, 1, 2.55]);
  translate([231, 205, 0])
    cube([1, 1, 0.51]);
  translate([232, 205, 0])
    cube([1, 1, 0.31]);
  translate([233, 205, 0])
    cube([1, 1, 0.31]);
  translate([234, 205, 0])
    cube([1, 1, 0.39]);
  translate([235, 205, 0])
    cube([1, 1, 0.86]);
  translate([236, 205, 0])
    cube([1, 1, 0.86]);
  translate([237, 205, 0])
    cube([1, 1, 0.86]);
  translate([238, 205, 0])
    cube([1, 1, 0.90]);
  translate([239, 205, 0])
    cube([1, 1, 0.43]);
  translate([240, 205, 0])
    cube([1, 1, 0.31]);
  translate([241, 205, 0])
    cube([1, 1, 0.59]);
  translate([242, 205, 0])
    cube([1, 1, 2.08]);
  translate([243, 205, 0])
    cube([1, 1, 1.96]);
  translate([244, 205, 0])
    cube([1, 1, 1.96]);
  translate([245, 205, 0])
    cube([1, 1, 1.96]);
  translate([246, 205, 0])
    cube([1, 1, 1.92]);
  translate([0, 206, 0])
    cube([1, 1, 2.12]);
  translate([1, 206, 0])
    cube([1, 1, 2.12]);
  translate([2, 206, 0])
    cube([1, 1, 2.12]);
  translate([3, 206, 0])
    cube([1, 1, 2.12]);
  translate([4, 206, 0])
    cube([1, 1, 2.16]);
  translate([5, 206, 0])
    cube([1, 1, 2.16]);
  translate([6, 206, 0])
    cube([1, 1, 2.12]);
  translate([7, 206, 0])
    cube([1, 1, 2.16]);
  translate([8, 206, 0])
    cube([1, 1, 2.12]);
  translate([9, 206, 0])
    cube([1, 1, 2.12]);
  translate([10, 206, 0])
    cube([1, 1, 2.12]);
  translate([11, 206, 0])
    cube([1, 1, 2.12]);
  translate([12, 206, 0])
    cube([1, 1, 2.12]);
  translate([13, 206, 0])
    cube([1, 1, 2.12]);
  translate([14, 206, 0])
    cube([1, 1, 2.12]);
  translate([15, 206, 0])
    cube([1, 1, 2.12]);
  translate([16, 206, 0])
    cube([1, 1, 2.16]);
  translate([17, 206, 0])
    cube([1, 1, 2.12]);
  translate([18, 206, 0])
    cube([1, 1, 2.12]);
  translate([19, 206, 0])
    cube([1, 1, 2.12]);
  translate([20, 206, 0])
    cube([1, 1, 2.12]);
  translate([21, 206, 0])
    cube([1, 1, 2.12]);
  translate([22, 206, 0])
    cube([1, 1, 2.16]);
  translate([23, 206, 0])
    cube([1, 1, 2.16]);
  translate([24, 206, 0])
    cube([1, 1, 2.16]);
  translate([25, 206, 0])
    cube([1, 1, 2.12]);
  translate([26, 206, 0])
    cube([1, 1, 2.16]);
  translate([27, 206, 0])
    cube([1, 1, 2.12]);
  translate([28, 206, 0])
    cube([1, 1, 2.12]);
  translate([29, 206, 0])
    cube([1, 1, 2.12]);
  translate([30, 206, 0])
    cube([1, 1, 2.12]);
  translate([31, 206, 0])
    cube([1, 1, 2.12]);
  translate([32, 206, 0])
    cube([1, 1, 2.12]);
  translate([33, 206, 0])
    cube([1, 1, 2.12]);
  translate([34, 206, 0])
    cube([1, 1, 2.12]);
  translate([35, 206, 0])
    cube([1, 1, 2.12]);
  translate([36, 206, 0])
    cube([1, 1, 2.12]);
  translate([37, 206, 0])
    cube([1, 1, 2.12]);
  translate([38, 206, 0])
    cube([1, 1, 2.12]);
  translate([39, 206, 0])
    cube([1, 1, 2.12]);
  translate([40, 206, 0])
    cube([1, 1, 2.12]);
  translate([41, 206, 0])
    cube([1, 1, 2.12]);
  translate([42, 206, 0])
    cube([1, 1, 2.12]);
  translate([43, 206, 0])
    cube([1, 1, 2.12]);
  translate([44, 206, 0])
    cube([1, 1, 2.12]);
  translate([45, 206, 0])
    cube([1, 1, 2.12]);
  translate([46, 206, 0])
    cube([1, 1, 2.12]);
  translate([47, 206, 0])
    cube([1, 1, 2.12]);
  translate([48, 206, 0])
    cube([1, 1, 2.12]);
  translate([49, 206, 0])
    cube([1, 1, 2.12]);
  translate([50, 206, 0])
    cube([1, 1, 2.12]);
  translate([51, 206, 0])
    cube([1, 1, 2.12]);
  translate([52, 206, 0])
    cube([1, 1, 2.12]);
  translate([53, 206, 0])
    cube([1, 1, 2.08]);
  translate([54, 206, 0])
    cube([1, 1, 5.22]);
  translate([55, 206, 0])
    cube([1, 1, 8.78]);
  translate([56, 206, 0])
    cube([1, 1, 8.67]);
  translate([57, 206, 0])
    cube([1, 1, 1.73]);
  translate([58, 206, 0])
    cube([1, 1, 0.98]);
  translate([59, 206, 0])
    cube([1, 1, 1.61]);
  translate([60, 206, 0])
    cube([1, 1, 1.88]);
  translate([61, 206, 0])
    cube([1, 1, 2.51]);
  translate([62, 206, 0])
    cube([1, 1, 3.41]);
  translate([63, 206, 0])
    cube([1, 1, 1.41]);
  translate([64, 206, 0])
    cube([1, 1, 1.53]);
  translate([65, 206, 0])
    cube([1, 1, 1.33]);
  translate([66, 206, 0])
    cube([1, 1, 1.25]);
  translate([67, 206, 0])
    cube([1, 1, 0.75]);
  translate([68, 206, 0])
    cube([1, 1, 5.49]);
  translate([69, 206, 0])
    cube([1, 1, 2.82]);
  translate([70, 206, 0])
    cube([1, 1, 2.94]);
  translate([71, 206, 0])
    cube([1, 1, 1.18]);
  translate([72, 206, 0])
    cube([1, 1, 5.33]);
  translate([73, 206, 0])
    cube([1, 1, 1.49]);
  translate([74, 206, 0])
    cube([1, 1, 1.22]);
  translate([75, 206, 0])
    cube([1, 1, 1.49]);
  translate([76, 206, 0])
    cube([1, 1, 1.53]);
  translate([77, 206, 0])
    cube([1, 1, 1.92]);
  translate([78, 206, 0])
    cube([1, 1, 1.92]);
  translate([79, 206, 0])
    cube([1, 1, 2.31]);
  translate([80, 206, 0])
    cube([1, 1, 1.33]);
  translate([81, 206, 0])
    cube([1, 1, 1.96]);
  translate([82, 206, 0])
    cube([1, 1, 2.63]);
  translate([83, 206, 0])
    cube([1, 1, 2.27]);
  translate([84, 206, 0])
    cube([1, 1, 2.55]);
  translate([85, 206, 0])
    cube([1, 1, 2.16]);
  translate([86, 206, 0])
    cube([1, 1, 2.16]);
  translate([87, 206, 0])
    cube([1, 1, 2.04]);
  translate([88, 206, 0])
    cube([1, 1, 1.96]);
  translate([89, 206, 0])
    cube([1, 1, 2.31]);
  translate([90, 206, 0])
    cube([1, 1, 2.31]);
  translate([91, 206, 0])
    cube([1, 1, 2.55]);
  translate([92, 206, 0])
    cube([1, 1, 2.55]);
  translate([93, 206, 0])
    cube([1, 1, 2.55]);
  translate([94, 206, 0])
    cube([1, 1, 1.45]);
  translate([95, 206, 0])
    cube([1, 1, 1.65]);
  translate([96, 206, 0])
    cube([1, 1, 2.47]);
  translate([97, 206, 0])
    cube([1, 1, 2.39]);
  translate([98, 206, 0])
    cube([1, 1, 1.96]);
  translate([99, 206, 0])
    cube([1, 1, 2.47]);
  translate([100, 206, 0])
    cube([1, 1, 2.04]);
  translate([101, 206, 0])
    cube([1, 1, 2.20]);
  translate([102, 206, 0])
    cube([1, 1, 1.88]);
  translate([103, 206, 0])
    cube([1, 1, 2.39]);
  translate([104, 206, 0])
    cube([1, 1, 2.75]);
  translate([105, 206, 0])
    cube([1, 1, 1.41]);
  translate([106, 206, 0])
    cube([1, 1, 1.22]);
  translate([107, 206, 0])
    cube([1, 1, 1.02]);
  translate([108, 206, 0])
    cube([1, 1, 1.18]);
  translate([109, 206, 0])
    cube([1, 1, 2.20]);
  translate([110, 206, 0])
    cube([1, 1, 1.65]);
  translate([111, 206, 0])
    cube([1, 1, 1.92]);
  translate([112, 206, 0])
    cube([1, 1, 2.39]);
  translate([113, 206, 0])
    cube([1, 1, 2.16]);
  translate([114, 206, 0])
    cube([1, 1, 2.04]);
  translate([115, 206, 0])
    cube([1, 1, 1.45]);
  translate([116, 206, 0])
    cube([1, 1, 1.49]);
  translate([117, 206, 0])
    cube([1, 1, 1.96]);
  translate([118, 206, 0])
    cube([1, 1, 1.92]);
  translate([119, 206, 0])
    cube([1, 1, 1.92]);
  translate([120, 206, 0])
    cube([1, 1, 2.12]);
  translate([121, 206, 0])
    cube([1, 1, 1.88]);
  translate([122, 206, 0])
    cube([1, 1, 1.84]);
  translate([123, 206, 0])
    cube([1, 1, 1.88]);
  translate([124, 206, 0])
    cube([1, 1, 1.53]);
  translate([125, 206, 0])
    cube([1, 1, 1.49]);
  translate([126, 206, 0])
    cube([1, 1, 2.00]);
  translate([127, 206, 0])
    cube([1, 1, 1.96]);
  translate([128, 206, 0])
    cube([1, 1, 2.08]);
  translate([129, 206, 0])
    cube([1, 1, 1.76]);
  translate([130, 206, 0])
    cube([1, 1, 2.08]);
  translate([131, 206, 0])
    cube([1, 1, 1.29]);
  translate([132, 206, 0])
    cube([1, 1, 2.04]);
  translate([133, 206, 0])
    cube([1, 1, 1.80]);
  translate([134, 206, 0])
    cube([1, 1, 1.65]);
  translate([135, 206, 0])
    cube([1, 1, 1.73]);
  translate([136, 206, 0])
    cube([1, 1, 1.92]);
  translate([137, 206, 0])
    cube([1, 1, 1.96]);
  translate([138, 206, 0])
    cube([1, 1, 2.16]);
  translate([139, 206, 0])
    cube([1, 1, 2.31]);
  translate([140, 206, 0])
    cube([1, 1, 1.84]);
  translate([141, 206, 0])
    cube([1, 1, 2.31]);
  translate([142, 206, 0])
    cube([1, 1, 1.49]);
  translate([143, 206, 0])
    cube([1, 1, 2.47]);
  translate([144, 206, 0])
    cube([1, 1, 2.67]);
  translate([145, 206, 0])
    cube([1, 1, 2.39]);
  translate([146, 206, 0])
    cube([1, 1, 2.35]);
  translate([147, 206, 0])
    cube([1, 1, 2.55]);
  translate([148, 206, 0])
    cube([1, 1, 2.24]);
  translate([149, 206, 0])
    cube([1, 1, 4.98]);
  translate([150, 206, 0])
    cube([1, 1, 4.94]);
  translate([151, 206, 0])
    cube([1, 1, 5.22]);
  translate([152, 206, 0])
    cube([1, 1, 4.75]);
  translate([153, 206, 0])
    cube([1, 1, 4.82]);
  translate([154, 206, 0])
    cube([1, 1, 4.90]);
  translate([155, 206, 0])
    cube([1, 1, 4.90]);
  translate([156, 206, 0])
    cube([1, 1, 5.22]);
  translate([157, 206, 0])
    cube([1, 1, 5.41]);
  translate([158, 206, 0])
    cube([1, 1, 4.63]);
  translate([159, 206, 0])
    cube([1, 1, 1.96]);
  translate([160, 206, 0])
    cube([1, 1, 0.98]);
  translate([161, 206, 0])
    cube([1, 1, 2.00]);
  translate([162, 206, 0])
    cube([1, 1, 1.53]);
  translate([163, 206, 0])
    cube([1, 1, 1.41]);
  translate([164, 206, 0])
    cube([1, 1, 1.53]);
  translate([165, 206, 0])
    cube([1, 1, 1.69]);
  translate([166, 206, 0])
    cube([1, 1, 1.92]);
  translate([167, 206, 0])
    cube([1, 1, 3.37]);
  translate([168, 206, 0])
    cube([1, 1, 4.55]);
  translate([169, 206, 0])
    cube([1, 1, 2.47]);
  translate([170, 206, 0])
    cube([1, 1, 1.88]);
  translate([171, 206, 0])
    cube([1, 1, 1.80]);
  translate([172, 206, 0])
    cube([1, 1, 1.84]);
  translate([173, 206, 0])
    cube([1, 1, 1.80]);
  translate([174, 206, 0])
    cube([1, 1, 1.96]);
  translate([175, 206, 0])
    cube([1, 1, 2.00]);
  translate([176, 206, 0])
    cube([1, 1, 1.96]);
  translate([177, 206, 0])
    cube([1, 1, 1.96]);
  translate([178, 206, 0])
    cube([1, 1, 1.96]);
  translate([179, 206, 0])
    cube([1, 1, 1.96]);
  translate([180, 206, 0])
    cube([1, 1, 1.96]);
  translate([181, 206, 0])
    cube([1, 1, 1.96]);
  translate([182, 206, 0])
    cube([1, 1, 1.96]);
  translate([183, 206, 0])
    cube([1, 1, 1.96]);
  translate([184, 206, 0])
    cube([1, 1, 1.96]);
  translate([185, 206, 0])
    cube([1, 1, 1.92]);
  translate([186, 206, 0])
    cube([1, 1, 1.96]);
  translate([187, 206, 0])
    cube([1, 1, 1.33]);
  translate([188, 206, 0])
    cube([1, 1, 0.51]);
  translate([189, 206, 0])
    cube([1, 1, 0.55]);
  translate([190, 206, 0])
    cube([1, 1, 0.55]);
  translate([191, 206, 0])
    cube([1, 1, 0.04]);
  translate([192, 206, 0])
    cube([1, 1, 0.59]);
  translate([193, 206, 0])
    cube([1, 1, 1.14]);
  translate([194, 206, 0])
    cube([1, 1, 2.82]);
  translate([195, 206, 0])
    cube([1, 1, 3.80]);
  translate([196, 206, 0])
    cube([1, 1, 4.63]);
  translate([197, 206, 0])
    cube([1, 1, 3.49]);
  translate([198, 206, 0])
    cube([1, 1, 1.88]);
  translate([199, 206, 0])
    cube([1, 1, 2.12]);
  translate([200, 206, 0])
    cube([1, 1, 2.04]);
  translate([201, 206, 0])
    cube([1, 1, 2.04]);
  translate([202, 206, 0])
    cube([1, 1, 2.00]);
  translate([203, 206, 0])
    cube([1, 1, 2.00]);
  translate([204, 206, 0])
    cube([1, 1, 2.00]);
  translate([205, 206, 0])
    cube([1, 1, 2.00]);
  translate([206, 206, 0])
    cube([1, 1, 2.00]);
  translate([207, 206, 0])
    cube([1, 1, 1.96]);
  translate([208, 206, 0])
    cube([1, 1, 1.96]);
  translate([209, 206, 0])
    cube([1, 1, 1.92]);
  translate([210, 206, 0])
    cube([1, 1, 2.00]);
  translate([211, 206, 0])
    cube([1, 1, 2.16]);
  translate([212, 206, 0])
    cube([1, 1, 1.22]);
  translate([213, 206, 0])
    cube([1, 1, 2.16]);
  translate([214, 206, 0])
    cube([1, 1, 2.04]);
  translate([215, 206, 0])
    cube([1, 1, 1.92]);
  translate([216, 206, 0])
    cube([1, 1, 2.00]);
  translate([217, 206, 0])
    cube([1, 1, 2.00]);
  translate([218, 206, 0])
    cube([1, 1, 2.00]);
  translate([219, 206, 0])
    cube([1, 1, 2.16]);
  translate([220, 206, 0])
    cube([1, 1, 1.73]);
  translate([221, 206, 0])
    cube([1, 1, 0.43]);
  translate([222, 206, 0])
    cube([1, 1, 0.51]);
  translate([223, 206, 0])
    cube([1, 1, 0.63]);
  translate([224, 206, 0])
    cube([1, 1, 0.47]);
  translate([225, 206, 0])
    cube([1, 1, 0.35]);
  translate([226, 206, 0])
    cube([1, 1, 0.86]);
  translate([227, 206, 0])
    cube([1, 1, 0.43]);
  translate([228, 206, 0])
    cube([1, 1, 0.67]);
  translate([229, 206, 0])
    cube([1, 1, 1.18]);
  translate([230, 206, 0])
    cube([1, 1, 0.71]);
  translate([231, 206, 0])
    cube([1, 1, 0.43]);
  translate([232, 206, 0])
    cube([1, 1, 0.39]);
  translate([233, 206, 0])
    cube([1, 1, 0.39]);
  translate([234, 206, 0])
    cube([1, 1, 0.47]);
  translate([235, 206, 0])
    cube([1, 1, 0.39]);
  translate([236, 206, 0])
    cube([1, 1, 0.51]);
  translate([237, 206, 0])
    cube([1, 1, 0.90]);
  translate([238, 206, 0])
    cube([1, 1, 0.78]);
  translate([239, 206, 0])
    cube([1, 1, 0.86]);
  translate([240, 206, 0])
    cube([1, 1, 0.43]);
  translate([241, 206, 0])
    cube([1, 1, 0.20]);
  translate([242, 206, 0])
    cube([1, 1, 0.27]);
  translate([243, 206, 0])
    cube([1, 1, 1.80]);
  translate([244, 206, 0])
    cube([1, 1, 1.96]);
  translate([245, 206, 0])
    cube([1, 1, 1.96]);
  translate([246, 206, 0])
    cube([1, 1, 1.92]);
  translate([0, 207, 0])
    cube([1, 1, 2.12]);
  translate([1, 207, 0])
    cube([1, 1, 2.12]);
  translate([2, 207, 0])
    cube([1, 1, 2.12]);
  translate([3, 207, 0])
    cube([1, 1, 2.12]);
  translate([4, 207, 0])
    cube([1, 1, 2.16]);
  translate([5, 207, 0])
    cube([1, 1, 2.16]);
  translate([6, 207, 0])
    cube([1, 1, 2.12]);
  translate([7, 207, 0])
    cube([1, 1, 2.16]);
  translate([8, 207, 0])
    cube([1, 1, 2.16]);
  translate([9, 207, 0])
    cube([1, 1, 2.16]);
  translate([10, 207, 0])
    cube([1, 1, 2.16]);
  translate([11, 207, 0])
    cube([1, 1, 2.12]);
  translate([12, 207, 0])
    cube([1, 1, 2.12]);
  translate([13, 207, 0])
    cube([1, 1, 2.12]);
  translate([14, 207, 0])
    cube([1, 1, 2.12]);
  translate([15, 207, 0])
    cube([1, 1, 2.16]);
  translate([16, 207, 0])
    cube([1, 1, 2.12]);
  translate([17, 207, 0])
    cube([1, 1, 2.12]);
  translate([18, 207, 0])
    cube([1, 1, 2.12]);
  translate([19, 207, 0])
    cube([1, 1, 2.16]);
  translate([20, 207, 0])
    cube([1, 1, 2.16]);
  translate([21, 207, 0])
    cube([1, 1, 2.16]);
  translate([22, 207, 0])
    cube([1, 1, 2.12]);
  translate([23, 207, 0])
    cube([1, 1, 2.16]);
  translate([24, 207, 0])
    cube([1, 1, 2.12]);
  translate([25, 207, 0])
    cube([1, 1, 2.12]);
  translate([26, 207, 0])
    cube([1, 1, 2.12]);
  translate([27, 207, 0])
    cube([1, 1, 2.12]);
  translate([28, 207, 0])
    cube([1, 1, 2.12]);
  translate([29, 207, 0])
    cube([1, 1, 2.16]);
  translate([30, 207, 0])
    cube([1, 1, 2.16]);
  translate([31, 207, 0])
    cube([1, 1, 2.16]);
  translate([32, 207, 0])
    cube([1, 1, 2.16]);
  translate([33, 207, 0])
    cube([1, 1, 2.16]);
  translate([34, 207, 0])
    cube([1, 1, 2.12]);
  translate([35, 207, 0])
    cube([1, 1, 2.12]);
  translate([36, 207, 0])
    cube([1, 1, 2.12]);
  translate([37, 207, 0])
    cube([1, 1, 2.12]);
  translate([38, 207, 0])
    cube([1, 1, 2.12]);
  translate([39, 207, 0])
    cube([1, 1, 2.16]);
  translate([40, 207, 0])
    cube([1, 1, 2.12]);
  translate([41, 207, 0])
    cube([1, 1, 2.12]);
  translate([42, 207, 0])
    cube([1, 1, 2.12]);
  translate([43, 207, 0])
    cube([1, 1, 2.12]);
  translate([44, 207, 0])
    cube([1, 1, 2.12]);
  translate([45, 207, 0])
    cube([1, 1, 2.12]);
  translate([46, 207, 0])
    cube([1, 1, 2.12]);
  translate([47, 207, 0])
    cube([1, 1, 2.12]);
  translate([48, 207, 0])
    cube([1, 1, 2.12]);
  translate([49, 207, 0])
    cube([1, 1, 2.12]);
  translate([50, 207, 0])
    cube([1, 1, 2.12]);
  translate([51, 207, 0])
    cube([1, 1, 2.12]);
  translate([52, 207, 0])
    cube([1, 1, 2.04]);
  translate([53, 207, 0])
    cube([1, 1, 2.08]);
  translate([54, 207, 0])
    cube([1, 1, 8.20]);
  translate([55, 207, 0])
    cube([1, 1, 8.75]);
  translate([56, 207, 0])
    cube([1, 1, 2.67]);
  translate([57, 207, 0])
    cube([1, 1, 1.33]);
  translate([58, 207, 0])
    cube([1, 1, 1.49]);
  translate([59, 207, 0])
    cube([1, 1, 1.61]);
  translate([60, 207, 0])
    cube([1, 1, 1.80]);
  translate([61, 207, 0])
    cube([1, 1, 2.75]);
  translate([62, 207, 0])
    cube([1, 1, 5.45]);
  translate([63, 207, 0])
    cube([1, 1, 5.02]);
  translate([64, 207, 0])
    cube([1, 1, 2.59]);
  translate([65, 207, 0])
    cube([1, 1, 1.88]);
  translate([66, 207, 0])
    cube([1, 1, 1.33]);
  translate([67, 207, 0])
    cube([1, 1, 1.65]);
  translate([68, 207, 0])
    cube([1, 1, 3.96]);
  translate([69, 207, 0])
    cube([1, 1, 2.75]);
  translate([70, 207, 0])
    cube([1, 1, 1.29]);
  translate([71, 207, 0])
    cube([1, 1, 1.53]);
  translate([72, 207, 0])
    cube([1, 1, 1.37]);
  translate([73, 207, 0])
    cube([1, 1, 1.49]);
  translate([74, 207, 0])
    cube([1, 1, 1.53]);
  translate([75, 207, 0])
    cube([1, 1, 1.73]);
  translate([76, 207, 0])
    cube([1, 1, 1.69]);
  translate([77, 207, 0])
    cube([1, 1, 1.76]);
  translate([78, 207, 0])
    cube([1, 1, 1.92]);
  translate([79, 207, 0])
    cube([1, 1, 2.27]);
  translate([80, 207, 0])
    cube([1, 1, 2.47]);
  translate([81, 207, 0])
    cube([1, 1, 2.16]);
  translate([82, 207, 0])
    cube([1, 1, 2.43]);
  translate([83, 207, 0])
    cube([1, 1, 2.12]);
  translate([84, 207, 0])
    cube([1, 1, 2.59]);
  translate([85, 207, 0])
    cube([1, 1, 2.63]);
  translate([86, 207, 0])
    cube([1, 1, 2.35]);
  translate([87, 207, 0])
    cube([1, 1, 2.67]);
  translate([88, 207, 0])
    cube([1, 1, 1.92]);
  translate([89, 207, 0])
    cube([1, 1, 2.16]);
  translate([90, 207, 0])
    cube([1, 1, 2.04]);
  translate([91, 207, 0])
    cube([1, 1, 1.92]);
  translate([92, 207, 0])
    cube([1, 1, 2.24]);
  translate([93, 207, 0])
    cube([1, 1, 2.51]);
  translate([94, 207, 0])
    cube([1, 1, 2.47]);
  translate([95, 207, 0])
    cube([1, 1, 2.59]);
  translate([96, 207, 0])
    cube([1, 1, 1.73]);
  translate([97, 207, 0])
    cube([1, 1, 1.37]);
  translate([98, 207, 0])
    cube([1, 1, 2.16]);
  translate([99, 207, 0])
    cube([1, 1, 2.04]);
  translate([100, 207, 0])
    cube([1, 1, 2.04]);
  translate([101, 207, 0])
    cube([1, 1, 2.43]);
  translate([102, 207, 0])
    cube([1, 1, 1.96]);
  translate([103, 207, 0])
    cube([1, 1, 2.98]);
  translate([104, 207, 0])
    cube([1, 1, 2.35]);
  translate([105, 207, 0])
    cube([1, 1, 2.27]);
  translate([106, 207, 0])
    cube([1, 1, 3.10]);
  translate([107, 207, 0])
    cube([1, 1, 1.80]);
  translate([108, 207, 0])
    cube([1, 1, 1.18]);
  translate([109, 207, 0])
    cube([1, 1, 1.80]);
  translate([110, 207, 0])
    cube([1, 1, 1.80]);
  translate([111, 207, 0])
    cube([1, 1, 1.96]);
  translate([112, 207, 0])
    cube([1, 1, 2.16]);
  translate([113, 207, 0])
    cube([1, 1, 2.04]);
  translate([114, 207, 0])
    cube([1, 1, 1.73]);
  translate([115, 207, 0])
    cube([1, 1, 1.49]);
  translate([116, 207, 0])
    cube([1, 1, 2.24]);
  translate([117, 207, 0])
    cube([1, 1, 2.27]);
  translate([118, 207, 0])
    cube([1, 1, 2.24]);
  translate([119, 207, 0])
    cube([1, 1, 2.08]);
  translate([120, 207, 0])
    cube([1, 1, 2.12]);
  translate([121, 207, 0])
    cube([1, 1, 1.45]);
  translate([122, 207, 0])
    cube([1, 1, 1.69]);
  translate([123, 207, 0])
    cube([1, 1, 1.41]);
  translate([124, 207, 0])
    cube([1, 1, 2.55]);
  translate([125, 207, 0])
    cube([1, 1, 2.00]);
  translate([126, 207, 0])
    cube([1, 1, 1.80]);
  translate([127, 207, 0])
    cube([1, 1, 1.96]);
  translate([128, 207, 0])
    cube([1, 1, 2.16]);
  translate([129, 207, 0])
    cube([1, 1, 2.16]);
  translate([130, 207, 0])
    cube([1, 1, 0.98]);
  translate([131, 207, 0])
    cube([1, 1, 2.67]);
  translate([132, 207, 0])
    cube([1, 1, 2.59]);
  translate([133, 207, 0])
    cube([1, 1, 2.31]);
  translate([134, 207, 0])
    cube([1, 1, 1.88]);
  translate([135, 207, 0])
    cube([1, 1, 1.88]);
  translate([136, 207, 0])
    cube([1, 1, 2.16]);
  translate([137, 207, 0])
    cube([1, 1, 1.88]);
  translate([138, 207, 0])
    cube([1, 1, 1.88]);
  translate([139, 207, 0])
    cube([1, 1, 1.96]);
  translate([140, 207, 0])
    cube([1, 1, 1.53]);
  translate([141, 207, 0])
    cube([1, 1, 2.24]);
  translate([142, 207, 0])
    cube([1, 1, 2.75]);
  translate([143, 207, 0])
    cube([1, 1, 2.43]);
  translate([144, 207, 0])
    cube([1, 1, 2.12]);
  translate([145, 207, 0])
    cube([1, 1, 2.67]);
  translate([146, 207, 0])
    cube([1, 1, 2.39]);
  translate([147, 207, 0])
    cube([1, 1, 2.55]);
  translate([148, 207, 0])
    cube([1, 1, 5.02]);
  translate([149, 207, 0])
    cube([1, 1, 5.14]);
  translate([150, 207, 0])
    cube([1, 1, 5.02]);
  translate([151, 207, 0])
    cube([1, 1, 4.94]);
  translate([152, 207, 0])
    cube([1, 1, 4.98]);
  translate([153, 207, 0])
    cube([1, 1, 4.86]);
  translate([154, 207, 0])
    cube([1, 1, 4.90]);
  translate([155, 207, 0])
    cube([1, 1, 4.90]);
  translate([156, 207, 0])
    cube([1, 1, 5.14]);
  translate([157, 207, 0])
    cube([1, 1, 5.25]);
  translate([158, 207, 0])
    cube([1, 1, 5.33]);
  translate([159, 207, 0])
    cube([1, 1, 1.84]);
  translate([160, 207, 0])
    cube([1, 1, 1.02]);
  translate([161, 207, 0])
    cube([1, 1, 1.49]);
  translate([162, 207, 0])
    cube([1, 1, 1.41]);
  translate([163, 207, 0])
    cube([1, 1, 1.41]);
  translate([164, 207, 0])
    cube([1, 1, 1.49]);
  translate([165, 207, 0])
    cube([1, 1, 1.69]);
  translate([166, 207, 0])
    cube([1, 1, 1.80]);
  translate([167, 207, 0])
    cube([1, 1, 2.82]);
  translate([168, 207, 0])
    cube([1, 1, 4.51]);
  translate([169, 207, 0])
    cube([1, 1, 2.78]);
  translate([170, 207, 0])
    cube([1, 1, 2.00]);
  translate([171, 207, 0])
    cube([1, 1, 1.84]);
  translate([172, 207, 0])
    cube([1, 1, 2.35]);
  translate([173, 207, 0])
    cube([1, 1, 2.04]);
  translate([174, 207, 0])
    cube([1, 1, 1.92]);
  translate([175, 207, 0])
    cube([1, 1, 1.96]);
  translate([176, 207, 0])
    cube([1, 1, 1.96]);
  translate([177, 207, 0])
    cube([1, 1, 1.96]);
  translate([178, 207, 0])
    cube([1, 1, 1.96]);
  translate([179, 207, 0])
    cube([1, 1, 1.96]);
  translate([180, 207, 0])
    cube([1, 1, 1.96]);
  translate([181, 207, 0])
    cube([1, 1, 1.96]);
  translate([182, 207, 0])
    cube([1, 1, 1.96]);
  translate([183, 207, 0])
    cube([1, 1, 1.96]);
  translate([184, 207, 0])
    cube([1, 1, 2.00]);
  translate([185, 207, 0])
    cube([1, 1, 2.00]);
  translate([186, 207, 0])
    cube([1, 1, 2.00]);
  translate([187, 207, 0])
    cube([1, 1, 1.92]);
  translate([188, 207, 0])
    cube([1, 1, 2.00]);
  translate([189, 207, 0])
    cube([1, 1, 0.59]);
  translate([190, 207, 0])
    cube([1, 1, 0.24]);
  translate([191, 207, 0])
    cube([1, 1, 0.39]);
  translate([192, 207, 0])
    cube([1, 1, 0.78]);
  translate([193, 207, 0])
    cube([1, 1, 3.33]);
  translate([194, 207, 0])
    cube([1, 1, 4.31]);
  translate([195, 207, 0])
    cube([1, 1, 3.88]);
  translate([196, 207, 0])
    cube([1, 1, 5.18]);
  translate([197, 207, 0])
    cube([1, 1, 2.20]);
  translate([198, 207, 0])
    cube([1, 1, 2.04]);
  translate([199, 207, 0])
    cube([1, 1, 2.04]);
  translate([200, 207, 0])
    cube([1, 1, 2.04]);
  translate([201, 207, 0])
    cube([1, 1, 2.04]);
  translate([202, 207, 0])
    cube([1, 1, 2.04]);
  translate([203, 207, 0])
    cube([1, 1, 2.00]);
  translate([204, 207, 0])
    cube([1, 1, 2.00]);
  translate([205, 207, 0])
    cube([1, 1, 2.00]);
  translate([206, 207, 0])
    cube([1, 1, 1.92]);
  translate([207, 207, 0])
    cube([1, 1, 1.92]);
  translate([208, 207, 0])
    cube([1, 1, 1.96]);
  translate([209, 207, 0])
    cube([1, 1, 2.00]);
  translate([210, 207, 0])
    cube([1, 1, 2.00]);
  translate([211, 207, 0])
    cube([1, 1, 2.00]);
  translate([212, 207, 0])
    cube([1, 1, 2.00]);
  translate([213, 207, 0])
    cube([1, 1, 2.00]);
  translate([214, 207, 0])
    cube([1, 1, 2.00]);
  translate([215, 207, 0])
    cube([1, 1, 2.00]);
  translate([216, 207, 0])
    cube([1, 1, 2.00]);
  translate([217, 207, 0])
    cube([1, 1, 2.00]);
  translate([218, 207, 0])
    cube([1, 1, 2.00]);
  translate([219, 207, 0])
    cube([1, 1, 2.00]);
  translate([220, 207, 0])
    cube([1, 1, 2.04]);
  translate([221, 207, 0])
    cube([1, 1, 2.12]);
  translate([222, 207, 0])
    cube([1, 1, 1.65]);
  translate([223, 207, 0])
    cube([1, 1, 0.39]);
  translate([224, 207, 0])
    cube([1, 1, 0.35]);
  translate([225, 207, 0])
    cube([1, 1, 0.78]);
  translate([226, 207, 0])
    cube([1, 1, 0.35]);
  translate([227, 207, 0])
    cube([1, 1, 0.94]);
  translate([228, 207, 0])
    cube([1, 1, 0.47]);
  translate([229, 207, 0])
    cube([1, 1, 0.24]);
  translate([230, 207, 0])
    cube([1, 1, 0.43]);
  translate([231, 207, 0])
    cube([1, 1, 0.39]);
  translate([232, 207, 0])
    cube([1, 1, 0.39]);
  translate([233, 207, 0])
    cube([1, 1, 0.39]);
  translate([234, 207, 0])
    cube([1, 1, 0.39]);
  translate([235, 207, 0])
    cube([1, 1, 0.39]);
  translate([236, 207, 0])
    cube([1, 1, 0.27]);
  translate([237, 207, 0])
    cube([1, 1, 0.24]);
  translate([238, 207, 0])
    cube([1, 1, 0.75]);
  translate([239, 207, 0])
    cube([1, 1, 0.86]);
  translate([240, 207, 0])
    cube([1, 1, 0.71]);
  translate([241, 207, 0])
    cube([1, 1, 1.02]);
  translate([242, 207, 0])
    cube([1, 1, 0.39]);
  translate([243, 207, 0])
    cube([1, 1, 1.73]);
  translate([244, 207, 0])
    cube([1, 1, 1.96]);
  translate([245, 207, 0])
    cube([1, 1, 1.96]);
  translate([246, 207, 0])
    cube([1, 1, 1.96]);
  translate([0, 208, 0])
    cube([1, 1, 2.16]);
  translate([1, 208, 0])
    cube([1, 1, 2.16]);
  translate([2, 208, 0])
    cube([1, 1, 2.16]);
  translate([3, 208, 0])
    cube([1, 1, 2.16]);
  translate([4, 208, 0])
    cube([1, 1, 2.16]);
  translate([5, 208, 0])
    cube([1, 1, 2.16]);
  translate([6, 208, 0])
    cube([1, 1, 2.16]);
  translate([7, 208, 0])
    cube([1, 1, 2.16]);
  translate([8, 208, 0])
    cube([1, 1, 2.16]);
  translate([9, 208, 0])
    cube([1, 1, 2.16]);
  translate([10, 208, 0])
    cube([1, 1, 2.16]);
  translate([11, 208, 0])
    cube([1, 1, 2.08]);
  translate([12, 208, 0])
    cube([1, 1, 2.12]);
  translate([13, 208, 0])
    cube([1, 1, 2.12]);
  translate([14, 208, 0])
    cube([1, 1, 2.12]);
  translate([15, 208, 0])
    cube([1, 1, 2.16]);
  translate([16, 208, 0])
    cube([1, 1, 2.16]);
  translate([17, 208, 0])
    cube([1, 1, 2.08]);
  translate([18, 208, 0])
    cube([1, 1, 2.12]);
  translate([19, 208, 0])
    cube([1, 1, 2.16]);
  translate([20, 208, 0])
    cube([1, 1, 2.04]);
  translate([21, 208, 0])
    cube([1, 1, 2.16]);
  translate([22, 208, 0])
    cube([1, 1, 2.16]);
  translate([23, 208, 0])
    cube([1, 1, 2.16]);
  translate([24, 208, 0])
    cube([1, 1, 2.16]);
  translate([25, 208, 0])
    cube([1, 1, 2.16]);
  translate([26, 208, 0])
    cube([1, 1, 2.16]);
  translate([27, 208, 0])
    cube([1, 1, 2.16]);
  translate([28, 208, 0])
    cube([1, 1, 2.08]);
  translate([29, 208, 0])
    cube([1, 1, 2.12]);
  translate([30, 208, 0])
    cube([1, 1, 2.20]);
  translate([31, 208, 0])
    cube([1, 1, 2.20]);
  translate([32, 208, 0])
    cube([1, 1, 2.12]);
  translate([33, 208, 0])
    cube([1, 1, 2.12]);
  translate([34, 208, 0])
    cube([1, 1, 2.08]);
  translate([35, 208, 0])
    cube([1, 1, 2.12]);
  translate([36, 208, 0])
    cube([1, 1, 2.08]);
  translate([37, 208, 0])
    cube([1, 1, 2.12]);
  translate([38, 208, 0])
    cube([1, 1, 2.12]);
  translate([39, 208, 0])
    cube([1, 1, 2.16]);
  translate([40, 208, 0])
    cube([1, 1, 2.12]);
  translate([41, 208, 0])
    cube([1, 1, 2.08]);
  translate([42, 208, 0])
    cube([1, 1, 2.16]);
  translate([43, 208, 0])
    cube([1, 1, 2.12]);
  translate([44, 208, 0])
    cube([1, 1, 2.12]);
  translate([45, 208, 0])
    cube([1, 1, 2.12]);
  translate([46, 208, 0])
    cube([1, 1, 2.12]);
  translate([47, 208, 0])
    cube([1, 1, 2.12]);
  translate([48, 208, 0])
    cube([1, 1, 2.12]);
  translate([49, 208, 0])
    cube([1, 1, 2.12]);
  translate([50, 208, 0])
    cube([1, 1, 2.12]);
  translate([51, 208, 0])
    cube([1, 1, 2.12]);
  translate([52, 208, 0])
    cube([1, 1, 1.88]);
  translate([53, 208, 0])
    cube([1, 1, 1.61]);
  translate([54, 208, 0])
    cube([1, 1, 9.14]);
  translate([55, 208, 0])
    cube([1, 1, 7.92]);
  translate([56, 208, 0])
    cube([1, 1, 2.12]);
  translate([57, 208, 0])
    cube([1, 1, 1.37]);
  translate([58, 208, 0])
    cube([1, 1, 1.57]);
  translate([59, 208, 0])
    cube([1, 1, 1.61]);
  translate([60, 208, 0])
    cube([1, 1, 1.84]);
  translate([61, 208, 0])
    cube([1, 1, 3.41]);
  translate([62, 208, 0])
    cube([1, 1, 5.69]);
  translate([63, 208, 0])
    cube([1, 1, 4.20]);
  translate([64, 208, 0])
    cube([1, 1, 2.24]);
  translate([65, 208, 0])
    cube([1, 1, 1.84]);
  translate([66, 208, 0])
    cube([1, 1, 1.65]);
  translate([67, 208, 0])
    cube([1, 1, 2.12]);
  translate([68, 208, 0])
    cube([1, 1, 2.78]);
  translate([69, 208, 0])
    cube([1, 1, 2.75]);
  translate([70, 208, 0])
    cube([1, 1, 1.45]);
  translate([71, 208, 0])
    cube([1, 1, 4.94]);
  translate([72, 208, 0])
    cube([1, 1, 1.06]);
  translate([73, 208, 0])
    cube([1, 1, 1.53]);
  translate([74, 208, 0])
    cube([1, 1, 1.61]);
  translate([75, 208, 0])
    cube([1, 1, 1.88]);
  translate([76, 208, 0])
    cube([1, 1, 1.76]);
  translate([77, 208, 0])
    cube([1, 1, 1.96]);
  translate([78, 208, 0])
    cube([1, 1, 2.24]);
  translate([79, 208, 0])
    cube([1, 1, 2.08]);
  translate([80, 208, 0])
    cube([1, 1, 2.20]);
  translate([81, 208, 0])
    cube([1, 1, 2.24]);
  translate([82, 208, 0])
    cube([1, 1, 2.39]);
  translate([83, 208, 0])
    cube([1, 1, 2.35]);
  translate([84, 208, 0])
    cube([1, 1, 2.55]);
  translate([85, 208, 0])
    cube([1, 1, 2.51]);
  translate([86, 208, 0])
    cube([1, 1, 2.20]);
  translate([87, 208, 0])
    cube([1, 1, 2.39]);
  translate([88, 208, 0])
    cube([1, 1, 2.90]);
  translate([89, 208, 0])
    cube([1, 1, 2.55]);
  translate([90, 208, 0])
    cube([1, 1, 2.39]);
  translate([91, 208, 0])
    cube([1, 1, 1.88]);
  translate([92, 208, 0])
    cube([1, 1, 1.88]);
  translate([93, 208, 0])
    cube([1, 1, 1.73]);
  translate([94, 208, 0])
    cube([1, 1, 2.12]);
  translate([95, 208, 0])
    cube([1, 1, 2.43]);
  translate([96, 208, 0])
    cube([1, 1, 2.04]);
  translate([97, 208, 0])
    cube([1, 1, 1.88]);
  translate([98, 208, 0])
    cube([1, 1, 2.55]);
  translate([99, 208, 0])
    cube([1, 1, 1.53]);
  translate([100, 208, 0])
    cube([1, 1, 2.00]);
  translate([101, 208, 0])
    cube([1, 1, 2.59]);
  translate([102, 208, 0])
    cube([1, 1, 2.47]);
  translate([103, 208, 0])
    cube([1, 1, 2.00]);
  translate([104, 208, 0])
    cube([1, 1, 2.43]);
  translate([105, 208, 0])
    cube([1, 1, 2.31]);
  translate([106, 208, 0])
    cube([1, 1, 2.20]);
  translate([107, 208, 0])
    cube([1, 1, 1.88]);
  translate([108, 208, 0])
    cube([1, 1, 2.00]);
  translate([109, 208, 0])
    cube([1, 1, 2.12]);
  translate([110, 208, 0])
    cube([1, 1, 1.84]);
  translate([111, 208, 0])
    cube([1, 1, 2.04]);
  translate([112, 208, 0])
    cube([1, 1, 1.92]);
  translate([113, 208, 0])
    cube([1, 1, 2.12]);
  translate([114, 208, 0])
    cube([1, 1, 2.16]);
  translate([115, 208, 0])
    cube([1, 1, 2.67]);
  translate([116, 208, 0])
    cube([1, 1, 1.73]);
  translate([117, 208, 0])
    cube([1, 1, 1.88]);
  translate([118, 208, 0])
    cube([1, 1, 1.76]);
  translate([119, 208, 0])
    cube([1, 1, 1.76]);
  translate([120, 208, 0])
    cube([1, 1, 1.73]);
  translate([121, 208, 0])
    cube([1, 1, 1.61]);
  translate([122, 208, 0])
    cube([1, 1, 2.00]);
  translate([123, 208, 0])
    cube([1, 1, 1.88]);
  translate([124, 208, 0])
    cube([1, 1, 1.88]);
  translate([125, 208, 0])
    cube([1, 1, 1.65]);
  translate([126, 208, 0])
    cube([1, 1, 2.35]);
  translate([127, 208, 0])
    cube([1, 1, 2.35]);
  translate([128, 208, 0])
    cube([1, 1, 1.65]);
  translate([129, 208, 0])
    cube([1, 1, 1.18]);
  translate([130, 208, 0])
    cube([1, 1, 2.16]);
  translate([131, 208, 0])
    cube([1, 1, 2.63]);
  translate([132, 208, 0])
    cube([1, 1, 2.43]);
  translate([133, 208, 0])
    cube([1, 1, 2.94]);
  translate([134, 208, 0])
    cube([1, 1, 2.31]);
  translate([135, 208, 0])
    cube([1, 1, 2.51]);
  translate([136, 208, 0])
    cube([1, 1, 2.47]);
  translate([137, 208, 0])
    cube([1, 1, 2.24]);
  translate([138, 208, 0])
    cube([1, 1, 2.20]);
  translate([139, 208, 0])
    cube([1, 1, 1.92]);
  translate([140, 208, 0])
    cube([1, 1, 2.35]);
  translate([141, 208, 0])
    cube([1, 1, 2.51]);
  translate([142, 208, 0])
    cube([1, 1, 2.67]);
  translate([143, 208, 0])
    cube([1, 1, 2.39]);
  translate([144, 208, 0])
    cube([1, 1, 2.63]);
  translate([145, 208, 0])
    cube([1, 1, 2.47]);
  translate([146, 208, 0])
    cube([1, 1, 5.06]);
  translate([147, 208, 0])
    cube([1, 1, 4.94]);
  translate([148, 208, 0])
    cube([1, 1, 4.90]);
  translate([149, 208, 0])
    cube([1, 1, 5.02]);
  translate([150, 208, 0])
    cube([1, 1, 4.94]);
  translate([151, 208, 0])
    cube([1, 1, 4.94]);
  translate([152, 208, 0])
    cube([1, 1, 4.94]);
  translate([153, 208, 0])
    cube([1, 1, 4.90]);
  translate([154, 208, 0])
    cube([1, 1, 4.86]);
  translate([155, 208, 0])
    cube([1, 1, 4.82]);
  translate([156, 208, 0])
    cube([1, 1, 4.86]);
  translate([157, 208, 0])
    cube([1, 1, 5.14]);
  translate([158, 208, 0])
    cube([1, 1, 5.18]);
  translate([159, 208, 0])
    cube([1, 1, 2.90]);
  translate([160, 208, 0])
    cube([1, 1, 0.94]);
  translate([161, 208, 0])
    cube([1, 1, 1.37]);
  translate([162, 208, 0])
    cube([1, 1, 1.37]);
  translate([163, 208, 0])
    cube([1, 1, 1.49]);
  translate([164, 208, 0])
    cube([1, 1, 1.45]);
  translate([165, 208, 0])
    cube([1, 1, 1.61]);
  translate([166, 208, 0])
    cube([1, 1, 1.84]);
  translate([167, 208, 0])
    cube([1, 1, 2.51]);
  translate([168, 208, 0])
    cube([1, 1, 4.71]);
  translate([169, 208, 0])
    cube([1, 1, 3.22]);
  translate([170, 208, 0])
    cube([1, 1, 1.96]);
  translate([171, 208, 0])
    cube([1, 1, 1.88]);
  translate([172, 208, 0])
    cube([1, 1, 2.20]);
  translate([173, 208, 0])
    cube([1, 1, 2.35]);
  translate([174, 208, 0])
    cube([1, 1, 1.65]);
  translate([175, 208, 0])
    cube([1, 1, 2.00]);
  translate([176, 208, 0])
    cube([1, 1, 1.96]);
  translate([177, 208, 0])
    cube([1, 1, 1.96]);
  translate([178, 208, 0])
    cube([1, 1, 1.96]);
  translate([179, 208, 0])
    cube([1, 1, 1.96]);
  translate([180, 208, 0])
    cube([1, 1, 1.96]);
  translate([181, 208, 0])
    cube([1, 1, 2.00]);
  translate([182, 208, 0])
    cube([1, 1, 1.96]);
  translate([183, 208, 0])
    cube([1, 1, 1.96]);
  translate([184, 208, 0])
    cube([1, 1, 1.96]);
  translate([185, 208, 0])
    cube([1, 1, 2.00]);
  translate([186, 208, 0])
    cube([1, 1, 2.00]);
  translate([187, 208, 0])
    cube([1, 1, 2.00]);
  translate([188, 208, 0])
    cube([1, 1, 2.00]);
  translate([189, 208, 0])
    cube([1, 1, 2.00]);
  translate([190, 208, 0])
    cube([1, 1, 1.88]);
  translate([191, 208, 0])
    cube([1, 1, 2.12]);
  translate([192, 208, 0])
    cube([1, 1, 2.00]);
  translate([193, 208, 0])
    cube([1, 1, 1.96]);
  translate([194, 208, 0])
    cube([1, 1, 1.96]);
  translate([195, 208, 0])
    cube([1, 1, 1.92]);
  translate([196, 208, 0])
    cube([1, 1, 1.92]);
  translate([197, 208, 0])
    cube([1, 1, 2.08]);
  translate([198, 208, 0])
    cube([1, 1, 2.00]);
  translate([199, 208, 0])
    cube([1, 1, 2.04]);
  translate([200, 208, 0])
    cube([1, 1, 2.00]);
  translate([201, 208, 0])
    cube([1, 1, 2.00]);
  translate([202, 208, 0])
    cube([1, 1, 2.00]);
  translate([203, 208, 0])
    cube([1, 1, 2.00]);
  translate([204, 208, 0])
    cube([1, 1, 2.00]);
  translate([205, 208, 0])
    cube([1, 1, 2.00]);
  translate([206, 208, 0])
    cube([1, 1, 1.96]);
  translate([207, 208, 0])
    cube([1, 1, 1.96]);
  translate([208, 208, 0])
    cube([1, 1, 2.00]);
  translate([209, 208, 0])
    cube([1, 1, 2.00]);
  translate([210, 208, 0])
    cube([1, 1, 2.00]);
  translate([211, 208, 0])
    cube([1, 1, 2.00]);
  translate([212, 208, 0])
    cube([1, 1, 1.96]);
  translate([213, 208, 0])
    cube([1, 1, 1.96]);
  translate([214, 208, 0])
    cube([1, 1, 2.00]);
  translate([215, 208, 0])
    cube([1, 1, 2.00]);
  translate([216, 208, 0])
    cube([1, 1, 2.00]);
  translate([217, 208, 0])
    cube([1, 1, 2.00]);
  translate([218, 208, 0])
    cube([1, 1, 2.00]);
  translate([219, 208, 0])
    cube([1, 1, 2.00]);
  translate([220, 208, 0])
    cube([1, 1, 1.96]);
  translate([221, 208, 0])
    cube([1, 1, 2.00]);
  translate([222, 208, 0])
    cube([1, 1, 2.00]);
  translate([223, 208, 0])
    cube([1, 1, 1.96]);
  translate([224, 208, 0])
    cube([1, 1, 1.61]);
  translate([225, 208, 0])
    cube([1, 1, 0.39]);
  translate([226, 208, 0])
    cube([1, 1, 0.51]);
  translate([227, 208, 0])
    cube([1, 1, 0.43]);
  translate([228, 208, 0])
    cube([1, 1, 0.04]);
  translate([229, 208, 0])
    cube([1, 1, 1.06]);
  translate([230, 208, 0])
    cube([1, 1, 0.39]);
  translate([231, 208, 0])
    cube([1, 1, 0.43]);
  translate([232, 208, 0])
    cube([1, 1, 0.43]);
  translate([233, 208, 0])
    cube([1, 1, 0.39]);
  translate([234, 208, 0])
    cube([1, 1, 0.39]);
  translate([235, 208, 0])
    cube([1, 1, 0.39]);
  translate([236, 208, 0])
    cube([1, 1, 0.39]);
  translate([237, 208, 0])
    cube([1, 1, 0.39]);
  translate([238, 208, 0])
    cube([1, 1, 0.39]);
  translate([239, 208, 0])
    cube([1, 1, 0.39]);
  translate([240, 208, 0])
    cube([1, 1, 0.67]);
  translate([241, 208, 0])
    cube([1, 1, 0.94]);
  translate([242, 208, 0])
    cube([1, 1, 1.65]);
  translate([243, 208, 0])
    cube([1, 1, 1.96]);
  translate([244, 208, 0])
    cube([1, 1, 1.96]);
  translate([245, 208, 0])
    cube([1, 1, 1.96]);
  translate([246, 208, 0])
    cube([1, 1, 1.96]);
  translate([0, 209, 0])
    cube([1, 1, 2.16]);
  translate([1, 209, 0])
    cube([1, 1, 2.16]);
  translate([2, 209, 0])
    cube([1, 1, 2.16]);
  translate([3, 209, 0])
    cube([1, 1, 2.16]);
  translate([4, 209, 0])
    cube([1, 1, 2.20]);
  translate([5, 209, 0])
    cube([1, 1, 2.20]);
  translate([6, 209, 0])
    cube([1, 1, 2.16]);
  translate([7, 209, 0])
    cube([1, 1, 2.16]);
  translate([8, 209, 0])
    cube([1, 1, 2.16]);
  translate([9, 209, 0])
    cube([1, 1, 2.16]);
  translate([10, 209, 0])
    cube([1, 1, 2.16]);
  translate([11, 209, 0])
    cube([1, 1, 2.16]);
  translate([12, 209, 0])
    cube([1, 1, 2.16]);
  translate([13, 209, 0])
    cube([1, 1, 2.16]);
  translate([14, 209, 0])
    cube([1, 1, 2.12]);
  translate([15, 209, 0])
    cube([1, 1, 2.16]);
  translate([16, 209, 0])
    cube([1, 1, 2.16]);
  translate([17, 209, 0])
    cube([1, 1, 2.08]);
  translate([18, 209, 0])
    cube([1, 1, 2.12]);
  translate([19, 209, 0])
    cube([1, 1, 2.16]);
  translate([20, 209, 0])
    cube([1, 1, 2.16]);
  translate([21, 209, 0])
    cube([1, 1, 2.12]);
  translate([22, 209, 0])
    cube([1, 1, 2.16]);
  translate([23, 209, 0])
    cube([1, 1, 2.16]);
  translate([24, 209, 0])
    cube([1, 1, 2.20]);
  translate([25, 209, 0])
    cube([1, 1, 2.16]);
  translate([26, 209, 0])
    cube([1, 1, 2.16]);
  translate([27, 209, 0])
    cube([1, 1, 2.16]);
  translate([28, 209, 0])
    cube([1, 1, 2.08]);
  translate([29, 209, 0])
    cube([1, 1, 2.12]);
  translate([30, 209, 0])
    cube([1, 1, 2.04]);
  translate([31, 209, 0])
    cube([1, 1, 2.04]);
  translate([32, 209, 0])
    cube([1, 1, 2.16]);
  translate([33, 209, 0])
    cube([1, 1, 2.12]);
  translate([34, 209, 0])
    cube([1, 1, 2.08]);
  translate([35, 209, 0])
    cube([1, 1, 2.12]);
  translate([36, 209, 0])
    cube([1, 1, 2.12]);
  translate([37, 209, 0])
    cube([1, 1, 2.16]);
  translate([38, 209, 0])
    cube([1, 1, 2.12]);
  translate([39, 209, 0])
    cube([1, 1, 2.16]);
  translate([40, 209, 0])
    cube([1, 1, 2.12]);
  translate([41, 209, 0])
    cube([1, 1, 2.12]);
  translate([42, 209, 0])
    cube([1, 1, 2.08]);
  translate([43, 209, 0])
    cube([1, 1, 2.12]);
  translate([44, 209, 0])
    cube([1, 1, 2.12]);
  translate([45, 209, 0])
    cube([1, 1, 2.12]);
  translate([46, 209, 0])
    cube([1, 1, 2.12]);
  translate([47, 209, 0])
    cube([1, 1, 2.12]);
  translate([48, 209, 0])
    cube([1, 1, 2.12]);
  translate([49, 209, 0])
    cube([1, 1, 2.12]);
  translate([50, 209, 0])
    cube([1, 1, 2.12]);
  translate([51, 209, 0])
    cube([1, 1, 2.12]);
  translate([52, 209, 0])
    cube([1, 1, 2.24]);
  translate([53, 209, 0])
    cube([1, 1, 5.88]);
  translate([54, 209, 0])
    cube([1, 1, 8.35]);
  translate([55, 209, 0])
    cube([1, 1, 5.80]);
  translate([56, 209, 0])
    cube([1, 1, 1.96]);
  translate([57, 209, 0])
    cube([1, 1, 1.37]);
  translate([58, 209, 0])
    cube([1, 1, 1.57]);
  translate([59, 209, 0])
    cube([1, 1, 1.65]);
  translate([60, 209, 0])
    cube([1, 1, 1.96]);
  translate([61, 209, 0])
    cube([1, 1, 4.24]);
  translate([62, 209, 0])
    cube([1, 1, 5.76]);
  translate([63, 209, 0])
    cube([1, 1, 3.61]);
  translate([64, 209, 0])
    cube([1, 1, 2.04]);
  translate([65, 209, 0])
    cube([1, 1, 1.73]);
  translate([66, 209, 0])
    cube([1, 1, 1.69]);
  translate([67, 209, 0])
    cube([1, 1, 1.45]);
  translate([68, 209, 0])
    cube([1, 1, 6.31]);
  translate([69, 209, 0])
    cube([1, 1, 2.67]);
  translate([70, 209, 0])
    cube([1, 1, 2.27]);
  translate([71, 209, 0])
    cube([1, 1, 0.71]);
  translate([72, 209, 0])
    cube([1, 1, 1.45]);
  translate([73, 209, 0])
    cube([1, 1, 1.25]);
  translate([74, 209, 0])
    cube([1, 1, 1.37]);
  translate([75, 209, 0])
    cube([1, 1, 1.57]);
  translate([76, 209, 0])
    cube([1, 1, 1.49]);
  translate([77, 209, 0])
    cube([1, 1, 1.88]);
  translate([78, 209, 0])
    cube([1, 1, 1.88]);
  translate([79, 209, 0])
    cube([1, 1, 2.20]);
  translate([80, 209, 0])
    cube([1, 1, 2.31]);
  translate([81, 209, 0])
    cube([1, 1, 2.08]);
  translate([82, 209, 0])
    cube([1, 1, 2.16]);
  translate([83, 209, 0])
    cube([1, 1, 2.20]);
  translate([84, 209, 0])
    cube([1, 1, 2.27]);
  translate([85, 209, 0])
    cube([1, 1, 2.47]);
  translate([86, 209, 0])
    cube([1, 1, 2.63]);
  translate([87, 209, 0])
    cube([1, 1, 2.59]);
  translate([88, 209, 0])
    cube([1, 1, 2.78]);
  translate([89, 209, 0])
    cube([1, 1, 2.51]);
  translate([90, 209, 0])
    cube([1, 1, 2.82]);
  translate([91, 209, 0])
    cube([1, 1, 2.67]);
  translate([92, 209, 0])
    cube([1, 1, 3.22]);
  translate([93, 209, 0])
    cube([1, 1, 3.10]);
  translate([94, 209, 0])
    cube([1, 1, 2.39]);
  translate([95, 209, 0])
    cube([1, 1, 2.47]);
  translate([96, 209, 0])
    cube([1, 1, 3.22]);
  translate([97, 209, 0])
    cube([1, 1, 2.12]);
  translate([98, 209, 0])
    cube([1, 1, 2.20]);
  translate([99, 209, 0])
    cube([1, 1, 2.82]);
  translate([100, 209, 0])
    cube([1, 1, 1.92]);
  translate([101, 209, 0])
    cube([1, 1, 1.73]);
  translate([102, 209, 0])
    cube([1, 1, 2.78]);
  translate([103, 209, 0])
    cube([1, 1, 1.80]);
  translate([104, 209, 0])
    cube([1, 1, 2.04]);
  translate([105, 209, 0])
    cube([1, 1, 1.88]);
  translate([106, 209, 0])
    cube([1, 1, 2.08]);
  translate([107, 209, 0])
    cube([1, 1, 1.96]);
  translate([108, 209, 0])
    cube([1, 1, 2.90]);
  translate([109, 209, 0])
    cube([1, 1, 2.16]);
  translate([110, 209, 0])
    cube([1, 1, 1.69]);
  translate([111, 209, 0])
    cube([1, 1, 1.76]);
  translate([112, 209, 0])
    cube([1, 1, 1.88]);
  translate([113, 209, 0])
    cube([1, 1, 2.16]);
  translate([114, 209, 0])
    cube([1, 1, 2.08]);
  translate([115, 209, 0])
    cube([1, 1, 1.84]);
  translate([116, 209, 0])
    cube([1, 1, 1.96]);
  translate([117, 209, 0])
    cube([1, 1, 1.53]);
  translate([118, 209, 0])
    cube([1, 1, 1.69]);
  translate([119, 209, 0])
    cube([1, 1, 1.73]);
  translate([120, 209, 0])
    cube([1, 1, 1.57]);
  translate([121, 209, 0])
    cube([1, 1, 2.00]);
  translate([122, 209, 0])
    cube([1, 1, 1.65]);
  translate([123, 209, 0])
    cube([1, 1, 1.84]);
  translate([124, 209, 0])
    cube([1, 1, 1.96]);
  translate([125, 209, 0])
    cube([1, 1, 1.65]);
  translate([126, 209, 0])
    cube([1, 1, 1.41]);
  translate([127, 209, 0])
    cube([1, 1, 1.53]);
  translate([128, 209, 0])
    cube([1, 1, 1.53]);
  translate([129, 209, 0])
    cube([1, 1, 1.49]);
  translate([130, 209, 0])
    cube([1, 1, 1.53]);
  translate([131, 209, 0])
    cube([1, 1, 2.16]);
  translate([132, 209, 0])
    cube([1, 1, 2.55]);
  translate([133, 209, 0])
    cube([1, 1, 3.06]);
  translate([134, 209, 0])
    cube([1, 1, 3.06]);
  translate([135, 209, 0])
    cube([1, 1, 2.78]);
  translate([136, 209, 0])
    cube([1, 1, 2.78]);
  translate([137, 209, 0])
    cube([1, 1, 2.20]);
  translate([138, 209, 0])
    cube([1, 1, 2.20]);
  translate([139, 209, 0])
    cube([1, 1, 2.35]);
  translate([140, 209, 0])
    cube([1, 1, 2.71]);
  translate([141, 209, 0])
    cube([1, 1, 2.51]);
  translate([142, 209, 0])
    cube([1, 1, 2.20]);
  translate([143, 209, 0])
    cube([1, 1, 2.63]);
  translate([144, 209, 0])
    cube([1, 1, 2.16]);
  translate([145, 209, 0])
    cube([1, 1, 4.90]);
  translate([146, 209, 0])
    cube([1, 1, 4.86]);
  translate([147, 209, 0])
    cube([1, 1, 4.94]);
  translate([148, 209, 0])
    cube([1, 1, 5.02]);
  translate([149, 209, 0])
    cube([1, 1, 4.98]);
  translate([150, 209, 0])
    cube([1, 1, 4.94]);
  translate([151, 209, 0])
    cube([1, 1, 4.94]);
  translate([152, 209, 0])
    cube([1, 1, 4.94]);
  translate([153, 209, 0])
    cube([1, 1, 4.86]);
  translate([154, 209, 0])
    cube([1, 1, 4.82]);
  translate([155, 209, 0])
    cube([1, 1, 4.82]);
  translate([156, 209, 0])
    cube([1, 1, 4.90]);
  translate([157, 209, 0])
    cube([1, 1, 4.98]);
  translate([158, 209, 0])
    cube([1, 1, 5.14]);
  translate([159, 209, 0])
    cube([1, 1, 5.10]);
  translate([160, 209, 0])
    cube([1, 1, 0.71]);
  translate([161, 209, 0])
    cube([1, 1, 1.18]);
  translate([162, 209, 0])
    cube([1, 1, 1.29]);
  translate([163, 209, 0])
    cube([1, 1, 1.49]);
  translate([164, 209, 0])
    cube([1, 1, 1.45]);
  translate([165, 209, 0])
    cube([1, 1, 1.61]);
  translate([166, 209, 0])
    cube([1, 1, 1.73]);
  translate([167, 209, 0])
    cube([1, 1, 2.16]);
  translate([168, 209, 0])
    cube([1, 1, 4.55]);
  translate([169, 209, 0])
    cube([1, 1, 3.92]);
  translate([170, 209, 0])
    cube([1, 1, 2.04]);
  translate([171, 209, 0])
    cube([1, 1, 1.88]);
  translate([172, 209, 0])
    cube([1, 1, 2.20]);
  translate([173, 209, 0])
    cube([1, 1, 3.80]);
  translate([174, 209, 0])
    cube([1, 1, 1.88]);
  translate([175, 209, 0])
    cube([1, 1, 2.08]);
  translate([176, 209, 0])
    cube([1, 1, 1.96]);
  translate([177, 209, 0])
    cube([1, 1, 1.96]);
  translate([178, 209, 0])
    cube([1, 1, 1.96]);
  translate([179, 209, 0])
    cube([1, 1, 1.96]);
  translate([180, 209, 0])
    cube([1, 1, 1.96]);
  translate([181, 209, 0])
    cube([1, 1, 2.00]);
  translate([182, 209, 0])
    cube([1, 1, 1.96]);
  translate([183, 209, 0])
    cube([1, 1, 1.96]);
  translate([184, 209, 0])
    cube([1, 1, 1.96]);
  translate([185, 209, 0])
    cube([1, 1, 2.00]);
  translate([186, 209, 0])
    cube([1, 1, 2.00]);
  translate([187, 209, 0])
    cube([1, 1, 2.00]);
  translate([188, 209, 0])
    cube([1, 1, 2.00]);
  translate([189, 209, 0])
    cube([1, 1, 2.00]);
  translate([190, 209, 0])
    cube([1, 1, 2.00]);
  translate([191, 209, 0])
    cube([1, 1, 1.88]);
  translate([192, 209, 0])
    cube([1, 1, 2.00]);
  translate([193, 209, 0])
    cube([1, 1, 2.08]);
  translate([194, 209, 0])
    cube([1, 1, 2.08]);
  translate([195, 209, 0])
    cube([1, 1, 2.04]);
  translate([196, 209, 0])
    cube([1, 1, 2.12]);
  translate([197, 209, 0])
    cube([1, 1, 2.04]);
  translate([198, 209, 0])
    cube([1, 1, 2.00]);
  translate([199, 209, 0])
    cube([1, 1, 2.04]);
  translate([200, 209, 0])
    cube([1, 1, 2.00]);
  translate([201, 209, 0])
    cube([1, 1, 2.00]);
  translate([202, 209, 0])
    cube([1, 1, 2.00]);
  translate([203, 209, 0])
    cube([1, 1, 2.00]);
  translate([204, 209, 0])
    cube([1, 1, 2.00]);
  translate([205, 209, 0])
    cube([1, 1, 2.00]);
  translate([206, 209, 0])
    cube([1, 1, 2.00]);
  translate([207, 209, 0])
    cube([1, 1, 2.00]);
  translate([208, 209, 0])
    cube([1, 1, 2.00]);
  translate([209, 209, 0])
    cube([1, 1, 2.00]);
  translate([210, 209, 0])
    cube([1, 1, 2.00]);
  translate([211, 209, 0])
    cube([1, 1, 2.00]);
  translate([212, 209, 0])
    cube([1, 1, 2.00]);
  translate([213, 209, 0])
    cube([1, 1, 2.00]);
  translate([214, 209, 0])
    cube([1, 1, 2.00]);
  translate([215, 209, 0])
    cube([1, 1, 2.00]);
  translate([216, 209, 0])
    cube([1, 1, 2.00]);
  translate([217, 209, 0])
    cube([1, 1, 2.00]);
  translate([218, 209, 0])
    cube([1, 1, 2.00]);
  translate([219, 209, 0])
    cube([1, 1, 2.00]);
  translate([220, 209, 0])
    cube([1, 1, 1.96]);
  translate([221, 209, 0])
    cube([1, 1, 2.00]);
  translate([222, 209, 0])
    cube([1, 1, 1.96]);
  translate([223, 209, 0])
    cube([1, 1, 2.04]);
  translate([224, 209, 0])
    cube([1, 1, 2.00]);
  translate([225, 209, 0])
    cube([1, 1, 1.88]);
  translate([226, 209, 0])
    cube([1, 1, 0.12]);
  translate([227, 209, 0])
    cube([1, 1, 0.43]);
  translate([228, 209, 0])
    cube([1, 1, 0.55]);
  translate([229, 209, 0])
    cube([1, 1, 0.47]);
  translate([230, 209, 0])
    cube([1, 1, 0.94]);
  translate([231, 209, 0])
    cube([1, 1, 0.39]);
  translate([232, 209, 0])
    cube([1, 1, 0.35]);
  translate([233, 209, 0])
    cube([1, 1, 0.39]);
  translate([234, 209, 0])
    cube([1, 1, 0.39]);
  translate([235, 209, 0])
    cube([1, 1, 0.39]);
  translate([236, 209, 0])
    cube([1, 1, 0.39]);
  translate([237, 209, 0])
    cube([1, 1, 0.39]);
  translate([238, 209, 0])
    cube([1, 1, 0.39]);
  translate([239, 209, 0])
    cube([1, 1, 0.39]);
  translate([240, 209, 0])
    cube([1, 1, 0.39]);
  translate([241, 209, 0])
    cube([1, 1, 1.80]);
  translate([242, 209, 0])
    cube([1, 1, 1.84]);
  translate([243, 209, 0])
    cube([1, 1, 1.96]);
  translate([244, 209, 0])
    cube([1, 1, 1.96]);
  translate([245, 209, 0])
    cube([1, 1, 1.96]);
  translate([246, 209, 0])
    cube([1, 1, 1.96]);
  translate([0, 210, 0])
    cube([1, 1, 2.16]);
  translate([1, 210, 0])
    cube([1, 1, 2.16]);
  translate([2, 210, 0])
    cube([1, 1, 2.16]);
  translate([3, 210, 0])
    cube([1, 1, 2.16]);
  translate([4, 210, 0])
    cube([1, 1, 2.16]);
  translate([5, 210, 0])
    cube([1, 1, 2.16]);
  translate([6, 210, 0])
    cube([1, 1, 2.16]);
  translate([7, 210, 0])
    cube([1, 1, 2.16]);
  translate([8, 210, 0])
    cube([1, 1, 2.16]);
  translate([9, 210, 0])
    cube([1, 1, 2.16]);
  translate([10, 210, 0])
    cube([1, 1, 2.16]);
  translate([11, 210, 0])
    cube([1, 1, 2.16]);
  translate([12, 210, 0])
    cube([1, 1, 2.16]);
  translate([13, 210, 0])
    cube([1, 1, 2.16]);
  translate([14, 210, 0])
    cube([1, 1, 2.16]);
  translate([15, 210, 0])
    cube([1, 1, 2.16]);
  translate([16, 210, 0])
    cube([1, 1, 2.16]);
  translate([17, 210, 0])
    cube([1, 1, 2.08]);
  translate([18, 210, 0])
    cube([1, 1, 2.12]);
  translate([19, 210, 0])
    cube([1, 1, 2.16]);
  translate([20, 210, 0])
    cube([1, 1, 2.16]);
  translate([21, 210, 0])
    cube([1, 1, 2.16]);
  translate([22, 210, 0])
    cube([1, 1, 2.16]);
  translate([23, 210, 0])
    cube([1, 1, 2.16]);
  translate([24, 210, 0])
    cube([1, 1, 2.16]);
  translate([25, 210, 0])
    cube([1, 1, 2.16]);
  translate([26, 210, 0])
    cube([1, 1, 2.16]);
  translate([27, 210, 0])
    cube([1, 1, 2.12]);
  translate([28, 210, 0])
    cube([1, 1, 2.16]);
  translate([29, 210, 0])
    cube([1, 1, 2.16]);
  translate([30, 210, 0])
    cube([1, 1, 2.16]);
  translate([31, 210, 0])
    cube([1, 1, 2.16]);
  translate([32, 210, 0])
    cube([1, 1, 2.16]);
  translate([33, 210, 0])
    cube([1, 1, 2.16]);
  translate([34, 210, 0])
    cube([1, 1, 2.16]);
  translate([35, 210, 0])
    cube([1, 1, 2.12]);
  translate([36, 210, 0])
    cube([1, 1, 2.16]);
  translate([37, 210, 0])
    cube([1, 1, 2.16]);
  translate([38, 210, 0])
    cube([1, 1, 2.16]);
  translate([39, 210, 0])
    cube([1, 1, 2.16]);
  translate([40, 210, 0])
    cube([1, 1, 2.16]);
  translate([41, 210, 0])
    cube([1, 1, 2.12]);
  translate([42, 210, 0])
    cube([1, 1, 2.12]);
  translate([43, 210, 0])
    cube([1, 1, 2.12]);
  translate([44, 210, 0])
    cube([1, 1, 2.12]);
  translate([45, 210, 0])
    cube([1, 1, 2.12]);
  translate([46, 210, 0])
    cube([1, 1, 2.12]);
  translate([47, 210, 0])
    cube([1, 1, 2.12]);
  translate([48, 210, 0])
    cube([1, 1, 2.16]);
  translate([49, 210, 0])
    cube([1, 1, 2.12]);
  translate([50, 210, 0])
    cube([1, 1, 2.16]);
  translate([51, 210, 0])
    cube([1, 1, 2.12]);
  translate([52, 210, 0])
    cube([1, 1, 2.16]);
  translate([53, 210, 0])
    cube([1, 1, 8.35]);
  translate([54, 210, 0])
    cube([1, 1, 9.37]);
  translate([55, 210, 0])
    cube([1, 1, 1.02]);
  translate([56, 210, 0])
    cube([1, 1, 1.37]);
  translate([57, 210, 0])
    cube([1, 1, 1.41]);
  translate([58, 210, 0])
    cube([1, 1, 1.57]);
  translate([59, 210, 0])
    cube([1, 1, 1.73]);
  translate([60, 210, 0])
    cube([1, 1, 2.12]);
  translate([61, 210, 0])
    cube([1, 1, 4.82]);
  translate([62, 210, 0])
    cube([1, 1, 5.69]);
  translate([63, 210, 0])
    cube([1, 1, 2.94]);
  translate([64, 210, 0])
    cube([1, 1, 2.00]);
  translate([65, 210, 0])
    cube([1, 1, 1.73]);
  translate([66, 210, 0])
    cube([1, 1, 1.69]);
  translate([67, 210, 0])
    cube([1, 1, 1.53]);
  translate([68, 210, 0])
    cube([1, 1, 6.47]);
  translate([69, 210, 0])
    cube([1, 1, 0.75]);
  translate([70, 210, 0])
    cube([1, 1, 2.31]);
  translate([71, 210, 0])
    cube([1, 1, 1.02]);
  translate([72, 210, 0])
    cube([1, 1, 1.37]);
  translate([73, 210, 0])
    cube([1, 1, 2.08]);
  translate([74, 210, 0])
    cube([1, 1, 2.47]);
  translate([75, 210, 0])
    cube([1, 1, 2.47]);
  translate([76, 210, 0])
    cube([1, 1, 1.84]);
  translate([77, 210, 0])
    cube([1, 1, 1.18]);
  translate([78, 210, 0])
    cube([1, 1, 0.98]);
  translate([79, 210, 0])
    cube([1, 1, 1.06]);
  translate([80, 210, 0])
    cube([1, 1, 1.53]);
  translate([81, 210, 0])
    cube([1, 1, 1.73]);
  translate([82, 210, 0])
    cube([1, 1, 1.37]);
  translate([83, 210, 0])
    cube([1, 1, 2.00]);
  translate([84, 210, 0])
    cube([1, 1, 2.00]);
  translate([85, 210, 0])
    cube([1, 1, 2.31]);
  translate([86, 210, 0])
    cube([1, 1, 2.63]);
  translate([87, 210, 0])
    cube([1, 1, 2.78]);
  translate([88, 210, 0])
    cube([1, 1, 2.90]);
  translate([89, 210, 0])
    cube([1, 1, 3.02]);
  translate([90, 210, 0])
    cube([1, 1, 2.86]);
  translate([91, 210, 0])
    cube([1, 1, 2.94]);
  translate([92, 210, 0])
    cube([1, 1, 2.71]);
  translate([93, 210, 0])
    cube([1, 1, 2.67]);
  translate([94, 210, 0])
    cube([1, 1, 3.06]);
  translate([95, 210, 0])
    cube([1, 1, 2.75]);
  translate([96, 210, 0])
    cube([1, 1, 2.08]);
  translate([97, 210, 0])
    cube([1, 1, 2.24]);
  translate([98, 210, 0])
    cube([1, 1, 1.92]);
  translate([99, 210, 0])
    cube([1, 1, 2.43]);
  translate([100, 210, 0])
    cube([1, 1, 2.43]);
  translate([101, 210, 0])
    cube([1, 1, 2.08]);
  translate([102, 210, 0])
    cube([1, 1, 1.92]);
  translate([103, 210, 0])
    cube([1, 1, 2.24]);
  translate([104, 210, 0])
    cube([1, 1, 1.80]);
  translate([105, 210, 0])
    cube([1, 1, 2.67]);
  translate([106, 210, 0])
    cube([1, 1, 1.92]);
  translate([107, 210, 0])
    cube([1, 1, 2.12]);
  translate([108, 210, 0])
    cube([1, 1, 2.67]);
  translate([109, 210, 0])
    cube([1, 1, 1.84]);
  translate([110, 210, 0])
    cube([1, 1, 1.92]);
  translate([111, 210, 0])
    cube([1, 1, 2.51]);
  translate([112, 210, 0])
    cube([1, 1, 2.51]);
  translate([113, 210, 0])
    cube([1, 1, 2.20]);
  translate([114, 210, 0])
    cube([1, 1, 1.69]);
  translate([115, 210, 0])
    cube([1, 1, 1.29]);
  translate([116, 210, 0])
    cube([1, 1, 1.65]);
  translate([117, 210, 0])
    cube([1, 1, 1.76]);
  translate([118, 210, 0])
    cube([1, 1, 1.65]);
  translate([119, 210, 0])
    cube([1, 1, 1.76]);
  translate([120, 210, 0])
    cube([1, 1, 2.08]);
  translate([121, 210, 0])
    cube([1, 1, 1.96]);
  translate([122, 210, 0])
    cube([1, 1, 1.88]);
  translate([123, 210, 0])
    cube([1, 1, 1.65]);
  translate([124, 210, 0])
    cube([1, 1, 1.29]);
  translate([125, 210, 0])
    cube([1, 1, 1.73]);
  translate([126, 210, 0])
    cube([1, 1, 2.04]);
  translate([127, 210, 0])
    cube([1, 1, 1.84]);
  translate([128, 210, 0])
    cube([1, 1, 2.35]);
  translate([129, 210, 0])
    cube([1, 1, 1.73]);
  translate([130, 210, 0])
    cube([1, 1, 0.82]);
  translate([131, 210, 0])
    cube([1, 1, 1.61]);
  translate([132, 210, 0])
    cube([1, 1, 1.69]);
  translate([133, 210, 0])
    cube([1, 1, 1.96]);
  translate([134, 210, 0])
    cube([1, 1, 2.86]);
  translate([135, 210, 0])
    cube([1, 1, 2.82]);
  translate([136, 210, 0])
    cube([1, 1, 1.76]);
  translate([137, 210, 0])
    cube([1, 1, 2.31]);
  translate([138, 210, 0])
    cube([1, 1, 2.55]);
  translate([139, 210, 0])
    cube([1, 1, 2.47]);
  translate([140, 210, 0])
    cube([1, 1, 2.08]);
  translate([141, 210, 0])
    cube([1, 1, 2.98]);
  translate([142, 210, 0])
    cube([1, 1, 2.71]);
  translate([143, 210, 0])
    cube([1, 1, 4.31]);
  translate([144, 210, 0])
    cube([1, 1, 5.06]);
  translate([145, 210, 0])
    cube([1, 1, 4.86]);
  translate([146, 210, 0])
    cube([1, 1, 4.90]);
  translate([147, 210, 0])
    cube([1, 1, 4.98]);
  translate([148, 210, 0])
    cube([1, 1, 4.98]);
  translate([149, 210, 0])
    cube([1, 1, 5.02]);
  translate([150, 210, 0])
    cube([1, 1, 4.94]);
  translate([151, 210, 0])
    cube([1, 1, 4.98]);
  translate([152, 210, 0])
    cube([1, 1, 4.94]);
  translate([153, 210, 0])
    cube([1, 1, 4.86]);
  translate([154, 210, 0])
    cube([1, 1, 4.90]);
  translate([155, 210, 0])
    cube([1, 1, 4.90]);
  translate([156, 210, 0])
    cube([1, 1, 4.90]);
  translate([157, 210, 0])
    cube([1, 1, 4.86]);
  translate([158, 210, 0])
    cube([1, 1, 4.75]);
  translate([159, 210, 0])
    cube([1, 1, 4.71]);
  translate([160, 210, 0])
    cube([1, 1, 0.63]);
  translate([161, 210, 0])
    cube([1, 1, 1.06]);
  translate([162, 210, 0])
    cube([1, 1, 1.33]);
  translate([163, 210, 0])
    cube([1, 1, 1.41]);
  translate([164, 210, 0])
    cube([1, 1, 1.41]);
  translate([165, 210, 0])
    cube([1, 1, 1.57]);
  translate([166, 210, 0])
    cube([1, 1, 1.76]);
  translate([167, 210, 0])
    cube([1, 1, 2.08]);
  translate([168, 210, 0])
    cube([1, 1, 1.06]);
  translate([169, 210, 0])
    cube([1, 1, 1.14]);
  translate([170, 210, 0])
    cube([1, 1, 1.57]);
  translate([171, 210, 0])
    cube([1, 1, 1.41]);
  translate([172, 210, 0])
    cube([1, 1, 2.31]);
  translate([173, 210, 0])
    cube([1, 1, 6.00]);
  translate([174, 210, 0])
    cube([1, 1, 1.84]);
  translate([175, 210, 0])
    cube([1, 1, 2.00]);
  translate([176, 210, 0])
    cube([1, 1, 1.96]);
  translate([177, 210, 0])
    cube([1, 1, 1.96]);
  translate([178, 210, 0])
    cube([1, 1, 1.96]);
  translate([179, 210, 0])
    cube([1, 1, 1.96]);
  translate([180, 210, 0])
    cube([1, 1, 1.96]);
  translate([181, 210, 0])
    cube([1, 1, 2.00]);
  translate([182, 210, 0])
    cube([1, 1, 1.96]);
  translate([183, 210, 0])
    cube([1, 1, 1.96]);
  translate([184, 210, 0])
    cube([1, 1, 1.96]);
  translate([185, 210, 0])
    cube([1, 1, 2.00]);
  translate([186, 210, 0])
    cube([1, 1, 2.00]);
  translate([187, 210, 0])
    cube([1, 1, 2.00]);
  translate([188, 210, 0])
    cube([1, 1, 2.00]);
  translate([189, 210, 0])
    cube([1, 1, 2.00]);
  translate([190, 210, 0])
    cube([1, 1, 2.00]);
  translate([191, 210, 0])
    cube([1, 1, 2.00]);
  translate([192, 210, 0])
    cube([1, 1, 2.00]);
  translate([193, 210, 0])
    cube([1, 1, 2.04]);
  translate([194, 210, 0])
    cube([1, 1, 2.04]);
  translate([195, 210, 0])
    cube([1, 1, 2.00]);
  translate([196, 210, 0])
    cube([1, 1, 2.00]);
  translate([197, 210, 0])
    cube([1, 1, 2.00]);
  translate([198, 210, 0])
    cube([1, 1, 1.96]);
  translate([199, 210, 0])
    cube([1, 1, 2.00]);
  translate([200, 210, 0])
    cube([1, 1, 2.00]);
  translate([201, 210, 0])
    cube([1, 1, 1.92]);
  translate([202, 210, 0])
    cube([1, 1, 2.00]);
  translate([203, 210, 0])
    cube([1, 1, 2.00]);
  translate([204, 210, 0])
    cube([1, 1, 2.00]);
  translate([205, 210, 0])
    cube([1, 1, 2.00]);
  translate([206, 210, 0])
    cube([1, 1, 2.00]);
  translate([207, 210, 0])
    cube([1, 1, 2.00]);
  translate([208, 210, 0])
    cube([1, 1, 2.00]);
  translate([209, 210, 0])
    cube([1, 1, 2.00]);
  translate([210, 210, 0])
    cube([1, 1, 2.00]);
  translate([211, 210, 0])
    cube([1, 1, 2.00]);
  translate([212, 210, 0])
    cube([1, 1, 2.00]);
  translate([213, 210, 0])
    cube([1, 1, 2.00]);
  translate([214, 210, 0])
    cube([1, 1, 2.00]);
  translate([215, 210, 0])
    cube([1, 1, 2.00]);
  translate([216, 210, 0])
    cube([1, 1, 2.00]);
  translate([217, 210, 0])
    cube([1, 1, 2.00]);
  translate([218, 210, 0])
    cube([1, 1, 2.00]);
  translate([219, 210, 0])
    cube([1, 1, 2.04]);
  translate([220, 210, 0])
    cube([1, 1, 2.04]);
  translate([221, 210, 0])
    cube([1, 1, 2.04]);
  translate([222, 210, 0])
    cube([1, 1, 2.00]);
  translate([223, 210, 0])
    cube([1, 1, 2.04]);
  translate([224, 210, 0])
    cube([1, 1, 2.04]);
  translate([225, 210, 0])
    cube([1, 1, 2.08]);
  translate([226, 210, 0])
    cube([1, 1, 1.96]);
  translate([227, 210, 0])
    cube([1, 1, 1.02]);
  translate([228, 210, 0])
    cube([1, 1, 0.47]);
  translate([229, 210, 0])
    cube([1, 1, 0.39]);
  translate([230, 210, 0])
    cube([1, 1, 2.24]);
  translate([231, 210, 0])
    cube([1, 1, 0.04]);
  translate([232, 210, 0])
    cube([1, 1, 1.22]);
  translate([233, 210, 0])
    cube([1, 1, 0.35]);
  translate([234, 210, 0])
    cube([1, 1, 0.31]);
  translate([235, 210, 0])
    cube([1, 1, 0.39]);
  translate([236, 210, 0])
    cube([1, 1, 0.39]);
  translate([237, 210, 0])
    cube([1, 1, 0.39]);
  translate([238, 210, 0])
    cube([1, 1, 0.39]);
  translate([239, 210, 0])
    cube([1, 1, 0.31]);
  translate([240, 210, 0])
    cube([1, 1, 1.49]);
  translate([241, 210, 0])
    cube([1, 1, 1.96]);
  translate([242, 210, 0])
    cube([1, 1, 2.00]);
  translate([243, 210, 0])
    cube([1, 1, 1.96]);
  translate([244, 210, 0])
    cube([1, 1, 1.92]);
  translate([245, 210, 0])
    cube([1, 1, 1.96]);
  translate([246, 210, 0])
    cube([1, 1, 1.96]);
  translate([0, 211, 0])
    cube([1, 1, 2.16]);
  translate([1, 211, 0])
    cube([1, 1, 2.16]);
  translate([2, 211, 0])
    cube([1, 1, 2.16]);
  translate([3, 211, 0])
    cube([1, 1, 2.16]);
  translate([4, 211, 0])
    cube([1, 1, 2.16]);
  translate([5, 211, 0])
    cube([1, 1, 2.16]);
  translate([6, 211, 0])
    cube([1, 1, 2.16]);
  translate([7, 211, 0])
    cube([1, 1, 2.16]);
  translate([8, 211, 0])
    cube([1, 1, 2.16]);
  translate([9, 211, 0])
    cube([1, 1, 2.12]);
  translate([10, 211, 0])
    cube([1, 1, 2.12]);
  translate([11, 211, 0])
    cube([1, 1, 2.16]);
  translate([12, 211, 0])
    cube([1, 1, 2.16]);
  translate([13, 211, 0])
    cube([1, 1, 2.16]);
  translate([14, 211, 0])
    cube([1, 1, 2.16]);
  translate([15, 211, 0])
    cube([1, 1, 2.16]);
  translate([16, 211, 0])
    cube([1, 1, 2.24]);
  translate([17, 211, 0])
    cube([1, 1, 2.20]);
  translate([18, 211, 0])
    cube([1, 1, 2.12]);
  translate([19, 211, 0])
    cube([1, 1, 2.16]);
  translate([20, 211, 0])
    cube([1, 1, 2.16]);
  translate([21, 211, 0])
    cube([1, 1, 2.16]);
  translate([22, 211, 0])
    cube([1, 1, 2.16]);
  translate([23, 211, 0])
    cube([1, 1, 2.16]);
  translate([24, 211, 0])
    cube([1, 1, 2.16]);
  translate([25, 211, 0])
    cube([1, 1, 2.16]);
  translate([26, 211, 0])
    cube([1, 1, 2.16]);
  translate([27, 211, 0])
    cube([1, 1, 2.20]);
  translate([28, 211, 0])
    cube([1, 1, 2.16]);
  translate([29, 211, 0])
    cube([1, 1, 2.16]);
  translate([30, 211, 0])
    cube([1, 1, 2.16]);
  translate([31, 211, 0])
    cube([1, 1, 2.16]);
  translate([32, 211, 0])
    cube([1, 1, 2.16]);
  translate([33, 211, 0])
    cube([1, 1, 2.16]);
  translate([34, 211, 0])
    cube([1, 1, 2.16]);
  translate([35, 211, 0])
    cube([1, 1, 2.12]);
  translate([36, 211, 0])
    cube([1, 1, 2.16]);
  translate([37, 211, 0])
    cube([1, 1, 2.16]);
  translate([38, 211, 0])
    cube([1, 1, 2.16]);
  translate([39, 211, 0])
    cube([1, 1, 2.16]);
  translate([40, 211, 0])
    cube([1, 1, 2.16]);
  translate([41, 211, 0])
    cube([1, 1, 2.16]);
  translate([42, 211, 0])
    cube([1, 1, 2.16]);
  translate([43, 211, 0])
    cube([1, 1, 2.16]);
  translate([44, 211, 0])
    cube([1, 1, 2.12]);
  translate([45, 211, 0])
    cube([1, 1, 2.12]);
  translate([46, 211, 0])
    cube([1, 1, 2.12]);
  translate([47, 211, 0])
    cube([1, 1, 2.12]);
  translate([48, 211, 0])
    cube([1, 1, 2.16]);
  translate([49, 211, 0])
    cube([1, 1, 2.08]);
  translate([50, 211, 0])
    cube([1, 1, 2.16]);
  translate([51, 211, 0])
    cube([1, 1, 2.12]);
  translate([52, 211, 0])
    cube([1, 1, 2.20]);
  translate([53, 211, 0])
    cube([1, 1, 8.98]);
  translate([54, 211, 0])
    cube([1, 1, 9.10]);
  translate([55, 211, 0])
    cube([1, 1, 1.06]);
  translate([56, 211, 0])
    cube([1, 1, 1.57]);
  translate([57, 211, 0])
    cube([1, 1, 1.49]);
  translate([58, 211, 0])
    cube([1, 1, 1.61]);
  translate([59, 211, 0])
    cube([1, 1, 1.73]);
  translate([60, 211, 0])
    cube([1, 1, 2.47]);
  translate([61, 211, 0])
    cube([1, 1, 5.33]);
  translate([62, 211, 0])
    cube([1, 1, 5.25]);
  translate([63, 211, 0])
    cube([1, 1, 2.63]);
  translate([64, 211, 0])
    cube([1, 1, 1.84]);
  translate([65, 211, 0])
    cube([1, 1, 1.65]);
  translate([66, 211, 0])
    cube([1, 1, 1.73]);
  translate([67, 211, 0])
    cube([1, 1, 8.51]);
  translate([68, 211, 0])
    cube([1, 1, 4.63]);
  translate([69, 211, 0])
    cube([1, 1, 1.14]);
  translate([70, 211, 0])
    cube([1, 1, 4.86]);
  translate([71, 211, 0])
    cube([1, 1, 2.98]);
  translate([72, 211, 0])
    cube([1, 1, 3.18]);
  translate([73, 211, 0])
    cube([1, 1, 3.37]);
  translate([74, 211, 0])
    cube([1, 1, 3.53]);
  translate([75, 211, 0])
    cube([1, 1, 3.69]);
  translate([76, 211, 0])
    cube([1, 1, 3.92]);
  translate([77, 211, 0])
    cube([1, 1, 3.92]);
  translate([78, 211, 0])
    cube([1, 1, 3.84]);
  translate([79, 211, 0])
    cube([1, 1, 4.08]);
  translate([80, 211, 0])
    cube([1, 1, 4.20]);
  translate([81, 211, 0])
    cube([1, 1, 4.24]);
  translate([82, 211, 0])
    cube([1, 1, 4.39]);
  translate([83, 211, 0])
    cube([1, 1, 4.35]);
  translate([84, 211, 0])
    cube([1, 1, 3.84]);
  translate([85, 211, 0])
    cube([1, 1, 1.88]);
  translate([86, 211, 0])
    cube([1, 1, 1.22]);
  translate([87, 211, 0])
    cube([1, 1, 1.65]);
  translate([88, 211, 0])
    cube([1, 1, 1.69]);
  translate([89, 211, 0])
    cube([1, 1, 2.27]);
  translate([90, 211, 0])
    cube([1, 1, 2.98]);
  translate([91, 211, 0])
    cube([1, 1, 2.98]);
  translate([92, 211, 0])
    cube([1, 1, 2.90]);
  translate([93, 211, 0])
    cube([1, 1, 2.75]);
  translate([94, 211, 0])
    cube([1, 1, 2.86]);
  translate([95, 211, 0])
    cube([1, 1, 2.71]);
  translate([96, 211, 0])
    cube([1, 1, 2.94]);
  translate([97, 211, 0])
    cube([1, 1, 2.82]);
  translate([98, 211, 0])
    cube([1, 1, 2.59]);
  translate([99, 211, 0])
    cube([1, 1, 2.43]);
  translate([100, 211, 0])
    cube([1, 1, 2.82]);
  translate([101, 211, 0])
    cube([1, 1, 2.43]);
  translate([102, 211, 0])
    cube([1, 1, 2.47]);
  translate([103, 211, 0])
    cube([1, 1, 2.90]);
  translate([104, 211, 0])
    cube([1, 1, 1.92]);
  translate([105, 211, 0])
    cube([1, 1, 2.08]);
  translate([106, 211, 0])
    cube([1, 1, 1.84]);
  translate([107, 211, 0])
    cube([1, 1, 1.92]);
  translate([108, 211, 0])
    cube([1, 1, 2.24]);
  translate([109, 211, 0])
    cube([1, 1, 1.76]);
  translate([110, 211, 0])
    cube([1, 1, 2.27]);
  translate([111, 211, 0])
    cube([1, 1, 2.59]);
  translate([112, 211, 0])
    cube([1, 1, 2.31]);
  translate([113, 211, 0])
    cube([1, 1, 1.69]);
  translate([114, 211, 0])
    cube([1, 1, 1.45]);
  translate([115, 211, 0])
    cube([1, 1, 1.53]);
  translate([116, 211, 0])
    cube([1, 1, 2.16]);
  translate([117, 211, 0])
    cube([1, 1, 1.69]);
  translate([118, 211, 0])
    cube([1, 1, 2.16]);
  translate([119, 211, 0])
    cube([1, 1, 2.00]);
  translate([120, 211, 0])
    cube([1, 1, 1.80]);
  translate([121, 211, 0])
    cube([1, 1, 1.80]);
  translate([122, 211, 0])
    cube([1, 1, 1.41]);
  translate([123, 211, 0])
    cube([1, 1, 1.76]);
  translate([124, 211, 0])
    cube([1, 1, 1.45]);
  translate([125, 211, 0])
    cube([1, 1, 2.00]);
  translate([126, 211, 0])
    cube([1, 1, 2.16]);
  translate([127, 211, 0])
    cube([1, 1, 1.49]);
  translate([128, 211, 0])
    cube([1, 1, 1.80]);
  translate([129, 211, 0])
    cube([1, 1, 2.39]);
  translate([130, 211, 0])
    cube([1, 1, 2.16]);
  translate([131, 211, 0])
    cube([1, 1, 1.49]);
  translate([132, 211, 0])
    cube([1, 1, 1.53]);
  translate([133, 211, 0])
    cube([1, 1, 1.45]);
  translate([134, 211, 0])
    cube([1, 1, 1.29]);
  translate([135, 211, 0])
    cube([1, 1, 2.35]);
  translate([136, 211, 0])
    cube([1, 1, 1.88]);
  translate([137, 211, 0])
    cube([1, 1, 2.31]);
  translate([138, 211, 0])
    cube([1, 1, 2.00]);
  translate([139, 211, 0])
    cube([1, 1, 2.59]);
  translate([140, 211, 0])
    cube([1, 1, 2.71]);
  translate([141, 211, 0])
    cube([1, 1, 3.22]);
  translate([142, 211, 0])
    cube([1, 1, 4.82]);
  translate([143, 211, 0])
    cube([1, 1, 4.90]);
  translate([144, 211, 0])
    cube([1, 1, 4.98]);
  translate([145, 211, 0])
    cube([1, 1, 4.90]);
  translate([146, 211, 0])
    cube([1, 1, 4.94]);
  translate([147, 211, 0])
    cube([1, 1, 4.90]);
  translate([148, 211, 0])
    cube([1, 1, 4.98]);
  translate([149, 211, 0])
    cube([1, 1, 5.02]);
  translate([150, 211, 0])
    cube([1, 1, 4.98]);
  translate([151, 211, 0])
    cube([1, 1, 5.02]);
  translate([152, 211, 0])
    cube([1, 1, 4.98]);
  translate([153, 211, 0])
    cube([1, 1, 4.90]);
  translate([154, 211, 0])
    cube([1, 1, 4.94]);
  translate([155, 211, 0])
    cube([1, 1, 4.90]);
  translate([156, 211, 0])
    cube([1, 1, 4.94]);
  translate([157, 211, 0])
    cube([1, 1, 4.94]);
  translate([158, 211, 0])
    cube([1, 1, 4.78]);
  translate([159, 211, 0])
    cube([1, 1, 4.75]);
  translate([160, 211, 0])
    cube([1, 1, 4.90]);
  translate([161, 211, 0])
    cube([1, 1, 0.75]);
  translate([162, 211, 0])
    cube([1, 1, 1.22]);
  translate([163, 211, 0])
    cube([1, 1, 1.37]);
  translate([164, 211, 0])
    cube([1, 1, 1.61]);
  translate([165, 211, 0])
    cube([1, 1, 0.98]);
  translate([166, 211, 0])
    cube([1, 1, 1.25]);
  translate([167, 211, 0])
    cube([1, 1, 1.37]);
  translate([168, 211, 0])
    cube([1, 1, 3.10]);
  translate([169, 211, 0])
    cube([1, 1, 3.02]);
  translate([170, 211, 0])
    cube([1, 1, 2.51]);
  translate([171, 211, 0])
    cube([1, 1, 1.53]);
  translate([172, 211, 0])
    cube([1, 1, 1.41]);
  translate([173, 211, 0])
    cube([1, 1, 1.45]);
  translate([174, 211, 0])
    cube([1, 1, 2.24]);
  translate([175, 211, 0])
    cube([1, 1, 2.00]);
  translate([176, 211, 0])
    cube([1, 1, 1.96]);
  translate([177, 211, 0])
    cube([1, 1, 1.96]);
  translate([178, 211, 0])
    cube([1, 1, 1.96]);
  translate([179, 211, 0])
    cube([1, 1, 2.00]);
  translate([180, 211, 0])
    cube([1, 1, 1.96]);
  translate([181, 211, 0])
    cube([1, 1, 2.00]);
  translate([182, 211, 0])
    cube([1, 1, 2.00]);
  translate([183, 211, 0])
    cube([1, 1, 2.00]);
  translate([184, 211, 0])
    cube([1, 1, 1.96]);
  translate([185, 211, 0])
    cube([1, 1, 2.00]);
  translate([186, 211, 0])
    cube([1, 1, 2.00]);
  translate([187, 211, 0])
    cube([1, 1, 2.00]);
  translate([188, 211, 0])
    cube([1, 1, 2.04]);
  translate([189, 211, 0])
    cube([1, 1, 2.04]);
  translate([190, 211, 0])
    cube([1, 1, 2.04]);
  translate([191, 211, 0])
    cube([1, 1, 2.04]);
  translate([192, 211, 0])
    cube([1, 1, 2.04]);
  translate([193, 211, 0])
    cube([1, 1, 2.04]);
  translate([194, 211, 0])
    cube([1, 1, 2.04]);
  translate([195, 211, 0])
    cube([1, 1, 2.00]);
  translate([196, 211, 0])
    cube([1, 1, 2.04]);
  translate([197, 211, 0])
    cube([1, 1, 2.04]);
  translate([198, 211, 0])
    cube([1, 1, 2.00]);
  translate([199, 211, 0])
    cube([1, 1, 2.04]);
  translate([200, 211, 0])
    cube([1, 1, 2.00]);
  translate([201, 211, 0])
    cube([1, 1, 2.00]);
  translate([202, 211, 0])
    cube([1, 1, 2.04]);
  translate([203, 211, 0])
    cube([1, 1, 2.00]);
  translate([204, 211, 0])
    cube([1, 1, 2.04]);
  translate([205, 211, 0])
    cube([1, 1, 2.04]);
  translate([206, 211, 0])
    cube([1, 1, 2.00]);
  translate([207, 211, 0])
    cube([1, 1, 2.00]);
  translate([208, 211, 0])
    cube([1, 1, 2.00]);
  translate([209, 211, 0])
    cube([1, 1, 2.00]);
  translate([210, 211, 0])
    cube([1, 1, 2.00]);
  translate([211, 211, 0])
    cube([1, 1, 2.00]);
  translate([212, 211, 0])
    cube([1, 1, 2.00]);
  translate([213, 211, 0])
    cube([1, 1, 2.00]);
  translate([214, 211, 0])
    cube([1, 1, 2.00]);
  translate([215, 211, 0])
    cube([1, 1, 2.00]);
  translate([216, 211, 0])
    cube([1, 1, 2.04]);
  translate([217, 211, 0])
    cube([1, 1, 2.00]);
  translate([218, 211, 0])
    cube([1, 1, 2.00]);
  translate([219, 211, 0])
    cube([1, 1, 2.04]);
  translate([220, 211, 0])
    cube([1, 1, 2.04]);
  translate([221, 211, 0])
    cube([1, 1, 2.04]);
  translate([222, 211, 0])
    cube([1, 1, 2.00]);
  translate([223, 211, 0])
    cube([1, 1, 2.04]);
  translate([224, 211, 0])
    cube([1, 1, 2.04]);
  translate([225, 211, 0])
    cube([1, 1, 2.04]);
  translate([226, 211, 0])
    cube([1, 1, 1.96]);
  translate([227, 211, 0])
    cube([1, 1, 1.92]);
  translate([228, 211, 0])
    cube([1, 1, 2.00]);
  translate([229, 211, 0])
    cube([1, 1, 2.31]);
  translate([230, 211, 0])
    cube([1, 1, 0.67]);
  translate([231, 211, 0])
    cube([1, 1, 0.24]);
  translate([232, 211, 0])
    cube([1, 1, 1.96]);
  translate([233, 211, 0])
    cube([1, 1, 0.82]);
  translate([234, 211, 0])
    cube([1, 1, 0.47]);
  translate([235, 211, 0])
    cube([1, 1, 0.39]);
  translate([236, 211, 0])
    cube([1, 1, 0.39]);
  translate([237, 211, 0])
    cube([1, 1, 0.39]);
  translate([238, 211, 0])
    cube([1, 1, 0.35]);
  translate([239, 211, 0])
    cube([1, 1, 0.43]);
  translate([240, 211, 0])
    cube([1, 1, 1.96]);
  translate([241, 211, 0])
    cube([1, 1, 1.96]);
  translate([242, 211, 0])
    cube([1, 1, 2.00]);
  translate([243, 211, 0])
    cube([1, 1, 2.04]);
  translate([244, 211, 0])
    cube([1, 1, 1.92]);
  translate([245, 211, 0])
    cube([1, 1, 1.96]);
  translate([246, 211, 0])
    cube([1, 1, 1.96]);
  translate([0, 212, 0])
    cube([1, 1, 2.16]);
  translate([1, 212, 0])
    cube([1, 1, 2.16]);
  translate([2, 212, 0])
    cube([1, 1, 2.16]);
  translate([3, 212, 0])
    cube([1, 1, 2.16]);
  translate([4, 212, 0])
    cube([1, 1, 2.16]);
  translate([5, 212, 0])
    cube([1, 1, 2.24]);
  translate([6, 212, 0])
    cube([1, 1, 2.16]);
  translate([7, 212, 0])
    cube([1, 1, 2.16]);
  translate([8, 212, 0])
    cube([1, 1, 2.16]);
  translate([9, 212, 0])
    cube([1, 1, 2.16]);
  translate([10, 212, 0])
    cube([1, 1, 2.16]);
  translate([11, 212, 0])
    cube([1, 1, 2.16]);
  translate([12, 212, 0])
    cube([1, 1, 2.16]);
  translate([13, 212, 0])
    cube([1, 1, 2.16]);
  translate([14, 212, 0])
    cube([1, 1, 2.16]);
  translate([15, 212, 0])
    cube([1, 1, 2.16]);
  translate([16, 212, 0])
    cube([1, 1, 2.16]);
  translate([17, 212, 0])
    cube([1, 1, 2.16]);
  translate([18, 212, 0])
    cube([1, 1, 2.16]);
  translate([19, 212, 0])
    cube([1, 1, 2.16]);
  translate([20, 212, 0])
    cube([1, 1, 2.16]);
  translate([21, 212, 0])
    cube([1, 1, 2.16]);
  translate([22, 212, 0])
    cube([1, 1, 2.16]);
  translate([23, 212, 0])
    cube([1, 1, 2.16]);
  translate([24, 212, 0])
    cube([1, 1, 2.16]);
  translate([25, 212, 0])
    cube([1, 1, 2.16]);
  translate([26, 212, 0])
    cube([1, 1, 2.16]);
  translate([27, 212, 0])
    cube([1, 1, 2.16]);
  translate([28, 212, 0])
    cube([1, 1, 2.16]);
  translate([29, 212, 0])
    cube([1, 1, 2.16]);
  translate([30, 212, 0])
    cube([1, 1, 2.16]);
  translate([31, 212, 0])
    cube([1, 1, 2.16]);
  translate([32, 212, 0])
    cube([1, 1, 2.16]);
  translate([33, 212, 0])
    cube([1, 1, 2.16]);
  translate([34, 212, 0])
    cube([1, 1, 2.16]);
  translate([35, 212, 0])
    cube([1, 1, 2.16]);
  translate([36, 212, 0])
    cube([1, 1, 2.16]);
  translate([37, 212, 0])
    cube([1, 1, 2.16]);
  translate([38, 212, 0])
    cube([1, 1, 2.16]);
  translate([39, 212, 0])
    cube([1, 1, 2.16]);
  translate([40, 212, 0])
    cube([1, 1, 2.16]);
  translate([41, 212, 0])
    cube([1, 1, 2.16]);
  translate([42, 212, 0])
    cube([1, 1, 2.12]);
  translate([43, 212, 0])
    cube([1, 1, 2.16]);
  translate([44, 212, 0])
    cube([1, 1, 2.12]);
  translate([45, 212, 0])
    cube([1, 1, 2.16]);
  translate([46, 212, 0])
    cube([1, 1, 2.12]);
  translate([47, 212, 0])
    cube([1, 1, 2.12]);
  translate([48, 212, 0])
    cube([1, 1, 2.16]);
  translate([49, 212, 0])
    cube([1, 1, 2.16]);
  translate([50, 212, 0])
    cube([1, 1, 2.16]);
  translate([51, 212, 0])
    cube([1, 1, 2.39]);
  translate([52, 212, 0])
    cube([1, 1, 5.73]);
  translate([53, 212, 0])
    cube([1, 1, 9.18]);
  translate([54, 212, 0])
    cube([1, 1, 8.16]);
  translate([55, 212, 0])
    cube([1, 1, 2.71]);
  translate([56, 212, 0])
    cube([1, 1, 1.14]);
  translate([57, 212, 0])
    cube([1, 1, 0.78]);
  translate([58, 212, 0])
    cube([1, 1, 0.82]);
  translate([59, 212, 0])
    cube([1, 1, 1.10]);
  translate([60, 212, 0])
    cube([1, 1, 1.84]);
  translate([61, 212, 0])
    cube([1, 1, 4.67]);
  translate([62, 212, 0])
    cube([1, 1, 4.98]);
  translate([63, 212, 0])
    cube([1, 1, 2.35]);
  translate([64, 212, 0])
    cube([1, 1, 1.80]);
  translate([65, 212, 0])
    cube([1, 1, 1.69]);
  translate([66, 212, 0])
    cube([1, 1, 1.76]);
  translate([67, 212, 0])
    cube([1, 1, 8.43]);
  translate([68, 212, 0])
    cube([1, 1, 5.76]);
  translate([69, 212, 0])
    cube([1, 1, 1.41]);
  translate([70, 212, 0])
    cube([1, 1, 1.65]);
  translate([71, 212, 0])
    cube([1, 1, 3.14]);
  translate([72, 212, 0])
    cube([1, 1, 3.14]);
  translate([73, 212, 0])
    cube([1, 1, 3.33]);
  translate([74, 212, 0])
    cube([1, 1, 3.57]);
  translate([75, 212, 0])
    cube([1, 1, 3.73]);
  translate([76, 212, 0])
    cube([1, 1, 3.88]);
  translate([77, 212, 0])
    cube([1, 1, 4.00]);
  translate([78, 212, 0])
    cube([1, 1, 4.04]);
  translate([79, 212, 0])
    cube([1, 1, 4.08]);
  translate([80, 212, 0])
    cube([1, 1, 4.16]);
  translate([81, 212, 0])
    cube([1, 1, 4.20]);
  translate([82, 212, 0])
    cube([1, 1, 4.31]);
  translate([83, 212, 0])
    cube([1, 1, 4.27]);
  translate([84, 212, 0])
    cube([1, 1, 4.31]);
  translate([85, 212, 0])
    cube([1, 1, 4.71]);
  translate([86, 212, 0])
    cube([1, 1, 4.75]);
  translate([87, 212, 0])
    cube([1, 1, 4.94]);
  translate([88, 212, 0])
    cube([1, 1, 4.90]);
  translate([89, 212, 0])
    cube([1, 1, 4.86]);
  translate([90, 212, 0])
    cube([1, 1, 1.96]);
  translate([91, 212, 0])
    cube([1, 1, 1.37]);
  translate([92, 212, 0])
    cube([1, 1, 2.27]);
  translate([93, 212, 0])
    cube([1, 1, 2.78]);
  translate([94, 212, 0])
    cube([1, 1, 2.78]);
  translate([95, 212, 0])
    cube([1, 1, 2.43]);
  translate([96, 212, 0])
    cube([1, 1, 2.71]);
  translate([97, 212, 0])
    cube([1, 1, 2.75]);
  translate([98, 212, 0])
    cube([1, 1, 2.55]);
  translate([99, 212, 0])
    cube([1, 1, 2.78]);
  translate([100, 212, 0])
    cube([1, 1, 2.39]);
  translate([101, 212, 0])
    cube([1, 1, 2.12]);
  translate([102, 212, 0])
    cube([1, 1, 2.43]);
  translate([103, 212, 0])
    cube([1, 1, 2.67]);
  translate([104, 212, 0])
    cube([1, 1, 1.80]);
  translate([105, 212, 0])
    cube([1, 1, 1.25]);
  translate([106, 212, 0])
    cube([1, 1, 2.94]);
  translate([107, 212, 0])
    cube([1, 1, 2.12]);
  translate([108, 212, 0])
    cube([1, 1, 2.24]);
  translate([109, 212, 0])
    cube([1, 1, 2.78]);
  translate([110, 212, 0])
    cube([1, 1, 1.88]);
  translate([111, 212, 0])
    cube([1, 1, 2.67]);
  translate([112, 212, 0])
    cube([1, 1, 1.84]);
  translate([113, 212, 0])
    cube([1, 1, 1.80]);
  translate([114, 212, 0])
    cube([1, 1, 2.00]);
  translate([115, 212, 0])
    cube([1, 1, 2.47]);
  translate([116, 212, 0])
    cube([1, 1, 1.80]);
  translate([117, 212, 0])
    cube([1, 1, 1.33]);
  translate([118, 212, 0])
    cube([1, 1, 1.73]);
  translate([119, 212, 0])
    cube([1, 1, 1.53]);
  translate([120, 212, 0])
    cube([1, 1, 1.73]);
  translate([121, 212, 0])
    cube([1, 1, 1.45]);
  translate([122, 212, 0])
    cube([1, 1, 1.65]);
  translate([123, 212, 0])
    cube([1, 1, 1.88]);
  translate([124, 212, 0])
    cube([1, 1, 1.76]);
  translate([125, 212, 0])
    cube([1, 1, 1.65]);
  translate([126, 212, 0])
    cube([1, 1, 1.57]);
  translate([127, 212, 0])
    cube([1, 1, 1.76]);
  translate([128, 212, 0])
    cube([1, 1, 1.25]);
  translate([129, 212, 0])
    cube([1, 1, 1.92]);
  translate([130, 212, 0])
    cube([1, 1, 2.08]);
  translate([131, 212, 0])
    cube([1, 1, 2.35]);
  translate([132, 212, 0])
    cube([1, 1, 1.49]);
  translate([133, 212, 0])
    cube([1, 1, 1.73]);
  translate([134, 212, 0])
    cube([1, 1, 1.84]);
  translate([135, 212, 0])
    cube([1, 1, 2.12]);
  translate([136, 212, 0])
    cube([1, 1, 2.31]);
  translate([137, 212, 0])
    cube([1, 1, 2.31]);
  translate([138, 212, 0])
    cube([1, 1, 2.51]);
  translate([139, 212, 0])
    cube([1, 1, 2.47]);
  translate([140, 212, 0])
    cube([1, 1, 5.14]);
  translate([141, 212, 0])
    cube([1, 1, 4.78]);
  translate([142, 212, 0])
    cube([1, 1, 4.67]);
  translate([143, 212, 0])
    cube([1, 1, 4.75]);
  translate([144, 212, 0])
    cube([1, 1, 4.82]);
  translate([145, 212, 0])
    cube([1, 1, 4.82]);
  translate([146, 212, 0])
    cube([1, 1, 4.94]);
  translate([147, 212, 0])
    cube([1, 1, 5.02]);
  translate([148, 212, 0])
    cube([1, 1, 5.06]);
  translate([149, 212, 0])
    cube([1, 1, 5.02]);
  translate([150, 212, 0])
    cube([1, 1, 5.10]);
  translate([151, 212, 0])
    cube([1, 1, 5.06]);
  translate([152, 212, 0])
    cube([1, 1, 4.94]);
  translate([153, 212, 0])
    cube([1, 1, 4.90]);
  translate([154, 212, 0])
    cube([1, 1, 5.02]);
  translate([155, 212, 0])
    cube([1, 1, 5.06]);
  translate([156, 212, 0])
    cube([1, 1, 5.06]);
  translate([157, 212, 0])
    cube([1, 1, 5.02]);
  translate([158, 212, 0])
    cube([1, 1, 4.86]);
  translate([159, 212, 0])
    cube([1, 1, 4.78]);
  translate([160, 212, 0])
    cube([1, 1, 4.78]);
  translate([161, 212, 0])
    cube([1, 1, 0.27]);
  translate([162, 212, 0])
    cube([1, 1, 1.22]);
  translate([163, 212, 0])
    cube([1, 1, 1.18]);
  translate([164, 212, 0])
    cube([1, 1, 1.22]);
  translate([165, 212, 0])
    cube([1, 1, 1.18]);
  translate([166, 212, 0])
    cube([1, 1, 1.22]);
  translate([167, 212, 0])
    cube([1, 1, 1.41]);
  translate([168, 212, 0])
    cube([1, 1, 3.37]);
  translate([169, 212, 0])
    cube([1, 1, 5.37]);
  translate([170, 212, 0])
    cube([1, 1, 1.41]);
  translate([171, 212, 0])
    cube([1, 1, 1.53]);
  translate([172, 212, 0])
    cube([1, 1, 2.24]);
  translate([173, 212, 0])
    cube([1, 1, 2.63]);
  translate([174, 212, 0])
    cube([1, 1, 1.92]);
  translate([175, 212, 0])
    cube([1, 1, 1.96]);
  translate([176, 212, 0])
    cube([1, 1, 1.96]);
  translate([177, 212, 0])
    cube([1, 1, 1.92]);
  translate([178, 212, 0])
    cube([1, 1, 1.92]);
  translate([179, 212, 0])
    cube([1, 1, 2.00]);
  translate([180, 212, 0])
    cube([1, 1, 2.00]);
  translate([181, 212, 0])
    cube([1, 1, 2.00]);
  translate([182, 212, 0])
    cube([1, 1, 2.00]);
  translate([183, 212, 0])
    cube([1, 1, 2.00]);
  translate([184, 212, 0])
    cube([1, 1, 2.00]);
  translate([185, 212, 0])
    cube([1, 1, 2.00]);
  translate([186, 212, 0])
    cube([1, 1, 2.00]);
  translate([187, 212, 0])
    cube([1, 1, 2.00]);
  translate([188, 212, 0])
    cube([1, 1, 1.96]);
  translate([189, 212, 0])
    cube([1, 1, 2.04]);
  translate([190, 212, 0])
    cube([1, 1, 2.04]);
  translate([191, 212, 0])
    cube([1, 1, 2.04]);
  translate([192, 212, 0])
    cube([1, 1, 2.00]);
  translate([193, 212, 0])
    cube([1, 1, 2.00]);
  translate([194, 212, 0])
    cube([1, 1, 2.04]);
  translate([195, 212, 0])
    cube([1, 1, 2.00]);
  translate([196, 212, 0])
    cube([1, 1, 2.00]);
  translate([197, 212, 0])
    cube([1, 1, 2.04]);
  translate([198, 212, 0])
    cube([1, 1, 2.00]);
  translate([199, 212, 0])
    cube([1, 1, 2.04]);
  translate([200, 212, 0])
    cube([1, 1, 2.04]);
  translate([201, 212, 0])
    cube([1, 1, 2.04]);
  translate([202, 212, 0])
    cube([1, 1, 2.04]);
  translate([203, 212, 0])
    cube([1, 1, 2.04]);
  translate([204, 212, 0])
    cube([1, 1, 2.04]);
  translate([205, 212, 0])
    cube([1, 1, 2.04]);
  translate([206, 212, 0])
    cube([1, 1, 2.04]);
  translate([207, 212, 0])
    cube([1, 1, 2.04]);
  translate([208, 212, 0])
    cube([1, 1, 2.04]);
  translate([209, 212, 0])
    cube([1, 1, 2.00]);
  translate([210, 212, 0])
    cube([1, 1, 2.00]);
  translate([211, 212, 0])
    cube([1, 1, 2.00]);
  translate([212, 212, 0])
    cube([1, 1, 2.04]);
  translate([213, 212, 0])
    cube([1, 1, 2.04]);
  translate([214, 212, 0])
    cube([1, 1, 2.00]);
  translate([215, 212, 0])
    cube([1, 1, 2.04]);
  translate([216, 212, 0])
    cube([1, 1, 2.04]);
  translate([217, 212, 0])
    cube([1, 1, 2.00]);
  translate([218, 212, 0])
    cube([1, 1, 2.04]);
  translate([219, 212, 0])
    cube([1, 1, 2.04]);
  translate([220, 212, 0])
    cube([1, 1, 2.00]);
  translate([221, 212, 0])
    cube([1, 1, 2.04]);
  translate([222, 212, 0])
    cube([1, 1, 2.00]);
  translate([223, 212, 0])
    cube([1, 1, 2.00]);
  translate([224, 212, 0])
    cube([1, 1, 2.00]);
  translate([225, 212, 0])
    cube([1, 1, 1.92]);
  translate([226, 212, 0])
    cube([1, 1, 2.04]);
  translate([227, 212, 0])
    cube([1, 1, 2.04]);
  translate([228, 212, 0])
    cube([1, 1, 2.00]);
  translate([229, 212, 0])
    cube([1, 1, 1.88]);
  translate([230, 212, 0])
    cube([1, 1, 1.14]);
  translate([231, 212, 0])
    cube([1, 1, 1.92]);
  translate([232, 212, 0])
    cube([1, 1, 1.33]);
  translate([233, 212, 0])
    cube([1, 1, 0.47]);
  translate([234, 212, 0])
    cube([1, 1, 1.61]);
  translate([235, 212, 0])
    cube([1, 1, 1.25]);
  translate([236, 212, 0])
    cube([1, 1, 0.35]);
  translate([237, 212, 0])
    cube([1, 1, 0.39]);
  translate([238, 212, 0])
    cube([1, 1, 0.86]);
  translate([239, 212, 0])
    cube([1, 1, 1.92]);
  translate([240, 212, 0])
    cube([1, 1, 2.00]);
  translate([241, 212, 0])
    cube([1, 1, 2.00]);
  translate([242, 212, 0])
    cube([1, 1, 2.00]);
  translate([243, 212, 0])
    cube([1, 1, 2.00]);
  translate([244, 212, 0])
    cube([1, 1, 1.96]);
  translate([245, 212, 0])
    cube([1, 1, 1.96]);
  translate([246, 212, 0])
    cube([1, 1, 1.96]);
  translate([0, 213, 0])
    cube([1, 1, 2.16]);
  translate([1, 213, 0])
    cube([1, 1, 2.16]);
  translate([2, 213, 0])
    cube([1, 1, 2.16]);
  translate([3, 213, 0])
    cube([1, 1, 2.16]);
  translate([4, 213, 0])
    cube([1, 1, 2.16]);
  translate([5, 213, 0])
    cube([1, 1, 2.16]);
  translate([6, 213, 0])
    cube([1, 1, 2.16]);
  translate([7, 213, 0])
    cube([1, 1, 2.16]);
  translate([8, 213, 0])
    cube([1, 1, 2.16]);
  translate([9, 213, 0])
    cube([1, 1, 2.16]);
  translate([10, 213, 0])
    cube([1, 1, 2.16]);
  translate([11, 213, 0])
    cube([1, 1, 2.16]);
  translate([12, 213, 0])
    cube([1, 1, 2.16]);
  translate([13, 213, 0])
    cube([1, 1, 2.16]);
  translate([14, 213, 0])
    cube([1, 1, 2.16]);
  translate([15, 213, 0])
    cube([1, 1, 2.16]);
  translate([16, 213, 0])
    cube([1, 1, 2.16]);
  translate([17, 213, 0])
    cube([1, 1, 2.16]);
  translate([18, 213, 0])
    cube([1, 1, 2.16]);
  translate([19, 213, 0])
    cube([1, 1, 2.16]);
  translate([20, 213, 0])
    cube([1, 1, 2.16]);
  translate([21, 213, 0])
    cube([1, 1, 2.16]);
  translate([22, 213, 0])
    cube([1, 1, 2.16]);
  translate([23, 213, 0])
    cube([1, 1, 2.16]);
  translate([24, 213, 0])
    cube([1, 1, 2.16]);
  translate([25, 213, 0])
    cube([1, 1, 2.16]);
  translate([26, 213, 0])
    cube([1, 1, 2.16]);
  translate([27, 213, 0])
    cube([1, 1, 2.16]);
  translate([28, 213, 0])
    cube([1, 1, 2.16]);
  translate([29, 213, 0])
    cube([1, 1, 2.16]);
  translate([30, 213, 0])
    cube([1, 1, 2.16]);
  translate([31, 213, 0])
    cube([1, 1, 2.16]);
  translate([32, 213, 0])
    cube([1, 1, 2.16]);
  translate([33, 213, 0])
    cube([1, 1, 2.16]);
  translate([34, 213, 0])
    cube([1, 1, 2.16]);
  translate([35, 213, 0])
    cube([1, 1, 2.12]);
  translate([36, 213, 0])
    cube([1, 1, 2.16]);
  translate([37, 213, 0])
    cube([1, 1, 2.16]);
  translate([38, 213, 0])
    cube([1, 1, 2.16]);
  translate([39, 213, 0])
    cube([1, 1, 2.16]);
  translate([40, 213, 0])
    cube([1, 1, 2.16]);
  translate([41, 213, 0])
    cube([1, 1, 2.16]);
  translate([42, 213, 0])
    cube([1, 1, 2.16]);
  translate([43, 213, 0])
    cube([1, 1, 2.16]);
  translate([44, 213, 0])
    cube([1, 1, 2.08]);
  translate([45, 213, 0])
    cube([1, 1, 2.12]);
  translate([46, 213, 0])
    cube([1, 1, 2.12]);
  translate([47, 213, 0])
    cube([1, 1, 2.12]);
  translate([48, 213, 0])
    cube([1, 1, 2.16]);
  translate([49, 213, 0])
    cube([1, 1, 2.16]);
  translate([50, 213, 0])
    cube([1, 1, 2.16]);
  translate([51, 213, 0])
    cube([1, 1, 2.20]);
  translate([52, 213, 0])
    cube([1, 1, 8.59]);
  translate([53, 213, 0])
    cube([1, 1, 9.18]);
  translate([54, 213, 0])
    cube([1, 1, 7.84]);
  translate([55, 213, 0])
    cube([1, 1, 1.06]);
  translate([56, 213, 0])
    cube([1, 1, 1.10]);
  translate([57, 213, 0])
    cube([1, 1, 1.18]);
  translate([58, 213, 0])
    cube([1, 1, 1.29]);
  translate([59, 213, 0])
    cube([1, 1, 1.84]);
  translate([60, 213, 0])
    cube([1, 1, 4.27]);
  translate([61, 213, 0])
    cube([1, 1, 4.98]);
  translate([62, 213, 0])
    cube([1, 1, 3.14]);
  translate([63, 213, 0])
    cube([1, 1, 0.86]);
  translate([64, 213, 0])
    cube([1, 1, 1.76]);
  translate([65, 213, 0])
    cube([1, 1, 1.73]);
  translate([66, 213, 0])
    cube([1, 1, 1.61]);
  translate([67, 213, 0])
    cube([1, 1, 5.14]);
  translate([68, 213, 0])
    cube([1, 1, 0.59]);
  translate([69, 213, 0])
    cube([1, 1, 5.29]);
  translate([70, 213, 0])
    cube([1, 1, 2.86]);
  translate([71, 213, 0])
    cube([1, 1, 3.14]);
  translate([72, 213, 0])
    cube([1, 1, 3.14]);
  translate([73, 213, 0])
    cube([1, 1, 3.33]);
  translate([74, 213, 0])
    cube([1, 1, 3.57]);
  translate([75, 213, 0])
    cube([1, 1, 3.69]);
  translate([76, 213, 0])
    cube([1, 1, 3.84]);
  translate([77, 213, 0])
    cube([1, 1, 3.88]);
  translate([78, 213, 0])
    cube([1, 1, 3.92]);
  translate([79, 213, 0])
    cube([1, 1, 4.00]);
  translate([80, 213, 0])
    cube([1, 1, 4.16]);
  translate([81, 213, 0])
    cube([1, 1, 4.20]);
  translate([82, 213, 0])
    cube([1, 1, 4.31]);
  translate([83, 213, 0])
    cube([1, 1, 4.35]);
  translate([84, 213, 0])
    cube([1, 1, 4.51]);
  translate([85, 213, 0])
    cube([1, 1, 4.63]);
  translate([86, 213, 0])
    cube([1, 1, 4.67]);
  translate([87, 213, 0])
    cube([1, 1, 4.78]);
  translate([88, 213, 0])
    cube([1, 1, 4.94]);
  translate([89, 213, 0])
    cube([1, 1, 4.98]);
  translate([90, 213, 0])
    cube([1, 1, 5.14]);
  translate([91, 213, 0])
    cube([1, 1, 5.29]);
  translate([92, 213, 0])
    cube([1, 1, 4.78]);
  translate([93, 213, 0])
    cube([1, 1, 1.65]);
  translate([94, 213, 0])
    cube([1, 1, 2.27]);
  translate([95, 213, 0])
    cube([1, 1, 2.86]);
  translate([96, 213, 0])
    cube([1, 1, 2.43]);
  translate([97, 213, 0])
    cube([1, 1, 2.55]);
  translate([98, 213, 0])
    cube([1, 1, 2.67]);
  translate([99, 213, 0])
    cube([1, 1, 2.59]);
  translate([100, 213, 0])
    cube([1, 1, 2.82]);
  translate([101, 213, 0])
    cube([1, 1, 2.47]);
  translate([102, 213, 0])
    cube([1, 1, 2.27]);
  translate([103, 213, 0])
    cube([1, 1, 2.20]);
  translate([104, 213, 0])
    cube([1, 1, 2.86]);
  translate([105, 213, 0])
    cube([1, 1, 2.20]);
  translate([106, 213, 0])
    cube([1, 1, 2.59]);
  translate([107, 213, 0])
    cube([1, 1, 1.29]);
  translate([108, 213, 0])
    cube([1, 1, 2.04]);
  translate([109, 213, 0])
    cube([1, 1, 2.39]);
  translate([110, 213, 0])
    cube([1, 1, 1.37]);
  translate([111, 213, 0])
    cube([1, 1, 2.20]);
  translate([112, 213, 0])
    cube([1, 1, 2.08]);
  translate([113, 213, 0])
    cube([1, 1, 2.04]);
  translate([114, 213, 0])
    cube([1, 1, 1.65]);
  translate([115, 213, 0])
    cube([1, 1, 1.33]);
  translate([116, 213, 0])
    cube([1, 1, 1.80]);
  translate([117, 213, 0])
    cube([1, 1, 2.04]);
  translate([118, 213, 0])
    cube([1, 1, 1.88]);
  translate([119, 213, 0])
    cube([1, 1, 1.65]);
  translate([120, 213, 0])
    cube([1, 1, 2.39]);
  translate([121, 213, 0])
    cube([1, 1, 1.57]);
  translate([122, 213, 0])
    cube([1, 1, 0.94]);
  translate([123, 213, 0])
    cube([1, 1, 1.49]);
  translate([124, 213, 0])
    cube([1, 1, 1.45]);
  translate([125, 213, 0])
    cube([1, 1, 1.57]);
  translate([126, 213, 0])
    cube([1, 1, 2.04]);
  translate([127, 213, 0])
    cube([1, 1, 2.16]);
  translate([128, 213, 0])
    cube([1, 1, 1.33]);
  translate([129, 213, 0])
    cube([1, 1, 1.22]);
  translate([130, 213, 0])
    cube([1, 1, 1.76]);
  translate([131, 213, 0])
    cube([1, 1, 1.45]);
  translate([132, 213, 0])
    cube([1, 1, 2.27]);
  translate([133, 213, 0])
    cube([1, 1, 2.51]);
  translate([134, 213, 0])
    cube([1, 1, 1.88]);
  translate([135, 213, 0])
    cube([1, 1, 2.16]);
  translate([136, 213, 0])
    cube([1, 1, 2.20]);
  translate([137, 213, 0])
    cube([1, 1, 2.39]);
  translate([138, 213, 0])
    cube([1, 1, 3.22]);
  translate([139, 213, 0])
    cube([1, 1, 4.94]);
  translate([140, 213, 0])
    cube([1, 1, 4.67]);
  translate([141, 213, 0])
    cube([1, 1, 4.67]);
  translate([142, 213, 0])
    cube([1, 1, 4.59]);
  translate([143, 213, 0])
    cube([1, 1, 4.63]);
  translate([144, 213, 0])
    cube([1, 1, 4.75]);
  translate([145, 213, 0])
    cube([1, 1, 4.75]);
  translate([146, 213, 0])
    cube([1, 1, 4.90]);
  translate([147, 213, 0])
    cube([1, 1, 4.94]);
  translate([148, 213, 0])
    cube([1, 1, 5.02]);
  translate([149, 213, 0])
    cube([1, 1, 5.06]);
  translate([150, 213, 0])
    cube([1, 1, 5.06]);
  translate([151, 213, 0])
    cube([1, 1, 4.98]);
  translate([152, 213, 0])
    cube([1, 1, 4.90]);
  translate([153, 213, 0])
    cube([1, 1, 4.90]);
  translate([154, 213, 0])
    cube([1, 1, 5.02]);
  translate([155, 213, 0])
    cube([1, 1, 4.98]);
  translate([156, 213, 0])
    cube([1, 1, 5.10]);
  translate([157, 213, 0])
    cube([1, 1, 5.02]);
  translate([158, 213, 0])
    cube([1, 1, 4.94]);
  translate([159, 213, 0])
    cube([1, 1, 4.82]);
  translate([160, 213, 0])
    cube([1, 1, 4.71]);
  translate([161, 213, 0])
    cube([1, 1, 3.53]);
  translate([162, 213, 0])
    cube([1, 1, 0.63]);
  translate([163, 213, 0])
    cube([1, 1, 0.94]);
  translate([164, 213, 0])
    cube([1, 1, 1.10]);
  translate([165, 213, 0])
    cube([1, 1, 1.33]);
  translate([166, 213, 0])
    cube([1, 1, 1.22]);
  translate([167, 213, 0])
    cube([1, 1, 1.45]);
  translate([168, 213, 0])
    cube([1, 1, 2.82]);
  translate([169, 213, 0])
    cube([1, 1, 4.12]);
  translate([170, 213, 0])
    cube([1, 1, 2.00]);
  translate([171, 213, 0])
    cube([1, 1, 1.41]);
  translate([172, 213, 0])
    cube([1, 1, 1.96]);
  translate([173, 213, 0])
    cube([1, 1, 7.37]);
  translate([174, 213, 0])
    cube([1, 1, 3.06]);
  translate([175, 213, 0])
    cube([1, 1, 2.00]);
  translate([176, 213, 0])
    cube([1, 1, 2.00]);
  translate([177, 213, 0])
    cube([1, 1, 1.96]);
  translate([178, 213, 0])
    cube([1, 1, 1.96]);
  translate([179, 213, 0])
    cube([1, 1, 1.96]);
  translate([180, 213, 0])
    cube([1, 1, 2.00]);
  translate([181, 213, 0])
    cube([1, 1, 2.00]);
  translate([182, 213, 0])
    cube([1, 1, 2.00]);
  translate([183, 213, 0])
    cube([1, 1, 2.00]);
  translate([184, 213, 0])
    cube([1, 1, 2.00]);
  translate([185, 213, 0])
    cube([1, 1, 2.00]);
  translate([186, 213, 0])
    cube([1, 1, 2.00]);
  translate([187, 213, 0])
    cube([1, 1, 2.00]);
  translate([188, 213, 0])
    cube([1, 1, 2.00]);
  translate([189, 213, 0])
    cube([1, 1, 2.04]);
  translate([190, 213, 0])
    cube([1, 1, 2.04]);
  translate([191, 213, 0])
    cube([1, 1, 2.04]);
  translate([192, 213, 0])
    cube([1, 1, 2.00]);
  translate([193, 213, 0])
    cube([1, 1, 2.00]);
  translate([194, 213, 0])
    cube([1, 1, 2.00]);
  translate([195, 213, 0])
    cube([1, 1, 2.00]);
  translate([196, 213, 0])
    cube([1, 1, 2.00]);
  translate([197, 213, 0])
    cube([1, 1, 2.04]);
  translate([198, 213, 0])
    cube([1, 1, 1.96]);
  translate([199, 213, 0])
    cube([1, 1, 2.04]);
  translate([200, 213, 0])
    cube([1, 1, 2.00]);
  translate([201, 213, 0])
    cube([1, 1, 2.00]);
  translate([202, 213, 0])
    cube([1, 1, 2.00]);
  translate([203, 213, 0])
    cube([1, 1, 2.04]);
  translate([204, 213, 0])
    cube([1, 1, 2.04]);
  translate([205, 213, 0])
    cube([1, 1, 2.04]);
  translate([206, 213, 0])
    cube([1, 1, 2.04]);
  translate([207, 213, 0])
    cube([1, 1, 2.04]);
  translate([208, 213, 0])
    cube([1, 1, 2.04]);
  translate([209, 213, 0])
    cube([1, 1, 2.04]);
  translate([210, 213, 0])
    cube([1, 1, 2.04]);
  translate([211, 213, 0])
    cube([1, 1, 2.00]);
  translate([212, 213, 0])
    cube([1, 1, 2.04]);
  translate([213, 213, 0])
    cube([1, 1, 2.04]);
  translate([214, 213, 0])
    cube([1, 1, 2.04]);
  translate([215, 213, 0])
    cube([1, 1, 2.04]);
  translate([216, 213, 0])
    cube([1, 1, 2.04]);
  translate([217, 213, 0])
    cube([1, 1, 2.00]);
  translate([218, 213, 0])
    cube([1, 1, 2.04]);
  translate([219, 213, 0])
    cube([1, 1, 2.00]);
  translate([220, 213, 0])
    cube([1, 1, 2.00]);
  translate([221, 213, 0])
    cube([1, 1, 2.00]);
  translate([222, 213, 0])
    cube([1, 1, 2.00]);
  translate([223, 213, 0])
    cube([1, 1, 2.00]);
  translate([224, 213, 0])
    cube([1, 1, 2.00]);
  translate([225, 213, 0])
    cube([1, 1, 2.00]);
  translate([226, 213, 0])
    cube([1, 1, 2.00]);
  translate([227, 213, 0])
    cube([1, 1, 2.04]);
  translate([228, 213, 0])
    cube([1, 1, 2.00]);
  translate([229, 213, 0])
    cube([1, 1, 2.00]);
  translate([230, 213, 0])
    cube([1, 1, 1.96]);
  translate([231, 213, 0])
    cube([1, 1, 2.00]);
  translate([232, 213, 0])
    cube([1, 1, 0.47]);
  translate([233, 213, 0])
    cube([1, 1, 2.27]);
  translate([234, 213, 0])
    cube([1, 1, 2.35]);
  translate([235, 213, 0])
    cube([1, 1, 0.12]);
  translate([236, 213, 0])
    cube([1, 1, 0.43]);
  translate([237, 213, 0])
    cube([1, 1, 0.94]);
  translate([238, 213, 0])
    cube([1, 1, 2.00]);
  translate([239, 213, 0])
    cube([1, 1, 2.00]);
  translate([240, 213, 0])
    cube([1, 1, 2.00]);
  translate([241, 213, 0])
    cube([1, 1, 2.00]);
  translate([242, 213, 0])
    cube([1, 1, 2.00]);
  translate([243, 213, 0])
    cube([1, 1, 2.00]);
  translate([244, 213, 0])
    cube([1, 1, 2.00]);
  translate([245, 213, 0])
    cube([1, 1, 1.96]);
  translate([246, 213, 0])
    cube([1, 1, 2.00]);
  translate([0, 214, 0])
    cube([1, 1, 2.16]);
  translate([1, 214, 0])
    cube([1, 1, 2.16]);
  translate([2, 214, 0])
    cube([1, 1, 2.16]);
  translate([3, 214, 0])
    cube([1, 1, 2.16]);
  translate([4, 214, 0])
    cube([1, 1, 2.16]);
  translate([5, 214, 0])
    cube([1, 1, 2.16]);
  translate([6, 214, 0])
    cube([1, 1, 2.16]);
  translate([7, 214, 0])
    cube([1, 1, 2.16]);
  translate([8, 214, 0])
    cube([1, 1, 2.16]);
  translate([9, 214, 0])
    cube([1, 1, 2.16]);
  translate([10, 214, 0])
    cube([1, 1, 2.16]);
  translate([11, 214, 0])
    cube([1, 1, 2.16]);
  translate([12, 214, 0])
    cube([1, 1, 2.16]);
  translate([13, 214, 0])
    cube([1, 1, 2.16]);
  translate([14, 214, 0])
    cube([1, 1, 2.16]);
  translate([15, 214, 0])
    cube([1, 1, 2.16]);
  translate([16, 214, 0])
    cube([1, 1, 2.16]);
  translate([17, 214, 0])
    cube([1, 1, 2.16]);
  translate([18, 214, 0])
    cube([1, 1, 2.16]);
  translate([19, 214, 0])
    cube([1, 1, 2.16]);
  translate([20, 214, 0])
    cube([1, 1, 2.16]);
  translate([21, 214, 0])
    cube([1, 1, 2.16]);
  translate([22, 214, 0])
    cube([1, 1, 2.16]);
  translate([23, 214, 0])
    cube([1, 1, 2.16]);
  translate([24, 214, 0])
    cube([1, 1, 2.16]);
  translate([25, 214, 0])
    cube([1, 1, 2.16]);
  translate([26, 214, 0])
    cube([1, 1, 2.16]);
  translate([27, 214, 0])
    cube([1, 1, 2.16]);
  translate([28, 214, 0])
    cube([1, 1, 2.16]);
  translate([29, 214, 0])
    cube([1, 1, 2.16]);
  translate([30, 214, 0])
    cube([1, 1, 2.16]);
  translate([31, 214, 0])
    cube([1, 1, 2.16]);
  translate([32, 214, 0])
    cube([1, 1, 2.16]);
  translate([33, 214, 0])
    cube([1, 1, 2.16]);
  translate([34, 214, 0])
    cube([1, 1, 2.16]);
  translate([35, 214, 0])
    cube([1, 1, 2.16]);
  translate([36, 214, 0])
    cube([1, 1, 2.16]);
  translate([37, 214, 0])
    cube([1, 1, 2.16]);
  translate([38, 214, 0])
    cube([1, 1, 2.16]);
  translate([39, 214, 0])
    cube([1, 1, 2.16]);
  translate([40, 214, 0])
    cube([1, 1, 2.16]);
  translate([41, 214, 0])
    cube([1, 1, 2.16]);
  translate([42, 214, 0])
    cube([1, 1, 2.16]);
  translate([43, 214, 0])
    cube([1, 1, 2.16]);
  translate([44, 214, 0])
    cube([1, 1, 2.16]);
  translate([45, 214, 0])
    cube([1, 1, 2.20]);
  translate([46, 214, 0])
    cube([1, 1, 2.16]);
  translate([47, 214, 0])
    cube([1, 1, 2.16]);
  translate([48, 214, 0])
    cube([1, 1, 2.16]);
  translate([49, 214, 0])
    cube([1, 1, 2.16]);
  translate([50, 214, 0])
    cube([1, 1, 2.16]);
  translate([51, 214, 0])
    cube([1, 1, 1.92]);
  translate([52, 214, 0])
    cube([1, 1, 9.06]);
  translate([53, 214, 0])
    cube([1, 1, 8.75]);
  translate([54, 214, 0])
    cube([1, 1, 1.10]);
  translate([55, 214, 0])
    cube([1, 1, 1.49]);
  translate([56, 214, 0])
    cube([1, 1, 1.14]);
  translate([57, 214, 0])
    cube([1, 1, 1.22]);
  translate([58, 214, 0])
    cube([1, 1, 1.33]);
  translate([59, 214, 0])
    cube([1, 1, 1.69]);
  translate([60, 214, 0])
    cube([1, 1, 3.02]);
  translate([61, 214, 0])
    cube([1, 1, 4.98]);
  translate([62, 214, 0])
    cube([1, 1, 2.71]);
  translate([63, 214, 0])
    cube([1, 1, 1.10]);
  translate([64, 214, 0])
    cube([1, 1, 1.14]);
  translate([65, 214, 0])
    cube([1, 1, 1.18]);
  translate([66, 214, 0])
    cube([1, 1, 1.73]);
  translate([67, 214, 0])
    cube([1, 1, 2.63]);
  translate([68, 214, 0])
    cube([1, 1, 0.78]);
  translate([69, 214, 0])
    cube([1, 1, 1.76]);
  translate([70, 214, 0])
    cube([1, 1, 2.82]);
  translate([71, 214, 0])
    cube([1, 1, 2.98]);
  translate([72, 214, 0])
    cube([1, 1, 3.22]);
  translate([73, 214, 0])
    cube([1, 1, 3.41]);
  translate([74, 214, 0])
    cube([1, 1, 3.53]);
  translate([75, 214, 0])
    cube([1, 1, 3.61]);
  translate([76, 214, 0])
    cube([1, 1, 3.76]);
  translate([77, 214, 0])
    cube([1, 1, 3.96]);
  translate([78, 214, 0])
    cube([1, 1, 3.92]);
  translate([79, 214, 0])
    cube([1, 1, 4.00]);
  translate([80, 214, 0])
    cube([1, 1, 4.24]);
  translate([81, 214, 0])
    cube([1, 1, 4.27]);
  translate([82, 214, 0])
    cube([1, 1, 4.24]);
  translate([83, 214, 0])
    cube([1, 1, 4.35]);
  translate([84, 214, 0])
    cube([1, 1, 4.51]);
  translate([85, 214, 0])
    cube([1, 1, 4.63]);
  translate([86, 214, 0])
    cube([1, 1, 4.67]);
  translate([87, 214, 0])
    cube([1, 1, 4.82]);
  translate([88, 214, 0])
    cube([1, 1, 4.98]);
  translate([89, 214, 0])
    cube([1, 1, 5.06]);
  translate([90, 214, 0])
    cube([1, 1, 5.18]);
  translate([91, 214, 0])
    cube([1, 1, 5.18]);
  translate([92, 214, 0])
    cube([1, 1, 5.69]);
  translate([93, 214, 0])
    cube([1, 1, 4.82]);
  translate([94, 214, 0])
    cube([1, 1, 4.71]);
  translate([95, 214, 0])
    cube([1, 1, 1.61]);
  translate([96, 214, 0])
    cube([1, 1, 2.12]);
  translate([97, 214, 0])
    cube([1, 1, 2.20]);
  translate([98, 214, 0])
    cube([1, 1, 2.67]);
  translate([99, 214, 0])
    cube([1, 1, 2.55]);
  translate([100, 214, 0])
    cube([1, 1, 2.59]);
  translate([101, 214, 0])
    cube([1, 1, 2.63]);
  translate([102, 214, 0])
    cube([1, 1, 2.35]);
  translate([103, 214, 0])
    cube([1, 1, 2.39]);
  translate([104, 214, 0])
    cube([1, 1, 2.39]);
  translate([105, 214, 0])
    cube([1, 1, 2.47]);
  translate([106, 214, 0])
    cube([1, 1, 2.08]);
  translate([107, 214, 0])
    cube([1, 1, 2.08]);
  translate([108, 214, 0])
    cube([1, 1, 2.16]);
  translate([109, 214, 0])
    cube([1, 1, 2.27]);
  translate([110, 214, 0])
    cube([1, 1, 2.04]);
  translate([111, 214, 0])
    cube([1, 1, 2.51]);
  translate([112, 214, 0])
    cube([1, 1, 1.80]);
  translate([113, 214, 0])
    cube([1, 1, 1.73]);
  translate([114, 214, 0])
    cube([1, 1, 1.57]);
  translate([115, 214, 0])
    cube([1, 1, 2.04]);
  translate([116, 214, 0])
    cube([1, 1, 2.16]);
  translate([117, 214, 0])
    cube([1, 1, 1.84]);
  translate([118, 214, 0])
    cube([1, 1, 1.22]);
  translate([119, 214, 0])
    cube([1, 1, 1.76]);
  translate([120, 214, 0])
    cube([1, 1, 1.18]);
  translate([121, 214, 0])
    cube([1, 1, 1.57]);
  translate([122, 214, 0])
    cube([1, 1, 2.27]);
  translate([123, 214, 0])
    cube([1, 1, 0.98]);
  translate([124, 214, 0])
    cube([1, 1, 1.57]);
  translate([125, 214, 0])
    cube([1, 1, 1.41]);
  translate([126, 214, 0])
    cube([1, 1, 1.22]);
  translate([127, 214, 0])
    cube([1, 1, 1.53]);
  translate([128, 214, 0])
    cube([1, 1, 2.12]);
  translate([129, 214, 0])
    cube([1, 1, 1.65]);
  translate([130, 214, 0])
    cube([1, 1, 1.76]);
  translate([131, 214, 0])
    cube([1, 1, 1.96]);
  translate([132, 214, 0])
    cube([1, 1, 1.84]);
  translate([133, 214, 0])
    cube([1, 1, 2.20]);
  translate([134, 214, 0])
    cube([1, 1, 1.92]);
  translate([135, 214, 0])
    cube([1, 1, 1.84]);
  translate([136, 214, 0])
    cube([1, 1, 2.24]);
  translate([137, 214, 0])
    cube([1, 1, 4.20]);
  translate([138, 214, 0])
    cube([1, 1, 4.47]);
  translate([139, 214, 0])
    cube([1, 1, 4.67]);
  translate([140, 214, 0])
    cube([1, 1, 4.67]);
  translate([141, 214, 0])
    cube([1, 1, 4.67]);
  translate([142, 214, 0])
    cube([1, 1, 4.55]);
  translate([143, 214, 0])
    cube([1, 1, 4.55]);
  translate([144, 214, 0])
    cube([1, 1, 4.63]);
  translate([145, 214, 0])
    cube([1, 1, 4.75]);
  translate([146, 214, 0])
    cube([1, 1, 4.94]);
  translate([147, 214, 0])
    cube([1, 1, 5.02]);
  translate([148, 214, 0])
    cube([1, 1, 5.02]);
  translate([149, 214, 0])
    cube([1, 1, 5.06]);
  translate([150, 214, 0])
    cube([1, 1, 4.98]);
  translate([151, 214, 0])
    cube([1, 1, 4.90]);
  translate([152, 214, 0])
    cube([1, 1, 4.98]);
  translate([153, 214, 0])
    cube([1, 1, 4.90]);
  translate([154, 214, 0])
    cube([1, 1, 5.02]);
  translate([155, 214, 0])
    cube([1, 1, 5.02]);
  translate([156, 214, 0])
    cube([1, 1, 5.10]);
  translate([157, 214, 0])
    cube([1, 1, 5.14]);
  translate([158, 214, 0])
    cube([1, 1, 5.10]);
  translate([159, 214, 0])
    cube([1, 1, 4.98]);
  translate([160, 214, 0])
    cube([1, 1, 4.75]);
  translate([161, 214, 0])
    cube([1, 1, 4.67]);
  translate([162, 214, 0])
    cube([1, 1, 0.12]);
  translate([163, 214, 0])
    cube([1, 1, 1.02]);
  translate([164, 214, 0])
    cube([1, 1, 1.10]);
  translate([165, 214, 0])
    cube([1, 1, 1.33]);
  translate([166, 214, 0])
    cube([1, 1, 1.18]);
  translate([167, 214, 0])
    cube([1, 1, 1.29]);
  translate([168, 214, 0])
    cube([1, 1, 1.61]);
  translate([169, 214, 0])
    cube([1, 1, 4.24]);
  translate([170, 214, 0])
    cube([1, 1, 4.43]);
  translate([171, 214, 0])
    cube([1, 1, 1.41]);
  translate([172, 214, 0])
    cube([1, 1, 1.69]);
  translate([173, 214, 0])
    cube([1, 1, 6.43]);
  translate([174, 214, 0])
    cube([1, 1, 1.41]);
  translate([175, 214, 0])
    cube([1, 1, 1.76]);
  translate([176, 214, 0])
    cube([1, 1, 2.00]);
  translate([177, 214, 0])
    cube([1, 1, 1.96]);
  translate([178, 214, 0])
    cube([1, 1, 1.96]);
  translate([179, 214, 0])
    cube([1, 1, 1.96]);
  translate([180, 214, 0])
    cube([1, 1, 2.00]);
  translate([181, 214, 0])
    cube([1, 1, 2.00]);
  translate([182, 214, 0])
    cube([1, 1, 2.00]);
  translate([183, 214, 0])
    cube([1, 1, 2.00]);
  translate([184, 214, 0])
    cube([1, 1, 2.00]);
  translate([185, 214, 0])
    cube([1, 1, 2.00]);
  translate([186, 214, 0])
    cube([1, 1, 2.00]);
  translate([187, 214, 0])
    cube([1, 1, 2.00]);
  translate([188, 214, 0])
    cube([1, 1, 2.00]);
  translate([189, 214, 0])
    cube([1, 1, 2.04]);
  translate([190, 214, 0])
    cube([1, 1, 2.04]);
  translate([191, 214, 0])
    cube([1, 1, 2.04]);
  translate([192, 214, 0])
    cube([1, 1, 2.00]);
  translate([193, 214, 0])
    cube([1, 1, 2.00]);
  translate([194, 214, 0])
    cube([1, 1, 2.00]);
  translate([195, 214, 0])
    cube([1, 1, 2.00]);
  translate([196, 214, 0])
    cube([1, 1, 2.00]);
  translate([197, 214, 0])
    cube([1, 1, 2.04]);
  translate([198, 214, 0])
    cube([1, 1, 1.96]);
  translate([199, 214, 0])
    cube([1, 1, 2.04]);
  translate([200, 214, 0])
    cube([1, 1, 2.00]);
  translate([201, 214, 0])
    cube([1, 1, 2.04]);
  translate([202, 214, 0])
    cube([1, 1, 2.04]);
  translate([203, 214, 0])
    cube([1, 1, 2.04]);
  translate([204, 214, 0])
    cube([1, 1, 2.04]);
  translate([205, 214, 0])
    cube([1, 1, 2.04]);
  translate([206, 214, 0])
    cube([1, 1, 2.04]);
  translate([207, 214, 0])
    cube([1, 1, 2.04]);
  translate([208, 214, 0])
    cube([1, 1, 2.04]);
  translate([209, 214, 0])
    cube([1, 1, 2.04]);
  translate([210, 214, 0])
    cube([1, 1, 2.04]);
  translate([211, 214, 0])
    cube([1, 1, 2.00]);
  translate([212, 214, 0])
    cube([1, 1, 2.04]);
  translate([213, 214, 0])
    cube([1, 1, 2.04]);
  translate([214, 214, 0])
    cube([1, 1, 2.04]);
  translate([215, 214, 0])
    cube([1, 1, 2.04]);
  translate([216, 214, 0])
    cube([1, 1, 2.04]);
  translate([217, 214, 0])
    cube([1, 1, 2.00]);
  translate([218, 214, 0])
    cube([1, 1, 2.04]);
  translate([219, 214, 0])
    cube([1, 1, 2.00]);
  translate([220, 214, 0])
    cube([1, 1, 2.00]);
  translate([221, 214, 0])
    cube([1, 1, 2.00]);
  translate([222, 214, 0])
    cube([1, 1, 2.00]);
  translate([223, 214, 0])
    cube([1, 1, 2.00]);
  translate([224, 214, 0])
    cube([1, 1, 2.00]);
  translate([225, 214, 0])
    cube([1, 1, 2.00]);
  translate([226, 214, 0])
    cube([1, 1, 2.00]);
  translate([227, 214, 0])
    cube([1, 1, 2.04]);
  translate([228, 214, 0])
    cube([1, 1, 2.00]);
  translate([229, 214, 0])
    cube([1, 1, 2.00]);
  translate([230, 214, 0])
    cube([1, 1, 1.96]);
  translate([231, 214, 0])
    cube([1, 1, 2.00]);
  translate([232, 214, 0])
    cube([1, 1, 2.00]);
  translate([233, 214, 0])
    cube([1, 1, 1.65]);
  translate([234, 214, 0])
    cube([1, 1, 0.27]);
  translate([235, 214, 0])
    cube([1, 1, 0.16]);
  translate([236, 214, 0])
    cube([1, 1, 1.65]);
  translate([237, 214, 0])
    cube([1, 1, 1.84]);
  translate([238, 214, 0])
    cube([1, 1, 2.00]);
  translate([239, 214, 0])
    cube([1, 1, 2.00]);
  translate([240, 214, 0])
    cube([1, 1, 1.96]);
  translate([241, 214, 0])
    cube([1, 1, 2.00]);
  translate([242, 214, 0])
    cube([1, 1, 2.00]);
  translate([243, 214, 0])
    cube([1, 1, 2.00]);
  translate([244, 214, 0])
    cube([1, 1, 2.00]);
  translate([245, 214, 0])
    cube([1, 1, 2.00]);
  translate([246, 214, 0])
    cube([1, 1, 2.00]);
  translate([0, 215, 0])
    cube([1, 1, 2.16]);
  translate([1, 215, 0])
    cube([1, 1, 2.12]);
  translate([2, 215, 0])
    cube([1, 1, 2.12]);
  translate([3, 215, 0])
    cube([1, 1, 2.16]);
  translate([4, 215, 0])
    cube([1, 1, 2.16]);
  translate([5, 215, 0])
    cube([1, 1, 2.16]);
  translate([6, 215, 0])
    cube([1, 1, 2.16]);
  translate([7, 215, 0])
    cube([1, 1, 2.16]);
  translate([8, 215, 0])
    cube([1, 1, 2.16]);
  translate([9, 215, 0])
    cube([1, 1, 2.12]);
  translate([10, 215, 0])
    cube([1, 1, 2.16]);
  translate([11, 215, 0])
    cube([1, 1, 2.16]);
  translate([12, 215, 0])
    cube([1, 1, 2.16]);
  translate([13, 215, 0])
    cube([1, 1, 2.16]);
  translate([14, 215, 0])
    cube([1, 1, 2.16]);
  translate([15, 215, 0])
    cube([1, 1, 2.16]);
  translate([16, 215, 0])
    cube([1, 1, 2.16]);
  translate([17, 215, 0])
    cube([1, 1, 2.16]);
  translate([18, 215, 0])
    cube([1, 1, 2.16]);
  translate([19, 215, 0])
    cube([1, 1, 2.16]);
  translate([20, 215, 0])
    cube([1, 1, 2.16]);
  translate([21, 215, 0])
    cube([1, 1, 2.16]);
  translate([22, 215, 0])
    cube([1, 1, 2.16]);
  translate([23, 215, 0])
    cube([1, 1, 2.16]);
  translate([24, 215, 0])
    cube([1, 1, 2.16]);
  translate([25, 215, 0])
    cube([1, 1, 2.16]);
  translate([26, 215, 0])
    cube([1, 1, 2.16]);
  translate([27, 215, 0])
    cube([1, 1, 2.12]);
  translate([28, 215, 0])
    cube([1, 1, 2.16]);
  translate([29, 215, 0])
    cube([1, 1, 2.16]);
  translate([30, 215, 0])
    cube([1, 1, 2.16]);
  translate([31, 215, 0])
    cube([1, 1, 2.16]);
  translate([32, 215, 0])
    cube([1, 1, 2.16]);
  translate([33, 215, 0])
    cube([1, 1, 2.16]);
  translate([34, 215, 0])
    cube([1, 1, 2.16]);
  translate([35, 215, 0])
    cube([1, 1, 2.16]);
  translate([36, 215, 0])
    cube([1, 1, 2.16]);
  translate([37, 215, 0])
    cube([1, 1, 2.16]);
  translate([38, 215, 0])
    cube([1, 1, 2.16]);
  translate([39, 215, 0])
    cube([1, 1, 2.16]);
  translate([40, 215, 0])
    cube([1, 1, 2.16]);
  translate([41, 215, 0])
    cube([1, 1, 2.16]);
  translate([42, 215, 0])
    cube([1, 1, 2.16]);
  translate([43, 215, 0])
    cube([1, 1, 2.16]);
  translate([44, 215, 0])
    cube([1, 1, 2.16]);
  translate([45, 215, 0])
    cube([1, 1, 2.16]);
  translate([46, 215, 0])
    cube([1, 1, 2.12]);
  translate([47, 215, 0])
    cube([1, 1, 2.12]);
  translate([48, 215, 0])
    cube([1, 1, 2.16]);
  translate([49, 215, 0])
    cube([1, 1, 2.16]);
  translate([50, 215, 0])
    cube([1, 1, 2.12]);
  translate([51, 215, 0])
    cube([1, 1, 7.37]);
  translate([52, 215, 0])
    cube([1, 1, 9.53]);
  translate([53, 215, 0])
    cube([1, 1, 3.29]);
  translate([54, 215, 0])
    cube([1, 1, 1.29]);
  translate([55, 215, 0])
    cube([1, 1, 1.96]);
  translate([56, 215, 0])
    cube([1, 1, 1.18]);
  translate([57, 215, 0])
    cube([1, 1, 1.22]);
  translate([58, 215, 0])
    cube([1, 1, 1.45]);
  translate([59, 215, 0])
    cube([1, 1, 1.88]);
  translate([60, 215, 0])
    cube([1, 1, 4.47]);
  translate([61, 215, 0])
    cube([1, 1, 4.12]);
  translate([62, 215, 0])
    cube([1, 1, 2.75]);
  translate([63, 215, 0])
    cube([1, 1, 1.37]);
  translate([64, 215, 0])
    cube([1, 1, 1.33]);
  translate([65, 215, 0])
    cube([1, 1, 1.69]);
  translate([66, 215, 0])
    cube([1, 1, 5.92]);
  translate([67, 215, 0])
    cube([1, 1, 0.71]);
  translate([68, 215, 0])
    cube([1, 1, 5.22]);
  translate([69, 215, 0])
    cube([1, 1, 2.82]);
  translate([70, 215, 0])
    cube([1, 1, 2.82]);
  translate([71, 215, 0])
    cube([1, 1, 3.02]);
  translate([72, 215, 0])
    cube([1, 1, 3.18]);
  translate([73, 215, 0])
    cube([1, 1, 3.37]);
  translate([74, 215, 0])
    cube([1, 1, 3.53]);
  translate([75, 215, 0])
    cube([1, 1, 3.65]);
  translate([76, 215, 0])
    cube([1, 1, 3.80]);
  translate([77, 215, 0])
    cube([1, 1, 3.96]);
  translate([78, 215, 0])
    cube([1, 1, 3.88]);
  translate([79, 215, 0])
    cube([1, 1, 4.12]);
  translate([80, 215, 0])
    cube([1, 1, 4.24]);
  translate([81, 215, 0])
    cube([1, 1, 4.24]);
  translate([82, 215, 0])
    cube([1, 1, 4.31]);
  translate([83, 215, 0])
    cube([1, 1, 4.31]);
  translate([84, 215, 0])
    cube([1, 1, 4.35]);
  translate([85, 215, 0])
    cube([1, 1, 4.67]);
  translate([86, 215, 0])
    cube([1, 1, 4.67]);
  translate([87, 215, 0])
    cube([1, 1, 4.90]);
  translate([88, 215, 0])
    cube([1, 1, 4.98]);
  translate([89, 215, 0])
    cube([1, 1, 5.06]);
  translate([90, 215, 0])
    cube([1, 1, 5.14]);
  translate([91, 215, 0])
    cube([1, 1, 5.25]);
  translate([92, 215, 0])
    cube([1, 1, 5.06]);
  translate([93, 215, 0])
    cube([1, 1, 5.06]);
  translate([94, 215, 0])
    cube([1, 1, 4.98]);
  translate([95, 215, 0])
    cube([1, 1, 4.94]);
  translate([96, 215, 0])
    cube([1, 1, 4.43]);
  translate([97, 215, 0])
    cube([1, 1, 2.20]);
  translate([98, 215, 0])
    cube([1, 1, 1.45]);
  translate([99, 215, 0])
    cube([1, 1, 1.96]);
  translate([100, 215, 0])
    cube([1, 1, 2.24]);
  translate([101, 215, 0])
    cube([1, 1, 2.55]);
  translate([102, 215, 0])
    cube([1, 1, 2.20]);
  translate([103, 215, 0])
    cube([1, 1, 2.31]);
  translate([104, 215, 0])
    cube([1, 1, 2.35]);
  translate([105, 215, 0])
    cube([1, 1, 2.51]);
  translate([106, 215, 0])
    cube([1, 1, 2.20]);
  translate([107, 215, 0])
    cube([1, 1, 1.96]);
  translate([108, 215, 0])
    cube([1, 1, 1.65]);
  translate([109, 215, 0])
    cube([1, 1, 1.41]);
  translate([110, 215, 0])
    cube([1, 1, 1.80]);
  translate([111, 215, 0])
    cube([1, 1, 1.61]);
  translate([112, 215, 0])
    cube([1, 1, 2.20]);
  translate([113, 215, 0])
    cube([1, 1, 1.80]);
  translate([114, 215, 0])
    cube([1, 1, 1.80]);
  translate([115, 215, 0])
    cube([1, 1, 1.92]);
  translate([116, 215, 0])
    cube([1, 1, 1.53]);
  translate([117, 215, 0])
    cube([1, 1, 1.80]);
  translate([118, 215, 0])
    cube([1, 1, 1.18]);
  translate([119, 215, 0])
    cube([1, 1, 1.76]);
  translate([120, 215, 0])
    cube([1, 1, 2.12]);
  translate([121, 215, 0])
    cube([1, 1, 1.53]);
  translate([122, 215, 0])
    cube([1, 1, 1.57]);
  translate([123, 215, 0])
    cube([1, 1, 1.45]);
  translate([124, 215, 0])
    cube([1, 1, 1.49]);
  translate([125, 215, 0])
    cube([1, 1, 2.12]);
  translate([126, 215, 0])
    cube([1, 1, 0.86]);
  translate([127, 215, 0])
    cube([1, 1, 1.41]);
  translate([128, 215, 0])
    cube([1, 1, 1.33]);
  translate([129, 215, 0])
    cube([1, 1, 1.96]);
  translate([130, 215, 0])
    cube([1, 1, 2.08]);
  translate([131, 215, 0])
    cube([1, 1, 1.92]);
  translate([132, 215, 0])
    cube([1, 1, 1.73]);
  translate([133, 215, 0])
    cube([1, 1, 2.04]);
  translate([134, 215, 0])
    cube([1, 1, 2.43]);
  translate([135, 215, 0])
    cube([1, 1, 3.22]);
  translate([136, 215, 0])
    cube([1, 1, 4.24]);
  translate([137, 215, 0])
    cube([1, 1, 4.47]);
  translate([138, 215, 0])
    cube([1, 1, 4.51]);
  translate([139, 215, 0])
    cube([1, 1, 4.59]);
  translate([140, 215, 0])
    cube([1, 1, 4.59]);
  translate([141, 215, 0])
    cube([1, 1, 4.59]);
  translate([142, 215, 0])
    cube([1, 1, 4.59]);
  translate([143, 215, 0])
    cube([1, 1, 4.63]);
  translate([144, 215, 0])
    cube([1, 1, 4.59]);
  translate([145, 215, 0])
    cube([1, 1, 4.71]);
  translate([146, 215, 0])
    cube([1, 1, 4.90]);
  translate([147, 215, 0])
    cube([1, 1, 5.02]);
  translate([148, 215, 0])
    cube([1, 1, 5.06]);
  translate([149, 215, 0])
    cube([1, 1, 5.14]);
  translate([150, 215, 0])
    cube([1, 1, 4.98]);
  translate([151, 215, 0])
    cube([1, 1, 4.98]);
  translate([152, 215, 0])
    cube([1, 1, 4.90]);
  translate([153, 215, 0])
    cube([1, 1, 4.86]);
  translate([154, 215, 0])
    cube([1, 1, 5.02]);
  translate([155, 215, 0])
    cube([1, 1, 5.14]);
  translate([156, 215, 0])
    cube([1, 1, 5.14]);
  translate([157, 215, 0])
    cube([1, 1, 5.22]);
  translate([158, 215, 0])
    cube([1, 1, 5.22]);
  translate([159, 215, 0])
    cube([1, 1, 5.10]);
  translate([160, 215, 0])
    cube([1, 1, 4.86]);
  translate([161, 215, 0])
    cube([1, 1, 5.06]);
  translate([162, 215, 0])
    cube([1, 1, 0.31]);
  translate([163, 215, 0])
    cube([1, 1, 1.02]);
  translate([164, 215, 0])
    cube([1, 1, 1.06]);
  translate([165, 215, 0])
    cube([1, 1, 1.22]);
  translate([166, 215, 0])
    cube([1, 1, 1.18]);
  translate([167, 215, 0])
    cube([1, 1, 1.18]);
  translate([168, 215, 0])
    cube([1, 1, 1.96]);
  translate([169, 215, 0])
    cube([1, 1, 3.57]);
  translate([170, 215, 0])
    cube([1, 1, 3.57]);
  translate([171, 215, 0])
    cube([1, 1, 1.41]);
  translate([172, 215, 0])
    cube([1, 1, 1.18]);
  translate([173, 215, 0])
    cube([1, 1, 4.47]);
  translate([174, 215, 0])
    cube([1, 1, 1.53]);
  translate([175, 215, 0])
    cube([1, 1, 1.92]);
  translate([176, 215, 0])
    cube([1, 1, 2.00]);
  translate([177, 215, 0])
    cube([1, 1, 2.00]);
  translate([178, 215, 0])
    cube([1, 1, 2.00]);
  translate([179, 215, 0])
    cube([1, 1, 2.00]);
  translate([180, 215, 0])
    cube([1, 1, 2.00]);
  translate([181, 215, 0])
    cube([1, 1, 2.04]);
  translate([182, 215, 0])
    cube([1, 1, 2.04]);
  translate([183, 215, 0])
    cube([1, 1, 2.00]);
  translate([184, 215, 0])
    cube([1, 1, 2.00]);
  translate([185, 215, 0])
    cube([1, 1, 1.96]);
  translate([186, 215, 0])
    cube([1, 1, 2.08]);
  translate([187, 215, 0])
    cube([1, 1, 2.00]);
  translate([188, 215, 0])
    cube([1, 1, 2.04]);
  translate([189, 215, 0])
    cube([1, 1, 2.04]);
  translate([190, 215, 0])
    cube([1, 1, 2.04]);
  translate([191, 215, 0])
    cube([1, 1, 2.04]);
  translate([192, 215, 0])
    cube([1, 1, 2.04]);
  translate([193, 215, 0])
    cube([1, 1, 2.00]);
  translate([194, 215, 0])
    cube([1, 1, 2.00]);
  translate([195, 215, 0])
    cube([1, 1, 2.00]);
  translate([196, 215, 0])
    cube([1, 1, 2.04]);
  translate([197, 215, 0])
    cube([1, 1, 2.04]);
  translate([198, 215, 0])
    cube([1, 1, 2.00]);
  translate([199, 215, 0])
    cube([1, 1, 2.04]);
  translate([200, 215, 0])
    cube([1, 1, 2.04]);
  translate([201, 215, 0])
    cube([1, 1, 2.04]);
  translate([202, 215, 0])
    cube([1, 1, 2.04]);
  translate([203, 215, 0])
    cube([1, 1, 2.04]);
  translate([204, 215, 0])
    cube([1, 1, 2.04]);
  translate([205, 215, 0])
    cube([1, 1, 2.04]);
  translate([206, 215, 0])
    cube([1, 1, 2.04]);
  translate([207, 215, 0])
    cube([1, 1, 2.04]);
  translate([208, 215, 0])
    cube([1, 1, 2.04]);
  translate([209, 215, 0])
    cube([1, 1, 2.04]);
  translate([210, 215, 0])
    cube([1, 1, 2.04]);
  translate([211, 215, 0])
    cube([1, 1, 2.04]);
  translate([212, 215, 0])
    cube([1, 1, 2.04]);
  translate([213, 215, 0])
    cube([1, 1, 2.04]);
  translate([214, 215, 0])
    cube([1, 1, 2.00]);
  translate([215, 215, 0])
    cube([1, 1, 2.04]);
  translate([216, 215, 0])
    cube([1, 1, 2.04]);
  translate([217, 215, 0])
    cube([1, 1, 2.04]);
  translate([218, 215, 0])
    cube([1, 1, 2.04]);
  translate([219, 215, 0])
    cube([1, 1, 2.00]);
  translate([220, 215, 0])
    cube([1, 1, 2.00]);
  translate([221, 215, 0])
    cube([1, 1, 2.04]);
  translate([222, 215, 0])
    cube([1, 1, 2.00]);
  translate([223, 215, 0])
    cube([1, 1, 2.00]);
  translate([224, 215, 0])
    cube([1, 1, 2.00]);
  translate([225, 215, 0])
    cube([1, 1, 2.00]);
  translate([226, 215, 0])
    cube([1, 1, 2.00]);
  translate([227, 215, 0])
    cube([1, 1, 2.04]);
  translate([228, 215, 0])
    cube([1, 1, 2.00]);
  translate([229, 215, 0])
    cube([1, 1, 2.00]);
  translate([230, 215, 0])
    cube([1, 1, 2.00]);
  translate([231, 215, 0])
    cube([1, 1, 2.00]);
  translate([232, 215, 0])
    cube([1, 1, 2.00]);
  translate([233, 215, 0])
    cube([1, 1, 1.96]);
  translate([234, 215, 0])
    cube([1, 1, 2.00]);
  translate([235, 215, 0])
    cube([1, 1, 1.92]);
  translate([236, 215, 0])
    cube([1, 1, 2.00]);
  translate([237, 215, 0])
    cube([1, 1, 2.04]);
  translate([238, 215, 0])
    cube([1, 1, 2.00]);
  translate([239, 215, 0])
    cube([1, 1, 2.00]);
  translate([240, 215, 0])
    cube([1, 1, 2.00]);
  translate([241, 215, 0])
    cube([1, 1, 2.00]);
  translate([242, 215, 0])
    cube([1, 1, 2.00]);
  translate([243, 215, 0])
    cube([1, 1, 2.00]);
  translate([244, 215, 0])
    cube([1, 1, 2.00]);
  translate([245, 215, 0])
    cube([1, 1, 2.00]);
  translate([246, 215, 0])
    cube([1, 1, 2.00]);
  translate([0, 216, 0])
    cube([1, 1, 2.20]);
  translate([1, 216, 0])
    cube([1, 1, 2.20]);
  translate([2, 216, 0])
    cube([1, 1, 2.20]);
  translate([3, 216, 0])
    cube([1, 1, 2.24]);
  translate([4, 216, 0])
    cube([1, 1, 2.20]);
  translate([5, 216, 0])
    cube([1, 1, 2.16]);
  translate([6, 216, 0])
    cube([1, 1, 2.16]);
  translate([7, 216, 0])
    cube([1, 1, 2.16]);
  translate([8, 216, 0])
    cube([1, 1, 2.16]);
  translate([9, 216, 0])
    cube([1, 1, 2.16]);
  translate([10, 216, 0])
    cube([1, 1, 2.16]);
  translate([11, 216, 0])
    cube([1, 1, 2.16]);
  translate([12, 216, 0])
    cube([1, 1, 2.16]);
  translate([13, 216, 0])
    cube([1, 1, 2.20]);
  translate([14, 216, 0])
    cube([1, 1, 2.16]);
  translate([15, 216, 0])
    cube([1, 1, 2.16]);
  translate([16, 216, 0])
    cube([1, 1, 2.16]);
  translate([17, 216, 0])
    cube([1, 1, 2.16]);
  translate([18, 216, 0])
    cube([1, 1, 2.16]);
  translate([19, 216, 0])
    cube([1, 1, 2.16]);
  translate([20, 216, 0])
    cube([1, 1, 2.16]);
  translate([21, 216, 0])
    cube([1, 1, 2.16]);
  translate([22, 216, 0])
    cube([1, 1, 2.16]);
  translate([23, 216, 0])
    cube([1, 1, 2.16]);
  translate([24, 216, 0])
    cube([1, 1, 2.16]);
  translate([25, 216, 0])
    cube([1, 1, 2.16]);
  translate([26, 216, 0])
    cube([1, 1, 2.16]);
  translate([27, 216, 0])
    cube([1, 1, 2.16]);
  translate([28, 216, 0])
    cube([1, 1, 2.16]);
  translate([29, 216, 0])
    cube([1, 1, 2.16]);
  translate([30, 216, 0])
    cube([1, 1, 2.16]);
  translate([31, 216, 0])
    cube([1, 1, 2.16]);
  translate([32, 216, 0])
    cube([1, 1, 2.16]);
  translate([33, 216, 0])
    cube([1, 1, 2.16]);
  translate([34, 216, 0])
    cube([1, 1, 2.16]);
  translate([35, 216, 0])
    cube([1, 1, 2.16]);
  translate([36, 216, 0])
    cube([1, 1, 2.16]);
  translate([37, 216, 0])
    cube([1, 1, 2.16]);
  translate([38, 216, 0])
    cube([1, 1, 2.16]);
  translate([39, 216, 0])
    cube([1, 1, 2.16]);
  translate([40, 216, 0])
    cube([1, 1, 2.16]);
  translate([41, 216, 0])
    cube([1, 1, 2.16]);
  translate([42, 216, 0])
    cube([1, 1, 2.16]);
  translate([43, 216, 0])
    cube([1, 1, 2.16]);
  translate([44, 216, 0])
    cube([1, 1, 2.16]);
  translate([45, 216, 0])
    cube([1, 1, 2.16]);
  translate([46, 216, 0])
    cube([1, 1, 2.16]);
  translate([47, 216, 0])
    cube([1, 1, 2.16]);
  translate([48, 216, 0])
    cube([1, 1, 2.16]);
  translate([49, 216, 0])
    cube([1, 1, 2.04]);
  translate([50, 216, 0])
    cube([1, 1, 2.04]);
  translate([51, 216, 0])
    cube([1, 1, 8.04]);
  translate([52, 216, 0])
    cube([1, 1, 9.29]);
  translate([53, 216, 0])
    cube([1, 1, 1.02]);
  translate([54, 216, 0])
    cube([1, 1, 8.55]);
  translate([55, 216, 0])
    cube([1, 1, 1.14]);
  translate([56, 216, 0])
    cube([1, 1, 1.22]);
  translate([57, 216, 0])
    cube([1, 1, 1.25]);
  translate([58, 216, 0])
    cube([1, 1, 1.29]);
  translate([59, 216, 0])
    cube([1, 1, 3.02]);
  translate([60, 216, 0])
    cube([1, 1, 5.29]);
  translate([61, 216, 0])
    cube([1, 1, 4.78]);
  translate([62, 216, 0])
    cube([1, 1, 1.73]);
  translate([63, 216, 0])
    cube([1, 1, 1.49]);
  translate([64, 216, 0])
    cube([1, 1, 1.33]);
  translate([65, 216, 0])
    cube([1, 1, 1.45]);
  translate([66, 216, 0])
    cube([1, 1, 2.16]);
  translate([67, 216, 0])
    cube([1, 1, 0.67]);
  translate([68, 216, 0])
    cube([1, 1, 1.49]);
  translate([69, 216, 0])
    cube([1, 1, 2.67]);
  translate([70, 216, 0])
    cube([1, 1, 2.82]);
  translate([71, 216, 0])
    cube([1, 1, 3.10]);
  translate([72, 216, 0])
    cube([1, 1, 3.29]);
  translate([73, 216, 0])
    cube([1, 1, 3.45]);
  translate([74, 216, 0])
    cube([1, 1, 3.65]);
  translate([75, 216, 0])
    cube([1, 1, 3.69]);
  translate([76, 216, 0])
    cube([1, 1, 3.73]);
  translate([77, 216, 0])
    cube([1, 1, 3.92]);
  translate([78, 216, 0])
    cube([1, 1, 3.96]);
  translate([79, 216, 0])
    cube([1, 1, 4.24]);
  translate([80, 216, 0])
    cube([1, 1, 4.27]);
  translate([81, 216, 0])
    cube([1, 1, 4.27]);
  translate([82, 216, 0])
    cube([1, 1, 4.35]);
  translate([83, 216, 0])
    cube([1, 1, 4.39]);
  translate([84, 216, 0])
    cube([1, 1, 4.51]);
  translate([85, 216, 0])
    cube([1, 1, 4.63]);
  translate([86, 216, 0])
    cube([1, 1, 4.63]);
  translate([87, 216, 0])
    cube([1, 1, 4.82]);
  translate([88, 216, 0])
    cube([1, 1, 5.06]);
  translate([89, 216, 0])
    cube([1, 1, 4.98]);
  translate([90, 216, 0])
    cube([1, 1, 5.10]);
  translate([91, 216, 0])
    cube([1, 1, 5.14]);
  translate([92, 216, 0])
    cube([1, 1, 5.06]);
  translate([93, 216, 0])
    cube([1, 1, 4.98]);
  translate([94, 216, 0])
    cube([1, 1, 5.06]);
  translate([95, 216, 0])
    cube([1, 1, 5.02]);
  translate([96, 216, 0])
    cube([1, 1, 4.82]);
  translate([97, 216, 0])
    cube([1, 1, 4.94]);
  translate([98, 216, 0])
    cube([1, 1, 5.02]);
  translate([99, 216, 0])
    cube([1, 1, 4.16]);
  translate([100, 216, 0])
    cube([1, 1, 1.49]);
  translate([101, 216, 0])
    cube([1, 1, 1.69]);
  translate([102, 216, 0])
    cube([1, 1, 2.43]);
  translate([103, 216, 0])
    cube([1, 1, 2.00]);
  translate([104, 216, 0])
    cube([1, 1, 2.24]);
  translate([105, 216, 0])
    cube([1, 1, 2.24]);
  translate([106, 216, 0])
    cube([1, 1, 2.12]);
  translate([107, 216, 0])
    cube([1, 1, 2.08]);
  translate([108, 216, 0])
    cube([1, 1, 1.84]);
  translate([109, 216, 0])
    cube([1, 1, 2.00]);
  translate([110, 216, 0])
    cube([1, 1, 1.76]);
  translate([111, 216, 0])
    cube([1, 1, 1.76]);
  translate([112, 216, 0])
    cube([1, 1, 1.92]);
  translate([113, 216, 0])
    cube([1, 1, 1.73]);
  translate([114, 216, 0])
    cube([1, 1, 1.65]);
  translate([115, 216, 0])
    cube([1, 1, 1.61]);
  translate([116, 216, 0])
    cube([1, 1, 1.80]);
  translate([117, 216, 0])
    cube([1, 1, 1.18]);
  translate([118, 216, 0])
    cube([1, 1, 1.65]);
  translate([119, 216, 0])
    cube([1, 1, 1.53]);
  translate([120, 216, 0])
    cube([1, 1, 1.45]);
  translate([121, 216, 0])
    cube([1, 1, 1.41]);
  translate([122, 216, 0])
    cube([1, 1, 1.33]);
  translate([123, 216, 0])
    cube([1, 1, 1.53]);
  translate([124, 216, 0])
    cube([1, 1, 1.41]);
  translate([125, 216, 0])
    cube([1, 1, 1.37]);
  translate([126, 216, 0])
    cube([1, 1, 1.25]);
  translate([127, 216, 0])
    cube([1, 1, 1.29]);
  translate([128, 216, 0])
    cube([1, 1, 1.61]);
  translate([129, 216, 0])
    cube([1, 1, 2.08]);
  translate([130, 216, 0])
    cube([1, 1, 2.00]);
  translate([131, 216, 0])
    cube([1, 1, 2.00]);
  translate([132, 216, 0])
    cube([1, 1, 2.12]);
  translate([133, 216, 0])
    cube([1, 1, 2.08]);
  translate([134, 216, 0])
    cube([1, 1, 4.20]);
  translate([135, 216, 0])
    cube([1, 1, 4.20]);
  translate([136, 216, 0])
    cube([1, 1, 4.39]);
  translate([137, 216, 0])
    cube([1, 1, 4.43]);
  translate([138, 216, 0])
    cube([1, 1, 4.55]);
  translate([139, 216, 0])
    cube([1, 1, 4.51]);
  translate([140, 216, 0])
    cube([1, 1, 4.47]);
  translate([141, 216, 0])
    cube([1, 1, 4.51]);
  translate([142, 216, 0])
    cube([1, 1, 4.47]);
  translate([143, 216, 0])
    cube([1, 1, 4.63]);
  translate([144, 216, 0])
    cube([1, 1, 4.71]);
  translate([145, 216, 0])
    cube([1, 1, 4.78]);
  translate([146, 216, 0])
    cube([1, 1, 4.90]);
  translate([147, 216, 0])
    cube([1, 1, 5.02]);
  translate([148, 216, 0])
    cube([1, 1, 5.10]);
  translate([149, 216, 0])
    cube([1, 1, 5.18]);
  translate([150, 216, 0])
    cube([1, 1, 5.06]);
  translate([151, 216, 0])
    cube([1, 1, 4.94]);
  translate([152, 216, 0])
    cube([1, 1, 4.90]);
  translate([153, 216, 0])
    cube([1, 1, 4.82]);
  translate([154, 216, 0])
    cube([1, 1, 4.98]);
  translate([155, 216, 0])
    cube([1, 1, 5.14]);
  translate([156, 216, 0])
    cube([1, 1, 5.25]);
  translate([157, 216, 0])
    cube([1, 1, 5.37]);
  translate([158, 216, 0])
    cube([1, 1, 5.33]);
  translate([159, 216, 0])
    cube([1, 1, 5.18]);
  translate([160, 216, 0])
    cube([1, 1, 4.94]);
  translate([161, 216, 0])
    cube([1, 1, 4.71]);
  translate([162, 216, 0])
    cube([1, 1, 4.51]);
  translate([163, 216, 0])
    cube([1, 1, 0.71]);
  translate([164, 216, 0])
    cube([1, 1, 1.02]);
  translate([165, 216, 0])
    cube([1, 1, 1.22]);
  translate([166, 216, 0])
    cube([1, 1, 1.18]);
  translate([167, 216, 0])
    cube([1, 1, 1.22]);
  translate([168, 216, 0])
    cube([1, 1, 1.49]);
  translate([169, 216, 0])
    cube([1, 1, 4.24]);
  translate([170, 216, 0])
    cube([1, 1, 2.86]);
  translate([171, 216, 0])
    cube([1, 1, 1.33]);
  translate([172, 216, 0])
    cube([1, 1, 1.29]);
  translate([173, 216, 0])
    cube([1, 1, 2.82]);
  translate([174, 216, 0])
    cube([1, 1, 3.65]);
  translate([175, 216, 0])
    cube([1, 1, 1.92]);
  translate([176, 216, 0])
    cube([1, 1, 1.96]);
  translate([177, 216, 0])
    cube([1, 1, 2.00]);
  translate([178, 216, 0])
    cube([1, 1, 2.08]);
  translate([179, 216, 0])
    cube([1, 1, 2.00]);
  translate([180, 216, 0])
    cube([1, 1, 2.00]);
  translate([181, 216, 0])
    cube([1, 1, 2.00]);
  translate([182, 216, 0])
    cube([1, 1, 2.04]);
  translate([183, 216, 0])
    cube([1, 1, 2.04]);
  translate([184, 216, 0])
    cube([1, 1, 2.04]);
  translate([185, 216, 0])
    cube([1, 1, 2.04]);
  translate([186, 216, 0])
    cube([1, 1, 2.04]);
  translate([187, 216, 0])
    cube([1, 1, 2.04]);
  translate([188, 216, 0])
    cube([1, 1, 2.04]);
  translate([189, 216, 0])
    cube([1, 1, 2.04]);
  translate([190, 216, 0])
    cube([1, 1, 2.04]);
  translate([191, 216, 0])
    cube([1, 1, 2.04]);
  translate([192, 216, 0])
    cube([1, 1, 2.04]);
  translate([193, 216, 0])
    cube([1, 1, 2.04]);
  translate([194, 216, 0])
    cube([1, 1, 2.04]);
  translate([195, 216, 0])
    cube([1, 1, 2.04]);
  translate([196, 216, 0])
    cube([1, 1, 2.04]);
  translate([197, 216, 0])
    cube([1, 1, 2.04]);
  translate([198, 216, 0])
    cube([1, 1, 2.04]);
  translate([199, 216, 0])
    cube([1, 1, 2.04]);
  translate([200, 216, 0])
    cube([1, 1, 2.04]);
  translate([201, 216, 0])
    cube([1, 1, 2.04]);
  translate([202, 216, 0])
    cube([1, 1, 2.04]);
  translate([203, 216, 0])
    cube([1, 1, 2.04]);
  translate([204, 216, 0])
    cube([1, 1, 2.04]);
  translate([205, 216, 0])
    cube([1, 1, 2.04]);
  translate([206, 216, 0])
    cube([1, 1, 2.04]);
  translate([207, 216, 0])
    cube([1, 1, 2.04]);
  translate([208, 216, 0])
    cube([1, 1, 2.04]);
  translate([209, 216, 0])
    cube([1, 1, 2.04]);
  translate([210, 216, 0])
    cube([1, 1, 2.04]);
  translate([211, 216, 0])
    cube([1, 1, 2.00]);
  translate([212, 216, 0])
    cube([1, 1, 2.04]);
  translate([213, 216, 0])
    cube([1, 1, 2.04]);
  translate([214, 216, 0])
    cube([1, 1, 2.04]);
  translate([215, 216, 0])
    cube([1, 1, 2.04]);
  translate([216, 216, 0])
    cube([1, 1, 2.04]);
  translate([217, 216, 0])
    cube([1, 1, 2.00]);
  translate([218, 216, 0])
    cube([1, 1, 2.00]);
  translate([219, 216, 0])
    cube([1, 1, 2.04]);
  translate([220, 216, 0])
    cube([1, 1, 2.04]);
  translate([221, 216, 0])
    cube([1, 1, 2.04]);
  translate([222, 216, 0])
    cube([1, 1, 2.00]);
  translate([223, 216, 0])
    cube([1, 1, 2.04]);
  translate([224, 216, 0])
    cube([1, 1, 2.00]);
  translate([225, 216, 0])
    cube([1, 1, 2.00]);
  translate([226, 216, 0])
    cube([1, 1, 2.00]);
  translate([227, 216, 0])
    cube([1, 1, 2.00]);
  translate([228, 216, 0])
    cube([1, 1, 2.00]);
  translate([229, 216, 0])
    cube([1, 1, 2.00]);
  translate([230, 216, 0])
    cube([1, 1, 2.00]);
  translate([231, 216, 0])
    cube([1, 1, 2.00]);
  translate([232, 216, 0])
    cube([1, 1, 2.04]);
  translate([233, 216, 0])
    cube([1, 1, 2.04]);
  translate([234, 216, 0])
    cube([1, 1, 2.04]);
  translate([235, 216, 0])
    cube([1, 1, 1.96]);
  translate([236, 216, 0])
    cube([1, 1, 2.00]);
  translate([237, 216, 0])
    cube([1, 1, 2.00]);
  translate([238, 216, 0])
    cube([1, 1, 2.00]);
  translate([239, 216, 0])
    cube([1, 1, 2.00]);
  translate([240, 216, 0])
    cube([1, 1, 2.00]);
  translate([241, 216, 0])
    cube([1, 1, 2.00]);
  translate([242, 216, 0])
    cube([1, 1, 2.00]);
  translate([243, 216, 0])
    cube([1, 1, 2.00]);
  translate([244, 216, 0])
    cube([1, 1, 1.96]);
  translate([245, 216, 0])
    cube([1, 1, 2.00]);
  translate([246, 216, 0])
    cube([1, 1, 1.96]);
  translate([0, 217, 0])
    cube([1, 1, 2.20]);
  translate([1, 217, 0])
    cube([1, 1, 2.20]);
  translate([2, 217, 0])
    cube([1, 1, 2.20]);
  translate([3, 217, 0])
    cube([1, 1, 2.24]);
  translate([4, 217, 0])
    cube([1, 1, 2.20]);
  translate([5, 217, 0])
    cube([1, 1, 2.16]);
  translate([6, 217, 0])
    cube([1, 1, 2.16]);
  translate([7, 217, 0])
    cube([1, 1, 2.16]);
  translate([8, 217, 0])
    cube([1, 1, 2.16]);
  translate([9, 217, 0])
    cube([1, 1, 2.16]);
  translate([10, 217, 0])
    cube([1, 1, 2.16]);
  translate([11, 217, 0])
    cube([1, 1, 2.16]);
  translate([12, 217, 0])
    cube([1, 1, 2.16]);
  translate([13, 217, 0])
    cube([1, 1, 2.20]);
  translate([14, 217, 0])
    cube([1, 1, 2.16]);
  translate([15, 217, 0])
    cube([1, 1, 2.16]);
  translate([16, 217, 0])
    cube([1, 1, 2.16]);
  translate([17, 217, 0])
    cube([1, 1, 2.16]);
  translate([18, 217, 0])
    cube([1, 1, 2.16]);
  translate([19, 217, 0])
    cube([1, 1, 2.16]);
  translate([20, 217, 0])
    cube([1, 1, 2.16]);
  translate([21, 217, 0])
    cube([1, 1, 2.16]);
  translate([22, 217, 0])
    cube([1, 1, 2.16]);
  translate([23, 217, 0])
    cube([1, 1, 2.16]);
  translate([24, 217, 0])
    cube([1, 1, 2.16]);
  translate([25, 217, 0])
    cube([1, 1, 2.16]);
  translate([26, 217, 0])
    cube([1, 1, 2.16]);
  translate([27, 217, 0])
    cube([1, 1, 2.16]);
  translate([28, 217, 0])
    cube([1, 1, 2.16]);
  translate([29, 217, 0])
    cube([1, 1, 2.16]);
  translate([30, 217, 0])
    cube([1, 1, 2.16]);
  translate([31, 217, 0])
    cube([1, 1, 2.16]);
  translate([32, 217, 0])
    cube([1, 1, 2.16]);
  translate([33, 217, 0])
    cube([1, 1, 2.16]);
  translate([34, 217, 0])
    cube([1, 1, 2.16]);
  translate([35, 217, 0])
    cube([1, 1, 2.16]);
  translate([36, 217, 0])
    cube([1, 1, 2.16]);
  translate([37, 217, 0])
    cube([1, 1, 2.16]);
  translate([38, 217, 0])
    cube([1, 1, 2.16]);
  translate([39, 217, 0])
    cube([1, 1, 2.16]);
  translate([40, 217, 0])
    cube([1, 1, 2.16]);
  translate([41, 217, 0])
    cube([1, 1, 2.16]);
  translate([42, 217, 0])
    cube([1, 1, 2.16]);
  translate([43, 217, 0])
    cube([1, 1, 2.16]);
  translate([44, 217, 0])
    cube([1, 1, 2.16]);
  translate([45, 217, 0])
    cube([1, 1, 2.16]);
  translate([46, 217, 0])
    cube([1, 1, 2.16]);
  translate([47, 217, 0])
    cube([1, 1, 2.16]);
  translate([48, 217, 0])
    cube([1, 1, 2.16]);
  translate([49, 217, 0])
    cube([1, 1, 1.65]);
  translate([50, 217, 0])
    cube([1, 1, 3.06]);
  translate([51, 217, 0])
    cube([1, 1, 8.47]);
  translate([52, 217, 0])
    cube([1, 1, 1.29]);
  translate([53, 217, 0])
    cube([1, 1, 6.51]);
  translate([54, 217, 0])
    cube([1, 1, 7.49]);
  translate([55, 217, 0])
    cube([1, 1, 1.06]);
  translate([56, 217, 0])
    cube([1, 1, 1.22]);
  translate([57, 217, 0])
    cube([1, 1, 1.33]);
  translate([58, 217, 0])
    cube([1, 1, 1.53]);
  translate([59, 217, 0])
    cube([1, 1, 2.75]);
  translate([60, 217, 0])
    cube([1, 1, 5.25]);
  translate([61, 217, 0])
    cube([1, 1, 3.96]);
  translate([62, 217, 0])
    cube([1, 1, 1.25]);
  translate([63, 217, 0])
    cube([1, 1, 1.33]);
  translate([64, 217, 0])
    cube([1, 1, 1.37]);
  translate([65, 217, 0])
    cube([1, 1, 1.22]);
  translate([66, 217, 0])
    cube([1, 1, 0.24]);
  translate([67, 217, 0])
    cube([1, 1, 4.00]);
  translate([68, 217, 0])
    cube([1, 1, 2.67]);
  translate([69, 217, 0])
    cube([1, 1, 2.67]);
  translate([70, 217, 0])
    cube([1, 1, 2.90]);
  translate([71, 217, 0])
    cube([1, 1, 3.14]);
  translate([72, 217, 0])
    cube([1, 1, 3.33]);
  translate([73, 217, 0])
    cube([1, 1, 3.53]);
  translate([74, 217, 0])
    cube([1, 1, 3.65]);
  translate([75, 217, 0])
    cube([1, 1, 3.73]);
  translate([76, 217, 0])
    cube([1, 1, 3.76]);
  translate([77, 217, 0])
    cube([1, 1, 3.88]);
  translate([78, 217, 0])
    cube([1, 1, 4.04]);
  translate([79, 217, 0])
    cube([1, 1, 4.08]);
  translate([80, 217, 0])
    cube([1, 1, 4.27]);
  translate([81, 217, 0])
    cube([1, 1, 4.27]);
  translate([82, 217, 0])
    cube([1, 1, 4.35]);
  translate([83, 217, 0])
    cube([1, 1, 4.43]);
  translate([84, 217, 0])
    cube([1, 1, 4.51]);
  translate([85, 217, 0])
    cube([1, 1, 4.71]);
  translate([86, 217, 0])
    cube([1, 1, 4.63]);
  translate([87, 217, 0])
    cube([1, 1, 4.78]);
  translate([88, 217, 0])
    cube([1, 1, 4.98]);
  translate([89, 217, 0])
    cube([1, 1, 5.06]);
  translate([90, 217, 0])
    cube([1, 1, 5.14]);
  translate([91, 217, 0])
    cube([1, 1, 5.14]);
  translate([92, 217, 0])
    cube([1, 1, 5.14]);
  translate([93, 217, 0])
    cube([1, 1, 5.06]);
  translate([94, 217, 0])
    cube([1, 1, 5.06]);
  translate([95, 217, 0])
    cube([1, 1, 5.02]);
  translate([96, 217, 0])
    cube([1, 1, 4.90]);
  translate([97, 217, 0])
    cube([1, 1, 4.82]);
  translate([98, 217, 0])
    cube([1, 1, 4.94]);
  translate([99, 217, 0])
    cube([1, 1, 4.55]);
  translate([100, 217, 0])
    cube([1, 1, 4.78]);
  translate([101, 217, 0])
    cube([1, 1, 4.24]);
  translate([102, 217, 0])
    cube([1, 1, 1.02]);
  translate([103, 217, 0])
    cube([1, 1, 1.61]);
  translate([104, 217, 0])
    cube([1, 1, 2.20]);
  translate([105, 217, 0])
    cube([1, 1, 1.96]);
  translate([106, 217, 0])
    cube([1, 1, 2.04]);
  translate([107, 217, 0])
    cube([1, 1, 2.20]);
  translate([108, 217, 0])
    cube([1, 1, 2.16]);
  translate([109, 217, 0])
    cube([1, 1, 2.12]);
  translate([110, 217, 0])
    cube([1, 1, 1.73]);
  translate([111, 217, 0])
    cube([1, 1, 1.61]);
  translate([112, 217, 0])
    cube([1, 1, 2.51]);
  translate([113, 217, 0])
    cube([1, 1, 1.69]);
  translate([114, 217, 0])
    cube([1, 1, 1.65]);
  translate([115, 217, 0])
    cube([1, 1, 1.57]);
  translate([116, 217, 0])
    cube([1, 1, 1.69]);
  translate([117, 217, 0])
    cube([1, 1, 1.37]);
  translate([118, 217, 0])
    cube([1, 1, 1.57]);
  translate([119, 217, 0])
    cube([1, 1, 2.04]);
  translate([120, 217, 0])
    cube([1, 1, 1.76]);
  translate([121, 217, 0])
    cube([1, 1, 1.45]);
  translate([122, 217, 0])
    cube([1, 1, 1.29]);
  translate([123, 217, 0])
    cube([1, 1, 1.37]);
  translate([124, 217, 0])
    cube([1, 1, 1.25]);
  translate([125, 217, 0])
    cube([1, 1, 0.90]);
  translate([126, 217, 0])
    cube([1, 1, 1.18]);
  translate([127, 217, 0])
    cube([1, 1, 1.53]);
  translate([128, 217, 0])
    cube([1, 1, 1.76]);
  translate([129, 217, 0])
    cube([1, 1, 1.73]);
  translate([130, 217, 0])
    cube([1, 1, 1.84]);
  translate([131, 217, 0])
    cube([1, 1, 1.88]);
  translate([132, 217, 0])
    cube([1, 1, 2.67]);
  translate([133, 217, 0])
    cube([1, 1, 3.84]);
  translate([134, 217, 0])
    cube([1, 1, 4.00]);
  translate([135, 217, 0])
    cube([1, 1, 4.24]);
  translate([136, 217, 0])
    cube([1, 1, 4.27]);
  translate([137, 217, 0])
    cube([1, 1, 4.35]);
  translate([138, 217, 0])
    cube([1, 1, 4.43]);
  translate([139, 217, 0])
    cube([1, 1, 4.43]);
  translate([140, 217, 0])
    cube([1, 1, 4.43]);
  translate([141, 217, 0])
    cube([1, 1, 4.47]);
  translate([142, 217, 0])
    cube([1, 1, 4.47]);
  translate([143, 217, 0])
    cube([1, 1, 4.51]);
  translate([144, 217, 0])
    cube([1, 1, 4.71]);
  translate([145, 217, 0])
    cube([1, 1, 4.78]);
  translate([146, 217, 0])
    cube([1, 1, 4.90]);
  translate([147, 217, 0])
    cube([1, 1, 5.10]);
  translate([148, 217, 0])
    cube([1, 1, 5.10]);
  translate([149, 217, 0])
    cube([1, 1, 5.18]);
  translate([150, 217, 0])
    cube([1, 1, 5.06]);
  translate([151, 217, 0])
    cube([1, 1, 4.94]);
  translate([152, 217, 0])
    cube([1, 1, 4.90]);
  translate([153, 217, 0])
    cube([1, 1, 4.86]);
  translate([154, 217, 0])
    cube([1, 1, 5.02]);
  translate([155, 217, 0])
    cube([1, 1, 5.18]);
  translate([156, 217, 0])
    cube([1, 1, 5.25]);
  translate([157, 217, 0])
    cube([1, 1, 5.37]);
  translate([158, 217, 0])
    cube([1, 1, 5.41]);
  translate([159, 217, 0])
    cube([1, 1, 5.37]);
  translate([160, 217, 0])
    cube([1, 1, 5.06]);
  translate([161, 217, 0])
    cube([1, 1, 4.75]);
  translate([162, 217, 0])
    cube([1, 1, 4.67]);
  translate([163, 217, 0])
    cube([1, 1, 0.47]);
  translate([164, 217, 0])
    cube([1, 1, 0.98]);
  translate([165, 217, 0])
    cube([1, 1, 1.14]);
  translate([166, 217, 0])
    cube([1, 1, 1.18]);
  translate([167, 217, 0])
    cube([1, 1, 1.33]);
  translate([168, 217, 0])
    cube([1, 1, 1.61]);
  translate([169, 217, 0])
    cube([1, 1, 1.92]);
  translate([170, 217, 0])
    cube([1, 1, 5.06]);
  translate([171, 217, 0])
    cube([1, 1, 1.33]);
  translate([172, 217, 0])
    cube([1, 1, 1.61]);
  translate([173, 217, 0])
    cube([1, 1, 2.31]);
  translate([174, 217, 0])
    cube([1, 1, 6.12]);
  translate([175, 217, 0])
    cube([1, 1, 1.76]);
  translate([176, 217, 0])
    cube([1, 1, 2.00]);
  translate([177, 217, 0])
    cube([1, 1, 2.00]);
  translate([178, 217, 0])
    cube([1, 1, 2.04]);
  translate([179, 217, 0])
    cube([1, 1, 2.00]);
  translate([180, 217, 0])
    cube([1, 1, 2.00]);
  translate([181, 217, 0])
    cube([1, 1, 2.00]);
  translate([182, 217, 0])
    cube([1, 1, 2.04]);
  translate([183, 217, 0])
    cube([1, 1, 2.04]);
  translate([184, 217, 0])
    cube([1, 1, 2.04]);
  translate([185, 217, 0])
    cube([1, 1, 2.04]);
  translate([186, 217, 0])
    cube([1, 1, 2.04]);
  translate([187, 217, 0])
    cube([1, 1, 2.00]);
  translate([188, 217, 0])
    cube([1, 1, 2.04]);
  translate([189, 217, 0])
    cube([1, 1, 2.04]);
  translate([190, 217, 0])
    cube([1, 1, 2.04]);
  translate([191, 217, 0])
    cube([1, 1, 2.04]);
  translate([192, 217, 0])
    cube([1, 1, 2.04]);
  translate([193, 217, 0])
    cube([1, 1, 2.04]);
  translate([194, 217, 0])
    cube([1, 1, 2.04]);
  translate([195, 217, 0])
    cube([1, 1, 2.04]);
  translate([196, 217, 0])
    cube([1, 1, 2.04]);
  translate([197, 217, 0])
    cube([1, 1, 2.04]);
  translate([198, 217, 0])
    cube([1, 1, 2.04]);
  translate([199, 217, 0])
    cube([1, 1, 2.04]);
  translate([200, 217, 0])
    cube([1, 1, 2.04]);
  translate([201, 217, 0])
    cube([1, 1, 2.04]);
  translate([202, 217, 0])
    cube([1, 1, 2.04]);
  translate([203, 217, 0])
    cube([1, 1, 2.04]);
  translate([204, 217, 0])
    cube([1, 1, 2.04]);
  translate([205, 217, 0])
    cube([1, 1, 2.04]);
  translate([206, 217, 0])
    cube([1, 1, 2.04]);
  translate([207, 217, 0])
    cube([1, 1, 2.04]);
  translate([208, 217, 0])
    cube([1, 1, 2.04]);
  translate([209, 217, 0])
    cube([1, 1, 2.04]);
  translate([210, 217, 0])
    cube([1, 1, 2.04]);
  translate([211, 217, 0])
    cube([1, 1, 1.96]);
  translate([212, 217, 0])
    cube([1, 1, 2.04]);
  translate([213, 217, 0])
    cube([1, 1, 2.04]);
  translate([214, 217, 0])
    cube([1, 1, 2.04]);
  translate([215, 217, 0])
    cube([1, 1, 2.04]);
  translate([216, 217, 0])
    cube([1, 1, 2.04]);
  translate([217, 217, 0])
    cube([1, 1, 1.96]);
  translate([218, 217, 0])
    cube([1, 1, 1.96]);
  translate([219, 217, 0])
    cube([1, 1, 2.04]);
  translate([220, 217, 0])
    cube([1, 1, 2.04]);
  translate([221, 217, 0])
    cube([1, 1, 2.04]);
  translate([222, 217, 0])
    cube([1, 1, 2.00]);
  translate([223, 217, 0])
    cube([1, 1, 2.04]);
  translate([224, 217, 0])
    cube([1, 1, 2.04]);
  translate([225, 217, 0])
    cube([1, 1, 2.00]);
  translate([226, 217, 0])
    cube([1, 1, 2.00]);
  translate([227, 217, 0])
    cube([1, 1, 2.00]);
  translate([228, 217, 0])
    cube([1, 1, 2.00]);
  translate([229, 217, 0])
    cube([1, 1, 2.00]);
  translate([230, 217, 0])
    cube([1, 1, 2.00]);
  translate([231, 217, 0])
    cube([1, 1, 2.00]);
  translate([232, 217, 0])
    cube([1, 1, 2.04]);
  translate([233, 217, 0])
    cube([1, 1, 2.04]);
  translate([234, 217, 0])
    cube([1, 1, 2.04]);
  translate([235, 217, 0])
    cube([1, 1, 2.00]);
  translate([236, 217, 0])
    cube([1, 1, 2.00]);
  translate([237, 217, 0])
    cube([1, 1, 2.00]);
  translate([238, 217, 0])
    cube([1, 1, 2.00]);
  translate([239, 217, 0])
    cube([1, 1, 2.00]);
  translate([240, 217, 0])
    cube([1, 1, 2.00]);
  translate([241, 217, 0])
    cube([1, 1, 2.00]);
  translate([242, 217, 0])
    cube([1, 1, 2.00]);
  translate([243, 217, 0])
    cube([1, 1, 2.00]);
  translate([244, 217, 0])
    cube([1, 1, 1.96]);
  translate([245, 217, 0])
    cube([1, 1, 2.00]);
  translate([246, 217, 0])
    cube([1, 1, 1.96]);
  translate([0, 218, 0])
    cube([1, 1, 2.16]);
  translate([1, 218, 0])
    cube([1, 1, 2.20]);
  translate([2, 218, 0])
    cube([1, 1, 2.20]);
  translate([3, 218, 0])
    cube([1, 1, 2.16]);
  translate([4, 218, 0])
    cube([1, 1, 2.16]);
  translate([5, 218, 0])
    cube([1, 1, 2.16]);
  translate([6, 218, 0])
    cube([1, 1, 2.12]);
  translate([7, 218, 0])
    cube([1, 1, 2.16]);
  translate([8, 218, 0])
    cube([1, 1, 2.20]);
  translate([9, 218, 0])
    cube([1, 1, 2.16]);
  translate([10, 218, 0])
    cube([1, 1, 2.16]);
  translate([11, 218, 0])
    cube([1, 1, 2.16]);
  translate([12, 218, 0])
    cube([1, 1, 2.20]);
  translate([13, 218, 0])
    cube([1, 1, 2.16]);
  translate([14, 218, 0])
    cube([1, 1, 2.16]);
  translate([15, 218, 0])
    cube([1, 1, 2.20]);
  translate([16, 218, 0])
    cube([1, 1, 2.16]);
  translate([17, 218, 0])
    cube([1, 1, 2.16]);
  translate([18, 218, 0])
    cube([1, 1, 2.24]);
  translate([19, 218, 0])
    cube([1, 1, 2.20]);
  translate([20, 218, 0])
    cube([1, 1, 2.16]);
  translate([21, 218, 0])
    cube([1, 1, 2.16]);
  translate([22, 218, 0])
    cube([1, 1, 2.16]);
  translate([23, 218, 0])
    cube([1, 1, 2.16]);
  translate([24, 218, 0])
    cube([1, 1, 2.12]);
  translate([25, 218, 0])
    cube([1, 1, 2.16]);
  translate([26, 218, 0])
    cube([1, 1, 2.16]);
  translate([27, 218, 0])
    cube([1, 1, 2.08]);
  translate([28, 218, 0])
    cube([1, 1, 2.16]);
  translate([29, 218, 0])
    cube([1, 1, 2.16]);
  translate([30, 218, 0])
    cube([1, 1, 2.16]);
  translate([31, 218, 0])
    cube([1, 1, 2.16]);
  translate([32, 218, 0])
    cube([1, 1, 2.16]);
  translate([33, 218, 0])
    cube([1, 1, 2.16]);
  translate([34, 218, 0])
    cube([1, 1, 2.16]);
  translate([35, 218, 0])
    cube([1, 1, 2.16]);
  translate([36, 218, 0])
    cube([1, 1, 2.16]);
  translate([37, 218, 0])
    cube([1, 1, 2.16]);
  translate([38, 218, 0])
    cube([1, 1, 2.16]);
  translate([39, 218, 0])
    cube([1, 1, 2.16]);
  translate([40, 218, 0])
    cube([1, 1, 2.16]);
  translate([41, 218, 0])
    cube([1, 1, 2.16]);
  translate([42, 218, 0])
    cube([1, 1, 2.16]);
  translate([43, 218, 0])
    cube([1, 1, 2.16]);
  translate([44, 218, 0])
    cube([1, 1, 2.12]);
  translate([45, 218, 0])
    cube([1, 1, 2.08]);
  translate([46, 218, 0])
    cube([1, 1, 2.12]);
  translate([47, 218, 0])
    cube([1, 1, 2.16]);
  translate([48, 218, 0])
    cube([1, 1, 2.16]);
  translate([49, 218, 0])
    cube([1, 1, 1.84]);
  translate([50, 218, 0])
    cube([1, 1, 6.51]);
  translate([51, 218, 0])
    cube([1, 1, 8.86]);
  translate([52, 218, 0])
    cube([1, 1, 0.67]);
  translate([53, 218, 0])
    cube([1, 1, 8.98]);
  translate([54, 218, 0])
    cube([1, 1, 4.12]);
  translate([55, 218, 0])
    cube([1, 1, 0.98]);
  translate([56, 218, 0])
    cube([1, 1, 1.22]);
  translate([57, 218, 0])
    cube([1, 1, 1.22]);
  translate([58, 218, 0])
    cube([1, 1, 1.49]);
  translate([59, 218, 0])
    cube([1, 1, 3.73]);
  translate([60, 218, 0])
    cube([1, 1, 5.96]);
  translate([61, 218, 0])
    cube([1, 1, 2.67]);
  translate([62, 218, 0])
    cube([1, 1, 1.37]);
  translate([63, 218, 0])
    cube([1, 1, 1.37]);
  translate([64, 218, 0])
    cube([1, 1, 1.33]);
  translate([65, 218, 0])
    cube([1, 1, 0.47]);
  translate([66, 218, 0])
    cube([1, 1, 0.59]);
  translate([67, 218, 0])
    cube([1, 1, 2.00]);
  translate([68, 218, 0])
    cube([1, 1, 2.55]);
  translate([69, 218, 0])
    cube([1, 1, 2.78]);
  translate([70, 218, 0])
    cube([1, 1, 2.94]);
  translate([71, 218, 0])
    cube([1, 1, 3.18]);
  translate([72, 218, 0])
    cube([1, 1, 3.49]);
  translate([73, 218, 0])
    cube([1, 1, 3.49]);
  translate([74, 218, 0])
    cube([1, 1, 3.69]);
  translate([75, 218, 0])
    cube([1, 1, 3.73]);
  translate([76, 218, 0])
    cube([1, 1, 3.84]);
  translate([77, 218, 0])
    cube([1, 1, 3.96]);
  translate([78, 218, 0])
    cube([1, 1, 3.96]);
  translate([79, 218, 0])
    cube([1, 1, 4.12]);
  translate([80, 218, 0])
    cube([1, 1, 4.24]);
  translate([81, 218, 0])
    cube([1, 1, 4.27]);
  translate([82, 218, 0])
    cube([1, 1, 4.31]);
  translate([83, 218, 0])
    cube([1, 1, 4.47]);
  translate([84, 218, 0])
    cube([1, 1, 4.39]);
  translate([85, 218, 0])
    cube([1, 1, 4.55]);
  translate([86, 218, 0])
    cube([1, 1, 4.71]);
  translate([87, 218, 0])
    cube([1, 1, 4.86]);
  translate([88, 218, 0])
    cube([1, 1, 4.90]);
  translate([89, 218, 0])
    cube([1, 1, 5.18]);
  translate([90, 218, 0])
    cube([1, 1, 5.18]);
  translate([91, 218, 0])
    cube([1, 1, 5.10]);
  translate([92, 218, 0])
    cube([1, 1, 5.06]);
  translate([93, 218, 0])
    cube([1, 1, 5.02]);
  translate([94, 218, 0])
    cube([1, 1, 5.02]);
  translate([95, 218, 0])
    cube([1, 1, 5.02]);
  translate([96, 218, 0])
    cube([1, 1, 4.94]);
  translate([97, 218, 0])
    cube([1, 1, 4.90]);
  translate([98, 218, 0])
    cube([1, 1, 4.98]);
  translate([99, 218, 0])
    cube([1, 1, 4.82]);
  translate([100, 218, 0])
    cube([1, 1, 4.82]);
  translate([101, 218, 0])
    cube([1, 1, 4.71]);
  translate([102, 218, 0])
    cube([1, 1, 4.75]);
  translate([103, 218, 0])
    cube([1, 1, 2.35]);
  translate([104, 218, 0])
    cube([1, 1, 2.00]);
  translate([105, 218, 0])
    cube([1, 1, 1.88]);
  translate([106, 218, 0])
    cube([1, 1, 2.16]);
  translate([107, 218, 0])
    cube([1, 1, 2.24]);
  translate([108, 218, 0])
    cube([1, 1, 2.20]);
  translate([109, 218, 0])
    cube([1, 1, 2.04]);
  translate([110, 218, 0])
    cube([1, 1, 1.88]);
  translate([111, 218, 0])
    cube([1, 1, 1.76]);
  translate([112, 218, 0])
    cube([1, 1, 1.80]);
  translate([113, 218, 0])
    cube([1, 1, 1.76]);
  translate([114, 218, 0])
    cube([1, 1, 1.88]);
  translate([115, 218, 0])
    cube([1, 1, 1.57]);
  translate([116, 218, 0])
    cube([1, 1, 1.14]);
  translate([117, 218, 0])
    cube([1, 1, 1.41]);
  translate([118, 218, 0])
    cube([1, 1, 1.49]);
  translate([119, 218, 0])
    cube([1, 1, 2.08]);
  translate([120, 218, 0])
    cube([1, 1, 1.65]);
  translate([121, 218, 0])
    cube([1, 1, 1.29]);
  translate([122, 218, 0])
    cube([1, 1, 1.25]);
  translate([123, 218, 0])
    cube([1, 1, 1.10]);
  translate([124, 218, 0])
    cube([1, 1, 0.98]);
  translate([125, 218, 0])
    cube([1, 1, 1.18]);
  translate([126, 218, 0])
    cube([1, 1, 1.22]);
  translate([127, 218, 0])
    cube([1, 1, 1.53]);
  translate([128, 218, 0])
    cube([1, 1, 1.61]);
  translate([129, 218, 0])
    cube([1, 1, 1.69]);
  translate([130, 218, 0])
    cube([1, 1, 1.92]);
  translate([131, 218, 0])
    cube([1, 1, 3.73]);
  translate([132, 218, 0])
    cube([1, 1, 3.73]);
  translate([133, 218, 0])
    cube([1, 1, 3.88]);
  translate([134, 218, 0])
    cube([1, 1, 3.92]);
  translate([135, 218, 0])
    cube([1, 1, 4.12]);
  translate([136, 218, 0])
    cube([1, 1, 4.20]);
  translate([137, 218, 0])
    cube([1, 1, 4.24]);
  translate([138, 218, 0])
    cube([1, 1, 4.31]);
  translate([139, 218, 0])
    cube([1, 1, 4.39]);
  translate([140, 218, 0])
    cube([1, 1, 4.31]);
  translate([141, 218, 0])
    cube([1, 1, 4.39]);
  translate([142, 218, 0])
    cube([1, 1, 4.47]);
  translate([143, 218, 0])
    cube([1, 1, 4.55]);
  translate([144, 218, 0])
    cube([1, 1, 4.71]);
  translate([145, 218, 0])
    cube([1, 1, 4.78]);
  translate([146, 218, 0])
    cube([1, 1, 5.02]);
  translate([147, 218, 0])
    cube([1, 1, 5.06]);
  translate([148, 218, 0])
    cube([1, 1, 5.18]);
  translate([149, 218, 0])
    cube([1, 1, 5.29]);
  translate([150, 218, 0])
    cube([1, 1, 5.10]);
  translate([151, 218, 0])
    cube([1, 1, 4.98]);
  translate([152, 218, 0])
    cube([1, 1, 4.90]);
  translate([153, 218, 0])
    cube([1, 1, 4.86]);
  translate([154, 218, 0])
    cube([1, 1, 5.10]);
  translate([155, 218, 0])
    cube([1, 1, 5.14]);
  translate([156, 218, 0])
    cube([1, 1, 5.22]);
  translate([157, 218, 0])
    cube([1, 1, 5.49]);
  translate([158, 218, 0])
    cube([1, 1, 5.61]);
  translate([159, 218, 0])
    cube([1, 1, 5.53]);
  translate([160, 218, 0])
    cube([1, 1, 5.22]);
  translate([161, 218, 0])
    cube([1, 1, 4.86]);
  translate([162, 218, 0])
    cube([1, 1, 4.55]);
  translate([163, 218, 0])
    cube([1, 1, 0.67]);
  translate([164, 218, 0])
    cube([1, 1, 1.02]);
  translate([165, 218, 0])
    cube([1, 1, 1.22]);
  translate([166, 218, 0])
    cube([1, 1, 1.14]);
  translate([167, 218, 0])
    cube([1, 1, 1.29]);
  translate([168, 218, 0])
    cube([1, 1, 1.49]);
  translate([169, 218, 0])
    cube([1, 1, 1.84]);
  translate([170, 218, 0])
    cube([1, 1, 3.61]);
  translate([171, 218, 0])
    cube([1, 1, 2.20]);
  translate([172, 218, 0])
    cube([1, 1, 1.45]);
  translate([173, 218, 0])
    cube([1, 1, 1.84]);
  translate([174, 218, 0])
    cube([1, 1, 7.53]);
  translate([175, 218, 0])
    cube([1, 1, 1.92]);
  translate([176, 218, 0])
    cube([1, 1, 2.00]);
  translate([177, 218, 0])
    cube([1, 1, 2.04]);
  translate([178, 218, 0])
    cube([1, 1, 2.04]);
  translate([179, 218, 0])
    cube([1, 1, 2.04]);
  translate([180, 218, 0])
    cube([1, 1, 2.00]);
  translate([181, 218, 0])
    cube([1, 1, 2.00]);
  translate([182, 218, 0])
    cube([1, 1, 2.04]);
  translate([183, 218, 0])
    cube([1, 1, 2.00]);
  translate([184, 218, 0])
    cube([1, 1, 2.00]);
  translate([185, 218, 0])
    cube([1, 1, 2.04]);
  translate([186, 218, 0])
    cube([1, 1, 2.04]);
  translate([187, 218, 0])
    cube([1, 1, 2.00]);
  translate([188, 218, 0])
    cube([1, 1, 2.04]);
  translate([189, 218, 0])
    cube([1, 1, 2.04]);
  translate([190, 218, 0])
    cube([1, 1, 2.00]);
  translate([191, 218, 0])
    cube([1, 1, 2.04]);
  translate([192, 218, 0])
    cube([1, 1, 2.00]);
  translate([193, 218, 0])
    cube([1, 1, 2.00]);
  translate([194, 218, 0])
    cube([1, 1, 2.04]);
  translate([195, 218, 0])
    cube([1, 1, 2.04]);
  translate([196, 218, 0])
    cube([1, 1, 1.96]);
  translate([197, 218, 0])
    cube([1, 1, 1.96]);
  translate([198, 218, 0])
    cube([1, 1, 2.00]);
  translate([199, 218, 0])
    cube([1, 1, 2.04]);
  translate([200, 218, 0])
    cube([1, 1, 2.04]);
  translate([201, 218, 0])
    cube([1, 1, 2.04]);
  translate([202, 218, 0])
    cube([1, 1, 2.04]);
  translate([203, 218, 0])
    cube([1, 1, 2.04]);
  translate([204, 218, 0])
    cube([1, 1, 2.04]);
  translate([205, 218, 0])
    cube([1, 1, 2.04]);
  translate([206, 218, 0])
    cube([1, 1, 2.04]);
  translate([207, 218, 0])
    cube([1, 1, 2.04]);
  translate([208, 218, 0])
    cube([1, 1, 2.04]);
  translate([209, 218, 0])
    cube([1, 1, 2.04]);
  translate([210, 218, 0])
    cube([1, 1, 2.04]);
  translate([211, 218, 0])
    cube([1, 1, 2.04]);
  translate([212, 218, 0])
    cube([1, 1, 2.00]);
  translate([213, 218, 0])
    cube([1, 1, 2.00]);
  translate([214, 218, 0])
    cube([1, 1, 2.04]);
  translate([215, 218, 0])
    cube([1, 1, 2.04]);
  translate([216, 218, 0])
    cube([1, 1, 1.92]);
  translate([217, 218, 0])
    cube([1, 1, 2.00]);
  translate([218, 218, 0])
    cube([1, 1, 2.04]);
  translate([219, 218, 0])
    cube([1, 1, 2.00]);
  translate([220, 218, 0])
    cube([1, 1, 2.04]);
  translate([221, 218, 0])
    cube([1, 1, 2.00]);
  translate([222, 218, 0])
    cube([1, 1, 2.00]);
  translate([223, 218, 0])
    cube([1, 1, 1.96]);
  translate([224, 218, 0])
    cube([1, 1, 2.00]);
  translate([225, 218, 0])
    cube([1, 1, 2.00]);
  translate([226, 218, 0])
    cube([1, 1, 2.00]);
  translate([227, 218, 0])
    cube([1, 1, 2.00]);
  translate([228, 218, 0])
    cube([1, 1, 2.00]);
  translate([229, 218, 0])
    cube([1, 1, 2.00]);
  translate([230, 218, 0])
    cube([1, 1, 2.00]);
  translate([231, 218, 0])
    cube([1, 1, 2.00]);
  translate([232, 218, 0])
    cube([1, 1, 2.00]);
  translate([233, 218, 0])
    cube([1, 1, 2.00]);
  translate([234, 218, 0])
    cube([1, 1, 2.00]);
  translate([235, 218, 0])
    cube([1, 1, 2.00]);
  translate([236, 218, 0])
    cube([1, 1, 2.00]);
  translate([237, 218, 0])
    cube([1, 1, 2.00]);
  translate([238, 218, 0])
    cube([1, 1, 2.00]);
  translate([239, 218, 0])
    cube([1, 1, 2.00]);
  translate([240, 218, 0])
    cube([1, 1, 2.00]);
  translate([241, 218, 0])
    cube([1, 1, 1.96]);
  translate([242, 218, 0])
    cube([1, 1, 1.96]);
  translate([243, 218, 0])
    cube([1, 1, 2.00]);
  translate([244, 218, 0])
    cube([1, 1, 2.00]);
  translate([245, 218, 0])
    cube([1, 1, 2.00]);
  translate([246, 218, 0])
    cube([1, 1, 2.00]);
  translate([0, 219, 0])
    cube([1, 1, 2.16]);
  translate([1, 219, 0])
    cube([1, 1, 2.20]);
  translate([2, 219, 0])
    cube([1, 1, 2.20]);
  translate([3, 219, 0])
    cube([1, 1, 2.16]);
  translate([4, 219, 0])
    cube([1, 1, 2.16]);
  translate([5, 219, 0])
    cube([1, 1, 2.16]);
  translate([6, 219, 0])
    cube([1, 1, 2.12]);
  translate([7, 219, 0])
    cube([1, 1, 2.16]);
  translate([8, 219, 0])
    cube([1, 1, 2.20]);
  translate([9, 219, 0])
    cube([1, 1, 2.12]);
  translate([10, 219, 0])
    cube([1, 1, 2.12]);
  translate([11, 219, 0])
    cube([1, 1, 2.16]);
  translate([12, 219, 0])
    cube([1, 1, 2.12]);
  translate([13, 219, 0])
    cube([1, 1, 2.20]);
  translate([14, 219, 0])
    cube([1, 1, 2.16]);
  translate([15, 219, 0])
    cube([1, 1, 2.20]);
  translate([16, 219, 0])
    cube([1, 1, 2.16]);
  translate([17, 219, 0])
    cube([1, 1, 2.16]);
  translate([18, 219, 0])
    cube([1, 1, 2.24]);
  translate([19, 219, 0])
    cube([1, 1, 2.20]);
  translate([20, 219, 0])
    cube([1, 1, 2.16]);
  translate([21, 219, 0])
    cube([1, 1, 2.16]);
  translate([22, 219, 0])
    cube([1, 1, 2.16]);
  translate([23, 219, 0])
    cube([1, 1, 2.16]);
  translate([24, 219, 0])
    cube([1, 1, 2.12]);
  translate([25, 219, 0])
    cube([1, 1, 2.16]);
  translate([26, 219, 0])
    cube([1, 1, 2.16]);
  translate([27, 219, 0])
    cube([1, 1, 2.16]);
  translate([28, 219, 0])
    cube([1, 1, 2.16]);
  translate([29, 219, 0])
    cube([1, 1, 2.16]);
  translate([30, 219, 0])
    cube([1, 1, 2.16]);
  translate([31, 219, 0])
    cube([1, 1, 2.16]);
  translate([32, 219, 0])
    cube([1, 1, 2.16]);
  translate([33, 219, 0])
    cube([1, 1, 2.16]);
  translate([34, 219, 0])
    cube([1, 1, 2.16]);
  translate([35, 219, 0])
    cube([1, 1, 2.16]);
  translate([36, 219, 0])
    cube([1, 1, 2.16]);
  translate([37, 219, 0])
    cube([1, 1, 2.16]);
  translate([38, 219, 0])
    cube([1, 1, 2.16]);
  translate([39, 219, 0])
    cube([1, 1, 2.16]);
  translate([40, 219, 0])
    cube([1, 1, 2.16]);
  translate([41, 219, 0])
    cube([1, 1, 2.16]);
  translate([42, 219, 0])
    cube([1, 1, 2.16]);
  translate([43, 219, 0])
    cube([1, 1, 2.16]);
  translate([44, 219, 0])
    cube([1, 1, 2.12]);
  translate([45, 219, 0])
    cube([1, 1, 2.08]);
  translate([46, 219, 0])
    cube([1, 1, 2.12]);
  translate([47, 219, 0])
    cube([1, 1, 2.16]);
  translate([48, 219, 0])
    cube([1, 1, 2.16]);
  translate([49, 219, 0])
    cube([1, 1, 2.51]);
  translate([50, 219, 0])
    cube([1, 1, 7.22]);
  translate([51, 219, 0])
    cube([1, 1, 1.14]);
  translate([52, 219, 0])
    cube([1, 1, 9.22]);
  translate([53, 219, 0])
    cube([1, 1, 9.10]);
  translate([54, 219, 0])
    cube([1, 1, 2.78]);
  translate([55, 219, 0])
    cube([1, 1, 1.06]);
  translate([56, 219, 0])
    cube([1, 1, 1.22]);
  translate([57, 219, 0])
    cube([1, 1, 1.57]);
  translate([58, 219, 0])
    cube([1, 1, 1.49]);
  translate([59, 219, 0])
    cube([1, 1, 2.27]);
  translate([60, 219, 0])
    cube([1, 1, 5.49]);
  translate([61, 219, 0])
    cube([1, 1, 1.41]);
  translate([62, 219, 0])
    cube([1, 1, 1.29]);
  translate([63, 219, 0])
    cube([1, 1, 1.29]);
  translate([64, 219, 0])
    cube([1, 1, 1.25]);
  translate([65, 219, 0])
    cube([1, 1, 0.47]);
  translate([66, 219, 0])
    cube([1, 1, 2.04]);
  translate([67, 219, 0])
    cube([1, 1, 2.55]);
  translate([68, 219, 0])
    cube([1, 1, 2.59]);
  translate([69, 219, 0])
    cube([1, 1, 2.86]);
  translate([70, 219, 0])
    cube([1, 1, 3.02]);
  translate([71, 219, 0])
    cube([1, 1, 3.22]);
  translate([72, 219, 0])
    cube([1, 1, 3.37]);
  translate([73, 219, 0])
    cube([1, 1, 3.45]);
  translate([74, 219, 0])
    cube([1, 1, 3.65]);
  translate([75, 219, 0])
    cube([1, 1, 3.73]);
  translate([76, 219, 0])
    cube([1, 1, 3.76]);
  translate([77, 219, 0])
    cube([1, 1, 4.00]);
  translate([78, 219, 0])
    cube([1, 1, 3.96]);
  translate([79, 219, 0])
    cube([1, 1, 4.12]);
  translate([80, 219, 0])
    cube([1, 1, 4.24]);
  translate([81, 219, 0])
    cube([1, 1, 4.24]);
  translate([82, 219, 0])
    cube([1, 1, 4.27]);
  translate([83, 219, 0])
    cube([1, 1, 4.47]);
  translate([84, 219, 0])
    cube([1, 1, 4.51]);
  translate([85, 219, 0])
    cube([1, 1, 4.59]);
  translate([86, 219, 0])
    cube([1, 1, 4.71]);
  translate([87, 219, 0])
    cube([1, 1, 4.78]);
  translate([88, 219, 0])
    cube([1, 1, 5.14]);
  translate([89, 219, 0])
    cube([1, 1, 5.18]);
  translate([90, 219, 0])
    cube([1, 1, 5.18]);
  translate([91, 219, 0])
    cube([1, 1, 5.10]);
  translate([92, 219, 0])
    cube([1, 1, 5.06]);
  translate([93, 219, 0])
    cube([1, 1, 5.02]);
  translate([94, 219, 0])
    cube([1, 1, 5.02]);
  translate([95, 219, 0])
    cube([1, 1, 5.02]);
  translate([96, 219, 0])
    cube([1, 1, 4.94]);
  translate([97, 219, 0])
    cube([1, 1, 4.94]);
  translate([98, 219, 0])
    cube([1, 1, 4.90]);
  translate([99, 219, 0])
    cube([1, 1, 4.75]);
  translate([100, 219, 0])
    cube([1, 1, 4.59]);
  translate([101, 219, 0])
    cube([1, 1, 4.71]);
  translate([102, 219, 0])
    cube([1, 1, 4.59]);
  translate([103, 219, 0])
    cube([1, 1, 4.78]);
  translate([104, 219, 0])
    cube([1, 1, 4.35]);
  translate([105, 219, 0])
    cube([1, 1, 1.02]);
  translate([106, 219, 0])
    cube([1, 1, 1.73]);
  translate([107, 219, 0])
    cube([1, 1, 1.92]);
  translate([108, 219, 0])
    cube([1, 1, 2.04]);
  translate([109, 219, 0])
    cube([1, 1, 2.04]);
  translate([110, 219, 0])
    cube([1, 1, 2.00]);
  translate([111, 219, 0])
    cube([1, 1, 2.24]);
  translate([112, 219, 0])
    cube([1, 1, 1.96]);
  translate([113, 219, 0])
    cube([1, 1, 1.73]);
  translate([114, 219, 0])
    cube([1, 1, 1.49]);
  translate([115, 219, 0])
    cube([1, 1, 1.18]);
  translate([116, 219, 0])
    cube([1, 1, 1.14]);
  translate([117, 219, 0])
    cube([1, 1, 1.14]);
  translate([118, 219, 0])
    cube([1, 1, 1.33]);
  translate([119, 219, 0])
    cube([1, 1, 1.57]);
  translate([120, 219, 0])
    cube([1, 1, 1.49]);
  translate([121, 219, 0])
    cube([1, 1, 1.02]);
  translate([122, 219, 0])
    cube([1, 1, 0.82]);
  translate([123, 219, 0])
    cube([1, 1, 0.94]);
  translate([124, 219, 0])
    cube([1, 1, 1.22]);
  translate([125, 219, 0])
    cube([1, 1, 1.41]);
  translate([126, 219, 0])
    cube([1, 1, 1.45]);
  translate([127, 219, 0])
    cube([1, 1, 1.53]);
  translate([128, 219, 0])
    cube([1, 1, 1.73]);
  translate([129, 219, 0])
    cube([1, 1, 2.82]);
  translate([130, 219, 0])
    cube([1, 1, 3.61]);
  translate([131, 219, 0])
    cube([1, 1, 3.61]);
  translate([132, 219, 0])
    cube([1, 1, 3.76]);
  translate([133, 219, 0])
    cube([1, 1, 3.73]);
  translate([134, 219, 0])
    cube([1, 1, 3.84]);
  translate([135, 219, 0])
    cube([1, 1, 4.00]);
  translate([136, 219, 0])
    cube([1, 1, 4.16]);
  translate([137, 219, 0])
    cube([1, 1, 4.24]);
  translate([138, 219, 0])
    cube([1, 1, 4.31]);
  translate([139, 219, 0])
    cube([1, 1, 4.39]);
  translate([140, 219, 0])
    cube([1, 1, 4.39]);
  translate([141, 219, 0])
    cube([1, 1, 4.35]);
  translate([142, 219, 0])
    cube([1, 1, 4.47]);
  translate([143, 219, 0])
    cube([1, 1, 4.55]);
  translate([144, 219, 0])
    cube([1, 1, 4.71]);
  translate([145, 219, 0])
    cube([1, 1, 4.78]);
  translate([146, 219, 0])
    cube([1, 1, 4.94]);
  translate([147, 219, 0])
    cube([1, 1, 5.18]);
  translate([148, 219, 0])
    cube([1, 1, 5.25]);
  translate([149, 219, 0])
    cube([1, 1, 5.25]);
  translate([150, 219, 0])
    cube([1, 1, 5.18]);
  translate([151, 219, 0])
    cube([1, 1, 5.18]);
  translate([152, 219, 0])
    cube([1, 1, 5.02]);
  translate([153, 219, 0])
    cube([1, 1, 4.90]);
  translate([154, 219, 0])
    cube([1, 1, 5.06]);
  translate([155, 219, 0])
    cube([1, 1, 5.14]);
  translate([156, 219, 0])
    cube([1, 1, 5.25]);
  translate([157, 219, 0])
    cube([1, 1, 5.45]);
  translate([158, 219, 0])
    cube([1, 1, 5.61]);
  translate([159, 219, 0])
    cube([1, 1, 5.53]);
  translate([160, 219, 0])
    cube([1, 1, 5.37]);
  translate([161, 219, 0])
    cube([1, 1, 5.02]);
  translate([162, 219, 0])
    cube([1, 1, 4.59]);
  translate([163, 219, 0])
    cube([1, 1, 3.02]);
  translate([164, 219, 0])
    cube([1, 1, 1.06]);
  translate([165, 219, 0])
    cube([1, 1, 1.10]);
  translate([166, 219, 0])
    cube([1, 1, 1.14]);
  translate([167, 219, 0])
    cube([1, 1, 1.18]);
  translate([168, 219, 0])
    cube([1, 1, 1.22]);
  translate([169, 219, 0])
    cube([1, 1, 2.16]);
  translate([170, 219, 0])
    cube([1, 1, 4.35]);
  translate([171, 219, 0])
    cube([1, 1, 3.06]);
  translate([172, 219, 0])
    cube([1, 1, 1.45]);
  translate([173, 219, 0])
    cube([1, 1, 1.61]);
  translate([174, 219, 0])
    cube([1, 1, 5.61]);
  translate([175, 219, 0])
    cube([1, 1, 2.24]);
  translate([176, 219, 0])
    cube([1, 1, 2.04]);
  translate([177, 219, 0])
    cube([1, 1, 2.04]);
  translate([178, 219, 0])
    cube([1, 1, 2.04]);
  translate([179, 219, 0])
    cube([1, 1, 2.04]);
  translate([180, 219, 0])
    cube([1, 1, 2.00]);
  translate([181, 219, 0])
    cube([1, 1, 2.00]);
  translate([182, 219, 0])
    cube([1, 1, 2.04]);
  translate([183, 219, 0])
    cube([1, 1, 2.00]);
  translate([184, 219, 0])
    cube([1, 1, 2.00]);
  translate([185, 219, 0])
    cube([1, 1, 2.04]);
  translate([186, 219, 0])
    cube([1, 1, 2.04]);
  translate([187, 219, 0])
    cube([1, 1, 2.00]);
  translate([188, 219, 0])
    cube([1, 1, 2.04]);
  translate([189, 219, 0])
    cube([1, 1, 2.04]);
  translate([190, 219, 0])
    cube([1, 1, 2.00]);
  translate([191, 219, 0])
    cube([1, 1, 2.04]);
  translate([192, 219, 0])
    cube([1, 1, 2.04]);
  translate([193, 219, 0])
    cube([1, 1, 2.04]);
  translate([194, 219, 0])
    cube([1, 1, 2.08]);
  translate([195, 219, 0])
    cube([1, 1, 2.04]);
  translate([196, 219, 0])
    cube([1, 1, 2.00]);
  translate([197, 219, 0])
    cube([1, 1, 2.00]);
  translate([198, 219, 0])
    cube([1, 1, 2.00]);
  translate([199, 219, 0])
    cube([1, 1, 2.04]);
  translate([200, 219, 0])
    cube([1, 1, 2.04]);
  translate([201, 219, 0])
    cube([1, 1, 2.04]);
  translate([202, 219, 0])
    cube([1, 1, 2.04]);
  translate([203, 219, 0])
    cube([1, 1, 2.04]);
  translate([204, 219, 0])
    cube([1, 1, 2.04]);
  translate([205, 219, 0])
    cube([1, 1, 2.04]);
  translate([206, 219, 0])
    cube([1, 1, 2.04]);
  translate([207, 219, 0])
    cube([1, 1, 2.04]);
  translate([208, 219, 0])
    cube([1, 1, 2.04]);
  translate([209, 219, 0])
    cube([1, 1, 2.04]);
  translate([210, 219, 0])
    cube([1, 1, 2.04]);
  translate([211, 219, 0])
    cube([1, 1, 2.04]);
  translate([212, 219, 0])
    cube([1, 1, 2.04]);
  translate([213, 219, 0])
    cube([1, 1, 2.04]);
  translate([214, 219, 0])
    cube([1, 1, 2.04]);
  translate([215, 219, 0])
    cube([1, 1, 2.04]);
  translate([216, 219, 0])
    cube([1, 1, 2.08]);
  translate([217, 219, 0])
    cube([1, 1, 2.00]);
  translate([218, 219, 0])
    cube([1, 1, 2.04]);
  translate([219, 219, 0])
    cube([1, 1, 2.00]);
  translate([220, 219, 0])
    cube([1, 1, 2.04]);
  translate([221, 219, 0])
    cube([1, 1, 2.00]);
  translate([222, 219, 0])
    cube([1, 1, 1.96]);
  translate([223, 219, 0])
    cube([1, 1, 2.04]);
  translate([224, 219, 0])
    cube([1, 1, 2.00]);
  translate([225, 219, 0])
    cube([1, 1, 2.00]);
  translate([226, 219, 0])
    cube([1, 1, 2.00]);
  translate([227, 219, 0])
    cube([1, 1, 2.00]);
  translate([228, 219, 0])
    cube([1, 1, 2.00]);
  translate([229, 219, 0])
    cube([1, 1, 2.00]);
  translate([230, 219, 0])
    cube([1, 1, 2.00]);
  translate([231, 219, 0])
    cube([1, 1, 2.00]);
  translate([232, 219, 0])
    cube([1, 1, 2.00]);
  translate([233, 219, 0])
    cube([1, 1, 2.00]);
  translate([234, 219, 0])
    cube([1, 1, 2.00]);
  translate([235, 219, 0])
    cube([1, 1, 2.00]);
  translate([236, 219, 0])
    cube([1, 1, 2.00]);
  translate([237, 219, 0])
    cube([1, 1, 2.00]);
  translate([238, 219, 0])
    cube([1, 1, 2.00]);
  translate([239, 219, 0])
    cube([1, 1, 2.00]);
  translate([240, 219, 0])
    cube([1, 1, 2.00]);
  translate([241, 219, 0])
    cube([1, 1, 2.00]);
  translate([242, 219, 0])
    cube([1, 1, 2.00]);
  translate([243, 219, 0])
    cube([1, 1, 2.00]);
  translate([244, 219, 0])
    cube([1, 1, 2.00]);
  translate([245, 219, 0])
    cube([1, 1, 2.00]);
  translate([246, 219, 0])
    cube([1, 1, 1.92]);
  translate([0, 220, 0])
    cube([1, 1, 2.16]);
  translate([1, 220, 0])
    cube([1, 1, 2.16]);
  translate([2, 220, 0])
    cube([1, 1, 2.20]);
  translate([3, 220, 0])
    cube([1, 1, 2.16]);
  translate([4, 220, 0])
    cube([1, 1, 2.20]);
  translate([5, 220, 0])
    cube([1, 1, 2.20]);
  translate([6, 220, 0])
    cube([1, 1, 2.16]);
  translate([7, 220, 0])
    cube([1, 1, 2.20]);
  translate([8, 220, 0])
    cube([1, 1, 2.16]);
  translate([9, 220, 0])
    cube([1, 1, 2.16]);
  translate([10, 220, 0])
    cube([1, 1, 2.16]);
  translate([11, 220, 0])
    cube([1, 1, 2.16]);
  translate([12, 220, 0])
    cube([1, 1, 2.16]);
  translate([13, 220, 0])
    cube([1, 1, 2.16]);
  translate([14, 220, 0])
    cube([1, 1, 2.20]);
  translate([15, 220, 0])
    cube([1, 1, 2.24]);
  translate([16, 220, 0])
    cube([1, 1, 2.16]);
  translate([17, 220, 0])
    cube([1, 1, 2.20]);
  translate([18, 220, 0])
    cube([1, 1, 2.20]);
  translate([19, 220, 0])
    cube([1, 1, 2.20]);
  translate([20, 220, 0])
    cube([1, 1, 2.16]);
  translate([21, 220, 0])
    cube([1, 1, 2.16]);
  translate([22, 220, 0])
    cube([1, 1, 2.20]);
  translate([23, 220, 0])
    cube([1, 1, 2.20]);
  translate([24, 220, 0])
    cube([1, 1, 2.16]);
  translate([25, 220, 0])
    cube([1, 1, 2.16]);
  translate([26, 220, 0])
    cube([1, 1, 2.20]);
  translate([27, 220, 0])
    cube([1, 1, 2.20]);
  translate([28, 220, 0])
    cube([1, 1, 2.20]);
  translate([29, 220, 0])
    cube([1, 1, 2.20]);
  translate([30, 220, 0])
    cube([1, 1, 2.16]);
  translate([31, 220, 0])
    cube([1, 1, 2.16]);
  translate([32, 220, 0])
    cube([1, 1, 2.16]);
  translate([33, 220, 0])
    cube([1, 1, 2.16]);
  translate([34, 220, 0])
    cube([1, 1, 2.16]);
  translate([35, 220, 0])
    cube([1, 1, 2.16]);
  translate([36, 220, 0])
    cube([1, 1, 2.16]);
  translate([37, 220, 0])
    cube([1, 1, 2.16]);
  translate([38, 220, 0])
    cube([1, 1, 2.16]);
  translate([39, 220, 0])
    cube([1, 1, 2.16]);
  translate([40, 220, 0])
    cube([1, 1, 2.16]);
  translate([41, 220, 0])
    cube([1, 1, 2.16]);
  translate([42, 220, 0])
    cube([1, 1, 2.16]);
  translate([43, 220, 0])
    cube([1, 1, 2.16]);
  translate([44, 220, 0])
    cube([1, 1, 2.16]);
  translate([45, 220, 0])
    cube([1, 1, 2.16]);
  translate([46, 220, 0])
    cube([1, 1, 2.16]);
  translate([47, 220, 0])
    cube([1, 1, 2.16]);
  translate([48, 220, 0])
    cube([1, 1, 2.16]);
  translate([49, 220, 0])
    cube([1, 1, 1.14]);
  translate([50, 220, 0])
    cube([1, 1, 7.33]);
  translate([51, 220, 0])
    cube([1, 1, 1.61]);
  translate([52, 220, 0])
    cube([1, 1, 9.41]);
  translate([53, 220, 0])
    cube([1, 1, 9.14]);
  translate([54, 220, 0])
    cube([1, 1, 1.53]);
  translate([55, 220, 0])
    cube([1, 1, 1.18]);
  translate([56, 220, 0])
    cube([1, 1, 1.22]);
  translate([57, 220, 0])
    cube([1, 1, 1.02]);
  translate([58, 220, 0])
    cube([1, 1, 1.88]);
  translate([59, 220, 0])
    cube([1, 1, 4.63]);
  translate([60, 220, 0])
    cube([1, 1, 5.80]);
  translate([61, 220, 0])
    cube([1, 1, 1.96]);
  translate([62, 220, 0])
    cube([1, 1, 1.37]);
  translate([63, 220, 0])
    cube([1, 1, 1.25]);
  translate([64, 220, 0])
    cube([1, 1, 1.37]);
  translate([65, 220, 0])
    cube([1, 1, 0.20]);
  translate([66, 220, 0])
    cube([1, 1, 4.00]);
  translate([67, 220, 0])
    cube([1, 1, 2.35]);
  translate([68, 220, 0])
    cube([1, 1, 2.71]);
  translate([69, 220, 0])
    cube([1, 1, 2.82]);
  translate([70, 220, 0])
    cube([1, 1, 2.98]);
  translate([71, 220, 0])
    cube([1, 1, 3.25]);
  translate([72, 220, 0])
    cube([1, 1, 3.41]);
  translate([73, 220, 0])
    cube([1, 1, 3.45]);
  translate([74, 220, 0])
    cube([1, 1, 3.57]);
  translate([75, 220, 0])
    cube([1, 1, 3.61]);
  translate([76, 220, 0])
    cube([1, 1, 3.88]);
  translate([77, 220, 0])
    cube([1, 1, 4.00]);
  translate([78, 220, 0])
    cube([1, 1, 4.00]);
  translate([79, 220, 0])
    cube([1, 1, 4.08]);
  translate([80, 220, 0])
    cube([1, 1, 4.20]);
  translate([81, 220, 0])
    cube([1, 1, 4.24]);
  translate([82, 220, 0])
    cube([1, 1, 4.35]);
  translate([83, 220, 0])
    cube([1, 1, 4.43]);
  translate([84, 220, 0])
    cube([1, 1, 4.47]);
  translate([85, 220, 0])
    cube([1, 1, 4.63]);
  translate([86, 220, 0])
    cube([1, 1, 4.78]);
  translate([87, 220, 0])
    cube([1, 1, 5.02]);
  translate([88, 220, 0])
    cube([1, 1, 5.14]);
  translate([89, 220, 0])
    cube([1, 1, 5.10]);
  translate([90, 220, 0])
    cube([1, 1, 5.10]);
  translate([91, 220, 0])
    cube([1, 1, 5.10]);
  translate([92, 220, 0])
    cube([1, 1, 5.06]);
  translate([93, 220, 0])
    cube([1, 1, 5.02]);
  translate([94, 220, 0])
    cube([1, 1, 4.98]);
  translate([95, 220, 0])
    cube([1, 1, 4.90]);
  translate([96, 220, 0])
    cube([1, 1, 4.86]);
  translate([97, 220, 0])
    cube([1, 1, 4.86]);
  translate([98, 220, 0])
    cube([1, 1, 4.90]);
  translate([99, 220, 0])
    cube([1, 1, 4.67]);
  translate([100, 220, 0])
    cube([1, 1, 4.55]);
  translate([101, 220, 0])
    cube([1, 1, 4.71]);
  translate([102, 220, 0])
    cube([1, 1, 4.59]);
  translate([103, 220, 0])
    cube([1, 1, 4.59]);
  translate([104, 220, 0])
    cube([1, 1, 4.47]);
  translate([105, 220, 0])
    cube([1, 1, 4.55]);
  translate([106, 220, 0])
    cube([1, 1, 2.47]);
  translate([107, 220, 0])
    cube([1, 1, 1.29]);
  translate([108, 220, 0])
    cube([1, 1, 1.73]);
  translate([109, 220, 0])
    cube([1, 1, 1.88]);
  translate([110, 220, 0])
    cube([1, 1, 1.84]);
  translate([111, 220, 0])
    cube([1, 1, 2.04]);
  translate([112, 220, 0])
    cube([1, 1, 1.84]);
  translate([113, 220, 0])
    cube([1, 1, 1.65]);
  translate([114, 220, 0])
    cube([1, 1, 1.57]);
  translate([115, 220, 0])
    cube([1, 1, 1.45]);
  translate([116, 220, 0])
    cube([1, 1, 1.45]);
  translate([117, 220, 0])
    cube([1, 1, 1.22]);
  translate([118, 220, 0])
    cube([1, 1, 1.25]);
  translate([119, 220, 0])
    cube([1, 1, 1.18]);
  translate([120, 220, 0])
    cube([1, 1, 1.02]);
  translate([121, 220, 0])
    cube([1, 1, 0.75]);
  translate([122, 220, 0])
    cube([1, 1, 0.94]);
  translate([123, 220, 0])
    cube([1, 1, 1.02]);
  translate([124, 220, 0])
    cube([1, 1, 1.25]);
  translate([125, 220, 0])
    cube([1, 1, 1.49]);
  translate([126, 220, 0])
    cube([1, 1, 1.53]);
  translate([127, 220, 0])
    cube([1, 1, 2.12]);
  translate([128, 220, 0])
    cube([1, 1, 3.18]);
  translate([129, 220, 0])
    cube([1, 1, 3.37]);
  translate([130, 220, 0])
    cube([1, 1, 3.49]);
  translate([131, 220, 0])
    cube([1, 1, 3.53]);
  translate([132, 220, 0])
    cube([1, 1, 3.57]);
  translate([133, 220, 0])
    cube([1, 1, 3.69]);
  translate([134, 220, 0])
    cube([1, 1, 3.73]);
  translate([135, 220, 0])
    cube([1, 1, 3.92]);
  translate([136, 220, 0])
    cube([1, 1, 4.12]);
  translate([137, 220, 0])
    cube([1, 1, 4.12]);
  translate([138, 220, 0])
    cube([1, 1, 4.27]);
  translate([139, 220, 0])
    cube([1, 1, 4.35]);
  translate([140, 220, 0])
    cube([1, 1, 4.31]);
  translate([141, 220, 0])
    cube([1, 1, 4.35]);
  translate([142, 220, 0])
    cube([1, 1, 4.39]);
  translate([143, 220, 0])
    cube([1, 1, 4.51]);
  translate([144, 220, 0])
    cube([1, 1, 4.59]);
  translate([145, 220, 0])
    cube([1, 1, 4.75]);
  translate([146, 220, 0])
    cube([1, 1, 4.94]);
  translate([147, 220, 0])
    cube([1, 1, 5.14]);
  translate([148, 220, 0])
    cube([1, 1, 5.25]);
  translate([149, 220, 0])
    cube([1, 1, 5.41]);
  translate([150, 220, 0])
    cube([1, 1, 5.29]);
  translate([151, 220, 0])
    cube([1, 1, 5.33]);
  translate([152, 220, 0])
    cube([1, 1, 5.18]);
  translate([153, 220, 0])
    cube([1, 1, 5.14]);
  translate([154, 220, 0])
    cube([1, 1, 5.06]);
  translate([155, 220, 0])
    cube([1, 1, 5.14]);
  translate([156, 220, 0])
    cube([1, 1, 5.22]);
  translate([157, 220, 0])
    cube([1, 1, 5.33]);
  translate([158, 220, 0])
    cube([1, 1, 5.49]);
  translate([159, 220, 0])
    cube([1, 1, 5.61]);
  translate([160, 220, 0])
    cube([1, 1, 5.53]);
  translate([161, 220, 0])
    cube([1, 1, 5.14]);
  translate([162, 220, 0])
    cube([1, 1, 4.63]);
  translate([163, 220, 0])
    cube([1, 1, 4.35]);
  translate([164, 220, 0])
    cube([1, 1, 0.86]);
  translate([165, 220, 0])
    cube([1, 1, 1.06]);
  translate([166, 220, 0])
    cube([1, 1, 1.18]);
  translate([167, 220, 0])
    cube([1, 1, 1.25]);
  translate([168, 220, 0])
    cube([1, 1, 1.29]);
  translate([169, 220, 0])
    cube([1, 1, 1.29]);
  translate([170, 220, 0])
    cube([1, 1, 3.18]);
  translate([171, 220, 0])
    cube([1, 1, 2.86]);
  translate([172, 220, 0])
    cube([1, 1, 1.69]);
  translate([173, 220, 0])
    cube([1, 1, 1.53]);
  translate([174, 220, 0])
    cube([1, 1, 3.06]);
  translate([175, 220, 0])
    cube([1, 1, 2.31]);
  translate([176, 220, 0])
    cube([1, 1, 2.00]);
  translate([177, 220, 0])
    cube([1, 1, 2.04]);
  translate([178, 220, 0])
    cube([1, 1, 2.04]);
  translate([179, 220, 0])
    cube([1, 1, 2.04]);
  translate([180, 220, 0])
    cube([1, 1, 2.00]);
  translate([181, 220, 0])
    cube([1, 1, 2.04]);
  translate([182, 220, 0])
    cube([1, 1, 2.00]);
  translate([183, 220, 0])
    cube([1, 1, 2.00]);
  translate([184, 220, 0])
    cube([1, 1, 2.04]);
  translate([185, 220, 0])
    cube([1, 1, 2.04]);
  translate([186, 220, 0])
    cube([1, 1, 2.04]);
  translate([187, 220, 0])
    cube([1, 1, 2.08]);
  translate([188, 220, 0])
    cube([1, 1, 2.04]);
  translate([189, 220, 0])
    cube([1, 1, 2.04]);
  translate([190, 220, 0])
    cube([1, 1, 2.04]);
  translate([191, 220, 0])
    cube([1, 1, 2.04]);
  translate([192, 220, 0])
    cube([1, 1, 2.00]);
  translate([193, 220, 0])
    cube([1, 1, 2.04]);
  translate([194, 220, 0])
    cube([1, 1, 2.04]);
  translate([195, 220, 0])
    cube([1, 1, 2.04]);
  translate([196, 220, 0])
    cube([1, 1, 2.04]);
  translate([197, 220, 0])
    cube([1, 1, 2.04]);
  translate([198, 220, 0])
    cube([1, 1, 2.04]);
  translate([199, 220, 0])
    cube([1, 1, 2.04]);
  translate([200, 220, 0])
    cube([1, 1, 2.04]);
  translate([201, 220, 0])
    cube([1, 1, 2.04]);
  translate([202, 220, 0])
    cube([1, 1, 2.04]);
  translate([203, 220, 0])
    cube([1, 1, 2.04]);
  translate([204, 220, 0])
    cube([1, 1, 2.04]);
  translate([205, 220, 0])
    cube([1, 1, 2.04]);
  translate([206, 220, 0])
    cube([1, 1, 2.04]);
  translate([207, 220, 0])
    cube([1, 1, 2.04]);
  translate([208, 220, 0])
    cube([1, 1, 2.04]);
  translate([209, 220, 0])
    cube([1, 1, 2.04]);
  translate([210, 220, 0])
    cube([1, 1, 2.04]);
  translate([211, 220, 0])
    cube([1, 1, 2.04]);
  translate([212, 220, 0])
    cube([1, 1, 2.04]);
  translate([213, 220, 0])
    cube([1, 1, 2.04]);
  translate([214, 220, 0])
    cube([1, 1, 2.04]);
  translate([215, 220, 0])
    cube([1, 1, 2.04]);
  translate([216, 220, 0])
    cube([1, 1, 2.04]);
  translate([217, 220, 0])
    cube([1, 1, 2.00]);
  translate([218, 220, 0])
    cube([1, 1, 2.00]);
  translate([219, 220, 0])
    cube([1, 1, 2.00]);
  translate([220, 220, 0])
    cube([1, 1, 2.04]);
  translate([221, 220, 0])
    cube([1, 1, 2.04]);
  translate([222, 220, 0])
    cube([1, 1, 2.00]);
  translate([223, 220, 0])
    cube([1, 1, 2.04]);
  translate([224, 220, 0])
    cube([1, 1, 2.00]);
  translate([225, 220, 0])
    cube([1, 1, 2.00]);
  translate([226, 220, 0])
    cube([1, 1, 2.00]);
  translate([227, 220, 0])
    cube([1, 1, 1.96]);
  translate([228, 220, 0])
    cube([1, 1, 2.00]);
  translate([229, 220, 0])
    cube([1, 1, 2.00]);
  translate([230, 220, 0])
    cube([1, 1, 1.96]);
  translate([231, 220, 0])
    cube([1, 1, 1.96]);
  translate([232, 220, 0])
    cube([1, 1, 2.00]);
  translate([233, 220, 0])
    cube([1, 1, 1.96]);
  translate([234, 220, 0])
    cube([1, 1, 2.04]);
  translate([235, 220, 0])
    cube([1, 1, 2.00]);
  translate([236, 220, 0])
    cube([1, 1, 2.00]);
  translate([237, 220, 0])
    cube([1, 1, 2.00]);
  translate([238, 220, 0])
    cube([1, 1, 2.00]);
  translate([239, 220, 0])
    cube([1, 1, 2.00]);
  translate([240, 220, 0])
    cube([1, 1, 2.00]);
  translate([241, 220, 0])
    cube([1, 1, 2.00]);
  translate([242, 220, 0])
    cube([1, 1, 2.00]);
  translate([243, 220, 0])
    cube([1, 1, 2.00]);
  translate([244, 220, 0])
    cube([1, 1, 2.00]);
  translate([245, 220, 0])
    cube([1, 1, 2.00]);
  translate([246, 220, 0])
    cube([1, 1, 1.96]);
  translate([0, 221, 0])
    cube([1, 1, 2.20]);
  translate([1, 221, 0])
    cube([1, 1, 2.12]);
  translate([2, 221, 0])
    cube([1, 1, 2.16]);
  translate([3, 221, 0])
    cube([1, 1, 2.16]);
  translate([4, 221, 0])
    cube([1, 1, 2.16]);
  translate([5, 221, 0])
    cube([1, 1, 2.20]);
  translate([6, 221, 0])
    cube([1, 1, 2.20]);
  translate([7, 221, 0])
    cube([1, 1, 2.20]);
  translate([8, 221, 0])
    cube([1, 1, 2.20]);
  translate([9, 221, 0])
    cube([1, 1, 2.16]);
  translate([10, 221, 0])
    cube([1, 1, 2.16]);
  translate([11, 221, 0])
    cube([1, 1, 2.16]);
  translate([12, 221, 0])
    cube([1, 1, 2.20]);
  translate([13, 221, 0])
    cube([1, 1, 2.20]);
  translate([14, 221, 0])
    cube([1, 1, 2.20]);
  translate([15, 221, 0])
    cube([1, 1, 2.20]);
  translate([16, 221, 0])
    cube([1, 1, 2.20]);
  translate([17, 221, 0])
    cube([1, 1, 2.16]);
  translate([18, 221, 0])
    cube([1, 1, 2.20]);
  translate([19, 221, 0])
    cube([1, 1, 2.20]);
  translate([20, 221, 0])
    cube([1, 1, 2.20]);
  translate([21, 221, 0])
    cube([1, 1, 2.20]);
  translate([22, 221, 0])
    cube([1, 1, 2.20]);
  translate([23, 221, 0])
    cube([1, 1, 2.20]);
  translate([24, 221, 0])
    cube([1, 1, 2.20]);
  translate([25, 221, 0])
    cube([1, 1, 2.16]);
  translate([26, 221, 0])
    cube([1, 1, 2.20]);
  translate([27, 221, 0])
    cube([1, 1, 2.16]);
  translate([28, 221, 0])
    cube([1, 1, 2.16]);
  translate([29, 221, 0])
    cube([1, 1, 2.16]);
  translate([30, 221, 0])
    cube([1, 1, 2.16]);
  translate([31, 221, 0])
    cube([1, 1, 2.16]);
  translate([32, 221, 0])
    cube([1, 1, 2.16]);
  translate([33, 221, 0])
    cube([1, 1, 2.16]);
  translate([34, 221, 0])
    cube([1, 1, 2.16]);
  translate([35, 221, 0])
    cube([1, 1, 2.12]);
  translate([36, 221, 0])
    cube([1, 1, 2.16]);
  translate([37, 221, 0])
    cube([1, 1, 2.16]);
  translate([38, 221, 0])
    cube([1, 1, 2.16]);
  translate([39, 221, 0])
    cube([1, 1, 2.16]);
  translate([40, 221, 0])
    cube([1, 1, 2.16]);
  translate([41, 221, 0])
    cube([1, 1, 2.16]);
  translate([42, 221, 0])
    cube([1, 1, 2.16]);
  translate([43, 221, 0])
    cube([1, 1, 2.16]);
  translate([44, 221, 0])
    cube([1, 1, 2.16]);
  translate([45, 221, 0])
    cube([1, 1, 2.16]);
  translate([46, 221, 0])
    cube([1, 1, 2.16]);
  translate([47, 221, 0])
    cube([1, 1, 2.16]);
  translate([48, 221, 0])
    cube([1, 1, 2.12]);
  translate([49, 221, 0])
    cube([1, 1, 5.76]);
  translate([50, 221, 0])
    cube([1, 1, 0.90]);
  translate([51, 221, 0])
    cube([1, 1, 7.84]);
  translate([52, 221, 0])
    cube([1, 1, 8.86]);
  translate([53, 221, 0])
    cube([1, 1, 7.69]);
  translate([54, 221, 0])
    cube([1, 1, 1.29]);
  translate([55, 221, 0])
    cube([1, 1, 1.18]);
  translate([56, 221, 0])
    cube([1, 1, 1.29]);
  translate([57, 221, 0])
    cube([1, 1, 1.65]);
  translate([58, 221, 0])
    cube([1, 1, 2.20]);
  translate([59, 221, 0])
    cube([1, 1, 4.51]);
  translate([60, 221, 0])
    cube([1, 1, 3.29]);
  translate([61, 221, 0])
    cube([1, 1, 1.41]);
  translate([62, 221, 0])
    cube([1, 1, 1.33]);
  translate([63, 221, 0])
    cube([1, 1, 1.18]);
  translate([64, 221, 0])
    cube([1, 1, 0.16]);
  translate([65, 221, 0])
    cube([1, 1, 0.75]);
  translate([66, 221, 0])
    cube([1, 1, 1.80]);
  translate([67, 221, 0])
    cube([1, 1, 2.35]);
  translate([68, 221, 0])
    cube([1, 1, 2.51]);
  translate([69, 221, 0])
    cube([1, 1, 2.90]);
  translate([70, 221, 0])
    cube([1, 1, 3.10]);
  translate([71, 221, 0])
    cube([1, 1, 3.22]);
  translate([72, 221, 0])
    cube([1, 1, 3.37]);
  translate([73, 221, 0])
    cube([1, 1, 3.45]);
  translate([74, 221, 0])
    cube([1, 1, 3.65]);
  translate([75, 221, 0])
    cube([1, 1, 3.76]);
  translate([76, 221, 0])
    cube([1, 1, 3.92]);
  translate([77, 221, 0])
    cube([1, 1, 4.00]);
  translate([78, 221, 0])
    cube([1, 1, 4.04]);
  translate([79, 221, 0])
    cube([1, 1, 4.12]);
  translate([80, 221, 0])
    cube([1, 1, 4.24]);
  translate([81, 221, 0])
    cube([1, 1, 4.27]);
  translate([82, 221, 0])
    cube([1, 1, 4.35]);
  translate([83, 221, 0])
    cube([1, 1, 4.43]);
  translate([84, 221, 0])
    cube([1, 1, 4.47]);
  translate([85, 221, 0])
    cube([1, 1, 4.63]);
  translate([86, 221, 0])
    cube([1, 1, 4.82]);
  translate([87, 221, 0])
    cube([1, 1, 4.98]);
  translate([88, 221, 0])
    cube([1, 1, 5.14]);
  translate([89, 221, 0])
    cube([1, 1, 5.10]);
  translate([90, 221, 0])
    cube([1, 1, 5.06]);
  translate([91, 221, 0])
    cube([1, 1, 5.06]);
  translate([92, 221, 0])
    cube([1, 1, 5.02]);
  translate([93, 221, 0])
    cube([1, 1, 4.94]);
  translate([94, 221, 0])
    cube([1, 1, 4.94]);
  translate([95, 221, 0])
    cube([1, 1, 4.78]);
  translate([96, 221, 0])
    cube([1, 1, 4.82]);
  translate([97, 221, 0])
    cube([1, 1, 4.75]);
  translate([98, 221, 0])
    cube([1, 1, 4.75]);
  translate([99, 221, 0])
    cube([1, 1, 4.59]);
  translate([100, 221, 0])
    cube([1, 1, 4.59]);
  translate([101, 221, 0])
    cube([1, 1, 4.55]);
  translate([102, 221, 0])
    cube([1, 1, 4.51]);
  translate([103, 221, 0])
    cube([1, 1, 4.55]);
  translate([104, 221, 0])
    cube([1, 1, 4.47]);
  translate([105, 221, 0])
    cube([1, 1, 4.47]);
  translate([106, 221, 0])
    cube([1, 1, 4.47]);
  translate([107, 221, 0])
    cube([1, 1, 4.71]);
  translate([108, 221, 0])
    cube([1, 1, 1.37]);
  translate([109, 221, 0])
    cube([1, 1, 1.73]);
  translate([110, 221, 0])
    cube([1, 1, 2.00]);
  translate([111, 221, 0])
    cube([1, 1, 2.00]);
  translate([112, 221, 0])
    cube([1, 1, 2.04]);
  translate([113, 221, 0])
    cube([1, 1, 1.65]);
  translate([114, 221, 0])
    cube([1, 1, 1.41]);
  translate([115, 221, 0])
    cube([1, 1, 1.10]);
  translate([116, 221, 0])
    cube([1, 1, 1.02]);
  translate([117, 221, 0])
    cube([1, 1, 1.10]);
  translate([118, 221, 0])
    cube([1, 1, 1.29]);
  translate([119, 221, 0])
    cube([1, 1, 1.02]);
  translate([120, 221, 0])
    cube([1, 1, 0.78]);
  translate([121, 221, 0])
    cube([1, 1, 0.67]);
  translate([122, 221, 0])
    cube([1, 1, 1.29]);
  translate([123, 221, 0])
    cube([1, 1, 1.10]);
  translate([124, 221, 0])
    cube([1, 1, 1.29]);
  translate([125, 221, 0])
    cube([1, 1, 1.80]);
  translate([126, 221, 0])
    cube([1, 1, 2.67]);
  translate([127, 221, 0])
    cube([1, 1, 3.18]);
  translate([128, 221, 0])
    cube([1, 1, 3.22]);
  translate([129, 221, 0])
    cube([1, 1, 3.37]);
  translate([130, 221, 0])
    cube([1, 1, 3.41]);
  translate([131, 221, 0])
    cube([1, 1, 3.49]);
  translate([132, 221, 0])
    cube([1, 1, 3.49]);
  translate([133, 221, 0])
    cube([1, 1, 3.61]);
  translate([134, 221, 0])
    cube([1, 1, 3.73]);
  translate([135, 221, 0])
    cube([1, 1, 3.88]);
  translate([136, 221, 0])
    cube([1, 1, 4.08]);
  translate([137, 221, 0])
    cube([1, 1, 4.12]);
  translate([138, 221, 0])
    cube([1, 1, 4.16]);
  translate([139, 221, 0])
    cube([1, 1, 4.31]);
  translate([140, 221, 0])
    cube([1, 1, 4.31]);
  translate([141, 221, 0])
    cube([1, 1, 4.31]);
  translate([142, 221, 0])
    cube([1, 1, 4.35]);
  translate([143, 221, 0])
    cube([1, 1, 4.47]);
  translate([144, 221, 0])
    cube([1, 1, 4.59]);
  translate([145, 221, 0])
    cube([1, 1, 4.75]);
  translate([146, 221, 0])
    cube([1, 1, 5.06]);
  translate([147, 221, 0])
    cube([1, 1, 5.14]);
  translate([148, 221, 0])
    cube([1, 1, 5.29]);
  translate([149, 221, 0])
    cube([1, 1, 5.37]);
  translate([150, 221, 0])
    cube([1, 1, 5.29]);
  translate([151, 221, 0])
    cube([1, 1, 5.33]);
  translate([152, 221, 0])
    cube([1, 1, 5.14]);
  translate([153, 221, 0])
    cube([1, 1, 5.10]);
  translate([154, 221, 0])
    cube([1, 1, 5.10]);
  translate([155, 221, 0])
    cube([1, 1, 5.22]);
  translate([156, 221, 0])
    cube([1, 1, 5.18]);
  translate([157, 221, 0])
    cube([1, 1, 5.33]);
  translate([158, 221, 0])
    cube([1, 1, 5.53]);
  translate([159, 221, 0])
    cube([1, 1, 5.76]);
  translate([160, 221, 0])
    cube([1, 1, 5.61]);
  translate([161, 221, 0])
    cube([1, 1, 5.25]);
  translate([162, 221, 0])
    cube([1, 1, 4.67]);
  translate([163, 221, 0])
    cube([1, 1, 4.39]);
  translate([164, 221, 0])
    cube([1, 1, 0.67]);
  translate([165, 221, 0])
    cube([1, 1, 1.14]);
  translate([166, 221, 0])
    cube([1, 1, 1.14]);
  translate([167, 221, 0])
    cube([1, 1, 1.22]);
  translate([168, 221, 0])
    cube([1, 1, 1.33]);
  translate([169, 221, 0])
    cube([1, 1, 1.29]);
  translate([170, 221, 0])
    cube([1, 1, 3.06]);
  translate([171, 221, 0])
    cube([1, 1, 4.43]);
  translate([172, 221, 0])
    cube([1, 1, 2.00]);
  translate([173, 221, 0])
    cube([1, 1, 1.57]);
  translate([174, 221, 0])
    cube([1, 1, 2.31]);
  translate([175, 221, 0])
    cube([1, 1, 4.43]);
  translate([176, 221, 0])
    cube([1, 1, 2.00]);
  translate([177, 221, 0])
    cube([1, 1, 2.04]);
  translate([178, 221, 0])
    cube([1, 1, 2.04]);
  translate([179, 221, 0])
    cube([1, 1, 2.00]);
  translate([180, 221, 0])
    cube([1, 1, 2.04]);
  translate([181, 221, 0])
    cube([1, 1, 2.04]);
  translate([182, 221, 0])
    cube([1, 1, 2.00]);
  translate([183, 221, 0])
    cube([1, 1, 2.04]);
  translate([184, 221, 0])
    cube([1, 1, 2.04]);
  translate([185, 221, 0])
    cube([1, 1, 2.04]);
  translate([186, 221, 0])
    cube([1, 1, 2.04]);
  translate([187, 221, 0])
    cube([1, 1, 2.00]);
  translate([188, 221, 0])
    cube([1, 1, 2.04]);
  translate([189, 221, 0])
    cube([1, 1, 2.04]);
  translate([190, 221, 0])
    cube([1, 1, 2.04]);
  translate([191, 221, 0])
    cube([1, 1, 2.04]);
  translate([192, 221, 0])
    cube([1, 1, 2.04]);
  translate([193, 221, 0])
    cube([1, 1, 2.04]);
  translate([194, 221, 0])
    cube([1, 1, 2.04]);
  translate([195, 221, 0])
    cube([1, 1, 2.04]);
  translate([196, 221, 0])
    cube([1, 1, 2.00]);
  translate([197, 221, 0])
    cube([1, 1, 2.04]);
  translate([198, 221, 0])
    cube([1, 1, 2.00]);
  translate([199, 221, 0])
    cube([1, 1, 2.04]);
  translate([200, 221, 0])
    cube([1, 1, 2.04]);
  translate([201, 221, 0])
    cube([1, 1, 2.04]);
  translate([202, 221, 0])
    cube([1, 1, 2.04]);
  translate([203, 221, 0])
    cube([1, 1, 2.04]);
  translate([204, 221, 0])
    cube([1, 1, 2.00]);
  translate([205, 221, 0])
    cube([1, 1, 2.04]);
  translate([206, 221, 0])
    cube([1, 1, 2.04]);
  translate([207, 221, 0])
    cube([1, 1, 2.04]);
  translate([208, 221, 0])
    cube([1, 1, 2.04]);
  translate([209, 221, 0])
    cube([1, 1, 2.04]);
  translate([210, 221, 0])
    cube([1, 1, 2.04]);
  translate([211, 221, 0])
    cube([1, 1, 2.04]);
  translate([212, 221, 0])
    cube([1, 1, 2.04]);
  translate([213, 221, 0])
    cube([1, 1, 2.04]);
  translate([214, 221, 0])
    cube([1, 1, 2.04]);
  translate([215, 221, 0])
    cube([1, 1, 2.04]);
  translate([216, 221, 0])
    cube([1, 1, 2.00]);
  translate([217, 221, 0])
    cube([1, 1, 2.00]);
  translate([218, 221, 0])
    cube([1, 1, 2.04]);
  translate([219, 221, 0])
    cube([1, 1, 2.00]);
  translate([220, 221, 0])
    cube([1, 1, 2.00]);
  translate([221, 221, 0])
    cube([1, 1, 2.04]);
  translate([222, 221, 0])
    cube([1, 1, 2.04]);
  translate([223, 221, 0])
    cube([1, 1, 2.04]);
  translate([224, 221, 0])
    cube([1, 1, 2.00]);
  translate([225, 221, 0])
    cube([1, 1, 2.00]);
  translate([226, 221, 0])
    cube([1, 1, 2.00]);
  translate([227, 221, 0])
    cube([1, 1, 2.00]);
  translate([228, 221, 0])
    cube([1, 1, 2.00]);
  translate([229, 221, 0])
    cube([1, 1, 2.00]);
  translate([230, 221, 0])
    cube([1, 1, 2.00]);
  translate([231, 221, 0])
    cube([1, 1, 2.00]);
  translate([232, 221, 0])
    cube([1, 1, 2.00]);
  translate([233, 221, 0])
    cube([1, 1, 2.00]);
  translate([234, 221, 0])
    cube([1, 1, 2.00]);
  translate([235, 221, 0])
    cube([1, 1, 2.00]);
  translate([236, 221, 0])
    cube([1, 1, 2.00]);
  translate([237, 221, 0])
    cube([1, 1, 2.00]);
  translate([238, 221, 0])
    cube([1, 1, 2.00]);
  translate([239, 221, 0])
    cube([1, 1, 2.00]);
  translate([240, 221, 0])
    cube([1, 1, 2.00]);
  translate([241, 221, 0])
    cube([1, 1, 2.00]);
  translate([242, 221, 0])
    cube([1, 1, 2.00]);
  translate([243, 221, 0])
    cube([1, 1, 2.00]);
  translate([244, 221, 0])
    cube([1, 1, 2.00]);
  translate([245, 221, 0])
    cube([1, 1, 2.00]);
  translate([246, 221, 0])
    cube([1, 1, 2.00]);
  translate([0, 222, 0])
    cube([1, 1, 2.20]);
  translate([1, 222, 0])
    cube([1, 1, 2.20]);
  translate([2, 222, 0])
    cube([1, 1, 2.20]);
  translate([3, 222, 0])
    cube([1, 1, 2.20]);
  translate([4, 222, 0])
    cube([1, 1, 2.16]);
  translate([5, 222, 0])
    cube([1, 1, 2.20]);
  translate([6, 222, 0])
    cube([1, 1, 2.20]);
  translate([7, 222, 0])
    cube([1, 1, 2.20]);
  translate([8, 222, 0])
    cube([1, 1, 2.20]);
  translate([9, 222, 0])
    cube([1, 1, 2.16]);
  translate([10, 222, 0])
    cube([1, 1, 2.16]);
  translate([11, 222, 0])
    cube([1, 1, 2.16]);
  translate([12, 222, 0])
    cube([1, 1, 2.20]);
  translate([13, 222, 0])
    cube([1, 1, 2.20]);
  translate([14, 222, 0])
    cube([1, 1, 2.20]);
  translate([15, 222, 0])
    cube([1, 1, 2.20]);
  translate([16, 222, 0])
    cube([1, 1, 2.20]);
  translate([17, 222, 0])
    cube([1, 1, 2.16]);
  translate([18, 222, 0])
    cube([1, 1, 2.20]);
  translate([19, 222, 0])
    cube([1, 1, 2.20]);
  translate([20, 222, 0])
    cube([1, 1, 2.20]);
  translate([21, 222, 0])
    cube([1, 1, 2.20]);
  translate([22, 222, 0])
    cube([1, 1, 2.20]);
  translate([23, 222, 0])
    cube([1, 1, 2.20]);
  translate([24, 222, 0])
    cube([1, 1, 2.20]);
  translate([25, 222, 0])
    cube([1, 1, 2.16]);
  translate([26, 222, 0])
    cube([1, 1, 2.20]);
  translate([27, 222, 0])
    cube([1, 1, 2.16]);
  translate([28, 222, 0])
    cube([1, 1, 2.16]);
  translate([29, 222, 0])
    cube([1, 1, 2.16]);
  translate([30, 222, 0])
    cube([1, 1, 2.16]);
  translate([31, 222, 0])
    cube([1, 1, 2.16]);
  translate([32, 222, 0])
    cube([1, 1, 2.16]);
  translate([33, 222, 0])
    cube([1, 1, 2.20]);
  translate([34, 222, 0])
    cube([1, 1, 2.20]);
  translate([35, 222, 0])
    cube([1, 1, 2.12]);
  translate([36, 222, 0])
    cube([1, 1, 2.16]);
  translate([37, 222, 0])
    cube([1, 1, 2.16]);
  translate([38, 222, 0])
    cube([1, 1, 2.16]);
  translate([39, 222, 0])
    cube([1, 1, 2.16]);
  translate([40, 222, 0])
    cube([1, 1, 2.16]);
  translate([41, 222, 0])
    cube([1, 1, 2.16]);
  translate([42, 222, 0])
    cube([1, 1, 2.16]);
  translate([43, 222, 0])
    cube([1, 1, 2.16]);
  translate([44, 222, 0])
    cube([1, 1, 2.16]);
  translate([45, 222, 0])
    cube([1, 1, 2.16]);
  translate([46, 222, 0])
    cube([1, 1, 2.16]);
  translate([47, 222, 0])
    cube([1, 1, 2.16]);
  translate([48, 222, 0])
    cube([1, 1, 2.16]);
  translate([49, 222, 0])
    cube([1, 1, 6.59]);
  translate([50, 222, 0])
    cube([1, 1, 0.94]);
  translate([51, 222, 0])
    cube([1, 1, 8.51]);
  translate([52, 222, 0])
    cube([1, 1, 9.18]);
  translate([53, 222, 0])
    cube([1, 1, 6.12]);
  translate([54, 222, 0])
    cube([1, 1, 1.22]);
  translate([55, 222, 0])
    cube([1, 1, 1.29]);
  translate([56, 222, 0])
    cube([1, 1, 1.33]);
  translate([57, 222, 0])
    cube([1, 1, 1.61]);
  translate([58, 222, 0])
    cube([1, 1, 2.94]);
  translate([59, 222, 0])
    cube([1, 1, 5.80]);
  translate([60, 222, 0])
    cube([1, 1, 3.92]);
  translate([61, 222, 0])
    cube([1, 1, 1.80]);
  translate([62, 222, 0])
    cube([1, 1, 1.41]);
  translate([63, 222, 0])
    cube([1, 1, 1.10]);
  translate([64, 222, 0])
    cube([1, 1, 0.55]);
  translate([65, 222, 0])
    cube([1, 1, 3.92]);
  translate([66, 222, 0])
    cube([1, 1, 2.04]);
  translate([67, 222, 0])
    cube([1, 1, 2.35]);
  translate([68, 222, 0])
    cube([1, 1, 2.51]);
  translate([69, 222, 0])
    cube([1, 1, 2.90]);
  translate([70, 222, 0])
    cube([1, 1, 3.06]);
  translate([71, 222, 0])
    cube([1, 1, 3.29]);
  translate([72, 222, 0])
    cube([1, 1, 3.37]);
  translate([73, 222, 0])
    cube([1, 1, 3.49]);
  translate([74, 222, 0])
    cube([1, 1, 3.73]);
  translate([75, 222, 0])
    cube([1, 1, 3.80]);
  translate([76, 222, 0])
    cube([1, 1, 3.92]);
  translate([77, 222, 0])
    cube([1, 1, 4.00]);
  translate([78, 222, 0])
    cube([1, 1, 4.04]);
  translate([79, 222, 0])
    cube([1, 1, 4.12]);
  translate([80, 222, 0])
    cube([1, 1, 4.31]);
  translate([81, 222, 0])
    cube([1, 1, 4.27]);
  translate([82, 222, 0])
    cube([1, 1, 4.35]);
  translate([83, 222, 0])
    cube([1, 1, 4.43]);
  translate([84, 222, 0])
    cube([1, 1, 4.51]);
  translate([85, 222, 0])
    cube([1, 1, 4.67]);
  translate([86, 222, 0])
    cube([1, 1, 4.94]);
  translate([87, 222, 0])
    cube([1, 1, 5.10]);
  translate([88, 222, 0])
    cube([1, 1, 5.25]);
  translate([89, 222, 0])
    cube([1, 1, 5.22]);
  translate([90, 222, 0])
    cube([1, 1, 5.06]);
  translate([91, 222, 0])
    cube([1, 1, 5.02]);
  translate([92, 222, 0])
    cube([1, 1, 4.94]);
  translate([93, 222, 0])
    cube([1, 1, 4.86]);
  translate([94, 222, 0])
    cube([1, 1, 4.86]);
  translate([95, 222, 0])
    cube([1, 1, 4.86]);
  translate([96, 222, 0])
    cube([1, 1, 4.78]);
  translate([97, 222, 0])
    cube([1, 1, 4.67]);
  translate([98, 222, 0])
    cube([1, 1, 4.67]);
  translate([99, 222, 0])
    cube([1, 1, 4.51]);
  translate([100, 222, 0])
    cube([1, 1, 4.47]);
  translate([101, 222, 0])
    cube([1, 1, 4.43]);
  translate([102, 222, 0])
    cube([1, 1, 4.39]);
  translate([103, 222, 0])
    cube([1, 1, 4.43]);
  translate([104, 222, 0])
    cube([1, 1, 4.35]);
  translate([105, 222, 0])
    cube([1, 1, 4.31]);
  translate([106, 222, 0])
    cube([1, 1, 4.43]);
  translate([107, 222, 0])
    cube([1, 1, 4.63]);
  translate([108, 222, 0])
    cube([1, 1, 4.16]);
  translate([109, 222, 0])
    cube([1, 1, 1.22]);
  translate([110, 222, 0])
    cube([1, 1, 1.84]);
  translate([111, 222, 0])
    cube([1, 1, 2.08]);
  translate([112, 222, 0])
    cube([1, 1, 1.76]);
  translate([113, 222, 0])
    cube([1, 1, 1.53]);
  translate([114, 222, 0])
    cube([1, 1, 1.10]);
  translate([115, 222, 0])
    cube([1, 1, 0.98]);
  translate([116, 222, 0])
    cube([1, 1, 1.02]);
  translate([117, 222, 0])
    cube([1, 1, 1.14]);
  translate([118, 222, 0])
    cube([1, 1, 0.71]);
  translate([119, 222, 0])
    cube([1, 1, 0.86]);
  translate([120, 222, 0])
    cube([1, 1, 0.90]);
  translate([121, 222, 0])
    cube([1, 1, 1.22]);
  translate([122, 222, 0])
    cube([1, 1, 0.98]);
  translate([123, 222, 0])
    cube([1, 1, 1.57]);
  translate([124, 222, 0])
    cube([1, 1, 2.43]);
  translate([125, 222, 0])
    cube([1, 1, 2.71]);
  translate([126, 222, 0])
    cube([1, 1, 2.98]);
  translate([127, 222, 0])
    cube([1, 1, 3.02]);
  translate([128, 222, 0])
    cube([1, 1, 3.18]);
  translate([129, 222, 0])
    cube([1, 1, 3.33]);
  translate([130, 222, 0])
    cube([1, 1, 3.37]);
  translate([131, 222, 0])
    cube([1, 1, 3.41]);
  translate([132, 222, 0])
    cube([1, 1, 3.45]);
  translate([133, 222, 0])
    cube([1, 1, 3.57]);
  translate([134, 222, 0])
    cube([1, 1, 3.65]);
  translate([135, 222, 0])
    cube([1, 1, 3.84]);
  translate([136, 222, 0])
    cube([1, 1, 4.00]);
  translate([137, 222, 0])
    cube([1, 1, 4.04]);
  translate([138, 222, 0])
    cube([1, 1, 4.12]);
  translate([139, 222, 0])
    cube([1, 1, 4.16]);
  translate([140, 222, 0])
    cube([1, 1, 4.24]);
  translate([141, 222, 0])
    cube([1, 1, 4.35]);
  translate([142, 222, 0])
    cube([1, 1, 4.35]);
  translate([143, 222, 0])
    cube([1, 1, 4.47]);
  translate([144, 222, 0])
    cube([1, 1, 4.59]);
  translate([145, 222, 0])
    cube([1, 1, 4.75]);
  translate([146, 222, 0])
    cube([1, 1, 5.06]);
  translate([147, 222, 0])
    cube([1, 1, 5.22]);
  translate([148, 222, 0])
    cube([1, 1, 5.29]);
  translate([149, 222, 0])
    cube([1, 1, 5.37]);
  translate([150, 222, 0])
    cube([1, 1, 5.37]);
  translate([151, 222, 0])
    cube([1, 1, 5.18]);
  translate([152, 222, 0])
    cube([1, 1, 5.14]);
  translate([153, 222, 0])
    cube([1, 1, 5.10]);
  translate([154, 222, 0])
    cube([1, 1, 5.10]);
  translate([155, 222, 0])
    cube([1, 1, 5.22]);
  translate([156, 222, 0])
    cube([1, 1, 5.25]);
  translate([157, 222, 0])
    cube([1, 1, 5.29]);
  translate([158, 222, 0])
    cube([1, 1, 5.41]);
  translate([159, 222, 0])
    cube([1, 1, 5.65]);
  translate([160, 222, 0])
    cube([1, 1, 5.73]);
  translate([161, 222, 0])
    cube([1, 1, 5.41]);
  translate([162, 222, 0])
    cube([1, 1, 4.82]);
  translate([163, 222, 0])
    cube([1, 1, 4.43]);
  translate([164, 222, 0])
    cube([1, 1, 0.55]);
  translate([165, 222, 0])
    cube([1, 1, 1.06]);
  translate([166, 222, 0])
    cube([1, 1, 1.14]);
  translate([167, 222, 0])
    cube([1, 1, 1.22]);
  translate([168, 222, 0])
    cube([1, 1, 1.29]);
  translate([169, 222, 0])
    cube([1, 1, 1.18]);
  translate([170, 222, 0])
    cube([1, 1, 1.92]);
  translate([171, 222, 0])
    cube([1, 1, 5.06]);
  translate([172, 222, 0])
    cube([1, 1, 2.24]);
  translate([173, 222, 0])
    cube([1, 1, 1.69]);
  translate([174, 222, 0])
    cube([1, 1, 1.96]);
  translate([175, 222, 0])
    cube([1, 1, 7.14]);
  translate([176, 222, 0])
    cube([1, 1, 2.20]);
  translate([177, 222, 0])
    cube([1, 1, 2.00]);
  translate([178, 222, 0])
    cube([1, 1, 2.00]);
  translate([179, 222, 0])
    cube([1, 1, 2.00]);
  translate([180, 222, 0])
    cube([1, 1, 2.04]);
  translate([181, 222, 0])
    cube([1, 1, 2.04]);
  translate([182, 222, 0])
    cube([1, 1, 2.00]);
  translate([183, 222, 0])
    cube([1, 1, 2.04]);
  translate([184, 222, 0])
    cube([1, 1, 2.04]);
  translate([185, 222, 0])
    cube([1, 1, 2.00]);
  translate([186, 222, 0])
    cube([1, 1, 2.00]);
  translate([187, 222, 0])
    cube([1, 1, 2.00]);
  translate([188, 222, 0])
    cube([1, 1, 2.04]);
  translate([189, 222, 0])
    cube([1, 1, 2.04]);
  translate([190, 222, 0])
    cube([1, 1, 2.04]);
  translate([191, 222, 0])
    cube([1, 1, 2.04]);
  translate([192, 222, 0])
    cube([1, 1, 2.04]);
  translate([193, 222, 0])
    cube([1, 1, 2.04]);
  translate([194, 222, 0])
    cube([1, 1, 2.04]);
  translate([195, 222, 0])
    cube([1, 1, 2.04]);
  translate([196, 222, 0])
    cube([1, 1, 2.00]);
  translate([197, 222, 0])
    cube([1, 1, 2.04]);
  translate([198, 222, 0])
    cube([1, 1, 2.00]);
  translate([199, 222, 0])
    cube([1, 1, 2.04]);
  translate([200, 222, 0])
    cube([1, 1, 2.04]);
  translate([201, 222, 0])
    cube([1, 1, 2.04]);
  translate([202, 222, 0])
    cube([1, 1, 2.04]);
  translate([203, 222, 0])
    cube([1, 1, 2.04]);
  translate([204, 222, 0])
    cube([1, 1, 2.00]);
  translate([205, 222, 0])
    cube([1, 1, 2.04]);
  translate([206, 222, 0])
    cube([1, 1, 2.04]);
  translate([207, 222, 0])
    cube([1, 1, 2.04]);
  translate([208, 222, 0])
    cube([1, 1, 2.04]);
  translate([209, 222, 0])
    cube([1, 1, 2.04]);
  translate([210, 222, 0])
    cube([1, 1, 2.04]);
  translate([211, 222, 0])
    cube([1, 1, 2.04]);
  translate([212, 222, 0])
    cube([1, 1, 2.04]);
  translate([213, 222, 0])
    cube([1, 1, 2.04]);
  translate([214, 222, 0])
    cube([1, 1, 2.04]);
  translate([215, 222, 0])
    cube([1, 1, 2.04]);
  translate([216, 222, 0])
    cube([1, 1, 2.00]);
  translate([217, 222, 0])
    cube([1, 1, 2.00]);
  translate([218, 222, 0])
    cube([1, 1, 2.04]);
  translate([219, 222, 0])
    cube([1, 1, 2.00]);
  translate([220, 222, 0])
    cube([1, 1, 2.00]);
  translate([221, 222, 0])
    cube([1, 1, 2.04]);
  translate([222, 222, 0])
    cube([1, 1, 2.00]);
  translate([223, 222, 0])
    cube([1, 1, 2.00]);
  translate([224, 222, 0])
    cube([1, 1, 2.04]);
  translate([225, 222, 0])
    cube([1, 1, 2.04]);
  translate([226, 222, 0])
    cube([1, 1, 2.04]);
  translate([227, 222, 0])
    cube([1, 1, 2.00]);
  translate([228, 222, 0])
    cube([1, 1, 2.00]);
  translate([229, 222, 0])
    cube([1, 1, 2.00]);
  translate([230, 222, 0])
    cube([1, 1, 2.00]);
  translate([231, 222, 0])
    cube([1, 1, 2.00]);
  translate([232, 222, 0])
    cube([1, 1, 2.00]);
  translate([233, 222, 0])
    cube([1, 1, 2.04]);
  translate([234, 222, 0])
    cube([1, 1, 2.04]);
  translate([235, 222, 0])
    cube([1, 1, 2.00]);
  translate([236, 222, 0])
    cube([1, 1, 2.00]);
  translate([237, 222, 0])
    cube([1, 1, 2.00]);
  translate([238, 222, 0])
    cube([1, 1, 2.00]);
  translate([239, 222, 0])
    cube([1, 1, 2.00]);
  translate([240, 222, 0])
    cube([1, 1, 2.00]);
  translate([241, 222, 0])
    cube([1, 1, 2.00]);
  translate([242, 222, 0])
    cube([1, 1, 2.00]);
  translate([243, 222, 0])
    cube([1, 1, 2.00]);
  translate([244, 222, 0])
    cube([1, 1, 2.00]);
  translate([245, 222, 0])
    cube([1, 1, 2.00]);
  translate([246, 222, 0])
    cube([1, 1, 2.00]);
  translate([0, 223, 0])
    cube([1, 1, 2.20]);
  translate([1, 223, 0])
    cube([1, 1, 2.20]);
  translate([2, 223, 0])
    cube([1, 1, 2.20]);
  translate([3, 223, 0])
    cube([1, 1, 2.20]);
  translate([4, 223, 0])
    cube([1, 1, 2.20]);
  translate([5, 223, 0])
    cube([1, 1, 2.20]);
  translate([6, 223, 0])
    cube([1, 1, 2.20]);
  translate([7, 223, 0])
    cube([1, 1, 2.20]);
  translate([8, 223, 0])
    cube([1, 1, 2.24]);
  translate([9, 223, 0])
    cube([1, 1, 2.20]);
  translate([10, 223, 0])
    cube([1, 1, 2.24]);
  translate([11, 223, 0])
    cube([1, 1, 2.20]);
  translate([12, 223, 0])
    cube([1, 1, 2.20]);
  translate([13, 223, 0])
    cube([1, 1, 2.20]);
  translate([14, 223, 0])
    cube([1, 1, 2.20]);
  translate([15, 223, 0])
    cube([1, 1, 2.20]);
  translate([16, 223, 0])
    cube([1, 1, 2.20]);
  translate([17, 223, 0])
    cube([1, 1, 2.16]);
  translate([18, 223, 0])
    cube([1, 1, 2.20]);
  translate([19, 223, 0])
    cube([1, 1, 2.20]);
  translate([20, 223, 0])
    cube([1, 1, 2.20]);
  translate([21, 223, 0])
    cube([1, 1, 2.20]);
  translate([22, 223, 0])
    cube([1, 1, 2.20]);
  translate([23, 223, 0])
    cube([1, 1, 2.20]);
  translate([24, 223, 0])
    cube([1, 1, 2.16]);
  translate([25, 223, 0])
    cube([1, 1, 2.20]);
  translate([26, 223, 0])
    cube([1, 1, 2.20]);
  translate([27, 223, 0])
    cube([1, 1, 2.20]);
  translate([28, 223, 0])
    cube([1, 1, 2.20]);
  translate([29, 223, 0])
    cube([1, 1, 2.20]);
  translate([30, 223, 0])
    cube([1, 1, 2.12]);
  translate([31, 223, 0])
    cube([1, 1, 2.12]);
  translate([32, 223, 0])
    cube([1, 1, 2.16]);
  translate([33, 223, 0])
    cube([1, 1, 2.20]);
  translate([34, 223, 0])
    cube([1, 1, 2.20]);
  translate([35, 223, 0])
    cube([1, 1, 2.16]);
  translate([36, 223, 0])
    cube([1, 1, 2.16]);
  translate([37, 223, 0])
    cube([1, 1, 2.16]);
  translate([38, 223, 0])
    cube([1, 1, 2.16]);
  translate([39, 223, 0])
    cube([1, 1, 2.16]);
  translate([40, 223, 0])
    cube([1, 1, 2.16]);
  translate([41, 223, 0])
    cube([1, 1, 2.16]);
  translate([42, 223, 0])
    cube([1, 1, 2.16]);
  translate([43, 223, 0])
    cube([1, 1, 2.16]);
  translate([44, 223, 0])
    cube([1, 1, 2.16]);
  translate([45, 223, 0])
    cube([1, 1, 2.16]);
  translate([46, 223, 0])
    cube([1, 1, 2.16]);
  translate([47, 223, 0])
    cube([1, 1, 2.16]);
  translate([48, 223, 0])
    cube([1, 1, 2.27]);
  translate([49, 223, 0])
    cube([1, 1, 4.82]);
  translate([50, 223, 0])
    cube([1, 1, 7.92]);
  translate([51, 223, 0])
    cube([1, 1, 8.78]);
  translate([52, 223, 0])
    cube([1, 1, 9.18]);
  translate([53, 223, 0])
    cube([1, 1, 3.37]);
  translate([54, 223, 0])
    cube([1, 1, 1.02]);
  translate([55, 223, 0])
    cube([1, 1, 1.18]);
  translate([56, 223, 0])
    cube([1, 1, 1.45]);
  translate([57, 223, 0])
    cube([1, 1, 2.04]);
  translate([58, 223, 0])
    cube([1, 1, 4.08]);
  translate([59, 223, 0])
    cube([1, 1, 5.57]);
  translate([60, 223, 0])
    cube([1, 1, 2.00]);
  translate([61, 223, 0])
    cube([1, 1, 1.29]);
  translate([62, 223, 0])
    cube([1, 1, 1.33]);
  translate([63, 223, 0])
    cube([1, 1, 1.18]);
  translate([64, 223, 0])
    cube([1, 1, 0.75]);
  translate([65, 223, 0])
    cube([1, 1, 3.37]);
  translate([66, 223, 0])
    cube([1, 1, 2.24]);
  translate([67, 223, 0])
    cube([1, 1, 2.43]);
  translate([68, 223, 0])
    cube([1, 1, 2.63]);
  translate([69, 223, 0])
    cube([1, 1, 2.90]);
  translate([70, 223, 0])
    cube([1, 1, 3.02]);
  translate([71, 223, 0])
    cube([1, 1, 3.29]);
  translate([72, 223, 0])
    cube([1, 1, 3.41]);
  translate([73, 223, 0])
    cube([1, 1, 3.49]);
  translate([74, 223, 0])
    cube([1, 1, 3.73]);
  translate([75, 223, 0])
    cube([1, 1, 3.84]);
  translate([76, 223, 0])
    cube([1, 1, 3.88]);
  translate([77, 223, 0])
    cube([1, 1, 4.04]);
  translate([78, 223, 0])
    cube([1, 1, 4.04]);
  translate([79, 223, 0])
    cube([1, 1, 4.24]);
  translate([80, 223, 0])
    cube([1, 1, 4.27]);
  translate([81, 223, 0])
    cube([1, 1, 4.35]);
  translate([82, 223, 0])
    cube([1, 1, 4.39]);
  translate([83, 223, 0])
    cube([1, 1, 4.35]);
  translate([84, 223, 0])
    cube([1, 1, 4.43]);
  translate([85, 223, 0])
    cube([1, 1, 4.86]);
  translate([86, 223, 0])
    cube([1, 1, 5.02]);
  translate([87, 223, 0])
    cube([1, 1, 5.14]);
  translate([88, 223, 0])
    cube([1, 1, 5.33]);
  translate([89, 223, 0])
    cube([1, 1, 5.14]);
  translate([90, 223, 0])
    cube([1, 1, 5.14]);
  translate([91, 223, 0])
    cube([1, 1, 5.06]);
  translate([92, 223, 0])
    cube([1, 1, 4.90]);
  translate([93, 223, 0])
    cube([1, 1, 4.82]);
  translate([94, 223, 0])
    cube([1, 1, 4.78]);
  translate([95, 223, 0])
    cube([1, 1, 4.71]);
  translate([96, 223, 0])
    cube([1, 1, 4.75]);
  translate([97, 223, 0])
    cube([1, 1, 4.63]);
  translate([98, 223, 0])
    cube([1, 1, 4.59]);
  translate([99, 223, 0])
    cube([1, 1, 4.51]);
  translate([100, 223, 0])
    cube([1, 1, 4.43]);
  translate([101, 223, 0])
    cube([1, 1, 4.43]);
  translate([102, 223, 0])
    cube([1, 1, 4.31]);
  translate([103, 223, 0])
    cube([1, 1, 4.31]);
  translate([104, 223, 0])
    cube([1, 1, 4.31]);
  translate([105, 223, 0])
    cube([1, 1, 4.31]);
  translate([106, 223, 0])
    cube([1, 1, 4.43]);
  translate([107, 223, 0])
    cube([1, 1, 4.31]);
  translate([108, 223, 0])
    cube([1, 1, 4.16]);
  translate([109, 223, 0])
    cube([1, 1, 3.88]);
  translate([110, 223, 0])
    cube([1, 1, 1.45]);
  translate([111, 223, 0])
    cube([1, 1, 2.00]);
  translate([112, 223, 0])
    cube([1, 1, 1.76]);
  translate([113, 223, 0])
    cube([1, 1, 4.04]);
  translate([114, 223, 0])
    cube([1, 1, 1.45]);
  translate([115, 223, 0])
    cube([1, 1, 0.67]);
  translate([116, 223, 0])
    cube([1, 1, 0.51]);
  translate([117, 223, 0])
    cube([1, 1, 0.55]);
  translate([118, 223, 0])
    cube([1, 1, 0.75]);
  translate([119, 223, 0])
    cube([1, 1, 0.86]);
  translate([120, 223, 0])
    cube([1, 1, 1.10]);
  translate([121, 223, 0])
    cube([1, 1, 1.41]);
  translate([122, 223, 0])
    cube([1, 1, 2.04]);
  translate([123, 223, 0])
    cube([1, 1, 2.94]);
  translate([124, 223, 0])
    cube([1, 1, 3.06]);
  translate([125, 223, 0])
    cube([1, 1, 3.06]);
  translate([126, 223, 0])
    cube([1, 1, 3.10]);
  translate([127, 223, 0])
    cube([1, 1, 3.10]);
  translate([128, 223, 0])
    cube([1, 1, 3.18]);
  translate([129, 223, 0])
    cube([1, 1, 3.14]);
  translate([130, 223, 0])
    cube([1, 1, 3.29]);
  translate([131, 223, 0])
    cube([1, 1, 3.33]);
  translate([132, 223, 0])
    cube([1, 1, 3.45]);
  translate([133, 223, 0])
    cube([1, 1, 3.53]);
  translate([134, 223, 0])
    cube([1, 1, 3.65]);
  translate([135, 223, 0])
    cube([1, 1, 3.80]);
  translate([136, 223, 0])
    cube([1, 1, 3.88]);
  translate([137, 223, 0])
    cube([1, 1, 3.96]);
  translate([138, 223, 0])
    cube([1, 1, 4.08]);
  translate([139, 223, 0])
    cube([1, 1, 4.20]);
  translate([140, 223, 0])
    cube([1, 1, 4.27]);
  translate([141, 223, 0])
    cube([1, 1, 4.27]);
  translate([142, 223, 0])
    cube([1, 1, 4.39]);
  translate([143, 223, 0])
    cube([1, 1, 4.43]);
  translate([144, 223, 0])
    cube([1, 1, 4.59]);
  translate([145, 223, 0])
    cube([1, 1, 4.71]);
  translate([146, 223, 0])
    cube([1, 1, 5.02]);
  translate([147, 223, 0])
    cube([1, 1, 5.22]);
  translate([148, 223, 0])
    cube([1, 1, 5.33]);
  translate([149, 223, 0])
    cube([1, 1, 5.45]);
  translate([150, 223, 0])
    cube([1, 1, 5.37]);
  translate([151, 223, 0])
    cube([1, 1, 5.14]);
  translate([152, 223, 0])
    cube([1, 1, 5.14]);
  translate([153, 223, 0])
    cube([1, 1, 5.06]);
  translate([154, 223, 0])
    cube([1, 1, 5.06]);
  translate([155, 223, 0])
    cube([1, 1, 5.18]);
  translate([156, 223, 0])
    cube([1, 1, 5.25]);
  translate([157, 223, 0])
    cube([1, 1, 5.33]);
  translate([158, 223, 0])
    cube([1, 1, 5.25]);
  translate([159, 223, 0])
    cube([1, 1, 5.65]);
  translate([160, 223, 0])
    cube([1, 1, 5.80]);
  translate([161, 223, 0])
    cube([1, 1, 5.61]);
  translate([162, 223, 0])
    cube([1, 1, 5.02]);
  translate([163, 223, 0])
    cube([1, 1, 4.51]);
  translate([164, 223, 0])
    cube([1, 1, 1.57]);
  translate([165, 223, 0])
    cube([1, 1, 0.86]);
  translate([166, 223, 0])
    cube([1, 1, 1.02]);
  translate([167, 223, 0])
    cube([1, 1, 1.29]);
  translate([168, 223, 0])
    cube([1, 1, 1.33]);
  translate([169, 223, 0])
    cube([1, 1, 1.33]);
  translate([170, 223, 0])
    cube([1, 1, 1.76]);
  translate([171, 223, 0])
    cube([1, 1, 4.55]);
  translate([172, 223, 0])
    cube([1, 1, 3.10]);
  translate([173, 223, 0])
    cube([1, 1, 1.88]);
  translate([174, 223, 0])
    cube([1, 1, 1.88]);
  translate([175, 223, 0])
    cube([1, 1, 7.14]);
  translate([176, 223, 0])
    cube([1, 1, 1.88]);
  translate([177, 223, 0])
    cube([1, 1, 2.00]);
  translate([178, 223, 0])
    cube([1, 1, 2.00]);
  translate([179, 223, 0])
    cube([1, 1, 2.04]);
  translate([180, 223, 0])
    cube([1, 1, 2.04]);
  translate([181, 223, 0])
    cube([1, 1, 2.04]);
  translate([182, 223, 0])
    cube([1, 1, 2.04]);
  translate([183, 223, 0])
    cube([1, 1, 2.00]);
  translate([184, 223, 0])
    cube([1, 1, 2.00]);
  translate([185, 223, 0])
    cube([1, 1, 2.00]);
  translate([186, 223, 0])
    cube([1, 1, 2.00]);
  translate([187, 223, 0])
    cube([1, 1, 2.00]);
  translate([188, 223, 0])
    cube([1, 1, 2.00]);
  translate([189, 223, 0])
    cube([1, 1, 2.04]);
  translate([190, 223, 0])
    cube([1, 1, 2.04]);
  translate([191, 223, 0])
    cube([1, 1, 2.04]);
  translate([192, 223, 0])
    cube([1, 1, 2.04]);
  translate([193, 223, 0])
    cube([1, 1, 2.04]);
  translate([194, 223, 0])
    cube([1, 1, 2.04]);
  translate([195, 223, 0])
    cube([1, 1, 2.04]);
  translate([196, 223, 0])
    cube([1, 1, 2.04]);
  translate([197, 223, 0])
    cube([1, 1, 2.08]);
  translate([198, 223, 0])
    cube([1, 1, 2.04]);
  translate([199, 223, 0])
    cube([1, 1, 2.04]);
  translate([200, 223, 0])
    cube([1, 1, 2.04]);
  translate([201, 223, 0])
    cube([1, 1, 2.04]);
  translate([202, 223, 0])
    cube([1, 1, 2.04]);
  translate([203, 223, 0])
    cube([1, 1, 2.04]);
  translate([204, 223, 0])
    cube([1, 1, 2.04]);
  translate([205, 223, 0])
    cube([1, 1, 2.04]);
  translate([206, 223, 0])
    cube([1, 1, 2.04]);
  translate([207, 223, 0])
    cube([1, 1, 2.04]);
  translate([208, 223, 0])
    cube([1, 1, 2.04]);
  translate([209, 223, 0])
    cube([1, 1, 2.04]);
  translate([210, 223, 0])
    cube([1, 1, 2.04]);
  translate([211, 223, 0])
    cube([1, 1, 2.04]);
  translate([212, 223, 0])
    cube([1, 1, 2.04]);
  translate([213, 223, 0])
    cube([1, 1, 2.04]);
  translate([214, 223, 0])
    cube([1, 1, 2.04]);
  translate([215, 223, 0])
    cube([1, 1, 2.04]);
  translate([216, 223, 0])
    cube([1, 1, 2.00]);
  translate([217, 223, 0])
    cube([1, 1, 2.00]);
  translate([218, 223, 0])
    cube([1, 1, 2.04]);
  translate([219, 223, 0])
    cube([1, 1, 2.04]);
  translate([220, 223, 0])
    cube([1, 1, 2.04]);
  translate([221, 223, 0])
    cube([1, 1, 2.00]);
  translate([222, 223, 0])
    cube([1, 1, 2.04]);
  translate([223, 223, 0])
    cube([1, 1, 2.04]);
  translate([224, 223, 0])
    cube([1, 1, 2.04]);
  translate([225, 223, 0])
    cube([1, 1, 2.04]);
  translate([226, 223, 0])
    cube([1, 1, 2.04]);
  translate([227, 223, 0])
    cube([1, 1, 2.04]);
  translate([228, 223, 0])
    cube([1, 1, 2.00]);
  translate([229, 223, 0])
    cube([1, 1, 2.00]);
  translate([230, 223, 0])
    cube([1, 1, 2.08]);
  translate([231, 223, 0])
    cube([1, 1, 2.12]);
  translate([232, 223, 0])
    cube([1, 1, 2.04]);
  translate([233, 223, 0])
    cube([1, 1, 2.04]);
  translate([234, 223, 0])
    cube([1, 1, 2.04]);
  translate([235, 223, 0])
    cube([1, 1, 2.04]);
  translate([236, 223, 0])
    cube([1, 1, 2.00]);
  translate([237, 223, 0])
    cube([1, 1, 2.00]);
  translate([238, 223, 0])
    cube([1, 1, 2.00]);
  translate([239, 223, 0])
    cube([1, 1, 2.00]);
  translate([240, 223, 0])
    cube([1, 1, 2.00]);
  translate([241, 223, 0])
    cube([1, 1, 2.00]);
  translate([242, 223, 0])
    cube([1, 1, 2.00]);
  translate([243, 223, 0])
    cube([1, 1, 2.00]);
  translate([244, 223, 0])
    cube([1, 1, 2.00]);
  translate([245, 223, 0])
    cube([1, 1, 2.00]);
  translate([246, 223, 0])
    cube([1, 1, 2.00]);
  translate([0, 224, 0])
    cube([1, 1, 2.20]);
  translate([1, 224, 0])
    cube([1, 1, 2.20]);
  translate([2, 224, 0])
    cube([1, 1, 2.20]);
  translate([3, 224, 0])
    cube([1, 1, 2.20]);
  translate([4, 224, 0])
    cube([1, 1, 2.20]);
  translate([5, 224, 0])
    cube([1, 1, 2.20]);
  translate([6, 224, 0])
    cube([1, 1, 2.20]);
  translate([7, 224, 0])
    cube([1, 1, 2.20]);
  translate([8, 224, 0])
    cube([1, 1, 2.20]);
  translate([9, 224, 0])
    cube([1, 1, 2.20]);
  translate([10, 224, 0])
    cube([1, 1, 2.20]);
  translate([11, 224, 0])
    cube([1, 1, 2.20]);
  translate([12, 224, 0])
    cube([1, 1, 2.20]);
  translate([13, 224, 0])
    cube([1, 1, 2.20]);
  translate([14, 224, 0])
    cube([1, 1, 2.20]);
  translate([15, 224, 0])
    cube([1, 1, 2.20]);
  translate([16, 224, 0])
    cube([1, 1, 2.16]);
  translate([17, 224, 0])
    cube([1, 1, 2.12]);
  translate([18, 224, 0])
    cube([1, 1, 2.12]);
  translate([19, 224, 0])
    cube([1, 1, 2.20]);
  translate([20, 224, 0])
    cube([1, 1, 2.20]);
  translate([21, 224, 0])
    cube([1, 1, 2.20]);
  translate([22, 224, 0])
    cube([1, 1, 2.20]);
  translate([23, 224, 0])
    cube([1, 1, 2.20]);
  translate([24, 224, 0])
    cube([1, 1, 2.16]);
  translate([25, 224, 0])
    cube([1, 1, 2.20]);
  translate([26, 224, 0])
    cube([1, 1, 2.20]);
  translate([27, 224, 0])
    cube([1, 1, 2.20]);
  translate([28, 224, 0])
    cube([1, 1, 2.20]);
  translate([29, 224, 0])
    cube([1, 1, 2.20]);
  translate([30, 224, 0])
    cube([1, 1, 2.16]);
  translate([31, 224, 0])
    cube([1, 1, 2.20]);
  translate([32, 224, 0])
    cube([1, 1, 2.20]);
  translate([33, 224, 0])
    cube([1, 1, 2.20]);
  translate([34, 224, 0])
    cube([1, 1, 2.20]);
  translate([35, 224, 0])
    cube([1, 1, 2.12]);
  translate([36, 224, 0])
    cube([1, 1, 2.20]);
  translate([37, 224, 0])
    cube([1, 1, 2.20]);
  translate([38, 224, 0])
    cube([1, 1, 2.20]);
  translate([39, 224, 0])
    cube([1, 1, 2.20]);
  translate([40, 224, 0])
    cube([1, 1, 2.16]);
  translate([41, 224, 0])
    cube([1, 1, 2.16]);
  translate([42, 224, 0])
    cube([1, 1, 2.16]);
  translate([43, 224, 0])
    cube([1, 1, 2.16]);
  translate([44, 224, 0])
    cube([1, 1, 2.16]);
  translate([45, 224, 0])
    cube([1, 1, 2.16]);
  translate([46, 224, 0])
    cube([1, 1, 2.16]);
  translate([47, 224, 0])
    cube([1, 1, 2.16]);
  translate([48, 224, 0])
    cube([1, 1, 2.51]);
  translate([49, 224, 0])
    cube([1, 1, 0.39]);
  translate([50, 224, 0])
    cube([1, 1, 8.67]);
  translate([51, 224, 0])
    cube([1, 1, 8.63]);
  translate([52, 224, 0])
    cube([1, 1, 9.57]);
  translate([53, 224, 0])
    cube([1, 1, 2.00]);
  translate([54, 224, 0])
    cube([1, 1, 1.14]);
  translate([55, 224, 0])
    cube([1, 1, 1.22]);
  translate([56, 224, 0])
    cube([1, 1, 1.25]);
  translate([57, 224, 0])
    cube([1, 1, 1.65]);
  translate([58, 224, 0])
    cube([1, 1, 4.82]);
  translate([59, 224, 0])
    cube([1, 1, 5.69]);
  translate([60, 224, 0])
    cube([1, 1, 1.53]);
  translate([61, 224, 0])
    cube([1, 1, 1.41]);
  translate([62, 224, 0])
    cube([1, 1, 1.25]);
  translate([63, 224, 0])
    cube([1, 1, 1.10]);
  translate([64, 224, 0])
    cube([1, 1, 0.43]);
  translate([65, 224, 0])
    cube([1, 1, 1.84]);
  translate([66, 224, 0])
    cube([1, 1, 2.20]);
  translate([67, 224, 0])
    cube([1, 1, 2.47]);
  translate([68, 224, 0])
    cube([1, 1, 2.75]);
  translate([69, 224, 0])
    cube([1, 1, 2.98]);
  translate([70, 224, 0])
    cube([1, 1, 3.10]);
  translate([71, 224, 0])
    cube([1, 1, 3.18]);
  translate([72, 224, 0])
    cube([1, 1, 3.53]);
  translate([73, 224, 0])
    cube([1, 1, 3.65]);
  translate([74, 224, 0])
    cube([1, 1, 3.73]);
  translate([75, 224, 0])
    cube([1, 1, 3.84]);
  translate([76, 224, 0])
    cube([1, 1, 3.92]);
  translate([77, 224, 0])
    cube([1, 1, 4.04]);
  translate([78, 224, 0])
    cube([1, 1, 4.16]);
  translate([79, 224, 0])
    cube([1, 1, 4.27]);
  translate([80, 224, 0])
    cube([1, 1, 4.39]);
  translate([81, 224, 0])
    cube([1, 1, 4.43]);
  translate([82, 224, 0])
    cube([1, 1, 4.47]);
  translate([83, 224, 0])
    cube([1, 1, 4.43]);
  translate([84, 224, 0])
    cube([1, 1, 4.47]);
  translate([85, 224, 0])
    cube([1, 1, 4.82]);
  translate([86, 224, 0])
    cube([1, 1, 5.10]);
  translate([87, 224, 0])
    cube([1, 1, 5.33]);
  translate([88, 224, 0])
    cube([1, 1, 5.41]);
  translate([89, 224, 0])
    cube([1, 1, 5.22]);
  translate([90, 224, 0])
    cube([1, 1, 5.14]);
  translate([91, 224, 0])
    cube([1, 1, 5.02]);
  translate([92, 224, 0])
    cube([1, 1, 4.86]);
  translate([93, 224, 0])
    cube([1, 1, 4.82]);
  translate([94, 224, 0])
    cube([1, 1, 4.71]);
  translate([95, 224, 0])
    cube([1, 1, 4.63]);
  translate([96, 224, 0])
    cube([1, 1, 4.59]);
  translate([97, 224, 0])
    cube([1, 1, 4.59]);
  translate([98, 224, 0])
    cube([1, 1, 4.51]);
  translate([99, 224, 0])
    cube([1, 1, 4.51]);
  translate([100, 224, 0])
    cube([1, 1, 4.47]);
  translate([101, 224, 0])
    cube([1, 1, 4.35]);
  translate([102, 224, 0])
    cube([1, 1, 4.24]);
  translate([103, 224, 0])
    cube([1, 1, 4.24]);
  translate([104, 224, 0])
    cube([1, 1, 4.27]);
  translate([105, 224, 0])
    cube([1, 1, 4.24]);
  translate([106, 224, 0])
    cube([1, 1, 4.27]);
  translate([107, 224, 0])
    cube([1, 1, 4.27]);
  translate([108, 224, 0])
    cube([1, 1, 4.27]);
  translate([109, 224, 0])
    cube([1, 1, 3.96]);
  translate([110, 224, 0])
    cube([1, 1, 2.31]);
  translate([111, 224, 0])
    cube([1, 1, 1.33]);
  translate([112, 224, 0])
    cube([1, 1, 1.96]);
  translate([113, 224, 0])
    cube([1, 1, 4.16]);
  translate([114, 224, 0])
    cube([1, 1, 3.61]);
  translate([115, 224, 0])
    cube([1, 1, 0.78]);
  translate([116, 224, 0])
    cube([1, 1, 0.43]);
  translate([117, 224, 0])
    cube([1, 1, 0.55]);
  translate([118, 224, 0])
    cube([1, 1, 0.75]);
  translate([119, 224, 0])
    cube([1, 1, 1.18]);
  translate([120, 224, 0])
    cube([1, 1, 1.80]);
  translate([121, 224, 0])
    cube([1, 1, 2.47]);
  translate([122, 224, 0])
    cube([1, 1, 2.90]);
  translate([123, 224, 0])
    cube([1, 1, 3.06]);
  translate([124, 224, 0])
    cube([1, 1, 3.14]);
  translate([125, 224, 0])
    cube([1, 1, 3.18]);
  translate([126, 224, 0])
    cube([1, 1, 3.06]);
  translate([127, 224, 0])
    cube([1, 1, 3.10]);
  translate([128, 224, 0])
    cube([1, 1, 3.10]);
  translate([129, 224, 0])
    cube([1, 1, 3.22]);
  translate([130, 224, 0])
    cube([1, 1, 3.22]);
  translate([131, 224, 0])
    cube([1, 1, 3.25]);
  translate([132, 224, 0])
    cube([1, 1, 3.29]);
  translate([133, 224, 0])
    cube([1, 1, 3.49]);
  translate([134, 224, 0])
    cube([1, 1, 3.49]);
  translate([135, 224, 0])
    cube([1, 1, 3.65]);
  translate([136, 224, 0])
    cube([1, 1, 3.80]);
  translate([137, 224, 0])
    cube([1, 1, 3.92]);
  translate([138, 224, 0])
    cube([1, 1, 4.04]);
  translate([139, 224, 0])
    cube([1, 1, 4.04]);
  translate([140, 224, 0])
    cube([1, 1, 4.08]);
  translate([141, 224, 0])
    cube([1, 1, 4.24]);
  translate([142, 224, 0])
    cube([1, 1, 4.27]);
  translate([143, 224, 0])
    cube([1, 1, 4.47]);
  translate([144, 224, 0])
    cube([1, 1, 4.55]);
  translate([145, 224, 0])
    cube([1, 1, 4.90]);
  translate([146, 224, 0])
    cube([1, 1, 5.14]);
  translate([147, 224, 0])
    cube([1, 1, 5.22]);
  translate([148, 224, 0])
    cube([1, 1, 5.37]);
  translate([149, 224, 0])
    cube([1, 1, 5.49]);
  translate([150, 224, 0])
    cube([1, 1, 5.41]);
  translate([151, 224, 0])
    cube([1, 1, 5.29]);
  translate([152, 224, 0])
    cube([1, 1, 5.18]);
  translate([153, 224, 0])
    cube([1, 1, 4.94]);
  translate([154, 224, 0])
    cube([1, 1, 5.02]);
  translate([155, 224, 0])
    cube([1, 1, 5.14]);
  translate([156, 224, 0])
    cube([1, 1, 5.22]);
  translate([157, 224, 0])
    cube([1, 1, 5.25]);
  translate([158, 224, 0])
    cube([1, 1, 5.25]);
  translate([159, 224, 0])
    cube([1, 1, 5.41]);
  translate([160, 224, 0])
    cube([1, 1, 5.80]);
  translate([161, 224, 0])
    cube([1, 1, 5.53]);
  translate([162, 224, 0])
    cube([1, 1, 5.14]);
  translate([163, 224, 0])
    cube([1, 1, 4.43]);
  translate([164, 224, 0])
    cube([1, 1, 4.24]);
  translate([165, 224, 0])
    cube([1, 1, 1.06]);
  translate([166, 224, 0])
    cube([1, 1, 0.94]);
  translate([167, 224, 0])
    cube([1, 1, 1.14]);
  translate([168, 224, 0])
    cube([1, 1, 1.25]);
  translate([169, 224, 0])
    cube([1, 1, 1.29]);
  translate([170, 224, 0])
    cube([1, 1, 1.61]);
  translate([171, 224, 0])
    cube([1, 1, 4.98]);
  translate([172, 224, 0])
    cube([1, 1, 3.96]);
  translate([173, 224, 0])
    cube([1, 1, 1.53]);
  translate([174, 224, 0])
    cube([1, 1, 1.73]);
  translate([175, 224, 0])
    cube([1, 1, 4.86]);
  translate([176, 224, 0])
    cube([1, 1, 2.39]);
  translate([177, 224, 0])
    cube([1, 1, 2.04]);
  translate([178, 224, 0])
    cube([1, 1, 2.00]);
  translate([179, 224, 0])
    cube([1, 1, 2.04]);
  translate([180, 224, 0])
    cube([1, 1, 2.04]);
  translate([181, 224, 0])
    cube([1, 1, 2.04]);
  translate([182, 224, 0])
    cube([1, 1, 2.04]);
  translate([183, 224, 0])
    cube([1, 1, 2.04]);
  translate([184, 224, 0])
    cube([1, 1, 2.04]);
  translate([185, 224, 0])
    cube([1, 1, 2.04]);
  translate([186, 224, 0])
    cube([1, 1, 2.04]);
  translate([187, 224, 0])
    cube([1, 1, 2.04]);
  translate([188, 224, 0])
    cube([1, 1, 2.04]);
  translate([189, 224, 0])
    cube([1, 1, 2.04]);
  translate([190, 224, 0])
    cube([1, 1, 2.04]);
  translate([191, 224, 0])
    cube([1, 1, 2.00]);
  translate([192, 224, 0])
    cube([1, 1, 2.04]);
  translate([193, 224, 0])
    cube([1, 1, 2.04]);
  translate([194, 224, 0])
    cube([1, 1, 2.04]);
  translate([195, 224, 0])
    cube([1, 1, 2.04]);
  translate([196, 224, 0])
    cube([1, 1, 2.04]);
  translate([197, 224, 0])
    cube([1, 1, 2.04]);
  translate([198, 224, 0])
    cube([1, 1, 2.04]);
  translate([199, 224, 0])
    cube([1, 1, 2.04]);
  translate([200, 224, 0])
    cube([1, 1, 2.04]);
  translate([201, 224, 0])
    cube([1, 1, 2.04]);
  translate([202, 224, 0])
    cube([1, 1, 2.04]);
  translate([203, 224, 0])
    cube([1, 1, 2.04]);
  translate([204, 224, 0])
    cube([1, 1, 2.04]);
  translate([205, 224, 0])
    cube([1, 1, 2.04]);
  translate([206, 224, 0])
    cube([1, 1, 2.04]);
  translate([207, 224, 0])
    cube([1, 1, 2.04]);
  translate([208, 224, 0])
    cube([1, 1, 2.04]);
  translate([209, 224, 0])
    cube([1, 1, 2.04]);
  translate([210, 224, 0])
    cube([1, 1, 2.04]);
  translate([211, 224, 0])
    cube([1, 1, 2.04]);
  translate([212, 224, 0])
    cube([1, 1, 2.04]);
  translate([213, 224, 0])
    cube([1, 1, 2.04]);
  translate([214, 224, 0])
    cube([1, 1, 2.04]);
  translate([215, 224, 0])
    cube([1, 1, 2.04]);
  translate([216, 224, 0])
    cube([1, 1, 2.04]);
  translate([217, 224, 0])
    cube([1, 1, 2.04]);
  translate([218, 224, 0])
    cube([1, 1, 2.04]);
  translate([219, 224, 0])
    cube([1, 1, 2.04]);
  translate([220, 224, 0])
    cube([1, 1, 2.04]);
  translate([221, 224, 0])
    cube([1, 1, 2.04]);
  translate([222, 224, 0])
    cube([1, 1, 2.04]);
  translate([223, 224, 0])
    cube([1, 1, 2.04]);
  translate([224, 224, 0])
    cube([1, 1, 2.04]);
  translate([225, 224, 0])
    cube([1, 1, 2.04]);
  translate([226, 224, 0])
    cube([1, 1, 2.04]);
  translate([227, 224, 0])
    cube([1, 1, 2.04]);
  translate([228, 224, 0])
    cube([1, 1, 2.04]);
  translate([229, 224, 0])
    cube([1, 1, 2.04]);
  translate([230, 224, 0])
    cube([1, 1, 2.04]);
  translate([231, 224, 0])
    cube([1, 1, 2.04]);
  translate([232, 224, 0])
    cube([1, 1, 2.04]);
  translate([233, 224, 0])
    cube([1, 1, 2.04]);
  translate([234, 224, 0])
    cube([1, 1, 2.04]);
  translate([235, 224, 0])
    cube([1, 1, 2.04]);
  translate([236, 224, 0])
    cube([1, 1, 2.04]);
  translate([237, 224, 0])
    cube([1, 1, 1.96]);
  translate([238, 224, 0])
    cube([1, 1, 2.00]);
  translate([239, 224, 0])
    cube([1, 1, 1.92]);
  translate([240, 224, 0])
    cube([1, 1, 2.04]);
  translate([241, 224, 0])
    cube([1, 1, 2.04]);
  translate([242, 224, 0])
    cube([1, 1, 2.04]);
  translate([243, 224, 0])
    cube([1, 1, 2.04]);
  translate([244, 224, 0])
    cube([1, 1, 2.04]);
  translate([245, 224, 0])
    cube([1, 1, 2.04]);
  translate([246, 224, 0])
    cube([1, 1, 2.00]);
  translate([0, 225, 0])
    cube([1, 1, 2.20]);
  translate([1, 225, 0])
    cube([1, 1, 2.20]);
  translate([2, 225, 0])
    cube([1, 1, 2.20]);
  translate([3, 225, 0])
    cube([1, 1, 2.20]);
  translate([4, 225, 0])
    cube([1, 1, 2.20]);
  translate([5, 225, 0])
    cube([1, 1, 2.20]);
  translate([6, 225, 0])
    cube([1, 1, 2.20]);
  translate([7, 225, 0])
    cube([1, 1, 2.20]);
  translate([8, 225, 0])
    cube([1, 1, 2.20]);
  translate([9, 225, 0])
    cube([1, 1, 2.20]);
  translate([10, 225, 0])
    cube([1, 1, 2.20]);
  translate([11, 225, 0])
    cube([1, 1, 2.20]);
  translate([12, 225, 0])
    cube([1, 1, 2.20]);
  translate([13, 225, 0])
    cube([1, 1, 2.20]);
  translate([14, 225, 0])
    cube([1, 1, 2.20]);
  translate([15, 225, 0])
    cube([1, 1, 2.20]);
  translate([16, 225, 0])
    cube([1, 1, 2.16]);
  translate([17, 225, 0])
    cube([1, 1, 2.20]);
  translate([18, 225, 0])
    cube([1, 1, 2.20]);
  translate([19, 225, 0])
    cube([1, 1, 2.20]);
  translate([20, 225, 0])
    cube([1, 1, 2.20]);
  translate([21, 225, 0])
    cube([1, 1, 2.20]);
  translate([22, 225, 0])
    cube([1, 1, 2.20]);
  translate([23, 225, 0])
    cube([1, 1, 2.20]);
  translate([24, 225, 0])
    cube([1, 1, 2.16]);
  translate([25, 225, 0])
    cube([1, 1, 2.20]);
  translate([26, 225, 0])
    cube([1, 1, 2.20]);
  translate([27, 225, 0])
    cube([1, 1, 2.20]);
  translate([28, 225, 0])
    cube([1, 1, 2.20]);
  translate([29, 225, 0])
    cube([1, 1, 2.20]);
  translate([30, 225, 0])
    cube([1, 1, 2.16]);
  translate([31, 225, 0])
    cube([1, 1, 2.20]);
  translate([32, 225, 0])
    cube([1, 1, 2.20]);
  translate([33, 225, 0])
    cube([1, 1, 2.20]);
  translate([34, 225, 0])
    cube([1, 1, 2.20]);
  translate([35, 225, 0])
    cube([1, 1, 2.27]);
  translate([36, 225, 0])
    cube([1, 1, 2.20]);
  translate([37, 225, 0])
    cube([1, 1, 2.20]);
  translate([38, 225, 0])
    cube([1, 1, 2.20]);
  translate([39, 225, 0])
    cube([1, 1, 2.20]);
  translate([40, 225, 0])
    cube([1, 1, 2.16]);
  translate([41, 225, 0])
    cube([1, 1, 2.16]);
  translate([42, 225, 0])
    cube([1, 1, 2.16]);
  translate([43, 225, 0])
    cube([1, 1, 2.16]);
  translate([44, 225, 0])
    cube([1, 1, 2.16]);
  translate([45, 225, 0])
    cube([1, 1, 2.16]);
  translate([46, 225, 0])
    cube([1, 1, 2.16]);
  translate([47, 225, 0])
    cube([1, 1, 2.16]);
  translate([48, 225, 0])
    cube([1, 1, 5.88]);
  translate([49, 225, 0])
    cube([1, 1, 5.25]);
  translate([50, 225, 0])
    cube([1, 1, 8.59]);
  translate([51, 225, 0])
    cube([1, 1, 9.06]);
  translate([52, 225, 0])
    cube([1, 1, 8.75]);
  translate([53, 225, 0])
    cube([1, 1, 1.25]);
  translate([54, 225, 0])
    cube([1, 1, 1.10]);
  translate([55, 225, 0])
    cube([1, 1, 1.25]);
  translate([56, 225, 0])
    cube([1, 1, 1.61]);
  translate([57, 225, 0])
    cube([1, 1, 2.71]);
  translate([58, 225, 0])
    cube([1, 1, 5.88]);
  translate([59, 225, 0])
    cube([1, 1, 2.63]);
  translate([60, 225, 0])
    cube([1, 1, 1.41]);
  translate([61, 225, 0])
    cube([1, 1, 1.37]);
  translate([62, 225, 0])
    cube([1, 1, 1.25]);
  translate([63, 225, 0])
    cube([1, 1, 0.35]);
  translate([64, 225, 0])
    cube([1, 1, 1.25]);
  translate([65, 225, 0])
    cube([1, 1, 1.96]);
  translate([66, 225, 0])
    cube([1, 1, 2.27]);
  translate([67, 225, 0])
    cube([1, 1, 2.47]);
  translate([68, 225, 0])
    cube([1, 1, 2.71]);
  translate([69, 225, 0])
    cube([1, 1, 2.94]);
  translate([70, 225, 0])
    cube([1, 1, 3.18]);
  translate([71, 225, 0])
    cube([1, 1, 3.37]);
  translate([72, 225, 0])
    cube([1, 1, 3.49]);
  translate([73, 225, 0])
    cube([1, 1, 3.61]);
  translate([74, 225, 0])
    cube([1, 1, 3.69]);
  translate([75, 225, 0])
    cube([1, 1, 3.84]);
  translate([76, 225, 0])
    cube([1, 1, 4.04]);
  translate([77, 225, 0])
    cube([1, 1, 4.16]);
  translate([78, 225, 0])
    cube([1, 1, 4.20]);
  translate([79, 225, 0])
    cube([1, 1, 4.31]);
  translate([80, 225, 0])
    cube([1, 1, 4.31]);
  translate([81, 225, 0])
    cube([1, 1, 4.31]);
  translate([82, 225, 0])
    cube([1, 1, 4.39]);
  translate([83, 225, 0])
    cube([1, 1, 4.55]);
  translate([84, 225, 0])
    cube([1, 1, 4.71]);
  translate([85, 225, 0])
    cube([1, 1, 4.98]);
  translate([86, 225, 0])
    cube([1, 1, 5.18]);
  translate([87, 225, 0])
    cube([1, 1, 5.37]);
  translate([88, 225, 0])
    cube([1, 1, 5.29]);
  translate([89, 225, 0])
    cube([1, 1, 5.22]);
  translate([90, 225, 0])
    cube([1, 1, 5.14]);
  translate([91, 225, 0])
    cube([1, 1, 4.98]);
  translate([92, 225, 0])
    cube([1, 1, 5.02]);
  translate([93, 225, 0])
    cube([1, 1, 4.78]);
  translate([94, 225, 0])
    cube([1, 1, 4.71]);
  translate([95, 225, 0])
    cube([1, 1, 4.47]);
  translate([96, 225, 0])
    cube([1, 1, 4.63]);
  translate([97, 225, 0])
    cube([1, 1, 4.51]);
  translate([98, 225, 0])
    cube([1, 1, 4.55]);
  translate([99, 225, 0])
    cube([1, 1, 4.47]);
  translate([100, 225, 0])
    cube([1, 1, 4.39]);
  translate([101, 225, 0])
    cube([1, 1, 4.31]);
  translate([102, 225, 0])
    cube([1, 1, 4.20]);
  translate([103, 225, 0])
    cube([1, 1, 4.16]);
  translate([104, 225, 0])
    cube([1, 1, 4.24]);
  translate([105, 225, 0])
    cube([1, 1, 4.20]);
  translate([106, 225, 0])
    cube([1, 1, 4.24]);
  translate([107, 225, 0])
    cube([1, 1, 4.24]);
  translate([108, 225, 0])
    cube([1, 1, 4.20]);
  translate([109, 225, 0])
    cube([1, 1, 3.96]);
  translate([110, 225, 0])
    cube([1, 1, 3.69]);
  translate([111, 225, 0])
    cube([1, 1, 1.25]);
  translate([112, 225, 0])
    cube([1, 1, 1.96]);
  translate([113, 225, 0])
    cube([1, 1, 3.92]);
  translate([114, 225, 0])
    cube([1, 1, 4.59]);
  translate([115, 225, 0])
    cube([1, 1, 0.90]);
  translate([116, 225, 0])
    cube([1, 1, 0.71]);
  translate([117, 225, 0])
    cube([1, 1, 1.10]);
  translate([118, 225, 0])
    cube([1, 1, 1.45]);
  translate([119, 225, 0])
    cube([1, 1, 2.00]);
  translate([120, 225, 0])
    cube([1, 1, 2.51]);
  translate([121, 225, 0])
    cube([1, 1, 2.86]);
  translate([122, 225, 0])
    cube([1, 1, 3.06]);
  translate([123, 225, 0])
    cube([1, 1, 3.10]);
  translate([124, 225, 0])
    cube([1, 1, 3.10]);
  translate([125, 225, 0])
    cube([1, 1, 3.14]);
  translate([126, 225, 0])
    cube([1, 1, 3.06]);
  translate([127, 225, 0])
    cube([1, 1, 3.10]);
  translate([128, 225, 0])
    cube([1, 1, 3.06]);
  translate([129, 225, 0])
    cube([1, 1, 3.18]);
  translate([130, 225, 0])
    cube([1, 1, 3.29]);
  translate([131, 225, 0])
    cube([1, 1, 3.25]);
  translate([132, 225, 0])
    cube([1, 1, 3.33]);
  translate([133, 225, 0])
    cube([1, 1, 3.41]);
  translate([134, 225, 0])
    cube([1, 1, 3.49]);
  translate([135, 225, 0])
    cube([1, 1, 3.53]);
  translate([136, 225, 0])
    cube([1, 1, 3.69]);
  translate([137, 225, 0])
    cube([1, 1, 3.76]);
  translate([138, 225, 0])
    cube([1, 1, 3.88]);
  translate([139, 225, 0])
    cube([1, 1, 3.92]);
  translate([140, 225, 0])
    cube([1, 1, 4.00]);
  translate([141, 225, 0])
    cube([1, 1, 4.12]);
  translate([142, 225, 0])
    cube([1, 1, 4.24]);
  translate([143, 225, 0])
    cube([1, 1, 4.43]);
  translate([144, 225, 0])
    cube([1, 1, 4.59]);
  translate([145, 225, 0])
    cube([1, 1, 4.82]);
  translate([146, 225, 0])
    cube([1, 1, 5.02]);
  translate([147, 225, 0])
    cube([1, 1, 5.14]);
  translate([148, 225, 0])
    cube([1, 1, 5.41]);
  translate([149, 225, 0])
    cube([1, 1, 5.57]);
  translate([150, 225, 0])
    cube([1, 1, 5.41]);
  translate([151, 225, 0])
    cube([1, 1, 5.29]);
  translate([152, 225, 0])
    cube([1, 1, 5.10]);
  translate([153, 225, 0])
    cube([1, 1, 4.98]);
  translate([154, 225, 0])
    cube([1, 1, 5.06]);
  translate([155, 225, 0])
    cube([1, 1, 5.14]);
  translate([156, 225, 0])
    cube([1, 1, 5.14]);
  translate([157, 225, 0])
    cube([1, 1, 5.18]);
  translate([158, 225, 0])
    cube([1, 1, 5.18]);
  translate([159, 225, 0])
    cube([1, 1, 5.37]);
  translate([160, 225, 0])
    cube([1, 1, 5.80]);
  translate([161, 225, 0])
    cube([1, 1, 5.53]);
  translate([162, 225, 0])
    cube([1, 1, 5.14]);
  translate([163, 225, 0])
    cube([1, 1, 4.51]);
  translate([164, 225, 0])
    cube([1, 1, 4.27]);
  translate([165, 225, 0])
    cube([1, 1, 0.90]);
  translate([166, 225, 0])
    cube([1, 1, 0.94]);
  translate([167, 225, 0])
    cube([1, 1, 1.14]);
  translate([168, 225, 0])
    cube([1, 1, 1.25]);
  translate([169, 225, 0])
    cube([1, 1, 1.22]);
  translate([170, 225, 0])
    cube([1, 1, 1.57]);
  translate([171, 225, 0])
    cube([1, 1, 3.80]);
  translate([172, 225, 0])
    cube([1, 1, 4.59]);
  translate([173, 225, 0])
    cube([1, 1, 2.20]);
  translate([174, 225, 0])
    cube([1, 1, 1.57]);
  translate([175, 225, 0])
    cube([1, 1, 2.98]);
  translate([176, 225, 0])
    cube([1, 1, 1.88]);
  translate([177, 225, 0])
    cube([1, 1, 2.04]);
  translate([178, 225, 0])
    cube([1, 1, 2.00]);
  translate([179, 225, 0])
    cube([1, 1, 2.04]);
  translate([180, 225, 0])
    cube([1, 1, 2.04]);
  translate([181, 225, 0])
    cube([1, 1, 2.04]);
  translate([182, 225, 0])
    cube([1, 1, 2.04]);
  translate([183, 225, 0])
    cube([1, 1, 2.04]);
  translate([184, 225, 0])
    cube([1, 1, 2.04]);
  translate([185, 225, 0])
    cube([1, 1, 2.04]);
  translate([186, 225, 0])
    cube([1, 1, 2.04]);
  translate([187, 225, 0])
    cube([1, 1, 2.04]);
  translate([188, 225, 0])
    cube([1, 1, 2.04]);
  translate([189, 225, 0])
    cube([1, 1, 2.04]);
  translate([190, 225, 0])
    cube([1, 1, 2.04]);
  translate([191, 225, 0])
    cube([1, 1, 2.00]);
  translate([192, 225, 0])
    cube([1, 1, 2.08]);
  translate([193, 225, 0])
    cube([1, 1, 2.04]);
  translate([194, 225, 0])
    cube([1, 1, 2.04]);
  translate([195, 225, 0])
    cube([1, 1, 2.04]);
  translate([196, 225, 0])
    cube([1, 1, 2.04]);
  translate([197, 225, 0])
    cube([1, 1, 2.04]);
  translate([198, 225, 0])
    cube([1, 1, 2.04]);
  translate([199, 225, 0])
    cube([1, 1, 2.04]);
  translate([200, 225, 0])
    cube([1, 1, 2.04]);
  translate([201, 225, 0])
    cube([1, 1, 2.04]);
  translate([202, 225, 0])
    cube([1, 1, 2.04]);
  translate([203, 225, 0])
    cube([1, 1, 2.04]);
  translate([204, 225, 0])
    cube([1, 1, 2.04]);
  translate([205, 225, 0])
    cube([1, 1, 2.04]);
  translate([206, 225, 0])
    cube([1, 1, 2.04]);
  translate([207, 225, 0])
    cube([1, 1, 2.04]);
  translate([208, 225, 0])
    cube([1, 1, 2.04]);
  translate([209, 225, 0])
    cube([1, 1, 2.04]);
  translate([210, 225, 0])
    cube([1, 1, 2.04]);
  translate([211, 225, 0])
    cube([1, 1, 2.04]);
  translate([212, 225, 0])
    cube([1, 1, 2.04]);
  translate([213, 225, 0])
    cube([1, 1, 2.04]);
  translate([214, 225, 0])
    cube([1, 1, 2.04]);
  translate([215, 225, 0])
    cube([1, 1, 2.04]);
  translate([216, 225, 0])
    cube([1, 1, 2.04]);
  translate([217, 225, 0])
    cube([1, 1, 2.04]);
  translate([218, 225, 0])
    cube([1, 1, 2.04]);
  translate([219, 225, 0])
    cube([1, 1, 2.04]);
  translate([220, 225, 0])
    cube([1, 1, 2.04]);
  translate([221, 225, 0])
    cube([1, 1, 2.04]);
  translate([222, 225, 0])
    cube([1, 1, 2.04]);
  translate([223, 225, 0])
    cube([1, 1, 2.04]);
  translate([224, 225, 0])
    cube([1, 1, 2.04]);
  translate([225, 225, 0])
    cube([1, 1, 2.04]);
  translate([226, 225, 0])
    cube([1, 1, 2.04]);
  translate([227, 225, 0])
    cube([1, 1, 2.04]);
  translate([228, 225, 0])
    cube([1, 1, 2.04]);
  translate([229, 225, 0])
    cube([1, 1, 2.04]);
  translate([230, 225, 0])
    cube([1, 1, 2.04]);
  translate([231, 225, 0])
    cube([1, 1, 2.04]);
  translate([232, 225, 0])
    cube([1, 1, 2.04]);
  translate([233, 225, 0])
    cube([1, 1, 2.04]);
  translate([234, 225, 0])
    cube([1, 1, 2.04]);
  translate([235, 225, 0])
    cube([1, 1, 2.04]);
  translate([236, 225, 0])
    cube([1, 1, 2.08]);
  translate([237, 225, 0])
    cube([1, 1, 2.12]);
  translate([238, 225, 0])
    cube([1, 1, 2.04]);
  translate([239, 225, 0])
    cube([1, 1, 2.04]);
  translate([240, 225, 0])
    cube([1, 1, 2.04]);
  translate([241, 225, 0])
    cube([1, 1, 2.04]);
  translate([242, 225, 0])
    cube([1, 1, 2.04]);
  translate([243, 225, 0])
    cube([1, 1, 2.00]);
  translate([244, 225, 0])
    cube([1, 1, 2.04]);
  translate([245, 225, 0])
    cube([1, 1, 2.04]);
  translate([246, 225, 0])
    cube([1, 1, 2.04]);
  translate([0, 226, 0])
    cube([1, 1, 2.24]);
  translate([1, 226, 0])
    cube([1, 1, 2.20]);
  translate([2, 226, 0])
    cube([1, 1, 2.20]);
  translate([3, 226, 0])
    cube([1, 1, 2.27]);
  translate([4, 226, 0])
    cube([1, 1, 2.20]);
  translate([5, 226, 0])
    cube([1, 1, 2.20]);
  translate([6, 226, 0])
    cube([1, 1, 2.20]);
  translate([7, 226, 0])
    cube([1, 1, 2.20]);
  translate([8, 226, 0])
    cube([1, 1, 2.20]);
  translate([9, 226, 0])
    cube([1, 1, 2.24]);
  translate([10, 226, 0])
    cube([1, 1, 2.16]);
  translate([11, 226, 0])
    cube([1, 1, 2.20]);
  translate([12, 226, 0])
    cube([1, 1, 2.16]);
  translate([13, 226, 0])
    cube([1, 1, 2.20]);
  translate([14, 226, 0])
    cube([1, 1, 2.16]);
  translate([15, 226, 0])
    cube([1, 1, 2.20]);
  translate([16, 226, 0])
    cube([1, 1, 2.20]);
  translate([17, 226, 0])
    cube([1, 1, 2.20]);
  translate([18, 226, 0])
    cube([1, 1, 2.24]);
  translate([19, 226, 0])
    cube([1, 1, 2.24]);
  translate([20, 226, 0])
    cube([1, 1, 2.20]);
  translate([21, 226, 0])
    cube([1, 1, 2.20]);
  translate([22, 226, 0])
    cube([1, 1, 2.20]);
  translate([23, 226, 0])
    cube([1, 1, 2.20]);
  translate([24, 226, 0])
    cube([1, 1, 2.20]);
  translate([25, 226, 0])
    cube([1, 1, 2.20]);
  translate([26, 226, 0])
    cube([1, 1, 2.20]);
  translate([27, 226, 0])
    cube([1, 1, 2.16]);
  translate([28, 226, 0])
    cube([1, 1, 2.20]);
  translate([29, 226, 0])
    cube([1, 1, 2.20]);
  translate([30, 226, 0])
    cube([1, 1, 2.20]);
  translate([31, 226, 0])
    cube([1, 1, 2.20]);
  translate([32, 226, 0])
    cube([1, 1, 2.24]);
  translate([33, 226, 0])
    cube([1, 1, 2.20]);
  translate([34, 226, 0])
    cube([1, 1, 2.20]);
  translate([35, 226, 0])
    cube([1, 1, 2.20]);
  translate([36, 226, 0])
    cube([1, 1, 2.20]);
  translate([37, 226, 0])
    cube([1, 1, 2.20]);
  translate([38, 226, 0])
    cube([1, 1, 2.20]);
  translate([39, 226, 0])
    cube([1, 1, 2.24]);
  translate([40, 226, 0])
    cube([1, 1, 2.20]);
  translate([41, 226, 0])
    cube([1, 1, 2.16]);
  translate([42, 226, 0])
    cube([1, 1, 2.16]);
  translate([43, 226, 0])
    cube([1, 1, 2.16]);
  translate([44, 226, 0])
    cube([1, 1, 2.16]);
  translate([45, 226, 0])
    cube([1, 1, 2.16]);
  translate([46, 226, 0])
    cube([1, 1, 2.08]);
  translate([47, 226, 0])
    cube([1, 1, 2.20]);
  translate([48, 226, 0])
    cube([1, 1, 6.39]);
  translate([49, 226, 0])
    cube([1, 1, 7.76]);
  translate([50, 226, 0])
    cube([1, 1, 8.35]);
  translate([51, 226, 0])
    cube([1, 1, 9.37]);
  translate([52, 226, 0])
    cube([1, 1, 7.45]);
  translate([53, 226, 0])
    cube([1, 1, 1.33]);
  translate([54, 226, 0])
    cube([1, 1, 1.25]);
  translate([55, 226, 0])
    cube([1, 1, 1.25]);
  translate([56, 226, 0])
    cube([1, 1, 1.84]);
  translate([57, 226, 0])
    cube([1, 1, 2.98]);
  translate([58, 226, 0])
    cube([1, 1, 5.53]);
  translate([59, 226, 0])
    cube([1, 1, 2.59]);
  translate([60, 226, 0])
    cube([1, 1, 1.37]);
  translate([61, 226, 0])
    cube([1, 1, 1.37]);
  translate([62, 226, 0])
    cube([1, 1, 1.14]);
  translate([63, 226, 0])
    cube([1, 1, 0.51]);
  translate([64, 226, 0])
    cube([1, 1, 3.33]);
  translate([65, 226, 0])
    cube([1, 1, 2.08]);
  translate([66, 226, 0])
    cube([1, 1, 2.31]);
  translate([67, 226, 0])
    cube([1, 1, 2.43]);
  translate([68, 226, 0])
    cube([1, 1, 2.75]);
  translate([69, 226, 0])
    cube([1, 1, 2.98]);
  translate([70, 226, 0])
    cube([1, 1, 3.14]);
  translate([71, 226, 0])
    cube([1, 1, 3.29]);
  translate([72, 226, 0])
    cube([1, 1, 3.57]);
  translate([73, 226, 0])
    cube([1, 1, 3.73]);
  translate([74, 226, 0])
    cube([1, 1, 3.73]);
  translate([75, 226, 0])
    cube([1, 1, 3.88]);
  translate([76, 226, 0])
    cube([1, 1, 4.08]);
  translate([77, 226, 0])
    cube([1, 1, 4.20]);
  translate([78, 226, 0])
    cube([1, 1, 4.24]);
  translate([79, 226, 0])
    cube([1, 1, 4.31]);
  translate([80, 226, 0])
    cube([1, 1, 4.39]);
  translate([81, 226, 0])
    cube([1, 1, 4.39]);
  translate([82, 226, 0])
    cube([1, 1, 4.39]);
  translate([83, 226, 0])
    cube([1, 1, 4.63]);
  translate([84, 226, 0])
    cube([1, 1, 4.82]);
  translate([85, 226, 0])
    cube([1, 1, 5.02]);
  translate([86, 226, 0])
    cube([1, 1, 5.18]);
  translate([87, 226, 0])
    cube([1, 1, 5.29]);
  translate([88, 226, 0])
    cube([1, 1, 5.45]);
  translate([89, 226, 0])
    cube([1, 1, 5.25]);
  translate([90, 226, 0])
    cube([1, 1, 5.18]);
  translate([91, 226, 0])
    cube([1, 1, 4.98]);
  translate([92, 226, 0])
    cube([1, 1, 4.86]);
  translate([93, 226, 0])
    cube([1, 1, 4.82]);
  translate([94, 226, 0])
    cube([1, 1, 4.59]);
  translate([95, 226, 0])
    cube([1, 1, 4.43]);
  translate([96, 226, 0])
    cube([1, 1, 4.47]);
  translate([97, 226, 0])
    cube([1, 1, 4.39]);
  translate([98, 226, 0])
    cube([1, 1, 4.39]);
  translate([99, 226, 0])
    cube([1, 1, 4.39]);
  translate([100, 226, 0])
    cube([1, 1, 4.24]);
  translate([101, 226, 0])
    cube([1, 1, 4.24]);
  translate([102, 226, 0])
    cube([1, 1, 4.16]);
  translate([103, 226, 0])
    cube([1, 1, 4.16]);
  translate([104, 226, 0])
    cube([1, 1, 4.20]);
  translate([105, 226, 0])
    cube([1, 1, 4.20]);
  translate([106, 226, 0])
    cube([1, 1, 4.24]);
  translate([107, 226, 0])
    cube([1, 1, 4.20]);
  translate([108, 226, 0])
    cube([1, 1, 4.08]);
  translate([109, 226, 0])
    cube([1, 1, 3.84]);
  translate([110, 226, 0])
    cube([1, 1, 3.73]);
  translate([111, 226, 0])
    cube([1, 1, 1.29]);
  translate([112, 226, 0])
    cube([1, 1, 2.04]);
  translate([113, 226, 0])
    cube([1, 1, 2.16]);
  translate([114, 226, 0])
    cube([1, 1, 4.94]);
  translate([115, 226, 0])
    cube([1, 1, 0.71]);
  translate([116, 226, 0])
    cube([1, 1, 1.33]);
  translate([117, 226, 0])
    cube([1, 1, 1.49]);
  translate([118, 226, 0])
    cube([1, 1, 1.69]);
  translate([119, 226, 0])
    cube([1, 1, 2.16]);
  translate([120, 226, 0])
    cube([1, 1, 2.63]);
  translate([121, 226, 0])
    cube([1, 1, 2.82]);
  translate([122, 226, 0])
    cube([1, 1, 3.10]);
  translate([123, 226, 0])
    cube([1, 1, 3.06]);
  translate([124, 226, 0])
    cube([1, 1, 3.10]);
  translate([125, 226, 0])
    cube([1, 1, 3.06]);
  translate([126, 226, 0])
    cube([1, 1, 3.06]);
  translate([127, 226, 0])
    cube([1, 1, 3.10]);
  translate([128, 226, 0])
    cube([1, 1, 3.14]);
  translate([129, 226, 0])
    cube([1, 1, 3.14]);
  translate([130, 226, 0])
    cube([1, 1, 3.14]);
  translate([131, 226, 0])
    cube([1, 1, 3.22]);
  translate([132, 226, 0])
    cube([1, 1, 3.29]);
  translate([133, 226, 0])
    cube([1, 1, 3.29]);
  translate([134, 226, 0])
    cube([1, 1, 3.33]);
  translate([135, 226, 0])
    cube([1, 1, 3.53]);
  translate([136, 226, 0])
    cube([1, 1, 3.57]);
  translate([137, 226, 0])
    cube([1, 1, 3.65]);
  translate([138, 226, 0])
    cube([1, 1, 3.73]);
  translate([139, 226, 0])
    cube([1, 1, 3.76]);
  translate([140, 226, 0])
    cube([1, 1, 3.92]);
  translate([141, 226, 0])
    cube([1, 1, 4.04]);
  translate([142, 226, 0])
    cube([1, 1, 4.16]);
  translate([143, 226, 0])
    cube([1, 1, 4.35]);
  translate([144, 226, 0])
    cube([1, 1, 4.63]);
  translate([145, 226, 0])
    cube([1, 1, 4.86]);
  translate([146, 226, 0])
    cube([1, 1, 5.14]);
  translate([147, 226, 0])
    cube([1, 1, 5.22]);
  translate([148, 226, 0])
    cube([1, 1, 5.45]);
  translate([149, 226, 0])
    cube([1, 1, 5.53]);
  translate([150, 226, 0])
    cube([1, 1, 5.49]);
  translate([151, 226, 0])
    cube([1, 1, 5.25]);
  translate([152, 226, 0])
    cube([1, 1, 5.22]);
  translate([153, 226, 0])
    cube([1, 1, 4.94]);
  translate([154, 226, 0])
    cube([1, 1, 4.98]);
  translate([155, 226, 0])
    cube([1, 1, 5.10]);
  translate([156, 226, 0])
    cube([1, 1, 5.10]);
  translate([157, 226, 0])
    cube([1, 1, 5.14]);
  translate([158, 226, 0])
    cube([1, 1, 5.14]);
  translate([159, 226, 0])
    cube([1, 1, 5.29]);
  translate([160, 226, 0])
    cube([1, 1, 5.65]);
  translate([161, 226, 0])
    cube([1, 1, 5.53]);
  translate([162, 226, 0])
    cube([1, 1, 5.14]);
  translate([163, 226, 0])
    cube([1, 1, 4.43]);
  translate([164, 226, 0])
    cube([1, 1, 4.20]);
  translate([165, 226, 0])
    cube([1, 1, 0.63]);
  translate([166, 226, 0])
    cube([1, 1, 1.02]);
  translate([167, 226, 0])
    cube([1, 1, 1.10]);
  translate([168, 226, 0])
    cube([1, 1, 1.25]);
  translate([169, 226, 0])
    cube([1, 1, 1.33]);
  translate([170, 226, 0])
    cube([1, 1, 1.57]);
  translate([171, 226, 0])
    cube([1, 1, 3.14]);
  translate([172, 226, 0])
    cube([1, 1, 4.43]);
  translate([173, 226, 0])
    cube([1, 1, 1.88]);
  translate([174, 226, 0])
    cube([1, 1, 1.37]);
  translate([175, 226, 0])
    cube([1, 1, 1.84]);
  translate([176, 226, 0])
    cube([1, 1, 6.20]);
  translate([177, 226, 0])
    cube([1, 1, 2.04]);
  translate([178, 226, 0])
    cube([1, 1, 2.04]);
  translate([179, 226, 0])
    cube([1, 1, 2.00]);
  translate([180, 226, 0])
    cube([1, 1, 2.08]);
  translate([181, 226, 0])
    cube([1, 1, 2.08]);
  translate([182, 226, 0])
    cube([1, 1, 2.00]);
  translate([183, 226, 0])
    cube([1, 1, 2.04]);
  translate([184, 226, 0])
    cube([1, 1, 2.04]);
  translate([185, 226, 0])
    cube([1, 1, 2.04]);
  translate([186, 226, 0])
    cube([1, 1, 2.04]);
  translate([187, 226, 0])
    cube([1, 1, 2.04]);
  translate([188, 226, 0])
    cube([1, 1, 2.04]);
  translate([189, 226, 0])
    cube([1, 1, 2.04]);
  translate([190, 226, 0])
    cube([1, 1, 2.04]);
  translate([191, 226, 0])
    cube([1, 1, 2.04]);
  translate([192, 226, 0])
    cube([1, 1, 2.04]);
  translate([193, 226, 0])
    cube([1, 1, 2.04]);
  translate([194, 226, 0])
    cube([1, 1, 2.04]);
  translate([195, 226, 0])
    cube([1, 1, 2.08]);
  translate([196, 226, 0])
    cube([1, 1, 2.04]);
  translate([197, 226, 0])
    cube([1, 1, 2.04]);
  translate([198, 226, 0])
    cube([1, 1, 2.04]);
  translate([199, 226, 0])
    cube([1, 1, 2.04]);
  translate([200, 226, 0])
    cube([1, 1, 2.04]);
  translate([201, 226, 0])
    cube([1, 1, 2.08]);
  translate([202, 226, 0])
    cube([1, 1, 2.08]);
  translate([203, 226, 0])
    cube([1, 1, 2.04]);
  translate([204, 226, 0])
    cube([1, 1, 2.04]);
  translate([205, 226, 0])
    cube([1, 1, 2.04]);
  translate([206, 226, 0])
    cube([1, 1, 2.00]);
  translate([207, 226, 0])
    cube([1, 1, 2.00]);
  translate([208, 226, 0])
    cube([1, 1, 2.12]);
  translate([209, 226, 0])
    cube([1, 1, 2.00]);
  translate([210, 226, 0])
    cube([1, 1, 2.00]);
  translate([211, 226, 0])
    cube([1, 1, 2.04]);
  translate([212, 226, 0])
    cube([1, 1, 2.08]);
  translate([213, 226, 0])
    cube([1, 1, 2.04]);
  translate([214, 226, 0])
    cube([1, 1, 2.04]);
  translate([215, 226, 0])
    cube([1, 1, 2.04]);
  translate([216, 226, 0])
    cube([1, 1, 2.04]);
  translate([217, 226, 0])
    cube([1, 1, 2.04]);
  translate([218, 226, 0])
    cube([1, 1, 2.04]);
  translate([219, 226, 0])
    cube([1, 1, 2.04]);
  translate([220, 226, 0])
    cube([1, 1, 2.04]);
  translate([221, 226, 0])
    cube([1, 1, 2.04]);
  translate([222, 226, 0])
    cube([1, 1, 2.04]);
  translate([223, 226, 0])
    cube([1, 1, 2.04]);
  translate([224, 226, 0])
    cube([1, 1, 2.04]);
  translate([225, 226, 0])
    cube([1, 1, 2.04]);
  translate([226, 226, 0])
    cube([1, 1, 2.04]);
  translate([227, 226, 0])
    cube([1, 1, 2.04]);
  translate([228, 226, 0])
    cube([1, 1, 2.04]);
  translate([229, 226, 0])
    cube([1, 1, 2.04]);
  translate([230, 226, 0])
    cube([1, 1, 2.04]);
  translate([231, 226, 0])
    cube([1, 1, 2.08]);
  translate([232, 226, 0])
    cube([1, 1, 2.04]);
  translate([233, 226, 0])
    cube([1, 1, 2.04]);
  translate([234, 226, 0])
    cube([1, 1, 2.04]);
  translate([235, 226, 0])
    cube([1, 1, 2.04]);
  translate([236, 226, 0])
    cube([1, 1, 2.04]);
  translate([237, 226, 0])
    cube([1, 1, 2.04]);
  translate([238, 226, 0])
    cube([1, 1, 2.04]);
  translate([239, 226, 0])
    cube([1, 1, 2.04]);
  translate([240, 226, 0])
    cube([1, 1, 2.04]);
  translate([241, 226, 0])
    cube([1, 1, 2.04]);
  translate([242, 226, 0])
    cube([1, 1, 2.04]);
  translate([243, 226, 0])
    cube([1, 1, 2.04]);
  translate([244, 226, 0])
    cube([1, 1, 2.04]);
  translate([245, 226, 0])
    cube([1, 1, 2.04]);
  translate([246, 226, 0])
    cube([1, 1, 2.04]);
  translate([0, 227, 0])
    cube([1, 1, 2.31]);
  translate([1, 227, 0])
    cube([1, 1, 2.20]);
  translate([2, 227, 0])
    cube([1, 1, 2.20]);
  translate([3, 227, 0])
    cube([1, 1, 2.27]);
  translate([4, 227, 0])
    cube([1, 1, 2.20]);
  translate([5, 227, 0])
    cube([1, 1, 2.20]);
  translate([6, 227, 0])
    cube([1, 1, 2.20]);
  translate([7, 227, 0])
    cube([1, 1, 2.20]);
  translate([8, 227, 0])
    cube([1, 1, 2.20]);
  translate([9, 227, 0])
    cube([1, 1, 2.16]);
  translate([10, 227, 0])
    cube([1, 1, 2.24]);
  translate([11, 227, 0])
    cube([1, 1, 2.20]);
  translate([12, 227, 0])
    cube([1, 1, 2.16]);
  translate([13, 227, 0])
    cube([1, 1, 2.20]);
  translate([14, 227, 0])
    cube([1, 1, 2.20]);
  translate([15, 227, 0])
    cube([1, 1, 2.27]);
  translate([16, 227, 0])
    cube([1, 1, 2.16]);
  translate([17, 227, 0])
    cube([1, 1, 2.20]);
  translate([18, 227, 0])
    cube([1, 1, 2.24]);
  translate([19, 227, 0])
    cube([1, 1, 2.24]);
  translate([20, 227, 0])
    cube([1, 1, 2.27]);
  translate([21, 227, 0])
    cube([1, 1, 2.27]);
  translate([22, 227, 0])
    cube([1, 1, 2.20]);
  translate([23, 227, 0])
    cube([1, 1, 2.20]);
  translate([24, 227, 0])
    cube([1, 1, 2.20]);
  translate([25, 227, 0])
    cube([1, 1, 2.20]);
  translate([26, 227, 0])
    cube([1, 1, 2.20]);
  translate([27, 227, 0])
    cube([1, 1, 2.24]);
  translate([28, 227, 0])
    cube([1, 1, 2.20]);
  translate([29, 227, 0])
    cube([1, 1, 2.20]);
  translate([30, 227, 0])
    cube([1, 1, 2.20]);
  translate([31, 227, 0])
    cube([1, 1, 2.20]);
  translate([32, 227, 0])
    cube([1, 1, 2.24]);
  translate([33, 227, 0])
    cube([1, 1, 2.20]);
  translate([34, 227, 0])
    cube([1, 1, 2.20]);
  translate([35, 227, 0])
    cube([1, 1, 2.20]);
  translate([36, 227, 0])
    cube([1, 1, 2.20]);
  translate([37, 227, 0])
    cube([1, 1, 2.20]);
  translate([38, 227, 0])
    cube([1, 1, 2.20]);
  translate([39, 227, 0])
    cube([1, 1, 2.24]);
  translate([40, 227, 0])
    cube([1, 1, 2.20]);
  translate([41, 227, 0])
    cube([1, 1, 2.16]);
  translate([42, 227, 0])
    cube([1, 1, 2.16]);
  translate([43, 227, 0])
    cube([1, 1, 2.16]);
  translate([44, 227, 0])
    cube([1, 1, 2.16]);
  translate([45, 227, 0])
    cube([1, 1, 2.16]);
  translate([46, 227, 0])
    cube([1, 1, 2.16]);
  translate([47, 227, 0])
    cube([1, 1, 2.12]);
  translate([48, 227, 0])
    cube([1, 1, 0.63]);
  translate([49, 227, 0])
    cube([1, 1, 7.65]);
  translate([50, 227, 0])
    cube([1, 1, 8.59]);
  translate([51, 227, 0])
    cube([1, 1, 9.29]);
  translate([52, 227, 0])
    cube([1, 1, 6.90]);
  translate([53, 227, 0])
    cube([1, 1, 1.14]);
  translate([54, 227, 0])
    cube([1, 1, 1.25]);
  translate([55, 227, 0])
    cube([1, 1, 1.25]);
  translate([56, 227, 0])
    cube([1, 1, 1.76]);
  translate([57, 227, 0])
    cube([1, 1, 5.29]);
  translate([58, 227, 0])
    cube([1, 1, 5.02]);
  translate([59, 227, 0])
    cube([1, 1, 2.12]);
  translate([60, 227, 0])
    cube([1, 1, 1.29]);
  translate([61, 227, 0])
    cube([1, 1, 1.29]);
  translate([62, 227, 0])
    cube([1, 1, 1.02]);
  translate([63, 227, 0])
    cube([1, 1, 0.71]);
  translate([64, 227, 0])
    cube([1, 1, 4.86]);
  translate([65, 227, 0])
    cube([1, 1, 2.16]);
  translate([66, 227, 0])
    cube([1, 1, 2.39]);
  translate([67, 227, 0])
    cube([1, 1, 2.51]);
  translate([68, 227, 0])
    cube([1, 1, 2.75]);
  translate([69, 227, 0])
    cube([1, 1, 2.98]);
  translate([70, 227, 0])
    cube([1, 1, 3.10]);
  translate([71, 227, 0])
    cube([1, 1, 3.37]);
  translate([72, 227, 0])
    cube([1, 1, 3.53]);
  translate([73, 227, 0])
    cube([1, 1, 3.69]);
  translate([74, 227, 0])
    cube([1, 1, 3.80]);
  translate([75, 227, 0])
    cube([1, 1, 3.92]);
  translate([76, 227, 0])
    cube([1, 1, 4.16]);
  translate([77, 227, 0])
    cube([1, 1, 4.24]);
  translate([78, 227, 0])
    cube([1, 1, 4.27]);
  translate([79, 227, 0])
    cube([1, 1, 4.35]);
  translate([80, 227, 0])
    cube([1, 1, 4.39]);
  translate([81, 227, 0])
    cube([1, 1, 4.39]);
  translate([82, 227, 0])
    cube([1, 1, 4.51]);
  translate([83, 227, 0])
    cube([1, 1, 4.59]);
  translate([84, 227, 0])
    cube([1, 1, 4.82]);
  translate([85, 227, 0])
    cube([1, 1, 5.10]);
  translate([86, 227, 0])
    cube([1, 1, 5.25]);
  translate([87, 227, 0])
    cube([1, 1, 5.41]);
  translate([88, 227, 0])
    cube([1, 1, 5.41]);
  translate([89, 227, 0])
    cube([1, 1, 5.10]);
  translate([90, 227, 0])
    cube([1, 1, 5.02]);
  translate([91, 227, 0])
    cube([1, 1, 4.82]);
  translate([92, 227, 0])
    cube([1, 1, 4.86]);
  translate([93, 227, 0])
    cube([1, 1, 4.75]);
  translate([94, 227, 0])
    cube([1, 1, 4.59]);
  translate([95, 227, 0])
    cube([1, 1, 4.43]);
  translate([96, 227, 0])
    cube([1, 1, 4.43]);
  translate([97, 227, 0])
    cube([1, 1, 4.35]);
  translate([98, 227, 0])
    cube([1, 1, 4.35]);
  translate([99, 227, 0])
    cube([1, 1, 4.35]);
  translate([100, 227, 0])
    cube([1, 1, 4.31]);
  translate([101, 227, 0])
    cube([1, 1, 4.27]);
  translate([102, 227, 0])
    cube([1, 1, 4.04]);
  translate([103, 227, 0])
    cube([1, 1, 4.04]);
  translate([104, 227, 0])
    cube([1, 1, 4.00]);
  translate([105, 227, 0])
    cube([1, 1, 4.08]);
  translate([106, 227, 0])
    cube([1, 1, 4.12]);
  translate([107, 227, 0])
    cube([1, 1, 4.12]);
  translate([108, 227, 0])
    cube([1, 1, 3.88]);
  translate([109, 227, 0])
    cube([1, 1, 3.76]);
  translate([110, 227, 0])
    cube([1, 1, 2.82]);
  translate([111, 227, 0])
    cube([1, 1, 1.49]);
  translate([112, 227, 0])
    cube([1, 1, 2.08]);
  translate([113, 227, 0])
    cube([1, 1, 2.12]);
  translate([114, 227, 0])
    cube([1, 1, 1.92]);
  translate([115, 227, 0])
    cube([1, 1, 6.59]);
  translate([116, 227, 0])
    cube([1, 1, 4.71]);
  translate([117, 227, 0])
    cube([1, 1, 2.67]);
  translate([118, 227, 0])
    cube([1, 1, 2.04]);
  translate([119, 227, 0])
    cube([1, 1, 2.31]);
  translate([120, 227, 0])
    cube([1, 1, 2.67]);
  translate([121, 227, 0])
    cube([1, 1, 2.86]);
  translate([122, 227, 0])
    cube([1, 1, 2.98]);
  translate([123, 227, 0])
    cube([1, 1, 3.06]);
  translate([124, 227, 0])
    cube([1, 1, 3.10]);
  translate([125, 227, 0])
    cube([1, 1, 3.06]);
  translate([126, 227, 0])
    cube([1, 1, 3.06]);
  translate([127, 227, 0])
    cube([1, 1, 3.10]);
  translate([128, 227, 0])
    cube([1, 1, 3.10]);
  translate([129, 227, 0])
    cube([1, 1, 3.06]);
  translate([130, 227, 0])
    cube([1, 1, 3.22]);
  translate([131, 227, 0])
    cube([1, 1, 3.18]);
  translate([132, 227, 0])
    cube([1, 1, 3.25]);
  translate([133, 227, 0])
    cube([1, 1, 3.33]);
  translate([134, 227, 0])
    cube([1, 1, 3.29]);
  translate([135, 227, 0])
    cube([1, 1, 3.29]);
  translate([136, 227, 0])
    cube([1, 1, 3.45]);
  translate([137, 227, 0])
    cube([1, 1, 3.53]);
  translate([138, 227, 0])
    cube([1, 1, 3.61]);
  translate([139, 227, 0])
    cube([1, 1, 3.65]);
  translate([140, 227, 0])
    cube([1, 1, 3.80]);
  translate([141, 227, 0])
    cube([1, 1, 3.96]);
  translate([142, 227, 0])
    cube([1, 1, 4.16]);
  translate([143, 227, 0])
    cube([1, 1, 4.35]);
  translate([144, 227, 0])
    cube([1, 1, 4.63]);
  translate([145, 227, 0])
    cube([1, 1, 4.86]);
  translate([146, 227, 0])
    cube([1, 1, 5.14]);
  translate([147, 227, 0])
    cube([1, 1, 5.25]);
  translate([148, 227, 0])
    cube([1, 1, 5.45]);
  translate([149, 227, 0])
    cube([1, 1, 5.53]);
  translate([150, 227, 0])
    cube([1, 1, 5.49]);
  translate([151, 227, 0])
    cube([1, 1, 5.25]);
  translate([152, 227, 0])
    cube([1, 1, 5.02]);
  translate([153, 227, 0])
    cube([1, 1, 4.86]);
  translate([154, 227, 0])
    cube([1, 1, 4.90]);
  translate([155, 227, 0])
    cube([1, 1, 5.10]);
  translate([156, 227, 0])
    cube([1, 1, 4.98]);
  translate([157, 227, 0])
    cube([1, 1, 5.02]);
  translate([158, 227, 0])
    cube([1, 1, 5.02]);
  translate([159, 227, 0])
    cube([1, 1, 5.22]);
  translate([160, 227, 0])
    cube([1, 1, 5.57]);
  translate([161, 227, 0])
    cube([1, 1, 5.53]);
  translate([162, 227, 0])
    cube([1, 1, 5.14]);
  translate([163, 227, 0])
    cube([1, 1, 4.51]);
  translate([164, 227, 0])
    cube([1, 1, 4.35]);
  translate([165, 227, 0])
    cube([1, 1, 0.43]);
  translate([166, 227, 0])
    cube([1, 1, 1.06]);
  translate([167, 227, 0])
    cube([1, 1, 0.94]);
  translate([168, 227, 0])
    cube([1, 1, 1.22]);
  translate([169, 227, 0])
    cube([1, 1, 1.22]);
  translate([170, 227, 0])
    cube([1, 1, 1.41]);
  translate([171, 227, 0])
    cube([1, 1, 2.04]);
  translate([172, 227, 0])
    cube([1, 1, 5.06]);
  translate([173, 227, 0])
    cube([1, 1, 3.33]);
  translate([174, 227, 0])
    cube([1, 1, 1.49]);
  translate([175, 227, 0])
    cube([1, 1, 1.80]);
  translate([176, 227, 0])
    cube([1, 1, 7.73]);
  translate([177, 227, 0])
    cube([1, 1, 2.04]);
  translate([178, 227, 0])
    cube([1, 1, 2.04]);
  translate([179, 227, 0])
    cube([1, 1, 2.08]);
  translate([180, 227, 0])
    cube([1, 1, 2.04]);
  translate([181, 227, 0])
    cube([1, 1, 2.04]);
  translate([182, 227, 0])
    cube([1, 1, 2.00]);
  translate([183, 227, 0])
    cube([1, 1, 2.04]);
  translate([184, 227, 0])
    cube([1, 1, 2.04]);
  translate([185, 227, 0])
    cube([1, 1, 2.04]);
  translate([186, 227, 0])
    cube([1, 1, 2.04]);
  translate([187, 227, 0])
    cube([1, 1, 2.04]);
  translate([188, 227, 0])
    cube([1, 1, 2.04]);
  translate([189, 227, 0])
    cube([1, 1, 2.04]);
  translate([190, 227, 0])
    cube([1, 1, 2.04]);
  translate([191, 227, 0])
    cube([1, 1, 2.04]);
  translate([192, 227, 0])
    cube([1, 1, 2.04]);
  translate([193, 227, 0])
    cube([1, 1, 2.04]);
  translate([194, 227, 0])
    cube([1, 1, 2.04]);
  translate([195, 227, 0])
    cube([1, 1, 2.08]);
  translate([196, 227, 0])
    cube([1, 1, 2.04]);
  translate([197, 227, 0])
    cube([1, 1, 2.04]);
  translate([198, 227, 0])
    cube([1, 1, 2.04]);
  translate([199, 227, 0])
    cube([1, 1, 2.04]);
  translate([200, 227, 0])
    cube([1, 1, 2.04]);
  translate([201, 227, 0])
    cube([1, 1, 2.08]);
  translate([202, 227, 0])
    cube([1, 1, 2.08]);
  translate([203, 227, 0])
    cube([1, 1, 2.04]);
  translate([204, 227, 0])
    cube([1, 1, 2.04]);
  translate([205, 227, 0])
    cube([1, 1, 2.04]);
  translate([206, 227, 0])
    cube([1, 1, 2.00]);
  translate([207, 227, 0])
    cube([1, 1, 2.00]);
  translate([208, 227, 0])
    cube([1, 1, 2.12]);
  translate([209, 227, 0])
    cube([1, 1, 2.08]);
  translate([210, 227, 0])
    cube([1, 1, 2.08]);
  translate([211, 227, 0])
    cube([1, 1, 2.04]);
  translate([212, 227, 0])
    cube([1, 1, 2.08]);
  translate([213, 227, 0])
    cube([1, 1, 2.04]);
  translate([214, 227, 0])
    cube([1, 1, 2.04]);
  translate([215, 227, 0])
    cube([1, 1, 2.04]);
  translate([216, 227, 0])
    cube([1, 1, 2.04]);
  translate([217, 227, 0])
    cube([1, 1, 2.04]);
  translate([218, 227, 0])
    cube([1, 1, 2.04]);
  translate([219, 227, 0])
    cube([1, 1, 2.04]);
  translate([220, 227, 0])
    cube([1, 1, 2.04]);
  translate([221, 227, 0])
    cube([1, 1, 2.04]);
  translate([222, 227, 0])
    cube([1, 1, 2.04]);
  translate([223, 227, 0])
    cube([1, 1, 2.04]);
  translate([224, 227, 0])
    cube([1, 1, 2.04]);
  translate([225, 227, 0])
    cube([1, 1, 2.04]);
  translate([226, 227, 0])
    cube([1, 1, 2.04]);
  translate([227, 227, 0])
    cube([1, 1, 2.04]);
  translate([228, 227, 0])
    cube([1, 1, 2.04]);
  translate([229, 227, 0])
    cube([1, 1, 2.04]);
  translate([230, 227, 0])
    cube([1, 1, 2.04]);
  translate([231, 227, 0])
    cube([1, 1, 2.08]);
  translate([232, 227, 0])
    cube([1, 1, 2.04]);
  translate([233, 227, 0])
    cube([1, 1, 2.04]);
  translate([234, 227, 0])
    cube([1, 1, 2.04]);
  translate([235, 227, 0])
    cube([1, 1, 2.04]);
  translate([236, 227, 0])
    cube([1, 1, 2.04]);
  translate([237, 227, 0])
    cube([1, 1, 2.04]);
  translate([238, 227, 0])
    cube([1, 1, 2.04]);
  translate([239, 227, 0])
    cube([1, 1, 2.04]);
  translate([240, 227, 0])
    cube([1, 1, 2.04]);
  translate([241, 227, 0])
    cube([1, 1, 2.04]);
  translate([242, 227, 0])
    cube([1, 1, 2.04]);
  translate([243, 227, 0])
    cube([1, 1, 2.04]);
  translate([244, 227, 0])
    cube([1, 1, 2.04]);
  translate([245, 227, 0])
    cube([1, 1, 2.04]);
  translate([246, 227, 0])
    cube([1, 1, 2.04]);
  translate([0, 228, 0])
    cube([1, 1, 2.24]);
  translate([1, 228, 0])
    cube([1, 1, 2.24]);
  translate([2, 228, 0])
    cube([1, 1, 2.24]);
  translate([3, 228, 0])
    cube([1, 1, 2.24]);
  translate([4, 228, 0])
    cube([1, 1, 2.20]);
  translate([5, 228, 0])
    cube([1, 1, 2.20]);
  translate([6, 228, 0])
    cube([1, 1, 2.24]);
  translate([7, 228, 0])
    cube([1, 1, 2.24]);
  translate([8, 228, 0])
    cube([1, 1, 2.20]);
  translate([9, 228, 0])
    cube([1, 1, 2.20]);
  translate([10, 228, 0])
    cube([1, 1, 2.24]);
  translate([11, 228, 0])
    cube([1, 1, 2.24]);
  translate([12, 228, 0])
    cube([1, 1, 2.24]);
  translate([13, 228, 0])
    cube([1, 1, 2.24]);
  translate([14, 228, 0])
    cube([1, 1, 2.20]);
  translate([15, 228, 0])
    cube([1, 1, 2.24]);
  translate([16, 228, 0])
    cube([1, 1, 2.24]);
  translate([17, 228, 0])
    cube([1, 1, 2.24]);
  translate([18, 228, 0])
    cube([1, 1, 2.24]);
  translate([19, 228, 0])
    cube([1, 1, 2.24]);
  translate([20, 228, 0])
    cube([1, 1, 2.24]);
  translate([21, 228, 0])
    cube([1, 1, 2.24]);
  translate([22, 228, 0])
    cube([1, 1, 2.24]);
  translate([23, 228, 0])
    cube([1, 1, 2.24]);
  translate([24, 228, 0])
    cube([1, 1, 2.24]);
  translate([25, 228, 0])
    cube([1, 1, 2.20]);
  translate([26, 228, 0])
    cube([1, 1, 2.20]);
  translate([27, 228, 0])
    cube([1, 1, 2.24]);
  translate([28, 228, 0])
    cube([1, 1, 2.20]);
  translate([29, 228, 0])
    cube([1, 1, 2.20]);
  translate([30, 228, 0])
    cube([1, 1, 2.20]);
  translate([31, 228, 0])
    cube([1, 1, 2.20]);
  translate([32, 228, 0])
    cube([1, 1, 2.27]);
  translate([33, 228, 0])
    cube([1, 1, 2.24]);
  translate([34, 228, 0])
    cube([1, 1, 2.24]);
  translate([35, 228, 0])
    cube([1, 1, 2.20]);
  translate([36, 228, 0])
    cube([1, 1, 2.20]);
  translate([37, 228, 0])
    cube([1, 1, 2.20]);
  translate([38, 228, 0])
    cube([1, 1, 2.20]);
  translate([39, 228, 0])
    cube([1, 1, 2.20]);
  translate([40, 228, 0])
    cube([1, 1, 2.20]);
  translate([41, 228, 0])
    cube([1, 1, 2.16]);
  translate([42, 228, 0])
    cube([1, 1, 2.16]);
  translate([43, 228, 0])
    cube([1, 1, 2.16]);
  translate([44, 228, 0])
    cube([1, 1, 2.16]);
  translate([45, 228, 0])
    cube([1, 1, 2.16]);
  translate([46, 228, 0])
    cube([1, 1, 2.12]);
  translate([47, 228, 0])
    cube([1, 1, 2.20]);
  translate([48, 228, 0])
    cube([1, 1, 0.67]);
  translate([49, 228, 0])
    cube([1, 1, 8.63]);
  translate([50, 228, 0])
    cube([1, 1, 9.10]);
  translate([51, 228, 0])
    cube([1, 1, 9.10]);
  translate([52, 228, 0])
    cube([1, 1, 2.00]);
  translate([53, 228, 0])
    cube([1, 1, 0.98]);
  translate([54, 228, 0])
    cube([1, 1, 1.18]);
  translate([55, 228, 0])
    cube([1, 1, 1.37]);
  translate([56, 228, 0])
    cube([1, 1, 2.35]);
  translate([57, 228, 0])
    cube([1, 1, 5.76]);
  translate([58, 228, 0])
    cube([1, 1, 5.65]);
  translate([59, 228, 0])
    cube([1, 1, 2.08]);
  translate([60, 228, 0])
    cube([1, 1, 0.98]);
  translate([61, 228, 0])
    cube([1, 1, 1.06]);
  translate([62, 228, 0])
    cube([1, 1, 0.90]);
  translate([63, 228, 0])
    cube([1, 1, 0.63]);
  translate([64, 228, 0])
    cube([1, 1, 1.49]);
  translate([65, 228, 0])
    cube([1, 1, 1.06]);
  translate([66, 228, 0])
    cube([1, 1, 0.98]);
  translate([67, 228, 0])
    cube([1, 1, 1.10]);
  translate([68, 228, 0])
    cube([1, 1, 1.92]);
  translate([69, 228, 0])
    cube([1, 1, 2.94]);
  translate([70, 228, 0])
    cube([1, 1, 2.90]);
  translate([71, 228, 0])
    cube([1, 1, 3.37]);
  translate([72, 228, 0])
    cube([1, 1, 3.37]);
  translate([73, 228, 0])
    cube([1, 1, 3.57]);
  translate([74, 228, 0])
    cube([1, 1, 3.76]);
  translate([75, 228, 0])
    cube([1, 1, 3.92]);
  translate([76, 228, 0])
    cube([1, 1, 4.12]);
  translate([77, 228, 0])
    cube([1, 1, 4.27]);
  translate([78, 228, 0])
    cube([1, 1, 4.27]);
  translate([79, 228, 0])
    cube([1, 1, 4.43]);
  translate([80, 228, 0])
    cube([1, 1, 4.55]);
  translate([81, 228, 0])
    cube([1, 1, 4.51]);
  translate([82, 228, 0])
    cube([1, 1, 4.55]);
  translate([83, 228, 0])
    cube([1, 1, 4.63]);
  translate([84, 228, 0])
    cube([1, 1, 4.82]);
  translate([85, 228, 0])
    cube([1, 1, 5.14]);
  translate([86, 228, 0])
    cube([1, 1, 5.33]);
  translate([87, 228, 0])
    cube([1, 1, 5.41]);
  translate([88, 228, 0])
    cube([1, 1, 5.41]);
  translate([89, 228, 0])
    cube([1, 1, 5.22]);
  translate([90, 228, 0])
    cube([1, 1, 5.02]);
  translate([91, 228, 0])
    cube([1, 1, 4.78]);
  translate([92, 228, 0])
    cube([1, 1, 4.71]);
  translate([93, 228, 0])
    cube([1, 1, 4.63]);
  translate([94, 228, 0])
    cube([1, 1, 4.47]);
  translate([95, 228, 0])
    cube([1, 1, 4.51]);
  translate([96, 228, 0])
    cube([1, 1, 4.43]);
  translate([97, 228, 0])
    cube([1, 1, 4.35]);
  translate([98, 228, 0])
    cube([1, 1, 4.35]);
  translate([99, 228, 0])
    cube([1, 1, 4.24]);
  translate([100, 228, 0])
    cube([1, 1, 4.24]);
  translate([101, 228, 0])
    cube([1, 1, 4.16]);
  translate([102, 228, 0])
    cube([1, 1, 4.04]);
  translate([103, 228, 0])
    cube([1, 1, 4.00]);
  translate([104, 228, 0])
    cube([1, 1, 4.08]);
  translate([105, 228, 0])
    cube([1, 1, 4.04]);
  translate([106, 228, 0])
    cube([1, 1, 4.08]);
  translate([107, 228, 0])
    cube([1, 1, 4.00]);
  translate([108, 228, 0])
    cube([1, 1, 3.84]);
  translate([109, 228, 0])
    cube([1, 1, 3.80]);
  translate([110, 228, 0])
    cube([1, 1, 1.14]);
  translate([111, 228, 0])
    cube([1, 1, 2.12]);
  translate([112, 228, 0])
    cube([1, 1, 2.04]);
  translate([113, 228, 0])
    cube([1, 1, 2.00]);
  translate([114, 228, 0])
    cube([1, 1, 2.08]);
  translate([115, 228, 0])
    cube([1, 1, 5.41]);
  translate([116, 228, 0])
    cube([1, 1, 5.61]);
  translate([117, 228, 0])
    cube([1, 1, 3.76]);
  translate([118, 228, 0])
    cube([1, 1, 2.27]);
  translate([119, 228, 0])
    cube([1, 1, 2.43]);
  translate([120, 228, 0])
    cube([1, 1, 2.75]);
  translate([121, 228, 0])
    cube([1, 1, 2.90]);
  translate([122, 228, 0])
    cube([1, 1, 3.02]);
  translate([123, 228, 0])
    cube([1, 1, 3.10]);
  translate([124, 228, 0])
    cube([1, 1, 3.14]);
  translate([125, 228, 0])
    cube([1, 1, 3.14]);
  translate([126, 228, 0])
    cube([1, 1, 3.10]);
  translate([127, 228, 0])
    cube([1, 1, 3.10]);
  translate([128, 228, 0])
    cube([1, 1, 3.06]);
  translate([129, 228, 0])
    cube([1, 1, 3.06]);
  translate([130, 228, 0])
    cube([1, 1, 3.06]);
  translate([131, 228, 0])
    cube([1, 1, 3.14]);
  translate([132, 228, 0])
    cube([1, 1, 3.22]);
  translate([133, 228, 0])
    cube([1, 1, 3.33]);
  translate([134, 228, 0])
    cube([1, 1, 3.33]);
  translate([135, 228, 0])
    cube([1, 1, 3.33]);
  translate([136, 228, 0])
    cube([1, 1, 3.41]);
  translate([137, 228, 0])
    cube([1, 1, 3.45]);
  translate([138, 228, 0])
    cube([1, 1, 3.53]);
  translate([139, 228, 0])
    cube([1, 1, 3.65]);
  translate([140, 228, 0])
    cube([1, 1, 3.76]);
  translate([141, 228, 0])
    cube([1, 1, 3.96]);
  translate([142, 228, 0])
    cube([1, 1, 4.08]);
  translate([143, 228, 0])
    cube([1, 1, 4.31]);
  translate([144, 228, 0])
    cube([1, 1, 4.47]);
  translate([145, 228, 0])
    cube([1, 1, 4.78]);
  translate([146, 228, 0])
    cube([1, 1, 5.06]);
  translate([147, 228, 0])
    cube([1, 1, 5.18]);
  translate([148, 228, 0])
    cube([1, 1, 5.41]);
  translate([149, 228, 0])
    cube([1, 1, 5.53]);
  translate([150, 228, 0])
    cube([1, 1, 5.41]);
  translate([151, 228, 0])
    cube([1, 1, 5.18]);
  translate([152, 228, 0])
    cube([1, 1, 5.06]);
  translate([153, 228, 0])
    cube([1, 1, 4.82]);
  translate([154, 228, 0])
    cube([1, 1, 4.90]);
  translate([155, 228, 0])
    cube([1, 1, 4.98]);
  translate([156, 228, 0])
    cube([1, 1, 4.98]);
  translate([157, 228, 0])
    cube([1, 1, 4.94]);
  translate([158, 228, 0])
    cube([1, 1, 4.98]);
  translate([159, 228, 0])
    cube([1, 1, 5.22]);
  translate([160, 228, 0])
    cube([1, 1, 5.41]);
  translate([161, 228, 0])
    cube([1, 1, 5.37]);
  translate([162, 228, 0])
    cube([1, 1, 5.18]);
  translate([163, 228, 0])
    cube([1, 1, 4.39]);
  translate([164, 228, 0])
    cube([1, 1, 4.31]);
  translate([165, 228, 0])
    cube([1, 1, 0.35]);
  translate([166, 228, 0])
    cube([1, 1, 0.90]);
  translate([167, 228, 0])
    cube([1, 1, 1.06]);
  translate([168, 228, 0])
    cube([1, 1, 1.18]);
  translate([169, 228, 0])
    cube([1, 1, 1.22]);
  translate([170, 228, 0])
    cube([1, 1, 1.37]);
  translate([171, 228, 0])
    cube([1, 1, 1.18]);
  translate([172, 228, 0])
    cube([1, 1, 2.94]);
  translate([173, 228, 0])
    cube([1, 1, 4.12]);
  translate([174, 228, 0])
    cube([1, 1, 1.53]);
  translate([175, 228, 0])
    cube([1, 1, 1.53]);
  translate([176, 228, 0])
    cube([1, 1, 6.63]);
  translate([177, 228, 0])
    cube([1, 1, 2.04]);
  translate([178, 228, 0])
    cube([1, 1, 2.04]);
  translate([179, 228, 0])
    cube([1, 1, 2.04]);
  translate([180, 228, 0])
    cube([1, 1, 2.04]);
  translate([181, 228, 0])
    cube([1, 1, 2.04]);
  translate([182, 228, 0])
    cube([1, 1, 2.04]);
  translate([183, 228, 0])
    cube([1, 1, 2.04]);
  translate([184, 228, 0])
    cube([1, 1, 2.04]);
  translate([185, 228, 0])
    cube([1, 1, 2.04]);
  translate([186, 228, 0])
    cube([1, 1, 2.04]);
  translate([187, 228, 0])
    cube([1, 1, 2.04]);
  translate([188, 228, 0])
    cube([1, 1, 2.04]);
  translate([189, 228, 0])
    cube([1, 1, 2.08]);
  translate([190, 228, 0])
    cube([1, 1, 2.04]);
  translate([191, 228, 0])
    cube([1, 1, 2.04]);
  translate([192, 228, 0])
    cube([1, 1, 2.04]);
  translate([193, 228, 0])
    cube([1, 1, 2.04]);
  translate([194, 228, 0])
    cube([1, 1, 2.04]);
  translate([195, 228, 0])
    cube([1, 1, 2.04]);
  translate([196, 228, 0])
    cube([1, 1, 2.04]);
  translate([197, 228, 0])
    cube([1, 1, 2.08]);
  translate([198, 228, 0])
    cube([1, 1, 2.04]);
  translate([199, 228, 0])
    cube([1, 1, 2.04]);
  translate([200, 228, 0])
    cube([1, 1, 2.04]);
  translate([201, 228, 0])
    cube([1, 1, 2.08]);
  translate([202, 228, 0])
    cube([1, 1, 2.08]);
  translate([203, 228, 0])
    cube([1, 1, 2.08]);
  translate([204, 228, 0])
    cube([1, 1, 2.08]);
  translate([205, 228, 0])
    cube([1, 1, 2.08]);
  translate([206, 228, 0])
    cube([1, 1, 2.08]);
  translate([207, 228, 0])
    cube([1, 1, 2.08]);
  translate([208, 228, 0])
    cube([1, 1, 2.08]);
  translate([209, 228, 0])
    cube([1, 1, 2.04]);
  translate([210, 228, 0])
    cube([1, 1, 2.08]);
  translate([211, 228, 0])
    cube([1, 1, 2.08]);
  translate([212, 228, 0])
    cube([1, 1, 2.08]);
  translate([213, 228, 0])
    cube([1, 1, 2.08]);
  translate([214, 228, 0])
    cube([1, 1, 2.04]);
  translate([215, 228, 0])
    cube([1, 1, 2.04]);
  translate([216, 228, 0])
    cube([1, 1, 2.04]);
  translate([217, 228, 0])
    cube([1, 1, 2.04]);
  translate([218, 228, 0])
    cube([1, 1, 2.08]);
  translate([219, 228, 0])
    cube([1, 1, 2.08]);
  translate([220, 228, 0])
    cube([1, 1, 2.04]);
  translate([221, 228, 0])
    cube([1, 1, 2.04]);
  translate([222, 228, 0])
    cube([1, 1, 2.04]);
  translate([223, 228, 0])
    cube([1, 1, 2.04]);
  translate([224, 228, 0])
    cube([1, 1, 2.04]);
  translate([225, 228, 0])
    cube([1, 1, 2.04]);
  translate([226, 228, 0])
    cube([1, 1, 2.04]);
  translate([227, 228, 0])
    cube([1, 1, 2.04]);
  translate([228, 228, 0])
    cube([1, 1, 2.04]);
  translate([229, 228, 0])
    cube([1, 1, 2.04]);
  translate([230, 228, 0])
    cube([1, 1, 2.04]);
  translate([231, 228, 0])
    cube([1, 1, 2.04]);
  translate([232, 228, 0])
    cube([1, 1, 2.04]);
  translate([233, 228, 0])
    cube([1, 1, 2.04]);
  translate([234, 228, 0])
    cube([1, 1, 2.04]);
  translate([235, 228, 0])
    cube([1, 1, 2.04]);
  translate([236, 228, 0])
    cube([1, 1, 2.04]);
  translate([237, 228, 0])
    cube([1, 1, 2.04]);
  translate([238, 228, 0])
    cube([1, 1, 2.04]);
  translate([239, 228, 0])
    cube([1, 1, 2.04]);
  translate([240, 228, 0])
    cube([1, 1, 2.04]);
  translate([241, 228, 0])
    cube([1, 1, 2.04]);
  translate([242, 228, 0])
    cube([1, 1, 2.04]);
  translate([243, 228, 0])
    cube([1, 1, 2.04]);
  translate([244, 228, 0])
    cube([1, 1, 2.04]);
  translate([245, 228, 0])
    cube([1, 1, 2.04]);
  translate([246, 228, 0])
    cube([1, 1, 2.04]);
  translate([0, 229, 0])
    cube([1, 1, 2.24]);
  translate([1, 229, 0])
    cube([1, 1, 2.20]);
  translate([2, 229, 0])
    cube([1, 1, 2.24]);
  translate([3, 229, 0])
    cube([1, 1, 2.24]);
  translate([4, 229, 0])
    cube([1, 1, 2.24]);
  translate([5, 229, 0])
    cube([1, 1, 2.24]);
  translate([6, 229, 0])
    cube([1, 1, 2.24]);
  translate([7, 229, 0])
    cube([1, 1, 2.24]);
  translate([8, 229, 0])
    cube([1, 1, 2.24]);
  translate([9, 229, 0])
    cube([1, 1, 2.24]);
  translate([10, 229, 0])
    cube([1, 1, 2.24]);
  translate([11, 229, 0])
    cube([1, 1, 2.24]);
  translate([12, 229, 0])
    cube([1, 1, 2.24]);
  translate([13, 229, 0])
    cube([1, 1, 2.27]);
  translate([14, 229, 0])
    cube([1, 1, 2.20]);
  translate([15, 229, 0])
    cube([1, 1, 2.27]);
  translate([16, 229, 0])
    cube([1, 1, 2.24]);
  translate([17, 229, 0])
    cube([1, 1, 2.24]);
  translate([18, 229, 0])
    cube([1, 1, 2.24]);
  translate([19, 229, 0])
    cube([1, 1, 2.24]);
  translate([20, 229, 0])
    cube([1, 1, 2.24]);
  translate([21, 229, 0])
    cube([1, 1, 2.24]);
  translate([22, 229, 0])
    cube([1, 1, 2.24]);
  translate([23, 229, 0])
    cube([1, 1, 2.24]);
  translate([24, 229, 0])
    cube([1, 1, 2.24]);
  translate([25, 229, 0])
    cube([1, 1, 2.16]);
  translate([26, 229, 0])
    cube([1, 1, 2.24]);
  translate([27, 229, 0])
    cube([1, 1, 2.24]);
  translate([28, 229, 0])
    cube([1, 1, 2.20]);
  translate([29, 229, 0])
    cube([1, 1, 2.20]);
  translate([30, 229, 0])
    cube([1, 1, 2.20]);
  translate([31, 229, 0])
    cube([1, 1, 2.20]);
  translate([32, 229, 0])
    cube([1, 1, 2.27]);
  translate([33, 229, 0])
    cube([1, 1, 2.20]);
  translate([34, 229, 0])
    cube([1, 1, 2.24]);
  translate([35, 229, 0])
    cube([1, 1, 2.24]);
  translate([36, 229, 0])
    cube([1, 1, 2.16]);
  translate([37, 229, 0])
    cube([1, 1, 2.16]);
  translate([38, 229, 0])
    cube([1, 1, 2.16]);
  translate([39, 229, 0])
    cube([1, 1, 2.16]);
  translate([40, 229, 0])
    cube([1, 1, 2.20]);
  translate([41, 229, 0])
    cube([1, 1, 2.20]);
  translate([42, 229, 0])
    cube([1, 1, 2.20]);
  translate([43, 229, 0])
    cube([1, 1, 2.20]);
  translate([44, 229, 0])
    cube([1, 1, 2.20]);
  translate([45, 229, 0])
    cube([1, 1, 2.20]);
  translate([46, 229, 0])
    cube([1, 1, 2.27]);
  translate([47, 229, 0])
    cube([1, 1, 3.76]);
  translate([48, 229, 0])
    cube([1, 1, 5.41]);
  translate([49, 229, 0])
    cube([1, 1, 8.55]);
  translate([50, 229, 0])
    cube([1, 1, 9.33]);
  translate([51, 229, 0])
    cube([1, 1, 9.88]);
  translate([52, 229, 0])
    cube([1, 1, 1.29]);
  translate([53, 229, 0])
    cube([1, 1, 1.22]);
  translate([54, 229, 0])
    cube([1, 1, 1.25]);
  translate([55, 229, 0])
    cube([1, 1, 1.45]);
  translate([56, 229, 0])
    cube([1, 1, 4.12]);
  translate([57, 229, 0])
    cube([1, 1, 5.76]);
  translate([58, 229, 0])
    cube([1, 1, 3.73]);
  translate([59, 229, 0])
    cube([1, 1, 1.33]);
  translate([60, 229, 0])
    cube([1, 1, 0.86]);
  translate([61, 229, 0])
    cube([1, 1, 0.86]);
  translate([62, 229, 0])
    cube([1, 1, 0.12]);
  translate([63, 229, 0])
    cube([1, 1, 1.10]);
  translate([64, 229, 0])
    cube([1, 1, 1.29]);
  translate([65, 229, 0])
    cube([1, 1, 1.14]);
  translate([66, 229, 0])
    cube([1, 1, 1.18]);
  translate([67, 229, 0])
    cube([1, 1, 1.14]);
  translate([68, 229, 0])
    cube([1, 1, 1.06]);
  translate([69, 229, 0])
    cube([1, 1, 1.14]);
  translate([70, 229, 0])
    cube([1, 1, 1.18]);
  translate([71, 229, 0])
    cube([1, 1, 1.18]);
  translate([72, 229, 0])
    cube([1, 1, 1.10]);
  translate([73, 229, 0])
    cube([1, 1, 1.14]);
  translate([74, 229, 0])
    cube([1, 1, 1.33]);
  translate([75, 229, 0])
    cube([1, 1, 2.39]);
  translate([76, 229, 0])
    cube([1, 1, 3.88]);
  translate([77, 229, 0])
    cube([1, 1, 4.04]);
  translate([78, 229, 0])
    cube([1, 1, 4.35]);
  translate([79, 229, 0])
    cube([1, 1, 4.51]);
  translate([80, 229, 0])
    cube([1, 1, 4.43]);
  translate([81, 229, 0])
    cube([1, 1, 4.47]);
  translate([82, 229, 0])
    cube([1, 1, 4.55]);
  translate([83, 229, 0])
    cube([1, 1, 4.67]);
  translate([84, 229, 0])
    cube([1, 1, 4.90]);
  translate([85, 229, 0])
    cube([1, 1, 5.18]);
  translate([86, 229, 0])
    cube([1, 1, 5.25]);
  translate([87, 229, 0])
    cube([1, 1, 5.29]);
  translate([88, 229, 0])
    cube([1, 1, 5.33]);
  translate([89, 229, 0])
    cube([1, 1, 5.14]);
  translate([90, 229, 0])
    cube([1, 1, 4.90]);
  translate([91, 229, 0])
    cube([1, 1, 4.78]);
  translate([92, 229, 0])
    cube([1, 1, 4.59]);
  translate([93, 229, 0])
    cube([1, 1, 4.55]);
  translate([94, 229, 0])
    cube([1, 1, 4.51]);
  translate([95, 229, 0])
    cube([1, 1, 4.47]);
  translate([96, 229, 0])
    cube([1, 1, 4.39]);
  translate([97, 229, 0])
    cube([1, 1, 4.31]);
  translate([98, 229, 0])
    cube([1, 1, 4.31]);
  translate([99, 229, 0])
    cube([1, 1, 4.24]);
  translate([100, 229, 0])
    cube([1, 1, 4.16]);
  translate([101, 229, 0])
    cube([1, 1, 4.16]);
  translate([102, 229, 0])
    cube([1, 1, 4.00]);
  translate([103, 229, 0])
    cube([1, 1, 3.96]);
  translate([104, 229, 0])
    cube([1, 1, 4.00]);
  translate([105, 229, 0])
    cube([1, 1, 3.96]);
  translate([106, 229, 0])
    cube([1, 1, 3.92]);
  translate([107, 229, 0])
    cube([1, 1, 3.80]);
  translate([108, 229, 0])
    cube([1, 1, 3.73]);
  translate([109, 229, 0])
    cube([1, 1, 4.04]);
  translate([110, 229, 0])
    cube([1, 1, 1.92]);
  translate([111, 229, 0])
    cube([1, 1, 2.12]);
  translate([112, 229, 0])
    cube([1, 1, 2.04]);
  translate([113, 229, 0])
    cube([1, 1, 2.04]);
  translate([114, 229, 0])
    cube([1, 1, 2.04]);
  translate([115, 229, 0])
    cube([1, 1, 2.90]);
  translate([116, 229, 0])
    cube([1, 1, 6.20]);
  translate([117, 229, 0])
    cube([1, 1, 5.18]);
  translate([118, 229, 0])
    cube([1, 1, 3.10]);
  translate([119, 229, 0])
    cube([1, 1, 2.51]);
  translate([120, 229, 0])
    cube([1, 1, 2.75]);
  translate([121, 229, 0])
    cube([1, 1, 3.02]);
  translate([122, 229, 0])
    cube([1, 1, 3.14]);
  translate([123, 229, 0])
    cube([1, 1, 3.14]);
  translate([124, 229, 0])
    cube([1, 1, 3.18]);
  translate([125, 229, 0])
    cube([1, 1, 3.18]);
  translate([126, 229, 0])
    cube([1, 1, 3.14]);
  translate([127, 229, 0])
    cube([1, 1, 3.10]);
  translate([128, 229, 0])
    cube([1, 1, 3.02]);
  translate([129, 229, 0])
    cube([1, 1, 2.98]);
  translate([130, 229, 0])
    cube([1, 1, 3.02]);
  translate([131, 229, 0])
    cube([1, 1, 3.06]);
  translate([132, 229, 0])
    cube([1, 1, 3.14]);
  translate([133, 229, 0])
    cube([1, 1, 3.29]);
  translate([134, 229, 0])
    cube([1, 1, 3.25]);
  translate([135, 229, 0])
    cube([1, 1, 3.29]);
  translate([136, 229, 0])
    cube([1, 1, 3.33]);
  translate([137, 229, 0])
    cube([1, 1, 3.37]);
  translate([138, 229, 0])
    cube([1, 1, 3.49]);
  translate([139, 229, 0])
    cube([1, 1, 3.57]);
  translate([140, 229, 0])
    cube([1, 1, 3.69]);
  translate([141, 229, 0])
    cube([1, 1, 3.88]);
  translate([142, 229, 0])
    cube([1, 1, 4.04]);
  translate([143, 229, 0])
    cube([1, 1, 4.24]);
  translate([144, 229, 0])
    cube([1, 1, 4.51]);
  translate([145, 229, 0])
    cube([1, 1, 4.75]);
  translate([146, 229, 0])
    cube([1, 1, 5.02]);
  translate([147, 229, 0])
    cube([1, 1, 5.25]);
  translate([148, 229, 0])
    cube([1, 1, 5.41]);
  translate([149, 229, 0])
    cube([1, 1, 5.53]);
  translate([150, 229, 0])
    cube([1, 1, 5.53]);
  translate([151, 229, 0])
    cube([1, 1, 5.33]);
  translate([152, 229, 0])
    cube([1, 1, 5.10]);
  translate([153, 229, 0])
    cube([1, 1, 4.86]);
  translate([154, 229, 0])
    cube([1, 1, 4.78]);
  translate([155, 229, 0])
    cube([1, 1, 4.78]);
  translate([156, 229, 0])
    cube([1, 1, 4.86]);
  translate([157, 229, 0])
    cube([1, 1, 4.94]);
  translate([158, 229, 0])
    cube([1, 1, 4.98]);
  translate([159, 229, 0])
    cube([1, 1, 5.06]);
  translate([160, 229, 0])
    cube([1, 1, 5.45]);
  translate([161, 229, 0])
    cube([1, 1, 5.22]);
  translate([162, 229, 0])
    cube([1, 1, 5.18]);
  translate([163, 229, 0])
    cube([1, 1, 4.43]);
  translate([164, 229, 0])
    cube([1, 1, 4.24]);
  translate([165, 229, 0])
    cube([1, 1, 0.82]);
  translate([166, 229, 0])
    cube([1, 1, 0.90]);
  translate([167, 229, 0])
    cube([1, 1, 0.94]);
  translate([168, 229, 0])
    cube([1, 1, 1.14]);
  translate([169, 229, 0])
    cube([1, 1, 1.18]);
  translate([170, 229, 0])
    cube([1, 1, 1.25]);
  translate([171, 229, 0])
    cube([1, 1, 1.37]);
  translate([172, 229, 0])
    cube([1, 1, 2.82]);
  translate([173, 229, 0])
    cube([1, 1, 4.31]);
  translate([174, 229, 0])
    cube([1, 1, 1.88]);
  translate([175, 229, 0])
    cube([1, 1, 1.49]);
  translate([176, 229, 0])
    cube([1, 1, 4.27]);
  translate([177, 229, 0])
    cube([1, 1, 1.80]);
  translate([178, 229, 0])
    cube([1, 1, 2.12]);
  translate([179, 229, 0])
    cube([1, 1, 2.04]);
  translate([180, 229, 0])
    cube([1, 1, 2.04]);
  translate([181, 229, 0])
    cube([1, 1, 2.04]);
  translate([182, 229, 0])
    cube([1, 1, 2.04]);
  translate([183, 229, 0])
    cube([1, 1, 2.04]);
  translate([184, 229, 0])
    cube([1, 1, 2.04]);
  translate([185, 229, 0])
    cube([1, 1, 2.04]);
  translate([186, 229, 0])
    cube([1, 1, 2.04]);
  translate([187, 229, 0])
    cube([1, 1, 2.00]);
  translate([188, 229, 0])
    cube([1, 1, 2.08]);
  translate([189, 229, 0])
    cube([1, 1, 2.08]);
  translate([190, 229, 0])
    cube([1, 1, 2.04]);
  translate([191, 229, 0])
    cube([1, 1, 2.00]);
  translate([192, 229, 0])
    cube([1, 1, 2.04]);
  translate([193, 229, 0])
    cube([1, 1, 2.08]);
  translate([194, 229, 0])
    cube([1, 1, 2.08]);
  translate([195, 229, 0])
    cube([1, 1, 2.04]);
  translate([196, 229, 0])
    cube([1, 1, 2.04]);
  translate([197, 229, 0])
    cube([1, 1, 2.04]);
  translate([198, 229, 0])
    cube([1, 1, 2.04]);
  translate([199, 229, 0])
    cube([1, 1, 2.08]);
  translate([200, 229, 0])
    cube([1, 1, 2.04]);
  translate([201, 229, 0])
    cube([1, 1, 2.04]);
  translate([202, 229, 0])
    cube([1, 1, 2.12]);
  translate([203, 229, 0])
    cube([1, 1, 2.08]);
  translate([204, 229, 0])
    cube([1, 1, 2.08]);
  translate([205, 229, 0])
    cube([1, 1, 2.12]);
  translate([206, 229, 0])
    cube([1, 1, 2.04]);
  translate([207, 229, 0])
    cube([1, 1, 2.04]);
  translate([208, 229, 0])
    cube([1, 1, 2.08]);
  translate([209, 229, 0])
    cube([1, 1, 2.08]);
  translate([210, 229, 0])
    cube([1, 1, 2.08]);
  translate([211, 229, 0])
    cube([1, 1, 2.08]);
  translate([212, 229, 0])
    cube([1, 1, 2.08]);
  translate([213, 229, 0])
    cube([1, 1, 2.08]);
  translate([214, 229, 0])
    cube([1, 1, 2.08]);
  translate([215, 229, 0])
    cube([1, 1, 2.08]);
  translate([216, 229, 0])
    cube([1, 1, 2.04]);
  translate([217, 229, 0])
    cube([1, 1, 2.04]);
  translate([218, 229, 0])
    cube([1, 1, 2.12]);
  translate([219, 229, 0])
    cube([1, 1, 2.04]);
  translate([220, 229, 0])
    cube([1, 1, 2.04]);
  translate([221, 229, 0])
    cube([1, 1, 2.04]);
  translate([222, 229, 0])
    cube([1, 1, 2.00]);
  translate([223, 229, 0])
    cube([1, 1, 2.08]);
  translate([224, 229, 0])
    cube([1, 1, 2.04]);
  translate([225, 229, 0])
    cube([1, 1, 2.04]);
  translate([226, 229, 0])
    cube([1, 1, 2.04]);
  translate([227, 229, 0])
    cube([1, 1, 2.04]);
  translate([228, 229, 0])
    cube([1, 1, 2.04]);
  translate([229, 229, 0])
    cube([1, 1, 2.04]);
  translate([230, 229, 0])
    cube([1, 1, 2.04]);
  translate([231, 229, 0])
    cube([1, 1, 2.04]);
  translate([232, 229, 0])
    cube([1, 1, 2.04]);
  translate([233, 229, 0])
    cube([1, 1, 2.04]);
  translate([234, 229, 0])
    cube([1, 1, 2.04]);
  translate([235, 229, 0])
    cube([1, 1, 2.04]);
  translate([236, 229, 0])
    cube([1, 1, 2.04]);
  translate([237, 229, 0])
    cube([1, 1, 2.04]);
  translate([238, 229, 0])
    cube([1, 1, 2.04]);
  translate([239, 229, 0])
    cube([1, 1, 2.04]);
  translate([240, 229, 0])
    cube([1, 1, 2.04]);
  translate([241, 229, 0])
    cube([1, 1, 2.04]);
  translate([242, 229, 0])
    cube([1, 1, 2.04]);
  translate([243, 229, 0])
    cube([1, 1, 2.04]);
  translate([244, 229, 0])
    cube([1, 1, 2.04]);
  translate([245, 229, 0])
    cube([1, 1, 2.04]);
  translate([246, 229, 0])
    cube([1, 1, 2.04]);
  translate([0, 230, 0])
    cube([1, 1, 2.24]);
  translate([1, 230, 0])
    cube([1, 1, 2.20]);
  translate([2, 230, 0])
    cube([1, 1, 2.24]);
  translate([3, 230, 0])
    cube([1, 1, 2.24]);
  translate([4, 230, 0])
    cube([1, 1, 2.24]);
  translate([5, 230, 0])
    cube([1, 1, 2.24]);
  translate([6, 230, 0])
    cube([1, 1, 2.24]);
  translate([7, 230, 0])
    cube([1, 1, 2.24]);
  translate([8, 230, 0])
    cube([1, 1, 2.24]);
  translate([9, 230, 0])
    cube([1, 1, 2.24]);
  translate([10, 230, 0])
    cube([1, 1, 2.24]);
  translate([11, 230, 0])
    cube([1, 1, 2.24]);
  translate([12, 230, 0])
    cube([1, 1, 2.24]);
  translate([13, 230, 0])
    cube([1, 1, 2.27]);
  translate([14, 230, 0])
    cube([1, 1, 2.24]);
  translate([15, 230, 0])
    cube([1, 1, 2.20]);
  translate([16, 230, 0])
    cube([1, 1, 2.24]);
  translate([17, 230, 0])
    cube([1, 1, 2.24]);
  translate([18, 230, 0])
    cube([1, 1, 2.24]);
  translate([19, 230, 0])
    cube([1, 1, 2.24]);
  translate([20, 230, 0])
    cube([1, 1, 2.24]);
  translate([21, 230, 0])
    cube([1, 1, 2.24]);
  translate([22, 230, 0])
    cube([1, 1, 2.24]);
  translate([23, 230, 0])
    cube([1, 1, 2.24]);
  translate([24, 230, 0])
    cube([1, 1, 2.24]);
  translate([25, 230, 0])
    cube([1, 1, 2.16]);
  translate([26, 230, 0])
    cube([1, 1, 2.24]);
  translate([27, 230, 0])
    cube([1, 1, 2.24]);
  translate([28, 230, 0])
    cube([1, 1, 2.20]);
  translate([29, 230, 0])
    cube([1, 1, 2.20]);
  translate([30, 230, 0])
    cube([1, 1, 2.20]);
  translate([31, 230, 0])
    cube([1, 1, 2.20]);
  translate([32, 230, 0])
    cube([1, 1, 2.27]);
  translate([33, 230, 0])
    cube([1, 1, 2.20]);
  translate([34, 230, 0])
    cube([1, 1, 2.24]);
  translate([35, 230, 0])
    cube([1, 1, 2.24]);
  translate([36, 230, 0])
    cube([1, 1, 2.24]);
  translate([37, 230, 0])
    cube([1, 1, 2.24]);
  translate([38, 230, 0])
    cube([1, 1, 2.16]);
  translate([39, 230, 0])
    cube([1, 1, 2.16]);
  translate([40, 230, 0])
    cube([1, 1, 2.20]);
  translate([41, 230, 0])
    cube([1, 1, 2.20]);
  translate([42, 230, 0])
    cube([1, 1, 2.20]);
  translate([43, 230, 0])
    cube([1, 1, 2.20]);
  translate([44, 230, 0])
    cube([1, 1, 2.20]);
  translate([45, 230, 0])
    cube([1, 1, 2.20]);
  translate([46, 230, 0])
    cube([1, 1, 2.51]);
  translate([47, 230, 0])
    cube([1, 1, 6.59]);
  translate([48, 230, 0])
    cube([1, 1, 6.08]);
  translate([49, 230, 0])
    cube([1, 1, 7.96]);
  translate([50, 230, 0])
    cube([1, 1, 8.90]);
  translate([51, 230, 0])
    cube([1, 1, 7.18]);
  translate([52, 230, 0])
    cube([1, 1, 1.10]);
  translate([53, 230, 0])
    cube([1, 1, 1.14]);
  translate([54, 230, 0])
    cube([1, 1, 1.33]);
  translate([55, 230, 0])
    cube([1, 1, 1.57]);
  translate([56, 230, 0])
    cube([1, 1, 3.69]);
  translate([57, 230, 0])
    cube([1, 1, 5.88]);
  translate([58, 230, 0])
    cube([1, 1, 2.78]);
  translate([59, 230, 0])
    cube([1, 1, 1.41]);
  translate([60, 230, 0])
    cube([1, 1, 0.82]);
  translate([61, 230, 0])
    cube([1, 1, 0.71]);
  translate([62, 230, 0])
    cube([1, 1, 0.35]);
  translate([63, 230, 0])
    cube([1, 1, 1.45]);
  translate([64, 230, 0])
    cube([1, 1, 1.25]);
  translate([65, 230, 0])
    cube([1, 1, 1.14]);
  translate([66, 230, 0])
    cube([1, 1, 1.22]);
  translate([67, 230, 0])
    cube([1, 1, 1.14]);
  translate([68, 230, 0])
    cube([1, 1, 1.14]);
  translate([69, 230, 0])
    cube([1, 1, 1.18]);
  translate([70, 230, 0])
    cube([1, 1, 1.18]);
  translate([71, 230, 0])
    cube([1, 1, 1.18]);
  translate([72, 230, 0])
    cube([1, 1, 1.18]);
  translate([73, 230, 0])
    cube([1, 1, 1.10]);
  translate([74, 230, 0])
    cube([1, 1, 1.25]);
  translate([75, 230, 0])
    cube([1, 1, 1.18]);
  translate([76, 230, 0])
    cube([1, 1, 1.73]);
  translate([77, 230, 0])
    cube([1, 1, 1.06]);
  translate([78, 230, 0])
    cube([1, 1, 4.31]);
  translate([79, 230, 0])
    cube([1, 1, 4.43]);
  translate([80, 230, 0])
    cube([1, 1, 4.35]);
  translate([81, 230, 0])
    cube([1, 1, 4.35]);
  translate([82, 230, 0])
    cube([1, 1, 4.47]);
  translate([83, 230, 0])
    cube([1, 1, 4.59]);
  translate([84, 230, 0])
    cube([1, 1, 4.75]);
  translate([85, 230, 0])
    cube([1, 1, 5.14]);
  translate([86, 230, 0])
    cube([1, 1, 5.29]);
  translate([87, 230, 0])
    cube([1, 1, 5.29]);
  translate([88, 230, 0])
    cube([1, 1, 5.25]);
  translate([89, 230, 0])
    cube([1, 1, 5.10]);
  translate([90, 230, 0])
    cube([1, 1, 4.82]);
  translate([91, 230, 0])
    cube([1, 1, 4.71]);
  translate([92, 230, 0])
    cube([1, 1, 4.63]);
  translate([93, 230, 0])
    cube([1, 1, 4.59]);
  translate([94, 230, 0])
    cube([1, 1, 4.43]);
  translate([95, 230, 0])
    cube([1, 1, 4.43]);
  translate([96, 230, 0])
    cube([1, 1, 4.27]);
  translate([97, 230, 0])
    cube([1, 1, 4.24]);
  translate([98, 230, 0])
    cube([1, 1, 4.24]);
  translate([99, 230, 0])
    cube([1, 1, 4.24]);
  translate([100, 230, 0])
    cube([1, 1, 4.16]);
  translate([101, 230, 0])
    cube([1, 1, 4.16]);
  translate([102, 230, 0])
    cube([1, 1, 4.00]);
  translate([103, 230, 0])
    cube([1, 1, 3.96]);
  translate([104, 230, 0])
    cube([1, 1, 4.00]);
  translate([105, 230, 0])
    cube([1, 1, 3.92]);
  translate([106, 230, 0])
    cube([1, 1, 3.88]);
  translate([107, 230, 0])
    cube([1, 1, 3.69]);
  translate([108, 230, 0])
    cube([1, 1, 3.69]);
  translate([109, 230, 0])
    cube([1, 1, 3.88]);
  translate([110, 230, 0])
    cube([1, 1, 1.96]);
  translate([111, 230, 0])
    cube([1, 1, 2.16]);
  translate([112, 230, 0])
    cube([1, 1, 2.04]);
  translate([113, 230, 0])
    cube([1, 1, 2.04]);
  translate([114, 230, 0])
    cube([1, 1, 2.04]);
  translate([115, 230, 0])
    cube([1, 1, 1.96]);
  translate([116, 230, 0])
    cube([1, 1, 6.43]);
  translate([117, 230, 0])
    cube([1, 1, 6.00]);
  translate([118, 230, 0])
    cube([1, 1, 3.84]);
  translate([119, 230, 0])
    cube([1, 1, 2.90]);
  translate([120, 230, 0])
    cube([1, 1, 2.90]);
  translate([121, 230, 0])
    cube([1, 1, 3.06]);
  translate([122, 230, 0])
    cube([1, 1, 3.22]);
  translate([123, 230, 0])
    cube([1, 1, 3.18]);
  translate([124, 230, 0])
    cube([1, 1, 3.25]);
  translate([125, 230, 0])
    cube([1, 1, 3.25]);
  translate([126, 230, 0])
    cube([1, 1, 3.22]);
  translate([127, 230, 0])
    cube([1, 1, 3.06]);
  translate([128, 230, 0])
    cube([1, 1, 2.98]);
  translate([129, 230, 0])
    cube([1, 1, 2.94]);
  translate([130, 230, 0])
    cube([1, 1, 2.98]);
  translate([131, 230, 0])
    cube([1, 1, 3.06]);
  translate([132, 230, 0])
    cube([1, 1, 3.14]);
  translate([133, 230, 0])
    cube([1, 1, 3.14]);
  translate([134, 230, 0])
    cube([1, 1, 3.22]);
  translate([135, 230, 0])
    cube([1, 1, 3.25]);
  translate([136, 230, 0])
    cube([1, 1, 3.29]);
  translate([137, 230, 0])
    cube([1, 1, 3.25]);
  translate([138, 230, 0])
    cube([1, 1, 3.37]);
  translate([139, 230, 0])
    cube([1, 1, 3.45]);
  translate([140, 230, 0])
    cube([1, 1, 3.61]);
  translate([141, 230, 0])
    cube([1, 1, 3.76]);
  translate([142, 230, 0])
    cube([1, 1, 3.92]);
  translate([143, 230, 0])
    cube([1, 1, 4.12]);
  translate([144, 230, 0])
    cube([1, 1, 4.39]);
  translate([145, 230, 0])
    cube([1, 1, 4.67]);
  translate([146, 230, 0])
    cube([1, 1, 4.94]);
  translate([147, 230, 0])
    cube([1, 1, 5.18]);
  translate([148, 230, 0])
    cube([1, 1, 5.33]);
  translate([149, 230, 0])
    cube([1, 1, 5.57]);
  translate([150, 230, 0])
    cube([1, 1, 5.61]);
  translate([151, 230, 0])
    cube([1, 1, 5.37]);
  translate([152, 230, 0])
    cube([1, 1, 5.14]);
  translate([153, 230, 0])
    cube([1, 1, 4.94]);
  translate([154, 230, 0])
    cube([1, 1, 4.82]);
  translate([155, 230, 0])
    cube([1, 1, 4.78]);
  translate([156, 230, 0])
    cube([1, 1, 4.90]);
  translate([157, 230, 0])
    cube([1, 1, 4.94]);
  translate([158, 230, 0])
    cube([1, 1, 4.94]);
  translate([159, 230, 0])
    cube([1, 1, 5.02]);
  translate([160, 230, 0])
    cube([1, 1, 5.33]);
  translate([161, 230, 0])
    cube([1, 1, 5.02]);
  translate([162, 230, 0])
    cube([1, 1, 4.90]);
  translate([163, 230, 0])
    cube([1, 1, 4.27]);
  translate([164, 230, 0])
    cube([1, 1, 4.04]);
  translate([165, 230, 0])
    cube([1, 1, 1.37]);
  translate([166, 230, 0])
    cube([1, 1, 0.63]);
  translate([167, 230, 0])
    cube([1, 1, 1.06]);
  translate([168, 230, 0])
    cube([1, 1, 1.10]);
  translate([169, 230, 0])
    cube([1, 1, 1.18]);
  translate([170, 230, 0])
    cube([1, 1, 1.25]);
  translate([171, 230, 0])
    cube([1, 1, 1.33]);
  translate([172, 230, 0])
    cube([1, 1, 2.31]);
  translate([173, 230, 0])
    cube([1, 1, 5.25]);
  translate([174, 230, 0])
    cube([1, 1, 3.14]);
  translate([175, 230, 0])
    cube([1, 1, 2.00]);
  translate([176, 230, 0])
    cube([1, 1, 2.12]);
  translate([177, 230, 0])
    cube([1, 1, 5.96]);
  translate([178, 230, 0])
    cube([1, 1, 2.51]);
  translate([179, 230, 0])
    cube([1, 1, 2.04]);
  translate([180, 230, 0])
    cube([1, 1, 2.04]);
  translate([181, 230, 0])
    cube([1, 1, 2.04]);
  translate([182, 230, 0])
    cube([1, 1, 2.04]);
  translate([183, 230, 0])
    cube([1, 1, 2.04]);
  translate([184, 230, 0])
    cube([1, 1, 2.04]);
  translate([185, 230, 0])
    cube([1, 1, 2.08]);
  translate([186, 230, 0])
    cube([1, 1, 2.08]);
  translate([187, 230, 0])
    cube([1, 1, 2.00]);
  translate([188, 230, 0])
    cube([1, 1, 2.08]);
  translate([189, 230, 0])
    cube([1, 1, 2.08]);
  translate([190, 230, 0])
    cube([1, 1, 2.04]);
  translate([191, 230, 0])
    cube([1, 1, 2.00]);
  translate([192, 230, 0])
    cube([1, 1, 2.08]);
  translate([193, 230, 0])
    cube([1, 1, 2.08]);
  translate([194, 230, 0])
    cube([1, 1, 2.08]);
  translate([195, 230, 0])
    cube([1, 1, 2.04]);
  translate([196, 230, 0])
    cube([1, 1, 2.04]);
  translate([197, 230, 0])
    cube([1, 1, 2.04]);
  translate([198, 230, 0])
    cube([1, 1, 2.04]);
  translate([199, 230, 0])
    cube([1, 1, 2.08]);
  translate([200, 230, 0])
    cube([1, 1, 2.04]);
  translate([201, 230, 0])
    cube([1, 1, 2.04]);
  translate([202, 230, 0])
    cube([1, 1, 2.12]);
  translate([203, 230, 0])
    cube([1, 1, 2.08]);
  translate([204, 230, 0])
    cube([1, 1, 2.08]);
  translate([205, 230, 0])
    cube([1, 1, 2.12]);
  translate([206, 230, 0])
    cube([1, 1, 2.04]);
  translate([207, 230, 0])
    cube([1, 1, 2.04]);
  translate([208, 230, 0])
    cube([1, 1, 2.08]);
  translate([209, 230, 0])
    cube([1, 1, 2.08]);
  translate([210, 230, 0])
    cube([1, 1, 2.08]);
  translate([211, 230, 0])
    cube([1, 1, 2.08]);
  translate([212, 230, 0])
    cube([1, 1, 2.08]);
  translate([213, 230, 0])
    cube([1, 1, 2.08]);
  translate([214, 230, 0])
    cube([1, 1, 2.08]);
  translate([215, 230, 0])
    cube([1, 1, 2.08]);
  translate([216, 230, 0])
    cube([1, 1, 2.04]);
  translate([217, 230, 0])
    cube([1, 1, 2.04]);
  translate([218, 230, 0])
    cube([1, 1, 2.12]);
  translate([219, 230, 0])
    cube([1, 1, 2.04]);
  translate([220, 230, 0])
    cube([1, 1, 2.04]);
  translate([221, 230, 0])
    cube([1, 1, 2.04]);
  translate([222, 230, 0])
    cube([1, 1, 2.00]);
  translate([223, 230, 0])
    cube([1, 1, 2.08]);
  translate([224, 230, 0])
    cube([1, 1, 2.04]);
  translate([225, 230, 0])
    cube([1, 1, 2.04]);
  translate([226, 230, 0])
    cube([1, 1, 2.04]);
  translate([227, 230, 0])
    cube([1, 1, 2.04]);
  translate([228, 230, 0])
    cube([1, 1, 2.04]);
  translate([229, 230, 0])
    cube([1, 1, 2.04]);
  translate([230, 230, 0])
    cube([1, 1, 2.04]);
  translate([231, 230, 0])
    cube([1, 1, 2.04]);
  translate([232, 230, 0])
    cube([1, 1, 2.04]);
  translate([233, 230, 0])
    cube([1, 1, 2.08]);
  translate([234, 230, 0])
    cube([1, 1, 2.08]);
  translate([235, 230, 0])
    cube([1, 1, 2.04]);
  translate([236, 230, 0])
    cube([1, 1, 2.04]);
  translate([237, 230, 0])
    cube([1, 1, 2.04]);
  translate([238, 230, 0])
    cube([1, 1, 2.04]);
  translate([239, 230, 0])
    cube([1, 1, 2.04]);
  translate([240, 230, 0])
    cube([1, 1, 2.04]);
  translate([241, 230, 0])
    cube([1, 1, 2.04]);
  translate([242, 230, 0])
    cube([1, 1, 2.04]);
  translate([243, 230, 0])
    cube([1, 1, 2.04]);
  translate([244, 230, 0])
    cube([1, 1, 2.04]);
  translate([245, 230, 0])
    cube([1, 1, 2.04]);
  translate([246, 230, 0])
    cube([1, 1, 2.04]);
  translate([0, 231, 0])
    cube([1, 1, 2.24]);
  translate([1, 231, 0])
    cube([1, 1, 2.20]);
  translate([2, 231, 0])
    cube([1, 1, 2.24]);
  translate([3, 231, 0])
    cube([1, 1, 2.27]);
  translate([4, 231, 0])
    cube([1, 1, 2.24]);
  translate([5, 231, 0])
    cube([1, 1, 2.24]);
  translate([6, 231, 0])
    cube([1, 1, 2.24]);
  translate([7, 231, 0])
    cube([1, 1, 2.24]);
  translate([8, 231, 0])
    cube([1, 1, 2.24]);
  translate([9, 231, 0])
    cube([1, 1, 2.24]);
  translate([10, 231, 0])
    cube([1, 1, 2.24]);
  translate([11, 231, 0])
    cube([1, 1, 2.24]);
  translate([12, 231, 0])
    cube([1, 1, 2.20]);
  translate([13, 231, 0])
    cube([1, 1, 2.24]);
  translate([14, 231, 0])
    cube([1, 1, 2.24]);
  translate([15, 231, 0])
    cube([1, 1, 2.24]);
  translate([16, 231, 0])
    cube([1, 1, 2.24]);
  translate([17, 231, 0])
    cube([1, 1, 2.24]);
  translate([18, 231, 0])
    cube([1, 1, 2.24]);
  translate([19, 231, 0])
    cube([1, 1, 2.27]);
  translate([20, 231, 0])
    cube([1, 1, 2.24]);
  translate([21, 231, 0])
    cube([1, 1, 2.27]);
  translate([22, 231, 0])
    cube([1, 1, 2.24]);
  translate([23, 231, 0])
    cube([1, 1, 2.24]);
  translate([24, 231, 0])
    cube([1, 1, 2.24]);
  translate([25, 231, 0])
    cube([1, 1, 2.24]);
  translate([26, 231, 0])
    cube([1, 1, 2.24]);
  translate([27, 231, 0])
    cube([1, 1, 2.24]);
  translate([28, 231, 0])
    cube([1, 1, 2.24]);
  translate([29, 231, 0])
    cube([1, 1, 2.24]);
  translate([30, 231, 0])
    cube([1, 1, 2.20]);
  translate([31, 231, 0])
    cube([1, 1, 2.24]);
  translate([32, 231, 0])
    cube([1, 1, 2.24]);
  translate([33, 231, 0])
    cube([1, 1, 2.24]);
  translate([34, 231, 0])
    cube([1, 1, 2.24]);
  translate([35, 231, 0])
    cube([1, 1, 2.20]);
  translate([36, 231, 0])
    cube([1, 1, 2.20]);
  translate([37, 231, 0])
    cube([1, 1, 2.24]);
  translate([38, 231, 0])
    cube([1, 1, 2.24]);
  translate([39, 231, 0])
    cube([1, 1, 2.24]);
  translate([40, 231, 0])
    cube([1, 1, 2.24]);
  translate([41, 231, 0])
    cube([1, 1, 2.24]);
  translate([42, 231, 0])
    cube([1, 1, 2.16]);
  translate([43, 231, 0])
    cube([1, 1, 2.12]);
  translate([44, 231, 0])
    cube([1, 1, 2.16]);
  translate([45, 231, 0])
    cube([1, 1, 2.16]);
  translate([46, 231, 0])
    cube([1, 1, 2.16]);
  translate([47, 231, 0])
    cube([1, 1, 1.53]);
  translate([48, 231, 0])
    cube([1, 1, 6.78]);
  translate([49, 231, 0])
    cube([1, 1, 8.35]);
  translate([50, 231, 0])
    cube([1, 1, 8.63]);
  translate([51, 231, 0])
    cube([1, 1, 5.53]);
  translate([52, 231, 0])
    cube([1, 1, 1.06]);
  translate([53, 231, 0])
    cube([1, 1, 1.25]);
  translate([54, 231, 0])
    cube([1, 1, 1.45]);
  translate([55, 231, 0])
    cube([1, 1, 1.61]);
  translate([56, 231, 0])
    cube([1, 1, 4.78]);
  translate([57, 231, 0])
    cube([1, 1, 5.29]);
  translate([58, 231, 0])
    cube([1, 1, 1.92]);
  translate([59, 231, 0])
    cube([1, 1, 1.18]);
  translate([60, 231, 0])
    cube([1, 1, 0.90]);
  translate([61, 231, 0])
    cube([1, 1, 0.51]);
  translate([62, 231, 0])
    cube([1, 1, 0.16]);
  translate([63, 231, 0])
    cube([1, 1, 1.22]);
  translate([64, 231, 0])
    cube([1, 1, 1.14]);
  translate([65, 231, 0])
    cube([1, 1, 1.22]);
  translate([66, 231, 0])
    cube([1, 1, 1.10]);
  translate([67, 231, 0])
    cube([1, 1, 1.18]);
  translate([68, 231, 0])
    cube([1, 1, 1.18]);
  translate([69, 231, 0])
    cube([1, 1, 1.18]);
  translate([70, 231, 0])
    cube([1, 1, 1.18]);
  translate([71, 231, 0])
    cube([1, 1, 1.18]);
  translate([72, 231, 0])
    cube([1, 1, 1.22]);
  translate([73, 231, 0])
    cube([1, 1, 1.10]);
  translate([74, 231, 0])
    cube([1, 1, 1.06]);
  translate([75, 231, 0])
    cube([1, 1, 0.94]);
  translate([76, 231, 0])
    cube([1, 1, 1.84]);
  translate([77, 231, 0])
    cube([1, 1, 1.73]);
  translate([78, 231, 0])
    cube([1, 1, 4.39]);
  translate([79, 231, 0])
    cube([1, 1, 4.31]);
  translate([80, 231, 0])
    cube([1, 1, 4.39]);
  translate([81, 231, 0])
    cube([1, 1, 4.39]);
  translate([82, 231, 0])
    cube([1, 1, 4.59]);
  translate([83, 231, 0])
    cube([1, 1, 4.75]);
  translate([84, 231, 0])
    cube([1, 1, 4.98]);
  translate([85, 231, 0])
    cube([1, 1, 5.18]);
  translate([86, 231, 0])
    cube([1, 1, 5.25]);
  translate([87, 231, 0])
    cube([1, 1, 5.25]);
  translate([88, 231, 0])
    cube([1, 1, 5.22]);
  translate([89, 231, 0])
    cube([1, 1, 5.02]);
  translate([90, 231, 0])
    cube([1, 1, 4.82]);
  translate([91, 231, 0])
    cube([1, 1, 4.71]);
  translate([92, 231, 0])
    cube([1, 1, 4.51]);
  translate([93, 231, 0])
    cube([1, 1, 4.51]);
  translate([94, 231, 0])
    cube([1, 1, 4.43]);
  translate([95, 231, 0])
    cube([1, 1, 4.31]);
  translate([96, 231, 0])
    cube([1, 1, 4.27]);
  translate([97, 231, 0])
    cube([1, 1, 4.27]);
  translate([98, 231, 0])
    cube([1, 1, 4.27]);
  translate([99, 231, 0])
    cube([1, 1, 4.20]);
  translate([100, 231, 0])
    cube([1, 1, 4.08]);
  translate([101, 231, 0])
    cube([1, 1, 4.00]);
  translate([102, 231, 0])
    cube([1, 1, 3.92]);
  translate([103, 231, 0])
    cube([1, 1, 3.88]);
  translate([104, 231, 0])
    cube([1, 1, 3.92]);
  translate([105, 231, 0])
    cube([1, 1, 3.80]);
  translate([106, 231, 0])
    cube([1, 1, 3.73]);
  translate([107, 231, 0])
    cube([1, 1, 3.65]);
  translate([108, 231, 0])
    cube([1, 1, 3.92]);
  translate([109, 231, 0])
    cube([1, 1, 3.96]);
  translate([110, 231, 0])
    cube([1, 1, 2.04]);
  translate([111, 231, 0])
    cube([1, 1, 2.04]);
  translate([112, 231, 0])
    cube([1, 1, 2.04]);
  translate([113, 231, 0])
    cube([1, 1, 2.04]);
  translate([114, 231, 0])
    cube([1, 1, 2.04]);
  translate([115, 231, 0])
    cube([1, 1, 2.04]);
  translate([116, 231, 0])
    cube([1, 1, 6.59]);
  translate([117, 231, 0])
    cube([1, 1, 6.31]);
  translate([118, 231, 0])
    cube([1, 1, 4.47]);
  translate([119, 231, 0])
    cube([1, 1, 3.22]);
  translate([120, 231, 0])
    cube([1, 1, 2.82]);
  translate([121, 231, 0])
    cube([1, 1, 2.98]);
  translate([122, 231, 0])
    cube([1, 1, 3.18]);
  translate([123, 231, 0])
    cube([1, 1, 3.18]);
  translate([124, 231, 0])
    cube([1, 1, 3.22]);
  translate([125, 231, 0])
    cube([1, 1, 3.22]);
  translate([126, 231, 0])
    cube([1, 1, 3.10]);
  translate([127, 231, 0])
    cube([1, 1, 2.98]);
  translate([128, 231, 0])
    cube([1, 1, 3.02]);
  translate([129, 231, 0])
    cube([1, 1, 2.90]);
  translate([130, 231, 0])
    cube([1, 1, 2.98]);
  translate([131, 231, 0])
    cube([1, 1, 3.02]);
  translate([132, 231, 0])
    cube([1, 1, 3.02]);
  translate([133, 231, 0])
    cube([1, 1, 3.06]);
  translate([134, 231, 0])
    cube([1, 1, 3.14]);
  translate([135, 231, 0])
    cube([1, 1, 3.22]);
  translate([136, 231, 0])
    cube([1, 1, 3.29]);
  translate([137, 231, 0])
    cube([1, 1, 3.25]);
  translate([138, 231, 0])
    cube([1, 1, 3.37]);
  translate([139, 231, 0])
    cube([1, 1, 3.41]);
  translate([140, 231, 0])
    cube([1, 1, 3.53]);
  translate([141, 231, 0])
    cube([1, 1, 3.76]);
  translate([142, 231, 0])
    cube([1, 1, 3.96]);
  translate([143, 231, 0])
    cube([1, 1, 4.00]);
  translate([144, 231, 0])
    cube([1, 1, 4.27]);
  translate([145, 231, 0])
    cube([1, 1, 4.55]);
  translate([146, 231, 0])
    cube([1, 1, 4.94]);
  translate([147, 231, 0])
    cube([1, 1, 5.14]);
  translate([148, 231, 0])
    cube([1, 1, 5.41]);
  translate([149, 231, 0])
    cube([1, 1, 5.49]);
  translate([150, 231, 0])
    cube([1, 1, 5.25]);
  translate([151, 231, 0])
    cube([1, 1, 5.29]);
  translate([152, 231, 0])
    cube([1, 1, 5.14]);
  translate([153, 231, 0])
    cube([1, 1, 4.86]);
  translate([154, 231, 0])
    cube([1, 1, 4.55]);
  translate([155, 231, 0])
    cube([1, 1, 4.86]);
  translate([156, 231, 0])
    cube([1, 1, 4.59]);
  translate([157, 231, 0])
    cube([1, 1, 4.90]);
  translate([158, 231, 0])
    cube([1, 1, 4.94]);
  translate([159, 231, 0])
    cube([1, 1, 1.61]);
  translate([160, 231, 0])
    cube([1, 1, 1.22]);
  translate([161, 231, 0])
    cube([1, 1, 2.00]);
  translate([162, 231, 0])
    cube([1, 1, 1.45]);
  translate([163, 231, 0])
    cube([1, 1, 1.18]);
  translate([164, 231, 0])
    cube([1, 1, 1.69]);
  translate([165, 231, 0])
    cube([1, 1, 1.73]);
  translate([166, 231, 0])
    cube([1, 1, 0.43]);
  translate([167, 231, 0])
    cube([1, 1, 0.82]);
  translate([168, 231, 0])
    cube([1, 1, 1.25]);
  translate([169, 231, 0])
    cube([1, 1, 1.33]);
  translate([170, 231, 0])
    cube([1, 1, 1.49]);
  translate([171, 231, 0])
    cube([1, 1, 1.73]);
  translate([172, 231, 0])
    cube([1, 1, 2.20]);
  translate([173, 231, 0])
    cube([1, 1, 5.14]);
  translate([174, 231, 0])
    cube([1, 1, 3.96]);
  translate([175, 231, 0])
    cube([1, 1, 2.04]);
  translate([176, 231, 0])
    cube([1, 1, 1.96]);
  translate([177, 231, 0])
    cube([1, 1, 5.49]);
  translate([178, 231, 0])
    cube([1, 1, 1.88]);
  translate([179, 231, 0])
    cube([1, 1, 2.04]);
  translate([180, 231, 0])
    cube([1, 1, 2.08]);
  translate([181, 231, 0])
    cube([1, 1, 2.16]);
  translate([182, 231, 0])
    cube([1, 1, 2.08]);
  translate([183, 231, 0])
    cube([1, 1, 2.12]);
  translate([184, 231, 0])
    cube([1, 1, 2.08]);
  translate([185, 231, 0])
    cube([1, 1, 2.04]);
  translate([186, 231, 0])
    cube([1, 1, 2.08]);
  translate([187, 231, 0])
    cube([1, 1, 2.08]);
  translate([188, 231, 0])
    cube([1, 1, 2.08]);
  translate([189, 231, 0])
    cube([1, 1, 2.08]);
  translate([190, 231, 0])
    cube([1, 1, 2.08]);
  translate([191, 231, 0])
    cube([1, 1, 2.08]);
  translate([192, 231, 0])
    cube([1, 1, 2.08]);
  translate([193, 231, 0])
    cube([1, 1, 2.08]);
  translate([194, 231, 0])
    cube([1, 1, 2.08]);
  translate([195, 231, 0])
    cube([1, 1, 2.08]);
  translate([196, 231, 0])
    cube([1, 1, 2.04]);
  translate([197, 231, 0])
    cube([1, 1, 2.12]);
  translate([198, 231, 0])
    cube([1, 1, 2.08]);
  translate([199, 231, 0])
    cube([1, 1, 2.12]);
  translate([200, 231, 0])
    cube([1, 1, 2.08]);
  translate([201, 231, 0])
    cube([1, 1, 2.08]);
  translate([202, 231, 0])
    cube([1, 1, 2.08]);
  translate([203, 231, 0])
    cube([1, 1, 2.08]);
  translate([204, 231, 0])
    cube([1, 1, 2.08]);
  translate([205, 231, 0])
    cube([1, 1, 2.08]);
  translate([206, 231, 0])
    cube([1, 1, 2.08]);
  translate([207, 231, 0])
    cube([1, 1, 2.08]);
  translate([208, 231, 0])
    cube([1, 1, 2.08]);
  translate([209, 231, 0])
    cube([1, 1, 2.04]);
  translate([210, 231, 0])
    cube([1, 1, 2.12]);
  translate([211, 231, 0])
    cube([1, 1, 2.08]);
  translate([212, 231, 0])
    cube([1, 1, 2.08]);
  translate([213, 231, 0])
    cube([1, 1, 2.08]);
  translate([214, 231, 0])
    cube([1, 1, 2.08]);
  translate([215, 231, 0])
    cube([1, 1, 2.08]);
  translate([216, 231, 0])
    cube([1, 1, 2.08]);
  translate([217, 231, 0])
    cube([1, 1, 2.08]);
  translate([218, 231, 0])
    cube([1, 1, 2.08]);
  translate([219, 231, 0])
    cube([1, 1, 2.04]);
  translate([220, 231, 0])
    cube([1, 1, 2.04]);
  translate([221, 231, 0])
    cube([1, 1, 2.04]);
  translate([222, 231, 0])
    cube([1, 1, 2.00]);
  translate([223, 231, 0])
    cube([1, 1, 2.08]);
  translate([224, 231, 0])
    cube([1, 1, 2.04]);
  translate([225, 231, 0])
    cube([1, 1, 2.04]);
  translate([226, 231, 0])
    cube([1, 1, 2.04]);
  translate([227, 231, 0])
    cube([1, 1, 2.04]);
  translate([228, 231, 0])
    cube([1, 1, 2.04]);
  translate([229, 231, 0])
    cube([1, 1, 2.04]);
  translate([230, 231, 0])
    cube([1, 1, 2.04]);
  translate([231, 231, 0])
    cube([1, 1, 2.04]);
  translate([232, 231, 0])
    cube([1, 1, 2.04]);
  translate([233, 231, 0])
    cube([1, 1, 2.04]);
  translate([234, 231, 0])
    cube([1, 1, 2.04]);
  translate([235, 231, 0])
    cube([1, 1, 2.04]);
  translate([236, 231, 0])
    cube([1, 1, 2.04]);
  translate([237, 231, 0])
    cube([1, 1, 2.04]);
  translate([238, 231, 0])
    cube([1, 1, 2.04]);
  translate([239, 231, 0])
    cube([1, 1, 2.04]);
  translate([240, 231, 0])
    cube([1, 1, 2.04]);
  translate([241, 231, 0])
    cube([1, 1, 2.04]);
  translate([242, 231, 0])
    cube([1, 1, 2.04]);
  translate([243, 231, 0])
    cube([1, 1, 2.04]);
  translate([244, 231, 0])
    cube([1, 1, 2.04]);
  translate([245, 231, 0])
    cube([1, 1, 2.04]);
  translate([246, 231, 0])
    cube([1, 1, 2.04]);
  translate([0, 232, 0])
    cube([1, 1, 2.27]);
  translate([1, 232, 0])
    cube([1, 1, 2.24]);
  translate([2, 232, 0])
    cube([1, 1, 2.24]);
  translate([3, 232, 0])
    cube([1, 1, 2.24]);
  translate([4, 232, 0])
    cube([1, 1, 2.24]);
  translate([5, 232, 0])
    cube([1, 1, 2.20]);
  translate([6, 232, 0])
    cube([1, 1, 2.16]);
  translate([7, 232, 0])
    cube([1, 1, 2.24]);
  translate([8, 232, 0])
    cube([1, 1, 2.27]);
  translate([9, 232, 0])
    cube([1, 1, 2.24]);
  translate([10, 232, 0])
    cube([1, 1, 2.24]);
  translate([11, 232, 0])
    cube([1, 1, 2.24]);
  translate([12, 232, 0])
    cube([1, 1, 2.24]);
  translate([13, 232, 0])
    cube([1, 1, 2.20]);
  translate([14, 232, 0])
    cube([1, 1, 2.27]);
  translate([15, 232, 0])
    cube([1, 1, 2.27]);
  translate([16, 232, 0])
    cube([1, 1, 2.27]);
  translate([17, 232, 0])
    cube([1, 1, 2.16]);
  translate([18, 232, 0])
    cube([1, 1, 2.24]);
  translate([19, 232, 0])
    cube([1, 1, 2.24]);
  translate([20, 232, 0])
    cube([1, 1, 2.20]);
  translate([21, 232, 0])
    cube([1, 1, 2.20]);
  translate([22, 232, 0])
    cube([1, 1, 2.24]);
  translate([23, 232, 0])
    cube([1, 1, 2.24]);
  translate([24, 232, 0])
    cube([1, 1, 2.20]);
  translate([25, 232, 0])
    cube([1, 1, 2.20]);
  translate([26, 232, 0])
    cube([1, 1, 2.20]);
  translate([27, 232, 0])
    cube([1, 1, 2.24]);
  translate([28, 232, 0])
    cube([1, 1, 2.24]);
  translate([29, 232, 0])
    cube([1, 1, 2.24]);
  translate([30, 232, 0])
    cube([1, 1, 2.20]);
  translate([31, 232, 0])
    cube([1, 1, 2.20]);
  translate([32, 232, 0])
    cube([1, 1, 2.24]);
  translate([33, 232, 0])
    cube([1, 1, 2.24]);
  translate([34, 232, 0])
    cube([1, 1, 2.24]);
  translate([35, 232, 0])
    cube([1, 1, 2.24]);
  translate([36, 232, 0])
    cube([1, 1, 2.24]);
  translate([37, 232, 0])
    cube([1, 1, 2.24]);
  translate([38, 232, 0])
    cube([1, 1, 2.24]);
  translate([39, 232, 0])
    cube([1, 1, 2.24]);
  translate([40, 232, 0])
    cube([1, 1, 2.24]);
  translate([41, 232, 0])
    cube([1, 1, 2.20]);
  translate([42, 232, 0])
    cube([1, 1, 2.20]);
  translate([43, 232, 0])
    cube([1, 1, 2.20]);
  translate([44, 232, 0])
    cube([1, 1, 2.20]);
  translate([45, 232, 0])
    cube([1, 1, 2.12]);
  translate([46, 232, 0])
    cube([1, 1, 8.71]);
  translate([47, 232, 0])
    cube([1, 1, 1.02]);
  translate([48, 232, 0])
    cube([1, 1, 7.80]);
  translate([49, 232, 0])
    cube([1, 1, 7.65]);
  translate([50, 232, 0])
    cube([1, 1, 5.69]);
  translate([51, 232, 0])
    cube([1, 1, 1.41]);
  translate([52, 232, 0])
    cube([1, 1, 1.45]);
  translate([53, 232, 0])
    cube([1, 1, 1.49]);
  translate([54, 232, 0])
    cube([1, 1, 1.29]);
  translate([55, 232, 0])
    cube([1, 1, 1.69]);
  translate([56, 232, 0])
    cube([1, 1, 5.10]);
  translate([57, 232, 0])
    cube([1, 1, 5.33]);
  translate([58, 232, 0])
    cube([1, 1, 2.27]);
  translate([59, 232, 0])
    cube([1, 1, 1.10]);
  translate([60, 232, 0])
    cube([1, 1, 0.75]);
  translate([61, 232, 0])
    cube([1, 1, 0.31]);
  translate([62, 232, 0])
    cube([1, 1, 0.71]);
  translate([63, 232, 0])
    cube([1, 1, 1.06]);
  translate([64, 232, 0])
    cube([1, 1, 1.18]);
  translate([65, 232, 0])
    cube([1, 1, 1.10]);
  translate([66, 232, 0])
    cube([1, 1, 1.18]);
  translate([67, 232, 0])
    cube([1, 1, 1.14]);
  translate([68, 232, 0])
    cube([1, 1, 1.22]);
  translate([69, 232, 0])
    cube([1, 1, 1.10]);
  translate([70, 232, 0])
    cube([1, 1, 1.14]);
  translate([71, 232, 0])
    cube([1, 1, 1.22]);
  translate([72, 232, 0])
    cube([1, 1, 1.14]);
  translate([73, 232, 0])
    cube([1, 1, 1.41]);
  translate([74, 232, 0])
    cube([1, 1, 1.69]);
  translate([75, 232, 0])
    cube([1, 1, 1.41]);
  translate([76, 232, 0])
    cube([1, 1, 1.57]);
  translate([77, 232, 0])
    cube([1, 1, 1.49]);
  translate([78, 232, 0])
    cube([1, 1, 4.27]);
  translate([79, 232, 0])
    cube([1, 1, 4.35]);
  translate([80, 232, 0])
    cube([1, 1, 4.31]);
  translate([81, 232, 0])
    cube([1, 1, 4.35]);
  translate([82, 232, 0])
    cube([1, 1, 4.47]);
  translate([83, 232, 0])
    cube([1, 1, 4.63]);
  translate([84, 232, 0])
    cube([1, 1, 4.90]);
  translate([85, 232, 0])
    cube([1, 1, 5.18]);
  translate([86, 232, 0])
    cube([1, 1, 5.33]);
  translate([87, 232, 0])
    cube([1, 1, 5.22]);
  translate([88, 232, 0])
    cube([1, 1, 5.02]);
  translate([89, 232, 0])
    cube([1, 1, 4.94]);
  translate([90, 232, 0])
    cube([1, 1, 4.78]);
  translate([91, 232, 0])
    cube([1, 1, 4.63]);
  translate([92, 232, 0])
    cube([1, 1, 4.31]);
  translate([93, 232, 0])
    cube([1, 1, 4.43]);
  translate([94, 232, 0])
    cube([1, 1, 4.31]);
  translate([95, 232, 0])
    cube([1, 1, 4.24]);
  translate([96, 232, 0])
    cube([1, 1, 4.24]);
  translate([97, 232, 0])
    cube([1, 1, 4.20]);
  translate([98, 232, 0])
    cube([1, 1, 4.20]);
  translate([99, 232, 0])
    cube([1, 1, 4.08]);
  translate([100, 232, 0])
    cube([1, 1, 4.04]);
  translate([101, 232, 0])
    cube([1, 1, 3.92]);
  translate([102, 232, 0])
    cube([1, 1, 3.76]);
  translate([103, 232, 0])
    cube([1, 1, 3.76]);
  translate([104, 232, 0])
    cube([1, 1, 3.80]);
  translate([105, 232, 0])
    cube([1, 1, 3.65]);
  translate([106, 232, 0])
    cube([1, 1, 3.65]);
  translate([107, 232, 0])
    cube([1, 1, 3.65]);
  translate([108, 232, 0])
    cube([1, 1, 3.76]);
  translate([109, 232, 0])
    cube([1, 1, 1.96]);
  translate([110, 232, 0])
    cube([1, 1, 2.04]);
  translate([111, 232, 0])
    cube([1, 1, 2.04]);
  translate([112, 232, 0])
    cube([1, 1, 2.04]);
  translate([113, 232, 0])
    cube([1, 1, 2.08]);
  translate([114, 232, 0])
    cube([1, 1, 2.08]);
  translate([115, 232, 0])
    cube([1, 1, 2.04]);
  translate([116, 232, 0])
    cube([1, 1, 6.63]);
  translate([117, 232, 0])
    cube([1, 1, 6.47]);
  translate([118, 232, 0])
    cube([1, 1, 5.06]);
  translate([119, 232, 0])
    cube([1, 1, 3.41]);
  translate([120, 232, 0])
    cube([1, 1, 3.06]);
  translate([121, 232, 0])
    cube([1, 1, 2.98]);
  translate([122, 232, 0])
    cube([1, 1, 3.14]);
  translate([123, 232, 0])
    cube([1, 1, 3.25]);
  translate([124, 232, 0])
    cube([1, 1, 3.18]);
  translate([125, 232, 0])
    cube([1, 1, 3.18]);
  translate([126, 232, 0])
    cube([1, 1, 3.06]);
  translate([127, 232, 0])
    cube([1, 1, 2.86]);
  translate([128, 232, 0])
    cube([1, 1, 2.90]);
  translate([129, 232, 0])
    cube([1, 1, 2.82]);
  translate([130, 232, 0])
    cube([1, 1, 2.94]);
  translate([131, 232, 0])
    cube([1, 1, 2.98]);
  translate([132, 232, 0])
    cube([1, 1, 3.02]);
  translate([133, 232, 0])
    cube([1, 1, 3.14]);
  translate([134, 232, 0])
    cube([1, 1, 3.10]);
  translate([135, 232, 0])
    cube([1, 1, 3.06]);
  translate([136, 232, 0])
    cube([1, 1, 3.25]);
  translate([137, 232, 0])
    cube([1, 1, 3.25]);
  translate([138, 232, 0])
    cube([1, 1, 3.18]);
  translate([139, 232, 0])
    cube([1, 1, 3.41]);
  translate([140, 232, 0])
    cube([1, 1, 3.53]);
  translate([141, 232, 0])
    cube([1, 1, 3.53]);
  translate([142, 232, 0])
    cube([1, 1, 4.00]);
  translate([143, 232, 0])
    cube([1, 1, 4.16]);
  translate([144, 232, 0])
    cube([1, 1, 4.08]);
  translate([145, 232, 0])
    cube([1, 1, 4.82]);
  translate([146, 232, 0])
    cube([1, 1, 4.90]);
  translate([147, 232, 0])
    cube([1, 1, 4.78]);
  translate([148, 232, 0])
    cube([1, 1, 5.41]);
  translate([149, 232, 0])
    cube([1, 1, 4.47]);
  translate([150, 232, 0])
    cube([1, 1, 1.57]);
  translate([151, 232, 0])
    cube([1, 1, 3.33]);
  translate([152, 232, 0])
    cube([1, 1, 1.37]);
  translate([153, 232, 0])
    cube([1, 1, 1.57]);
  translate([154, 232, 0])
    cube([1, 1, 3.02]);
  translate([155, 232, 0])
    cube([1, 1, 1.76]);
  translate([156, 232, 0])
    cube([1, 1, 2.08]);
  translate([157, 232, 0])
    cube([1, 1, 2.04]);
  translate([158, 232, 0])
    cube([1, 1, 1.80]);
  translate([159, 232, 0])
    cube([1, 1, 1.76]);
  translate([160, 232, 0])
    cube([1, 1, 1.49]);
  translate([161, 232, 0])
    cube([1, 1, 1.57]);
  translate([162, 232, 0])
    cube([1, 1, 1.10]);
  translate([163, 232, 0])
    cube([1, 1, 2.86]);
  translate([164, 232, 0])
    cube([1, 1, 1.14]);
  translate([165, 232, 0])
    cube([1, 1, 0.90]);
  translate([166, 232, 0])
    cube([1, 1, 0.71]);
  translate([167, 232, 0])
    cube([1, 1, 0.94]);
  translate([168, 232, 0])
    cube([1, 1, 1.06]);
  translate([169, 232, 0])
    cube([1, 1, 1.29]);
  translate([170, 232, 0])
    cube([1, 1, 1.53]);
  translate([171, 232, 0])
    cube([1, 1, 1.61]);
  translate([172, 232, 0])
    cube([1, 1, 2.00]);
  translate([173, 232, 0])
    cube([1, 1, 4.82]);
  translate([174, 232, 0])
    cube([1, 1, 5.18]);
  translate([175, 232, 0])
    cube([1, 1, 2.35]);
  translate([176, 232, 0])
    cube([1, 1, 1.92]);
  translate([177, 232, 0])
    cube([1, 1, 3.65]);
  translate([178, 232, 0])
    cube([1, 1, 4.90]);
  translate([179, 232, 0])
    cube([1, 1, 2.00]);
  translate([180, 232, 0])
    cube([1, 1, 2.04]);
  translate([181, 232, 0])
    cube([1, 1, 2.08]);
  translate([182, 232, 0])
    cube([1, 1, 2.08]);
  translate([183, 232, 0])
    cube([1, 1, 2.08]);
  translate([184, 232, 0])
    cube([1, 1, 2.08]);
  translate([185, 232, 0])
    cube([1, 1, 2.08]);
  translate([186, 232, 0])
    cube([1, 1, 2.08]);
  translate([187, 232, 0])
    cube([1, 1, 2.08]);
  translate([188, 232, 0])
    cube([1, 1, 2.08]);
  translate([189, 232, 0])
    cube([1, 1, 2.08]);
  translate([190, 232, 0])
    cube([1, 1, 2.08]);
  translate([191, 232, 0])
    cube([1, 1, 2.08]);
  translate([192, 232, 0])
    cube([1, 1, 2.08]);
  translate([193, 232, 0])
    cube([1, 1, 2.08]);
  translate([194, 232, 0])
    cube([1, 1, 2.08]);
  translate([195, 232, 0])
    cube([1, 1, 2.08]);
  translate([196, 232, 0])
    cube([1, 1, 2.08]);
  translate([197, 232, 0])
    cube([1, 1, 2.08]);
  translate([198, 232, 0])
    cube([1, 1, 2.08]);
  translate([199, 232, 0])
    cube([1, 1, 2.08]);
  translate([200, 232, 0])
    cube([1, 1, 2.08]);
  translate([201, 232, 0])
    cube([1, 1, 2.08]);
  translate([202, 232, 0])
    cube([1, 1, 2.08]);
  translate([203, 232, 0])
    cube([1, 1, 2.08]);
  translate([204, 232, 0])
    cube([1, 1, 2.08]);
  translate([205, 232, 0])
    cube([1, 1, 2.08]);
  translate([206, 232, 0])
    cube([1, 1, 2.08]);
  translate([207, 232, 0])
    cube([1, 1, 2.08]);
  translate([208, 232, 0])
    cube([1, 1, 2.08]);
  translate([209, 232, 0])
    cube([1, 1, 2.08]);
  translate([210, 232, 0])
    cube([1, 1, 2.08]);
  translate([211, 232, 0])
    cube([1, 1, 2.08]);
  translate([212, 232, 0])
    cube([1, 1, 2.08]);
  translate([213, 232, 0])
    cube([1, 1, 2.08]);
  translate([214, 232, 0])
    cube([1, 1, 2.08]);
  translate([215, 232, 0])
    cube([1, 1, 2.08]);
  translate([216, 232, 0])
    cube([1, 1, 2.08]);
  translate([217, 232, 0])
    cube([1, 1, 2.08]);
  translate([218, 232, 0])
    cube([1, 1, 2.08]);
  translate([219, 232, 0])
    cube([1, 1, 2.08]);
  translate([220, 232, 0])
    cube([1, 1, 2.04]);
  translate([221, 232, 0])
    cube([1, 1, 2.08]);
  translate([222, 232, 0])
    cube([1, 1, 2.04]);
  translate([223, 232, 0])
    cube([1, 1, 2.04]);
  translate([224, 232, 0])
    cube([1, 1, 2.04]);
  translate([225, 232, 0])
    cube([1, 1, 2.04]);
  translate([226, 232, 0])
    cube([1, 1, 2.04]);
  translate([227, 232, 0])
    cube([1, 1, 2.04]);
  translate([228, 232, 0])
    cube([1, 1, 2.04]);
  translate([229, 232, 0])
    cube([1, 1, 2.04]);
  translate([230, 232, 0])
    cube([1, 1, 2.04]);
  translate([231, 232, 0])
    cube([1, 1, 2.04]);
  translate([232, 232, 0])
    cube([1, 1, 2.04]);
  translate([233, 232, 0])
    cube([1, 1, 2.04]);
  translate([234, 232, 0])
    cube([1, 1, 2.04]);
  translate([235, 232, 0])
    cube([1, 1, 2.04]);
  translate([236, 232, 0])
    cube([1, 1, 2.04]);
  translate([237, 232, 0])
    cube([1, 1, 2.04]);
  translate([238, 232, 0])
    cube([1, 1, 2.04]);
  translate([239, 232, 0])
    cube([1, 1, 2.04]);
  translate([240, 232, 0])
    cube([1, 1, 2.04]);
  translate([241, 232, 0])
    cube([1, 1, 2.04]);
  translate([242, 232, 0])
    cube([1, 1, 2.04]);
  translate([243, 232, 0])
    cube([1, 1, 2.04]);
  translate([244, 232, 0])
    cube([1, 1, 2.04]);
  translate([245, 232, 0])
    cube([1, 1, 2.04]);
  translate([246, 232, 0])
    cube([1, 1, 2.04]);
  translate([0, 233, 0])
    cube([1, 1, 2.27]);
  translate([1, 233, 0])
    cube([1, 1, 2.24]);
  translate([2, 233, 0])
    cube([1, 1, 2.24]);
  translate([3, 233, 0])
    cube([1, 1, 2.27]);
  translate([4, 233, 0])
    cube([1, 1, 2.31]);
  translate([5, 233, 0])
    cube([1, 1, 2.27]);
  translate([6, 233, 0])
    cube([1, 1, 2.27]);
  translate([7, 233, 0])
    cube([1, 1, 2.24]);
  translate([8, 233, 0])
    cube([1, 1, 2.27]);
  translate([9, 233, 0])
    cube([1, 1, 2.24]);
  translate([10, 233, 0])
    cube([1, 1, 2.24]);
  translate([11, 233, 0])
    cube([1, 1, 2.27]);
  translate([12, 233, 0])
    cube([1, 1, 2.31]);
  translate([13, 233, 0])
    cube([1, 1, 2.27]);
  translate([14, 233, 0])
    cube([1, 1, 2.27]);
  translate([15, 233, 0])
    cube([1, 1, 2.27]);
  translate([16, 233, 0])
    cube([1, 1, 2.27]);
  translate([17, 233, 0])
    cube([1, 1, 2.27]);
  translate([18, 233, 0])
    cube([1, 1, 2.24]);
  translate([19, 233, 0])
    cube([1, 1, 2.24]);
  translate([20, 233, 0])
    cube([1, 1, 2.24]);
  translate([21, 233, 0])
    cube([1, 1, 2.24]);
  translate([22, 233, 0])
    cube([1, 1, 2.24]);
  translate([23, 233, 0])
    cube([1, 1, 2.24]);
  translate([24, 233, 0])
    cube([1, 1, 2.27]);
  translate([25, 233, 0])
    cube([1, 1, 2.24]);
  translate([26, 233, 0])
    cube([1, 1, 2.24]);
  translate([27, 233, 0])
    cube([1, 1, 2.24]);
  translate([28, 233, 0])
    cube([1, 1, 2.24]);
  translate([29, 233, 0])
    cube([1, 1, 2.24]);
  translate([30, 233, 0])
    cube([1, 1, 2.24]);
  translate([31, 233, 0])
    cube([1, 1, 2.24]);
  translate([32, 233, 0])
    cube([1, 1, 2.24]);
  translate([33, 233, 0])
    cube([1, 1, 2.24]);
  translate([34, 233, 0])
    cube([1, 1, 2.24]);
  translate([35, 233, 0])
    cube([1, 1, 2.24]);
  translate([36, 233, 0])
    cube([1, 1, 2.24]);
  translate([37, 233, 0])
    cube([1, 1, 2.24]);
  translate([38, 233, 0])
    cube([1, 1, 2.24]);
  translate([39, 233, 0])
    cube([1, 1, 2.24]);
  translate([40, 233, 0])
    cube([1, 1, 2.24]);
  translate([41, 233, 0])
    cube([1, 1, 2.24]);
  translate([42, 233, 0])
    cube([1, 1, 2.24]);
  translate([43, 233, 0])
    cube([1, 1, 2.20]);
  translate([44, 233, 0])
    cube([1, 1, 2.20]);
  translate([45, 233, 0])
    cube([1, 1, 2.24]);
  translate([46, 233, 0])
    cube([1, 1, 2.55]);
  translate([47, 233, 0])
    cube([1, 1, 7.29]);
  translate([48, 233, 0])
    cube([1, 1, 9.02]);
  translate([49, 233, 0])
    cube([1, 1, 8.75]);
  translate([50, 233, 0])
    cube([1, 1, 4.04]);
  translate([51, 233, 0])
    cube([1, 1, 1.37]);
  translate([52, 233, 0])
    cube([1, 1, 1.37]);
  translate([53, 233, 0])
    cube([1, 1, 1.61]);
  translate([54, 233, 0])
    cube([1, 1, 2.00]);
  translate([55, 233, 0])
    cube([1, 1, 3.14]);
  translate([56, 233, 0])
    cube([1, 1, 6.43]);
  translate([57, 233, 0])
    cube([1, 1, 4.04]);
  translate([58, 233, 0])
    cube([1, 1, 1.10]);
  translate([59, 233, 0])
    cube([1, 1, 0.86]);
  translate([60, 233, 0])
    cube([1, 1, 0.71]);
  translate([61, 233, 0])
    cube([1, 1, 0.27]);
  translate([62, 233, 0])
    cube([1, 1, 1.65]);
  translate([63, 233, 0])
    cube([1, 1, 1.33]);
  translate([64, 233, 0])
    cube([1, 1, 1.22]);
  translate([65, 233, 0])
    cube([1, 1, 1.22]);
  translate([66, 233, 0])
    cube([1, 1, 1.18]);
  translate([67, 233, 0])
    cube([1, 1, 1.14]);
  translate([68, 233, 0])
    cube([1, 1, 1.10]);
  translate([69, 233, 0])
    cube([1, 1, 1.22]);
  translate([70, 233, 0])
    cube([1, 1, 1.18]);
  translate([71, 233, 0])
    cube([1, 1, 1.14]);
  translate([72, 233, 0])
    cube([1, 1, 1.18]);
  translate([73, 233, 0])
    cube([1, 1, 1.02]);
  translate([74, 233, 0])
    cube([1, 1, 1.14]);
  translate([75, 233, 0])
    cube([1, 1, 1.57]);
  translate([76, 233, 0])
    cube([1, 1, 2.16]);
  translate([77, 233, 0])
    cube([1, 1, 1.76]);
  translate([78, 233, 0])
    cube([1, 1, 4.04]);
  translate([79, 233, 0])
    cube([1, 1, 4.16]);
  translate([80, 233, 0])
    cube([1, 1, 4.27]);
  translate([81, 233, 0])
    cube([1, 1, 4.35]);
  translate([82, 233, 0])
    cube([1, 1, 4.47]);
  translate([83, 233, 0])
    cube([1, 1, 4.63]);
  translate([84, 233, 0])
    cube([1, 1, 4.75]);
  translate([85, 233, 0])
    cube([1, 1, 5.14]);
  translate([86, 233, 0])
    cube([1, 1, 5.14]);
  translate([87, 233, 0])
    cube([1, 1, 5.25]);
  translate([88, 233, 0])
    cube([1, 1, 5.02]);
  translate([89, 233, 0])
    cube([1, 1, 4.86]);
  translate([90, 233, 0])
    cube([1, 1, 4.75]);
  translate([91, 233, 0])
    cube([1, 1, 4.63]);
  translate([92, 233, 0])
    cube([1, 1, 4.39]);
  translate([93, 233, 0])
    cube([1, 1, 4.39]);
  translate([94, 233, 0])
    cube([1, 1, 4.20]);
  translate([95, 233, 0])
    cube([1, 1, 4.12]);
  translate([96, 233, 0])
    cube([1, 1, 4.16]);
  translate([97, 233, 0])
    cube([1, 1, 4.12]);
  translate([98, 233, 0])
    cube([1, 1, 4.12]);
  translate([99, 233, 0])
    cube([1, 1, 4.00]);
  translate([100, 233, 0])
    cube([1, 1, 3.96]);
  translate([101, 233, 0])
    cube([1, 1, 3.84]);
  translate([102, 233, 0])
    cube([1, 1, 3.73]);
  translate([103, 233, 0])
    cube([1, 1, 3.73]);
  translate([104, 233, 0])
    cube([1, 1, 3.73]);
  translate([105, 233, 0])
    cube([1, 1, 3.61]);
  translate([106, 233, 0])
    cube([1, 1, 3.61]);
  translate([107, 233, 0])
    cube([1, 1, 3.65]);
  translate([108, 233, 0])
    cube([1, 1, 3.69]);
  translate([109, 233, 0])
    cube([1, 1, 2.08]);
  translate([110, 233, 0])
    cube([1, 1, 2.04]);
  translate([111, 233, 0])
    cube([1, 1, 2.04]);
  translate([112, 233, 0])
    cube([1, 1, 2.04]);
  translate([113, 233, 0])
    cube([1, 1, 2.08]);
  translate([114, 233, 0])
    cube([1, 1, 2.08]);
  translate([115, 233, 0])
    cube([1, 1, 2.00]);
  translate([116, 233, 0])
    cube([1, 1, 6.75]);
  translate([117, 233, 0])
    cube([1, 1, 6.55]);
  translate([118, 233, 0])
    cube([1, 1, 5.65]);
  translate([119, 233, 0])
    cube([1, 1, 3.88]);
  translate([120, 233, 0])
    cube([1, 1, 3.10]);
  translate([121, 233, 0])
    cube([1, 1, 3.02]);
  translate([122, 233, 0])
    cube([1, 1, 3.22]);
  translate([123, 233, 0])
    cube([1, 1, 3.25]);
  translate([124, 233, 0])
    cube([1, 1, 3.25]);
  translate([125, 233, 0])
    cube([1, 1, 3.29]);
  translate([126, 233, 0])
    cube([1, 1, 3.02]);
  translate([127, 233, 0])
    cube([1, 1, 2.94]);
  translate([128, 233, 0])
    cube([1, 1, 2.90]);
  translate([129, 233, 0])
    cube([1, 1, 2.82]);
  translate([130, 233, 0])
    cube([1, 1, 2.94]);
  translate([131, 233, 0])
    cube([1, 1, 3.02]);
  translate([132, 233, 0])
    cube([1, 1, 3.02]);
  translate([133, 233, 0])
    cube([1, 1, 3.14]);
  translate([134, 233, 0])
    cube([1, 1, 3.18]);
  translate([135, 233, 0])
    cube([1, 1, 3.14]);
  translate([136, 233, 0])
    cube([1, 1, 3.22]);
  translate([137, 233, 0])
    cube([1, 1, 3.18]);
  translate([138, 233, 0])
    cube([1, 1, 3.22]);
  translate([139, 233, 0])
    cube([1, 1, 3.33]);
  translate([140, 233, 0])
    cube([1, 1, 3.18]);
  translate([141, 233, 0])
    cube([1, 1, 2.31]);
  translate([142, 233, 0])
    cube([1, 1, 2.43]);
  translate([143, 233, 0])
    cube([1, 1, 4.12]);
  translate([144, 233, 0])
    cube([1, 1, 4.16]);
  translate([145, 233, 0])
    cube([1, 1, 4.63]);
  translate([146, 233, 0])
    cube([1, 1, 4.67]);
  translate([147, 233, 0])
    cube([1, 1, 3.61]);
  translate([148, 233, 0])
    cube([1, 1, 1.29]);
  translate([149, 233, 0])
    cube([1, 1, 3.06]);
  translate([150, 233, 0])
    cube([1, 1, 4.12]);
  translate([151, 233, 0])
    cube([1, 1, 5.29]);
  translate([152, 233, 0])
    cube([1, 1, 1.96]);
  translate([153, 233, 0])
    cube([1, 1, 0.63]);
  translate([154, 233, 0])
    cube([1, 1, 1.06]);
  translate([155, 233, 0])
    cube([1, 1, 2.12]);
  translate([156, 233, 0])
    cube([1, 1, 3.92]);
  translate([157, 233, 0])
    cube([1, 1, 2.43]);
  translate([158, 233, 0])
    cube([1, 1, 1.88]);
  translate([159, 233, 0])
    cube([1, 1, 1.96]);
  translate([160, 233, 0])
    cube([1, 1, 2.63]);
  translate([161, 233, 0])
    cube([1, 1, 1.88]);
  translate([162, 233, 0])
    cube([1, 1, 2.90]);
  translate([163, 233, 0])
    cube([1, 1, 5.29]);
  translate([164, 233, 0])
    cube([1, 1, 2.90]);
  translate([165, 233, 0])
    cube([1, 1, 1.45]);
  translate([166, 233, 0])
    cube([1, 1, 0.51]);
  translate([167, 233, 0])
    cube([1, 1, 0.71]);
  translate([168, 233, 0])
    cube([1, 1, 0.98]);
  translate([169, 233, 0])
    cube([1, 1, 1.29]);
  translate([170, 233, 0])
    cube([1, 1, 1.41]);
  translate([171, 233, 0])
    cube([1, 1, 1.69]);
  translate([172, 233, 0])
    cube([1, 1, 2.00]);
  translate([173, 233, 0])
    cube([1, 1, 3.92]);
  translate([174, 233, 0])
    cube([1, 1, 5.80]);
  translate([175, 233, 0])
    cube([1, 1, 3.25]);
  translate([176, 233, 0])
    cube([1, 1, 1.92]);
  translate([177, 233, 0])
    cube([1, 1, 2.78]);
  translate([178, 233, 0])
    cube([1, 1, 7.06]);
  translate([179, 233, 0])
    cube([1, 1, 2.12]);
  translate([180, 233, 0])
    cube([1, 1, 2.04]);
  translate([181, 233, 0])
    cube([1, 1, 2.08]);
  translate([182, 233, 0])
    cube([1, 1, 2.08]);
  translate([183, 233, 0])
    cube([1, 1, 2.08]);
  translate([184, 233, 0])
    cube([1, 1, 2.08]);
  translate([185, 233, 0])
    cube([1, 1, 2.08]);
  translate([186, 233, 0])
    cube([1, 1, 2.08]);
  translate([187, 233, 0])
    cube([1, 1, 2.08]);
  translate([188, 233, 0])
    cube([1, 1, 2.08]);
  translate([189, 233, 0])
    cube([1, 1, 2.08]);
  translate([190, 233, 0])
    cube([1, 1, 2.08]);
  translate([191, 233, 0])
    cube([1, 1, 2.08]);
  translate([192, 233, 0])
    cube([1, 1, 2.08]);
  translate([193, 233, 0])
    cube([1, 1, 2.08]);
  translate([194, 233, 0])
    cube([1, 1, 2.08]);
  translate([195, 233, 0])
    cube([1, 1, 2.08]);
  translate([196, 233, 0])
    cube([1, 1, 2.08]);
  translate([197, 233, 0])
    cube([1, 1, 2.08]);
  translate([198, 233, 0])
    cube([1, 1, 2.08]);
  translate([199, 233, 0])
    cube([1, 1, 2.08]);
  translate([200, 233, 0])
    cube([1, 1, 2.08]);
  translate([201, 233, 0])
    cube([1, 1, 2.08]);
  translate([202, 233, 0])
    cube([1, 1, 2.08]);
  translate([203, 233, 0])
    cube([1, 1, 2.08]);
  translate([204, 233, 0])
    cube([1, 1, 2.08]);
  translate([205, 233, 0])
    cube([1, 1, 2.08]);
  translate([206, 233, 0])
    cube([1, 1, 2.08]);
  translate([207, 233, 0])
    cube([1, 1, 2.08]);
  translate([208, 233, 0])
    cube([1, 1, 2.08]);
  translate([209, 233, 0])
    cube([1, 1, 2.08]);
  translate([210, 233, 0])
    cube([1, 1, 2.08]);
  translate([211, 233, 0])
    cube([1, 1, 2.08]);
  translate([212, 233, 0])
    cube([1, 1, 2.08]);
  translate([213, 233, 0])
    cube([1, 1, 2.08]);
  translate([214, 233, 0])
    cube([1, 1, 2.08]);
  translate([215, 233, 0])
    cube([1, 1, 2.08]);
  translate([216, 233, 0])
    cube([1, 1, 2.08]);
  translate([217, 233, 0])
    cube([1, 1, 2.08]);
  translate([218, 233, 0])
    cube([1, 1, 2.08]);
  translate([219, 233, 0])
    cube([1, 1, 2.08]);
  translate([220, 233, 0])
    cube([1, 1, 2.04]);
  translate([221, 233, 0])
    cube([1, 1, 2.08]);
  translate([222, 233, 0])
    cube([1, 1, 2.04]);
  translate([223, 233, 0])
    cube([1, 1, 2.04]);
  translate([224, 233, 0])
    cube([1, 1, 2.04]);
  translate([225, 233, 0])
    cube([1, 1, 2.04]);
  translate([226, 233, 0])
    cube([1, 1, 2.04]);
  translate([227, 233, 0])
    cube([1, 1, 2.04]);
  translate([228, 233, 0])
    cube([1, 1, 2.04]);
  translate([229, 233, 0])
    cube([1, 1, 2.04]);
  translate([230, 233, 0])
    cube([1, 1, 2.04]);
  translate([231, 233, 0])
    cube([1, 1, 2.04]);
  translate([232, 233, 0])
    cube([1, 1, 2.04]);
  translate([233, 233, 0])
    cube([1, 1, 2.04]);
  translate([234, 233, 0])
    cube([1, 1, 2.04]);
  translate([235, 233, 0])
    cube([1, 1, 2.04]);
  translate([236, 233, 0])
    cube([1, 1, 2.04]);
  translate([237, 233, 0])
    cube([1, 1, 2.04]);
  translate([238, 233, 0])
    cube([1, 1, 2.04]);
  translate([239, 233, 0])
    cube([1, 1, 2.04]);
  translate([240, 233, 0])
    cube([1, 1, 2.04]);
  translate([241, 233, 0])
    cube([1, 1, 2.04]);
  translate([242, 233, 0])
    cube([1, 1, 2.04]);
  translate([243, 233, 0])
    cube([1, 1, 2.04]);
  translate([244, 233, 0])
    cube([1, 1, 2.04]);
  translate([245, 233, 0])
    cube([1, 1, 2.04]);
  translate([246, 233, 0])
    cube([1, 1, 2.04]);
  translate([0, 234, 0])
    cube([1, 1, 2.27]);
  translate([1, 234, 0])
    cube([1, 1, 2.24]);
  translate([2, 234, 0])
    cube([1, 1, 2.31]);
  translate([3, 234, 0])
    cube([1, 1, 2.27]);
  translate([4, 234, 0])
    cube([1, 1, 2.27]);
  translate([5, 234, 0])
    cube([1, 1, 2.27]);
  translate([6, 234, 0])
    cube([1, 1, 2.27]);
  translate([7, 234, 0])
    cube([1, 1, 2.27]);
  translate([8, 234, 0])
    cube([1, 1, 2.27]);
  translate([9, 234, 0])
    cube([1, 1, 2.27]);
  translate([10, 234, 0])
    cube([1, 1, 2.27]);
  translate([11, 234, 0])
    cube([1, 1, 2.27]);
  translate([12, 234, 0])
    cube([1, 1, 2.24]);
  translate([13, 234, 0])
    cube([1, 1, 2.24]);
  translate([14, 234, 0])
    cube([1, 1, 2.27]);
  translate([15, 234, 0])
    cube([1, 1, 2.27]);
  translate([16, 234, 0])
    cube([1, 1, 2.27]);
  translate([17, 234, 0])
    cube([1, 1, 2.27]);
  translate([18, 234, 0])
    cube([1, 1, 2.27]);
  translate([19, 234, 0])
    cube([1, 1, 2.24]);
  translate([20, 234, 0])
    cube([1, 1, 2.27]);
  translate([21, 234, 0])
    cube([1, 1, 2.24]);
  translate([22, 234, 0])
    cube([1, 1, 2.24]);
  translate([23, 234, 0])
    cube([1, 1, 2.24]);
  translate([24, 234, 0])
    cube([1, 1, 2.24]);
  translate([25, 234, 0])
    cube([1, 1, 2.24]);
  translate([26, 234, 0])
    cube([1, 1, 2.24]);
  translate([27, 234, 0])
    cube([1, 1, 2.24]);
  translate([28, 234, 0])
    cube([1, 1, 2.20]);
  translate([29, 234, 0])
    cube([1, 1, 2.24]);
  translate([30, 234, 0])
    cube([1, 1, 2.27]);
  translate([31, 234, 0])
    cube([1, 1, 2.27]);
  translate([32, 234, 0])
    cube([1, 1, 2.24]);
  translate([33, 234, 0])
    cube([1, 1, 2.24]);
  translate([34, 234, 0])
    cube([1, 1, 2.24]);
  translate([35, 234, 0])
    cube([1, 1, 2.24]);
  translate([36, 234, 0])
    cube([1, 1, 2.24]);
  translate([37, 234, 0])
    cube([1, 1, 2.24]);
  translate([38, 234, 0])
    cube([1, 1, 2.20]);
  translate([39, 234, 0])
    cube([1, 1, 2.24]);
  translate([40, 234, 0])
    cube([1, 1, 2.24]);
  translate([41, 234, 0])
    cube([1, 1, 2.20]);
  translate([42, 234, 0])
    cube([1, 1, 2.20]);
  translate([43, 234, 0])
    cube([1, 1, 2.20]);
  translate([44, 234, 0])
    cube([1, 1, 2.24]);
  translate([45, 234, 0])
    cube([1, 1, 2.24]);
  translate([46, 234, 0])
    cube([1, 1, 2.24]);
  translate([47, 234, 0])
    cube([1, 1, 8.00]);
  translate([48, 234, 0])
    cube([1, 1, 9.06]);
  translate([49, 234, 0])
    cube([1, 1, 1.37]);
  translate([50, 234, 0])
    cube([1, 1, 1.80]);
  translate([51, 234, 0])
    cube([1, 1, 1.33]);
  translate([52, 234, 0])
    cube([1, 1, 1.53]);
  translate([53, 234, 0])
    cube([1, 1, 1.73]);
  translate([54, 234, 0])
    cube([1, 1, 2.00]);
  translate([55, 234, 0])
    cube([1, 1, 4.12]);
  translate([56, 234, 0])
    cube([1, 1, 5.88]);
  translate([57, 234, 0])
    cube([1, 1, 3.18]);
  translate([58, 234, 0])
    cube([1, 1, 1.65]);
  translate([59, 234, 0])
    cube([1, 1, 1.65]);
  translate([60, 234, 0])
    cube([1, 1, 0.98]);
  translate([61, 234, 0])
    cube([1, 1, 0.31]);
  translate([62, 234, 0])
    cube([1, 1, 1.18]);
  translate([63, 234, 0])
    cube([1, 1, 1.25]);
  translate([64, 234, 0])
    cube([1, 1, 1.25]);
  translate([65, 234, 0])
    cube([1, 1, 1.02]);
  translate([66, 234, 0])
    cube([1, 1, 0.78]);
  translate([67, 234, 0])
    cube([1, 1, 1.10]);
  translate([68, 234, 0])
    cube([1, 1, 1.14]);
  translate([69, 234, 0])
    cube([1, 1, 1.25]);
  translate([70, 234, 0])
    cube([1, 1, 1.29]);
  translate([71, 234, 0])
    cube([1, 1, 1.29]);
  translate([72, 234, 0])
    cube([1, 1, 1.18]);
  translate([73, 234, 0])
    cube([1, 1, 0.82]);
  translate([74, 234, 0])
    cube([1, 1, 1.25]);
  translate([75, 234, 0])
    cube([1, 1, 3.18]);
  translate([76, 234, 0])
    cube([1, 1, 1.61]);
  translate([77, 234, 0])
    cube([1, 1, 3.84]);
  translate([78, 234, 0])
    cube([1, 1, 4.08]);
  translate([79, 234, 0])
    cube([1, 1, 4.12]);
  translate([80, 234, 0])
    cube([1, 1, 4.20]);
  translate([81, 234, 0])
    cube([1, 1, 4.20]);
  translate([82, 234, 0])
    cube([1, 1, 4.47]);
  translate([83, 234, 0])
    cube([1, 1, 4.67]);
  translate([84, 234, 0])
    cube([1, 1, 4.86]);
  translate([85, 234, 0])
    cube([1, 1, 5.22]);
  translate([86, 234, 0])
    cube([1, 1, 5.33]);
  translate([87, 234, 0])
    cube([1, 1, 5.29]);
  translate([88, 234, 0])
    cube([1, 1, 5.06]);
  translate([89, 234, 0])
    cube([1, 1, 4.86]);
  translate([90, 234, 0])
    cube([1, 1, 4.78]);
  translate([91, 234, 0])
    cube([1, 1, 4.51]);
  translate([92, 234, 0])
    cube([1, 1, 4.43]);
  translate([93, 234, 0])
    cube([1, 1, 4.31]);
  translate([94, 234, 0])
    cube([1, 1, 4.24]);
  translate([95, 234, 0])
    cube([1, 1, 4.08]);
  translate([96, 234, 0])
    cube([1, 1, 3.96]);
  translate([97, 234, 0])
    cube([1, 1, 4.04]);
  translate([98, 234, 0])
    cube([1, 1, 4.00]);
  translate([99, 234, 0])
    cube([1, 1, 3.84]);
  translate([100, 234, 0])
    cube([1, 1, 3.73]);
  translate([101, 234, 0])
    cube([1, 1, 3.69]);
  translate([102, 234, 0])
    cube([1, 1, 3.65]);
  translate([103, 234, 0])
    cube([1, 1, 3.65]);
  translate([104, 234, 0])
    cube([1, 1, 3.65]);
  translate([105, 234, 0])
    cube([1, 1, 3.57]);
  translate([106, 234, 0])
    cube([1, 1, 3.57]);
  translate([107, 234, 0])
    cube([1, 1, 3.65]);
  translate([108, 234, 0])
    cube([1, 1, 3.73]);
  translate([109, 234, 0])
    cube([1, 1, 2.27]);
  translate([110, 234, 0])
    cube([1, 1, 2.08]);
  translate([111, 234, 0])
    cube([1, 1, 2.04]);
  translate([112, 234, 0])
    cube([1, 1, 2.04]);
  translate([113, 234, 0])
    cube([1, 1, 2.08]);
  translate([114, 234, 0])
    cube([1, 1, 2.08]);
  translate([115, 234, 0])
    cube([1, 1, 1.76]);
  translate([116, 234, 0])
    cube([1, 1, 6.08]);
  translate([117, 234, 0])
    cube([1, 1, 7.41]);
  translate([118, 234, 0])
    cube([1, 1, 6.08]);
  translate([119, 234, 0])
    cube([1, 1, 4.47]);
  translate([120, 234, 0])
    cube([1, 1, 3.49]);
  translate([121, 234, 0])
    cube([1, 1, 2.98]);
  translate([122, 234, 0])
    cube([1, 1, 3.18]);
  translate([123, 234, 0])
    cube([1, 1, 3.25]);
  translate([124, 234, 0])
    cube([1, 1, 3.18]);
  translate([125, 234, 0])
    cube([1, 1, 3.25]);
  translate([126, 234, 0])
    cube([1, 1, 3.06]);
  translate([127, 234, 0])
    cube([1, 1, 2.94]);
  translate([128, 234, 0])
    cube([1, 1, 2.90]);
  translate([129, 234, 0])
    cube([1, 1, 2.82]);
  translate([130, 234, 0])
    cube([1, 1, 2.90]);
  translate([131, 234, 0])
    cube([1, 1, 2.86]);
  translate([132, 234, 0])
    cube([1, 1, 2.90]);
  translate([133, 234, 0])
    cube([1, 1, 3.02]);
  translate([134, 234, 0])
    cube([1, 1, 3.18]);
  translate([135, 234, 0])
    cube([1, 1, 3.14]);
  translate([136, 234, 0])
    cube([1, 1, 2.86]);
  translate([137, 234, 0])
    cube([1, 1, 2.16]);
  translate([138, 234, 0])
    cube([1, 1, 1.14]);
  translate([139, 234, 0])
    cube([1, 1, 1.06]);
  translate([140, 234, 0])
    cube([1, 1, 1.25]);
  translate([141, 234, 0])
    cube([1, 1, 1.22]);
  translate([142, 234, 0])
    cube([1, 1, 1.33]);
  translate([143, 234, 0])
    cube([1, 1, 0.94]);
  translate([144, 234, 0])
    cube([1, 1, 2.08]);
  translate([145, 234, 0])
    cube([1, 1, 1.88]);
  translate([146, 234, 0])
    cube([1, 1, 2.31]);
  translate([147, 234, 0])
    cube([1, 1, 2.82]);
  translate([148, 234, 0])
    cube([1, 1, 4.12]);
  translate([149, 234, 0])
    cube([1, 1, 2.27]);
  translate([150, 234, 0])
    cube([1, 1, 2.51]);
  translate([151, 234, 0])
    cube([1, 1, 5.22]);
  translate([152, 234, 0])
    cube([1, 1, 4.31]);
  translate([153, 234, 0])
    cube([1, 1, 1.61]);
  translate([154, 234, 0])
    cube([1, 1, 1.57]);
  translate([155, 234, 0])
    cube([1, 1, 3.29]);
  translate([156, 234, 0])
    cube([1, 1, 3.96]);
  translate([157, 234, 0])
    cube([1, 1, 1.96]);
  translate([158, 234, 0])
    cube([1, 1, 1.76]);
  translate([159, 234, 0])
    cube([1, 1, 1.80]);
  translate([160, 234, 0])
    cube([1, 1, 2.43]);
  translate([161, 234, 0])
    cube([1, 1, 2.20]);
  translate([162, 234, 0])
    cube([1, 1, 2.71]);
  translate([163, 234, 0])
    cube([1, 1, 2.90]);
  translate([164, 234, 0])
    cube([1, 1, 2.75]);
  translate([165, 234, 0])
    cube([1, 1, 1.57]);
  translate([166, 234, 0])
    cube([1, 1, 1.22]);
  translate([167, 234, 0])
    cube([1, 1, 0.63]);
  translate([168, 234, 0])
    cube([1, 1, 0.94]);
  translate([169, 234, 0])
    cube([1, 1, 1.25]);
  translate([170, 234, 0])
    cube([1, 1, 1.41]);
  translate([171, 234, 0])
    cube([1, 1, 1.57]);
  translate([172, 234, 0])
    cube([1, 1, 1.57]);
  translate([173, 234, 0])
    cube([1, 1, 3.14]);
  translate([174, 234, 0])
    cube([1, 1, 5.65]);
  translate([175, 234, 0])
    cube([1, 1, 4.47]);
  translate([176, 234, 0])
    cube([1, 1, 1.92]);
  translate([177, 234, 0])
    cube([1, 1, 2.43]);
  translate([178, 234, 0])
    cube([1, 1, 9.29]);
  translate([179, 234, 0])
    cube([1, 1, 2.16]);
  translate([180, 234, 0])
    cube([1, 1, 2.04]);
  translate([181, 234, 0])
    cube([1, 1, 2.04]);
  translate([182, 234, 0])
    cube([1, 1, 2.08]);
  translate([183, 234, 0])
    cube([1, 1, 2.08]);
  translate([184, 234, 0])
    cube([1, 1, 2.08]);
  translate([185, 234, 0])
    cube([1, 1, 2.08]);
  translate([186, 234, 0])
    cube([1, 1, 2.08]);
  translate([187, 234, 0])
    cube([1, 1, 2.08]);
  translate([188, 234, 0])
    cube([1, 1, 2.08]);
  translate([189, 234, 0])
    cube([1, 1, 2.08]);
  translate([190, 234, 0])
    cube([1, 1, 2.08]);
  translate([191, 234, 0])
    cube([1, 1, 2.08]);
  translate([192, 234, 0])
    cube([1, 1, 2.08]);
  translate([193, 234, 0])
    cube([1, 1, 2.00]);
  translate([194, 234, 0])
    cube([1, 1, 2.08]);
  translate([195, 234, 0])
    cube([1, 1, 2.08]);
  translate([196, 234, 0])
    cube([1, 1, 2.08]);
  translate([197, 234, 0])
    cube([1, 1, 2.08]);
  translate([198, 234, 0])
    cube([1, 1, 2.08]);
  translate([199, 234, 0])
    cube([1, 1, 2.08]);
  translate([200, 234, 0])
    cube([1, 1, 2.08]);
  translate([201, 234, 0])
    cube([1, 1, 2.08]);
  translate([202, 234, 0])
    cube([1, 1, 2.08]);
  translate([203, 234, 0])
    cube([1, 1, 2.08]);
  translate([204, 234, 0])
    cube([1, 1, 2.08]);
  translate([205, 234, 0])
    cube([1, 1, 2.08]);
  translate([206, 234, 0])
    cube([1, 1, 2.08]);
  translate([207, 234, 0])
    cube([1, 1, 2.08]);
  translate([208, 234, 0])
    cube([1, 1, 2.08]);
  translate([209, 234, 0])
    cube([1, 1, 2.08]);
  translate([210, 234, 0])
    cube([1, 1, 2.08]);
  translate([211, 234, 0])
    cube([1, 1, 2.08]);
  translate([212, 234, 0])
    cube([1, 1, 2.04]);
  translate([213, 234, 0])
    cube([1, 1, 2.08]);
  translate([214, 234, 0])
    cube([1, 1, 2.04]);
  translate([215, 234, 0])
    cube([1, 1, 2.04]);
  translate([216, 234, 0])
    cube([1, 1, 2.04]);
  translate([217, 234, 0])
    cube([1, 1, 2.08]);
  translate([218, 234, 0])
    cube([1, 1, 2.08]);
  translate([219, 234, 0])
    cube([1, 1, 2.08]);
  translate([220, 234, 0])
    cube([1, 1, 2.04]);
  translate([221, 234, 0])
    cube([1, 1, 2.04]);
  translate([222, 234, 0])
    cube([1, 1, 2.04]);
  translate([223, 234, 0])
    cube([1, 1, 2.04]);
  translate([224, 234, 0])
    cube([1, 1, 2.04]);
  translate([225, 234, 0])
    cube([1, 1, 2.04]);
  translate([226, 234, 0])
    cube([1, 1, 2.04]);
  translate([227, 234, 0])
    cube([1, 1, 2.04]);
  translate([228, 234, 0])
    cube([1, 1, 2.04]);
  translate([229, 234, 0])
    cube([1, 1, 2.04]);
  translate([230, 234, 0])
    cube([1, 1, 2.04]);
  translate([231, 234, 0])
    cube([1, 1, 2.04]);
  translate([232, 234, 0])
    cube([1, 1, 2.04]);
  translate([233, 234, 0])
    cube([1, 1, 2.04]);
  translate([234, 234, 0])
    cube([1, 1, 2.04]);
  translate([235, 234, 0])
    cube([1, 1, 2.04]);
  translate([236, 234, 0])
    cube([1, 1, 2.04]);
  translate([237, 234, 0])
    cube([1, 1, 2.04]);
  translate([238, 234, 0])
    cube([1, 1, 2.04]);
  translate([239, 234, 0])
    cube([1, 1, 2.04]);
  translate([240, 234, 0])
    cube([1, 1, 2.04]);
  translate([241, 234, 0])
    cube([1, 1, 2.04]);
  translate([242, 234, 0])
    cube([1, 1, 2.04]);
  translate([243, 234, 0])
    cube([1, 1, 2.04]);
  translate([244, 234, 0])
    cube([1, 1, 2.04]);
  translate([245, 234, 0])
    cube([1, 1, 2.04]);
  translate([246, 234, 0])
    cube([1, 1, 2.04]);
  translate([0, 235, 0])
    cube([1, 1, 2.27]);
  translate([1, 235, 0])
    cube([1, 1, 2.31]);
  translate([2, 235, 0])
    cube([1, 1, 2.27]);
  translate([3, 235, 0])
    cube([1, 1, 2.27]);
  translate([4, 235, 0])
    cube([1, 1, 2.27]);
  translate([5, 235, 0])
    cube([1, 1, 2.27]);
  translate([6, 235, 0])
    cube([1, 1, 2.27]);
  translate([7, 235, 0])
    cube([1, 1, 2.27]);
  translate([8, 235, 0])
    cube([1, 1, 2.27]);
  translate([9, 235, 0])
    cube([1, 1, 2.27]);
  translate([10, 235, 0])
    cube([1, 1, 2.27]);
  translate([11, 235, 0])
    cube([1, 1, 2.27]);
  translate([12, 235, 0])
    cube([1, 1, 2.27]);
  translate([13, 235, 0])
    cube([1, 1, 2.27]);
  translate([14, 235, 0])
    cube([1, 1, 2.27]);
  translate([15, 235, 0])
    cube([1, 1, 2.27]);
  translate([16, 235, 0])
    cube([1, 1, 2.27]);
  translate([17, 235, 0])
    cube([1, 1, 2.27]);
  translate([18, 235, 0])
    cube([1, 1, 2.27]);
  translate([19, 235, 0])
    cube([1, 1, 2.24]);
  translate([20, 235, 0])
    cube([1, 1, 2.27]);
  translate([21, 235, 0])
    cube([1, 1, 2.24]);
  translate([22, 235, 0])
    cube([1, 1, 2.24]);
  translate([23, 235, 0])
    cube([1, 1, 2.24]);
  translate([24, 235, 0])
    cube([1, 1, 2.24]);
  translate([25, 235, 0])
    cube([1, 1, 2.27]);
  translate([26, 235, 0])
    cube([1, 1, 2.27]);
  translate([27, 235, 0])
    cube([1, 1, 2.24]);
  translate([28, 235, 0])
    cube([1, 1, 2.24]);
  translate([29, 235, 0])
    cube([1, 1, 2.24]);
  translate([30, 235, 0])
    cube([1, 1, 2.27]);
  translate([31, 235, 0])
    cube([1, 1, 2.27]);
  translate([32, 235, 0])
    cube([1, 1, 2.24]);
  translate([33, 235, 0])
    cube([1, 1, 2.24]);
  translate([34, 235, 0])
    cube([1, 1, 2.24]);
  translate([35, 235, 0])
    cube([1, 1, 2.24]);
  translate([36, 235, 0])
    cube([1, 1, 2.24]);
  translate([37, 235, 0])
    cube([1, 1, 2.24]);
  translate([38, 235, 0])
    cube([1, 1, 2.20]);
  translate([39, 235, 0])
    cube([1, 1, 2.24]);
  translate([40, 235, 0])
    cube([1, 1, 2.24]);
  translate([41, 235, 0])
    cube([1, 1, 2.20]);
  translate([42, 235, 0])
    cube([1, 1, 2.20]);
  translate([43, 235, 0])
    cube([1, 1, 2.20]);
  translate([44, 235, 0])
    cube([1, 1, 2.24]);
  translate([45, 235, 0])
    cube([1, 1, 2.24]);
  translate([46, 235, 0])
    cube([1, 1, 5.06]);
  translate([47, 235, 0])
    cube([1, 1, 8.35]);
  translate([48, 235, 0])
    cube([1, 1, 8.04]);
  translate([49, 235, 0])
    cube([1, 1, 1.29]);
  translate([50, 235, 0])
    cube([1, 1, 2.00]);
  translate([51, 235, 0])
    cube([1, 1, 1.29]);
  translate([52, 235, 0])
    cube([1, 1, 1.53]);
  translate([53, 235, 0])
    cube([1, 1, 1.80]);
  translate([54, 235, 0])
    cube([1, 1, 2.55]);
  translate([55, 235, 0])
    cube([1, 1, 5.14]);
  translate([56, 235, 0])
    cube([1, 1, 5.84]);
  translate([57, 235, 0])
    cube([1, 1, 2.75]);
  translate([58, 235, 0])
    cube([1, 1, 1.69]);
  translate([59, 235, 0])
    cube([1, 1, 1.22]);
  translate([60, 235, 0])
    cube([1, 1, 1.10]);
  translate([61, 235, 0])
    cube([1, 1, 0.16]);
  translate([62, 235, 0])
    cube([1, 1, 0.55]);
  translate([63, 235, 0])
    cube([1, 1, 1.06]);
  translate([64, 235, 0])
    cube([1, 1, 1.25]);
  translate([65, 235, 0])
    cube([1, 1, 1.14]);
  translate([66, 235, 0])
    cube([1, 1, 1.06]);
  translate([67, 235, 0])
    cube([1, 1, 1.10]);
  translate([68, 235, 0])
    cube([1, 1, 0.86]);
  translate([69, 235, 0])
    cube([1, 1, 1.14]);
  translate([70, 235, 0])
    cube([1, 1, 1.73]);
  translate([71, 235, 0])
    cube([1, 1, 1.22]);
  translate([72, 235, 0])
    cube([1, 1, 1.06]);
  translate([73, 235, 0])
    cube([1, 1, 1.25]);
  translate([74, 235, 0])
    cube([1, 1, 1.37]);
  translate([75, 235, 0])
    cube([1, 1, 2.12]);
  translate([76, 235, 0])
    cube([1, 1, 1.80]);
  translate([77, 235, 0])
    cube([1, 1, 4.12]);
  translate([78, 235, 0])
    cube([1, 1, 4.04]);
  translate([79, 235, 0])
    cube([1, 1, 4.08]);
  translate([80, 235, 0])
    cube([1, 1, 4.08]);
  translate([81, 235, 0])
    cube([1, 1, 4.20]);
  translate([82, 235, 0])
    cube([1, 1, 4.39]);
  translate([83, 235, 0])
    cube([1, 1, 4.67]);
  translate([84, 235, 0])
    cube([1, 1, 4.98]);
  translate([85, 235, 0])
    cube([1, 1, 5.33]);
  translate([86, 235, 0])
    cube([1, 1, 5.33]);
  translate([87, 235, 0])
    cube([1, 1, 5.41]);
  translate([88, 235, 0])
    cube([1, 1, 5.02]);
  translate([89, 235, 0])
    cube([1, 1, 4.82]);
  translate([90, 235, 0])
    cube([1, 1, 4.71]);
  translate([91, 235, 0])
    cube([1, 1, 4.51]);
  translate([92, 235, 0])
    cube([1, 1, 4.31]);
  translate([93, 235, 0])
    cube([1, 1, 4.27]);
  translate([94, 235, 0])
    cube([1, 1, 4.12]);
  translate([95, 235, 0])
    cube([1, 1, 4.00]);
  translate([96, 235, 0])
    cube([1, 1, 3.88]);
  translate([97, 235, 0])
    cube([1, 1, 3.88]);
  translate([98, 235, 0])
    cube([1, 1, 3.84]);
  translate([99, 235, 0])
    cube([1, 1, 3.80]);
  translate([100, 235, 0])
    cube([1, 1, 3.69]);
  translate([101, 235, 0])
    cube([1, 1, 3.65]);
  translate([102, 235, 0])
    cube([1, 1, 3.65]);
  translate([103, 235, 0])
    cube([1, 1, 3.65]);
  translate([104, 235, 0])
    cube([1, 1, 3.57]);
  translate([105, 235, 0])
    cube([1, 1, 3.57]);
  translate([106, 235, 0])
    cube([1, 1, 3.57]);
  translate([107, 235, 0])
    cube([1, 1, 3.61]);
  translate([108, 235, 0])
    cube([1, 1, 3.80]);
  translate([109, 235, 0])
    cube([1, 1, 2.16]);
  translate([110, 235, 0])
    cube([1, 1, 2.04]);
  translate([111, 235, 0])
    cube([1, 1, 2.08]);
  translate([112, 235, 0])
    cube([1, 1, 2.04]);
  translate([113, 235, 0])
    cube([1, 1, 2.08]);
  translate([114, 235, 0])
    cube([1, 1, 2.08]);
  translate([115, 235, 0])
    cube([1, 1, 2.24]);
  translate([116, 235, 0])
    cube([1, 1, 1.88]);
  translate([117, 235, 0])
    cube([1, 1, 6.75]);
  translate([118, 235, 0])
    cube([1, 1, 6.47]);
  translate([119, 235, 0])
    cube([1, 1, 5.02]);
  translate([120, 235, 0])
    cube([1, 1, 3.88]);
  translate([121, 235, 0])
    cube([1, 1, 3.02]);
  translate([122, 235, 0])
    cube([1, 1, 3.22]);
  translate([123, 235, 0])
    cube([1, 1, 3.18]);
  translate([124, 235, 0])
    cube([1, 1, 3.06]);
  translate([125, 235, 0])
    cube([1, 1, 3.06]);
  translate([126, 235, 0])
    cube([1, 1, 2.98]);
  translate([127, 235, 0])
    cube([1, 1, 2.90]);
  translate([128, 235, 0])
    cube([1, 1, 2.90]);
  translate([129, 235, 0])
    cube([1, 1, 2.90]);
  translate([130, 235, 0])
    cube([1, 1, 2.86]);
  translate([131, 235, 0])
    cube([1, 1, 2.82]);
  translate([132, 235, 0])
    cube([1, 1, 2.78]);
  translate([133, 235, 0])
    cube([1, 1, 2.78]);
  translate([134, 235, 0])
    cube([1, 1, 2.35]);
  translate([135, 235, 0])
    cube([1, 1, 1.02]);
  translate([136, 235, 0])
    cube([1, 1, 0.67]);
  translate([137, 235, 0])
    cube([1, 1, 0.78]);
  translate([138, 235, 0])
    cube([1, 1, 0.94]);
  translate([139, 235, 0])
    cube([1, 1, 0.94]);
  translate([140, 235, 0])
    cube([1, 1, 1.18]);
  translate([141, 235, 0])
    cube([1, 1, 1.45]);
  translate([142, 235, 0])
    cube([1, 1, 1.65]);
  translate([143, 235, 0])
    cube([1, 1, 1.73]);
  translate([144, 235, 0])
    cube([1, 1, 2.94]);
  translate([145, 235, 0])
    cube([1, 1, 2.27]);
  translate([146, 235, 0])
    cube([1, 1, 4.75]);
  translate([147, 235, 0])
    cube([1, 1, 4.63]);
  translate([148, 235, 0])
    cube([1, 1, 4.12]);
  translate([149, 235, 0])
    cube([1, 1, 4.31]);
  translate([150, 235, 0])
    cube([1, 1, 1.88]);
  translate([151, 235, 0])
    cube([1, 1, 5.53]);
  translate([152, 235, 0])
    cube([1, 1, 4.63]);
  translate([153, 235, 0])
    cube([1, 1, 1.96]);
  translate([154, 235, 0])
    cube([1, 1, 1.49]);
  translate([155, 235, 0])
    cube([1, 1, 3.10]);
  translate([156, 235, 0])
    cube([1, 1, 3.76]);
  translate([157, 235, 0])
    cube([1, 1, 2.98]);
  translate([158, 235, 0])
    cube([1, 1, 2.27]);
  translate([159, 235, 0])
    cube([1, 1, 1.84]);
  translate([160, 235, 0])
    cube([1, 1, 1.76]);
  translate([161, 235, 0])
    cube([1, 1, 2.12]);
  translate([162, 235, 0])
    cube([1, 1, 1.76]);
  translate([163, 235, 0])
    cube([1, 1, 3.65]);
  translate([164, 235, 0])
    cube([1, 1, 2.98]);
  translate([165, 235, 0])
    cube([1, 1, 1.49]);
  translate([166, 235, 0])
    cube([1, 1, 0.94]);
  translate([167, 235, 0])
    cube([1, 1, 0.51]);
  translate([168, 235, 0])
    cube([1, 1, 0.86]);
  translate([169, 235, 0])
    cube([1, 1, 1.14]);
  translate([170, 235, 0])
    cube([1, 1, 1.33]);
  translate([171, 235, 0])
    cube([1, 1, 1.53]);
  translate([172, 235, 0])
    cube([1, 1, 1.02]);
  translate([173, 235, 0])
    cube([1, 1, 0.94]);
  translate([174, 235, 0])
    cube([1, 1, 2.75]);
  translate([175, 235, 0])
    cube([1, 1, 2.75]);
  translate([176, 235, 0])
    cube([1, 1, 1.45]);
  translate([177, 235, 0])
    cube([1, 1, 1.96]);
  translate([178, 235, 0])
    cube([1, 1, 0.98]);
  translate([179, 235, 0])
    cube([1, 1, 2.04]);
  translate([180, 235, 0])
    cube([1, 1, 2.04]);
  translate([181, 235, 0])
    cube([1, 1, 2.04]);
  translate([182, 235, 0])
    cube([1, 1, 2.08]);
  translate([183, 235, 0])
    cube([1, 1, 2.08]);
  translate([184, 235, 0])
    cube([1, 1, 2.08]);
  translate([185, 235, 0])
    cube([1, 1, 2.08]);
  translate([186, 235, 0])
    cube([1, 1, 2.08]);
  translate([187, 235, 0])
    cube([1, 1, 2.08]);
  translate([188, 235, 0])
    cube([1, 1, 2.08]);
  translate([189, 235, 0])
    cube([1, 1, 2.08]);
  translate([190, 235, 0])
    cube([1, 1, 2.08]);
  translate([191, 235, 0])
    cube([1, 1, 2.08]);
  translate([192, 235, 0])
    cube([1, 1, 2.08]);
  translate([193, 235, 0])
    cube([1, 1, 2.08]);
  translate([194, 235, 0])
    cube([1, 1, 2.04]);
  translate([195, 235, 0])
    cube([1, 1, 2.08]);
  translate([196, 235, 0])
    cube([1, 1, 2.08]);
  translate([197, 235, 0])
    cube([1, 1, 2.08]);
  translate([198, 235, 0])
    cube([1, 1, 2.08]);
  translate([199, 235, 0])
    cube([1, 1, 2.08]);
  translate([200, 235, 0])
    cube([1, 1, 2.08]);
  translate([201, 235, 0])
    cube([1, 1, 2.08]);
  translate([202, 235, 0])
    cube([1, 1, 2.08]);
  translate([203, 235, 0])
    cube([1, 1, 2.08]);
  translate([204, 235, 0])
    cube([1, 1, 2.08]);
  translate([205, 235, 0])
    cube([1, 1, 2.08]);
  translate([206, 235, 0])
    cube([1, 1, 2.08]);
  translate([207, 235, 0])
    cube([1, 1, 2.08]);
  translate([208, 235, 0])
    cube([1, 1, 2.08]);
  translate([209, 235, 0])
    cube([1, 1, 2.08]);
  translate([210, 235, 0])
    cube([1, 1, 2.08]);
  translate([211, 235, 0])
    cube([1, 1, 2.08]);
  translate([212, 235, 0])
    cube([1, 1, 2.04]);
  translate([213, 235, 0])
    cube([1, 1, 2.08]);
  translate([214, 235, 0])
    cube([1, 1, 2.04]);
  translate([215, 235, 0])
    cube([1, 1, 2.04]);
  translate([216, 235, 0])
    cube([1, 1, 2.04]);
  translate([217, 235, 0])
    cube([1, 1, 2.08]);
  translate([218, 235, 0])
    cube([1, 1, 2.08]);
  translate([219, 235, 0])
    cube([1, 1, 2.08]);
  translate([220, 235, 0])
    cube([1, 1, 2.04]);
  translate([221, 235, 0])
    cube([1, 1, 2.04]);
  translate([222, 235, 0])
    cube([1, 1, 2.04]);
  translate([223, 235, 0])
    cube([1, 1, 2.04]);
  translate([224, 235, 0])
    cube([1, 1, 2.08]);
  translate([225, 235, 0])
    cube([1, 1, 2.04]);
  translate([226, 235, 0])
    cube([1, 1, 2.04]);
  translate([227, 235, 0])
    cube([1, 1, 2.04]);
  translate([228, 235, 0])
    cube([1, 1, 2.04]);
  translate([229, 235, 0])
    cube([1, 1, 2.04]);
  translate([230, 235, 0])
    cube([1, 1, 2.04]);
  translate([231, 235, 0])
    cube([1, 1, 2.04]);
  translate([232, 235, 0])
    cube([1, 1, 2.04]);
  translate([233, 235, 0])
    cube([1, 1, 2.04]);
  translate([234, 235, 0])
    cube([1, 1, 2.04]);
  translate([235, 235, 0])
    cube([1, 1, 2.04]);
  translate([236, 235, 0])
    cube([1, 1, 2.04]);
  translate([237, 235, 0])
    cube([1, 1, 2.04]);
  translate([238, 235, 0])
    cube([1, 1, 2.04]);
  translate([239, 235, 0])
    cube([1, 1, 2.04]);
  translate([240, 235, 0])
    cube([1, 1, 2.04]);
  translate([241, 235, 0])
    cube([1, 1, 2.04]);
  translate([242, 235, 0])
    cube([1, 1, 2.04]);
  translate([243, 235, 0])
    cube([1, 1, 2.04]);
  translate([244, 235, 0])
    cube([1, 1, 2.04]);
  translate([245, 235, 0])
    cube([1, 1, 2.04]);
  translate([246, 235, 0])
    cube([1, 1, 2.04]);
  translate([0, 236, 0])
    cube([1, 1, 2.31]);
  translate([1, 236, 0])
    cube([1, 1, 2.27]);
  translate([2, 236, 0])
    cube([1, 1, 2.27]);
  translate([3, 236, 0])
    cube([1, 1, 2.27]);
  translate([4, 236, 0])
    cube([1, 1, 2.27]);
  translate([5, 236, 0])
    cube([1, 1, 2.27]);
  translate([6, 236, 0])
    cube([1, 1, 2.27]);
  translate([7, 236, 0])
    cube([1, 1, 2.27]);
  translate([8, 236, 0])
    cube([1, 1, 2.27]);
  translate([9, 236, 0])
    cube([1, 1, 2.27]);
  translate([10, 236, 0])
    cube([1, 1, 2.27]);
  translate([11, 236, 0])
    cube([1, 1, 2.27]);
  translate([12, 236, 0])
    cube([1, 1, 2.24]);
  translate([13, 236, 0])
    cube([1, 1, 2.27]);
  translate([14, 236, 0])
    cube([1, 1, 2.27]);
  translate([15, 236, 0])
    cube([1, 1, 2.27]);
  translate([16, 236, 0])
    cube([1, 1, 2.27]);
  translate([17, 236, 0])
    cube([1, 1, 2.27]);
  translate([18, 236, 0])
    cube([1, 1, 2.27]);
  translate([19, 236, 0])
    cube([1, 1, 2.27]);
  translate([20, 236, 0])
    cube([1, 1, 2.27]);
  translate([21, 236, 0])
    cube([1, 1, 2.27]);
  translate([22, 236, 0])
    cube([1, 1, 2.24]);
  translate([23, 236, 0])
    cube([1, 1, 2.27]);
  translate([24, 236, 0])
    cube([1, 1, 2.27]);
  translate([25, 236, 0])
    cube([1, 1, 2.27]);
  translate([26, 236, 0])
    cube([1, 1, 2.27]);
  translate([27, 236, 0])
    cube([1, 1, 2.27]);
  translate([28, 236, 0])
    cube([1, 1, 2.27]);
  translate([29, 236, 0])
    cube([1, 1, 2.27]);
  translate([30, 236, 0])
    cube([1, 1, 2.27]);
  translate([31, 236, 0])
    cube([1, 1, 2.27]);
  translate([32, 236, 0])
    cube([1, 1, 2.27]);
  translate([33, 236, 0])
    cube([1, 1, 2.24]);
  translate([34, 236, 0])
    cube([1, 1, 2.24]);
  translate([35, 236, 0])
    cube([1, 1, 2.24]);
  translate([36, 236, 0])
    cube([1, 1, 2.24]);
  translate([37, 236, 0])
    cube([1, 1, 2.24]);
  translate([38, 236, 0])
    cube([1, 1, 2.24]);
  translate([39, 236, 0])
    cube([1, 1, 2.24]);
  translate([40, 236, 0])
    cube([1, 1, 2.20]);
  translate([41, 236, 0])
    cube([1, 1, 2.24]);
  translate([42, 236, 0])
    cube([1, 1, 2.24]);
  translate([43, 236, 0])
    cube([1, 1, 2.20]);
  translate([44, 236, 0])
    cube([1, 1, 2.27]);
  translate([45, 236, 0])
    cube([1, 1, 2.20]);
  translate([46, 236, 0])
    cube([1, 1, 6.47]);
  translate([47, 236, 0])
    cube([1, 1, 8.86]);
  translate([48, 236, 0])
    cube([1, 1, 9.29]);
  translate([49, 236, 0])
    cube([1, 1, 6.55]);
  translate([50, 236, 0])
    cube([1, 1, 1.10]);
  translate([51, 236, 0])
    cube([1, 1, 1.41]);
  translate([52, 236, 0])
    cube([1, 1, 1.53]);
  translate([53, 236, 0])
    cube([1, 1, 1.92]);
  translate([54, 236, 0])
    cube([1, 1, 3.22]);
  translate([55, 236, 0])
    cube([1, 1, 5.84]);
  translate([56, 236, 0])
    cube([1, 1, 5.41]);
  translate([57, 236, 0])
    cube([1, 1, 2.31]);
  translate([58, 236, 0])
    cube([1, 1, 1.69]);
  translate([59, 236, 0])
    cube([1, 1, 1.37]);
  translate([60, 236, 0])
    cube([1, 1, 1.14]);
  translate([61, 236, 0])
    cube([1, 1, 0.16]);
  translate([62, 236, 0])
    cube([1, 1, 1.10]);
  translate([63, 236, 0])
    cube([1, 1, 1.06]);
  translate([64, 236, 0])
    cube([1, 1, 1.25]);
  translate([65, 236, 0])
    cube([1, 1, 0.71]);
  translate([66, 236, 0])
    cube([1, 1, 0.94]);
  translate([67, 236, 0])
    cube([1, 1, 0.59]);
  translate([68, 236, 0])
    cube([1, 1, 0.51]);
  translate([69, 236, 0])
    cube([1, 1, 1.25]);
  translate([70, 236, 0])
    cube([1, 1, 1.18]);
  translate([71, 236, 0])
    cube([1, 1, 1.10]);
  translate([72, 236, 0])
    cube([1, 1, 1.18]);
  translate([73, 236, 0])
    cube([1, 1, 1.29]);
  translate([74, 236, 0])
    cube([1, 1, 1.25]);
  translate([75, 236, 0])
    cube([1, 1, 1.45]);
  translate([76, 236, 0])
    cube([1, 1, 1.41]);
  translate([77, 236, 0])
    cube([1, 1, 4.31]);
  translate([78, 236, 0])
    cube([1, 1, 3.92]);
  translate([79, 236, 0])
    cube([1, 1, 4.20]);
  translate([80, 236, 0])
    cube([1, 1, 4.16]);
  translate([81, 236, 0])
    cube([1, 1, 4.16]);
  translate([82, 236, 0])
    cube([1, 1, 4.35]);
  translate([83, 236, 0])
    cube([1, 1, 4.55]);
  translate([84, 236, 0])
    cube([1, 1, 4.98]);
  translate([85, 236, 0])
    cube([1, 1, 5.22]);
  translate([86, 236, 0])
    cube([1, 1, 5.29]);
  translate([87, 236, 0])
    cube([1, 1, 5.22]);
  translate([88, 236, 0])
    cube([1, 1, 5.02]);
  translate([89, 236, 0])
    cube([1, 1, 4.78]);
  translate([90, 236, 0])
    cube([1, 1, 4.63]);
  translate([91, 236, 0])
    cube([1, 1, 4.47]);
  translate([92, 236, 0])
    cube([1, 1, 4.27]);
  translate([93, 236, 0])
    cube([1, 1, 4.16]);
  translate([94, 236, 0])
    cube([1, 1, 3.96]);
  translate([95, 236, 0])
    cube([1, 1, 3.92]);
  translate([96, 236, 0])
    cube([1, 1, 3.88]);
  translate([97, 236, 0])
    cube([1, 1, 3.80]);
  translate([98, 236, 0])
    cube([1, 1, 3.73]);
  translate([99, 236, 0])
    cube([1, 1, 3.73]);
  translate([100, 236, 0])
    cube([1, 1, 3.69]);
  translate([101, 236, 0])
    cube([1, 1, 3.65]);
  translate([102, 236, 0])
    cube([1, 1, 3.53]);
  translate([103, 236, 0])
    cube([1, 1, 3.49]);
  translate([104, 236, 0])
    cube([1, 1, 3.53]);
  translate([105, 236, 0])
    cube([1, 1, 3.53]);
  translate([106, 236, 0])
    cube([1, 1, 3.65]);
  translate([107, 236, 0])
    cube([1, 1, 3.45]);
  translate([108, 236, 0])
    cube([1, 1, 2.16]);
  translate([109, 236, 0])
    cube([1, 1, 2.08]);
  translate([110, 236, 0])
    cube([1, 1, 2.08]);
  translate([111, 236, 0])
    cube([1, 1, 2.08]);
  translate([112, 236, 0])
    cube([1, 1, 2.08]);
  translate([113, 236, 0])
    cube([1, 1, 2.08]);
  translate([114, 236, 0])
    cube([1, 1, 2.08]);
  translate([115, 236, 0])
    cube([1, 1, 2.08]);
  translate([116, 236, 0])
    cube([1, 1, 1.96]);
  translate([117, 236, 0])
    cube([1, 1, 6.82]);
  translate([118, 236, 0])
    cube([1, 1, 6.75]);
  translate([119, 236, 0])
    cube([1, 1, 5.73]);
  translate([120, 236, 0])
    cube([1, 1, 4.20]);
  translate([121, 236, 0])
    cube([1, 1, 3.14]);
  translate([122, 236, 0])
    cube([1, 1, 3.14]);
  translate([123, 236, 0])
    cube([1, 1, 3.18]);
  translate([124, 236, 0])
    cube([1, 1, 3.10]);
  translate([125, 236, 0])
    cube([1, 1, 3.10]);
  translate([126, 236, 0])
    cube([1, 1, 2.94]);
  translate([127, 236, 0])
    cube([1, 1, 2.90]);
  translate([128, 236, 0])
    cube([1, 1, 2.86]);
  translate([129, 236, 0])
    cube([1, 1, 2.82]);
  translate([130, 236, 0])
    cube([1, 1, 2.55]);
  translate([131, 236, 0])
    cube([1, 1, 2.55]);
  translate([132, 236, 0])
    cube([1, 1, 1.33]);
  translate([133, 236, 0])
    cube([1, 1, 0.94]);
  translate([134, 236, 0])
    cube([1, 1, 0.98]);
  translate([135, 236, 0])
    cube([1, 1, 0.82]);
  translate([136, 236, 0])
    cube([1, 1, 1.02]);
  translate([137, 236, 0])
    cube([1, 1, 4.51]);
  translate([138, 236, 0])
    cube([1, 1, 1.22]);
  translate([139, 236, 0])
    cube([1, 1, 0.39]);
  translate([140, 236, 0])
    cube([1, 1, 1.29]);
  translate([141, 236, 0])
    cube([1, 1, 1.92]);
  translate([142, 236, 0])
    cube([1, 1, 2.08]);
  translate([143, 236, 0])
    cube([1, 1, 1.84]);
  translate([144, 236, 0])
    cube([1, 1, 2.51]);
  translate([145, 236, 0])
    cube([1, 1, 1.96]);
  translate([146, 236, 0])
    cube([1, 1, 2.00]);
  translate([147, 236, 0])
    cube([1, 1, 2.12]);
  translate([148, 236, 0])
    cube([1, 1, 3.80]);
  translate([149, 236, 0])
    cube([1, 1, 4.27]);
  translate([150, 236, 0])
    cube([1, 1, 1.33]);
  translate([151, 236, 0])
    cube([1, 1, 5.06]);
  translate([152, 236, 0])
    cube([1, 1, 4.86]);
  translate([153, 236, 0])
    cube([1, 1, 1.88]);
  translate([154, 236, 0])
    cube([1, 1, 1.61]);
  translate([155, 236, 0])
    cube([1, 1, 1.18]);
  translate([156, 236, 0])
    cube([1, 1, 4.47]);
  translate([157, 236, 0])
    cube([1, 1, 3.02]);
  translate([158, 236, 0])
    cube([1, 1, 1.84]);
  translate([159, 236, 0])
    cube([1, 1, 1.76]);
  translate([160, 236, 0])
    cube([1, 1, 2.16]);
  translate([161, 236, 0])
    cube([1, 1, 2.35]);
  translate([162, 236, 0])
    cube([1, 1, 1.76]);
  translate([163, 236, 0])
    cube([1, 1, 1.76]);
  translate([164, 236, 0])
    cube([1, 1, 2.47]);
  translate([165, 236, 0])
    cube([1, 1, 1.41]);
  translate([166, 236, 0])
    cube([1, 1, 1.06]);
  translate([167, 236, 0])
    cube([1, 1, 0.43]);
  translate([168, 236, 0])
    cube([1, 1, 0.78]);
  translate([169, 236, 0])
    cube([1, 1, 1.22]);
  translate([170, 236, 0])
    cube([1, 1, 0.94]);
  translate([171, 236, 0])
    cube([1, 1, 1.18]);
  translate([172, 236, 0])
    cube([1, 1, 1.57]);
  translate([173, 236, 0])
    cube([1, 1, 2.00]);
  translate([174, 236, 0])
    cube([1, 1, 5.14]);
  translate([175, 236, 0])
    cube([1, 1, 5.49]);
  translate([176, 236, 0])
    cube([1, 1, 1.61]);
  translate([177, 236, 0])
    cube([1, 1, 1.10]);
  translate([178, 236, 0])
    cube([1, 1, 6.90]);
  translate([179, 236, 0])
    cube([1, 1, 2.00]);
  translate([180, 236, 0])
    cube([1, 1, 2.04]);
  translate([181, 236, 0])
    cube([1, 1, 2.04]);
  translate([182, 236, 0])
    cube([1, 1, 2.08]);
  translate([183, 236, 0])
    cube([1, 1, 2.08]);
  translate([184, 236, 0])
    cube([1, 1, 2.08]);
  translate([185, 236, 0])
    cube([1, 1, 2.08]);
  translate([186, 236, 0])
    cube([1, 1, 2.08]);
  translate([187, 236, 0])
    cube([1, 1, 2.08]);
  translate([188, 236, 0])
    cube([1, 1, 2.08]);
  translate([189, 236, 0])
    cube([1, 1, 2.08]);
  translate([190, 236, 0])
    cube([1, 1, 2.08]);
  translate([191, 236, 0])
    cube([1, 1, 2.08]);
  translate([192, 236, 0])
    cube([1, 1, 2.08]);
  translate([193, 236, 0])
    cube([1, 1, 2.08]);
  translate([194, 236, 0])
    cube([1, 1, 2.08]);
  translate([195, 236, 0])
    cube([1, 1, 2.12]);
  translate([196, 236, 0])
    cube([1, 1, 2.08]);
  translate([197, 236, 0])
    cube([1, 1, 2.08]);
  translate([198, 236, 0])
    cube([1, 1, 2.08]);
  translate([199, 236, 0])
    cube([1, 1, 2.08]);
  translate([200, 236, 0])
    cube([1, 1, 2.08]);
  translate([201, 236, 0])
    cube([1, 1, 2.08]);
  translate([202, 236, 0])
    cube([1, 1, 2.08]);
  translate([203, 236, 0])
    cube([1, 1, 2.08]);
  translate([204, 236, 0])
    cube([1, 1, 2.08]);
  translate([205, 236, 0])
    cube([1, 1, 2.08]);
  translate([206, 236, 0])
    cube([1, 1, 2.08]);
  translate([207, 236, 0])
    cube([1, 1, 2.08]);
  translate([208, 236, 0])
    cube([1, 1, 2.08]);
  translate([209, 236, 0])
    cube([1, 1, 2.08]);
  translate([210, 236, 0])
    cube([1, 1, 2.08]);
  translate([211, 236, 0])
    cube([1, 1, 2.08]);
  translate([212, 236, 0])
    cube([1, 1, 2.08]);
  translate([213, 236, 0])
    cube([1, 1, 2.08]);
  translate([214, 236, 0])
    cube([1, 1, 2.08]);
  translate([215, 236, 0])
    cube([1, 1, 2.08]);
  translate([216, 236, 0])
    cube([1, 1, 2.04]);
  translate([217, 236, 0])
    cube([1, 1, 2.08]);
  translate([218, 236, 0])
    cube([1, 1, 2.08]);
  translate([219, 236, 0])
    cube([1, 1, 2.12]);
  translate([220, 236, 0])
    cube([1, 1, 2.04]);
  translate([221, 236, 0])
    cube([1, 1, 2.04]);
  translate([222, 236, 0])
    cube([1, 1, 2.08]);
  translate([223, 236, 0])
    cube([1, 1, 2.08]);
  translate([224, 236, 0])
    cube([1, 1, 2.08]);
  translate([225, 236, 0])
    cube([1, 1, 2.00]);
  translate([226, 236, 0])
    cube([1, 1, 2.08]);
  translate([227, 236, 0])
    cube([1, 1, 2.04]);
  translate([228, 236, 0])
    cube([1, 1, 2.04]);
  translate([229, 236, 0])
    cube([1, 1, 2.04]);
  translate([230, 236, 0])
    cube([1, 1, 2.04]);
  translate([231, 236, 0])
    cube([1, 1, 2.04]);
  translate([232, 236, 0])
    cube([1, 1, 2.04]);
  translate([233, 236, 0])
    cube([1, 1, 2.04]);
  translate([234, 236, 0])
    cube([1, 1, 2.04]);
  translate([235, 236, 0])
    cube([1, 1, 2.04]);
  translate([236, 236, 0])
    cube([1, 1, 2.04]);
  translate([237, 236, 0])
    cube([1, 1, 2.04]);
  translate([238, 236, 0])
    cube([1, 1, 2.04]);
  translate([239, 236, 0])
    cube([1, 1, 2.08]);
  translate([240, 236, 0])
    cube([1, 1, 2.04]);
  translate([241, 236, 0])
    cube([1, 1, 2.04]);
  translate([242, 236, 0])
    cube([1, 1, 2.04]);
  translate([243, 236, 0])
    cube([1, 1, 2.04]);
  translate([244, 236, 0])
    cube([1, 1, 2.04]);
  translate([245, 236, 0])
    cube([1, 1, 2.04]);
  translate([246, 236, 0])
    cube([1, 1, 2.04]);
  translate([0, 237, 0])
    cube([1, 1, 2.27]);
  translate([1, 237, 0])
    cube([1, 1, 2.27]);
  translate([2, 237, 0])
    cube([1, 1, 2.27]);
  translate([3, 237, 0])
    cube([1, 1, 2.27]);
  translate([4, 237, 0])
    cube([1, 1, 2.27]);
  translate([5, 237, 0])
    cube([1, 1, 2.31]);
  translate([6, 237, 0])
    cube([1, 1, 2.27]);
  translate([7, 237, 0])
    cube([1, 1, 2.27]);
  translate([8, 237, 0])
    cube([1, 1, 2.24]);
  translate([9, 237, 0])
    cube([1, 1, 2.24]);
  translate([10, 237, 0])
    cube([1, 1, 2.24]);
  translate([11, 237, 0])
    cube([1, 1, 2.24]);
  translate([12, 237, 0])
    cube([1, 1, 2.27]);
  translate([13, 237, 0])
    cube([1, 1, 2.27]);
  translate([14, 237, 0])
    cube([1, 1, 2.24]);
  translate([15, 237, 0])
    cube([1, 1, 2.24]);
  translate([16, 237, 0])
    cube([1, 1, 2.24]);
  translate([17, 237, 0])
    cube([1, 1, 2.24]);
  translate([18, 237, 0])
    cube([1, 1, 2.31]);
  translate([19, 237, 0])
    cube([1, 1, 2.27]);
  translate([20, 237, 0])
    cube([1, 1, 2.24]);
  translate([21, 237, 0])
    cube([1, 1, 2.24]);
  translate([22, 237, 0])
    cube([1, 1, 2.24]);
  translate([23, 237, 0])
    cube([1, 1, 2.27]);
  translate([24, 237, 0])
    cube([1, 1, 2.27]);
  translate([25, 237, 0])
    cube([1, 1, 2.27]);
  translate([26, 237, 0])
    cube([1, 1, 2.27]);
  translate([27, 237, 0])
    cube([1, 1, 2.27]);
  translate([28, 237, 0])
    cube([1, 1, 2.27]);
  translate([29, 237, 0])
    cube([1, 1, 2.31]);
  translate([30, 237, 0])
    cube([1, 1, 2.27]);
  translate([31, 237, 0])
    cube([1, 1, 2.27]);
  translate([32, 237, 0])
    cube([1, 1, 2.27]);
  translate([33, 237, 0])
    cube([1, 1, 2.27]);
  translate([34, 237, 0])
    cube([1, 1, 2.27]);
  translate([35, 237, 0])
    cube([1, 1, 2.24]);
  translate([36, 237, 0])
    cube([1, 1, 2.24]);
  translate([37, 237, 0])
    cube([1, 1, 2.24]);
  translate([38, 237, 0])
    cube([1, 1, 2.24]);
  translate([39, 237, 0])
    cube([1, 1, 2.24]);
  translate([40, 237, 0])
    cube([1, 1, 2.27]);
  translate([41, 237, 0])
    cube([1, 1, 2.24]);
  translate([42, 237, 0])
    cube([1, 1, 2.24]);
  translate([43, 237, 0])
    cube([1, 1, 2.24]);
  translate([44, 237, 0])
    cube([1, 1, 2.20]);
  translate([45, 237, 0])
    cube([1, 1, 2.51]);
  translate([46, 237, 0])
    cube([1, 1, 7.06]);
  translate([47, 237, 0])
    cube([1, 1, 1.57]);
  translate([48, 237, 0])
    cube([1, 1, 1.69]);
  translate([49, 237, 0])
    cube([1, 1, 1.96]);
  translate([50, 237, 0])
    cube([1, 1, 0.51]);
  translate([51, 237, 0])
    cube([1, 1, 0.67]);
  translate([52, 237, 0])
    cube([1, 1, 0.98]);
  translate([53, 237, 0])
    cube([1, 1, 1.57]);
  translate([54, 237, 0])
    cube([1, 1, 3.57]);
  translate([55, 237, 0])
    cube([1, 1, 5.65]);
  translate([56, 237, 0])
    cube([1, 1, 4.24]);
  translate([57, 237, 0])
    cube([1, 1, 1.96]);
  translate([58, 237, 0])
    cube([1, 1, 1.76]);
  translate([59, 237, 0])
    cube([1, 1, 1.25]);
  translate([60, 237, 0])
    cube([1, 1, 1.06]);
  translate([61, 237, 0])
    cube([1, 1, 0.24]);
  translate([62, 237, 0])
    cube([1, 1, 1.29]);
  translate([63, 237, 0])
    cube([1, 1, 1.22]);
  translate([64, 237, 0])
    cube([1, 1, 1.18]);
  translate([65, 237, 0])
    cube([1, 1, 1.22]);
  translate([66, 237, 0])
    cube([1, 1, 1.14]);
  translate([67, 237, 0])
    cube([1, 1, 1.14]);
  translate([68, 237, 0])
    cube([1, 1, 0.98]);
  translate([69, 237, 0])
    cube([1, 1, 1.37]);
  translate([70, 237, 0])
    cube([1, 1, 1.02]);
  translate([71, 237, 0])
    cube([1, 1, 0.94]);
  translate([72, 237, 0])
    cube([1, 1, 0.98]);
  translate([73, 237, 0])
    cube([1, 1, 2.98]);
  translate([74, 237, 0])
    cube([1, 1, 1.18]);
  translate([75, 237, 0])
    cube([1, 1, 1.33]);
  translate([76, 237, 0])
    cube([1, 1, 1.65]);
  translate([77, 237, 0])
    cube([1, 1, 0.20]);
  translate([78, 237, 0])
    cube([1, 1, 2.12]);
  translate([79, 237, 0])
    cube([1, 1, 4.00]);
  translate([80, 237, 0])
    cube([1, 1, 4.20]);
  translate([81, 237, 0])
    cube([1, 1, 4.16]);
  translate([82, 237, 0])
    cube([1, 1, 4.27]);
  translate([83, 237, 0])
    cube([1, 1, 4.71]);
  translate([84, 237, 0])
    cube([1, 1, 4.82]);
  translate([85, 237, 0])
    cube([1, 1, 5.06]);
  translate([86, 237, 0])
    cube([1, 1, 5.10]);
  translate([87, 237, 0])
    cube([1, 1, 5.02]);
  translate([88, 237, 0])
    cube([1, 1, 4.90]);
  translate([89, 237, 0])
    cube([1, 1, 4.59]);
  translate([90, 237, 0])
    cube([1, 1, 4.51]);
  translate([91, 237, 0])
    cube([1, 1, 4.39]);
  translate([92, 237, 0])
    cube([1, 1, 4.20]);
  translate([93, 237, 0])
    cube([1, 1, 4.08]);
  translate([94, 237, 0])
    cube([1, 1, 3.92]);
  translate([95, 237, 0])
    cube([1, 1, 3.84]);
  translate([96, 237, 0])
    cube([1, 1, 3.84]);
  translate([97, 237, 0])
    cube([1, 1, 3.73]);
  translate([98, 237, 0])
    cube([1, 1, 3.73]);
  translate([99, 237, 0])
    cube([1, 1, 3.65]);
  translate([100, 237, 0])
    cube([1, 1, 3.61]);
  translate([101, 237, 0])
    cube([1, 1, 3.53]);
  translate([102, 237, 0])
    cube([1, 1, 3.45]);
  translate([103, 237, 0])
    cube([1, 1, 3.41]);
  translate([104, 237, 0])
    cube([1, 1, 3.49]);
  translate([105, 237, 0])
    cube([1, 1, 3.53]);
  translate([106, 237, 0])
    cube([1, 1, 3.61]);
  translate([107, 237, 0])
    cube([1, 1, 3.65]);
  translate([108, 237, 0])
    cube([1, 1, 2.04]);
  translate([109, 237, 0])
    cube([1, 1, 2.08]);
  translate([110, 237, 0])
    cube([1, 1, 2.08]);
  translate([111, 237, 0])
    cube([1, 1, 2.08]);
  translate([112, 237, 0])
    cube([1, 1, 2.04]);
  translate([113, 237, 0])
    cube([1, 1, 2.08]);
  translate([114, 237, 0])
    cube([1, 1, 2.08]);
  translate([115, 237, 0])
    cube([1, 1, 2.08]);
  translate([116, 237, 0])
    cube([1, 1, 1.76]);
  translate([117, 237, 0])
    cube([1, 1, 6.98]);
  translate([118, 237, 0])
    cube([1, 1, 6.94]);
  translate([119, 237, 0])
    cube([1, 1, 6.20]);
  translate([120, 237, 0])
    cube([1, 1, 4.47]);
  translate([121, 237, 0])
    cube([1, 1, 3.29]);
  translate([122, 237, 0])
    cube([1, 1, 3.22]);
  translate([123, 237, 0])
    cube([1, 1, 3.18]);
  translate([124, 237, 0])
    cube([1, 1, 3.10]);
  translate([125, 237, 0])
    cube([1, 1, 2.98]);
  translate([126, 237, 0])
    cube([1, 1, 2.82]);
  translate([127, 237, 0])
    cube([1, 1, 2.78]);
  translate([128, 237, 0])
    cube([1, 1, 2.59]);
  translate([129, 237, 0])
    cube([1, 1, 2.24]);
  translate([130, 237, 0])
    cube([1, 1, 1.02]);
  translate([131, 237, 0])
    cube([1, 1, 0.82]);
  translate([132, 237, 0])
    cube([1, 1, 1.02]);
  translate([133, 237, 0])
    cube([1, 1, 0.94]);
  translate([134, 237, 0])
    cube([1, 1, 0.98]);
  translate([135, 237, 0])
    cube([1, 1, 1.22]);
  translate([136, 237, 0])
    cube([1, 1, 1.29]);
  translate([137, 237, 0])
    cube([1, 1, 1.02]);
  translate([138, 237, 0])
    cube([1, 1, 1.18]);
  translate([139, 237, 0])
    cube([1, 1, 2.75]);
  translate([140, 237, 0])
    cube([1, 1, 1.57]);
  translate([141, 237, 0])
    cube([1, 1, 1.49]);
  translate([142, 237, 0])
    cube([1, 1, 1.02]);
  translate([143, 237, 0])
    cube([1, 1, 1.49]);
  translate([144, 237, 0])
    cube([1, 1, 1.84]);
  translate([145, 237, 0])
    cube([1, 1, 2.90]);
  translate([146, 237, 0])
    cube([1, 1, 3.53]);
  translate([147, 237, 0])
    cube([1, 1, 5.33]);
  translate([148, 237, 0])
    cube([1, 1, 4.78]);
  translate([149, 237, 0])
    cube([1, 1, 4.39]);
  translate([150, 237, 0])
    cube([1, 1, 1.96]);
  translate([151, 237, 0])
    cube([1, 1, 2.67]);
  translate([152, 237, 0])
    cube([1, 1, 5.02]);
  translate([153, 237, 0])
    cube([1, 1, 1.29]);
  translate([154, 237, 0])
    cube([1, 1, 1.49]);
  translate([155, 237, 0])
    cube([1, 1, 1.37]);
  translate([156, 237, 0])
    cube([1, 1, 2.59]);
  translate([157, 237, 0])
    cube([1, 1, 1.29]);
  translate([158, 237, 0])
    cube([1, 1, 1.57]);
  translate([159, 237, 0])
    cube([1, 1, 1.06]);
  translate([160, 237, 0])
    cube([1, 1, 1.25]);
  translate([161, 237, 0])
    cube([1, 1, 0.86]);
  translate([162, 237, 0])
    cube([1, 1, 0.35]);
  translate([163, 237, 0])
    cube([1, 1, 1.14]);
  translate([164, 237, 0])
    cube([1, 1, 1.06]);
  translate([165, 237, 0])
    cube([1, 1, 1.25]);
  translate([166, 237, 0])
    cube([1, 1, 1.06]);
  translate([167, 237, 0])
    cube([1, 1, 0.39]);
  translate([168, 237, 0])
    cube([1, 1, 0.59]);
  translate([169, 237, 0])
    cube([1, 1, 0.63]);
  translate([170, 237, 0])
    cube([1, 1, 1.02]);
  translate([171, 237, 0])
    cube([1, 1, 1.29]);
  translate([172, 237, 0])
    cube([1, 1, 1.25]);
  translate([173, 237, 0])
    cube([1, 1, 1.92]);
  translate([174, 237, 0])
    cube([1, 1, 3.02]);
  translate([175, 237, 0])
    cube([1, 1, 3.69]);
  translate([176, 237, 0])
    cube([1, 1, 1.92]);
  translate([177, 237, 0])
    cube([1, 1, 1.49]);
  translate([178, 237, 0])
    cube([1, 1, 8.63]);
  translate([179, 237, 0])
    cube([1, 1, 2.00]);
  translate([180, 237, 0])
    cube([1, 1, 2.04]);
  translate([181, 237, 0])
    cube([1, 1, 2.12]);
  translate([182, 237, 0])
    cube([1, 1, 2.08]);
  translate([183, 237, 0])
    cube([1, 1, 2.12]);
  translate([184, 237, 0])
    cube([1, 1, 2.08]);
  translate([185, 237, 0])
    cube([1, 1, 2.08]);
  translate([186, 237, 0])
    cube([1, 1, 2.08]);
  translate([187, 237, 0])
    cube([1, 1, 2.08]);
  translate([188, 237, 0])
    cube([1, 1, 2.08]);
  translate([189, 237, 0])
    cube([1, 1, 2.08]);
  translate([190, 237, 0])
    cube([1, 1, 2.08]);
  translate([191, 237, 0])
    cube([1, 1, 2.08]);
  translate([192, 237, 0])
    cube([1, 1, 2.08]);
  translate([193, 237, 0])
    cube([1, 1, 2.08]);
  translate([194, 237, 0])
    cube([1, 1, 2.08]);
  translate([195, 237, 0])
    cube([1, 1, 2.08]);
  translate([196, 237, 0])
    cube([1, 1, 2.04]);
  translate([197, 237, 0])
    cube([1, 1, 2.08]);
  translate([198, 237, 0])
    cube([1, 1, 2.08]);
  translate([199, 237, 0])
    cube([1, 1, 2.08]);
  translate([200, 237, 0])
    cube([1, 1, 2.08]);
  translate([201, 237, 0])
    cube([1, 1, 2.08]);
  translate([202, 237, 0])
    cube([1, 1, 2.08]);
  translate([203, 237, 0])
    cube([1, 1, 2.08]);
  translate([204, 237, 0])
    cube([1, 1, 2.08]);
  translate([205, 237, 0])
    cube([1, 1, 2.08]);
  translate([206, 237, 0])
    cube([1, 1, 2.08]);
  translate([207, 237, 0])
    cube([1, 1, 2.08]);
  translate([208, 237, 0])
    cube([1, 1, 2.08]);
  translate([209, 237, 0])
    cube([1, 1, 2.08]);
  translate([210, 237, 0])
    cube([1, 1, 2.08]);
  translate([211, 237, 0])
    cube([1, 1, 2.08]);
  translate([212, 237, 0])
    cube([1, 1, 2.08]);
  translate([213, 237, 0])
    cube([1, 1, 2.08]);
  translate([214, 237, 0])
    cube([1, 1, 2.04]);
  translate([215, 237, 0])
    cube([1, 1, 2.04]);
  translate([216, 237, 0])
    cube([1, 1, 2.08]);
  translate([217, 237, 0])
    cube([1, 1, 2.08]);
  translate([218, 237, 0])
    cube([1, 1, 2.08]);
  translate([219, 237, 0])
    cube([1, 1, 2.08]);
  translate([220, 237, 0])
    cube([1, 1, 2.08]);
  translate([221, 237, 0])
    cube([1, 1, 2.08]);
  translate([222, 237, 0])
    cube([1, 1, 2.08]);
  translate([223, 237, 0])
    cube([1, 1, 2.08]);
  translate([224, 237, 0])
    cube([1, 1, 2.08]);
  translate([225, 237, 0])
    cube([1, 1, 2.08]);
  translate([226, 237, 0])
    cube([1, 1, 2.08]);
  translate([227, 237, 0])
    cube([1, 1, 2.08]);
  translate([228, 237, 0])
    cube([1, 1, 2.04]);
  translate([229, 237, 0])
    cube([1, 1, 2.04]);
  translate([230, 237, 0])
    cube([1, 1, 2.08]);
  translate([231, 237, 0])
    cube([1, 1, 2.12]);
  translate([232, 237, 0])
    cube([1, 1, 2.04]);
  translate([233, 237, 0])
    cube([1, 1, 2.04]);
  translate([234, 237, 0])
    cube([1, 1, 2.04]);
  translate([235, 237, 0])
    cube([1, 1, 2.04]);
  translate([236, 237, 0])
    cube([1, 1, 2.04]);
  translate([237, 237, 0])
    cube([1, 1, 2.04]);
  translate([238, 237, 0])
    cube([1, 1, 2.04]);
  translate([239, 237, 0])
    cube([1, 1, 2.04]);
  translate([240, 237, 0])
    cube([1, 1, 2.08]);
  translate([241, 237, 0])
    cube([1, 1, 2.04]);
  translate([242, 237, 0])
    cube([1, 1, 2.04]);
  translate([243, 237, 0])
    cube([1, 1, 2.04]);
  translate([244, 237, 0])
    cube([1, 1, 2.04]);
  translate([245, 237, 0])
    cube([1, 1, 2.04]);
  translate([246, 237, 0])
    cube([1, 1, 2.04]);
  translate([0, 238, 0])
    cube([1, 1, 2.27]);
  translate([1, 238, 0])
    cube([1, 1, 2.27]);
  translate([2, 238, 0])
    cube([1, 1, 2.27]);
  translate([3, 238, 0])
    cube([1, 1, 2.27]);
  translate([4, 238, 0])
    cube([1, 1, 2.27]);
  translate([5, 238, 0])
    cube([1, 1, 2.31]);
  translate([6, 238, 0])
    cube([1, 1, 2.24]);
  translate([7, 238, 0])
    cube([1, 1, 2.24]);
  translate([8, 238, 0])
    cube([1, 1, 2.27]);
  translate([9, 238, 0])
    cube([1, 1, 2.24]);
  translate([10, 238, 0])
    cube([1, 1, 2.24]);
  translate([11, 238, 0])
    cube([1, 1, 2.27]);
  translate([12, 238, 0])
    cube([1, 1, 2.27]);
  translate([13, 238, 0])
    cube([1, 1, 2.27]);
  translate([14, 238, 0])
    cube([1, 1, 2.27]);
  translate([15, 238, 0])
    cube([1, 1, 2.27]);
  translate([16, 238, 0])
    cube([1, 1, 2.27]);
  translate([17, 238, 0])
    cube([1, 1, 2.24]);
  translate([18, 238, 0])
    cube([1, 1, 2.31]);
  translate([19, 238, 0])
    cube([1, 1, 2.24]);
  translate([20, 238, 0])
    cube([1, 1, 2.27]);
  translate([21, 238, 0])
    cube([1, 1, 2.27]);
  translate([22, 238, 0])
    cube([1, 1, 2.24]);
  translate([23, 238, 0])
    cube([1, 1, 2.27]);
  translate([24, 238, 0])
    cube([1, 1, 2.27]);
  translate([25, 238, 0])
    cube([1, 1, 2.27]);
  translate([26, 238, 0])
    cube([1, 1, 2.27]);
  translate([27, 238, 0])
    cube([1, 1, 2.27]);
  translate([28, 238, 0])
    cube([1, 1, 2.27]);
  translate([29, 238, 0])
    cube([1, 1, 2.31]);
  translate([30, 238, 0])
    cube([1, 1, 2.27]);
  translate([31, 238, 0])
    cube([1, 1, 2.27]);
  translate([32, 238, 0])
    cube([1, 1, 2.27]);
  translate([33, 238, 0])
    cube([1, 1, 2.27]);
  translate([34, 238, 0])
    cube([1, 1, 2.27]);
  translate([35, 238, 0])
    cube([1, 1, 2.24]);
  translate([36, 238, 0])
    cube([1, 1, 2.24]);
  translate([37, 238, 0])
    cube([1, 1, 2.24]);
  translate([38, 238, 0])
    cube([1, 1, 2.24]);
  translate([39, 238, 0])
    cube([1, 1, 2.24]);
  translate([40, 238, 0])
    cube([1, 1, 2.27]);
  translate([41, 238, 0])
    cube([1, 1, 2.24]);
  translate([42, 238, 0])
    cube([1, 1, 2.24]);
  translate([43, 238, 0])
    cube([1, 1, 2.24]);
  translate([44, 238, 0])
    cube([1, 1, 2.31]);
  translate([45, 238, 0])
    cube([1, 1, 2.35]);
  translate([46, 238, 0])
    cube([1, 1, 1.61]);
  translate([47, 238, 0])
    cube([1, 1, 9.10]);
  translate([48, 238, 0])
    cube([1, 1, 9.80]);
  translate([49, 238, 0])
    cube([1, 1, 8.63]);
  translate([50, 238, 0])
    cube([1, 1, 1.41]);
  translate([51, 238, 0])
    cube([1, 1, 1.10]);
  translate([52, 238, 0])
    cube([1, 1, 1.29]);
  translate([53, 238, 0])
    cube([1, 1, 2.16]);
  translate([54, 238, 0])
    cube([1, 1, 3.49]);
  translate([55, 238, 0])
    cube([1, 1, 2.39]);
  translate([56, 238, 0])
    cube([1, 1, 1.02]);
  translate([57, 238, 0])
    cube([1, 1, 1.80]);
  translate([58, 238, 0])
    cube([1, 1, 1.92]);
  translate([59, 238, 0])
    cube([1, 1, 1.14]);
  translate([60, 238, 0])
    cube([1, 1, 0.75]);
  translate([61, 238, 0])
    cube([1, 1, 0.20]);
  translate([62, 238, 0])
    cube([1, 1, 1.29]);
  translate([63, 238, 0])
    cube([1, 1, 1.02]);
  translate([64, 238, 0])
    cube([1, 1, 1.14]);
  translate([65, 238, 0])
    cube([1, 1, 1.22]);
  translate([66, 238, 0])
    cube([1, 1, 1.14]);
  translate([67, 238, 0])
    cube([1, 1, 1.14]);
  translate([68, 238, 0])
    cube([1, 1, 1.10]);
  translate([69, 238, 0])
    cube([1, 1, 2.08]);
  translate([70, 238, 0])
    cube([1, 1, 1.02]);
  translate([71, 238, 0])
    cube([1, 1, 1.02]);
  translate([72, 238, 0])
    cube([1, 1, 1.25]);
  translate([73, 238, 0])
    cube([1, 1, 0.51]);
  translate([74, 238, 0])
    cube([1, 1, 2.98]);
  translate([75, 238, 0])
    cube([1, 1, 0.98]);
  translate([76, 238, 0])
    cube([1, 1, 1.10]);
  translate([77, 238, 0])
    cube([1, 1, 1.29]);
  translate([78, 238, 0])
    cube([1, 1, 1.53]);
  translate([79, 238, 0])
    cube([1, 1, 1.06]);
  translate([80, 238, 0])
    cube([1, 1, 4.00]);
  translate([81, 238, 0])
    cube([1, 1, 4.16]);
  translate([82, 238, 0])
    cube([1, 1, 4.27]);
  translate([83, 238, 0])
    cube([1, 1, 4.59]);
  translate([84, 238, 0])
    cube([1, 1, 4.94]);
  translate([85, 238, 0])
    cube([1, 1, 5.18]);
  translate([86, 238, 0])
    cube([1, 1, 5.02]);
  translate([87, 238, 0])
    cube([1, 1, 4.98]);
  translate([88, 238, 0])
    cube([1, 1, 4.78]);
  translate([89, 238, 0])
    cube([1, 1, 4.63]);
  translate([90, 238, 0])
    cube([1, 1, 4.39]);
  translate([91, 238, 0])
    cube([1, 1, 4.31]);
  translate([92, 238, 0])
    cube([1, 1, 4.16]);
  translate([93, 238, 0])
    cube([1, 1, 3.96]);
  translate([94, 238, 0])
    cube([1, 1, 3.84]);
  translate([95, 238, 0])
    cube([1, 1, 3.80]);
  translate([96, 238, 0])
    cube([1, 1, 3.76]);
  translate([97, 238, 0])
    cube([1, 1, 3.65]);
  translate([98, 238, 0])
    cube([1, 1, 3.69]);
  translate([99, 238, 0])
    cube([1, 1, 3.61]);
  translate([100, 238, 0])
    cube([1, 1, 3.57]);
  translate([101, 238, 0])
    cube([1, 1, 3.49]);
  translate([102, 238, 0])
    cube([1, 1, 3.41]);
  translate([103, 238, 0])
    cube([1, 1, 3.49]);
  translate([104, 238, 0])
    cube([1, 1, 3.49]);
  translate([105, 238, 0])
    cube([1, 1, 3.53]);
  translate([106, 238, 0])
    cube([1, 1, 3.61]);
  translate([107, 238, 0])
    cube([1, 1, 3.84]);
  translate([108, 238, 0])
    cube([1, 1, 2.04]);
  translate([109, 238, 0])
    cube([1, 1, 2.08]);
  translate([110, 238, 0])
    cube([1, 1, 2.08]);
  translate([111, 238, 0])
    cube([1, 1, 2.08]);
  translate([112, 238, 0])
    cube([1, 1, 2.04]);
  translate([113, 238, 0])
    cube([1, 1, 2.08]);
  translate([114, 238, 0])
    cube([1, 1, 2.08]);
  translate([115, 238, 0])
    cube([1, 1, 2.08]);
  translate([116, 238, 0])
    cube([1, 1, 2.16]);
  translate([117, 238, 0])
    cube([1, 1, 6.35]);
  translate([118, 238, 0])
    cube([1, 1, 6.86]);
  translate([119, 238, 0])
    cube([1, 1, 6.35]);
  translate([120, 238, 0])
    cube([1, 1, 4.94]);
  translate([121, 238, 0])
    cube([1, 1, 3.57]);
  translate([122, 238, 0])
    cube([1, 1, 3.18]);
  translate([123, 238, 0])
    cube([1, 1, 3.06]);
  translate([124, 238, 0])
    cube([1, 1, 2.98]);
  translate([125, 238, 0])
    cube([1, 1, 2.98]);
  translate([126, 238, 0])
    cube([1, 1, 2.67]);
  translate([127, 238, 0])
    cube([1, 1, 1.69]);
  translate([128, 238, 0])
    cube([1, 1, 0.94]);
  translate([129, 238, 0])
    cube([1, 1, 0.82]);
  translate([130, 238, 0])
    cube([1, 1, 1.02]);
  translate([131, 238, 0])
    cube([1, 1, 0.90]);
  translate([132, 238, 0])
    cube([1, 1, 1.14]);
  translate([133, 238, 0])
    cube([1, 1, 1.25]);
  translate([134, 238, 0])
    cube([1, 1, 1.22]);
  translate([135, 238, 0])
    cube([1, 1, 1.22]);
  translate([136, 238, 0])
    cube([1, 1, 1.22]);
  translate([137, 238, 0])
    cube([1, 1, 1.18]);
  translate([138, 238, 0])
    cube([1, 1, 0.94]);
  translate([139, 238, 0])
    cube([1, 1, 1.33]);
  translate([140, 238, 0])
    cube([1, 1, 2.12]);
  translate([141, 238, 0])
    cube([1, 1, 1.29]);
  translate([142, 238, 0])
    cube([1, 1, 1.76]);
  translate([143, 238, 0])
    cube([1, 1, 1.96]);
  translate([144, 238, 0])
    cube([1, 1, 2.24]);
  translate([145, 238, 0])
    cube([1, 1, 1.88]);
  translate([146, 238, 0])
    cube([1, 1, 1.73]);
  translate([147, 238, 0])
    cube([1, 1, 1.37]);
  translate([148, 238, 0])
    cube([1, 1, 1.02]);
  translate([149, 238, 0])
    cube([1, 1, 0.55]);
  translate([150, 238, 0])
    cube([1, 1, 2.47]);
  translate([151, 238, 0])
    cube([1, 1, 3.10]);
  translate([152, 238, 0])
    cube([1, 1, 4.71]);
  translate([153, 238, 0])
    cube([1, 1, 2.08]);
  translate([154, 238, 0])
    cube([1, 1, 1.53]);
  translate([155, 238, 0])
    cube([1, 1, 1.45]);
  translate([156, 238, 0])
    cube([1, 1, 1.22]);
  translate([157, 238, 0])
    cube([1, 1, 4.12]);
  translate([158, 238, 0])
    cube([1, 1, 3.96]);
  translate([159, 238, 0])
    cube([1, 1, 3.92]);
  translate([160, 238, 0])
    cube([1, 1, 0.78]);
  translate([161, 238, 0])
    cube([1, 1, 2.04]);
  translate([162, 238, 0])
    cube([1, 1, 1.57]);
  translate([163, 238, 0])
    cube([1, 1, 0.86]);
  translate([164, 238, 0])
    cube([1, 1, 1.06]);
  translate([165, 238, 0])
    cube([1, 1, 0.71]);
  translate([166, 238, 0])
    cube([1, 1, 0.98]);
  translate([167, 238, 0])
    cube([1, 1, 0.59]);
  translate([168, 238, 0])
    cube([1, 1, 0.43]);
  translate([169, 238, 0])
    cube([1, 1, 0.55]);
  translate([170, 238, 0])
    cube([1, 1, 0.98]);
  translate([171, 238, 0])
    cube([1, 1, 1.10]);
  translate([172, 238, 0])
    cube([1, 1, 1.61]);
  translate([173, 238, 0])
    cube([1, 1, 1.49]);
  translate([174, 238, 0])
    cube([1, 1, 5.02]);
  translate([175, 238, 0])
    cube([1, 1, 5.41]);
  translate([176, 238, 0])
    cube([1, 1, 2.04]);
  translate([177, 238, 0])
    cube([1, 1, 1.41]);
  translate([178, 238, 0])
    cube([1, 1, 7.61]);
  translate([179, 238, 0])
    cube([1, 1, 1.61]);
  translate([180, 238, 0])
    cube([1, 1, 2.04]);
  translate([181, 238, 0])
    cube([1, 1, 2.12]);
  translate([182, 238, 0])
    cube([1, 1, 2.08]);
  translate([183, 238, 0])
    cube([1, 1, 2.12]);
  translate([184, 238, 0])
    cube([1, 1, 2.08]);
  translate([185, 238, 0])
    cube([1, 1, 2.08]);
  translate([186, 238, 0])
    cube([1, 1, 2.08]);
  translate([187, 238, 0])
    cube([1, 1, 2.08]);
  translate([188, 238, 0])
    cube([1, 1, 2.08]);
  translate([189, 238, 0])
    cube([1, 1, 2.08]);
  translate([190, 238, 0])
    cube([1, 1, 2.08]);
  translate([191, 238, 0])
    cube([1, 1, 2.08]);
  translate([192, 238, 0])
    cube([1, 1, 2.08]);
  translate([193, 238, 0])
    cube([1, 1, 2.08]);
  translate([194, 238, 0])
    cube([1, 1, 2.08]);
  translate([195, 238, 0])
    cube([1, 1, 2.08]);
  translate([196, 238, 0])
    cube([1, 1, 2.04]);
  translate([197, 238, 0])
    cube([1, 1, 2.08]);
  translate([198, 238, 0])
    cube([1, 1, 2.08]);
  translate([199, 238, 0])
    cube([1, 1, 2.08]);
  translate([200, 238, 0])
    cube([1, 1, 2.08]);
  translate([201, 238, 0])
    cube([1, 1, 2.08]);
  translate([202, 238, 0])
    cube([1, 1, 2.08]);
  translate([203, 238, 0])
    cube([1, 1, 2.08]);
  translate([204, 238, 0])
    cube([1, 1, 2.08]);
  translate([205, 238, 0])
    cube([1, 1, 2.08]);
  translate([206, 238, 0])
    cube([1, 1, 2.08]);
  translate([207, 238, 0])
    cube([1, 1, 2.08]);
  translate([208, 238, 0])
    cube([1, 1, 2.08]);
  translate([209, 238, 0])
    cube([1, 1, 2.08]);
  translate([210, 238, 0])
    cube([1, 1, 2.08]);
  translate([211, 238, 0])
    cube([1, 1, 2.08]);
  translate([212, 238, 0])
    cube([1, 1, 2.08]);
  translate([213, 238, 0])
    cube([1, 1, 2.08]);
  translate([214, 238, 0])
    cube([1, 1, 2.12]);
  translate([215, 238, 0])
    cube([1, 1, 2.12]);
  translate([216, 238, 0])
    cube([1, 1, 2.08]);
  translate([217, 238, 0])
    cube([1, 1, 2.08]);
  translate([218, 238, 0])
    cube([1, 1, 2.08]);
  translate([219, 238, 0])
    cube([1, 1, 2.08]);
  translate([220, 238, 0])
    cube([1, 1, 2.08]);
  translate([221, 238, 0])
    cube([1, 1, 2.08]);
  translate([222, 238, 0])
    cube([1, 1, 2.08]);
  translate([223, 238, 0])
    cube([1, 1, 2.08]);
  translate([224, 238, 0])
    cube([1, 1, 2.08]);
  translate([225, 238, 0])
    cube([1, 1, 2.08]);
  translate([226, 238, 0])
    cube([1, 1, 2.08]);
  translate([227, 238, 0])
    cube([1, 1, 2.08]);
  translate([228, 238, 0])
    cube([1, 1, 2.08]);
  translate([229, 238, 0])
    cube([1, 1, 2.08]);
  translate([230, 238, 0])
    cube([1, 1, 2.08]);
  translate([231, 238, 0])
    cube([1, 1, 2.12]);
  translate([232, 238, 0])
    cube([1, 1, 2.04]);
  translate([233, 238, 0])
    cube([1, 1, 2.08]);
  translate([234, 238, 0])
    cube([1, 1, 2.08]);
  translate([235, 238, 0])
    cube([1, 1, 2.04]);
  translate([236, 238, 0])
    cube([1, 1, 2.04]);
  translate([237, 238, 0])
    cube([1, 1, 2.04]);
  translate([238, 238, 0])
    cube([1, 1, 2.04]);
  translate([239, 238, 0])
    cube([1, 1, 2.04]);
  translate([240, 238, 0])
    cube([1, 1, 2.08]);
  translate([241, 238, 0])
    cube([1, 1, 2.04]);
  translate([242, 238, 0])
    cube([1, 1, 2.04]);
  translate([243, 238, 0])
    cube([1, 1, 2.04]);
  translate([244, 238, 0])
    cube([1, 1, 2.04]);
  translate([245, 238, 0])
    cube([1, 1, 2.04]);
  translate([246, 238, 0])
    cube([1, 1, 2.04]);
  translate([0, 239, 0])
    cube([1, 1, 2.24]);
  translate([1, 239, 0])
    cube([1, 1, 2.27]);
  translate([2, 239, 0])
    cube([1, 1, 2.27]);
  translate([3, 239, 0])
    cube([1, 1, 2.27]);
  translate([4, 239, 0])
    cube([1, 1, 2.27]);
  translate([5, 239, 0])
    cube([1, 1, 2.27]);
  translate([6, 239, 0])
    cube([1, 1, 2.27]);
  translate([7, 239, 0])
    cube([1, 1, 2.27]);
  translate([8, 239, 0])
    cube([1, 1, 2.27]);
  translate([9, 239, 0])
    cube([1, 1, 2.27]);
  translate([10, 239, 0])
    cube([1, 1, 2.27]);
  translate([11, 239, 0])
    cube([1, 1, 2.27]);
  translate([12, 239, 0])
    cube([1, 1, 2.27]);
  translate([13, 239, 0])
    cube([1, 1, 2.27]);
  translate([14, 239, 0])
    cube([1, 1, 2.27]);
  translate([15, 239, 0])
    cube([1, 1, 2.27]);
  translate([16, 239, 0])
    cube([1, 1, 2.27]);
  translate([17, 239, 0])
    cube([1, 1, 2.27]);
  translate([18, 239, 0])
    cube([1, 1, 2.27]);
  translate([19, 239, 0])
    cube([1, 1, 2.27]);
  translate([20, 239, 0])
    cube([1, 1, 2.27]);
  translate([21, 239, 0])
    cube([1, 1, 2.27]);
  translate([22, 239, 0])
    cube([1, 1, 2.27]);
  translate([23, 239, 0])
    cube([1, 1, 2.27]);
  translate([24, 239, 0])
    cube([1, 1, 2.27]);
  translate([25, 239, 0])
    cube([1, 1, 2.27]);
  translate([26, 239, 0])
    cube([1, 1, 2.27]);
  translate([27, 239, 0])
    cube([1, 1, 2.27]);
  translate([28, 239, 0])
    cube([1, 1, 2.27]);
  translate([29, 239, 0])
    cube([1, 1, 2.27]);
  translate([30, 239, 0])
    cube([1, 1, 2.27]);
  translate([31, 239, 0])
    cube([1, 1, 2.27]);
  translate([32, 239, 0])
    cube([1, 1, 2.27]);
  translate([33, 239, 0])
    cube([1, 1, 2.24]);
  translate([34, 239, 0])
    cube([1, 1, 2.24]);
  translate([35, 239, 0])
    cube([1, 1, 2.24]);
  translate([36, 239, 0])
    cube([1, 1, 2.24]);
  translate([37, 239, 0])
    cube([1, 1, 2.24]);
  translate([38, 239, 0])
    cube([1, 1, 2.24]);
  translate([39, 239, 0])
    cube([1, 1, 2.24]);
  translate([40, 239, 0])
    cube([1, 1, 2.27]);
  translate([41, 239, 0])
    cube([1, 1, 2.24]);
  translate([42, 239, 0])
    cube([1, 1, 2.24]);
  translate([43, 239, 0])
    cube([1, 1, 2.24]);
  translate([44, 239, 0])
    cube([1, 1, 2.16]);
  translate([45, 239, 0])
    cube([1, 1, 2.20]);
  translate([46, 239, 0])
    cube([1, 1, 6.67]);
  translate([47, 239, 0])
    cube([1, 1, 9.25]);
  translate([48, 239, 0])
    cube([1, 1, 8.63]);
  translate([49, 239, 0])
    cube([1, 1, 5.84]);
  translate([50, 239, 0])
    cube([1, 1, 1.10]);
  translate([51, 239, 0])
    cube([1, 1, 1.29]);
  translate([52, 239, 0])
    cube([1, 1, 1.41]);
  translate([53, 239, 0])
    cube([1, 1, 1.92]);
  translate([54, 239, 0])
    cube([1, 1, 5.06]);
  translate([55, 239, 0])
    cube([1, 1, 5.37]);
  translate([56, 239, 0])
    cube([1, 1, 1.80]);
  translate([57, 239, 0])
    cube([1, 1, 1.65]);
  translate([58, 239, 0])
    cube([1, 1, 0.82]);
  translate([59, 239, 0])
    cube([1, 1, 1.22]);
  translate([60, 239, 0])
    cube([1, 1, 0.27]);
  translate([61, 239, 0])
    cube([1, 1, 0.55]);
  translate([62, 239, 0])
    cube([1, 1, 1.06]);
  translate([63, 239, 0])
    cube([1, 1, 1.25]);
  translate([64, 239, 0])
    cube([1, 1, 1.10]);
  translate([65, 239, 0])
    cube([1, 1, 0.94]);
  translate([66, 239, 0])
    cube([1, 1, 1.18]);
  translate([67, 239, 0])
    cube([1, 1, 0.98]);
  translate([68, 239, 0])
    cube([1, 1, 0.78]);
  translate([69, 239, 0])
    cube([1, 1, 1.37]);
  translate([70, 239, 0])
    cube([1, 1, 1.14]);
  translate([71, 239, 0])
    cube([1, 1, 1.18]);
  translate([72, 239, 0])
    cube([1, 1, 0.94]);
  translate([73, 239, 0])
    cube([1, 1, 0.98]);
  translate([74, 239, 0])
    cube([1, 1, 1.65]);
  translate([75, 239, 0])
    cube([1, 1, 1.84]);
  translate([76, 239, 0])
    cube([1, 1, 2.08]);
  translate([77, 239, 0])
    cube([1, 1, 2.55]);
  translate([78, 239, 0])
    cube([1, 1, 1.49]);
  translate([79, 239, 0])
    cube([1, 1, 3.25]);
  translate([80, 239, 0])
    cube([1, 1, 1.84]);
  translate([81, 239, 0])
    cube([1, 1, 4.12]);
  translate([82, 239, 0])
    cube([1, 1, 4.08]);
  translate([83, 239, 0])
    cube([1, 1, 3.02]);
  translate([84, 239, 0])
    cube([1, 1, 5.61]);
  translate([85, 239, 0])
    cube([1, 1, 5.57]);
  translate([86, 239, 0])
    cube([1, 1, 5.25]);
  translate([87, 239, 0])
    cube([1, 1, 4.94]);
  translate([88, 239, 0])
    cube([1, 1, 4.75]);
  translate([89, 239, 0])
    cube([1, 1, 4.55]);
  translate([90, 239, 0])
    cube([1, 1, 4.35]);
  translate([91, 239, 0])
    cube([1, 1, 4.24]);
  translate([92, 239, 0])
    cube([1, 1, 4.04]);
  translate([93, 239, 0])
    cube([1, 1, 4.00]);
  translate([94, 239, 0])
    cube([1, 1, 3.84]);
  translate([95, 239, 0])
    cube([1, 1, 3.73]);
  translate([96, 239, 0])
    cube([1, 1, 3.69]);
  translate([97, 239, 0])
    cube([1, 1, 3.57]);
  translate([98, 239, 0])
    cube([1, 1, 3.69]);
  translate([99, 239, 0])
    cube([1, 1, 3.57]);
  translate([100, 239, 0])
    cube([1, 1, 3.49]);
  translate([101, 239, 0])
    cube([1, 1, 3.45]);
  translate([102, 239, 0])
    cube([1, 1, 3.29]);
  translate([103, 239, 0])
    cube([1, 1, 3.49]);
  translate([104, 239, 0])
    cube([1, 1, 3.49]);
  translate([105, 239, 0])
    cube([1, 1, 3.45]);
  translate([106, 239, 0])
    cube([1, 1, 3.57]);
  translate([107, 239, 0])
    cube([1, 1, 2.35]);
  translate([108, 239, 0])
    cube([1, 1, 2.12]);
  translate([109, 239, 0])
    cube([1, 1, 2.12]);
  translate([110, 239, 0])
    cube([1, 1, 2.04]);
  translate([111, 239, 0])
    cube([1, 1, 2.04]);
  translate([112, 239, 0])
    cube([1, 1, 2.12]);
  translate([113, 239, 0])
    cube([1, 1, 2.00]);
  translate([114, 239, 0])
    cube([1, 1, 2.08]);
  translate([115, 239, 0])
    cube([1, 1, 2.04]);
  translate([116, 239, 0])
    cube([1, 1, 2.08]);
  translate([117, 239, 0])
    cube([1, 1, 2.59]);
  translate([118, 239, 0])
    cube([1, 1, 7.02]);
  translate([119, 239, 0])
    cube([1, 1, 6.51]);
  translate([120, 239, 0])
    cube([1, 1, 5.25]);
  translate([121, 239, 0])
    cube([1, 1, 3.57]);
  translate([122, 239, 0])
    cube([1, 1, 3.18]);
  translate([123, 239, 0])
    cube([1, 1, 3.02]);
  translate([124, 239, 0])
    cube([1, 1, 2.59]);
  translate([125, 239, 0])
    cube([1, 1, 1.10]);
  translate([126, 239, 0])
    cube([1, 1, 0.86]);
  translate([127, 239, 0])
    cube([1, 1, 1.18]);
  translate([128, 239, 0])
    cube([1, 1, 1.06]);
  translate([129, 239, 0])
    cube([1, 1, 0.90]);
  translate([130, 239, 0])
    cube([1, 1, 1.33]);
  translate([131, 239, 0])
    cube([1, 1, 1.25]);
  translate([132, 239, 0])
    cube([1, 1, 1.25]);
  translate([133, 239, 0])
    cube([1, 1, 1.22]);
  translate([134, 239, 0])
    cube([1, 1, 1.22]);
  translate([135, 239, 0])
    cube([1, 1, 1.22]);
  translate([136, 239, 0])
    cube([1, 1, 1.25]);
  translate([137, 239, 0])
    cube([1, 1, 1.06]);
  translate([138, 239, 0])
    cube([1, 1, 2.59]);
  translate([139, 239, 0])
    cube([1, 1, 0.55]);
  translate([140, 239, 0])
    cube([1, 1, 3.33]);
  translate([141, 239, 0])
    cube([1, 1, 1.73]);
  translate([142, 239, 0])
    cube([1, 1, 1.41]);
  translate([143, 239, 0])
    cube([1, 1, 1.06]);
  translate([144, 239, 0])
    cube([1, 1, 0.71]);
  translate([145, 239, 0])
    cube([1, 1, 1.18]);
  translate([146, 239, 0])
    cube([1, 1, 3.80]);
  translate([147, 239, 0])
    cube([1, 1, 4.82]);
  translate([148, 239, 0])
    cube([1, 1, 5.49]);
  translate([149, 239, 0])
    cube([1, 1, 4.24]);
  translate([150, 239, 0])
    cube([1, 1, 3.57]);
  translate([151, 239, 0])
    cube([1, 1, 4.08]);
  translate([152, 239, 0])
    cube([1, 1, 4.31]);
  translate([153, 239, 0])
    cube([1, 1, 4.20]);
  translate([154, 239, 0])
    cube([1, 1, 4.31]);
  translate([155, 239, 0])
    cube([1, 1, 4.35]);
  translate([156, 239, 0])
    cube([1, 1, 4.20]);
  translate([157, 239, 0])
    cube([1, 1, 4.24]);
  translate([158, 239, 0])
    cube([1, 1, 4.16]);
  translate([159, 239, 0])
    cube([1, 1, 4.16]);
  translate([160, 239, 0])
    cube([1, 1, 4.20]);
  translate([161, 239, 0])
    cube([1, 1, 3.80]);
  translate([162, 239, 0])
    cube([1, 1, 2.71]);
  translate([163, 239, 0])
    cube([1, 1, 1.45]);
  translate([164, 239, 0])
    cube([1, 1, 1.33]);
  translate([165, 239, 0])
    cube([1, 1, 0.59]);
  translate([166, 239, 0])
    cube([1, 1, 0.90]);
  translate([167, 239, 0])
    cube([1, 1, 0.27]);
  translate([168, 239, 0])
    cube([1, 1, 0.35]);
  translate([169, 239, 0])
    cube([1, 1, 0.47]);
  translate([170, 239, 0])
    cube([1, 1, 0.86]);
  translate([171, 239, 0])
    cube([1, 1, 1.10]);
  translate([172, 239, 0])
    cube([1, 1, 1.25]);
  translate([173, 239, 0])
    cube([1, 1, 1.73]);
  translate([174, 239, 0])
    cube([1, 1, 2.39]);
  translate([175, 239, 0])
    cube([1, 1, 4.98]);
  translate([176, 239, 0])
    cube([1, 1, 2.24]);
  translate([177, 239, 0])
    cube([1, 1, 1.25]);
  translate([178, 239, 0])
    cube([1, 1, 4.90]);
  translate([179, 239, 0])
    cube([1, 1, 2.35]);
  translate([180, 239, 0])
    cube([1, 1, 2.08]);
  translate([181, 239, 0])
    cube([1, 1, 2.08]);
  translate([182, 239, 0])
    cube([1, 1, 2.08]);
  translate([183, 239, 0])
    cube([1, 1, 2.08]);
  translate([184, 239, 0])
    cube([1, 1, 2.08]);
  translate([185, 239, 0])
    cube([1, 1, 2.04]);
  translate([186, 239, 0])
    cube([1, 1, 2.08]);
  translate([187, 239, 0])
    cube([1, 1, 2.08]);
  translate([188, 239, 0])
    cube([1, 1, 2.08]);
  translate([189, 239, 0])
    cube([1, 1, 2.08]);
  translate([190, 239, 0])
    cube([1, 1, 2.08]);
  translate([191, 239, 0])
    cube([1, 1, 2.08]);
  translate([192, 239, 0])
    cube([1, 1, 2.08]);
  translate([193, 239, 0])
    cube([1, 1, 2.08]);
  translate([194, 239, 0])
    cube([1, 1, 2.08]);
  translate([195, 239, 0])
    cube([1, 1, 2.12]);
  translate([196, 239, 0])
    cube([1, 1, 2.08]);
  translate([197, 239, 0])
    cube([1, 1, 2.12]);
  translate([198, 239, 0])
    cube([1, 1, 2.08]);
  translate([199, 239, 0])
    cube([1, 1, 2.08]);
  translate([200, 239, 0])
    cube([1, 1, 2.08]);
  translate([201, 239, 0])
    cube([1, 1, 2.16]);
  translate([202, 239, 0])
    cube([1, 1, 2.16]);
  translate([203, 239, 0])
    cube([1, 1, 2.12]);
  translate([204, 239, 0])
    cube([1, 1, 2.04]);
  translate([205, 239, 0])
    cube([1, 1, 2.08]);
  translate([206, 239, 0])
    cube([1, 1, 2.08]);
  translate([207, 239, 0])
    cube([1, 1, 2.08]);
  translate([208, 239, 0])
    cube([1, 1, 2.08]);
  translate([209, 239, 0])
    cube([1, 1, 2.08]);
  translate([210, 239, 0])
    cube([1, 1, 2.08]);
  translate([211, 239, 0])
    cube([1, 1, 2.08]);
  translate([212, 239, 0])
    cube([1, 1, 2.08]);
  translate([213, 239, 0])
    cube([1, 1, 2.12]);
  translate([214, 239, 0])
    cube([1, 1, 2.12]);
  translate([215, 239, 0])
    cube([1, 1, 2.12]);
  translate([216, 239, 0])
    cube([1, 1, 2.08]);
  translate([217, 239, 0])
    cube([1, 1, 2.08]);
  translate([218, 239, 0])
    cube([1, 1, 2.16]);
  translate([219, 239, 0])
    cube([1, 1, 2.08]);
  translate([220, 239, 0])
    cube([1, 1, 2.08]);
  translate([221, 239, 0])
    cube([1, 1, 2.08]);
  translate([222, 239, 0])
    cube([1, 1, 2.08]);
  translate([223, 239, 0])
    cube([1, 1, 2.08]);
  translate([224, 239, 0])
    cube([1, 1, 2.08]);
  translate([225, 239, 0])
    cube([1, 1, 2.08]);
  translate([226, 239, 0])
    cube([1, 1, 2.08]);
  translate([227, 239, 0])
    cube([1, 1, 2.08]);
  translate([228, 239, 0])
    cube([1, 1, 2.04]);
  translate([229, 239, 0])
    cube([1, 1, 2.08]);
  translate([230, 239, 0])
    cube([1, 1, 2.08]);
  translate([231, 239, 0])
    cube([1, 1, 2.08]);
  translate([232, 239, 0])
    cube([1, 1, 2.08]);
  translate([233, 239, 0])
    cube([1, 1, 2.04]);
  translate([234, 239, 0])
    cube([1, 1, 2.04]);
  translate([235, 239, 0])
    cube([1, 1, 2.04]);
  translate([236, 239, 0])
    cube([1, 1, 2.08]);
  translate([237, 239, 0])
    cube([1, 1, 2.04]);
  translate([238, 239, 0])
    cube([1, 1, 2.08]);
  translate([239, 239, 0])
    cube([1, 1, 2.08]);
  translate([240, 239, 0])
    cube([1, 1, 2.04]);
  translate([241, 239, 0])
    cube([1, 1, 2.04]);
  translate([242, 239, 0])
    cube([1, 1, 2.04]);
  translate([243, 239, 0])
    cube([1, 1, 2.04]);
  translate([244, 239, 0])
    cube([1, 1, 2.04]);
  translate([245, 239, 0])
    cube([1, 1, 2.04]);
  translate([246, 239, 0])
    cube([1, 1, 2.04]);
  translate([0, 240, 0])
    cube([1, 1, 2.27]);
  translate([1, 240, 0])
    cube([1, 1, 2.27]);
  translate([2, 240, 0])
    cube([1, 1, 2.27]);
  translate([3, 240, 0])
    cube([1, 1, 2.27]);
  translate([4, 240, 0])
    cube([1, 1, 2.27]);
  translate([5, 240, 0])
    cube([1, 1, 2.27]);
  translate([6, 240, 0])
    cube([1, 1, 2.27]);
  translate([7, 240, 0])
    cube([1, 1, 2.27]);
  translate([8, 240, 0])
    cube([1, 1, 2.27]);
  translate([9, 240, 0])
    cube([1, 1, 2.27]);
  translate([10, 240, 0])
    cube([1, 1, 2.27]);
  translate([11, 240, 0])
    cube([1, 1, 2.27]);
  translate([12, 240, 0])
    cube([1, 1, 2.27]);
  translate([13, 240, 0])
    cube([1, 1, 2.27]);
  translate([14, 240, 0])
    cube([1, 1, 2.27]);
  translate([15, 240, 0])
    cube([1, 1, 2.31]);
  translate([16, 240, 0])
    cube([1, 1, 2.27]);
  translate([17, 240, 0])
    cube([1, 1, 2.27]);
  translate([18, 240, 0])
    cube([1, 1, 2.27]);
  translate([19, 240, 0])
    cube([1, 1, 2.27]);
  translate([20, 240, 0])
    cube([1, 1, 2.27]);
  translate([21, 240, 0])
    cube([1, 1, 2.27]);
  translate([22, 240, 0])
    cube([1, 1, 2.27]);
  translate([23, 240, 0])
    cube([1, 1, 2.27]);
  translate([24, 240, 0])
    cube([1, 1, 2.27]);
  translate([25, 240, 0])
    cube([1, 1, 2.24]);
  translate([26, 240, 0])
    cube([1, 1, 2.24]);
  translate([27, 240, 0])
    cube([1, 1, 2.27]);
  translate([28, 240, 0])
    cube([1, 1, 2.31]);
  translate([29, 240, 0])
    cube([1, 1, 2.31]);
  translate([30, 240, 0])
    cube([1, 1, 2.27]);
  translate([31, 240, 0])
    cube([1, 1, 2.27]);
  translate([32, 240, 0])
    cube([1, 1, 2.27]);
  translate([33, 240, 0])
    cube([1, 1, 2.27]);
  translate([34, 240, 0])
    cube([1, 1, 2.27]);
  translate([35, 240, 0])
    cube([1, 1, 2.27]);
  translate([36, 240, 0])
    cube([1, 1, 2.27]);
  translate([37, 240, 0])
    cube([1, 1, 2.27]);
  translate([38, 240, 0])
    cube([1, 1, 2.24]);
  translate([39, 240, 0])
    cube([1, 1, 2.27]);
  translate([40, 240, 0])
    cube([1, 1, 2.27]);
  translate([41, 240, 0])
    cube([1, 1, 2.24]);
  translate([42, 240, 0])
    cube([1, 1, 2.24]);
  translate([43, 240, 0])
    cube([1, 1, 2.27]);
  translate([44, 240, 0])
    cube([1, 1, 2.08]);
  translate([45, 240, 0])
    cube([1, 1, 2.24]);
  translate([46, 240, 0])
    cube([1, 1, 6.78]);
  translate([47, 240, 0])
    cube([1, 1, 9.41]);
  translate([48, 240, 0])
    cube([1, 1, 8.98]);
  translate([49, 240, 0])
    cube([1, 1, 3.25]);
  translate([50, 240, 0])
    cube([1, 1, 1.06]);
  translate([51, 240, 0])
    cube([1, 1, 1.33]);
  translate([52, 240, 0])
    cube([1, 1, 1.53]);
  translate([53, 240, 0])
    cube([1, 1, 2.39]);
  translate([54, 240, 0])
    cube([1, 1, 6.04]);
  translate([55, 240, 0])
    cube([1, 1, 3.41]);
  translate([56, 240, 0])
    cube([1, 1, 1.65]);
  translate([57, 240, 0])
    cube([1, 1, 1.33]);
  translate([58, 240, 0])
    cube([1, 1, 0.90]);
  translate([59, 240, 0])
    cube([1, 1, 1.10]);
  translate([60, 240, 0])
    cube([1, 1, 0.20]);
  translate([61, 240, 0])
    cube([1, 1, 0.75]);
  translate([62, 240, 0])
    cube([1, 1, 1.02]);
  translate([63, 240, 0])
    cube([1, 1, 1.10]);
  translate([64, 240, 0])
    cube([1, 1, 1.14]);
  translate([65, 240, 0])
    cube([1, 1, 0.98]);
  translate([66, 240, 0])
    cube([1, 1, 0.82]);
  translate([67, 240, 0])
    cube([1, 1, 0.47]);
  translate([68, 240, 0])
    cube([1, 1, 0.39]);
  translate([69, 240, 0])
    cube([1, 1, 1.18]);
  translate([70, 240, 0])
    cube([1, 1, 1.06]);
  translate([71, 240, 0])
    cube([1, 1, 1.18]);
  translate([72, 240, 0])
    cube([1, 1, 1.10]);
  translate([73, 240, 0])
    cube([1, 1, 1.49]);
  translate([74, 240, 0])
    cube([1, 1, 1.61]);
  translate([75, 240, 0])
    cube([1, 1, 1.18]);
  translate([76, 240, 0])
    cube([1, 1, 1.37]);
  translate([77, 240, 0])
    cube([1, 1, 3.02]);
  translate([78, 240, 0])
    cube([1, 1, 3.22]);
  translate([79, 240, 0])
    cube([1, 1, 2.20]);
  translate([80, 240, 0])
    cube([1, 1, 1.14]);
  translate([81, 240, 0])
    cube([1, 1, 1.80]);
  translate([82, 240, 0])
    cube([1, 1, 1.76]);
  translate([83, 240, 0])
    cube([1, 1, 3.57]);
  translate([84, 240, 0])
    cube([1, 1, 0.43]);
  translate([85, 240, 0])
    cube([1, 1, 4.04]);
  translate([86, 240, 0])
    cube([1, 1, 3.45]);
  translate([87, 240, 0])
    cube([1, 1, 4.86]);
  translate([88, 240, 0])
    cube([1, 1, 4.86]);
  translate([89, 240, 0])
    cube([1, 1, 4.55]);
  translate([90, 240, 0])
    cube([1, 1, 4.31]);
  translate([91, 240, 0])
    cube([1, 1, 4.08]);
  translate([92, 240, 0])
    cube([1, 1, 3.88]);
  translate([93, 240, 0])
    cube([1, 1, 3.80]);
  translate([94, 240, 0])
    cube([1, 1, 3.73]);
  translate([95, 240, 0])
    cube([1, 1, 3.65]);
  translate([96, 240, 0])
    cube([1, 1, 3.65]);
  translate([97, 240, 0])
    cube([1, 1, 3.61]);
  translate([98, 240, 0])
    cube([1, 1, 3.69]);
  translate([99, 240, 0])
    cube([1, 1, 3.49]);
  translate([100, 240, 0])
    cube([1, 1, 3.41]);
  translate([101, 240, 0])
    cube([1, 1, 3.37]);
  translate([102, 240, 0])
    cube([1, 1, 3.29]);
  translate([103, 240, 0])
    cube([1, 1, 3.49]);
  translate([104, 240, 0])
    cube([1, 1, 3.49]);
  translate([105, 240, 0])
    cube([1, 1, 3.45]);
  translate([106, 240, 0])
    cube([1, 1, 3.33]);
  translate([107, 240, 0])
    cube([1, 1, 2.08]);
  translate([108, 240, 0])
    cube([1, 1, 2.12]);
  translate([109, 240, 0])
    cube([1, 1, 2.12]);
  translate([110, 240, 0])
    cube([1, 1, 2.12]);
  translate([111, 240, 0])
    cube([1, 1, 2.12]);
  translate([112, 240, 0])
    cube([1, 1, 2.12]);
  translate([113, 240, 0])
    cube([1, 1, 2.08]);
  translate([114, 240, 0])
    cube([1, 1, 2.08]);
  translate([115, 240, 0])
    cube([1, 1, 2.04]);
  translate([116, 240, 0])
    cube([1, 1, 1.96]);
  translate([117, 240, 0])
    cube([1, 1, 1.73]);
  translate([118, 240, 0])
    cube([1, 1, 6.98]);
  translate([119, 240, 0])
    cube([1, 1, 6.78]);
  translate([120, 240, 0])
    cube([1, 1, 5.45]);
  translate([121, 240, 0])
    cube([1, 1, 3.80]);
  translate([122, 240, 0])
    cube([1, 1, 2.67]);
  translate([123, 240, 0])
    cube([1, 1, 0.98]);
  translate([124, 240, 0])
    cube([1, 1, 1.06]);
  translate([125, 240, 0])
    cube([1, 1, 1.25]);
  translate([126, 240, 0])
    cube([1, 1, 0.90]);
  translate([127, 240, 0])
    cube([1, 1, 1.29]);
  translate([128, 240, 0])
    cube([1, 1, 1.29]);
  translate([129, 240, 0])
    cube([1, 1, 1.25]);
  translate([130, 240, 0])
    cube([1, 1, 1.25]);
  translate([131, 240, 0])
    cube([1, 1, 1.22]);
  translate([132, 240, 0])
    cube([1, 1, 1.22]);
  translate([133, 240, 0])
    cube([1, 1, 1.22]);
  translate([134, 240, 0])
    cube([1, 1, 1.22]);
  translate([135, 240, 0])
    cube([1, 1, 1.22]);
  translate([136, 240, 0])
    cube([1, 1, 1.22]);
  translate([137, 240, 0])
    cube([1, 1, 1.22]);
  translate([138, 240, 0])
    cube([1, 1, 1.22]);
  translate([139, 240, 0])
    cube([1, 1, 1.06]);
  translate([140, 240, 0])
    cube([1, 1, 1.10]);
  translate([141, 240, 0])
    cube([1, 1, 1.10]);
  translate([142, 240, 0])
    cube([1, 1, 1.14]);
  translate([143, 240, 0])
    cube([1, 1, 1.14]);
  translate([144, 240, 0])
    cube([1, 1, 1.33]);
  translate([145, 240, 0])
    cube([1, 1, 4.16]);
  translate([146, 240, 0])
    cube([1, 1, 4.47]);
  translate([147, 240, 0])
    cube([1, 1, 4.78]);
  translate([148, 240, 0])
    cube([1, 1, 4.94]);
  translate([149, 240, 0])
    cube([1, 1, 5.14]);
  translate([150, 240, 0])
    cube([1, 1, 4.98]);
  translate([151, 240, 0])
    cube([1, 1, 4.71]);
  translate([152, 240, 0])
    cube([1, 1, 4.47]);
  translate([153, 240, 0])
    cube([1, 1, 4.39]);
  translate([154, 240, 0])
    cube([1, 1, 4.24]);
  translate([155, 240, 0])
    cube([1, 1, 4.27]);
  translate([156, 240, 0])
    cube([1, 1, 4.24]);
  translate([157, 240, 0])
    cube([1, 1, 4.20]);
  translate([158, 240, 0])
    cube([1, 1, 4.04]);
  translate([159, 240, 0])
    cube([1, 1, 4.16]);
  translate([160, 240, 0])
    cube([1, 1, 4.20]);
  translate([161, 240, 0])
    cube([1, 1, 4.39]);
  translate([162, 240, 0])
    cube([1, 1, 4.20]);
  translate([163, 240, 0])
    cube([1, 1, 3.80]);
  translate([164, 240, 0])
    cube([1, 1, 3.49]);
  translate([165, 240, 0])
    cube([1, 1, 1.57]);
  translate([166, 240, 0])
    cube([1, 1, 0.94]);
  translate([167, 240, 0])
    cube([1, 1, 0.12]);
  translate([168, 240, 0])
    cube([1, 1, 0.47]);
  translate([169, 240, 0])
    cube([1, 1, 0.51]);
  translate([170, 240, 0])
    cube([1, 1, 0.82]);
  translate([171, 240, 0])
    cube([1, 1, 1.14]);
  translate([172, 240, 0])
    cube([1, 1, 1.25]);
  translate([173, 240, 0])
    cube([1, 1, 1.45]);
  translate([174, 240, 0])
    cube([1, 1, 2.24]);
  translate([175, 240, 0])
    cube([1, 1, 5.41]);
  translate([176, 240, 0])
    cube([1, 1, 3.10]);
  translate([177, 240, 0])
    cube([1, 1, 1.80]);
  translate([178, 240, 0])
    cube([1, 1, 2.43]);
  translate([179, 240, 0])
    cube([1, 1, 3.06]);
  translate([180, 240, 0])
    cube([1, 1, 2.08]);
  translate([181, 240, 0])
    cube([1, 1, 2.08]);
  translate([182, 240, 0])
    cube([1, 1, 2.08]);
  translate([183, 240, 0])
    cube([1, 1, 2.08]);
  translate([184, 240, 0])
    cube([1, 1, 2.08]);
  translate([185, 240, 0])
    cube([1, 1, 2.16]);
  translate([186, 240, 0])
    cube([1, 1, 2.16]);
  translate([187, 240, 0])
    cube([1, 1, 2.08]);
  translate([188, 240, 0])
    cube([1, 1, 2.08]);
  translate([189, 240, 0])
    cube([1, 1, 2.08]);
  translate([190, 240, 0])
    cube([1, 1, 2.08]);
  translate([191, 240, 0])
    cube([1, 1, 2.12]);
  translate([192, 240, 0])
    cube([1, 1, 2.08]);
  translate([193, 240, 0])
    cube([1, 1, 2.04]);
  translate([194, 240, 0])
    cube([1, 1, 2.04]);
  translate([195, 240, 0])
    cube([1, 1, 2.08]);
  translate([196, 240, 0])
    cube([1, 1, 2.04]);
  translate([197, 240, 0])
    cube([1, 1, 2.12]);
  translate([198, 240, 0])
    cube([1, 1, 2.08]);
  translate([199, 240, 0])
    cube([1, 1, 2.04]);
  translate([200, 240, 0])
    cube([1, 1, 2.00]);
  translate([201, 240, 0])
    cube([1, 1, 2.08]);
  translate([202, 240, 0])
    cube([1, 1, 2.08]);
  translate([203, 240, 0])
    cube([1, 1, 2.08]);
  translate([204, 240, 0])
    cube([1, 1, 2.04]);
  translate([205, 240, 0])
    cube([1, 1, 2.08]);
  translate([206, 240, 0])
    cube([1, 1, 2.04]);
  translate([207, 240, 0])
    cube([1, 1, 2.08]);
  translate([208, 240, 0])
    cube([1, 1, 2.08]);
  translate([209, 240, 0])
    cube([1, 1, 2.08]);
  translate([210, 240, 0])
    cube([1, 1, 2.08]);
  translate([211, 240, 0])
    cube([1, 1, 2.08]);
  translate([212, 240, 0])
    cube([1, 1, 2.08]);
  translate([213, 240, 0])
    cube([1, 1, 2.08]);
  translate([214, 240, 0])
    cube([1, 1, 2.16]);
  translate([215, 240, 0])
    cube([1, 1, 2.16]);
  translate([216, 240, 0])
    cube([1, 1, 2.08]);
  translate([217, 240, 0])
    cube([1, 1, 2.08]);
  translate([218, 240, 0])
    cube([1, 1, 2.08]);
  translate([219, 240, 0])
    cube([1, 1, 2.08]);
  translate([220, 240, 0])
    cube([1, 1, 2.08]);
  translate([221, 240, 0])
    cube([1, 1, 2.08]);
  translate([222, 240, 0])
    cube([1, 1, 2.08]);
  translate([223, 240, 0])
    cube([1, 1, 2.08]);
  translate([224, 240, 0])
    cube([1, 1, 2.08]);
  translate([225, 240, 0])
    cube([1, 1, 2.08]);
  translate([226, 240, 0])
    cube([1, 1, 2.08]);
  translate([227, 240, 0])
    cube([1, 1, 2.08]);
  translate([228, 240, 0])
    cube([1, 1, 2.08]);
  translate([229, 240, 0])
    cube([1, 1, 2.08]);
  translate([230, 240, 0])
    cube([1, 1, 2.08]);
  translate([231, 240, 0])
    cube([1, 1, 2.08]);
  translate([232, 240, 0])
    cube([1, 1, 2.08]);
  translate([233, 240, 0])
    cube([1, 1, 2.08]);
  translate([234, 240, 0])
    cube([1, 1, 2.08]);
  translate([235, 240, 0])
    cube([1, 1, 2.04]);
  translate([236, 240, 0])
    cube([1, 1, 2.04]);
  translate([237, 240, 0])
    cube([1, 1, 2.08]);
  translate([238, 240, 0])
    cube([1, 1, 2.08]);
  translate([239, 240, 0])
    cube([1, 1, 2.08]);
  translate([240, 240, 0])
    cube([1, 1, 2.08]);
  translate([241, 240, 0])
    cube([1, 1, 2.08]);
  translate([242, 240, 0])
    cube([1, 1, 2.08]);
  translate([243, 240, 0])
    cube([1, 1, 2.04]);
  translate([244, 240, 0])
    cube([1, 1, 2.04]);
  translate([245, 240, 0])
    cube([1, 1, 2.08]);
  translate([246, 240, 0])
    cube([1, 1, 2.04]);
  translate([0, 241, 0])
    cube([1, 1, 2.27]);
  translate([1, 241, 0])
    cube([1, 1, 2.27]);
  translate([2, 241, 0])
    cube([1, 1, 2.27]);
  translate([3, 241, 0])
    cube([1, 1, 2.27]);
  translate([4, 241, 0])
    cube([1, 1, 2.27]);
  translate([5, 241, 0])
    cube([1, 1, 2.27]);
  translate([6, 241, 0])
    cube([1, 1, 2.27]);
  translate([7, 241, 0])
    cube([1, 1, 2.27]);
  translate([8, 241, 0])
    cube([1, 1, 2.27]);
  translate([9, 241, 0])
    cube([1, 1, 2.27]);
  translate([10, 241, 0])
    cube([1, 1, 2.27]);
  translate([11, 241, 0])
    cube([1, 1, 2.27]);
  translate([12, 241, 0])
    cube([1, 1, 2.27]);
  translate([13, 241, 0])
    cube([1, 1, 2.27]);
  translate([14, 241, 0])
    cube([1, 1, 2.27]);
  translate([15, 241, 0])
    cube([1, 1, 2.31]);
  translate([16, 241, 0])
    cube([1, 1, 2.27]);
  translate([17, 241, 0])
    cube([1, 1, 2.27]);
  translate([18, 241, 0])
    cube([1, 1, 2.27]);
  translate([19, 241, 0])
    cube([1, 1, 2.27]);
  translate([20, 241, 0])
    cube([1, 1, 2.27]);
  translate([21, 241, 0])
    cube([1, 1, 2.27]);
  translate([22, 241, 0])
    cube([1, 1, 2.27]);
  translate([23, 241, 0])
    cube([1, 1, 2.27]);
  translate([24, 241, 0])
    cube([1, 1, 2.27]);
  translate([25, 241, 0])
    cube([1, 1, 2.27]);
  translate([26, 241, 0])
    cube([1, 1, 2.27]);
  translate([27, 241, 0])
    cube([1, 1, 2.27]);
  translate([28, 241, 0])
    cube([1, 1, 2.31]);
  translate([29, 241, 0])
    cube([1, 1, 2.31]);
  translate([30, 241, 0])
    cube([1, 1, 2.27]);
  translate([31, 241, 0])
    cube([1, 1, 2.27]);
  translate([32, 241, 0])
    cube([1, 1, 2.27]);
  translate([33, 241, 0])
    cube([1, 1, 2.27]);
  translate([34, 241, 0])
    cube([1, 1, 2.27]);
  translate([35, 241, 0])
    cube([1, 1, 2.27]);
  translate([36, 241, 0])
    cube([1, 1, 2.27]);
  translate([37, 241, 0])
    cube([1, 1, 2.27]);
  translate([38, 241, 0])
    cube([1, 1, 2.24]);
  translate([39, 241, 0])
    cube([1, 1, 2.27]);
  translate([40, 241, 0])
    cube([1, 1, 2.27]);
  translate([41, 241, 0])
    cube([1, 1, 2.24]);
  translate([42, 241, 0])
    cube([1, 1, 2.24]);
  translate([43, 241, 0])
    cube([1, 1, 2.27]);
  translate([44, 241, 0])
    cube([1, 1, 2.27]);
  translate([45, 241, 0])
    cube([1, 1, 2.27]);
  translate([46, 241, 0])
    cube([1, 1, 8.27]);
  translate([47, 241, 0])
    cube([1, 1, 9.41]);
  translate([48, 241, 0])
    cube([1, 1, 9.65]);
  translate([49, 241, 0])
    cube([1, 1, 1.25]);
  translate([50, 241, 0])
    cube([1, 1, 0.90]);
  translate([51, 241, 0])
    cube([1, 1, 1.25]);
  translate([52, 241, 0])
    cube([1, 1, 1.92]);
  translate([53, 241, 0])
    cube([1, 1, 2.27]);
  translate([54, 241, 0])
    cube([1, 1, 5.18]);
  translate([55, 241, 0])
    cube([1, 1, 2.59]);
  translate([56, 241, 0])
    cube([1, 1, 1.45]);
  translate([57, 241, 0])
    cube([1, 1, 1.18]);
  translate([58, 241, 0])
    cube([1, 1, 0.82]);
  translate([59, 241, 0])
    cube([1, 1, 0.39]);
  translate([60, 241, 0])
    cube([1, 1, 0.20]);
  translate([61, 241, 0])
    cube([1, 1, 1.22]);
  translate([62, 241, 0])
    cube([1, 1, 0.94]);
  translate([63, 241, 0])
    cube([1, 1, 1.22]);
  translate([64, 241, 0])
    cube([1, 1, 1.14]);
  translate([65, 241, 0])
    cube([1, 1, 1.10]);
  translate([66, 241, 0])
    cube([1, 1, 1.25]);
  translate([67, 241, 0])
    cube([1, 1, 1.14]);
  translate([68, 241, 0])
    cube([1, 1, 1.10]);
  translate([69, 241, 0])
    cube([1, 1, 1.14]);
  translate([70, 241, 0])
    cube([1, 1, 1.14]);
  translate([71, 241, 0])
    cube([1, 1, 1.14]);
  translate([72, 241, 0])
    cube([1, 1, 2.94]);
  translate([73, 241, 0])
    cube([1, 1, 1.33]);
  translate([74, 241, 0])
    cube([1, 1, 1.25]);
  translate([75, 241, 0])
    cube([1, 1, 0.82]);
  translate([76, 241, 0])
    cube([1, 1, 3.25]);
  translate([77, 241, 0])
    cube([1, 1, 1.49]);
  translate([78, 241, 0])
    cube([1, 1, 2.55]);
  translate([79, 241, 0])
    cube([1, 1, 2.71]);
  translate([80, 241, 0])
    cube([1, 1, 4.16]);
  translate([81, 241, 0])
    cube([1, 1, 3.29]);
  translate([82, 241, 0])
    cube([1, 1, 3.53]);
  translate([83, 241, 0])
    cube([1, 1, 4.59]);
  translate([84, 241, 0])
    cube([1, 1, 4.24]);
  translate([85, 241, 0])
    cube([1, 1, 4.75]);
  translate([86, 241, 0])
    cube([1, 1, 3.02]);
  translate([87, 241, 0])
    cube([1, 1, 3.06]);
  translate([88, 241, 0])
    cube([1, 1, 4.08]);
  translate([89, 241, 0])
    cube([1, 1, 3.25]);
  translate([90, 241, 0])
    cube([1, 1, 4.31]);
  translate([91, 241, 0])
    cube([1, 1, 4.12]);
  translate([92, 241, 0])
    cube([1, 1, 4.00]);
  translate([93, 241, 0])
    cube([1, 1, 3.92]);
  translate([94, 241, 0])
    cube([1, 1, 3.73]);
  translate([95, 241, 0])
    cube([1, 1, 3.65]);
  translate([96, 241, 0])
    cube([1, 1, 3.65]);
  translate([97, 241, 0])
    cube([1, 1, 3.61]);
  translate([98, 241, 0])
    cube([1, 1, 3.45]);
  translate([99, 241, 0])
    cube([1, 1, 3.41]);
  translate([100, 241, 0])
    cube([1, 1, 3.41]);
  translate([101, 241, 0])
    cube([1, 1, 3.37]);
  translate([102, 241, 0])
    cube([1, 1, 3.29]);
  translate([103, 241, 0])
    cube([1, 1, 3.49]);
  translate([104, 241, 0])
    cube([1, 1, 3.49]);
  translate([105, 241, 0])
    cube([1, 1, 3.65]);
  translate([106, 241, 0])
    cube([1, 1, 3.41]);
  translate([107, 241, 0])
    cube([1, 1, 2.12]);
  translate([108, 241, 0])
    cube([1, 1, 2.12]);
  translate([109, 241, 0])
    cube([1, 1, 2.12]);
  translate([110, 241, 0])
    cube([1, 1, 2.12]);
  translate([111, 241, 0])
    cube([1, 1, 2.12]);
  translate([112, 241, 0])
    cube([1, 1, 2.12]);
  translate([113, 241, 0])
    cube([1, 1, 2.08]);
  translate([114, 241, 0])
    cube([1, 1, 2.08]);
  translate([115, 241, 0])
    cube([1, 1, 2.12]);
  translate([116, 241, 0])
    cube([1, 1, 2.08]);
  translate([117, 241, 0])
    cube([1, 1, 2.16]);
  translate([118, 241, 0])
    cube([1, 1, 6.78]);
  translate([119, 241, 0])
    cube([1, 1, 6.98]);
  translate([120, 241, 0])
    cube([1, 1, 5.65]);
  translate([121, 241, 0])
    cube([1, 1, 1.65]);
  translate([122, 241, 0])
    cube([1, 1, 1.06]);
  translate([123, 241, 0])
    cube([1, 1, 1.29]);
  translate([124, 241, 0])
    cube([1, 1, 1.33]);
  translate([125, 241, 0])
    cube([1, 1, 1.88]);
  translate([126, 241, 0])
    cube([1, 1, 1.25]);
  translate([127, 241, 0])
    cube([1, 1, 1.45]);
  translate([128, 241, 0])
    cube([1, 1, 1.29]);
  translate([129, 241, 0])
    cube([1, 1, 1.25]);
  translate([130, 241, 0])
    cube([1, 1, 1.25]);
  translate([131, 241, 0])
    cube([1, 1, 1.22]);
  translate([132, 241, 0])
    cube([1, 1, 1.22]);
  translate([133, 241, 0])
    cube([1, 1, 1.22]);
  translate([134, 241, 0])
    cube([1, 1, 1.22]);
  translate([135, 241, 0])
    cube([1, 1, 1.22]);
  translate([136, 241, 0])
    cube([1, 1, 1.18]);
  translate([137, 241, 0])
    cube([1, 1, 0.90]);
  translate([138, 241, 0])
    cube([1, 1, 0.71]);
  translate([139, 241, 0])
    cube([1, 1, 0.59]);
  translate([140, 241, 0])
    cube([1, 1, 0.67]);
  translate([141, 241, 0])
    cube([1, 1, 1.69]);
  translate([142, 241, 0])
    cube([1, 1, 1.37]);
  translate([143, 241, 0])
    cube([1, 1, 1.45]);
  translate([144, 241, 0])
    cube([1, 1, 3.61]);
  translate([145, 241, 0])
    cube([1, 1, 4.08]);
  translate([146, 241, 0])
    cube([1, 1, 4.43]);
  translate([147, 241, 0])
    cube([1, 1, 4.67]);
  translate([148, 241, 0])
    cube([1, 1, 4.90]);
  translate([149, 241, 0])
    cube([1, 1, 5.06]);
  translate([150, 241, 0])
    cube([1, 1, 4.86]);
  translate([151, 241, 0])
    cube([1, 1, 4.59]);
  translate([152, 241, 0])
    cube([1, 1, 4.39]);
  translate([153, 241, 0])
    cube([1, 1, 4.24]);
  translate([154, 241, 0])
    cube([1, 1, 4.12]);
  translate([155, 241, 0])
    cube([1, 1, 4.16]);
  translate([156, 241, 0])
    cube([1, 1, 4.35]);
  translate([157, 241, 0])
    cube([1, 1, 4.35]);
  translate([158, 241, 0])
    cube([1, 1, 4.08]);
  translate([159, 241, 0])
    cube([1, 1, 4.08]);
  translate([160, 241, 0])
    cube([1, 1, 3.96]);
  translate([161, 241, 0])
    cube([1, 1, 4.08]);
  translate([162, 241, 0])
    cube([1, 1, 4.16]);
  translate([163, 241, 0])
    cube([1, 1, 3.84]);
  translate([164, 241, 0])
    cube([1, 1, 3.92]);
  translate([165, 241, 0])
    cube([1, 1, 3.25]);
  translate([166, 241, 0])
    cube([1, 1, 1.06]);
  translate([167, 241, 0])
    cube([1, 1, 0.59]);
  translate([168, 241, 0])
    cube([1, 1, 0.75]);
  translate([169, 241, 0])
    cube([1, 1, 0.71]);
  translate([170, 241, 0])
    cube([1, 1, 0.78]);
  translate([171, 241, 0])
    cube([1, 1, 1.14]);
  translate([172, 241, 0])
    cube([1, 1, 1.10]);
  translate([173, 241, 0])
    cube([1, 1, 0.98]);
  translate([174, 241, 0])
    cube([1, 1, 0.90]);
  translate([175, 241, 0])
    cube([1, 1, 0.47]);
  translate([176, 241, 0])
    cube([1, 1, 0.55]);
  translate([177, 241, 0])
    cube([1, 1, 0.27]);
  translate([178, 241, 0])
    cube([1, 1, 1.49]);
  translate([179, 241, 0])
    cube([1, 1, 2.43]);
  translate([180, 241, 0])
    cube([1, 1, 2.08]);
  translate([181, 241, 0])
    cube([1, 1, 2.08]);
  translate([182, 241, 0])
    cube([1, 1, 2.08]);
  translate([183, 241, 0])
    cube([1, 1, 2.08]);
  translate([184, 241, 0])
    cube([1, 1, 2.08]);
  translate([185, 241, 0])
    cube([1, 1, 2.08]);
  translate([186, 241, 0])
    cube([1, 1, 2.08]);
  translate([187, 241, 0])
    cube([1, 1, 2.08]);
  translate([188, 241, 0])
    cube([1, 1, 2.08]);
  translate([189, 241, 0])
    cube([1, 1, 2.08]);
  translate([190, 241, 0])
    cube([1, 1, 2.08]);
  translate([191, 241, 0])
    cube([1, 1, 2.12]);
  translate([192, 241, 0])
    cube([1, 1, 2.08]);
  translate([193, 241, 0])
    cube([1, 1, 2.08]);
  translate([194, 241, 0])
    cube([1, 1, 2.08]);
  translate([195, 241, 0])
    cube([1, 1, 2.08]);
  translate([196, 241, 0])
    cube([1, 1, 2.12]);
  translate([197, 241, 0])
    cube([1, 1, 2.08]);
  translate([198, 241, 0])
    cube([1, 1, 2.04]);
  translate([199, 241, 0])
    cube([1, 1, 2.12]);
  translate([200, 241, 0])
    cube([1, 1, 2.08]);
  translate([201, 241, 0])
    cube([1, 1, 2.08]);
  translate([202, 241, 0])
    cube([1, 1, 2.08]);
  translate([203, 241, 0])
    cube([1, 1, 2.08]);
  translate([204, 241, 0])
    cube([1, 1, 2.04]);
  translate([205, 241, 0])
    cube([1, 1, 2.08]);
  translate([206, 241, 0])
    cube([1, 1, 2.04]);
  translate([207, 241, 0])
    cube([1, 1, 2.08]);
  translate([208, 241, 0])
    cube([1, 1, 2.08]);
  translate([209, 241, 0])
    cube([1, 1, 2.08]);
  translate([210, 241, 0])
    cube([1, 1, 2.08]);
  translate([211, 241, 0])
    cube([1, 1, 2.08]);
  translate([212, 241, 0])
    cube([1, 1, 2.08]);
  translate([213, 241, 0])
    cube([1, 1, 2.08]);
  translate([214, 241, 0])
    cube([1, 1, 2.08]);
  translate([215, 241, 0])
    cube([1, 1, 2.08]);
  translate([216, 241, 0])
    cube([1, 1, 2.08]);
  translate([217, 241, 0])
    cube([1, 1, 2.08]);
  translate([218, 241, 0])
    cube([1, 1, 2.08]);
  translate([219, 241, 0])
    cube([1, 1, 2.08]);
  translate([220, 241, 0])
    cube([1, 1, 2.08]);
  translate([221, 241, 0])
    cube([1, 1, 2.08]);
  translate([222, 241, 0])
    cube([1, 1, 2.08]);
  translate([223, 241, 0])
    cube([1, 1, 2.08]);
  translate([224, 241, 0])
    cube([1, 1, 2.08]);
  translate([225, 241, 0])
    cube([1, 1, 2.08]);
  translate([226, 241, 0])
    cube([1, 1, 2.08]);
  translate([227, 241, 0])
    cube([1, 1, 2.08]);
  translate([228, 241, 0])
    cube([1, 1, 2.08]);
  translate([229, 241, 0])
    cube([1, 1, 2.08]);
  translate([230, 241, 0])
    cube([1, 1, 2.08]);
  translate([231, 241, 0])
    cube([1, 1, 2.08]);
  translate([232, 241, 0])
    cube([1, 1, 2.08]);
  translate([233, 241, 0])
    cube([1, 1, 2.08]);
  translate([234, 241, 0])
    cube([1, 1, 2.08]);
  translate([235, 241, 0])
    cube([1, 1, 2.04]);
  translate([236, 241, 0])
    cube([1, 1, 2.04]);
  translate([237, 241, 0])
    cube([1, 1, 2.08]);
  translate([238, 241, 0])
    cube([1, 1, 2.08]);
  translate([239, 241, 0])
    cube([1, 1, 2.08]);
  translate([240, 241, 0])
    cube([1, 1, 2.08]);
  translate([241, 241, 0])
    cube([1, 1, 2.08]);
  translate([242, 241, 0])
    cube([1, 1, 2.08]);
  translate([243, 241, 0])
    cube([1, 1, 2.04]);
  translate([244, 241, 0])
    cube([1, 1, 2.04]);
  translate([245, 241, 0])
    cube([1, 1, 2.08]);
  translate([246, 241, 0])
    cube([1, 1, 2.04]);
  translate([0, 242, 0])
    cube([1, 1, 2.27]);
  translate([1, 242, 0])
    cube([1, 1, 2.27]);
  translate([2, 242, 0])
    cube([1, 1, 2.27]);
  translate([3, 242, 0])
    cube([1, 1, 2.27]);
  translate([4, 242, 0])
    cube([1, 1, 2.27]);
  translate([5, 242, 0])
    cube([1, 1, 2.31]);
  translate([6, 242, 0])
    cube([1, 1, 2.27]);
  translate([7, 242, 0])
    cube([1, 1, 2.27]);
  translate([8, 242, 0])
    cube([1, 1, 2.27]);
  translate([9, 242, 0])
    cube([1, 1, 2.27]);
  translate([10, 242, 0])
    cube([1, 1, 2.27]);
  translate([11, 242, 0])
    cube([1, 1, 2.27]);
  translate([12, 242, 0])
    cube([1, 1, 2.27]);
  translate([13, 242, 0])
    cube([1, 1, 2.27]);
  translate([14, 242, 0])
    cube([1, 1, 2.27]);
  translate([15, 242, 0])
    cube([1, 1, 2.27]);
  translate([16, 242, 0])
    cube([1, 1, 2.27]);
  translate([17, 242, 0])
    cube([1, 1, 2.27]);
  translate([18, 242, 0])
    cube([1, 1, 2.27]);
  translate([19, 242, 0])
    cube([1, 1, 2.27]);
  translate([20, 242, 0])
    cube([1, 1, 2.27]);
  translate([21, 242, 0])
    cube([1, 1, 2.27]);
  translate([22, 242, 0])
    cube([1, 1, 2.27]);
  translate([23, 242, 0])
    cube([1, 1, 2.27]);
  translate([24, 242, 0])
    cube([1, 1, 2.27]);
  translate([25, 242, 0])
    cube([1, 1, 2.31]);
  translate([26, 242, 0])
    cube([1, 1, 2.35]);
  translate([27, 242, 0])
    cube([1, 1, 2.27]);
  translate([28, 242, 0])
    cube([1, 1, 2.27]);
  translate([29, 242, 0])
    cube([1, 1, 2.27]);
  translate([30, 242, 0])
    cube([1, 1, 2.27]);
  translate([31, 242, 0])
    cube([1, 1, 2.27]);
  translate([32, 242, 0])
    cube([1, 1, 2.27]);
  translate([33, 242, 0])
    cube([1, 1, 2.27]);
  translate([34, 242, 0])
    cube([1, 1, 2.27]);
  translate([35, 242, 0])
    cube([1, 1, 2.27]);
  translate([36, 242, 0])
    cube([1, 1, 2.27]);
  translate([37, 242, 0])
    cube([1, 1, 2.27]);
  translate([38, 242, 0])
    cube([1, 1, 2.24]);
  translate([39, 242, 0])
    cube([1, 1, 2.24]);
  translate([40, 242, 0])
    cube([1, 1, 2.24]);
  translate([41, 242, 0])
    cube([1, 1, 2.24]);
  translate([42, 242, 0])
    cube([1, 1, 2.24]);
  translate([43, 242, 0])
    cube([1, 1, 2.27]);
  translate([44, 242, 0])
    cube([1, 1, 2.12]);
  translate([45, 242, 0])
    cube([1, 1, 2.39]);
  translate([46, 242, 0])
    cube([1, 1, 9.02]);
  translate([47, 242, 0])
    cube([1, 1, 9.53]);
  translate([48, 242, 0])
    cube([1, 1, 8.94]);
  translate([49, 242, 0])
    cube([1, 1, 1.22]);
  translate([50, 242, 0])
    cube([1, 1, 0.98]);
  translate([51, 242, 0])
    cube([1, 1, 1.41]);
  translate([52, 242, 0])
    cube([1, 1, 1.65]);
  translate([53, 242, 0])
    cube([1, 1, 5.14]);
  translate([54, 242, 0])
    cube([1, 1, 5.57]);
  translate([55, 242, 0])
    cube([1, 1, 1.57]);
  translate([56, 242, 0])
    cube([1, 1, 1.49]);
  translate([57, 242, 0])
    cube([1, 1, 1.18]);
  translate([58, 242, 0])
    cube([1, 1, 0.67]);
  translate([59, 242, 0])
    cube([1, 1, 0.04]);
  translate([60, 242, 0])
    cube([1, 1, 0.12]);
  translate([61, 242, 0])
    cube([1, 1, 1.18]);
  translate([62, 242, 0])
    cube([1, 1, 1.10]);
  translate([63, 242, 0])
    cube([1, 1, 1.14]);
  translate([64, 242, 0])
    cube([1, 1, 1.14]);
  translate([65, 242, 0])
    cube([1, 1, 1.10]);
  translate([66, 242, 0])
    cube([1, 1, 1.18]);
  translate([67, 242, 0])
    cube([1, 1, 1.14]);
  translate([68, 242, 0])
    cube([1, 1, 1.14]);
  translate([69, 242, 0])
    cube([1, 1, 1.14]);
  translate([70, 242, 0])
    cube([1, 1, 1.18]);
  translate([71, 242, 0])
    cube([1, 1, 1.18]);
  translate([72, 242, 0])
    cube([1, 1, 2.75]);
  translate([73, 242, 0])
    cube([1, 1, 1.29]);
  translate([74, 242, 0])
    cube([1, 1, 1.53]);
  translate([75, 242, 0])
    cube([1, 1, 1.33]);
  translate([76, 242, 0])
    cube([1, 1, 2.16]);
  translate([77, 242, 0])
    cube([1, 1, 2.67]);
  translate([78, 242, 0])
    cube([1, 1, 2.59]);
  translate([79, 242, 0])
    cube([1, 1, 1.33]);
  translate([80, 242, 0])
    cube([1, 1, 2.63]);
  translate([81, 242, 0])
    cube([1, 1, 2.43]);
  translate([82, 242, 0])
    cube([1, 1, 2.94]);
  translate([83, 242, 0])
    cube([1, 1, 3.88]);
  translate([84, 242, 0])
    cube([1, 1, 1.53]);
  translate([85, 242, 0])
    cube([1, 1, 5.92]);
  translate([86, 242, 0])
    cube([1, 1, 5.61]);
  translate([87, 242, 0])
    cube([1, 1, 2.47]);
  translate([88, 242, 0])
    cube([1, 1, 5.37]);
  translate([89, 242, 0])
    cube([1, 1, 1.80]);
  translate([90, 242, 0])
    cube([1, 1, 1.45]);
  translate([91, 242, 0])
    cube([1, 1, 3.69]);
  translate([92, 242, 0])
    cube([1, 1, 3.80]);
  translate([93, 242, 0])
    cube([1, 1, 3.88]);
  translate([94, 242, 0])
    cube([1, 1, 3.80]);
  translate([95, 242, 0])
    cube([1, 1, 3.65]);
  translate([96, 242, 0])
    cube([1, 1, 3.65]);
  translate([97, 242, 0])
    cube([1, 1, 3.57]);
  translate([98, 242, 0])
    cube([1, 1, 3.49]);
  translate([99, 242, 0])
    cube([1, 1, 3.41]);
  translate([100, 242, 0])
    cube([1, 1, 3.37]);
  translate([101, 242, 0])
    cube([1, 1, 3.37]);
  translate([102, 242, 0])
    cube([1, 1, 3.41]);
  translate([103, 242, 0])
    cube([1, 1, 3.49]);
  translate([104, 242, 0])
    cube([1, 1, 3.53]);
  translate([105, 242, 0])
    cube([1, 1, 3.61]);
  translate([106, 242, 0])
    cube([1, 1, 2.12]);
  translate([107, 242, 0])
    cube([1, 1, 2.12]);
  translate([108, 242, 0])
    cube([1, 1, 2.12]);
  translate([109, 242, 0])
    cube([1, 1, 2.12]);
  translate([110, 242, 0])
    cube([1, 1, 2.12]);
  translate([111, 242, 0])
    cube([1, 1, 2.12]);
  translate([112, 242, 0])
    cube([1, 1, 2.08]);
  translate([113, 242, 0])
    cube([1, 1, 2.12]);
  translate([114, 242, 0])
    cube([1, 1, 2.12]);
  translate([115, 242, 0])
    cube([1, 1, 2.08]);
  translate([116, 242, 0])
    cube([1, 1, 1.76]);
  translate([117, 242, 0])
    cube([1, 1, 2.08]);
  translate([118, 242, 0])
    cube([1, 1, 6.82]);
  translate([119, 242, 0])
    cube([1, 1, 2.51]);
  translate([120, 242, 0])
    cube([1, 1, 2.20]);
  translate([121, 242, 0])
    cube([1, 1, 2.31]);
  translate([122, 242, 0])
    cube([1, 1, 1.14]);
  translate([123, 242, 0])
    cube([1, 1, 1.29]);
  translate([124, 242, 0])
    cube([1, 1, 1.29]);
  translate([125, 242, 0])
    cube([1, 1, 1.33]);
  translate([126, 242, 0])
    cube([1, 1, 1.29]);
  translate([127, 242, 0])
    cube([1, 1, 1.33]);
  translate([128, 242, 0])
    cube([1, 1, 1.33]);
  translate([129, 242, 0])
    cube([1, 1, 1.29]);
  translate([130, 242, 0])
    cube([1, 1, 1.22]);
  translate([131, 242, 0])
    cube([1, 1, 1.18]);
  translate([132, 242, 0])
    cube([1, 1, 1.10]);
  translate([133, 242, 0])
    cube([1, 1, 1.25]);
  translate([134, 242, 0])
    cube([1, 1, 1.02]);
  translate([135, 242, 0])
    cube([1, 1, 0.78]);
  translate([136, 242, 0])
    cube([1, 1, 1.02]);
  translate([137, 242, 0])
    cube([1, 1, 1.02]);
  translate([138, 242, 0])
    cube([1, 1, 1.02]);
  translate([139, 242, 0])
    cube([1, 1, 1.25]);
  translate([140, 242, 0])
    cube([1, 1, 1.29]);
  translate([141, 242, 0])
    cube([1, 1, 2.63]);
  translate([142, 242, 0])
    cube([1, 1, 3.25]);
  translate([143, 242, 0])
    cube([1, 1, 3.61]);
  translate([144, 242, 0])
    cube([1, 1, 3.73]);
  translate([145, 242, 0])
    cube([1, 1, 3.92]);
  translate([146, 242, 0])
    cube([1, 1, 4.27]);
  translate([147, 242, 0])
    cube([1, 1, 4.63]);
  translate([148, 242, 0])
    cube([1, 1, 4.86]);
  translate([149, 242, 0])
    cube([1, 1, 4.98]);
  translate([150, 242, 0])
    cube([1, 1, 4.75]);
  translate([151, 242, 0])
    cube([1, 1, 4.51]);
  translate([152, 242, 0])
    cube([1, 1, 4.39]);
  translate([153, 242, 0])
    cube([1, 1, 4.20]);
  translate([154, 242, 0])
    cube([1, 1, 4.04]);
  translate([155, 242, 0])
    cube([1, 1, 4.08]);
  translate([156, 242, 0])
    cube([1, 1, 4.20]);
  translate([157, 242, 0])
    cube([1, 1, 4.24]);
  translate([158, 242, 0])
    cube([1, 1, 4.00]);
  translate([159, 242, 0])
    cube([1, 1, 4.12]);
  translate([160, 242, 0])
    cube([1, 1, 4.08]);
  translate([161, 242, 0])
    cube([1, 1, 4.08]);
  translate([162, 242, 0])
    cube([1, 1, 4.12]);
  translate([163, 242, 0])
    cube([1, 1, 4.12]);
  translate([164, 242, 0])
    cube([1, 1, 3.88]);
  translate([165, 242, 0])
    cube([1, 1, 3.37]);
  translate([166, 242, 0])
    cube([1, 1, 2.16]);
  translate([167, 242, 0])
    cube([1, 1, 0.78]);
  translate([168, 242, 0])
    cube([1, 1, 0.75]);
  translate([169, 242, 0])
    cube([1, 1, 1.10]);
  translate([170, 242, 0])
    cube([1, 1, 1.49]);
  translate([171, 242, 0])
    cube([1, 1, 0.27]);
  translate([172, 242, 0])
    cube([1, 1, 0.35]);
  translate([173, 242, 0])
    cube([1, 1, 0.24]);
  translate([174, 242, 0])
    cube([1, 1, 0.31]);
  translate([175, 242, 0])
    cube([1, 1, 0.20]);
  translate([176, 242, 0])
    cube([1, 1, 0.59]);
  translate([177, 242, 0])
    cube([1, 1, 1.18]);
  translate([178, 242, 0])
    cube([1, 1, 2.00]);
  translate([179, 242, 0])
    cube([1, 1, 2.08]);
  translate([180, 242, 0])
    cube([1, 1, 2.04]);
  translate([181, 242, 0])
    cube([1, 1, 2.08]);
  translate([182, 242, 0])
    cube([1, 1, 2.08]);
  translate([183, 242, 0])
    cube([1, 1, 2.08]);
  translate([184, 242, 0])
    cube([1, 1, 2.08]);
  translate([185, 242, 0])
    cube([1, 1, 2.08]);
  translate([186, 242, 0])
    cube([1, 1, 2.08]);
  translate([187, 242, 0])
    cube([1, 1, 2.08]);
  translate([188, 242, 0])
    cube([1, 1, 2.08]);
  translate([189, 242, 0])
    cube([1, 1, 2.08]);
  translate([190, 242, 0])
    cube([1, 1, 2.08]);
  translate([191, 242, 0])
    cube([1, 1, 2.08]);
  translate([192, 242, 0])
    cube([1, 1, 2.12]);
  translate([193, 242, 0])
    cube([1, 1, 2.08]);
  translate([194, 242, 0])
    cube([1, 1, 2.08]);
  translate([195, 242, 0])
    cube([1, 1, 2.04]);
  translate([196, 242, 0])
    cube([1, 1, 2.08]);
  translate([197, 242, 0])
    cube([1, 1, 2.08]);
  translate([198, 242, 0])
    cube([1, 1, 2.16]);
  translate([199, 242, 0])
    cube([1, 1, 2.16]);
  translate([200, 242, 0])
    cube([1, 1, 2.12]);
  translate([201, 242, 0])
    cube([1, 1, 2.12]);
  translate([202, 242, 0])
    cube([1, 1, 2.04]);
  translate([203, 242, 0])
    cube([1, 1, 2.08]);
  translate([204, 242, 0])
    cube([1, 1, 2.04]);
  translate([205, 242, 0])
    cube([1, 1, 2.08]);
  translate([206, 242, 0])
    cube([1, 1, 2.04]);
  translate([207, 242, 0])
    cube([1, 1, 2.04]);
  translate([208, 242, 0])
    cube([1, 1, 2.08]);
  translate([209, 242, 0])
    cube([1, 1, 2.08]);
  translate([210, 242, 0])
    cube([1, 1, 2.08]);
  translate([211, 242, 0])
    cube([1, 1, 2.12]);
  translate([212, 242, 0])
    cube([1, 1, 2.12]);
  translate([213, 242, 0])
    cube([1, 1, 2.12]);
  translate([214, 242, 0])
    cube([1, 1, 2.08]);
  translate([215, 242, 0])
    cube([1, 1, 2.08]);
  translate([216, 242, 0])
    cube([1, 1, 2.12]);
  translate([217, 242, 0])
    cube([1, 1, 2.08]);
  translate([218, 242, 0])
    cube([1, 1, 2.08]);
  translate([219, 242, 0])
    cube([1, 1, 2.08]);
  translate([220, 242, 0])
    cube([1, 1, 2.08]);
  translate([221, 242, 0])
    cube([1, 1, 2.08]);
  translate([222, 242, 0])
    cube([1, 1, 2.08]);
  translate([223, 242, 0])
    cube([1, 1, 2.08]);
  translate([224, 242, 0])
    cube([1, 1, 2.08]);
  translate([225, 242, 0])
    cube([1, 1, 2.08]);
  translate([226, 242, 0])
    cube([1, 1, 2.08]);
  translate([227, 242, 0])
    cube([1, 1, 2.08]);
  translate([228, 242, 0])
    cube([1, 1, 2.08]);
  translate([229, 242, 0])
    cube([1, 1, 2.08]);
  translate([230, 242, 0])
    cube([1, 1, 2.08]);
  translate([231, 242, 0])
    cube([1, 1, 2.08]);
  translate([232, 242, 0])
    cube([1, 1, 2.08]);
  translate([233, 242, 0])
    cube([1, 1, 2.08]);
  translate([234, 242, 0])
    cube([1, 1, 2.08]);
  translate([235, 242, 0])
    cube([1, 1, 2.08]);
  translate([236, 242, 0])
    cube([1, 1, 2.12]);
  translate([237, 242, 0])
    cube([1, 1, 2.08]);
  translate([238, 242, 0])
    cube([1, 1, 2.08]);
  translate([239, 242, 0])
    cube([1, 1, 2.08]);
  translate([240, 242, 0])
    cube([1, 1, 2.08]);
  translate([241, 242, 0])
    cube([1, 1, 2.08]);
  translate([242, 242, 0])
    cube([1, 1, 2.08]);
  translate([243, 242, 0])
    cube([1, 1, 2.08]);
  translate([244, 242, 0])
    cube([1, 1, 2.08]);
  translate([245, 242, 0])
    cube([1, 1, 2.08]);
  translate([246, 242, 0])
    cube([1, 1, 2.04]);
  translate([0, 243, 0])
    cube([1, 1, 2.27]);
  translate([1, 243, 0])
    cube([1, 1, 2.27]);
  translate([2, 243, 0])
    cube([1, 1, 2.27]);
  translate([3, 243, 0])
    cube([1, 1, 2.27]);
  translate([4, 243, 0])
    cube([1, 1, 2.27]);
  translate([5, 243, 0])
    cube([1, 1, 2.31]);
  translate([6, 243, 0])
    cube([1, 1, 2.27]);
  translate([7, 243, 0])
    cube([1, 1, 2.27]);
  translate([8, 243, 0])
    cube([1, 1, 2.27]);
  translate([9, 243, 0])
    cube([1, 1, 2.27]);
  translate([10, 243, 0])
    cube([1, 1, 2.27]);
  translate([11, 243, 0])
    cube([1, 1, 2.27]);
  translate([12, 243, 0])
    cube([1, 1, 2.27]);
  translate([13, 243, 0])
    cube([1, 1, 2.27]);
  translate([14, 243, 0])
    cube([1, 1, 2.27]);
  translate([15, 243, 0])
    cube([1, 1, 2.27]);
  translate([16, 243, 0])
    cube([1, 1, 2.27]);
  translate([17, 243, 0])
    cube([1, 1, 2.27]);
  translate([18, 243, 0])
    cube([1, 1, 2.27]);
  translate([19, 243, 0])
    cube([1, 1, 2.27]);
  translate([20, 243, 0])
    cube([1, 1, 2.27]);
  translate([21, 243, 0])
    cube([1, 1, 2.27]);
  translate([22, 243, 0])
    cube([1, 1, 2.27]);
  translate([23, 243, 0])
    cube([1, 1, 2.27]);
  translate([24, 243, 0])
    cube([1, 1, 2.27]);
  translate([25, 243, 0])
    cube([1, 1, 2.24]);
  translate([26, 243, 0])
    cube([1, 1, 2.27]);
  translate([27, 243, 0])
    cube([1, 1, 2.27]);
  translate([28, 243, 0])
    cube([1, 1, 2.27]);
  translate([29, 243, 0])
    cube([1, 1, 2.27]);
  translate([30, 243, 0])
    cube([1, 1, 2.27]);
  translate([31, 243, 0])
    cube([1, 1, 2.27]);
  translate([32, 243, 0])
    cube([1, 1, 2.27]);
  translate([33, 243, 0])
    cube([1, 1, 2.27]);
  translate([34, 243, 0])
    cube([1, 1, 2.27]);
  translate([35, 243, 0])
    cube([1, 1, 2.27]);
  translate([36, 243, 0])
    cube([1, 1, 2.27]);
  translate([37, 243, 0])
    cube([1, 1, 2.27]);
  translate([38, 243, 0])
    cube([1, 1, 2.24]);
  translate([39, 243, 0])
    cube([1, 1, 2.24]);
  translate([40, 243, 0])
    cube([1, 1, 2.24]);
  translate([41, 243, 0])
    cube([1, 1, 2.24]);
  translate([42, 243, 0])
    cube([1, 1, 2.24]);
  translate([43, 243, 0])
    cube([1, 1, 2.27]);
  translate([44, 243, 0])
    cube([1, 1, 1.84]);
  translate([45, 243, 0])
    cube([1, 1, 2.24]);
  translate([46, 243, 0])
    cube([1, 1, 1.61]);
  translate([47, 243, 0])
    cube([1, 1, 1.33]);
  translate([48, 243, 0])
    cube([1, 1, 1.25]);
  translate([49, 243, 0])
    cube([1, 1, 1.06]);
  translate([50, 243, 0])
    cube([1, 1, 0.71]);
  translate([51, 243, 0])
    cube([1, 1, 0.51]);
  translate([52, 243, 0])
    cube([1, 1, 0.78]);
  translate([53, 243, 0])
    cube([1, 1, 3.84]);
  translate([54, 243, 0])
    cube([1, 1, 4.90]);
  translate([55, 243, 0])
    cube([1, 1, 2.20]);
  translate([56, 243, 0])
    cube([1, 1, 1.53]);
  translate([57, 243, 0])
    cube([1, 1, 1.06]);
  translate([58, 243, 0])
    cube([1, 1, 2.27]);
  translate([59, 243, 0])
    cube([1, 1, 0.67]);
  translate([60, 243, 0])
    cube([1, 1, 0.71]);
  translate([61, 243, 0])
    cube([1, 1, 1.65]);
  translate([62, 243, 0])
    cube([1, 1, 1.10]);
  translate([63, 243, 0])
    cube([1, 1, 1.14]);
  translate([64, 243, 0])
    cube([1, 1, 1.14]);
  translate([65, 243, 0])
    cube([1, 1, 1.10]);
  translate([66, 243, 0])
    cube([1, 1, 1.18]);
  translate([67, 243, 0])
    cube([1, 1, 1.14]);
  translate([68, 243, 0])
    cube([1, 1, 1.06]);
  translate([69, 243, 0])
    cube([1, 1, 1.18]);
  translate([70, 243, 0])
    cube([1, 1, 1.18]);
  translate([71, 243, 0])
    cube([1, 1, 1.18]);
  translate([72, 243, 0])
    cube([1, 1, 1.41]);
  translate([73, 243, 0])
    cube([1, 1, 1.69]);
  translate([74, 243, 0])
    cube([1, 1, 1.10]);
  translate([75, 243, 0])
    cube([1, 1, 0.31]);
  translate([76, 243, 0])
    cube([1, 1, 0.94]);
  translate([77, 243, 0])
    cube([1, 1, 1.84]);
  translate([78, 243, 0])
    cube([1, 1, 2.47]);
  translate([79, 243, 0])
    cube([1, 1, 3.14]);
  translate([80, 243, 0])
    cube([1, 1, 2.39]);
  translate([81, 243, 0])
    cube([1, 1, 2.43]);
  translate([82, 243, 0])
    cube([1, 1, 3.73]);
  translate([83, 243, 0])
    cube([1, 1, 2.39]);
  translate([84, 243, 0])
    cube([1, 1, 1.02]);
  translate([85, 243, 0])
    cube([1, 1, 5.76]);
  translate([86, 243, 0])
    cube([1, 1, 5.96]);
  translate([87, 243, 0])
    cube([1, 1, 4.71]);
  translate([88, 243, 0])
    cube([1, 1, 2.12]);
  translate([89, 243, 0])
    cube([1, 1, 2.08]);
  translate([90, 243, 0])
    cube([1, 1, 4.55]);
  translate([91, 243, 0])
    cube([1, 1, 1.53]);
  translate([92, 243, 0])
    cube([1, 1, 3.73]);
  translate([93, 243, 0])
    cube([1, 1, 3.69]);
  translate([94, 243, 0])
    cube([1, 1, 3.57]);
  translate([95, 243, 0])
    cube([1, 1, 3.61]);
  translate([96, 243, 0])
    cube([1, 1, 3.65]);
  translate([97, 243, 0])
    cube([1, 1, 3.45]);
  translate([98, 243, 0])
    cube([1, 1, 3.37]);
  translate([99, 243, 0])
    cube([1, 1, 3.41]);
  translate([100, 243, 0])
    cube([1, 1, 3.37]);
  translate([101, 243, 0])
    cube([1, 1, 3.37]);
  translate([102, 243, 0])
    cube([1, 1, 3.37]);
  translate([103, 243, 0])
    cube([1, 1, 3.57]);
  translate([104, 243, 0])
    cube([1, 1, 3.49]);
  translate([105, 243, 0])
    cube([1, 1, 3.33]);
  translate([106, 243, 0])
    cube([1, 1, 2.16]);
  translate([107, 243, 0])
    cube([1, 1, 2.12]);
  translate([108, 243, 0])
    cube([1, 1, 2.12]);
  translate([109, 243, 0])
    cube([1, 1, 2.12]);
  translate([110, 243, 0])
    cube([1, 1, 2.12]);
  translate([111, 243, 0])
    cube([1, 1, 2.12]);
  translate([112, 243, 0])
    cube([1, 1, 2.16]);
  translate([113, 243, 0])
    cube([1, 1, 2.12]);
  translate([114, 243, 0])
    cube([1, 1, 2.12]);
  translate([115, 243, 0])
    cube([1, 1, 2.08]);
  translate([116, 243, 0])
    cube([1, 1, 1.92]);
  translate([117, 243, 0])
    cube([1, 1, 1.88]);
  translate([118, 243, 0])
    cube([1, 1, 2.31]);
  translate([119, 243, 0])
    cube([1, 1, 2.86]);
  translate([120, 243, 0])
    cube([1, 1, 7.49]);
  translate([121, 243, 0])
    cube([1, 1, 3.88]);
  translate([122, 243, 0])
    cube([1, 1, 1.37]);
  translate([123, 243, 0])
    cube([1, 1, 1.33]);
  translate([124, 243, 0])
    cube([1, 1, 1.29]);
  translate([125, 243, 0])
    cube([1, 1, 1.33]);
  translate([126, 243, 0])
    cube([1, 1, 1.29]);
  translate([127, 243, 0])
    cube([1, 1, 1.33]);
  translate([128, 243, 0])
    cube([1, 1, 1.25]);
  translate([129, 243, 0])
    cube([1, 1, 1.29]);
  translate([130, 243, 0])
    cube([1, 1, 1.22]);
  translate([131, 243, 0])
    cube([1, 1, 1.18]);
  translate([132, 243, 0])
    cube([1, 1, 0.86]);
  translate([133, 243, 0])
    cube([1, 1, 0.98]);
  translate([134, 243, 0])
    cube([1, 1, 1.02]);
  translate([135, 243, 0])
    cube([1, 1, 1.10]);
  translate([136, 243, 0])
    cube([1, 1, 0.98]);
  translate([137, 243, 0])
    cube([1, 1, 1.02]);
  translate([138, 243, 0])
    cube([1, 1, 2.24]);
  translate([139, 243, 0])
    cube([1, 1, 2.94]);
  translate([140, 243, 0])
    cube([1, 1, 3.22]);
  translate([141, 243, 0])
    cube([1, 1, 3.22]);
  translate([142, 243, 0])
    cube([1, 1, 3.53]);
  translate([143, 243, 0])
    cube([1, 1, 3.49]);
  translate([144, 243, 0])
    cube([1, 1, 3.73]);
  translate([145, 243, 0])
    cube([1, 1, 3.88]);
  translate([146, 243, 0])
    cube([1, 1, 4.24]);
  translate([147, 243, 0])
    cube([1, 1, 4.55]);
  translate([148, 243, 0])
    cube([1, 1, 4.75]);
  translate([149, 243, 0])
    cube([1, 1, 4.90]);
  translate([150, 243, 0])
    cube([1, 1, 4.59]);
  translate([151, 243, 0])
    cube([1, 1, 4.35]);
  translate([152, 243, 0])
    cube([1, 1, 4.27]);
  translate([153, 243, 0])
    cube([1, 1, 4.16]);
  translate([154, 243, 0])
    cube([1, 1, 4.04]);
  translate([155, 243, 0])
    cube([1, 1, 4.08]);
  translate([156, 243, 0])
    cube([1, 1, 4.24]);
  translate([157, 243, 0])
    cube([1, 1, 4.16]);
  translate([158, 243, 0])
    cube([1, 1, 4.00]);
  translate([159, 243, 0])
    cube([1, 1, 4.12]);
  translate([160, 243, 0])
    cube([1, 1, 4.24]);
  translate([161, 243, 0])
    cube([1, 1, 4.27]);
  translate([162, 243, 0])
    cube([1, 1, 4.59]);
  translate([163, 243, 0])
    cube([1, 1, 4.67]);
  translate([164, 243, 0])
    cube([1, 1, 4.43]);
  translate([165, 243, 0])
    cube([1, 1, 3.61]);
  translate([166, 243, 0])
    cube([1, 1, 2.00]);
  translate([167, 243, 0])
    cube([1, 1, 0.98]);
  translate([168, 243, 0])
    cube([1, 1, 1.18]);
  translate([169, 243, 0])
    cube([1, 1, 0.82]);
  translate([170, 243, 0])
    cube([1, 1, 0.71]);
  translate([171, 243, 0])
    cube([1, 1, 0.67]);
  translate([172, 243, 0])
    cube([1, 1, 0.31]);
  translate([173, 243, 0])
    cube([1, 1, 0.78]);
  translate([174, 243, 0])
    cube([1, 1, 1.14]);
  translate([175, 243, 0])
    cube([1, 1, 1.29]);
  translate([176, 243, 0])
    cube([1, 1, 1.92]);
  translate([177, 243, 0])
    cube([1, 1, 2.00]);
  translate([178, 243, 0])
    cube([1, 1, 2.04]);
  translate([179, 243, 0])
    cube([1, 1, 2.12]);
  translate([180, 243, 0])
    cube([1, 1, 2.04]);
  translate([181, 243, 0])
    cube([1, 1, 2.08]);
  translate([182, 243, 0])
    cube([1, 1, 2.08]);
  translate([183, 243, 0])
    cube([1, 1, 2.08]);
  translate([184, 243, 0])
    cube([1, 1, 2.08]);
  translate([185, 243, 0])
    cube([1, 1, 2.08]);
  translate([186, 243, 0])
    cube([1, 1, 2.08]);
  translate([187, 243, 0])
    cube([1, 1, 2.08]);
  translate([188, 243, 0])
    cube([1, 1, 2.08]);
  translate([189, 243, 0])
    cube([1, 1, 2.08]);
  translate([190, 243, 0])
    cube([1, 1, 2.08]);
  translate([191, 243, 0])
    cube([1, 1, 2.08]);
  translate([192, 243, 0])
    cube([1, 1, 2.12]);
  translate([193, 243, 0])
    cube([1, 1, 2.16]);
  translate([194, 243, 0])
    cube([1, 1, 2.16]);
  translate([195, 243, 0])
    cube([1, 1, 2.04]);
  translate([196, 243, 0])
    cube([1, 1, 2.08]);
  translate([197, 243, 0])
    cube([1, 1, 2.08]);
  translate([198, 243, 0])
    cube([1, 1, 2.16]);
  translate([199, 243, 0])
    cube([1, 1, 2.16]);
  translate([200, 243, 0])
    cube([1, 1, 2.08]);
  translate([201, 243, 0])
    cube([1, 1, 2.12]);
  translate([202, 243, 0])
    cube([1, 1, 2.04]);
  translate([203, 243, 0])
    cube([1, 1, 2.08]);
  translate([204, 243, 0])
    cube([1, 1, 2.04]);
  translate([205, 243, 0])
    cube([1, 1, 2.08]);
  translate([206, 243, 0])
    cube([1, 1, 2.04]);
  translate([207, 243, 0])
    cube([1, 1, 2.04]);
  translate([208, 243, 0])
    cube([1, 1, 2.16]);
  translate([209, 243, 0])
    cube([1, 1, 2.16]);
  translate([210, 243, 0])
    cube([1, 1, 2.16]);
  translate([211, 243, 0])
    cube([1, 1, 2.12]);
  translate([212, 243, 0])
    cube([1, 1, 2.12]);
  translate([213, 243, 0])
    cube([1, 1, 2.12]);
  translate([214, 243, 0])
    cube([1, 1, 2.08]);
  translate([215, 243, 0])
    cube([1, 1, 2.08]);
  translate([216, 243, 0])
    cube([1, 1, 2.12]);
  translate([217, 243, 0])
    cube([1, 1, 2.08]);
  translate([218, 243, 0])
    cube([1, 1, 2.08]);
  translate([219, 243, 0])
    cube([1, 1, 2.16]);
  translate([220, 243, 0])
    cube([1, 1, 2.08]);
  translate([221, 243, 0])
    cube([1, 1, 2.08]);
  translate([222, 243, 0])
    cube([1, 1, 2.08]);
  translate([223, 243, 0])
    cube([1, 1, 2.08]);
  translate([224, 243, 0])
    cube([1, 1, 2.08]);
  translate([225, 243, 0])
    cube([1, 1, 2.08]);
  translate([226, 243, 0])
    cube([1, 1, 2.08]);
  translate([227, 243, 0])
    cube([1, 1, 2.08]);
  translate([228, 243, 0])
    cube([1, 1, 2.08]);
  translate([229, 243, 0])
    cube([1, 1, 2.08]);
  translate([230, 243, 0])
    cube([1, 1, 2.08]);
  translate([231, 243, 0])
    cube([1, 1, 2.08]);
  translate([232, 243, 0])
    cube([1, 1, 2.08]);
  translate([233, 243, 0])
    cube([1, 1, 2.08]);
  translate([234, 243, 0])
    cube([1, 1, 2.08]);
  translate([235, 243, 0])
    cube([1, 1, 2.08]);
  translate([236, 243, 0])
    cube([1, 1, 2.12]);
  translate([237, 243, 0])
    cube([1, 1, 2.08]);
  translate([238, 243, 0])
    cube([1, 1, 2.08]);
  translate([239, 243, 0])
    cube([1, 1, 2.08]);
  translate([240, 243, 0])
    cube([1, 1, 2.08]);
  translate([241, 243, 0])
    cube([1, 1, 2.08]);
  translate([242, 243, 0])
    cube([1, 1, 2.08]);
  translate([243, 243, 0])
    cube([1, 1, 2.08]);
  translate([244, 243, 0])
    cube([1, 1, 2.08]);
  translate([245, 243, 0])
    cube([1, 1, 2.08]);
  translate([246, 243, 0])
    cube([1, 1, 2.04]);
  translate([0, 244, 0])
    cube([1, 1, 2.27]);
  translate([1, 244, 0])
    cube([1, 1, 2.27]);
  translate([2, 244, 0])
    cube([1, 1, 2.27]);
  translate([3, 244, 0])
    cube([1, 1, 2.27]);
  translate([4, 244, 0])
    cube([1, 1, 2.27]);
  translate([5, 244, 0])
    cube([1, 1, 2.27]);
  translate([6, 244, 0])
    cube([1, 1, 2.27]);
  translate([7, 244, 0])
    cube([1, 1, 2.27]);
  translate([8, 244, 0])
    cube([1, 1, 2.27]);
  translate([9, 244, 0])
    cube([1, 1, 2.31]);
  translate([10, 244, 0])
    cube([1, 1, 2.31]);
  translate([11, 244, 0])
    cube([1, 1, 2.27]);
  translate([12, 244, 0])
    cube([1, 1, 2.27]);
  translate([13, 244, 0])
    cube([1, 1, 2.27]);
  translate([14, 244, 0])
    cube([1, 1, 2.27]);
  translate([15, 244, 0])
    cube([1, 1, 2.27]);
  translate([16, 244, 0])
    cube([1, 1, 2.27]);
  translate([17, 244, 0])
    cube([1, 1, 2.27]);
  translate([18, 244, 0])
    cube([1, 1, 2.27]);
  translate([19, 244, 0])
    cube([1, 1, 2.27]);
  translate([20, 244, 0])
    cube([1, 1, 2.27]);
  translate([21, 244, 0])
    cube([1, 1, 2.27]);
  translate([22, 244, 0])
    cube([1, 1, 2.27]);
  translate([23, 244, 0])
    cube([1, 1, 2.27]);
  translate([24, 244, 0])
    cube([1, 1, 2.27]);
  translate([25, 244, 0])
    cube([1, 1, 2.27]);
  translate([26, 244, 0])
    cube([1, 1, 2.31]);
  translate([27, 244, 0])
    cube([1, 1, 2.27]);
  translate([28, 244, 0])
    cube([1, 1, 2.27]);
  translate([29, 244, 0])
    cube([1, 1, 2.27]);
  translate([30, 244, 0])
    cube([1, 1, 2.31]);
  translate([31, 244, 0])
    cube([1, 1, 2.27]);
  translate([32, 244, 0])
    cube([1, 1, 2.27]);
  translate([33, 244, 0])
    cube([1, 1, 2.27]);
  translate([34, 244, 0])
    cube([1, 1, 2.27]);
  translate([35, 244, 0])
    cube([1, 1, 2.27]);
  translate([36, 244, 0])
    cube([1, 1, 2.27]);
  translate([37, 244, 0])
    cube([1, 1, 2.27]);
  translate([38, 244, 0])
    cube([1, 1, 2.24]);
  translate([39, 244, 0])
    cube([1, 1, 2.24]);
  translate([40, 244, 0])
    cube([1, 1, 2.24]);
  translate([41, 244, 0])
    cube([1, 1, 2.24]);
  translate([42, 244, 0])
    cube([1, 1, 2.24]);
  translate([43, 244, 0])
    cube([1, 1, 2.24]);
  translate([44, 244, 0])
    cube([1, 1, 2.31]);
  translate([45, 244, 0])
    cube([1, 1, 2.27]);
  translate([46, 244, 0])
    cube([1, 1, 1.76]);
  translate([47, 244, 0])
    cube([1, 1, 0.98]);
  translate([48, 244, 0])
    cube([1, 1, 0.24]);
  translate([49, 244, 0])
    cube([1, 1, 0.27]);
  translate([50, 244, 0])
    cube([1, 1, 0.24]);
  translate([51, 244, 0])
    cube([1, 1, 0.24]);
  translate([52, 244, 0])
    cube([1, 1, 0.35]);
  translate([53, 244, 0])
    cube([1, 1, 0.43]);
  translate([54, 244, 0])
    cube([1, 1, 1.22]);
  translate([55, 244, 0])
    cube([1, 1, 0.67]);
  translate([56, 244, 0])
    cube([1, 1, 1.14]);
  translate([57, 244, 0])
    cube([1, 1, 0.35]);
  translate([58, 244, 0])
    cube([1, 1, 8.24]);
  translate([59, 244, 0])
    cube([1, 1, 3.29]);
  translate([60, 244, 0])
    cube([1, 1, 0.86]);
  translate([61, 244, 0])
    cube([1, 1, 0.78]);
  translate([62, 244, 0])
    cube([1, 1, 1.02]);
  translate([63, 244, 0])
    cube([1, 1, 1.14]);
  translate([64, 244, 0])
    cube([1, 1, 1.14]);
  translate([65, 244, 0])
    cube([1, 1, 1.14]);
  translate([66, 244, 0])
    cube([1, 1, 1.14]);
  translate([67, 244, 0])
    cube([1, 1, 1.14]);
  translate([68, 244, 0])
    cube([1, 1, 1.14]);
  translate([69, 244, 0])
    cube([1, 1, 1.14]);
  translate([70, 244, 0])
    cube([1, 1, 0.94]);
  translate([71, 244, 0])
    cube([1, 1, 0.90]);
  translate([72, 244, 0])
    cube([1, 1, 1.06]);
  translate([73, 244, 0])
    cube([1, 1, 3.45]);
  translate([74, 244, 0])
    cube([1, 1, 1.45]);
  translate([75, 244, 0])
    cube([1, 1, 1.18]);
  translate([76, 244, 0])
    cube([1, 1, 1.49]);
  translate([77, 244, 0])
    cube([1, 1, 1.33]);
  translate([78, 244, 0])
    cube([1, 1, 1.57]);
  translate([79, 244, 0])
    cube([1, 1, 0.78]);
  translate([80, 244, 0])
    cube([1, 1, 0.59]);
  translate([81, 244, 0])
    cube([1, 1, 3.18]);
  translate([82, 244, 0])
    cube([1, 1, 4.00]);
  translate([83, 244, 0])
    cube([1, 1, 1.18]);
  translate([84, 244, 0])
    cube([1, 1, 5.37]);
  translate([85, 244, 0])
    cube([1, 1, 5.65]);
  translate([86, 244, 0])
    cube([1, 1, 5.88]);
  translate([87, 244, 0])
    cube([1, 1, 2.98]);
  translate([88, 244, 0])
    cube([1, 1, 2.43]);
  translate([89, 244, 0])
    cube([1, 1, 2.98]);
  translate([90, 244, 0])
    cube([1, 1, 4.98]);
  translate([91, 244, 0])
    cube([1, 1, 2.59]);
  translate([92, 244, 0])
    cube([1, 1, 1.69]);
  translate([93, 244, 0])
    cube([1, 1, 1.92]);
  translate([94, 244, 0])
    cube([1, 1, 0.98]);
  translate([95, 244, 0])
    cube([1, 1, 1.06]);
  translate([96, 244, 0])
    cube([1, 1, 1.14]);
  translate([97, 244, 0])
    cube([1, 1, 3.33]);
  translate([98, 244, 0])
    cube([1, 1, 3.33]);
  translate([99, 244, 0])
    cube([1, 1, 3.41]);
  translate([100, 244, 0])
    cube([1, 1, 3.33]);
  translate([101, 244, 0])
    cube([1, 1, 3.37]);
  translate([102, 244, 0])
    cube([1, 1, 3.37]);
  translate([103, 244, 0])
    cube([1, 1, 3.53]);
  translate([104, 244, 0])
    cube([1, 1, 3.49]);
  translate([105, 244, 0])
    cube([1, 1, 1.96]);
  translate([106, 244, 0])
    cube([1, 1, 2.43]);
  translate([107, 244, 0])
    cube([1, 1, 2.12]);
  translate([108, 244, 0])
    cube([1, 1, 2.12]);
  translate([109, 244, 0])
    cube([1, 1, 2.12]);
  translate([110, 244, 0])
    cube([1, 1, 2.08]);
  translate([111, 244, 0])
    cube([1, 1, 2.04]);
  translate([112, 244, 0])
    cube([1, 1, 2.16]);
  translate([113, 244, 0])
    cube([1, 1, 2.04]);
  translate([114, 244, 0])
    cube([1, 1, 2.08]);
  translate([115, 244, 0])
    cube([1, 1, 2.12]);
  translate([116, 244, 0])
    cube([1, 1, 2.16]);
  translate([117, 244, 0])
    cube([1, 1, 2.24]);
  translate([118, 244, 0])
    cube([1, 1, 2.24]);
  translate([119, 244, 0])
    cube([1, 1, 2.94]);
  translate([120, 244, 0])
    cube([1, 1, 4.12]);
  translate([121, 244, 0])
    cube([1, 1, 2.27]);
  translate([122, 244, 0])
    cube([1, 1, 1.14]);
  translate([123, 244, 0])
    cube([1, 1, 1.22]);
  translate([124, 244, 0])
    cube([1, 1, 1.33]);
  translate([125, 244, 0])
    cube([1, 1, 1.37]);
  translate([126, 244, 0])
    cube([1, 1, 1.37]);
  translate([127, 244, 0])
    cube([1, 1, 1.29]);
  translate([128, 244, 0])
    cube([1, 1, 1.33]);
  translate([129, 244, 0])
    cube([1, 1, 1.25]);
  translate([130, 244, 0])
    cube([1, 1, 0.86]);
  translate([131, 244, 0])
    cube([1, 1, 0.86]);
  translate([132, 244, 0])
    cube([1, 1, 1.10]);
  translate([133, 244, 0])
    cube([1, 1, 1.06]);
  translate([134, 244, 0])
    cube([1, 1, 0.86]);
  translate([135, 244, 0])
    cube([1, 1, 1.37]);
  translate([136, 244, 0])
    cube([1, 1, 2.24]);
  translate([137, 244, 0])
    cube([1, 1, 2.59]);
  translate([138, 244, 0])
    cube([1, 1, 2.98]);
  translate([139, 244, 0])
    cube([1, 1, 2.98]);
  translate([140, 244, 0])
    cube([1, 1, 3.10]);
  translate([141, 244, 0])
    cube([1, 1, 3.22]);
  translate([142, 244, 0])
    cube([1, 1, 3.25]);
  translate([143, 244, 0])
    cube([1, 1, 3.37]);
  translate([144, 244, 0])
    cube([1, 1, 3.65]);
  translate([145, 244, 0])
    cube([1, 1, 3.76]);
  translate([146, 244, 0])
    cube([1, 1, 4.20]);
  translate([147, 244, 0])
    cube([1, 1, 4.47]);
  translate([148, 244, 0])
    cube([1, 1, 4.67]);
  translate([149, 244, 0])
    cube([1, 1, 4.78]);
  translate([150, 244, 0])
    cube([1, 1, 4.47]);
  translate([151, 244, 0])
    cube([1, 1, 4.27]);
  translate([152, 244, 0])
    cube([1, 1, 4.27]);
  translate([153, 244, 0])
    cube([1, 1, 4.20]);
  translate([154, 244, 0])
    cube([1, 1, 4.08]);
  translate([155, 244, 0])
    cube([1, 1, 4.16]);
  translate([156, 244, 0])
    cube([1, 1, 4.12]);
  translate([157, 244, 0])
    cube([1, 1, 4.08]);
  translate([158, 244, 0])
    cube([1, 1, 3.96]);
  translate([159, 244, 0])
    cube([1, 1, 4.20]);
  translate([160, 244, 0])
    cube([1, 1, 4.47]);
  translate([161, 244, 0])
    cube([1, 1, 4.51]);
  translate([162, 244, 0])
    cube([1, 1, 4.94]);
  translate([163, 244, 0])
    cube([1, 1, 5.02]);
  translate([164, 244, 0])
    cube([1, 1, 5.02]);
  translate([165, 244, 0])
    cube([1, 1, 3.73]);
  translate([166, 244, 0])
    cube([1, 1, 2.00]);
  translate([167, 244, 0])
    cube([1, 1, 1.76]);
  translate([168, 244, 0])
    cube([1, 1, 1.25]);
  translate([169, 244, 0])
    cube([1, 1, 1.10]);
  translate([170, 244, 0])
    cube([1, 1, 0.98]);
  translate([171, 244, 0])
    cube([1, 1, 1.25]);
  translate([172, 244, 0])
    cube([1, 1, 2.00]);
  translate([173, 244, 0])
    cube([1, 1, 2.08]);
  translate([174, 244, 0])
    cube([1, 1, 2.16]);
  translate([175, 244, 0])
    cube([1, 1, 2.00]);
  translate([176, 244, 0])
    cube([1, 1, 2.00]);
  translate([177, 244, 0])
    cube([1, 1, 2.08]);
  translate([178, 244, 0])
    cube([1, 1, 2.08]);
  translate([179, 244, 0])
    cube([1, 1, 2.08]);
  translate([180, 244, 0])
    cube([1, 1, 2.08]);
  translate([181, 244, 0])
    cube([1, 1, 2.08]);
  translate([182, 244, 0])
    cube([1, 1, 2.08]);
  translate([183, 244, 0])
    cube([1, 1, 2.08]);
  translate([184, 244, 0])
    cube([1, 1, 2.08]);
  translate([185, 244, 0])
    cube([1, 1, 2.04]);
  translate([186, 244, 0])
    cube([1, 1, 2.12]);
  translate([187, 244, 0])
    cube([1, 1, 2.16]);
  translate([188, 244, 0])
    cube([1, 1, 2.08]);
  translate([189, 244, 0])
    cube([1, 1, 2.08]);
  translate([190, 244, 0])
    cube([1, 1, 2.08]);
  translate([191, 244, 0])
    cube([1, 1, 2.08]);
  translate([192, 244, 0])
    cube([1, 1, 2.08]);
  translate([193, 244, 0])
    cube([1, 1, 2.08]);
  translate([194, 244, 0])
    cube([1, 1, 2.08]);
  translate([195, 244, 0])
    cube([1, 1, 2.16]);
  translate([196, 244, 0])
    cube([1, 1, 2.08]);
  translate([197, 244, 0])
    cube([1, 1, 2.12]);
  translate([198, 244, 0])
    cube([1, 1, 2.12]);
  translate([199, 244, 0])
    cube([1, 1, 2.12]);
  translate([200, 244, 0])
    cube([1, 1, 2.12]);
  translate([201, 244, 0])
    cube([1, 1, 2.08]);
  translate([202, 244, 0])
    cube([1, 1, 2.08]);
  translate([203, 244, 0])
    cube([1, 1, 2.08]);
  translate([204, 244, 0])
    cube([1, 1, 2.08]);
  translate([205, 244, 0])
    cube([1, 1, 2.12]);
  translate([206, 244, 0])
    cube([1, 1, 2.08]);
  translate([207, 244, 0])
    cube([1, 1, 2.08]);
  translate([208, 244, 0])
    cube([1, 1, 2.12]);
  translate([209, 244, 0])
    cube([1, 1, 2.12]);
  translate([210, 244, 0])
    cube([1, 1, 2.12]);
  translate([211, 244, 0])
    cube([1, 1, 2.08]);
  translate([212, 244, 0])
    cube([1, 1, 2.12]);
  translate([213, 244, 0])
    cube([1, 1, 2.12]);
  translate([214, 244, 0])
    cube([1, 1, 2.12]);
  translate([215, 244, 0])
    cube([1, 1, 2.12]);
  translate([216, 244, 0])
    cube([1, 1, 2.12]);
  translate([217, 244, 0])
    cube([1, 1, 2.08]);
  translate([218, 244, 0])
    cube([1, 1, 2.08]);
  translate([219, 244, 0])
    cube([1, 1, 2.12]);
  translate([220, 244, 0])
    cube([1, 1, 2.08]);
  translate([221, 244, 0])
    cube([1, 1, 2.08]);
  translate([222, 244, 0])
    cube([1, 1, 2.08]);
  translate([223, 244, 0])
    cube([1, 1, 2.08]);
  translate([224, 244, 0])
    cube([1, 1, 2.04]);
  translate([225, 244, 0])
    cube([1, 1, 2.08]);
  translate([226, 244, 0])
    cube([1, 1, 2.08]);
  translate([227, 244, 0])
    cube([1, 1, 2.08]);
  translate([228, 244, 0])
    cube([1, 1, 2.12]);
  translate([229, 244, 0])
    cube([1, 1, 2.12]);
  translate([230, 244, 0])
    cube([1, 1, 2.04]);
  translate([231, 244, 0])
    cube([1, 1, 2.04]);
  translate([232, 244, 0])
    cube([1, 1, 2.04]);
  translate([233, 244, 0])
    cube([1, 1, 2.08]);
  translate([234, 244, 0])
    cube([1, 1, 2.08]);
  translate([235, 244, 0])
    cube([1, 1, 2.08]);
  translate([236, 244, 0])
    cube([1, 1, 2.08]);
  translate([237, 244, 0])
    cube([1, 1, 2.08]);
  translate([238, 244, 0])
    cube([1, 1, 2.08]);
  translate([239, 244, 0])
    cube([1, 1, 2.08]);
  translate([240, 244, 0])
    cube([1, 1, 2.08]);
  translate([241, 244, 0])
    cube([1, 1, 2.08]);
  translate([242, 244, 0])
    cube([1, 1, 2.08]);
  translate([243, 244, 0])
    cube([1, 1, 2.08]);
  translate([244, 244, 0])
    cube([1, 1, 2.08]);
  translate([245, 244, 0])
    cube([1, 1, 2.08]);
  translate([246, 244, 0])
    cube([1, 1, 2.08]);
  translate([0, 245, 0])
    cube([1, 1, 2.31]);
  translate([1, 245, 0])
    cube([1, 1, 2.27]);
  translate([2, 245, 0])
    cube([1, 1, 2.27]);
  translate([3, 245, 0])
    cube([1, 1, 2.31]);
  translate([4, 245, 0])
    cube([1, 1, 2.27]);
  translate([5, 245, 0])
    cube([1, 1, 2.31]);
  translate([6, 245, 0])
    cube([1, 1, 2.27]);
  translate([7, 245, 0])
    cube([1, 1, 2.27]);
  translate([8, 245, 0])
    cube([1, 1, 2.27]);
  translate([9, 245, 0])
    cube([1, 1, 2.27]);
  translate([10, 245, 0])
    cube([1, 1, 2.27]);
  translate([11, 245, 0])
    cube([1, 1, 2.31]);
  translate([12, 245, 0])
    cube([1, 1, 2.27]);
  translate([13, 245, 0])
    cube([1, 1, 2.27]);
  translate([14, 245, 0])
    cube([1, 1, 2.27]);
  translate([15, 245, 0])
    cube([1, 1, 2.27]);
  translate([16, 245, 0])
    cube([1, 1, 2.27]);
  translate([17, 245, 0])
    cube([1, 1, 2.27]);
  translate([18, 245, 0])
    cube([1, 1, 2.31]);
  translate([19, 245, 0])
    cube([1, 1, 2.27]);
  translate([20, 245, 0])
    cube([1, 1, 2.27]);
  translate([21, 245, 0])
    cube([1, 1, 2.27]);
  translate([22, 245, 0])
    cube([1, 1, 2.27]);
  translate([23, 245, 0])
    cube([1, 1, 2.27]);
  translate([24, 245, 0])
    cube([1, 1, 2.27]);
  translate([25, 245, 0])
    cube([1, 1, 2.27]);
  translate([26, 245, 0])
    cube([1, 1, 2.31]);
  translate([27, 245, 0])
    cube([1, 1, 2.27]);
  translate([28, 245, 0])
    cube([1, 1, 2.27]);
  translate([29, 245, 0])
    cube([1, 1, 2.27]);
  translate([30, 245, 0])
    cube([1, 1, 2.27]);
  translate([31, 245, 0])
    cube([1, 1, 2.27]);
  translate([32, 245, 0])
    cube([1, 1, 2.27]);
  translate([33, 245, 0])
    cube([1, 1, 2.27]);
  translate([34, 245, 0])
    cube([1, 1, 2.27]);
  translate([35, 245, 0])
    cube([1, 1, 2.27]);
  translate([36, 245, 0])
    cube([1, 1, 2.27]);
  translate([37, 245, 0])
    cube([1, 1, 2.27]);
  translate([38, 245, 0])
    cube([1, 1, 2.20]);
  translate([39, 245, 0])
    cube([1, 1, 2.24]);
  translate([40, 245, 0])
    cube([1, 1, 2.27]);
  translate([41, 245, 0])
    cube([1, 1, 2.24]);
  translate([42, 245, 0])
    cube([1, 1, 2.24]);
  translate([43, 245, 0])
    cube([1, 1, 2.24]);
  translate([44, 245, 0])
    cube([1, 1, 2.27]);
  translate([45, 245, 0])
    cube([1, 1, 2.27]);
  translate([46, 245, 0])
    cube([1, 1, 2.24]);
  translate([47, 245, 0])
    cube([1, 1, 2.24]);
  translate([48, 245, 0])
    cube([1, 1, 2.35]);
  translate([49, 245, 0])
    cube([1, 1, 1.02]);
  translate([50, 245, 0])
    cube([1, 1, 1.29]);
  translate([51, 245, 0])
    cube([1, 1, 0.75]);
  translate([52, 245, 0])
    cube([1, 1, 0.35]);
  translate([53, 245, 0])
    cube([1, 1, 0.31]);
  translate([54, 245, 0])
    cube([1, 1, 2.31]);
  translate([55, 245, 0])
    cube([1, 1, 1.06]);
  translate([56, 245, 0])
    cube([1, 1, 1.41]);
  translate([57, 245, 0])
    cube([1, 1, 2.82]);
  translate([58, 245, 0])
    cube([1, 1, 8.04]);
  translate([59, 245, 0])
    cube([1, 1, 6.39]);
  translate([60, 245, 0])
    cube([1, 1, 1.18]);
  translate([61, 245, 0])
    cube([1, 1, 1.10]);
  translate([62, 245, 0])
    cube([1, 1, 1.10]);
  translate([63, 245, 0])
    cube([1, 1, 1.10]);
  translate([64, 245, 0])
    cube([1, 1, 1.14]);
  translate([65, 245, 0])
    cube([1, 1, 1.14]);
  translate([66, 245, 0])
    cube([1, 1, 1.14]);
  translate([67, 245, 0])
    cube([1, 1, 1.10]);
  translate([68, 245, 0])
    cube([1, 1, 1.18]);
  translate([69, 245, 0])
    cube([1, 1, 1.14]);
  translate([70, 245, 0])
    cube([1, 1, 1.22]);
  translate([71, 245, 0])
    cube([1, 1, 1.10]);
  translate([72, 245, 0])
    cube([1, 1, 1.18]);
  translate([73, 245, 0])
    cube([1, 1, 1.73]);
  translate([74, 245, 0])
    cube([1, 1, 1.49]);
  translate([75, 245, 0])
    cube([1, 1, 2.08]);
  translate([76, 245, 0])
    cube([1, 1, 2.00]);
  translate([77, 245, 0])
    cube([1, 1, 2.75]);
  translate([78, 245, 0])
    cube([1, 1, 3.73]);
  translate([79, 245, 0])
    cube([1, 1, 3.76]);
  translate([80, 245, 0])
    cube([1, 1, 3.02]);
  translate([81, 245, 0])
    cube([1, 1, 1.02]);
  translate([82, 245, 0])
    cube([1, 1, 1.96]);
  translate([83, 245, 0])
    cube([1, 1, 2.00]);
  translate([84, 245, 0])
    cube([1, 1, 5.33]);
  translate([85, 245, 0])
    cube([1, 1, 2.35]);
  translate([86, 245, 0])
    cube([1, 1, 5.25]);
  translate([87, 245, 0])
    cube([1, 1, 2.90]);
  translate([88, 245, 0])
    cube([1, 1, 2.43]);
  translate([89, 245, 0])
    cube([1, 1, 4.51]);
  translate([90, 245, 0])
    cube([1, 1, 4.39]);
  translate([91, 245, 0])
    cube([1, 1, 2.08]);
  translate([92, 245, 0])
    cube([1, 1, 1.33]);
  translate([93, 245, 0])
    cube([1, 1, 1.33]);
  translate([94, 245, 0])
    cube([1, 1, 1.49]);
  translate([95, 245, 0])
    cube([1, 1, 1.57]);
  translate([96, 245, 0])
    cube([1, 1, 1.80]);
  translate([97, 245, 0])
    cube([1, 1, 1.14]);
  translate([98, 245, 0])
    cube([1, 1, 3.06]);
  translate([99, 245, 0])
    cube([1, 1, 3.29]);
  translate([100, 245, 0])
    cube([1, 1, 3.37]);
  translate([101, 245, 0])
    cube([1, 1, 3.45]);
  translate([102, 245, 0])
    cube([1, 1, 3.41]);
  translate([103, 245, 0])
    cube([1, 1, 3.53]);
  translate([104, 245, 0])
    cube([1, 1, 3.80]);
  translate([105, 245, 0])
    cube([1, 1, 2.08]);
  translate([106, 245, 0])
    cube([1, 1, 2.12]);
  translate([107, 245, 0])
    cube([1, 1, 2.12]);
  translate([108, 245, 0])
    cube([1, 1, 2.12]);
  translate([109, 245, 0])
    cube([1, 1, 2.12]);
  translate([110, 245, 0])
    cube([1, 1, 2.12]);
  translate([111, 245, 0])
    cube([1, 1, 2.12]);
  translate([112, 245, 0])
    cube([1, 1, 2.12]);
  translate([113, 245, 0])
    cube([1, 1, 2.12]);
  translate([114, 245, 0])
    cube([1, 1, 2.12]);
  translate([115, 245, 0])
    cube([1, 1, 2.12]);
  translate([116, 245, 0])
    cube([1, 1, 2.24]);
  translate([117, 245, 0])
    cube([1, 1, 2.12]);
  translate([118, 245, 0])
    cube([1, 1, 6.35]);
  translate([119, 245, 0])
    cube([1, 1, 2.43]);
  translate([120, 245, 0])
    cube([1, 1, 0.78]);
  translate([121, 245, 0])
    cube([1, 1, 1.33]);
  translate([122, 245, 0])
    cube([1, 1, 2.90]);
  translate([123, 245, 0])
    cube([1, 1, 1.06]);
  translate([124, 245, 0])
    cube([1, 1, 1.37]);
  translate([125, 245, 0])
    cube([1, 1, 1.37]);
  translate([126, 245, 0])
    cube([1, 1, 1.29]);
  translate([127, 245, 0])
    cube([1, 1, 1.02]);
  translate([128, 245, 0])
    cube([1, 1, 0.90]);
  translate([129, 245, 0])
    cube([1, 1, 0.94]);
  translate([130, 245, 0])
    cube([1, 1, 0.98]);
  translate([131, 245, 0])
    cube([1, 1, 0.86]);
  translate([132, 245, 0])
    cube([1, 1, 1.10]);
  translate([133, 245, 0])
    cube([1, 1, 1.92]);
  translate([134, 245, 0])
    cube([1, 1, 2.39]);
  translate([135, 245, 0])
    cube([1, 1, 2.51]);
  translate([136, 245, 0])
    cube([1, 1, 2.71]);
  translate([137, 245, 0])
    cube([1, 1, 2.75]);
  translate([138, 245, 0])
    cube([1, 1, 2.82]);
  translate([139, 245, 0])
    cube([1, 1, 2.94]);
  translate([140, 245, 0])
    cube([1, 1, 2.98]);
  translate([141, 245, 0])
    cube([1, 1, 3.14]);
  translate([142, 245, 0])
    cube([1, 1, 3.18]);
  translate([143, 245, 0])
    cube([1, 1, 3.22]);
  translate([144, 245, 0])
    cube([1, 1, 3.49]);
  translate([145, 245, 0])
    cube([1, 1, 3.65]);
  translate([146, 245, 0])
    cube([1, 1, 4.12]);
  translate([147, 245, 0])
    cube([1, 1, 4.39]);
  translate([148, 245, 0])
    cube([1, 1, 4.67]);
  translate([149, 245, 0])
    cube([1, 1, 4.67]);
  translate([150, 245, 0])
    cube([1, 1, 4.47]);
  translate([151, 245, 0])
    cube([1, 1, 4.24]);
  translate([152, 245, 0])
    cube([1, 1, 4.24]);
  translate([153, 245, 0])
    cube([1, 1, 4.12]);
  translate([154, 245, 0])
    cube([1, 1, 4.16]);
  translate([155, 245, 0])
    cube([1, 1, 4.27]);
  translate([156, 245, 0])
    cube([1, 1, 4.12]);
  translate([157, 245, 0])
    cube([1, 1, 4.00]);
  translate([158, 245, 0])
    cube([1, 1, 3.88]);
  translate([159, 245, 0])
    cube([1, 1, 4.20]);
  translate([160, 245, 0])
    cube([1, 1, 4.67]);
  translate([161, 245, 0])
    cube([1, 1, 4.86]);
  translate([162, 245, 0])
    cube([1, 1, 5.45]);
  translate([163, 245, 0])
    cube([1, 1, 5.80]);
  translate([164, 245, 0])
    cube([1, 1, 5.53]);
  translate([165, 245, 0])
    cube([1, 1, 3.61]);
  translate([166, 245, 0])
    cube([1, 1, 2.04]);
  translate([167, 245, 0])
    cube([1, 1, 2.04]);
  translate([168, 245, 0])
    cube([1, 1, 2.04]);
  translate([169, 245, 0])
    cube([1, 1, 2.04]);
  translate([170, 245, 0])
    cube([1, 1, 2.04]);
  translate([171, 245, 0])
    cube([1, 1, 2.08]);
  translate([172, 245, 0])
    cube([1, 1, 2.08]);
  translate([173, 245, 0])
    cube([1, 1, 2.08]);
  translate([174, 245, 0])
    cube([1, 1, 2.08]);
  translate([175, 245, 0])
    cube([1, 1, 2.08]);
  translate([176, 245, 0])
    cube([1, 1, 2.08]);
  translate([177, 245, 0])
    cube([1, 1, 2.08]);
  translate([178, 245, 0])
    cube([1, 1, 2.08]);
  translate([179, 245, 0])
    cube([1, 1, 2.08]);
  translate([180, 245, 0])
    cube([1, 1, 2.08]);
  translate([181, 245, 0])
    cube([1, 1, 2.08]);
  translate([182, 245, 0])
    cube([1, 1, 2.08]);
  translate([183, 245, 0])
    cube([1, 1, 2.08]);
  translate([184, 245, 0])
    cube([1, 1, 2.08]);
  translate([185, 245, 0])
    cube([1, 1, 2.04]);
  translate([186, 245, 0])
    cube([1, 1, 2.12]);
  translate([187, 245, 0])
    cube([1, 1, 2.08]);
  translate([188, 245, 0])
    cube([1, 1, 2.08]);
  translate([189, 245, 0])
    cube([1, 1, 2.08]);
  translate([190, 245, 0])
    cube([1, 1, 2.08]);
  translate([191, 245, 0])
    cube([1, 1, 2.08]);
  translate([192, 245, 0])
    cube([1, 1, 2.08]);
  translate([193, 245, 0])
    cube([1, 1, 2.08]);
  translate([194, 245, 0])
    cube([1, 1, 2.08]);
  translate([195, 245, 0])
    cube([1, 1, 2.12]);
  translate([196, 245, 0])
    cube([1, 1, 2.12]);
  translate([197, 245, 0])
    cube([1, 1, 2.08]);
  translate([198, 245, 0])
    cube([1, 1, 2.04]);
  translate([199, 245, 0])
    cube([1, 1, 2.16]);
  translate([200, 245, 0])
    cube([1, 1, 2.12]);
  translate([201, 245, 0])
    cube([1, 1, 2.08]);
  translate([202, 245, 0])
    cube([1, 1, 2.08]);
  translate([203, 245, 0])
    cube([1, 1, 2.08]);
  translate([204, 245, 0])
    cube([1, 1, 2.08]);
  translate([205, 245, 0])
    cube([1, 1, 2.12]);
  translate([206, 245, 0])
    cube([1, 1, 2.08]);
  translate([207, 245, 0])
    cube([1, 1, 2.12]);
  translate([208, 245, 0])
    cube([1, 1, 2.12]);
  translate([209, 245, 0])
    cube([1, 1, 2.12]);
  translate([210, 245, 0])
    cube([1, 1, 2.12]);
  translate([211, 245, 0])
    cube([1, 1, 2.12]);
  translate([212, 245, 0])
    cube([1, 1, 2.08]);
  translate([213, 245, 0])
    cube([1, 1, 2.08]);
  translate([214, 245, 0])
    cube([1, 1, 2.12]);
  translate([215, 245, 0])
    cube([1, 1, 2.12]);
  translate([216, 245, 0])
    cube([1, 1, 2.12]);
  translate([217, 245, 0])
    cube([1, 1, 2.12]);
  translate([218, 245, 0])
    cube([1, 1, 2.12]);
  translate([219, 245, 0])
    cube([1, 1, 2.12]);
  translate([220, 245, 0])
    cube([1, 1, 2.12]);
  translate([221, 245, 0])
    cube([1, 1, 2.12]);
  translate([222, 245, 0])
    cube([1, 1, 2.12]);
  translate([223, 245, 0])
    cube([1, 1, 2.12]);
  translate([224, 245, 0])
    cube([1, 1, 2.12]);
  translate([225, 245, 0])
    cube([1, 1, 2.08]);
  translate([226, 245, 0])
    cube([1, 1, 2.08]);
  translate([227, 245, 0])
    cube([1, 1, 2.12]);
  translate([228, 245, 0])
    cube([1, 1, 2.12]);
  translate([229, 245, 0])
    cube([1, 1, 2.12]);
  translate([230, 245, 0])
    cube([1, 1, 2.12]);
  translate([231, 245, 0])
    cube([1, 1, 2.12]);
  translate([232, 245, 0])
    cube([1, 1, 2.12]);
  translate([233, 245, 0])
    cube([1, 1, 2.08]);
  translate([234, 245, 0])
    cube([1, 1, 2.12]);
  translate([235, 245, 0])
    cube([1, 1, 2.08]);
  translate([236, 245, 0])
    cube([1, 1, 2.08]);
  translate([237, 245, 0])
    cube([1, 1, 2.08]);
  translate([238, 245, 0])
    cube([1, 1, 2.08]);
  translate([239, 245, 0])
    cube([1, 1, 2.08]);
  translate([240, 245, 0])
    cube([1, 1, 2.08]);
  translate([241, 245, 0])
    cube([1, 1, 2.08]);
  translate([242, 245, 0])
    cube([1, 1, 2.08]);
  translate([243, 245, 0])
    cube([1, 1, 2.08]);
  translate([244, 245, 0])
    cube([1, 1, 2.12]);
  translate([245, 245, 0])
    cube([1, 1, 2.12]);
  translate([246, 245, 0])
    cube([1, 1, 2.12]);
  translate([0, 246, 0])
    cube([1, 1, 2.31]);
  translate([1, 246, 0])
    cube([1, 1, 2.27]);
  translate([2, 246, 0])
    cube([1, 1, 2.27]);
  translate([3, 246, 0])
    cube([1, 1, 2.31]);
  translate([4, 246, 0])
    cube([1, 1, 2.27]);
  translate([5, 246, 0])
    cube([1, 1, 2.31]);
  translate([6, 246, 0])
    cube([1, 1, 2.31]);
  translate([7, 246, 0])
    cube([1, 1, 2.31]);
  translate([8, 246, 0])
    cube([1, 1, 2.31]);
  translate([9, 246, 0])
    cube([1, 1, 2.27]);
  translate([10, 246, 0])
    cube([1, 1, 2.27]);
  translate([11, 246, 0])
    cube([1, 1, 2.31]);
  translate([12, 246, 0])
    cube([1, 1, 2.27]);
  translate([13, 246, 0])
    cube([1, 1, 2.27]);
  translate([14, 246, 0])
    cube([1, 1, 2.27]);
  translate([15, 246, 0])
    cube([1, 1, 2.27]);
  translate([16, 246, 0])
    cube([1, 1, 2.27]);
  translate([17, 246, 0])
    cube([1, 1, 2.27]);
  translate([18, 246, 0])
    cube([1, 1, 2.31]);
  translate([19, 246, 0])
    cube([1, 1, 2.27]);
  translate([20, 246, 0])
    cube([1, 1, 2.27]);
  translate([21, 246, 0])
    cube([1, 1, 2.27]);
  translate([22, 246, 0])
    cube([1, 1, 2.27]);
  translate([23, 246, 0])
    cube([1, 1, 2.27]);
  translate([24, 246, 0])
    cube([1, 1, 2.27]);
  translate([25, 246, 0])
    cube([1, 1, 2.27]);
  translate([26, 246, 0])
    cube([1, 1, 2.31]);
  translate([27, 246, 0])
    cube([1, 1, 2.27]);
  translate([28, 246, 0])
    cube([1, 1, 2.27]);
  translate([29, 246, 0])
    cube([1, 1, 2.27]);
  translate([30, 246, 0])
    cube([1, 1, 2.27]);
  translate([31, 246, 0])
    cube([1, 1, 2.27]);
  translate([32, 246, 0])
    cube([1, 1, 2.27]);
  translate([33, 246, 0])
    cube([1, 1, 2.27]);
  translate([34, 246, 0])
    cube([1, 1, 2.27]);
  translate([35, 246, 0])
    cube([1, 1, 2.27]);
  translate([36, 246, 0])
    cube([1, 1, 2.27]);
  translate([37, 246, 0])
    cube([1, 1, 2.27]);
  translate([38, 246, 0])
    cube([1, 1, 2.24]);
  translate([39, 246, 0])
    cube([1, 1, 2.31]);
  translate([40, 246, 0])
    cube([1, 1, 2.27]);
  translate([41, 246, 0])
    cube([1, 1, 2.24]);
  translate([42, 246, 0])
    cube([1, 1, 2.24]);
  translate([43, 246, 0])
    cube([1, 1, 2.24]);
  translate([44, 246, 0])
    cube([1, 1, 2.27]);
  translate([45, 246, 0])
    cube([1, 1, 2.27]);
  translate([46, 246, 0])
    cube([1, 1, 2.24]);
  translate([47, 246, 0])
    cube([1, 1, 2.24]);
  translate([48, 246, 0])
    cube([1, 1, 2.31]);
  translate([49, 246, 0])
    cube([1, 1, 2.12]);
  translate([50, 246, 0])
    cube([1, 1, 2.39]);
  translate([51, 246, 0])
    cube([1, 1, 2.31]);
  translate([52, 246, 0])
    cube([1, 1, 2.20]);
  translate([53, 246, 0])
    cube([1, 1, 2.59]);
  translate([54, 246, 0])
    cube([1, 1, 2.12]);
  translate([55, 246, 0])
    cube([1, 1, 2.16]);
  translate([56, 246, 0])
    cube([1, 1, 2.20]);
  translate([57, 246, 0])
    cube([1, 1, 1.80]);
  translate([58, 246, 0])
    cube([1, 1, 8.16]);
  translate([59, 246, 0])
    cube([1, 1, 7.49]);
  translate([60, 246, 0])
    cube([1, 1, 7.02]);
  translate([61, 246, 0])
    cube([1, 1, 0.98]);
  translate([62, 246, 0])
    cube([1, 1, 1.10]);
  translate([63, 246, 0])
    cube([1, 1, 1.10]);
  translate([64, 246, 0])
    cube([1, 1, 1.14]);
  translate([65, 246, 0])
    cube([1, 1, 1.14]);
  translate([66, 246, 0])
    cube([1, 1, 1.14]);
  translate([67, 246, 0])
    cube([1, 1, 1.10]);
  translate([68, 246, 0])
    cube([1, 1, 1.10]);
  translate([69, 246, 0])
    cube([1, 1, 1.18]);
  translate([70, 246, 0])
    cube([1, 1, 1.10]);
  translate([71, 246, 0])
    cube([1, 1, 1.14]);
  translate([72, 246, 0])
    cube([1, 1, 1.53]);
  translate([73, 246, 0])
    cube([1, 1, 1.14]);
  translate([74, 246, 0])
    cube([1, 1, 1.41]);
  translate([75, 246, 0])
    cube([1, 1, 3.25]);
  translate([76, 246, 0])
    cube([1, 1, 3.61]);
  translate([77, 246, 0])
    cube([1, 1, 3.53]);
  translate([78, 246, 0])
    cube([1, 1, 3.73]);
  translate([79, 246, 0])
    cube([1, 1, 3.80]);
  translate([80, 246, 0])
    cube([1, 1, 3.65]);
  translate([81, 246, 0])
    cube([1, 1, 3.14]);
  translate([82, 246, 0])
    cube([1, 1, 1.49]);
  translate([83, 246, 0])
    cube([1, 1, 0.59]);
  translate([84, 246, 0])
    cube([1, 1, 1.53]);
  translate([85, 246, 0])
    cube([1, 1, 4.47]);
  translate([86, 246, 0])
    cube([1, 1, 4.27]);
  translate([87, 246, 0])
    cube([1, 1, 2.67]);
  translate([88, 246, 0])
    cube([1, 1, 3.37]);
  translate([89, 246, 0])
    cube([1, 1, 3.37]);
  translate([90, 246, 0])
    cube([1, 1, 2.55]);
  translate([91, 246, 0])
    cube([1, 1, 2.43]);
  translate([92, 246, 0])
    cube([1, 1, 1.76]);
  translate([93, 246, 0])
    cube([1, 1, 1.80]);
  translate([94, 246, 0])
    cube([1, 1, 1.57]);
  translate([95, 246, 0])
    cube([1, 1, 1.45]);
  translate([96, 246, 0])
    cube([1, 1, 3.29]);
  translate([97, 246, 0])
    cube([1, 1, 1.14]);
  translate([98, 246, 0])
    cube([1, 1, 1.25]);
  translate([99, 246, 0])
    cube([1, 1, 2.04]);
  translate([100, 246, 0])
    cube([1, 1, 3.41]);
  translate([101, 246, 0])
    cube([1, 1, 3.45]);
  translate([102, 246, 0])
    cube([1, 1, 3.53]);
  translate([103, 246, 0])
    cube([1, 1, 3.49]);
  translate([104, 246, 0])
    cube([1, 1, 3.73]);
  translate([105, 246, 0])
    cube([1, 1, 2.16]);
  translate([106, 246, 0])
    cube([1, 1, 2.20]);
  translate([107, 246, 0])
    cube([1, 1, 2.16]);
  translate([108, 246, 0])
    cube([1, 1, 2.12]);
  translate([109, 246, 0])
    cube([1, 1, 2.12]);
  translate([110, 246, 0])
    cube([1, 1, 2.12]);
  translate([111, 246, 0])
    cube([1, 1, 2.12]);
  translate([112, 246, 0])
    cube([1, 1, 2.12]);
  translate([113, 246, 0])
    cube([1, 1, 2.12]);
  translate([114, 246, 0])
    cube([1, 1, 2.12]);
  translate([115, 246, 0])
    cube([1, 1, 2.12]);
  translate([116, 246, 0])
    cube([1, 1, 2.00]);
  translate([117, 246, 0])
    cube([1, 1, 2.86]);
  translate([118, 246, 0])
    cube([1, 1, 7.25]);
  translate([119, 246, 0])
    cube([1, 1, 2.31]);
  translate([120, 246, 0])
    cube([1, 1, 2.47]);
  translate([121, 246, 0])
    cube([1, 1, 1.14]);
  translate([122, 246, 0])
    cube([1, 1, 3.18]);
  translate([123, 246, 0])
    cube([1, 1, 1.14]);
  translate([124, 246, 0])
    cube([1, 1, 1.29]);
  translate([125, 246, 0])
    cube([1, 1, 0.94]);
  translate([126, 246, 0])
    cube([1, 1, 0.94]);
  translate([127, 246, 0])
    cube([1, 1, 1.10]);
  translate([128, 246, 0])
    cube([1, 1, 1.02]);
  translate([129, 246, 0])
    cube([1, 1, 1.02]);
  translate([130, 246, 0])
    cube([1, 1, 1.37]);
  translate([131, 246, 0])
    cube([1, 1, 2.20]);
  translate([132, 246, 0])
    cube([1, 1, 2.31]);
  translate([133, 246, 0])
    cube([1, 1, 2.59]);
  translate([134, 246, 0])
    cube([1, 1, 2.55]);
  translate([135, 246, 0])
    cube([1, 1, 2.59]);
  translate([136, 246, 0])
    cube([1, 1, 2.63]);
  translate([137, 246, 0])
    cube([1, 1, 2.75]);
  translate([138, 246, 0])
    cube([1, 1, 2.82]);
  translate([139, 246, 0])
    cube([1, 1, 2.90]);
  translate([140, 246, 0])
    cube([1, 1, 2.94]);
  translate([141, 246, 0])
    cube([1, 1, 3.06]);
  translate([142, 246, 0])
    cube([1, 1, 3.06]);
  translate([143, 246, 0])
    cube([1, 1, 3.14]);
  translate([144, 246, 0])
    cube([1, 1, 3.37]);
  translate([145, 246, 0])
    cube([1, 1, 3.53]);
  translate([146, 246, 0])
    cube([1, 1, 4.00]);
  translate([147, 246, 0])
    cube([1, 1, 4.31]);
  translate([148, 246, 0])
    cube([1, 1, 4.59]);
  translate([149, 246, 0])
    cube([1, 1, 4.55]);
  translate([150, 246, 0])
    cube([1, 1, 4.47]);
  translate([151, 246, 0])
    cube([1, 1, 4.24]);
  translate([152, 246, 0])
    cube([1, 1, 4.27]);
  translate([153, 246, 0])
    cube([1, 1, 4.24]);
  translate([154, 246, 0])
    cube([1, 1, 4.27]);
  translate([155, 246, 0])
    cube([1, 1, 4.24]);
  translate([156, 246, 0])
    cube([1, 1, 4.12]);
  translate([157, 246, 0])
    cube([1, 1, 4.00]);
  translate([158, 246, 0])
    cube([1, 1, 3.88]);
  translate([159, 246, 0])
    cube([1, 1, 4.35]);
  translate([160, 246, 0])
    cube([1, 1, 4.78]);
  translate([161, 246, 0])
    cube([1, 1, 5.25]);
  translate([162, 246, 0])
    cube([1, 1, 5.96]);
  translate([163, 246, 0])
    cube([1, 1, 6.27]);
  translate([164, 246, 0])
    cube([1, 1, 6.20]);
  translate([165, 246, 0])
    cube([1, 1, 2.43]);
  translate([166, 246, 0])
    cube([1, 1, 2.04]);
  translate([167, 246, 0])
    cube([1, 1, 2.04]);
  translate([168, 246, 0])
    cube([1, 1, 2.04]);
  translate([169, 246, 0])
    cube([1, 1, 2.08]);
  translate([170, 246, 0])
    cube([1, 1, 2.08]);
  translate([171, 246, 0])
    cube([1, 1, 2.08]);
  translate([172, 246, 0])
    cube([1, 1, 2.08]);
  translate([173, 246, 0])
    cube([1, 1, 2.08]);
  translate([174, 246, 0])
    cube([1, 1, 2.08]);
  translate([175, 246, 0])
    cube([1, 1, 2.08]);
  translate([176, 246, 0])
    cube([1, 1, 2.08]);
  translate([177, 246, 0])
    cube([1, 1, 2.08]);
  translate([178, 246, 0])
    cube([1, 1, 2.08]);
  translate([179, 246, 0])
    cube([1, 1, 2.08]);
  translate([180, 246, 0])
    cube([1, 1, 2.08]);
  translate([181, 246, 0])
    cube([1, 1, 2.08]);
  translate([182, 246, 0])
    cube([1, 1, 2.08]);
  translate([183, 246, 0])
    cube([1, 1, 2.08]);
  translate([184, 246, 0])
    cube([1, 1, 2.12]);
  translate([185, 246, 0])
    cube([1, 1, 2.04]);
  translate([186, 246, 0])
    cube([1, 1, 2.12]);
  translate([187, 246, 0])
    cube([1, 1, 2.12]);
  translate([188, 246, 0])
    cube([1, 1, 2.08]);
  translate([189, 246, 0])
    cube([1, 1, 2.08]);
  translate([190, 246, 0])
    cube([1, 1, 2.08]);
  translate([191, 246, 0])
    cube([1, 1, 2.08]);
  translate([192, 246, 0])
    cube([1, 1, 2.08]);
  translate([193, 246, 0])
    cube([1, 1, 2.08]);
  translate([194, 246, 0])
    cube([1, 1, 2.08]);
  translate([195, 246, 0])
    cube([1, 1, 2.12]);
  translate([196, 246, 0])
    cube([1, 1, 2.12]);
  translate([197, 246, 0])
    cube([1, 1, 2.08]);
  translate([198, 246, 0])
    cube([1, 1, 2.08]);
  translate([199, 246, 0])
    cube([1, 1, 2.08]);
  translate([200, 246, 0])
    cube([1, 1, 2.12]);
  translate([201, 246, 0])
    cube([1, 1, 2.08]);
  translate([202, 246, 0])
    cube([1, 1, 2.08]);
  translate([203, 246, 0])
    cube([1, 1, 2.16]);
  translate([204, 246, 0])
    cube([1, 1, 2.08]);
  translate([205, 246, 0])
    cube([1, 1, 2.12]);
  translate([206, 246, 0])
    cube([1, 1, 2.08]);
  translate([207, 246, 0])
    cube([1, 1, 2.12]);
  translate([208, 246, 0])
    cube([1, 1, 2.12]);
  translate([209, 246, 0])
    cube([1, 1, 2.12]);
  translate([210, 246, 0])
    cube([1, 1, 2.12]);
  translate([211, 246, 0])
    cube([1, 1, 2.12]);
  translate([212, 246, 0])
    cube([1, 1, 2.16]);
  translate([213, 246, 0])
    cube([1, 1, 2.16]);
  translate([214, 246, 0])
    cube([1, 1, 2.12]);
  translate([215, 246, 0])
    cube([1, 1, 2.12]);
  translate([216, 246, 0])
    cube([1, 1, 2.12]);
  translate([217, 246, 0])
    cube([1, 1, 2.12]);
  translate([218, 246, 0])
    cube([1, 1, 2.12]);
  translate([219, 246, 0])
    cube([1, 1, 2.12]);
  translate([220, 246, 0])
    cube([1, 1, 2.12]);
  translate([221, 246, 0])
    cube([1, 1, 2.12]);
  translate([222, 246, 0])
    cube([1, 1, 2.12]);
  translate([223, 246, 0])
    cube([1, 1, 2.12]);
  translate([224, 246, 0])
    cube([1, 1, 2.12]);
  translate([225, 246, 0])
    cube([1, 1, 2.16]);
  translate([226, 246, 0])
    cube([1, 1, 2.16]);
  translate([227, 246, 0])
    cube([1, 1, 2.12]);
  translate([228, 246, 0])
    cube([1, 1, 2.12]);
  translate([229, 246, 0])
    cube([1, 1, 2.12]);
  translate([230, 246, 0])
    cube([1, 1, 2.12]);
  translate([231, 246, 0])
    cube([1, 1, 2.12]);
  translate([232, 246, 0])
    cube([1, 1, 2.12]);
  translate([233, 246, 0])
    cube([1, 1, 2.08]);
  translate([234, 246, 0])
    cube([1, 1, 2.12]);
  translate([235, 246, 0])
    cube([1, 1, 2.08]);
  translate([236, 246, 0])
    cube([1, 1, 2.08]);
  translate([237, 246, 0])
    cube([1, 1, 2.08]);
  translate([238, 246, 0])
    cube([1, 1, 2.08]);
  translate([239, 246, 0])
    cube([1, 1, 2.08]);
  translate([240, 246, 0])
    cube([1, 1, 2.08]);
  translate([241, 246, 0])
    cube([1, 1, 2.08]);
  translate([242, 246, 0])
    cube([1, 1, 2.08]);
  translate([243, 246, 0])
    cube([1, 1, 2.08]);
  translate([244, 246, 0])
    cube([1, 1, 2.04]);
  translate([245, 246, 0])
    cube([1, 1, 2.16]);
  translate([246, 246, 0])
    cube([1, 1, 2.12]);
  translate([0, 247, 0])
    cube([1, 1, 2.31]);
  translate([1, 247, 0])
    cube([1, 1, 2.31]);
  translate([2, 247, 0])
    cube([1, 1, 2.31]);
  translate([3, 247, 0])
    cube([1, 1, 2.31]);
  translate([4, 247, 0])
    cube([1, 1, 2.31]);
  translate([5, 247, 0])
    cube([1, 1, 2.31]);
  translate([6, 247, 0])
    cube([1, 1, 2.31]);
  translate([7, 247, 0])
    cube([1, 1, 2.31]);
  translate([8, 247, 0])
    cube([1, 1, 2.31]);
  translate([9, 247, 0])
    cube([1, 1, 2.31]);
  translate([10, 247, 0])
    cube([1, 1, 2.31]);
  translate([11, 247, 0])
    cube([1, 1, 2.27]);
  translate([12, 247, 0])
    cube([1, 1, 2.31]);
  translate([13, 247, 0])
    cube([1, 1, 2.31]);
  translate([14, 247, 0])
    cube([1, 1, 2.31]);
  translate([15, 247, 0])
    cube([1, 1, 2.31]);
  translate([16, 247, 0])
    cube([1, 1, 2.31]);
  translate([17, 247, 0])
    cube([1, 1, 2.27]);
  translate([18, 247, 0])
    cube([1, 1, 2.35]);
  translate([19, 247, 0])
    cube([1, 1, 2.27]);
  translate([20, 247, 0])
    cube([1, 1, 2.27]);
  translate([21, 247, 0])
    cube([1, 1, 2.27]);
  translate([22, 247, 0])
    cube([1, 1, 2.27]);
  translate([23, 247, 0])
    cube([1, 1, 2.27]);
  translate([24, 247, 0])
    cube([1, 1, 2.27]);
  translate([25, 247, 0])
    cube([1, 1, 2.27]);
  translate([26, 247, 0])
    cube([1, 1, 2.27]);
  translate([27, 247, 0])
    cube([1, 1, 2.27]);
  translate([28, 247, 0])
    cube([1, 1, 2.27]);
  translate([29, 247, 0])
    cube([1, 1, 2.27]);
  translate([30, 247, 0])
    cube([1, 1, 2.27]);
  translate([31, 247, 0])
    cube([1, 1, 2.27]);
  translate([32, 247, 0])
    cube([1, 1, 2.31]);
  translate([33, 247, 0])
    cube([1, 1, 2.27]);
  translate([34, 247, 0])
    cube([1, 1, 2.27]);
  translate([35, 247, 0])
    cube([1, 1, 2.27]);
  translate([36, 247, 0])
    cube([1, 1, 2.27]);
  translate([37, 247, 0])
    cube([1, 1, 2.27]);
  translate([38, 247, 0])
    cube([1, 1, 2.24]);
  translate([39, 247, 0])
    cube([1, 1, 2.27]);
  translate([40, 247, 0])
    cube([1, 1, 2.27]);
  translate([41, 247, 0])
    cube([1, 1, 2.27]);
  translate([42, 247, 0])
    cube([1, 1, 2.27]);
  translate([43, 247, 0])
    cube([1, 1, 2.24]);
  translate([44, 247, 0])
    cube([1, 1, 2.27]);
  translate([45, 247, 0])
    cube([1, 1, 2.27]);
  translate([46, 247, 0])
    cube([1, 1, 2.24]);
  translate([47, 247, 0])
    cube([1, 1, 2.27]);
  translate([48, 247, 0])
    cube([1, 1, 2.27]);
  translate([49, 247, 0])
    cube([1, 1, 2.24]);
  translate([50, 247, 0])
    cube([1, 1, 2.24]);
  translate([51, 247, 0])
    cube([1, 1, 2.27]);
  translate([52, 247, 0])
    cube([1, 1, 2.16]);
  translate([53, 247, 0])
    cube([1, 1, 2.16]);
  translate([54, 247, 0])
    cube([1, 1, 2.20]);
  translate([55, 247, 0])
    cube([1, 1, 2.20]);
  translate([56, 247, 0])
    cube([1, 1, 2.20]);
  translate([57, 247, 0])
    cube([1, 1, 2.35]);
  translate([58, 247, 0])
    cube([1, 1, 8.24]);
  translate([59, 247, 0])
    cube([1, 1, 7.80]);
  translate([60, 247, 0])
    cube([1, 1, 1.49]);
  translate([61, 247, 0])
    cube([1, 1, 1.10]);
  translate([62, 247, 0])
    cube([1, 1, 0.94]);
  translate([63, 247, 0])
    cube([1, 1, 1.25]);
  translate([64, 247, 0])
    cube([1, 1, 1.14]);
  translate([65, 247, 0])
    cube([1, 1, 1.06]);
  translate([66, 247, 0])
    cube([1, 1, 1.14]);
  translate([67, 247, 0])
    cube([1, 1, 1.14]);
  translate([68, 247, 0])
    cube([1, 1, 1.25]);
  translate([69, 247, 0])
    cube([1, 1, 1.14]);
  translate([70, 247, 0])
    cube([1, 1, 1.14]);
  translate([71, 247, 0])
    cube([1, 1, 1.49]);
  translate([72, 247, 0])
    cube([1, 1, 1.41]);
  translate([73, 247, 0])
    cube([1, 1, 1.33]);
  translate([74, 247, 0])
    cube([1, 1, 2.20]);
  translate([75, 247, 0])
    cube([1, 1, 3.37]);
  translate([76, 247, 0])
    cube([1, 1, 3.65]);
  translate([77, 247, 0])
    cube([1, 1, 3.73]);
  translate([78, 247, 0])
    cube([1, 1, 3.69]);
  translate([79, 247, 0])
    cube([1, 1, 3.76]);
  translate([80, 247, 0])
    cube([1, 1, 3.92]);
  translate([81, 247, 0])
    cube([1, 1, 3.84]);
  translate([82, 247, 0])
    cube([1, 1, 4.12]);
  translate([83, 247, 0])
    cube([1, 1, 4.16]);
  translate([84, 247, 0])
    cube([1, 1, 4.31]);
  translate([85, 247, 0])
    cube([1, 1, 1.25]);
  translate([86, 247, 0])
    cube([1, 1, 1.65]);
  translate([87, 247, 0])
    cube([1, 1, 1.76]);
  translate([88, 247, 0])
    cube([1, 1, 3.06]);
  translate([89, 247, 0])
    cube([1, 1, 4.86]);
  translate([90, 247, 0])
    cube([1, 1, 2.04]);
  translate([91, 247, 0])
    cube([1, 1, 1.41]);
  translate([92, 247, 0])
    cube([1, 1, 1.41]);
  translate([93, 247, 0])
    cube([1, 1, 1.61]);
  translate([94, 247, 0])
    cube([1, 1, 1.49]);
  translate([95, 247, 0])
    cube([1, 1, 2.82]);
  translate([96, 247, 0])
    cube([1, 1, 1.29]);
  translate([97, 247, 0])
    cube([1, 1, 1.37]);
  translate([98, 247, 0])
    cube([1, 1, 1.22]);
  translate([99, 247, 0])
    cube([1, 1, 1.22]);
  translate([100, 247, 0])
    cube([1, 1, 0.98]);
  translate([101, 247, 0])
    cube([1, 1, 3.22]);
  translate([102, 247, 0])
    cube([1, 1, 3.53]);
  translate([103, 247, 0])
    cube([1, 1, 3.65]);
  translate([104, 247, 0])
    cube([1, 1, 1.92]);
  translate([105, 247, 0])
    cube([1, 1, 2.16]);
  translate([106, 247, 0])
    cube([1, 1, 2.16]);
  translate([107, 247, 0])
    cube([1, 1, 2.12]);
  translate([108, 247, 0])
    cube([1, 1, 2.12]);
  translate([109, 247, 0])
    cube([1, 1, 2.12]);
  translate([110, 247, 0])
    cube([1, 1, 2.16]);
  translate([111, 247, 0])
    cube([1, 1, 2.12]);
  translate([112, 247, 0])
    cube([1, 1, 2.16]);
  translate([113, 247, 0])
    cube([1, 1, 2.12]);
  translate([114, 247, 0])
    cube([1, 1, 2.12]);
  translate([115, 247, 0])
    cube([1, 1, 2.12]);
  translate([116, 247, 0])
    cube([1, 1, 1.96]);
  translate([117, 247, 0])
    cube([1, 1, 2.20]);
  translate([118, 247, 0])
    cube([1, 1, 4.98]);
  translate([119, 247, 0])
    cube([1, 1, 2.39]);
  translate([120, 247, 0])
    cube([1, 1, 2.55]);
  translate([121, 247, 0])
    cube([1, 1, 1.10]);
  translate([122, 247, 0])
    cube([1, 1, 1.29]);
  translate([123, 247, 0])
    cube([1, 1, 1.84]);
  translate([124, 247, 0])
    cube([1, 1, 0.98]);
  translate([125, 247, 0])
    cube([1, 1, 1.06]);
  translate([126, 247, 0])
    cube([1, 1, 1.29]);
  translate([127, 247, 0])
    cube([1, 1, 1.06]);
  translate([128, 247, 0])
    cube([1, 1, 1.73]);
  translate([129, 247, 0])
    cube([1, 1, 2.12]);
  translate([130, 247, 0])
    cube([1, 1, 2.43]);
  translate([131, 247, 0])
    cube([1, 1, 2.55]);
  translate([132, 247, 0])
    cube([1, 1, 2.59]);
  translate([133, 247, 0])
    cube([1, 1, 2.71]);
  translate([134, 247, 0])
    cube([1, 1, 2.67]);
  translate([135, 247, 0])
    cube([1, 1, 2.67]);
  translate([136, 247, 0])
    cube([1, 1, 2.71]);
  translate([137, 247, 0])
    cube([1, 1, 2.75]);
  translate([138, 247, 0])
    cube([1, 1, 2.82]);
  translate([139, 247, 0])
    cube([1, 1, 2.86]);
  translate([140, 247, 0])
    cube([1, 1, 2.90]);
  translate([141, 247, 0])
    cube([1, 1, 3.02]);
  translate([142, 247, 0])
    cube([1, 1, 3.02]);
  translate([143, 247, 0])
    cube([1, 1, 3.14]);
  translate([144, 247, 0])
    cube([1, 1, 3.33]);
  translate([145, 247, 0])
    cube([1, 1, 3.61]);
  translate([146, 247, 0])
    cube([1, 1, 3.73]);
  translate([147, 247, 0])
    cube([1, 1, 4.20]);
  translate([148, 247, 0])
    cube([1, 1, 4.35]);
  translate([149, 247, 0])
    cube([1, 1, 4.51]);
  translate([150, 247, 0])
    cube([1, 1, 4.35]);
  translate([151, 247, 0])
    cube([1, 1, 4.27]);
  translate([152, 247, 0])
    cube([1, 1, 4.31]);
  translate([153, 247, 0])
    cube([1, 1, 4.27]);
  translate([154, 247, 0])
    cube([1, 1, 4.35]);
  translate([155, 247, 0])
    cube([1, 1, 4.24]);
  translate([156, 247, 0])
    cube([1, 1, 4.20]);
  translate([157, 247, 0])
    cube([1, 1, 4.08]);
  translate([158, 247, 0])
    cube([1, 1, 4.08]);
  translate([159, 247, 0])
    cube([1, 1, 4.39]);
  translate([160, 247, 0])
    cube([1, 1, 4.86]);
  translate([161, 247, 0])
    cube([1, 1, 5.65]);
  translate([162, 247, 0])
    cube([1, 1, 6.04]);
  translate([163, 247, 0])
    cube([1, 1, 6.39]);
  translate([164, 247, 0])
    cube([1, 1, 6.31]);
  translate([165, 247, 0])
    cube([1, 1, 2.12]);
  translate([166, 247, 0])
    cube([1, 1, 2.08]);
  translate([167, 247, 0])
    cube([1, 1, 2.04]);
  translate([168, 247, 0])
    cube([1, 1, 2.08]);
  translate([169, 247, 0])
    cube([1, 1, 2.08]);
  translate([170, 247, 0])
    cube([1, 1, 2.08]);
  translate([171, 247, 0])
    cube([1, 1, 2.08]);
  translate([172, 247, 0])
    cube([1, 1, 2.08]);
  translate([173, 247, 0])
    cube([1, 1, 2.08]);
  translate([174, 247, 0])
    cube([1, 1, 2.08]);
  translate([175, 247, 0])
    cube([1, 1, 2.08]);
  translate([176, 247, 0])
    cube([1, 1, 2.12]);
  translate([177, 247, 0])
    cube([1, 1, 2.08]);
  translate([178, 247, 0])
    cube([1, 1, 2.08]);
  translate([179, 247, 0])
    cube([1, 1, 2.08]);
  translate([180, 247, 0])
    cube([1, 1, 2.12]);
  translate([181, 247, 0])
    cube([1, 1, 2.12]);
  translate([182, 247, 0])
    cube([1, 1, 2.12]);
  translate([183, 247, 0])
    cube([1, 1, 2.12]);
  translate([184, 247, 0])
    cube([1, 1, 2.12]);
  translate([185, 247, 0])
    cube([1, 1, 2.12]);
  translate([186, 247, 0])
    cube([1, 1, 2.12]);
  translate([187, 247, 0])
    cube([1, 1, 2.12]);
  translate([188, 247, 0])
    cube([1, 1, 2.04]);
  translate([189, 247, 0])
    cube([1, 1, 2.08]);
  translate([190, 247, 0])
    cube([1, 1, 2.12]);
  translate([191, 247, 0])
    cube([1, 1, 2.12]);
  translate([192, 247, 0])
    cube([1, 1, 2.12]);
  translate([193, 247, 0])
    cube([1, 1, 2.12]);
  translate([194, 247, 0])
    cube([1, 1, 2.12]);
  translate([195, 247, 0])
    cube([1, 1, 2.12]);
  translate([196, 247, 0])
    cube([1, 1, 2.12]);
  translate([197, 247, 0])
    cube([1, 1, 2.12]);
  translate([198, 247, 0])
    cube([1, 1, 2.12]);
  translate([199, 247, 0])
    cube([1, 1, 2.12]);
  translate([200, 247, 0])
    cube([1, 1, 2.12]);
  translate([201, 247, 0])
    cube([1, 1, 2.12]);
  translate([202, 247, 0])
    cube([1, 1, 2.12]);
  translate([203, 247, 0])
    cube([1, 1, 2.16]);
  translate([204, 247, 0])
    cube([1, 1, 2.12]);
  translate([205, 247, 0])
    cube([1, 1, 2.12]);
  translate([206, 247, 0])
    cube([1, 1, 2.12]);
  translate([207, 247, 0])
    cube([1, 1, 2.12]);
  translate([208, 247, 0])
    cube([1, 1, 2.12]);
  translate([209, 247, 0])
    cube([1, 1, 2.12]);
  translate([210, 247, 0])
    cube([1, 1, 2.12]);
  translate([211, 247, 0])
    cube([1, 1, 2.12]);
  translate([212, 247, 0])
    cube([1, 1, 2.12]);
  translate([213, 247, 0])
    cube([1, 1, 2.12]);
  translate([214, 247, 0])
    cube([1, 1, 2.12]);
  translate([215, 247, 0])
    cube([1, 1, 2.12]);
  translate([216, 247, 0])
    cube([1, 1, 2.12]);
  translate([217, 247, 0])
    cube([1, 1, 2.12]);
  translate([218, 247, 0])
    cube([1, 1, 2.12]);
  translate([219, 247, 0])
    cube([1, 1, 2.12]);
  translate([220, 247, 0])
    cube([1, 1, 2.12]);
  translate([221, 247, 0])
    cube([1, 1, 2.12]);
  translate([222, 247, 0])
    cube([1, 1, 2.12]);
  translate([223, 247, 0])
    cube([1, 1, 2.12]);
  translate([224, 247, 0])
    cube([1, 1, 2.12]);
  translate([225, 247, 0])
    cube([1, 1, 2.12]);
  translate([226, 247, 0])
    cube([1, 1, 2.12]);
  translate([227, 247, 0])
    cube([1, 1, 2.12]);
  translate([228, 247, 0])
    cube([1, 1, 2.12]);
  translate([229, 247, 0])
    cube([1, 1, 2.12]);
  translate([230, 247, 0])
    cube([1, 1, 2.12]);
  translate([231, 247, 0])
    cube([1, 1, 2.12]);
  translate([232, 247, 0])
    cube([1, 1, 2.12]);
  translate([233, 247, 0])
    cube([1, 1, 2.12]);
  translate([234, 247, 0])
    cube([1, 1, 2.12]);
  translate([235, 247, 0])
    cube([1, 1, 2.12]);
  translate([236, 247, 0])
    cube([1, 1, 2.12]);
  translate([237, 247, 0])
    cube([1, 1, 2.12]);
  translate([238, 247, 0])
    cube([1, 1, 2.12]);
  translate([239, 247, 0])
    cube([1, 1, 2.12]);
  translate([240, 247, 0])
    cube([1, 1, 2.08]);
  translate([241, 247, 0])
    cube([1, 1, 2.08]);
  translate([242, 247, 0])
    cube([1, 1, 2.12]);
  translate([243, 247, 0])
    cube([1, 1, 2.12]);
  translate([244, 247, 0])
    cube([1, 1, 2.12]);
  translate([245, 247, 0])
    cube([1, 1, 2.12]);
  translate([246, 247, 0])
    cube([1, 1, 2.04]);
  translate([0, 248, 0])
    cube([1, 1, 2.31]);
  translate([1, 248, 0])
    cube([1, 1, 2.31]);
  translate([2, 248, 0])
    cube([1, 1, 2.31]);
  translate([3, 248, 0])
    cube([1, 1, 2.31]);
  translate([4, 248, 0])
    cube([1, 1, 2.31]);
  translate([5, 248, 0])
    cube([1, 1, 2.31]);
  translate([6, 248, 0])
    cube([1, 1, 2.31]);
  translate([7, 248, 0])
    cube([1, 1, 2.31]);
  translate([8, 248, 0])
    cube([1, 1, 2.31]);
  translate([9, 248, 0])
    cube([1, 1, 2.31]);
  translate([10, 248, 0])
    cube([1, 1, 2.31]);
  translate([11, 248, 0])
    cube([1, 1, 2.24]);
  translate([12, 248, 0])
    cube([1, 1, 2.31]);
  translate([13, 248, 0])
    cube([1, 1, 2.31]);
  translate([14, 248, 0])
    cube([1, 1, 2.31]);
  translate([15, 248, 0])
    cube([1, 1, 2.31]);
  translate([16, 248, 0])
    cube([1, 1, 2.31]);
  translate([17, 248, 0])
    cube([1, 1, 2.31]);
  translate([18, 248, 0])
    cube([1, 1, 2.31]);
  translate([19, 248, 0])
    cube([1, 1, 2.31]);
  translate([20, 248, 0])
    cube([1, 1, 2.31]);
  translate([21, 248, 0])
    cube([1, 1, 2.31]);
  translate([22, 248, 0])
    cube([1, 1, 2.31]);
  translate([23, 248, 0])
    cube([1, 1, 2.31]);
  translate([24, 248, 0])
    cube([1, 1, 2.31]);
  translate([25, 248, 0])
    cube([1, 1, 2.27]);
  translate([26, 248, 0])
    cube([1, 1, 2.31]);
  translate([27, 248, 0])
    cube([1, 1, 2.31]);
  translate([28, 248, 0])
    cube([1, 1, 2.31]);
  translate([29, 248, 0])
    cube([1, 1, 2.31]);
  translate([30, 248, 0])
    cube([1, 1, 2.27]);
  translate([31, 248, 0])
    cube([1, 1, 2.27]);
  translate([32, 248, 0])
    cube([1, 1, 2.35]);
  translate([33, 248, 0])
    cube([1, 1, 2.27]);
  translate([34, 248, 0])
    cube([1, 1, 2.27]);
  translate([35, 248, 0])
    cube([1, 1, 2.27]);
  translate([36, 248, 0])
    cube([1, 1, 2.27]);
  translate([37, 248, 0])
    cube([1, 1, 2.27]);
  translate([38, 248, 0])
    cube([1, 1, 2.27]);
  translate([39, 248, 0])
    cube([1, 1, 2.27]);
  translate([40, 248, 0])
    cube([1, 1, 2.27]);
  translate([41, 248, 0])
    cube([1, 1, 2.27]);
  translate([42, 248, 0])
    cube([1, 1, 2.27]);
  translate([43, 248, 0])
    cube([1, 1, 2.27]);
  translate([44, 248, 0])
    cube([1, 1, 2.27]);
  translate([45, 248, 0])
    cube([1, 1, 2.27]);
  translate([46, 248, 0])
    cube([1, 1, 2.27]);
  translate([47, 248, 0])
    cube([1, 1, 2.27]);
  translate([48, 248, 0])
    cube([1, 1, 2.24]);
  translate([49, 248, 0])
    cube([1, 1, 2.24]);
  translate([50, 248, 0])
    cube([1, 1, 2.24]);
  translate([51, 248, 0])
    cube([1, 1, 2.24]);
  translate([52, 248, 0])
    cube([1, 1, 2.20]);
  translate([53, 248, 0])
    cube([1, 1, 2.20]);
  translate([54, 248, 0])
    cube([1, 1, 2.20]);
  translate([55, 248, 0])
    cube([1, 1, 2.24]);
  translate([56, 248, 0])
    cube([1, 1, 2.27]);
  translate([57, 248, 0])
    cube([1, 1, 2.12]);
  translate([58, 248, 0])
    cube([1, 1, 8.12]);
  translate([59, 248, 0])
    cube([1, 1, 7.96]);
  translate([60, 248, 0])
    cube([1, 1, 0.59]);
  translate([61, 248, 0])
    cube([1, 1, 0.75]);
  translate([62, 248, 0])
    cube([1, 1, 0.98]);
  translate([63, 248, 0])
    cube([1, 1, 1.10]);
  translate([64, 248, 0])
    cube([1, 1, 0.98]);
  translate([65, 248, 0])
    cube([1, 1, 1.02]);
  translate([66, 248, 0])
    cube([1, 1, 1.14]);
  translate([67, 248, 0])
    cube([1, 1, 0.98]);
  translate([68, 248, 0])
    cube([1, 1, 0.94]);
  translate([69, 248, 0])
    cube([1, 1, 1.02]);
  translate([70, 248, 0])
    cube([1, 1, 0.90]);
  translate([71, 248, 0])
    cube([1, 1, 1.49]);
  translate([72, 248, 0])
    cube([1, 1, 0.98]);
  translate([73, 248, 0])
    cube([1, 1, 1.29]);
  translate([74, 248, 0])
    cube([1, 1, 2.00]);
  translate([75, 248, 0])
    cube([1, 1, 3.45]);
  translate([76, 248, 0])
    cube([1, 1, 3.76]);
  translate([77, 248, 0])
    cube([1, 1, 3.84]);
  translate([78, 248, 0])
    cube([1, 1, 3.65]);
  translate([79, 248, 0])
    cube([1, 1, 3.73]);
  translate([80, 248, 0])
    cube([1, 1, 3.96]);
  translate([81, 248, 0])
    cube([1, 1, 4.08]);
  translate([82, 248, 0])
    cube([1, 1, 4.27]);
  translate([83, 248, 0])
    cube([1, 1, 4.59]);
  translate([84, 248, 0])
    cube([1, 1, 4.78]);
  translate([85, 248, 0])
    cube([1, 1, 4.78]);
  translate([86, 248, 0])
    cube([1, 1, 3.92]);
  translate([87, 248, 0])
    cube([1, 1, 1.61]);
  translate([88, 248, 0])
    cube([1, 1, 0.98]);
  translate([89, 248, 0])
    cube([1, 1, 0.86]);
  translate([90, 248, 0])
    cube([1, 1, 1.02]);
  translate([91, 248, 0])
    cube([1, 1, 1.10]);
  translate([92, 248, 0])
    cube([1, 1, 1.69]);
  translate([93, 248, 0])
    cube([1, 1, 1.80]);
  translate([94, 248, 0])
    cube([1, 1, 1.49]);
  translate([95, 248, 0])
    cube([1, 1, 0.63]);
  translate([96, 248, 0])
    cube([1, 1, 0.47]);
  translate([97, 248, 0])
    cube([1, 1, 1.37]);
  translate([98, 248, 0])
    cube([1, 1, 1.49]);
  translate([99, 248, 0])
    cube([1, 1, 1.37]);
  translate([100, 248, 0])
    cube([1, 1, 1.29]);
  translate([101, 248, 0])
    cube([1, 1, 1.41]);
  translate([102, 248, 0])
    cube([1, 1, 3.45]);
  translate([103, 248, 0])
    cube([1, 1, 4.12]);
  translate([104, 248, 0])
    cube([1, 1, 2.16]);
  translate([105, 248, 0])
    cube([1, 1, 2.12]);
  translate([106, 248, 0])
    cube([1, 1, 2.12]);
  translate([107, 248, 0])
    cube([1, 1, 2.08]);
  translate([108, 248, 0])
    cube([1, 1, 2.16]);
  translate([109, 248, 0])
    cube([1, 1, 2.16]);
  translate([110, 248, 0])
    cube([1, 1, 2.12]);
  translate([111, 248, 0])
    cube([1, 1, 2.12]);
  translate([112, 248, 0])
    cube([1, 1, 2.16]);
  translate([113, 248, 0])
    cube([1, 1, 2.12]);
  translate([114, 248, 0])
    cube([1, 1, 2.12]);
  translate([115, 248, 0])
    cube([1, 1, 2.12]);
  translate([116, 248, 0])
    cube([1, 1, 2.00]);
  translate([117, 248, 0])
    cube([1, 1, 2.20]);
  translate([118, 248, 0])
    cube([1, 1, 4.27]);
  translate([119, 248, 0])
    cube([1, 1, 1.84]);
  translate([120, 248, 0])
    cube([1, 1, 2.78]);
  translate([121, 248, 0])
    cube([1, 1, 1.18]);
  translate([122, 248, 0])
    cube([1, 1, 0.82]);
  translate([123, 248, 0])
    cube([1, 1, 0.67]);
  translate([124, 248, 0])
    cube([1, 1, 1.14]);
  translate([125, 248, 0])
    cube([1, 1, 1.14]);
  translate([126, 248, 0])
    cube([1, 1, 1.84]);
  translate([127, 248, 0])
    cube([1, 1, 2.00]);
  translate([128, 248, 0])
    cube([1, 1, 2.35]);
  translate([129, 248, 0])
    cube([1, 1, 2.39]);
  translate([130, 248, 0])
    cube([1, 1, 2.55]);
  translate([131, 248, 0])
    cube([1, 1, 2.67]);
  translate([132, 248, 0])
    cube([1, 1, 2.63]);
  translate([133, 248, 0])
    cube([1, 1, 2.75]);
  translate([134, 248, 0])
    cube([1, 1, 2.63]);
  translate([135, 248, 0])
    cube([1, 1, 2.63]);
  translate([136, 248, 0])
    cube([1, 1, 2.63]);
  translate([137, 248, 0])
    cube([1, 1, 2.75]);
  translate([138, 248, 0])
    cube([1, 1, 2.82]);
  translate([139, 248, 0])
    cube([1, 1, 2.86]);
  translate([140, 248, 0])
    cube([1, 1, 2.98]);
  translate([141, 248, 0])
    cube([1, 1, 3.02]);
  translate([142, 248, 0])
    cube([1, 1, 2.98]);
  translate([143, 248, 0])
    cube([1, 1, 3.14]);
  translate([144, 248, 0])
    cube([1, 1, 3.25]);
  translate([145, 248, 0])
    cube([1, 1, 3.41]);
  translate([146, 248, 0])
    cube([1, 1, 3.80]);
  translate([147, 248, 0])
    cube([1, 1, 4.16]);
  translate([148, 248, 0])
    cube([1, 1, 4.35]);
  translate([149, 248, 0])
    cube([1, 1, 4.43]);
  translate([150, 248, 0])
    cube([1, 1, 4.27]);
  translate([151, 248, 0])
    cube([1, 1, 4.24]);
  translate([152, 248, 0])
    cube([1, 1, 4.24]);
  translate([153, 248, 0])
    cube([1, 1, 4.24]);
  translate([154, 248, 0])
    cube([1, 1, 4.35]);
  translate([155, 248, 0])
    cube([1, 1, 4.27]);
  translate([156, 248, 0])
    cube([1, 1, 4.12]);
  translate([157, 248, 0])
    cube([1, 1, 4.08]);
  translate([158, 248, 0])
    cube([1, 1, 4.12]);
  translate([159, 248, 0])
    cube([1, 1, 4.35]);
  translate([160, 248, 0])
    cube([1, 1, 4.90]);
  translate([161, 248, 0])
    cube([1, 1, 5.65]);
  translate([162, 248, 0])
    cube([1, 1, 6.31]);
  translate([163, 248, 0])
    cube([1, 1, 6.51]);
  translate([164, 248, 0])
    cube([1, 1, 6.12]);
  translate([165, 248, 0])
    cube([1, 1, 2.04]);
  translate([166, 248, 0])
    cube([1, 1, 2.04]);
  translate([167, 248, 0])
    cube([1, 1, 2.08]);
  translate([168, 248, 0])
    cube([1, 1, 2.08]);
  translate([169, 248, 0])
    cube([1, 1, 2.08]);
  translate([170, 248, 0])
    cube([1, 1, 2.08]);
  translate([171, 248, 0])
    cube([1, 1, 2.08]);
  translate([172, 248, 0])
    cube([1, 1, 2.08]);
  translate([173, 248, 0])
    cube([1, 1, 2.12]);
  translate([174, 248, 0])
    cube([1, 1, 2.08]);
  translate([175, 248, 0])
    cube([1, 1, 2.12]);
  translate([176, 248, 0])
    cube([1, 1, 2.08]);
  translate([177, 248, 0])
    cube([1, 1, 2.08]);
  translate([178, 248, 0])
    cube([1, 1, 2.08]);
  translate([179, 248, 0])
    cube([1, 1, 2.12]);
  translate([180, 248, 0])
    cube([1, 1, 2.00]);
  translate([181, 248, 0])
    cube([1, 1, 2.08]);
  translate([182, 248, 0])
    cube([1, 1, 2.12]);
  translate([183, 248, 0])
    cube([1, 1, 2.08]);
  translate([184, 248, 0])
    cube([1, 1, 2.12]);
  translate([185, 248, 0])
    cube([1, 1, 2.08]);
  translate([186, 248, 0])
    cube([1, 1, 2.12]);
  translate([187, 248, 0])
    cube([1, 1, 2.12]);
  translate([188, 248, 0])
    cube([1, 1, 2.08]);
  translate([189, 248, 0])
    cube([1, 1, 2.12]);
  translate([190, 248, 0])
    cube([1, 1, 2.12]);
  translate([191, 248, 0])
    cube([1, 1, 2.12]);
  translate([192, 248, 0])
    cube([1, 1, 2.12]);
  translate([193, 248, 0])
    cube([1, 1, 2.08]);
  translate([194, 248, 0])
    cube([1, 1, 2.12]);
  translate([195, 248, 0])
    cube([1, 1, 2.16]);
  translate([196, 248, 0])
    cube([1, 1, 2.12]);
  translate([197, 248, 0])
    cube([1, 1, 2.12]);
  translate([198, 248, 0])
    cube([1, 1, 2.12]);
  translate([199, 248, 0])
    cube([1, 1, 2.12]);
  translate([200, 248, 0])
    cube([1, 1, 2.12]);
  translate([201, 248, 0])
    cube([1, 1, 2.12]);
  translate([202, 248, 0])
    cube([1, 1, 2.12]);
  translate([203, 248, 0])
    cube([1, 1, 2.16]);
  translate([204, 248, 0])
    cube([1, 1, 2.16]);
  translate([205, 248, 0])
    cube([1, 1, 2.16]);
  translate([206, 248, 0])
    cube([1, 1, 2.16]);
  translate([207, 248, 0])
    cube([1, 1, 2.16]);
  translate([208, 248, 0])
    cube([1, 1, 2.12]);
  translate([209, 248, 0])
    cube([1, 1, 2.12]);
  translate([210, 248, 0])
    cube([1, 1, 2.12]);
  translate([211, 248, 0])
    cube([1, 1, 2.12]);
  translate([212, 248, 0])
    cube([1, 1, 2.12]);
  translate([213, 248, 0])
    cube([1, 1, 2.16]);
  translate([214, 248, 0])
    cube([1, 1, 2.12]);
  translate([215, 248, 0])
    cube([1, 1, 2.08]);
  translate([216, 248, 0])
    cube([1, 1, 2.12]);
  translate([217, 248, 0])
    cube([1, 1, 2.12]);
  translate([218, 248, 0])
    cube([1, 1, 2.16]);
  translate([219, 248, 0])
    cube([1, 1, 2.12]);
  translate([220, 248, 0])
    cube([1, 1, 2.12]);
  translate([221, 248, 0])
    cube([1, 1, 2.12]);
  translate([222, 248, 0])
    cube([1, 1, 2.12]);
  translate([223, 248, 0])
    cube([1, 1, 2.16]);
  translate([224, 248, 0])
    cube([1, 1, 2.12]);
  translate([225, 248, 0])
    cube([1, 1, 2.12]);
  translate([226, 248, 0])
    cube([1, 1, 2.12]);
  translate([227, 248, 0])
    cube([1, 1, 2.12]);
  translate([228, 248, 0])
    cube([1, 1, 2.12]);
  translate([229, 248, 0])
    cube([1, 1, 2.12]);
  translate([230, 248, 0])
    cube([1, 1, 2.12]);
  translate([231, 248, 0])
    cube([1, 1, 2.12]);
  translate([232, 248, 0])
    cube([1, 1, 2.12]);
  translate([233, 248, 0])
    cube([1, 1, 2.12]);
  translate([234, 248, 0])
    cube([1, 1, 2.12]);
  translate([235, 248, 0])
    cube([1, 1, 2.12]);
  translate([236, 248, 0])
    cube([1, 1, 2.12]);
  translate([237, 248, 0])
    cube([1, 1, 2.12]);
  translate([238, 248, 0])
    cube([1, 1, 2.12]);
  translate([239, 248, 0])
    cube([1, 1, 2.12]);
  translate([240, 248, 0])
    cube([1, 1, 2.12]);
  translate([241, 248, 0])
    cube([1, 1, 2.08]);
  translate([242, 248, 0])
    cube([1, 1, 2.08]);
  translate([243, 248, 0])
    cube([1, 1, 2.12]);
  translate([244, 248, 0])
    cube([1, 1, 2.12]);
  translate([245, 248, 0])
    cube([1, 1, 2.12]);
  translate([246, 248, 0])
    cube([1, 1, 2.08]);
  translate([0, 249, 0])
    cube([1, 1, 2.31]);
  translate([1, 249, 0])
    cube([1, 1, 2.31]);
  translate([2, 249, 0])
    cube([1, 1, 2.31]);
  translate([3, 249, 0])
    cube([1, 1, 2.31]);
  translate([4, 249, 0])
    cube([1, 1, 2.31]);
  translate([5, 249, 0])
    cube([1, 1, 2.31]);
  translate([6, 249, 0])
    cube([1, 1, 2.31]);
  translate([7, 249, 0])
    cube([1, 1, 2.31]);
  translate([8, 249, 0])
    cube([1, 1, 2.31]);
  translate([9, 249, 0])
    cube([1, 1, 2.31]);
  translate([10, 249, 0])
    cube([1, 1, 2.31]);
  translate([11, 249, 0])
    cube([1, 1, 2.27]);
  translate([12, 249, 0])
    cube([1, 1, 2.31]);
  translate([13, 249, 0])
    cube([1, 1, 2.31]);
  translate([14, 249, 0])
    cube([1, 1, 2.31]);
  translate([15, 249, 0])
    cube([1, 1, 2.31]);
  translate([16, 249, 0])
    cube([1, 1, 2.31]);
  translate([17, 249, 0])
    cube([1, 1, 2.31]);
  translate([18, 249, 0])
    cube([1, 1, 2.31]);
  translate([19, 249, 0])
    cube([1, 1, 2.31]);
  translate([20, 249, 0])
    cube([1, 1, 2.31]);
  translate([21, 249, 0])
    cube([1, 1, 2.31]);
  translate([22, 249, 0])
    cube([1, 1, 2.31]);
  translate([23, 249, 0])
    cube([1, 1, 2.31]);
  translate([24, 249, 0])
    cube([1, 1, 2.31]);
  translate([25, 249, 0])
    cube([1, 1, 2.27]);
  translate([26, 249, 0])
    cube([1, 1, 2.31]);
  translate([27, 249, 0])
    cube([1, 1, 2.31]);
  translate([28, 249, 0])
    cube([1, 1, 2.31]);
  translate([29, 249, 0])
    cube([1, 1, 2.31]);
  translate([30, 249, 0])
    cube([1, 1, 2.27]);
  translate([31, 249, 0])
    cube([1, 1, 2.27]);
  translate([32, 249, 0])
    cube([1, 1, 2.35]);
  translate([33, 249, 0])
    cube([1, 1, 2.27]);
  translate([34, 249, 0])
    cube([1, 1, 2.27]);
  translate([35, 249, 0])
    cube([1, 1, 2.27]);
  translate([36, 249, 0])
    cube([1, 1, 2.27]);
  translate([37, 249, 0])
    cube([1, 1, 2.27]);
  translate([38, 249, 0])
    cube([1, 1, 2.27]);
  translate([39, 249, 0])
    cube([1, 1, 2.27]);
  translate([40, 249, 0])
    cube([1, 1, 2.27]);
  translate([41, 249, 0])
    cube([1, 1, 2.27]);
  translate([42, 249, 0])
    cube([1, 1, 2.27]);
  translate([43, 249, 0])
    cube([1, 1, 2.27]);
  translate([44, 249, 0])
    cube([1, 1, 2.27]);
  translate([45, 249, 0])
    cube([1, 1, 2.27]);
  translate([46, 249, 0])
    cube([1, 1, 2.27]);
  translate([47, 249, 0])
    cube([1, 1, 2.27]);
  translate([48, 249, 0])
    cube([1, 1, 2.24]);
  translate([49, 249, 0])
    cube([1, 1, 2.24]);
  translate([50, 249, 0])
    cube([1, 1, 2.24]);
  translate([51, 249, 0])
    cube([1, 1, 2.24]);
  translate([52, 249, 0])
    cube([1, 1, 2.20]);
  translate([53, 249, 0])
    cube([1, 1, 2.20]);
  translate([54, 249, 0])
    cube([1, 1, 2.20]);
  translate([55, 249, 0])
    cube([1, 1, 2.24]);
  translate([56, 249, 0])
    cube([1, 1, 2.27]);
  translate([57, 249, 0])
    cube([1, 1, 2.35]);
  translate([58, 249, 0])
    cube([1, 1, 8.24]);
  translate([59, 249, 0])
    cube([1, 1, 7.65]);
  translate([60, 249, 0])
    cube([1, 1, 8.12]);
  translate([61, 249, 0])
    cube([1, 1, 6.31]);
  translate([62, 249, 0])
    cube([1, 1, 1.92]);
  translate([63, 249, 0])
    cube([1, 1, 1.10]);
  translate([64, 249, 0])
    cube([1, 1, 1.10]);
  translate([65, 249, 0])
    cube([1, 1, 0.78]);
  translate([66, 249, 0])
    cube([1, 1, 0.78]);
  translate([67, 249, 0])
    cube([1, 1, 0.82]);
  translate([68, 249, 0])
    cube([1, 1, 1.10]);
  translate([69, 249, 0])
    cube([1, 1, 1.14]);
  translate([70, 249, 0])
    cube([1, 1, 1.18]);
  translate([71, 249, 0])
    cube([1, 1, 1.06]);
  translate([72, 249, 0])
    cube([1, 1, 1.37]);
  translate([73, 249, 0])
    cube([1, 1, 1.22]);
  translate([74, 249, 0])
    cube([1, 1, 3.22]);
  translate([75, 249, 0])
    cube([1, 1, 3.53]);
  translate([76, 249, 0])
    cube([1, 1, 3.84]);
  translate([77, 249, 0])
    cube([1, 1, 3.96]);
  translate([78, 249, 0])
    cube([1, 1, 3.73]);
  translate([79, 249, 0])
    cube([1, 1, 3.76]);
  translate([80, 249, 0])
    cube([1, 1, 3.84]);
  translate([81, 249, 0])
    cube([1, 1, 3.92]);
  translate([82, 249, 0])
    cube([1, 1, 4.24]);
  translate([83, 249, 0])
    cube([1, 1, 4.43]);
  translate([84, 249, 0])
    cube([1, 1, 4.67]);
  translate([85, 249, 0])
    cube([1, 1, 4.78]);
  translate([86, 249, 0])
    cube([1, 1, 4.47]);
  translate([87, 249, 0])
    cube([1, 1, 4.20]);
  translate([88, 249, 0])
    cube([1, 1, 3.92]);
  translate([89, 249, 0])
    cube([1, 1, 3.92]);
  translate([90, 249, 0])
    cube([1, 1, 3.61]);
  translate([91, 249, 0])
    cube([1, 1, 2.75]);
  translate([92, 249, 0])
    cube([1, 1, 0.94]);
  translate([93, 249, 0])
    cube([1, 1, 1.22]);
  translate([94, 249, 0])
    cube([1, 1, 1.10]);
  translate([95, 249, 0])
    cube([1, 1, 2.31]);
  translate([96, 249, 0])
    cube([1, 1, 1.84]);
  translate([97, 249, 0])
    cube([1, 1, 1.45]);
  translate([98, 249, 0])
    cube([1, 1, 1.41]);
  translate([99, 249, 0])
    cube([1, 1, 1.49]);
  translate([100, 249, 0])
    cube([1, 1, 1.37]);
  translate([101, 249, 0])
    cube([1, 1, 1.45]);
  translate([102, 249, 0])
    cube([1, 1, 1.29]);
  translate([103, 249, 0])
    cube([1, 1, 3.80]);
  translate([104, 249, 0])
    cube([1, 1, 2.12]);
  translate([105, 249, 0])
    cube([1, 1, 2.16]);
  translate([106, 249, 0])
    cube([1, 1, 2.16]);
  translate([107, 249, 0])
    cube([1, 1, 2.16]);
  translate([108, 249, 0])
    cube([1, 1, 2.16]);
  translate([109, 249, 0])
    cube([1, 1, 2.16]);
  translate([110, 249, 0])
    cube([1, 1, 2.16]);
  translate([111, 249, 0])
    cube([1, 1, 2.16]);
  translate([112, 249, 0])
    cube([1, 1, 2.16]);
  translate([113, 249, 0])
    cube([1, 1, 2.12]);
  translate([114, 249, 0])
    cube([1, 1, 2.12]);
  translate([115, 249, 0])
    cube([1, 1, 2.12]);
  translate([116, 249, 0])
    cube([1, 1, 2.16]);
  translate([117, 249, 0])
    cube([1, 1, 2.12]);
  translate([118, 249, 0])
    cube([1, 1, 2.98]);
  translate([119, 249, 0])
    cube([1, 1, 2.98]);
  translate([120, 249, 0])
    cube([1, 1, 1.41]);
  translate([121, 249, 0])
    cube([1, 1, 0.98]);
  translate([122, 249, 0])
    cube([1, 1, 6.67]);
  translate([123, 249, 0])
    cube([1, 1, 2.39]);
  translate([124, 249, 0])
    cube([1, 1, 2.00]);
  translate([125, 249, 0])
    cube([1, 1, 2.20]);
  translate([126, 249, 0])
    cube([1, 1, 2.35]);
  translate([127, 249, 0])
    cube([1, 1, 2.55]);
  translate([128, 249, 0])
    cube([1, 1, 2.67]);
  translate([129, 249, 0])
    cube([1, 1, 2.71]);
  translate([130, 249, 0])
    cube([1, 1, 2.75]);
  translate([131, 249, 0])
    cube([1, 1, 2.71]);
  translate([132, 249, 0])
    cube([1, 1, 2.75]);
  translate([133, 249, 0])
    cube([1, 1, 2.75]);
  translate([134, 249, 0])
    cube([1, 1, 2.63]);
  translate([135, 249, 0])
    cube([1, 1, 2.63]);
  translate([136, 249, 0])
    cube([1, 1, 2.71]);
  translate([137, 249, 0])
    cube([1, 1, 2.75]);
  translate([138, 249, 0])
    cube([1, 1, 2.82]);
  translate([139, 249, 0])
    cube([1, 1, 2.82]);
  translate([140, 249, 0])
    cube([1, 1, 2.86]);
  translate([141, 249, 0])
    cube([1, 1, 2.90]);
  translate([142, 249, 0])
    cube([1, 1, 2.98]);
  translate([143, 249, 0])
    cube([1, 1, 3.06]);
  translate([144, 249, 0])
    cube([1, 1, 3.25]);
  translate([145, 249, 0])
    cube([1, 1, 3.37]);
  translate([146, 249, 0])
    cube([1, 1, 3.76]);
  translate([147, 249, 0])
    cube([1, 1, 4.12]);
  translate([148, 249, 0])
    cube([1, 1, 4.35]);
  translate([149, 249, 0])
    cube([1, 1, 4.43]);
  translate([150, 249, 0])
    cube([1, 1, 4.27]);
  translate([151, 249, 0])
    cube([1, 1, 4.24]);
  translate([152, 249, 0])
    cube([1, 1, 4.24]);
  translate([153, 249, 0])
    cube([1, 1, 4.35]);
  translate([154, 249, 0])
    cube([1, 1, 4.47]);
  translate([155, 249, 0])
    cube([1, 1, 4.39]);
  translate([156, 249, 0])
    cube([1, 1, 4.27]);
  translate([157, 249, 0])
    cube([1, 1, 4.12]);
  translate([158, 249, 0])
    cube([1, 1, 4.08]);
  translate([159, 249, 0])
    cube([1, 1, 4.39]);
  translate([160, 249, 0])
    cube([1, 1, 4.98]);
  translate([161, 249, 0])
    cube([1, 1, 5.65]);
  translate([162, 249, 0])
    cube([1, 1, 6.20]);
  translate([163, 249, 0])
    cube([1, 1, 6.51]);
  translate([164, 249, 0])
    cube([1, 1, 6.67]);
  translate([165, 249, 0])
    cube([1, 1, 2.04]);
  translate([166, 249, 0])
    cube([1, 1, 2.04]);
  translate([167, 249, 0])
    cube([1, 1, 2.08]);
  translate([168, 249, 0])
    cube([1, 1, 2.08]);
  translate([169, 249, 0])
    cube([1, 1, 2.08]);
  translate([170, 249, 0])
    cube([1, 1, 2.08]);
  translate([171, 249, 0])
    cube([1, 1, 2.08]);
  translate([172, 249, 0])
    cube([1, 1, 2.12]);
  translate([173, 249, 0])
    cube([1, 1, 2.08]);
  translate([174, 249, 0])
    cube([1, 1, 2.12]);
  translate([175, 249, 0])
    cube([1, 1, 2.08]);
  translate([176, 249, 0])
    cube([1, 1, 2.08]);
  translate([177, 249, 0])
    cube([1, 1, 2.08]);
  translate([178, 249, 0])
    cube([1, 1, 2.08]);
  translate([179, 249, 0])
    cube([1, 1, 2.08]);
  translate([180, 249, 0])
    cube([1, 1, 2.08]);
  translate([181, 249, 0])
    cube([1, 1, 2.12]);
  translate([182, 249, 0])
    cube([1, 1, 2.12]);
  translate([183, 249, 0])
    cube([1, 1, 2.08]);
  translate([184, 249, 0])
    cube([1, 1, 2.12]);
  translate([185, 249, 0])
    cube([1, 1, 2.08]);
  translate([186, 249, 0])
    cube([1, 1, 2.12]);
  translate([187, 249, 0])
    cube([1, 1, 2.12]);
  translate([188, 249, 0])
    cube([1, 1, 2.08]);
  translate([189, 249, 0])
    cube([1, 1, 2.12]);
  translate([190, 249, 0])
    cube([1, 1, 2.12]);
  translate([191, 249, 0])
    cube([1, 1, 2.12]);
  translate([192, 249, 0])
    cube([1, 1, 2.12]);
  translate([193, 249, 0])
    cube([1, 1, 2.08]);
  translate([194, 249, 0])
    cube([1, 1, 2.12]);
  translate([195, 249, 0])
    cube([1, 1, 2.16]);
  translate([196, 249, 0])
    cube([1, 1, 2.12]);
  translate([197, 249, 0])
    cube([1, 1, 2.12]);
  translate([198, 249, 0])
    cube([1, 1, 2.12]);
  translate([199, 249, 0])
    cube([1, 1, 2.12]);
  translate([200, 249, 0])
    cube([1, 1, 2.12]);
  translate([201, 249, 0])
    cube([1, 1, 2.12]);
  translate([202, 249, 0])
    cube([1, 1, 2.12]);
  translate([203, 249, 0])
    cube([1, 1, 2.16]);
  translate([204, 249, 0])
    cube([1, 1, 2.16]);
  translate([205, 249, 0])
    cube([1, 1, 2.16]);
  translate([206, 249, 0])
    cube([1, 1, 2.16]);
  translate([207, 249, 0])
    cube([1, 1, 2.16]);
  translate([208, 249, 0])
    cube([1, 1, 2.12]);
  translate([209, 249, 0])
    cube([1, 1, 2.12]);
  translate([210, 249, 0])
    cube([1, 1, 2.12]);
  translate([211, 249, 0])
    cube([1, 1, 2.12]);
  translate([212, 249, 0])
    cube([1, 1, 2.12]);
  translate([213, 249, 0])
    cube([1, 1, 2.16]);
  translate([214, 249, 0])
    cube([1, 1, 2.12]);
  translate([215, 249, 0])
    cube([1, 1, 2.08]);
  translate([216, 249, 0])
    cube([1, 1, 2.12]);
  translate([217, 249, 0])
    cube([1, 1, 2.12]);
  translate([218, 249, 0])
    cube([1, 1, 2.16]);
  translate([219, 249, 0])
    cube([1, 1, 2.12]);
  translate([220, 249, 0])
    cube([1, 1, 2.12]);
  translate([221, 249, 0])
    cube([1, 1, 2.12]);
  translate([222, 249, 0])
    cube([1, 1, 2.12]);
  translate([223, 249, 0])
    cube([1, 1, 2.16]);
  translate([224, 249, 0])
    cube([1, 1, 2.12]);
  translate([225, 249, 0])
    cube([1, 1, 2.12]);
  translate([226, 249, 0])
    cube([1, 1, 2.12]);
  translate([227, 249, 0])
    cube([1, 1, 2.12]);
  translate([228, 249, 0])
    cube([1, 1, 2.12]);
  translate([229, 249, 0])
    cube([1, 1, 2.12]);
  translate([230, 249, 0])
    cube([1, 1, 2.12]);
  translate([231, 249, 0])
    cube([1, 1, 2.12]);
  translate([232, 249, 0])
    cube([1, 1, 2.12]);
  translate([233, 249, 0])
    cube([1, 1, 2.12]);
  translate([234, 249, 0])
    cube([1, 1, 2.12]);
  translate([235, 249, 0])
    cube([1, 1, 2.12]);
  translate([236, 249, 0])
    cube([1, 1, 2.12]);
  translate([237, 249, 0])
    cube([1, 1, 2.12]);
  translate([238, 249, 0])
    cube([1, 1, 2.12]);
  translate([239, 249, 0])
    cube([1, 1, 2.12]);
  translate([240, 249, 0])
    cube([1, 1, 2.12]);
  translate([241, 249, 0])
    cube([1, 1, 2.12]);
  translate([242, 249, 0])
    cube([1, 1, 2.12]);
  translate([243, 249, 0])
    cube([1, 1, 2.12]);
  translate([244, 249, 0])
    cube([1, 1, 2.12]);
  translate([245, 249, 0])
    cube([1, 1, 2.12]);
  translate([246, 249, 0])
    cube([1, 1, 2.12]);
  translate([0, 250, 0])
    cube([1, 1, 2.39]);
  translate([1, 250, 0])
    cube([1, 1, 2.35]);
  translate([2, 250, 0])
    cube([1, 1, 2.35]);
  translate([3, 250, 0])
    cube([1, 1, 2.27]);
  translate([4, 250, 0])
    cube([1, 1, 2.31]);
  translate([5, 250, 0])
    cube([1, 1, 2.31]);
  translate([6, 250, 0])
    cube([1, 1, 2.31]);
  translate([7, 250, 0])
    cube([1, 1, 2.35]);
  translate([8, 250, 0])
    cube([1, 1, 2.31]);
  translate([9, 250, 0])
    cube([1, 1, 2.31]);
  translate([10, 250, 0])
    cube([1, 1, 2.31]);
  translate([11, 250, 0])
    cube([1, 1, 2.31]);
  translate([12, 250, 0])
    cube([1, 1, 2.31]);
  translate([13, 250, 0])
    cube([1, 1, 2.31]);
  translate([14, 250, 0])
    cube([1, 1, 2.31]);
  translate([15, 250, 0])
    cube([1, 1, 2.31]);
  translate([16, 250, 0])
    cube([1, 1, 2.31]);
  translate([17, 250, 0])
    cube([1, 1, 2.31]);
  translate([18, 250, 0])
    cube([1, 1, 2.31]);
  translate([19, 250, 0])
    cube([1, 1, 2.31]);
  translate([20, 250, 0])
    cube([1, 1, 2.31]);
  translate([21, 250, 0])
    cube([1, 1, 2.31]);
  translate([22, 250, 0])
    cube([1, 1, 2.31]);
  translate([23, 250, 0])
    cube([1, 1, 2.31]);
  translate([24, 250, 0])
    cube([1, 1, 2.31]);
  translate([25, 250, 0])
    cube([1, 1, 2.31]);
  translate([26, 250, 0])
    cube([1, 1, 2.31]);
  translate([27, 250, 0])
    cube([1, 1, 2.31]);
  translate([28, 250, 0])
    cube([1, 1, 2.31]);
  translate([29, 250, 0])
    cube([1, 1, 2.31]);
  translate([30, 250, 0])
    cube([1, 1, 2.27]);
  translate([31, 250, 0])
    cube([1, 1, 2.27]);
  translate([32, 250, 0])
    cube([1, 1, 2.31]);
  translate([33, 250, 0])
    cube([1, 1, 2.27]);
  translate([34, 250, 0])
    cube([1, 1, 2.27]);
  translate([35, 250, 0])
    cube([1, 1, 2.27]);
  translate([36, 250, 0])
    cube([1, 1, 2.27]);
  translate([37, 250, 0])
    cube([1, 1, 2.27]);
  translate([38, 250, 0])
    cube([1, 1, 2.27]);
  translate([39, 250, 0])
    cube([1, 1, 2.27]);
  translate([40, 250, 0])
    cube([1, 1, 2.27]);
  translate([41, 250, 0])
    cube([1, 1, 2.27]);
  translate([42, 250, 0])
    cube([1, 1, 2.27]);
  translate([43, 250, 0])
    cube([1, 1, 2.27]);
  translate([44, 250, 0])
    cube([1, 1, 2.27]);
  translate([45, 250, 0])
    cube([1, 1, 2.27]);
  translate([46, 250, 0])
    cube([1, 1, 2.27]);
  translate([47, 250, 0])
    cube([1, 1, 2.27]);
  translate([48, 250, 0])
    cube([1, 1, 2.24]);
  translate([49, 250, 0])
    cube([1, 1, 2.24]);
  translate([50, 250, 0])
    cube([1, 1, 2.24]);
  translate([51, 250, 0])
    cube([1, 1, 2.24]);
  translate([52, 250, 0])
    cube([1, 1, 2.20]);
  translate([53, 250, 0])
    cube([1, 1, 2.20]);
  translate([54, 250, 0])
    cube([1, 1, 2.20]);
  translate([55, 250, 0])
    cube([1, 1, 2.24]);
  translate([56, 250, 0])
    cube([1, 1, 2.31]);
  translate([57, 250, 0])
    cube([1, 1, 3.61]);
  translate([58, 250, 0])
    cube([1, 1, 8.27]);
  translate([59, 250, 0])
    cube([1, 1, 8.24]);
  translate([60, 250, 0])
    cube([1, 1, 7.73]);
  translate([61, 250, 0])
    cube([1, 1, 6.67]);
  translate([62, 250, 0])
    cube([1, 1, 4.94]);
  translate([63, 250, 0])
    cube([1, 1, 3.25]);
  translate([64, 250, 0])
    cube([1, 1, 2.16]);
  translate([65, 250, 0])
    cube([1, 1, 1.49]);
  translate([66, 250, 0])
    cube([1, 1, 1.18]);
  translate([67, 250, 0])
    cube([1, 1, 0.90]);
  translate([68, 250, 0])
    cube([1, 1, 0.82]);
  translate([69, 250, 0])
    cube([1, 1, 0.86]);
  translate([70, 250, 0])
    cube([1, 1, 0.82]);
  translate([71, 250, 0])
    cube([1, 1, 0.94]);
  translate([72, 250, 0])
    cube([1, 1, 0.94]);
  translate([73, 250, 0])
    cube([1, 1, 1.41]);
  translate([74, 250, 0])
    cube([1, 1, 3.14]);
  translate([75, 250, 0])
    cube([1, 1, 3.76]);
  translate([76, 250, 0])
    cube([1, 1, 3.80]);
  translate([77, 250, 0])
    cube([1, 1, 4.00]);
  translate([78, 250, 0])
    cube([1, 1, 3.80]);
  translate([79, 250, 0])
    cube([1, 1, 3.92]);
  translate([80, 250, 0])
    cube([1, 1, 3.92]);
  translate([81, 250, 0])
    cube([1, 1, 3.96]);
  translate([82, 250, 0])
    cube([1, 1, 4.20]);
  translate([83, 250, 0])
    cube([1, 1, 4.35]);
  translate([84, 250, 0])
    cube([1, 1, 4.71]);
  translate([85, 250, 0])
    cube([1, 1, 4.67]);
  translate([86, 250, 0])
    cube([1, 1, 4.55]);
  translate([87, 250, 0])
    cube([1, 1, 4.27]);
  translate([88, 250, 0])
    cube([1, 1, 4.04]);
  translate([89, 250, 0])
    cube([1, 1, 3.80]);
  translate([90, 250, 0])
    cube([1, 1, 3.65]);
  translate([91, 250, 0])
    cube([1, 1, 3.76]);
  translate([92, 250, 0])
    cube([1, 1, 0.75]);
  translate([93, 250, 0])
    cube([1, 1, 1.69]);
  translate([94, 250, 0])
    cube([1, 1, 0.78]);
  translate([95, 250, 0])
    cube([1, 1, 0.75]);
  translate([96, 250, 0])
    cube([1, 1, 1.33]);
  translate([97, 250, 0])
    cube([1, 1, 1.45]);
  translate([98, 250, 0])
    cube([1, 1, 1.45]);
  translate([99, 250, 0])
    cube([1, 1, 1.45]);
  translate([100, 250, 0])
    cube([1, 1, 1.45]);
  translate([101, 250, 0])
    cube([1, 1, 1.53]);
  translate([102, 250, 0])
    cube([1, 1, 1.37]);
  translate([103, 250, 0])
    cube([1, 1, 2.43]);
  translate([104, 250, 0])
    cube([1, 1, 2.24]);
  translate([105, 250, 0])
    cube([1, 1, 2.16]);
  translate([106, 250, 0])
    cube([1, 1, 2.16]);
  translate([107, 250, 0])
    cube([1, 1, 2.16]);
  translate([108, 250, 0])
    cube([1, 1, 2.16]);
  translate([109, 250, 0])
    cube([1, 1, 2.16]);
  translate([110, 250, 0])
    cube([1, 1, 2.16]);
  translate([111, 250, 0])
    cube([1, 1, 2.16]);
  translate([112, 250, 0])
    cube([1, 1, 2.12]);
  translate([113, 250, 0])
    cube([1, 1, 2.12]);
  translate([114, 250, 0])
    cube([1, 1, 2.12]);
  translate([115, 250, 0])
    cube([1, 1, 2.12]);
  translate([116, 250, 0])
    cube([1, 1, 2.16]);
  translate([117, 250, 0])
    cube([1, 1, 2.12]);
  translate([118, 250, 0])
    cube([1, 1, 2.35]);
  translate([119, 250, 0])
    cube([1, 1, 0.94]);
  translate([120, 250, 0])
    cube([1, 1, 1.73]);
  translate([121, 250, 0])
    cube([1, 1, 2.90]);
  translate([122, 250, 0])
    cube([1, 1, 1.29]);
  translate([123, 250, 0])
    cube([1, 1, 2.04]);
  translate([124, 250, 0])
    cube([1, 1, 2.43]);
  translate([125, 250, 0])
    cube([1, 1, 2.78]);
  translate([126, 250, 0])
    cube([1, 1, 3.02]);
  translate([127, 250, 0])
    cube([1, 1, 3.14]);
  translate([128, 250, 0])
    cube([1, 1, 3.18]);
  translate([129, 250, 0])
    cube([1, 1, 3.10]);
  translate([130, 250, 0])
    cube([1, 1, 2.98]);
  translate([131, 250, 0])
    cube([1, 1, 2.82]);
  translate([132, 250, 0])
    cube([1, 1, 2.67]);
  translate([133, 250, 0])
    cube([1, 1, 2.71]);
  translate([134, 250, 0])
    cube([1, 1, 2.63]);
  translate([135, 250, 0])
    cube([1, 1, 2.71]);
  translate([136, 250, 0])
    cube([1, 1, 2.75]);
  translate([137, 250, 0])
    cube([1, 1, 2.75]);
  translate([138, 250, 0])
    cube([1, 1, 2.75]);
  translate([139, 250, 0])
    cube([1, 1, 2.82]);
  translate([140, 250, 0])
    cube([1, 1, 2.78]);
  translate([141, 250, 0])
    cube([1, 1, 2.86]);
  translate([142, 250, 0])
    cube([1, 1, 2.98]);
  translate([143, 250, 0])
    cube([1, 1, 3.02]);
  translate([144, 250, 0])
    cube([1, 1, 3.25]);
  translate([145, 250, 0])
    cube([1, 1, 3.53]);
  translate([146, 250, 0])
    cube([1, 1, 3.88]);
  translate([147, 250, 0])
    cube([1, 1, 4.24]);
  translate([148, 250, 0])
    cube([1, 1, 4.27]);
  translate([149, 250, 0])
    cube([1, 1, 4.47]);
  translate([150, 250, 0])
    cube([1, 1, 4.24]);
  translate([151, 250, 0])
    cube([1, 1, 4.24]);
  translate([152, 250, 0])
    cube([1, 1, 4.39]);
  translate([153, 250, 0])
    cube([1, 1, 4.47]);
  translate([154, 250, 0])
    cube([1, 1, 4.55]);
  translate([155, 250, 0])
    cube([1, 1, 4.43]);
  translate([156, 250, 0])
    cube([1, 1, 4.27]);
  translate([157, 250, 0])
    cube([1, 1, 4.16]);
  translate([158, 250, 0])
    cube([1, 1, 4.16]);
  translate([159, 250, 0])
    cube([1, 1, 4.35]);
  translate([160, 250, 0])
    cube([1, 1, 4.94]);
  translate([161, 250, 0])
    cube([1, 1, 5.69]);
  translate([162, 250, 0])
    cube([1, 1, 6.27]);
  translate([163, 250, 0])
    cube([1, 1, 6.59]);
  translate([164, 250, 0])
    cube([1, 1, 6.71]);
  translate([165, 250, 0])
    cube([1, 1, 1.84]);
  translate([166, 250, 0])
    cube([1, 1, 2.08]);
  translate([167, 250, 0])
    cube([1, 1, 2.08]);
  translate([168, 250, 0])
    cube([1, 1, 2.08]);
  translate([169, 250, 0])
    cube([1, 1, 2.08]);
  translate([170, 250, 0])
    cube([1, 1, 2.08]);
  translate([171, 250, 0])
    cube([1, 1, 2.08]);
  translate([172, 250, 0])
    cube([1, 1, 2.12]);
  translate([173, 250, 0])
    cube([1, 1, 2.12]);
  translate([174, 250, 0])
    cube([1, 1, 2.12]);
  translate([175, 250, 0])
    cube([1, 1, 2.12]);
  translate([176, 250, 0])
    cube([1, 1, 2.12]);
  translate([177, 250, 0])
    cube([1, 1, 2.12]);
  translate([178, 250, 0])
    cube([1, 1, 2.04]);
  translate([179, 250, 0])
    cube([1, 1, 2.12]);
  translate([180, 250, 0])
    cube([1, 1, 2.12]);
  translate([181, 250, 0])
    cube([1, 1, 2.12]);
  translate([182, 250, 0])
    cube([1, 1, 2.12]);
  translate([183, 250, 0])
    cube([1, 1, 2.12]);
  translate([184, 250, 0])
    cube([1, 1, 2.12]);
  translate([185, 250, 0])
    cube([1, 1, 2.08]);
  translate([186, 250, 0])
    cube([1, 1, 2.12]);
  translate([187, 250, 0])
    cube([1, 1, 2.12]);
  translate([188, 250, 0])
    cube([1, 1, 2.12]);
  translate([189, 250, 0])
    cube([1, 1, 2.12]);
  translate([190, 250, 0])
    cube([1, 1, 2.16]);
  translate([191, 250, 0])
    cube([1, 1, 2.16]);
  translate([192, 250, 0])
    cube([1, 1, 2.12]);
  translate([193, 250, 0])
    cube([1, 1, 2.12]);
  translate([194, 250, 0])
    cube([1, 1, 2.16]);
  translate([195, 250, 0])
    cube([1, 1, 2.16]);
  translate([196, 250, 0])
    cube([1, 1, 2.12]);
  translate([197, 250, 0])
    cube([1, 1, 2.12]);
  translate([198, 250, 0])
    cube([1, 1, 2.12]);
  translate([199, 250, 0])
    cube([1, 1, 2.16]);
  translate([200, 250, 0])
    cube([1, 1, 2.16]);
  translate([201, 250, 0])
    cube([1, 1, 2.12]);
  translate([202, 250, 0])
    cube([1, 1, 2.16]);
  translate([203, 250, 0])
    cube([1, 1, 2.16]);
  translate([204, 250, 0])
    cube([1, 1, 2.16]);
  translate([205, 250, 0])
    cube([1, 1, 2.16]);
  translate([206, 250, 0])
    cube([1, 1, 2.16]);
  translate([207, 250, 0])
    cube([1, 1, 2.16]);
  translate([208, 250, 0])
    cube([1, 1, 2.16]);
  translate([209, 250, 0])
    cube([1, 1, 2.12]);
  translate([210, 250, 0])
    cube([1, 1, 2.12]);
  translate([211, 250, 0])
    cube([1, 1, 2.12]);
  translate([212, 250, 0])
    cube([1, 1, 2.12]);
  translate([213, 250, 0])
    cube([1, 1, 2.16]);
  translate([214, 250, 0])
    cube([1, 1, 2.12]);
  translate([215, 250, 0])
    cube([1, 1, 2.12]);
  translate([216, 250, 0])
    cube([1, 1, 2.16]);
  translate([217, 250, 0])
    cube([1, 1, 2.12]);
  translate([218, 250, 0])
    cube([1, 1, 2.12]);
  translate([219, 250, 0])
    cube([1, 1, 2.12]);
  translate([220, 250, 0])
    cube([1, 1, 2.12]);
  translate([221, 250, 0])
    cube([1, 1, 2.12]);
  translate([222, 250, 0])
    cube([1, 1, 2.08]);
  translate([223, 250, 0])
    cube([1, 1, 2.16]);
  translate([224, 250, 0])
    cube([1, 1, 2.16]);
  translate([225, 250, 0])
    cube([1, 1, 2.08]);
  translate([226, 250, 0])
    cube([1, 1, 2.08]);
  translate([227, 250, 0])
    cube([1, 1, 2.12]);
  translate([228, 250, 0])
    cube([1, 1, 2.12]);
  translate([229, 250, 0])
    cube([1, 1, 2.12]);
  translate([230, 250, 0])
    cube([1, 1, 2.12]);
  translate([231, 250, 0])
    cube([1, 1, 2.12]);
  translate([232, 250, 0])
    cube([1, 1, 2.12]);
  translate([233, 250, 0])
    cube([1, 1, 2.12]);
  translate([234, 250, 0])
    cube([1, 1, 2.12]);
  translate([235, 250, 0])
    cube([1, 1, 2.12]);
  translate([236, 250, 0])
    cube([1, 1, 2.08]);
  translate([237, 250, 0])
    cube([1, 1, 2.12]);
  translate([238, 250, 0])
    cube([1, 1, 2.12]);
  translate([239, 250, 0])
    cube([1, 1, 2.12]);
  translate([240, 250, 0])
    cube([1, 1, 2.12]);
  translate([241, 250, 0])
    cube([1, 1, 2.12]);
  translate([242, 250, 0])
    cube([1, 1, 2.12]);
  translate([243, 250, 0])
    cube([1, 1, 2.12]);
  translate([244, 250, 0])
    cube([1, 1, 2.12]);
  translate([245, 250, 0])
    cube([1, 1, 2.12]);
  translate([246, 250, 0])
    cube([1, 1, 2.12]);
  translate([0, 251, 0])
    cube([1, 1, 2.39]);
  translate([1, 251, 0])
    cube([1, 1, 2.35]);
  translate([2, 251, 0])
    cube([1, 1, 2.35]);
  translate([3, 251, 0])
    cube([1, 1, 2.27]);
  translate([4, 251, 0])
    cube([1, 1, 2.31]);
  translate([5, 251, 0])
    cube([1, 1, 2.31]);
  translate([6, 251, 0])
    cube([1, 1, 2.31]);
  translate([7, 251, 0])
    cube([1, 1, 2.35]);
  translate([8, 251, 0])
    cube([1, 1, 2.39]);
  translate([9, 251, 0])
    cube([1, 1, 2.31]);
  translate([10, 251, 0])
    cube([1, 1, 2.31]);
  translate([11, 251, 0])
    cube([1, 1, 2.31]);
  translate([12, 251, 0])
    cube([1, 1, 2.31]);
  translate([13, 251, 0])
    cube([1, 1, 2.31]);
  translate([14, 251, 0])
    cube([1, 1, 2.31]);
  translate([15, 251, 0])
    cube([1, 1, 2.31]);
  translate([16, 251, 0])
    cube([1, 1, 2.31]);
  translate([17, 251, 0])
    cube([1, 1, 2.31]);
  translate([18, 251, 0])
    cube([1, 1, 2.31]);
  translate([19, 251, 0])
    cube([1, 1, 2.31]);
  translate([20, 251, 0])
    cube([1, 1, 2.31]);
  translate([21, 251, 0])
    cube([1, 1, 2.31]);
  translate([22, 251, 0])
    cube([1, 1, 2.31]);
  translate([23, 251, 0])
    cube([1, 1, 2.31]);
  translate([24, 251, 0])
    cube([1, 1, 2.31]);
  translate([25, 251, 0])
    cube([1, 1, 2.31]);
  translate([26, 251, 0])
    cube([1, 1, 2.31]);
  translate([27, 251, 0])
    cube([1, 1, 2.31]);
  translate([28, 251, 0])
    cube([1, 1, 2.31]);
  translate([29, 251, 0])
    cube([1, 1, 2.31]);
  translate([30, 251, 0])
    cube([1, 1, 2.27]);
  translate([31, 251, 0])
    cube([1, 1, 2.27]);
  translate([32, 251, 0])
    cube([1, 1, 2.31]);
  translate([33, 251, 0])
    cube([1, 1, 2.27]);
  translate([34, 251, 0])
    cube([1, 1, 2.27]);
  translate([35, 251, 0])
    cube([1, 1, 2.31]);
  translate([36, 251, 0])
    cube([1, 1, 2.27]);
  translate([37, 251, 0])
    cube([1, 1, 2.27]);
  translate([38, 251, 0])
    cube([1, 1, 2.27]);
  translate([39, 251, 0])
    cube([1, 1, 2.27]);
  translate([40, 251, 0])
    cube([1, 1, 2.27]);
  translate([41, 251, 0])
    cube([1, 1, 2.27]);
  translate([42, 251, 0])
    cube([1, 1, 2.27]);
  translate([43, 251, 0])
    cube([1, 1, 2.27]);
  translate([44, 251, 0])
    cube([1, 1, 2.27]);
  translate([45, 251, 0])
    cube([1, 1, 2.27]);
  translate([46, 251, 0])
    cube([1, 1, 2.27]);
  translate([47, 251, 0])
    cube([1, 1, 2.27]);
  translate([48, 251, 0])
    cube([1, 1, 2.24]);
  translate([49, 251, 0])
    cube([1, 1, 2.24]);
  translate([50, 251, 0])
    cube([1, 1, 2.24]);
  translate([51, 251, 0])
    cube([1, 1, 2.24]);
  translate([52, 251, 0])
    cube([1, 1, 2.20]);
  translate([53, 251, 0])
    cube([1, 1, 2.20]);
  translate([54, 251, 0])
    cube([1, 1, 2.20]);
  translate([55, 251, 0])
    cube([1, 1, 2.24]);
  translate([56, 251, 0])
    cube([1, 1, 2.16]);
  translate([57, 251, 0])
    cube([1, 1, 6.78]);
  translate([58, 251, 0])
    cube([1, 1, 8.39]);
  translate([59, 251, 0])
    cube([1, 1, 8.20]);
  translate([60, 251, 0])
    cube([1, 1, 7.69]);
  translate([61, 251, 0])
    cube([1, 1, 6.63]);
  translate([62, 251, 0])
    cube([1, 1, 5.22]);
  translate([63, 251, 0])
    cube([1, 1, 3.29]);
  translate([64, 251, 0])
    cube([1, 1, 2.27]);
  translate([65, 251, 0])
    cube([1, 1, 1.73]);
  translate([66, 251, 0])
    cube([1, 1, 1.65]);
  translate([67, 251, 0])
    cube([1, 1, 1.53]);
  translate([68, 251, 0])
    cube([1, 1, 1.53]);
  translate([69, 251, 0])
    cube([1, 1, 1.45]);
  translate([70, 251, 0])
    cube([1, 1, 1.53]);
  translate([71, 251, 0])
    cube([1, 1, 1.45]);
  translate([72, 251, 0])
    cube([1, 1, 1.84]);
  translate([73, 251, 0])
    cube([1, 1, 3.49]);
  translate([74, 251, 0])
    cube([1, 1, 3.53]);
  translate([75, 251, 0])
    cube([1, 1, 3.84]);
  translate([76, 251, 0])
    cube([1, 1, 4.08]);
  translate([77, 251, 0])
    cube([1, 1, 3.96]);
  translate([78, 251, 0])
    cube([1, 1, 3.96]);
  translate([79, 251, 0])
    cube([1, 1, 4.04]);
  translate([80, 251, 0])
    cube([1, 1, 4.04]);
  translate([81, 251, 0])
    cube([1, 1, 4.00]);
  translate([82, 251, 0])
    cube([1, 1, 4.24]);
  translate([83, 251, 0])
    cube([1, 1, 4.43]);
  translate([84, 251, 0])
    cube([1, 1, 4.67]);
  translate([85, 251, 0])
    cube([1, 1, 4.71]);
  translate([86, 251, 0])
    cube([1, 1, 4.67]);
  translate([87, 251, 0])
    cube([1, 1, 4.12]);
  translate([88, 251, 0])
    cube([1, 1, 3.92]);
  translate([89, 251, 0])
    cube([1, 1, 3.69]);
  translate([90, 251, 0])
    cube([1, 1, 3.65]);
  translate([91, 251, 0])
    cube([1, 1, 3.84]);
  translate([92, 251, 0])
    cube([1, 1, 2.04]);
  translate([93, 251, 0])
    cube([1, 1, 1.10]);
  translate([94, 251, 0])
    cube([1, 1, 1.10]);
  translate([95, 251, 0])
    cube([1, 1, 1.37]);
  translate([96, 251, 0])
    cube([1, 1, 1.41]);
  translate([97, 251, 0])
    cube([1, 1, 1.45]);
  translate([98, 251, 0])
    cube([1, 1, 1.45]);
  translate([99, 251, 0])
    cube([1, 1, 1.45]);
  translate([100, 251, 0])
    cube([1, 1, 1.61]);
  translate([101, 251, 0])
    cube([1, 1, 1.61]);
  translate([102, 251, 0])
    cube([1, 1, 1.33]);
  translate([103, 251, 0])
    cube([1, 1, 4.59]);
  translate([104, 251, 0])
    cube([1, 1, 2.20]);
  translate([105, 251, 0])
    cube([1, 1, 2.16]);
  translate([106, 251, 0])
    cube([1, 1, 2.16]);
  translate([107, 251, 0])
    cube([1, 1, 2.16]);
  translate([108, 251, 0])
    cube([1, 1, 2.16]);
  translate([109, 251, 0])
    cube([1, 1, 2.16]);
  translate([110, 251, 0])
    cube([1, 1, 2.16]);
  translate([111, 251, 0])
    cube([1, 1, 2.16]);
  translate([112, 251, 0])
    cube([1, 1, 2.12]);
  translate([113, 251, 0])
    cube([1, 1, 2.12]);
  translate([114, 251, 0])
    cube([1, 1, 2.12]);
  translate([115, 251, 0])
    cube([1, 1, 2.12]);
  translate([116, 251, 0])
    cube([1, 1, 2.16]);
  translate([117, 251, 0])
    cube([1, 1, 2.12]);
  translate([118, 251, 0])
    cube([1, 1, 2.47]);
  translate([119, 251, 0])
    cube([1, 1, 1.14]);
  translate([120, 251, 0])
    cube([1, 1, 1.49]);
  translate([121, 251, 0])
    cube([1, 1, 1.65]);
  translate([122, 251, 0])
    cube([1, 1, 3.06]);
  translate([123, 251, 0])
    cube([1, 1, 3.92]);
  translate([124, 251, 0])
    cube([1, 1, 3.80]);
  translate([125, 251, 0])
    cube([1, 1, 3.84]);
  translate([126, 251, 0])
    cube([1, 1, 3.76]);
  translate([127, 251, 0])
    cube([1, 1, 3.84]);
  translate([128, 251, 0])
    cube([1, 1, 3.69]);
  translate([129, 251, 0])
    cube([1, 1, 3.49]);
  translate([130, 251, 0])
    cube([1, 1, 3.22]);
  translate([131, 251, 0])
    cube([1, 1, 2.98]);
  translate([132, 251, 0])
    cube([1, 1, 2.82]);
  translate([133, 251, 0])
    cube([1, 1, 2.63]);
  translate([134, 251, 0])
    cube([1, 1, 2.55]);
  translate([135, 251, 0])
    cube([1, 1, 2.67]);
  translate([136, 251, 0])
    cube([1, 1, 2.75]);
  translate([137, 251, 0])
    cube([1, 1, 2.71]);
  translate([138, 251, 0])
    cube([1, 1, 2.71]);
  translate([139, 251, 0])
    cube([1, 1, 2.75]);
  translate([140, 251, 0])
    cube([1, 1, 2.75]);
  translate([141, 251, 0])
    cube([1, 1, 2.90]);
  translate([142, 251, 0])
    cube([1, 1, 3.02]);
  translate([143, 251, 0])
    cube([1, 1, 3.10]);
  translate([144, 251, 0])
    cube([1, 1, 3.25]);
  translate([145, 251, 0])
    cube([1, 1, 3.45]);
  translate([146, 251, 0])
    cube([1, 1, 3.80]);
  translate([147, 251, 0])
    cube([1, 1, 4.04]);
  translate([148, 251, 0])
    cube([1, 1, 4.35]);
  translate([149, 251, 0])
    cube([1, 1, 4.35]);
  translate([150, 251, 0])
    cube([1, 1, 4.20]);
  translate([151, 251, 0])
    cube([1, 1, 4.31]);
  translate([152, 251, 0])
    cube([1, 1, 4.47]);
  translate([153, 251, 0])
    cube([1, 1, 4.55]);
  translate([154, 251, 0])
    cube([1, 1, 4.67]);
  translate([155, 251, 0])
    cube([1, 1, 4.55]);
  translate([156, 251, 0])
    cube([1, 1, 4.31]);
  translate([157, 251, 0])
    cube([1, 1, 4.12]);
  translate([158, 251, 0])
    cube([1, 1, 4.16]);
  translate([159, 251, 0])
    cube([1, 1, 4.35]);
  translate([160, 251, 0])
    cube([1, 1, 5.02]);
  translate([161, 251, 0])
    cube([1, 1, 5.73]);
  translate([162, 251, 0])
    cube([1, 1, 6.31]);
  translate([163, 251, 0])
    cube([1, 1, 6.59]);
  translate([164, 251, 0])
    cube([1, 1, 6.86]);
  translate([165, 251, 0])
    cube([1, 1, 1.76]);
  translate([166, 251, 0])
    cube([1, 1, 2.08]);
  translate([167, 251, 0])
    cube([1, 1, 2.08]);
  translate([168, 251, 0])
    cube([1, 1, 2.08]);
  translate([169, 251, 0])
    cube([1, 1, 2.08]);
  translate([170, 251, 0])
    cube([1, 1, 2.08]);
  translate([171, 251, 0])
    cube([1, 1, 2.04]);
  translate([172, 251, 0])
    cube([1, 1, 2.12]);
  translate([173, 251, 0])
    cube([1, 1, 2.12]);
  translate([174, 251, 0])
    cube([1, 1, 2.12]);
  translate([175, 251, 0])
    cube([1, 1, 2.12]);
  translate([176, 251, 0])
    cube([1, 1, 2.12]);
  translate([177, 251, 0])
    cube([1, 1, 2.04]);
  translate([178, 251, 0])
    cube([1, 1, 2.12]);
  translate([179, 251, 0])
    cube([1, 1, 2.12]);
  translate([180, 251, 0])
    cube([1, 1, 2.12]);
  translate([181, 251, 0])
    cube([1, 1, 2.12]);
  translate([182, 251, 0])
    cube([1, 1, 2.12]);
  translate([183, 251, 0])
    cube([1, 1, 2.12]);
  translate([184, 251, 0])
    cube([1, 1, 2.12]);
  translate([185, 251, 0])
    cube([1, 1, 2.08]);
  translate([186, 251, 0])
    cube([1, 1, 2.12]);
  translate([187, 251, 0])
    cube([1, 1, 2.12]);
  translate([188, 251, 0])
    cube([1, 1, 2.12]);
  translate([189, 251, 0])
    cube([1, 1, 2.12]);
  translate([190, 251, 0])
    cube([1, 1, 2.12]);
  translate([191, 251, 0])
    cube([1, 1, 2.12]);
  translate([192, 251, 0])
    cube([1, 1, 2.12]);
  translate([193, 251, 0])
    cube([1, 1, 2.12]);
  translate([194, 251, 0])
    cube([1, 1, 2.16]);
  translate([195, 251, 0])
    cube([1, 1, 2.16]);
  translate([196, 251, 0])
    cube([1, 1, 2.12]);
  translate([197, 251, 0])
    cube([1, 1, 2.12]);
  translate([198, 251, 0])
    cube([1, 1, 2.12]);
  translate([199, 251, 0])
    cube([1, 1, 2.16]);
  translate([200, 251, 0])
    cube([1, 1, 2.16]);
  translate([201, 251, 0])
    cube([1, 1, 2.12]);
  translate([202, 251, 0])
    cube([1, 1, 2.16]);
  translate([203, 251, 0])
    cube([1, 1, 2.16]);
  translate([204, 251, 0])
    cube([1, 1, 2.16]);
  translate([205, 251, 0])
    cube([1, 1, 2.16]);
  translate([206, 251, 0])
    cube([1, 1, 2.16]);
  translate([207, 251, 0])
    cube([1, 1, 2.16]);
  translate([208, 251, 0])
    cube([1, 1, 2.12]);
  translate([209, 251, 0])
    cube([1, 1, 2.16]);
  translate([210, 251, 0])
    cube([1, 1, 2.16]);
  translate([211, 251, 0])
    cube([1, 1, 2.12]);
  translate([212, 251, 0])
    cube([1, 1, 2.12]);
  translate([213, 251, 0])
    cube([1, 1, 2.16]);
  translate([214, 251, 0])
    cube([1, 1, 2.12]);
  translate([215, 251, 0])
    cube([1, 1, 2.12]);
  translate([216, 251, 0])
    cube([1, 1, 2.16]);
  translate([217, 251, 0])
    cube([1, 1, 2.12]);
  translate([218, 251, 0])
    cube([1, 1, 2.12]);
  translate([219, 251, 0])
    cube([1, 1, 2.12]);
  translate([220, 251, 0])
    cube([1, 1, 2.12]);
  translate([221, 251, 0])
    cube([1, 1, 2.12]);
  translate([222, 251, 0])
    cube([1, 1, 2.12]);
  translate([223, 251, 0])
    cube([1, 1, 2.08]);
  translate([224, 251, 0])
    cube([1, 1, 2.16]);
  translate([225, 251, 0])
    cube([1, 1, 2.08]);
  translate([226, 251, 0])
    cube([1, 1, 2.08]);
  translate([227, 251, 0])
    cube([1, 1, 2.12]);
  translate([228, 251, 0])
    cube([1, 1, 2.12]);
  translate([229, 251, 0])
    cube([1, 1, 2.12]);
  translate([230, 251, 0])
    cube([1, 1, 2.12]);
  translate([231, 251, 0])
    cube([1, 1, 2.12]);
  translate([232, 251, 0])
    cube([1, 1, 2.12]);
  translate([233, 251, 0])
    cube([1, 1, 2.12]);
  translate([234, 251, 0])
    cube([1, 1, 2.12]);
  translate([235, 251, 0])
    cube([1, 1, 2.12]);
  translate([236, 251, 0])
    cube([1, 1, 2.08]);
  translate([237, 251, 0])
    cube([1, 1, 2.12]);
  translate([238, 251, 0])
    cube([1, 1, 2.12]);
  translate([239, 251, 0])
    cube([1, 1, 2.12]);
  translate([240, 251, 0])
    cube([1, 1, 2.12]);
  translate([241, 251, 0])
    cube([1, 1, 2.12]);
  translate([242, 251, 0])
    cube([1, 1, 2.12]);
  translate([243, 251, 0])
    cube([1, 1, 2.12]);
  translate([244, 251, 0])
    cube([1, 1, 2.12]);
  translate([245, 251, 0])
    cube([1, 1, 2.12]);
  translate([246, 251, 0])
    cube([1, 1, 2.12]);
  translate([0, 252, 0])
    cube([1, 1, 2.35]);
  translate([1, 252, 0])
    cube([1, 1, 2.35]);
  translate([2, 252, 0])
    cube([1, 1, 2.35]);
  translate([3, 252, 0])
    cube([1, 1, 2.35]);
  translate([4, 252, 0])
    cube([1, 1, 2.35]);
  translate([5, 252, 0])
    cube([1, 1, 2.35]);
  translate([6, 252, 0])
    cube([1, 1, 2.35]);
  translate([7, 252, 0])
    cube([1, 1, 2.35]);
  translate([8, 252, 0])
    cube([1, 1, 2.35]);
  translate([9, 252, 0])
    cube([1, 1, 2.35]);
  translate([10, 252, 0])
    cube([1, 1, 2.35]);
  translate([11, 252, 0])
    cube([1, 1, 2.35]);
  translate([12, 252, 0])
    cube([1, 1, 2.31]);
  translate([13, 252, 0])
    cube([1, 1, 2.31]);
  translate([14, 252, 0])
    cube([1, 1, 2.31]);
  translate([15, 252, 0])
    cube([1, 1, 2.31]);
  translate([16, 252, 0])
    cube([1, 1, 2.31]);
  translate([17, 252, 0])
    cube([1, 1, 2.31]);
  translate([18, 252, 0])
    cube([1, 1, 2.31]);
  translate([19, 252, 0])
    cube([1, 1, 2.31]);
  translate([20, 252, 0])
    cube([1, 1, 2.31]);
  translate([21, 252, 0])
    cube([1, 1, 2.31]);
  translate([22, 252, 0])
    cube([1, 1, 2.31]);
  translate([23, 252, 0])
    cube([1, 1, 2.31]);
  translate([24, 252, 0])
    cube([1, 1, 2.31]);
  translate([25, 252, 0])
    cube([1, 1, 2.31]);
  translate([26, 252, 0])
    cube([1, 1, 2.31]);
  translate([27, 252, 0])
    cube([1, 1, 2.31]);
  translate([28, 252, 0])
    cube([1, 1, 2.31]);
  translate([29, 252, 0])
    cube([1, 1, 2.31]);
  translate([30, 252, 0])
    cube([1, 1, 2.31]);
  translate([31, 252, 0])
    cube([1, 1, 2.31]);
  translate([32, 252, 0])
    cube([1, 1, 2.35]);
  translate([33, 252, 0])
    cube([1, 1, 2.27]);
  translate([34, 252, 0])
    cube([1, 1, 2.31]);
  translate([35, 252, 0])
    cube([1, 1, 2.31]);
  translate([36, 252, 0])
    cube([1, 1, 2.31]);
  translate([37, 252, 0])
    cube([1, 1, 2.27]);
  translate([38, 252, 0])
    cube([1, 1, 2.27]);
  translate([39, 252, 0])
    cube([1, 1, 2.27]);
  translate([40, 252, 0])
    cube([1, 1, 2.27]);
  translate([41, 252, 0])
    cube([1, 1, 2.27]);
  translate([42, 252, 0])
    cube([1, 1, 2.27]);
  translate([43, 252, 0])
    cube([1, 1, 2.27]);
  translate([44, 252, 0])
    cube([1, 1, 2.27]);
  translate([45, 252, 0])
    cube([1, 1, 2.27]);
  translate([46, 252, 0])
    cube([1, 1, 2.27]);
  translate([47, 252, 0])
    cube([1, 1, 2.27]);
  translate([48, 252, 0])
    cube([1, 1, 2.24]);
  translate([49, 252, 0])
    cube([1, 1, 2.24]);
  translate([50, 252, 0])
    cube([1, 1, 2.24]);
  translate([51, 252, 0])
    cube([1, 1, 2.24]);
  translate([52, 252, 0])
    cube([1, 1, 2.24]);
  translate([53, 252, 0])
    cube([1, 1, 2.20]);
  translate([54, 252, 0])
    cube([1, 1, 2.24]);
  translate([55, 252, 0])
    cube([1, 1, 2.24]);
  translate([56, 252, 0])
    cube([1, 1, 2.20]);
  translate([57, 252, 0])
    cube([1, 1, 7.41]);
  translate([58, 252, 0])
    cube([1, 1, 8.39]);
  translate([59, 252, 0])
    cube([1, 1, 8.24]);
  translate([60, 252, 0])
    cube([1, 1, 7.65]);
  translate([61, 252, 0])
    cube([1, 1, 6.63]);
  translate([62, 252, 0])
    cube([1, 1, 5.02]);
  translate([63, 252, 0])
    cube([1, 1, 3.61]);
  translate([64, 252, 0])
    cube([1, 1, 2.51]);
  translate([65, 252, 0])
    cube([1, 1, 1.96]);
  translate([66, 252, 0])
    cube([1, 1, 1.92]);
  translate([67, 252, 0])
    cube([1, 1, 2.00]);
  translate([68, 252, 0])
    cube([1, 1, 2.00]);
  translate([69, 252, 0])
    cube([1, 1, 2.04]);
  translate([70, 252, 0])
    cube([1, 1, 2.12]);
  translate([71, 252, 0])
    cube([1, 1, 2.39]);
  translate([72, 252, 0])
    cube([1, 1, 2.98]);
  translate([73, 252, 0])
    cube([1, 1, 3.57]);
  translate([74, 252, 0])
    cube([1, 1, 3.76]);
  translate([75, 252, 0])
    cube([1, 1, 3.96]);
  translate([76, 252, 0])
    cube([1, 1, 4.12]);
  translate([77, 252, 0])
    cube([1, 1, 4.08]);
  translate([78, 252, 0])
    cube([1, 1, 4.00]);
  translate([79, 252, 0])
    cube([1, 1, 4.00]);
  translate([80, 252, 0])
    cube([1, 1, 4.00]);
  translate([81, 252, 0])
    cube([1, 1, 4.12]);
  translate([82, 252, 0])
    cube([1, 1, 4.20]);
  translate([83, 252, 0])
    cube([1, 1, 4.55]);
  translate([84, 252, 0])
    cube([1, 1, 4.51]);
  translate([85, 252, 0])
    cube([1, 1, 4.71]);
  translate([86, 252, 0])
    cube([1, 1, 4.55]);
  translate([87, 252, 0])
    cube([1, 1, 4.04]);
  translate([88, 252, 0])
    cube([1, 1, 3.92]);
  translate([89, 252, 0])
    cube([1, 1, 3.76]);
  translate([90, 252, 0])
    cube([1, 1, 3.57]);
  translate([91, 252, 0])
    cube([1, 1, 3.49]);
  translate([92, 252, 0])
    cube([1, 1, 3.45]);
  translate([93, 252, 0])
    cube([1, 1, 1.92]);
  translate([94, 252, 0])
    cube([1, 1, 1.10]);
  translate([95, 252, 0])
    cube([1, 1, 1.10]);
  translate([96, 252, 0])
    cube([1, 1, 1.37]);
  translate([97, 252, 0])
    cube([1, 1, 1.10]);
  translate([98, 252, 0])
    cube([1, 1, 1.45]);
  translate([99, 252, 0])
    cube([1, 1, 1.45]);
  translate([100, 252, 0])
    cube([1, 1, 1.57]);
  translate([101, 252, 0])
    cube([1, 1, 1.49]);
  translate([102, 252, 0])
    cube([1, 1, 1.76]);
  translate([103, 252, 0])
    cube([1, 1, 2.04]);
  translate([104, 252, 0])
    cube([1, 1, 2.51]);
  translate([105, 252, 0])
    cube([1, 1, 2.12]);
  translate([106, 252, 0])
    cube([1, 1, 2.16]);
  translate([107, 252, 0])
    cube([1, 1, 2.16]);
  translate([108, 252, 0])
    cube([1, 1, 2.16]);
  translate([109, 252, 0])
    cube([1, 1, 2.16]);
  translate([110, 252, 0])
    cube([1, 1, 2.16]);
  translate([111, 252, 0])
    cube([1, 1, 2.16]);
  translate([112, 252, 0])
    cube([1, 1, 2.12]);
  translate([113, 252, 0])
    cube([1, 1, 2.16]);
  translate([114, 252, 0])
    cube([1, 1, 2.12]);
  translate([115, 252, 0])
    cube([1, 1, 2.12]);
  translate([116, 252, 0])
    cube([1, 1, 2.16]);
  translate([117, 252, 0])
    cube([1, 1, 2.16]);
  translate([118, 252, 0])
    cube([1, 1, 2.12]);
  translate([119, 252, 0])
    cube([1, 1, 2.27]);
  translate([120, 252, 0])
    cube([1, 1, 0.94]);
  translate([121, 252, 0])
    cube([1, 1, 4.94]);
  translate([122, 252, 0])
    cube([1, 1, 5.06]);
  translate([123, 252, 0])
    cube([1, 1, 4.67]);
  translate([124, 252, 0])
    cube([1, 1, 4.31]);
  translate([125, 252, 0])
    cube([1, 1, 4.12]);
  translate([126, 252, 0])
    cube([1, 1, 3.92]);
  translate([127, 252, 0])
    cube([1, 1, 4.08]);
  translate([128, 252, 0])
    cube([1, 1, 3.92]);
  translate([129, 252, 0])
    cube([1, 1, 3.73]);
  translate([130, 252, 0])
    cube([1, 1, 3.45]);
  translate([131, 252, 0])
    cube([1, 1, 3.18]);
  translate([132, 252, 0])
    cube([1, 1, 2.98]);
  translate([133, 252, 0])
    cube([1, 1, 2.75]);
  translate([134, 252, 0])
    cube([1, 1, 2.59]);
  translate([135, 252, 0])
    cube([1, 1, 2.75]);
  translate([136, 252, 0])
    cube([1, 1, 2.75]);
  translate([137, 252, 0])
    cube([1, 1, 2.67]);
  translate([138, 252, 0])
    cube([1, 1, 2.78]);
  translate([139, 252, 0])
    cube([1, 1, 2.75]);
  translate([140, 252, 0])
    cube([1, 1, 2.75]);
  translate([141, 252, 0])
    cube([1, 1, 2.82]);
  translate([142, 252, 0])
    cube([1, 1, 3.06]);
  translate([143, 252, 0])
    cube([1, 1, 3.14]);
  translate([144, 252, 0])
    cube([1, 1, 3.25]);
  translate([145, 252, 0])
    cube([1, 1, 3.53]);
  translate([146, 252, 0])
    cube([1, 1, 3.88]);
  translate([147, 252, 0])
    cube([1, 1, 4.12]);
  translate([148, 252, 0])
    cube([1, 1, 4.31]);
  translate([149, 252, 0])
    cube([1, 1, 4.43]);
  translate([150, 252, 0])
    cube([1, 1, 4.27]);
  translate([151, 252, 0])
    cube([1, 1, 4.35]);
  translate([152, 252, 0])
    cube([1, 1, 4.47]);
  translate([153, 252, 0])
    cube([1, 1, 4.67]);
  translate([154, 252, 0])
    cube([1, 1, 4.67]);
  translate([155, 252, 0])
    cube([1, 1, 4.59]);
  translate([156, 252, 0])
    cube([1, 1, 4.31]);
  translate([157, 252, 0])
    cube([1, 1, 4.08]);
  translate([158, 252, 0])
    cube([1, 1, 4.04]);
  translate([159, 252, 0])
    cube([1, 1, 4.27]);
  translate([160, 252, 0])
    cube([1, 1, 5.06]);
  translate([161, 252, 0])
    cube([1, 1, 5.76]);
  translate([162, 252, 0])
    cube([1, 1, 6.27]);
  translate([163, 252, 0])
    cube([1, 1, 6.55]);
  translate([164, 252, 0])
    cube([1, 1, 6.43]);
  translate([165, 252, 0])
    cube([1, 1, 2.78]);
  translate([166, 252, 0])
    cube([1, 1, 2.08]);
  translate([167, 252, 0])
    cube([1, 1, 2.08]);
  translate([168, 252, 0])
    cube([1, 1, 2.12]);
  translate([169, 252, 0])
    cube([1, 1, 2.12]);
  translate([170, 252, 0])
    cube([1, 1, 2.12]);
  translate([171, 252, 0])
    cube([1, 1, 2.12]);
  translate([172, 252, 0])
    cube([1, 1, 2.12]);
  translate([173, 252, 0])
    cube([1, 1, 2.12]);
  translate([174, 252, 0])
    cube([1, 1, 2.12]);
  translate([175, 252, 0])
    cube([1, 1, 2.12]);
  translate([176, 252, 0])
    cube([1, 1, 2.12]);
  translate([177, 252, 0])
    cube([1, 1, 2.08]);
  translate([178, 252, 0])
    cube([1, 1, 2.12]);
  translate([179, 252, 0])
    cube([1, 1, 2.12]);
  translate([180, 252, 0])
    cube([1, 1, 2.12]);
  translate([181, 252, 0])
    cube([1, 1, 2.12]);
  translate([182, 252, 0])
    cube([1, 1, 2.12]);
  translate([183, 252, 0])
    cube([1, 1, 2.12]);
  translate([184, 252, 0])
    cube([1, 1, 2.12]);
  translate([185, 252, 0])
    cube([1, 1, 2.12]);
  translate([186, 252, 0])
    cube([1, 1, 2.12]);
  translate([187, 252, 0])
    cube([1, 1, 2.12]);
  translate([188, 252, 0])
    cube([1, 1, 2.16]);
  translate([189, 252, 0])
    cube([1, 1, 2.16]);
  translate([190, 252, 0])
    cube([1, 1, 2.16]);
  translate([191, 252, 0])
    cube([1, 1, 2.16]);
  translate([192, 252, 0])
    cube([1, 1, 2.16]);
  translate([193, 252, 0])
    cube([1, 1, 2.12]);
  translate([194, 252, 0])
    cube([1, 1, 2.12]);
  translate([195, 252, 0])
    cube([1, 1, 2.16]);
  translate([196, 252, 0])
    cube([1, 1, 2.12]);
  translate([197, 252, 0])
    cube([1, 1, 2.16]);
  translate([198, 252, 0])
    cube([1, 1, 2.12]);
  translate([199, 252, 0])
    cube([1, 1, 2.16]);
  translate([200, 252, 0])
    cube([1, 1, 2.16]);
  translate([201, 252, 0])
    cube([1, 1, 2.16]);
  translate([202, 252, 0])
    cube([1, 1, 2.16]);
  translate([203, 252, 0])
    cube([1, 1, 2.12]);
  translate([204, 252, 0])
    cube([1, 1, 2.16]);
  translate([205, 252, 0])
    cube([1, 1, 2.16]);
  translate([206, 252, 0])
    cube([1, 1, 2.16]);
  translate([207, 252, 0])
    cube([1, 1, 2.16]);
  translate([208, 252, 0])
    cube([1, 1, 2.16]);
  translate([209, 252, 0])
    cube([1, 1, 2.12]);
  translate([210, 252, 0])
    cube([1, 1, 2.16]);
  translate([211, 252, 0])
    cube([1, 1, 2.16]);
  translate([212, 252, 0])
    cube([1, 1, 2.12]);
  translate([213, 252, 0])
    cube([1, 1, 2.16]);
  translate([214, 252, 0])
    cube([1, 1, 2.16]);
  translate([215, 252, 0])
    cube([1, 1, 2.16]);
  translate([216, 252, 0])
    cube([1, 1, 2.16]);
  translate([217, 252, 0])
    cube([1, 1, 2.12]);
  translate([218, 252, 0])
    cube([1, 1, 2.12]);
  translate([219, 252, 0])
    cube([1, 1, 2.16]);
  translate([220, 252, 0])
    cube([1, 1, 2.16]);
  translate([221, 252, 0])
    cube([1, 1, 2.16]);
  translate([222, 252, 0])
    cube([1, 1, 2.12]);
  translate([223, 252, 0])
    cube([1, 1, 2.12]);
  translate([224, 252, 0])
    cube([1, 1, 2.12]);
  translate([225, 252, 0])
    cube([1, 1, 2.12]);
  translate([226, 252, 0])
    cube([1, 1, 2.16]);
  translate([227, 252, 0])
    cube([1, 1, 2.16]);
  translate([228, 252, 0])
    cube([1, 1, 2.12]);
  translate([229, 252, 0])
    cube([1, 1, 2.12]);
  translate([230, 252, 0])
    cube([1, 1, 2.12]);
  translate([231, 252, 0])
    cube([1, 1, 2.12]);
  translate([232, 252, 0])
    cube([1, 1, 2.12]);
  translate([233, 252, 0])
    cube([1, 1, 2.12]);
  translate([234, 252, 0])
    cube([1, 1, 2.12]);
  translate([235, 252, 0])
    cube([1, 1, 2.12]);
  translate([236, 252, 0])
    cube([1, 1, 2.12]);
  translate([237, 252, 0])
    cube([1, 1, 2.12]);
  translate([238, 252, 0])
    cube([1, 1, 2.12]);
  translate([239, 252, 0])
    cube([1, 1, 2.12]);
  translate([240, 252, 0])
    cube([1, 1, 2.12]);
  translate([241, 252, 0])
    cube([1, 1, 2.12]);
  translate([242, 252, 0])
    cube([1, 1, 2.12]);
  translate([243, 252, 0])
    cube([1, 1, 2.12]);
  translate([244, 252, 0])
    cube([1, 1, 2.12]);
  translate([245, 252, 0])
    cube([1, 1, 2.12]);
  translate([246, 252, 0])
    cube([1, 1, 2.12]);
  translate([0, 253, 0])
    cube([1, 1, 2.35]);
  translate([1, 253, 0])
    cube([1, 1, 2.35]);
  translate([2, 253, 0])
    cube([1, 1, 2.35]);
  translate([3, 253, 0])
    cube([1, 1, 2.35]);
  translate([4, 253, 0])
    cube([1, 1, 2.35]);
  translate([5, 253, 0])
    cube([1, 1, 2.35]);
  translate([6, 253, 0])
    cube([1, 1, 2.35]);
  translate([7, 253, 0])
    cube([1, 1, 2.35]);
  translate([8, 253, 0])
    cube([1, 1, 2.39]);
  translate([9, 253, 0])
    cube([1, 1, 2.35]);
  translate([10, 253, 0])
    cube([1, 1, 2.35]);
  translate([11, 253, 0])
    cube([1, 1, 2.35]);
  translate([12, 253, 0])
    cube([1, 1, 2.31]);
  translate([13, 253, 0])
    cube([1, 1, 2.31]);
  translate([14, 253, 0])
    cube([1, 1, 2.31]);
  translate([15, 253, 0])
    cube([1, 1, 2.31]);
  translate([16, 253, 0])
    cube([1, 1, 2.31]);
  translate([17, 253, 0])
    cube([1, 1, 2.31]);
  translate([18, 253, 0])
    cube([1, 1, 2.31]);
  translate([19, 253, 0])
    cube([1, 1, 2.31]);
  translate([20, 253, 0])
    cube([1, 1, 2.27]);
  translate([21, 253, 0])
    cube([1, 1, 2.27]);
  translate([22, 253, 0])
    cube([1, 1, 2.31]);
  translate([23, 253, 0])
    cube([1, 1, 2.31]);
  translate([24, 253, 0])
    cube([1, 1, 2.31]);
  translate([25, 253, 0])
    cube([1, 1, 2.31]);
  translate([26, 253, 0])
    cube([1, 1, 2.31]);
  translate([27, 253, 0])
    cube([1, 1, 2.31]);
  translate([28, 253, 0])
    cube([1, 1, 2.31]);
  translate([29, 253, 0])
    cube([1, 1, 2.31]);
  translate([30, 253, 0])
    cube([1, 1, 2.31]);
  translate([31, 253, 0])
    cube([1, 1, 2.27]);
  translate([32, 253, 0])
    cube([1, 1, 2.31]);
  translate([33, 253, 0])
    cube([1, 1, 2.31]);
  translate([34, 253, 0])
    cube([1, 1, 2.31]);
  translate([35, 253, 0])
    cube([1, 1, 2.27]);
  translate([36, 253, 0])
    cube([1, 1, 2.27]);
  translate([37, 253, 0])
    cube([1, 1, 2.27]);
  translate([38, 253, 0])
    cube([1, 1, 2.27]);
  translate([39, 253, 0])
    cube([1, 1, 2.27]);
  translate([40, 253, 0])
    cube([1, 1, 2.27]);
  translate([41, 253, 0])
    cube([1, 1, 2.27]);
  translate([42, 253, 0])
    cube([1, 1, 2.27]);
  translate([43, 253, 0])
    cube([1, 1, 2.27]);
  translate([44, 253, 0])
    cube([1, 1, 2.27]);
  translate([45, 253, 0])
    cube([1, 1, 2.27]);
  translate([46, 253, 0])
    cube([1, 1, 2.27]);
  translate([47, 253, 0])
    cube([1, 1, 2.27]);
  translate([48, 253, 0])
    cube([1, 1, 2.27]);
  translate([49, 253, 0])
    cube([1, 1, 2.24]);
  translate([50, 253, 0])
    cube([1, 1, 2.24]);
  translate([51, 253, 0])
    cube([1, 1, 2.24]);
  translate([52, 253, 0])
    cube([1, 1, 2.24]);
  translate([53, 253, 0])
    cube([1, 1, 2.24]);
  translate([54, 253, 0])
    cube([1, 1, 2.24]);
  translate([55, 253, 0])
    cube([1, 1, 2.24]);
  translate([56, 253, 0])
    cube([1, 1, 2.27]);
  translate([57, 253, 0])
    cube([1, 1, 7.96]);
  translate([58, 253, 0])
    cube([1, 1, 8.43]);
  translate([59, 253, 0])
    cube([1, 1, 8.16]);
  translate([60, 253, 0])
    cube([1, 1, 7.49]);
  translate([61, 253, 0])
    cube([1, 1, 6.51]);
  translate([62, 253, 0])
    cube([1, 1, 5.06]);
  translate([63, 253, 0])
    cube([1, 1, 3.65]);
  translate([64, 253, 0])
    cube([1, 1, 2.59]);
  translate([65, 253, 0])
    cube([1, 1, 2.20]);
  translate([66, 253, 0])
    cube([1, 1, 2.27]);
  translate([67, 253, 0])
    cube([1, 1, 2.31]);
  translate([68, 253, 0])
    cube([1, 1, 2.35]);
  translate([69, 253, 0])
    cube([1, 1, 2.55]);
  translate([70, 253, 0])
    cube([1, 1, 2.71]);
  translate([71, 253, 0])
    cube([1, 1, 2.98]);
  translate([72, 253, 0])
    cube([1, 1, 3.37]);
  translate([73, 253, 0])
    cube([1, 1, 3.53]);
  translate([74, 253, 0])
    cube([1, 1, 3.84]);
  translate([75, 253, 0])
    cube([1, 1, 4.04]);
  translate([76, 253, 0])
    cube([1, 1, 4.20]);
  translate([77, 253, 0])
    cube([1, 1, 4.35]);
  translate([78, 253, 0])
    cube([1, 1, 4.04]);
  translate([79, 253, 0])
    cube([1, 1, 4.04]);
  translate([80, 253, 0])
    cube([1, 1, 4.04]);
  translate([81, 253, 0])
    cube([1, 1, 4.16]);
  translate([82, 253, 0])
    cube([1, 1, 4.39]);
  translate([83, 253, 0])
    cube([1, 1, 4.47]);
  translate([84, 253, 0])
    cube([1, 1, 4.63]);
  translate([85, 253, 0])
    cube([1, 1, 4.71]);
  translate([86, 253, 0])
    cube([1, 1, 4.27]);
  translate([87, 253, 0])
    cube([1, 1, 3.96]);
  translate([88, 253, 0])
    cube([1, 1, 3.88]);
  translate([89, 253, 0])
    cube([1, 1, 3.76]);
  translate([90, 253, 0])
    cube([1, 1, 3.65]);
  translate([91, 253, 0])
    cube([1, 1, 3.41]);
  translate([92, 253, 0])
    cube([1, 1, 3.45]);
  translate([93, 253, 0])
    cube([1, 1, 3.37]);
  translate([94, 253, 0])
    cube([1, 1, 2.39]);
  translate([95, 253, 0])
    cube([1, 1, 1.02]);
  translate([96, 253, 0])
    cube([1, 1, 1.10]);
  translate([97, 253, 0])
    cube([1, 1, 1.25]);
  translate([98, 253, 0])
    cube([1, 1, 0.90]);
  translate([99, 253, 0])
    cube([1, 1, 1.61]);
  translate([100, 253, 0])
    cube([1, 1, 1.61]);
  translate([101, 253, 0])
    cube([1, 1, 1.53]);
  translate([102, 253, 0])
    cube([1, 1, 1.49]);
  translate([103, 253, 0])
    cube([1, 1, 2.35]);
  translate([104, 253, 0])
    cube([1, 1, 2.43]);
  translate([105, 253, 0])
    cube([1, 1, 2.12]);
  translate([106, 253, 0])
    cube([1, 1, 2.16]);
  translate([107, 253, 0])
    cube([1, 1, 2.16]);
  translate([108, 253, 0])
    cube([1, 1, 2.16]);
  translate([109, 253, 0])
    cube([1, 1, 2.16]);
  translate([110, 253, 0])
    cube([1, 1, 2.12]);
  translate([111, 253, 0])
    cube([1, 1, 2.12]);
  translate([112, 253, 0])
    cube([1, 1, 2.12]);
  translate([113, 253, 0])
    cube([1, 1, 2.12]);
  translate([114, 253, 0])
    cube([1, 1, 2.12]);
  translate([115, 253, 0])
    cube([1, 1, 2.08]);
  translate([116, 253, 0])
    cube([1, 1, 2.08]);
  translate([117, 253, 0])
    cube([1, 1, 2.16]);
  translate([118, 253, 0])
    cube([1, 1, 2.16]);
  translate([119, 253, 0])
    cube([1, 1, 2.16]);
  translate([120, 253, 0])
    cube([1, 1, 1.22]);
  translate([121, 253, 0])
    cube([1, 1, 5.69]);
  translate([122, 253, 0])
    cube([1, 1, 5.22]);
  translate([123, 253, 0])
    cube([1, 1, 4.82]);
  translate([124, 253, 0])
    cube([1, 1, 4.55]);
  translate([125, 253, 0])
    cube([1, 1, 4.39]);
  translate([126, 253, 0])
    cube([1, 1, 4.27]);
  translate([127, 253, 0])
    cube([1, 1, 4.16]);
  translate([128, 253, 0])
    cube([1, 1, 4.08]);
  translate([129, 253, 0])
    cube([1, 1, 3.80]);
  translate([130, 253, 0])
    cube([1, 1, 3.61]);
  translate([131, 253, 0])
    cube([1, 1, 3.29]);
  translate([132, 253, 0])
    cube([1, 1, 3.06]);
  translate([133, 253, 0])
    cube([1, 1, 2.82]);
  translate([134, 253, 0])
    cube([1, 1, 2.75]);
  translate([135, 253, 0])
    cube([1, 1, 2.75]);
  translate([136, 253, 0])
    cube([1, 1, 2.71]);
  translate([137, 253, 0])
    cube([1, 1, 2.63]);
  translate([138, 253, 0])
    cube([1, 1, 2.78]);
  translate([139, 253, 0])
    cube([1, 1, 2.78]);
  translate([140, 253, 0])
    cube([1, 1, 2.78]);
  translate([141, 253, 0])
    cube([1, 1, 2.86]);
  translate([142, 253, 0])
    cube([1, 1, 2.98]);
  translate([143, 253, 0])
    cube([1, 1, 3.10]);
  translate([144, 253, 0])
    cube([1, 1, 3.25]);
  translate([145, 253, 0])
    cube([1, 1, 3.53]);
  translate([146, 253, 0])
    cube([1, 1, 3.96]);
  translate([147, 253, 0])
    cube([1, 1, 4.08]);
  translate([148, 253, 0])
    cube([1, 1, 4.27]);
  translate([149, 253, 0])
    cube([1, 1, 4.47]);
  translate([150, 253, 0])
    cube([1, 1, 4.47]);
  translate([151, 253, 0])
    cube([1, 1, 4.47]);
  translate([152, 253, 0])
    cube([1, 1, 4.63]);
  translate([153, 253, 0])
    cube([1, 1, 4.67]);
  translate([154, 253, 0])
    cube([1, 1, 4.71]);
  translate([155, 253, 0])
    cube([1, 1, 4.67]);
  translate([156, 253, 0])
    cube([1, 1, 4.39]);
  translate([157, 253, 0])
    cube([1, 1, 4.16]);
  translate([158, 253, 0])
    cube([1, 1, 4.20]);
  translate([159, 253, 0])
    cube([1, 1, 4.35]);
  translate([160, 253, 0])
    cube([1, 1, 5.18]);
  translate([161, 253, 0])
    cube([1, 1, 5.69]);
  translate([162, 253, 0])
    cube([1, 1, 6.24]);
  translate([163, 253, 0])
    cube([1, 1, 6.51]);
  translate([164, 253, 0])
    cube([1, 1, 6.59]);
  translate([165, 253, 0])
    cube([1, 1, 2.00]);
  translate([166, 253, 0])
    cube([1, 1, 2.00]);
  translate([167, 253, 0])
    cube([1, 1, 2.12]);
  translate([168, 253, 0])
    cube([1, 1, 2.12]);
  translate([169, 253, 0])
    cube([1, 1, 2.12]);
  translate([170, 253, 0])
    cube([1, 1, 2.12]);
  translate([171, 253, 0])
    cube([1, 1, 2.12]);
  translate([172, 253, 0])
    cube([1, 1, 2.12]);
  translate([173, 253, 0])
    cube([1, 1, 2.08]);
  translate([174, 253, 0])
    cube([1, 1, 2.12]);
  translate([175, 253, 0])
    cube([1, 1, 2.12]);
  translate([176, 253, 0])
    cube([1, 1, 2.12]);
  translate([177, 253, 0])
    cube([1, 1, 2.12]);
  translate([178, 253, 0])
    cube([1, 1, 2.12]);
  translate([179, 253, 0])
    cube([1, 1, 2.12]);
  translate([180, 253, 0])
    cube([1, 1, 2.12]);
  translate([181, 253, 0])
    cube([1, 1, 2.12]);
  translate([182, 253, 0])
    cube([1, 1, 2.12]);
  translate([183, 253, 0])
    cube([1, 1, 2.12]);
  translate([184, 253, 0])
    cube([1, 1, 2.12]);
  translate([185, 253, 0])
    cube([1, 1, 2.12]);
  translate([186, 253, 0])
    cube([1, 1, 2.12]);
  translate([187, 253, 0])
    cube([1, 1, 2.12]);
  translate([188, 253, 0])
    cube([1, 1, 2.12]);
  translate([189, 253, 0])
    cube([1, 1, 2.16]);
  translate([190, 253, 0])
    cube([1, 1, 2.16]);
  translate([191, 253, 0])
    cube([1, 1, 2.16]);
  translate([192, 253, 0])
    cube([1, 1, 2.16]);
  translate([193, 253, 0])
    cube([1, 1, 2.12]);
  translate([194, 253, 0])
    cube([1, 1, 2.12]);
  translate([195, 253, 0])
    cube([1, 1, 2.08]);
  translate([196, 253, 0])
    cube([1, 1, 2.12]);
  translate([197, 253, 0])
    cube([1, 1, 2.12]);
  translate([198, 253, 0])
    cube([1, 1, 2.12]);
  translate([199, 253, 0])
    cube([1, 1, 2.16]);
  translate([200, 253, 0])
    cube([1, 1, 2.20]);
  translate([201, 253, 0])
    cube([1, 1, 2.16]);
  translate([202, 253, 0])
    cube([1, 1, 2.16]);
  translate([203, 253, 0])
    cube([1, 1, 2.12]);
  translate([204, 253, 0])
    cube([1, 1, 2.16]);
  translate([205, 253, 0])
    cube([1, 1, 2.12]);
  translate([206, 253, 0])
    cube([1, 1, 2.12]);
  translate([207, 253, 0])
    cube([1, 1, 2.16]);
  translate([208, 253, 0])
    cube([1, 1, 2.16]);
  translate([209, 253, 0])
    cube([1, 1, 2.16]);
  translate([210, 253, 0])
    cube([1, 1, 2.16]);
  translate([211, 253, 0])
    cube([1, 1, 2.16]);
  translate([212, 253, 0])
    cube([1, 1, 2.16]);
  translate([213, 253, 0])
    cube([1, 1, 2.16]);
  translate([214, 253, 0])
    cube([1, 1, 2.16]);
  translate([215, 253, 0])
    cube([1, 1, 2.12]);
  translate([216, 253, 0])
    cube([1, 1, 2.20]);
  translate([217, 253, 0])
    cube([1, 1, 2.12]);
  translate([218, 253, 0])
    cube([1, 1, 2.16]);
  translate([219, 253, 0])
    cube([1, 1, 2.12]);
  translate([220, 253, 0])
    cube([1, 1, 2.12]);
  translate([221, 253, 0])
    cube([1, 1, 2.12]);
  translate([222, 253, 0])
    cube([1, 1, 2.12]);
  translate([223, 253, 0])
    cube([1, 1, 2.16]);
  translate([224, 253, 0])
    cube([1, 1, 2.12]);
  translate([225, 253, 0])
    cube([1, 1, 2.08]);
  translate([226, 253, 0])
    cube([1, 1, 2.08]);
  translate([227, 253, 0])
    cube([1, 1, 2.12]);
  translate([228, 253, 0])
    cube([1, 1, 2.12]);
  translate([229, 253, 0])
    cube([1, 1, 2.12]);
  translate([230, 253, 0])
    cube([1, 1, 2.12]);
  translate([231, 253, 0])
    cube([1, 1, 2.12]);
  translate([232, 253, 0])
    cube([1, 1, 2.12]);
  translate([233, 253, 0])
    cube([1, 1, 2.12]);
  translate([234, 253, 0])
    cube([1, 1, 2.12]);
  translate([235, 253, 0])
    cube([1, 1, 2.12]);
  translate([236, 253, 0])
    cube([1, 1, 2.12]);
  translate([237, 253, 0])
    cube([1, 1, 2.12]);
  translate([238, 253, 0])
    cube([1, 1, 2.12]);
  translate([239, 253, 0])
    cube([1, 1, 2.12]);
  translate([240, 253, 0])
    cube([1, 1, 2.12]);
  translate([241, 253, 0])
    cube([1, 1, 2.12]);
  translate([242, 253, 0])
    cube([1, 1, 2.12]);
  translate([243, 253, 0])
    cube([1, 1, 2.12]);
  translate([244, 253, 0])
    cube([1, 1, 2.12]);
  translate([245, 253, 0])
    cube([1, 1, 2.12]);
  translate([246, 253, 0])
    cube([1, 1, 2.12]);
  translate([0, 254, 0])
    cube([1, 1, 2.35]);
  translate([1, 254, 0])
    cube([1, 1, 2.35]);
  translate([2, 254, 0])
    cube([1, 1, 2.35]);
  translate([3, 254, 0])
    cube([1, 1, 2.35]);
  translate([4, 254, 0])
    cube([1, 1, 2.35]);
  translate([5, 254, 0])
    cube([1, 1, 2.35]);
  translate([6, 254, 0])
    cube([1, 1, 2.35]);
  translate([7, 254, 0])
    cube([1, 1, 2.35]);
  translate([8, 254, 0])
    cube([1, 1, 2.39]);
  translate([9, 254, 0])
    cube([1, 1, 2.35]);
  translate([10, 254, 0])
    cube([1, 1, 2.35]);
  translate([11, 254, 0])
    cube([1, 1, 2.35]);
  translate([12, 254, 0])
    cube([1, 1, 2.31]);
  translate([13, 254, 0])
    cube([1, 1, 2.31]);
  translate([14, 254, 0])
    cube([1, 1, 2.31]);
  translate([15, 254, 0])
    cube([1, 1, 2.31]);
  translate([16, 254, 0])
    cube([1, 1, 2.31]);
  translate([17, 254, 0])
    cube([1, 1, 2.31]);
  translate([18, 254, 0])
    cube([1, 1, 2.31]);
  translate([19, 254, 0])
    cube([1, 1, 2.31]);
  translate([20, 254, 0])
    cube([1, 1, 2.35]);
  translate([21, 254, 0])
    cube([1, 1, 2.35]);
  translate([22, 254, 0])
    cube([1, 1, 2.31]);
  translate([23, 254, 0])
    cube([1, 1, 2.31]);
  translate([24, 254, 0])
    cube([1, 1, 2.31]);
  translate([25, 254, 0])
    cube([1, 1, 2.31]);
  translate([26, 254, 0])
    cube([1, 1, 2.31]);
  translate([27, 254, 0])
    cube([1, 1, 2.31]);
  translate([28, 254, 0])
    cube([1, 1, 2.31]);
  translate([29, 254, 0])
    cube([1, 1, 2.31]);
  translate([30, 254, 0])
    cube([1, 1, 2.31]);
  translate([31, 254, 0])
    cube([1, 1, 2.27]);
  translate([32, 254, 0])
    cube([1, 1, 2.31]);
  translate([33, 254, 0])
    cube([1, 1, 2.31]);
  translate([34, 254, 0])
    cube([1, 1, 2.31]);
  translate([35, 254, 0])
    cube([1, 1, 2.27]);
  translate([36, 254, 0])
    cube([1, 1, 2.27]);
  translate([37, 254, 0])
    cube([1, 1, 2.27]);
  translate([38, 254, 0])
    cube([1, 1, 2.27]);
  translate([39, 254, 0])
    cube([1, 1, 2.27]);
  translate([40, 254, 0])
    cube([1, 1, 2.27]);
  translate([41, 254, 0])
    cube([1, 1, 2.27]);
  translate([42, 254, 0])
    cube([1, 1, 2.27]);
  translate([43, 254, 0])
    cube([1, 1, 2.27]);
  translate([44, 254, 0])
    cube([1, 1, 2.27]);
  translate([45, 254, 0])
    cube([1, 1, 2.27]);
  translate([46, 254, 0])
    cube([1, 1, 2.27]);
  translate([47, 254, 0])
    cube([1, 1, 2.27]);
  translate([48, 254, 0])
    cube([1, 1, 2.27]);
  translate([49, 254, 0])
    cube([1, 1, 2.24]);
  translate([50, 254, 0])
    cube([1, 1, 2.24]);
  translate([51, 254, 0])
    cube([1, 1, 2.27]);
  translate([52, 254, 0])
    cube([1, 1, 2.24]);
  translate([53, 254, 0])
    cube([1, 1, 2.24]);
  translate([54, 254, 0])
    cube([1, 1, 2.24]);
  translate([55, 254, 0])
    cube([1, 1, 2.24]);
  translate([56, 254, 0])
    cube([1, 1, 2.35]);
  translate([57, 254, 0])
    cube([1, 1, 7.69]);
  translate([58, 254, 0])
    cube([1, 1, 8.16]);
  translate([59, 254, 0])
    cube([1, 1, 8.12]);
  translate([60, 254, 0])
    cube([1, 1, 7.57]);
  translate([61, 254, 0])
    cube([1, 1, 6.47]);
  translate([62, 254, 0])
    cube([1, 1, 5.18]);
  translate([63, 254, 0])
    cube([1, 1, 3.84]);
  translate([64, 254, 0])
    cube([1, 1, 2.82]);
  translate([65, 254, 0])
    cube([1, 1, 2.47]);
  translate([66, 254, 0])
    cube([1, 1, 2.55]);
  translate([67, 254, 0])
    cube([1, 1, 2.43]);
  translate([68, 254, 0])
    cube([1, 1, 2.71]);
  translate([69, 254, 0])
    cube([1, 1, 2.86]);
  translate([70, 254, 0])
    cube([1, 1, 3.02]);
  translate([71, 254, 0])
    cube([1, 1, 3.29]);
  translate([72, 254, 0])
    cube([1, 1, 3.61]);
  translate([73, 254, 0])
    cube([1, 1, 3.61]);
  translate([74, 254, 0])
    cube([1, 1, 3.92]);
  translate([75, 254, 0])
    cube([1, 1, 4.16]);
  translate([76, 254, 0])
    cube([1, 1, 4.35]);
  translate([77, 254, 0])
    cube([1, 1, 4.39]);
  translate([78, 254, 0])
    cube([1, 1, 4.12]);
  translate([79, 254, 0])
    cube([1, 1, 4.04]);
  translate([80, 254, 0])
    cube([1, 1, 4.08]);
  translate([81, 254, 0])
    cube([1, 1, 4.16]);
  translate([82, 254, 0])
    cube([1, 1, 4.39]);
  translate([83, 254, 0])
    cube([1, 1, 4.43]);
  translate([84, 254, 0])
    cube([1, 1, 4.71]);
  translate([85, 254, 0])
    cube([1, 1, 4.51]);
  translate([86, 254, 0])
    cube([1, 1, 4.12]);
  translate([87, 254, 0])
    cube([1, 1, 3.92]);
  translate([88, 254, 0])
    cube([1, 1, 3.84]);
  translate([89, 254, 0])
    cube([1, 1, 3.76]);
  translate([90, 254, 0])
    cube([1, 1, 3.65]);
  translate([91, 254, 0])
    cube([1, 1, 3.49]);
  translate([92, 254, 0])
    cube([1, 1, 3.53]);
  translate([93, 254, 0])
    cube([1, 1, 3.45]);
  translate([94, 254, 0])
    cube([1, 1, 3.45]);
  translate([95, 254, 0])
    cube([1, 1, 3.10]);
  translate([96, 254, 0])
    cube([1, 1, 1.14]);
  translate([97, 254, 0])
    cube([1, 1, 1.29]);
  translate([98, 254, 0])
    cube([1, 1, 1.57]);
  translate([99, 254, 0])
    cube([1, 1, 1.02]);
  translate([100, 254, 0])
    cube([1, 1, 1.57]);
  translate([101, 254, 0])
    cube([1, 1, 1.65]);
  translate([102, 254, 0])
    cube([1, 1, 1.57]);
  translate([103, 254, 0])
    cube([1, 1, 3.33]);
  translate([104, 254, 0])
    cube([1, 1, 1.92]);
  translate([105, 254, 0])
    cube([1, 1, 2.12]);
  translate([106, 254, 0])
    cube([1, 1, 2.16]);
  translate([107, 254, 0])
    cube([1, 1, 2.16]);
  translate([108, 254, 0])
    cube([1, 1, 2.16]);
  translate([109, 254, 0])
    cube([1, 1, 2.16]);
  translate([110, 254, 0])
    cube([1, 1, 2.12]);
  translate([111, 254, 0])
    cube([1, 1, 2.12]);
  translate([112, 254, 0])
    cube([1, 1, 2.16]);
  translate([113, 254, 0])
    cube([1, 1, 2.12]);
  translate([114, 254, 0])
    cube([1, 1, 2.12]);
  translate([115, 254, 0])
    cube([1, 1, 2.08]);
  translate([116, 254, 0])
    cube([1, 1, 2.08]);
  translate([117, 254, 0])
    cube([1, 1, 2.16]);
  translate([118, 254, 0])
    cube([1, 1, 2.16]);
  translate([119, 254, 0])
    cube([1, 1, 2.16]);
  translate([120, 254, 0])
    cube([1, 1, 2.12]);
  translate([121, 254, 0])
    cube([1, 1, 5.57]);
  translate([122, 254, 0])
    cube([1, 1, 5.45]);
  translate([123, 254, 0])
    cube([1, 1, 4.94]);
  translate([124, 254, 0])
    cube([1, 1, 4.71]);
  translate([125, 254, 0])
    cube([1, 1, 4.55]);
  translate([126, 254, 0])
    cube([1, 1, 4.43]);
  translate([127, 254, 0])
    cube([1, 1, 4.35]);
  translate([128, 254, 0])
    cube([1, 1, 4.24]);
  translate([129, 254, 0])
    cube([1, 1, 4.04]);
  translate([130, 254, 0])
    cube([1, 1, 3.84]);
  translate([131, 254, 0])
    cube([1, 1, 3.41]);
  translate([132, 254, 0])
    cube([1, 1, 3.18]);
  translate([133, 254, 0])
    cube([1, 1, 2.94]);
  translate([134, 254, 0])
    cube([1, 1, 2.63]);
  translate([135, 254, 0])
    cube([1, 1, 2.55]);
  translate([136, 254, 0])
    cube([1, 1, 2.63]);
  translate([137, 254, 0])
    cube([1, 1, 2.59]);
  translate([138, 254, 0])
    cube([1, 1, 2.71]);
  translate([139, 254, 0])
    cube([1, 1, 2.78]);
  translate([140, 254, 0])
    cube([1, 1, 2.82]);
  translate([141, 254, 0])
    cube([1, 1, 2.94]);
  translate([142, 254, 0])
    cube([1, 1, 3.06]);
  translate([143, 254, 0])
    cube([1, 1, 3.14]);
  translate([144, 254, 0])
    cube([1, 1, 3.29]);
  translate([145, 254, 0])
    cube([1, 1, 3.53]);
  translate([146, 254, 0])
    cube([1, 1, 3.96]);
  translate([147, 254, 0])
    cube([1, 1, 4.08]);
  translate([148, 254, 0])
    cube([1, 1, 4.27]);
  translate([149, 254, 0])
    cube([1, 1, 4.47]);
  translate([150, 254, 0])
    cube([1, 1, 4.39]);
  translate([151, 254, 0])
    cube([1, 1, 4.55]);
  translate([152, 254, 0])
    cube([1, 1, 4.75]);
  translate([153, 254, 0])
    cube([1, 1, 4.78]);
  translate([154, 254, 0])
    cube([1, 1, 4.82]);
  translate([155, 254, 0])
    cube([1, 1, 4.75]);
  translate([156, 254, 0])
    cube([1, 1, 4.43]);
  translate([157, 254, 0])
    cube([1, 1, 4.20]);
  translate([158, 254, 0])
    cube([1, 1, 4.16]);
  translate([159, 254, 0])
    cube([1, 1, 4.43]);
  translate([160, 254, 0])
    cube([1, 1, 5.10]);
  translate([161, 254, 0])
    cube([1, 1, 5.69]);
  translate([162, 254, 0])
    cube([1, 1, 6.24]);
  translate([163, 254, 0])
    cube([1, 1, 6.51]);
  translate([164, 254, 0])
    cube([1, 1, 6.75]);
  translate([165, 254, 0])
    cube([1, 1, 2.08]);
  translate([166, 254, 0])
    cube([1, 1, 2.12]);
  translate([167, 254, 0])
    cube([1, 1, 2.08]);
  translate([168, 254, 0])
    cube([1, 1, 2.12]);
  translate([169, 254, 0])
    cube([1, 1, 2.12]);
  translate([170, 254, 0])
    cube([1, 1, 2.12]);
  translate([171, 254, 0])
    cube([1, 1, 2.12]);
  translate([172, 254, 0])
    cube([1, 1, 2.12]);
  translate([173, 254, 0])
    cube([1, 1, 2.08]);
  translate([174, 254, 0])
    cube([1, 1, 2.12]);
  translate([175, 254, 0])
    cube([1, 1, 2.12]);
  translate([176, 254, 0])
    cube([1, 1, 2.12]);
  translate([177, 254, 0])
    cube([1, 1, 2.12]);
  translate([178, 254, 0])
    cube([1, 1, 2.12]);
  translate([179, 254, 0])
    cube([1, 1, 2.12]);
  translate([180, 254, 0])
    cube([1, 1, 2.12]);
  translate([181, 254, 0])
    cube([1, 1, 2.12]);
  translate([182, 254, 0])
    cube([1, 1, 2.12]);
  translate([183, 254, 0])
    cube([1, 1, 2.12]);
  translate([184, 254, 0])
    cube([1, 1, 2.12]);
  translate([185, 254, 0])
    cube([1, 1, 2.12]);
  translate([186, 254, 0])
    cube([1, 1, 2.12]);
  translate([187, 254, 0])
    cube([1, 1, 2.12]);
  translate([188, 254, 0])
    cube([1, 1, 2.12]);
  translate([189, 254, 0])
    cube([1, 1, 2.16]);
  translate([190, 254, 0])
    cube([1, 1, 2.16]);
  translate([191, 254, 0])
    cube([1, 1, 2.16]);
  translate([192, 254, 0])
    cube([1, 1, 2.16]);
  translate([193, 254, 0])
    cube([1, 1, 2.12]);
  translate([194, 254, 0])
    cube([1, 1, 2.12]);
  translate([195, 254, 0])
    cube([1, 1, 2.16]);
  translate([196, 254, 0])
    cube([1, 1, 2.12]);
  translate([197, 254, 0])
    cube([1, 1, 2.12]);
  translate([198, 254, 0])
    cube([1, 1, 2.12]);
  translate([199, 254, 0])
    cube([1, 1, 2.16]);
  translate([200, 254, 0])
    cube([1, 1, 2.20]);
  translate([201, 254, 0])
    cube([1, 1, 2.16]);
  translate([202, 254, 0])
    cube([1, 1, 2.16]);
  translate([203, 254, 0])
    cube([1, 1, 2.12]);
  translate([204, 254, 0])
    cube([1, 1, 2.16]);
  translate([205, 254, 0])
    cube([1, 1, 2.12]);
  translate([206, 254, 0])
    cube([1, 1, 2.12]);
  translate([207, 254, 0])
    cube([1, 1, 2.16]);
  translate([208, 254, 0])
    cube([1, 1, 2.16]);
  translate([209, 254, 0])
    cube([1, 1, 2.16]);
  translate([210, 254, 0])
    cube([1, 1, 2.16]);
  translate([211, 254, 0])
    cube([1, 1, 2.16]);
  translate([212, 254, 0])
    cube([1, 1, 2.16]);
  translate([213, 254, 0])
    cube([1, 1, 2.16]);
  translate([214, 254, 0])
    cube([1, 1, 2.16]);
  translate([215, 254, 0])
    cube([1, 1, 2.12]);
  translate([216, 254, 0])
    cube([1, 1, 2.12]);
  translate([217, 254, 0])
    cube([1, 1, 2.12]);
  translate([218, 254, 0])
    cube([1, 1, 2.16]);
  translate([219, 254, 0])
    cube([1, 1, 2.12]);
  translate([220, 254, 0])
    cube([1, 1, 2.12]);
  translate([221, 254, 0])
    cube([1, 1, 2.12]);
  translate([222, 254, 0])
    cube([1, 1, 2.12]);
  translate([223, 254, 0])
    cube([1, 1, 2.16]);
  translate([224, 254, 0])
    cube([1, 1, 2.12]);
  translate([225, 254, 0])
    cube([1, 1, 2.16]);
  translate([226, 254, 0])
    cube([1, 1, 2.16]);
  translate([227, 254, 0])
    cube([1, 1, 2.12]);
  translate([228, 254, 0])
    cube([1, 1, 2.12]);
  translate([229, 254, 0])
    cube([1, 1, 2.12]);
  translate([230, 254, 0])
    cube([1, 1, 2.12]);
  translate([231, 254, 0])
    cube([1, 1, 2.12]);
  translate([232, 254, 0])
    cube([1, 1, 2.12]);
  translate([233, 254, 0])
    cube([1, 1, 2.12]);
  translate([234, 254, 0])
    cube([1, 1, 2.12]);
  translate([235, 254, 0])
    cube([1, 1, 2.12]);
  translate([236, 254, 0])
    cube([1, 1, 2.12]);
  translate([237, 254, 0])
    cube([1, 1, 2.12]);
  translate([238, 254, 0])
    cube([1, 1, 2.12]);
  translate([239, 254, 0])
    cube([1, 1, 2.12]);
  translate([240, 254, 0])
    cube([1, 1, 2.12]);
  translate([241, 254, 0])
    cube([1, 1, 2.12]);
  translate([242, 254, 0])
    cube([1, 1, 2.12]);
  translate([243, 254, 0])
    cube([1, 1, 2.12]);
  translate([244, 254, 0])
    cube([1, 1, 2.12]);
  translate([245, 254, 0])
    cube([1, 1, 2.12]);
  translate([246, 254, 0])
    cube([1, 1, 2.12]);
  translate([0, 255, 0])
    cube([1, 1, 2.39]);
  translate([1, 255, 0])
    cube([1, 1, 2.35]);
  translate([2, 255, 0])
    cube([1, 1, 2.35]);
  translate([3, 255, 0])
    cube([1, 1, 2.35]);
  translate([4, 255, 0])
    cube([1, 1, 2.35]);
  translate([5, 255, 0])
    cube([1, 1, 2.35]);
  translate([6, 255, 0])
    cube([1, 1, 2.35]);
  translate([7, 255, 0])
    cube([1, 1, 2.35]);
  translate([8, 255, 0])
    cube([1, 1, 2.39]);
  translate([9, 255, 0])
    cube([1, 1, 2.35]);
  translate([10, 255, 0])
    cube([1, 1, 2.35]);
  translate([11, 255, 0])
    cube([1, 1, 2.35]);
  translate([12, 255, 0])
    cube([1, 1, 2.35]);
  translate([13, 255, 0])
    cube([1, 1, 2.35]);
  translate([14, 255, 0])
    cube([1, 1, 2.31]);
  translate([15, 255, 0])
    cube([1, 1, 2.35]);
  translate([16, 255, 0])
    cube([1, 1, 2.35]);
  translate([17, 255, 0])
    cube([1, 1, 2.39]);
  translate([18, 255, 0])
    cube([1, 1, 2.39]);
  translate([19, 255, 0])
    cube([1, 1, 2.39]);
  translate([20, 255, 0])
    cube([1, 1, 2.31]);
  translate([21, 255, 0])
    cube([1, 1, 2.31]);
  translate([22, 255, 0])
    cube([1, 1, 2.31]);
  translate([23, 255, 0])
    cube([1, 1, 2.31]);
  translate([24, 255, 0])
    cube([1, 1, 2.31]);
  translate([25, 255, 0])
    cube([1, 1, 2.27]);
  translate([26, 255, 0])
    cube([1, 1, 2.35]);
  translate([27, 255, 0])
    cube([1, 1, 2.27]);
  translate([28, 255, 0])
    cube([1, 1, 2.31]);
  translate([29, 255, 0])
    cube([1, 1, 2.31]);
  translate([30, 255, 0])
    cube([1, 1, 2.31]);
  translate([31, 255, 0])
    cube([1, 1, 2.31]);
  translate([32, 255, 0])
    cube([1, 1, 2.31]);
  translate([33, 255, 0])
    cube([1, 1, 2.31]);
  translate([34, 255, 0])
    cube([1, 1, 2.31]);
  translate([35, 255, 0])
    cube([1, 1, 2.31]);
  translate([36, 255, 0])
    cube([1, 1, 2.31]);
  translate([37, 255, 0])
    cube([1, 1, 2.31]);
  translate([38, 255, 0])
    cube([1, 1, 2.27]);
  translate([39, 255, 0])
    cube([1, 1, 2.31]);
  translate([40, 255, 0])
    cube([1, 1, 2.27]);
  translate([41, 255, 0])
    cube([1, 1, 2.27]);
  translate([42, 255, 0])
    cube([1, 1, 2.27]);
  translate([43, 255, 0])
    cube([1, 1, 2.27]);
  translate([44, 255, 0])
    cube([1, 1, 2.27]);
  translate([45, 255, 0])
    cube([1, 1, 2.27]);
  translate([46, 255, 0])
    cube([1, 1, 2.27]);
  translate([47, 255, 0])
    cube([1, 1, 2.27]);
  translate([48, 255, 0])
    cube([1, 1, 2.24]);
  translate([49, 255, 0])
    cube([1, 1, 2.24]);
  translate([50, 255, 0])
    cube([1, 1, 2.27]);
  translate([51, 255, 0])
    cube([1, 1, 2.27]);
  translate([52, 255, 0])
    cube([1, 1, 2.24]);
  translate([53, 255, 0])
    cube([1, 1, 2.24]);
  translate([54, 255, 0])
    cube([1, 1, 2.27]);
  translate([55, 255, 0])
    cube([1, 1, 2.27]);
  translate([56, 255, 0])
    cube([1, 1, 2.12]);
  translate([57, 255, 0])
    cube([1, 1, 7.73]);
  translate([58, 255, 0])
    cube([1, 1, 8.27]);
  translate([59, 255, 0])
    cube([1, 1, 8.04]);
  translate([60, 255, 0])
    cube([1, 1, 7.45]);
  translate([61, 255, 0])
    cube([1, 1, 6.39]);
  translate([62, 255, 0])
    cube([1, 1, 5.06]);
  translate([63, 255, 0])
    cube([1, 1, 3.57]);
  translate([64, 255, 0])
    cube([1, 1, 2.94]);
  translate([65, 255, 0])
    cube([1, 1, 2.59]);
  translate([66, 255, 0])
    cube([1, 1, 2.71]);
  translate([67, 255, 0])
    cube([1, 1, 2.71]);
  translate([68, 255, 0])
    cube([1, 1, 2.82]);
  translate([69, 255, 0])
    cube([1, 1, 3.02]);
  translate([70, 255, 0])
    cube([1, 1, 3.29]);
  translate([71, 255, 0])
    cube([1, 1, 3.45]);
  translate([72, 255, 0])
    cube([1, 1, 3.69]);
  translate([73, 255, 0])
    cube([1, 1, 3.69]);
  translate([74, 255, 0])
    cube([1, 1, 3.96]);
  translate([75, 255, 0])
    cube([1, 1, 4.20]);
  translate([76, 255, 0])
    cube([1, 1, 4.43]);
  translate([77, 255, 0])
    cube([1, 1, 4.31]);
  translate([78, 255, 0])
    cube([1, 1, 4.31]);
  translate([79, 255, 0])
    cube([1, 1, 4.39]);
  translate([80, 255, 0])
    cube([1, 1, 4.31]);
  translate([81, 255, 0])
    cube([1, 1, 4.27]);
  translate([82, 255, 0])
    cube([1, 1, 4.51]);
  translate([83, 255, 0])
    cube([1, 1, 4.55]);
  translate([84, 255, 0])
    cube([1, 1, 4.59]);
  translate([85, 255, 0])
    cube([1, 1, 4.27]);
  translate([86, 255, 0])
    cube([1, 1, 4.04]);
  translate([87, 255, 0])
    cube([1, 1, 3.88]);
  translate([88, 255, 0])
    cube([1, 1, 3.84]);
  translate([89, 255, 0])
    cube([1, 1, 3.73]);
  translate([90, 255, 0])
    cube([1, 1, 3.61]);
  translate([91, 255, 0])
    cube([1, 1, 3.49]);
  translate([92, 255, 0])
    cube([1, 1, 3.41]);
  translate([93, 255, 0])
    cube([1, 1, 3.29]);
  translate([94, 255, 0])
    cube([1, 1, 3.41]);
  translate([95, 255, 0])
    cube([1, 1, 3.45]);
  translate([96, 255, 0])
    cube([1, 1, 3.45]);
  translate([97, 255, 0])
    cube([1, 1, 1.53]);
  translate([98, 255, 0])
    cube([1, 1, 1.45]);
  translate([99, 255, 0])
    cube([1, 1, 1.53]);
  translate([100, 255, 0])
    cube([1, 1, 0.78]);
  translate([101, 255, 0])
    cube([1, 1, 1.84]);
  translate([102, 255, 0])
    cube([1, 1, 1.29]);
  translate([103, 255, 0])
    cube([1, 1, 3.65]);
  translate([104, 255, 0])
    cube([1, 1, 2.08]);
  translate([105, 255, 0])
    cube([1, 1, 2.12]);
  translate([106, 255, 0])
    cube([1, 1, 2.16]);
  translate([107, 255, 0])
    cube([1, 1, 2.16]);
  translate([108, 255, 0])
    cube([1, 1, 2.16]);
  translate([109, 255, 0])
    cube([1, 1, 2.16]);
  translate([110, 255, 0])
    cube([1, 1, 2.12]);
  translate([111, 255, 0])
    cube([1, 1, 2.12]);
  translate([112, 255, 0])
    cube([1, 1, 2.16]);
  translate([113, 255, 0])
    cube([1, 1, 2.12]);
  translate([114, 255, 0])
    cube([1, 1, 2.12]);
  translate([115, 255, 0])
    cube([1, 1, 2.12]);
  translate([116, 255, 0])
    cube([1, 1, 2.12]);
  translate([117, 255, 0])
    cube([1, 1, 2.12]);
  translate([118, 255, 0])
    cube([1, 1, 2.08]);
  translate([119, 255, 0])
    cube([1, 1, 2.12]);
  translate([120, 255, 0])
    cube([1, 1, 2.16]);
  translate([121, 255, 0])
    cube([1, 1, 2.55]);
  translate([122, 255, 0])
    cube([1, 1, 5.65]);
  translate([123, 255, 0])
    cube([1, 1, 5.18]);
  translate([124, 255, 0])
    cube([1, 1, 4.82]);
  translate([125, 255, 0])
    cube([1, 1, 4.75]);
  translate([126, 255, 0])
    cube([1, 1, 4.59]);
  translate([127, 255, 0])
    cube([1, 1, 4.47]);
  translate([128, 255, 0])
    cube([1, 1, 4.39]);
  translate([129, 255, 0])
    cube([1, 1, 4.16]);
  translate([130, 255, 0])
    cube([1, 1, 4.04]);
  translate([131, 255, 0])
    cube([1, 1, 3.57]);
  translate([132, 255, 0])
    cube([1, 1, 3.18]);
  translate([133, 255, 0])
    cube([1, 1, 3.06]);
  translate([134, 255, 0])
    cube([1, 1, 2.75]);
  translate([135, 255, 0])
    cube([1, 1, 2.63]);
  translate([136, 255, 0])
    cube([1, 1, 2.71]);
  translate([137, 255, 0])
    cube([1, 1, 2.63]);
  translate([138, 255, 0])
    cube([1, 1, 2.82]);
  translate([139, 255, 0])
    cube([1, 1, 2.71]);
  translate([140, 255, 0])
    cube([1, 1, 3.06]);
  translate([141, 255, 0])
    cube([1, 1, 3.06]);
  translate([142, 255, 0])
    cube([1, 1, 3.14]);
  translate([143, 255, 0])
    cube([1, 1, 3.22]);
  translate([144, 255, 0])
    cube([1, 1, 3.33]);
  translate([145, 255, 0])
    cube([1, 1, 3.49]);
  translate([146, 255, 0])
    cube([1, 1, 3.84]);
  translate([147, 255, 0])
    cube([1, 1, 4.08]);
  translate([148, 255, 0])
    cube([1, 1, 4.27]);
  translate([149, 255, 0])
    cube([1, 1, 4.47]);
  translate([150, 255, 0])
    cube([1, 1, 4.39]);
  translate([151, 255, 0])
    cube([1, 1, 4.51]);
  translate([152, 255, 0])
    cube([1, 1, 4.78]);
  translate([153, 255, 0])
    cube([1, 1, 4.78]);
  translate([154, 255, 0])
    cube([1, 1, 4.78]);
  translate([155, 255, 0])
    cube([1, 1, 4.78]);
  translate([156, 255, 0])
    cube([1, 1, 4.39]);
  translate([157, 255, 0])
    cube([1, 1, 4.24]);
  translate([158, 255, 0])
    cube([1, 1, 4.08]);
  translate([159, 255, 0])
    cube([1, 1, 4.39]);
  translate([160, 255, 0])
    cube([1, 1, 5.14]);
  translate([161, 255, 0])
    cube([1, 1, 5.65]);
  translate([162, 255, 0])
    cube([1, 1, 6.24]);
  translate([163, 255, 0])
    cube([1, 1, 6.47]);
  translate([164, 255, 0])
    cube([1, 1, 6.63]);
  translate([165, 255, 0])
    cube([1, 1, 2.16]);
  translate([166, 255, 0])
    cube([1, 1, 2.12]);
  translate([167, 255, 0])
    cube([1, 1, 2.12]);
  translate([168, 255, 0])
    cube([1, 1, 2.12]);
  translate([169, 255, 0])
    cube([1, 1, 2.12]);
  translate([170, 255, 0])
    cube([1, 1, 2.12]);
  translate([171, 255, 0])
    cube([1, 1, 2.12]);
  translate([172, 255, 0])
    cube([1, 1, 2.12]);
  translate([173, 255, 0])
    cube([1, 1, 2.12]);
  translate([174, 255, 0])
    cube([1, 1, 2.12]);
  translate([175, 255, 0])
    cube([1, 1, 2.12]);
  translate([176, 255, 0])
    cube([1, 1, 2.12]);
  translate([177, 255, 0])
    cube([1, 1, 2.12]);
  translate([178, 255, 0])
    cube([1, 1, 2.12]);
  translate([179, 255, 0])
    cube([1, 1, 2.12]);
  translate([180, 255, 0])
    cube([1, 1, 2.12]);
  translate([181, 255, 0])
    cube([1, 1, 2.12]);
  translate([182, 255, 0])
    cube([1, 1, 2.12]);
  translate([183, 255, 0])
    cube([1, 1, 2.12]);
  translate([184, 255, 0])
    cube([1, 1, 2.16]);
  translate([185, 255, 0])
    cube([1, 1, 2.12]);
  translate([186, 255, 0])
    cube([1, 1, 2.12]);
  translate([187, 255, 0])
    cube([1, 1, 2.16]);
  translate([188, 255, 0])
    cube([1, 1, 2.12]);
  translate([189, 255, 0])
    cube([1, 1, 2.16]);
  translate([190, 255, 0])
    cube([1, 1, 2.16]);
  translate([191, 255, 0])
    cube([1, 1, 2.16]);
  translate([192, 255, 0])
    cube([1, 1, 2.16]);
  translate([193, 255, 0])
    cube([1, 1, 2.16]);
  translate([194, 255, 0])
    cube([1, 1, 2.16]);
  translate([195, 255, 0])
    cube([1, 1, 2.12]);
  translate([196, 255, 0])
    cube([1, 1, 2.12]);
  translate([197, 255, 0])
    cube([1, 1, 2.12]);
  translate([198, 255, 0])
    cube([1, 1, 2.12]);
  translate([199, 255, 0])
    cube([1, 1, 2.12]);
  translate([200, 255, 0])
    cube([1, 1, 2.12]);
  translate([201, 255, 0])
    cube([1, 1, 2.16]);
  translate([202, 255, 0])
    cube([1, 1, 2.16]);
  translate([203, 255, 0])
    cube([1, 1, 2.12]);
  translate([204, 255, 0])
    cube([1, 1, 2.16]);
  translate([205, 255, 0])
    cube([1, 1, 2.16]);
  translate([206, 255, 0])
    cube([1, 1, 2.16]);
  translate([207, 255, 0])
    cube([1, 1, 2.16]);
  translate([208, 255, 0])
    cube([1, 1, 2.16]);
  translate([209, 255, 0])
    cube([1, 1, 2.16]);
  translate([210, 255, 0])
    cube([1, 1, 2.16]);
  translate([211, 255, 0])
    cube([1, 1, 2.16]);
  translate([212, 255, 0])
    cube([1, 1, 2.16]);
  translate([213, 255, 0])
    cube([1, 1, 2.16]);
  translate([214, 255, 0])
    cube([1, 1, 2.16]);
  translate([215, 255, 0])
    cube([1, 1, 2.16]);
  translate([216, 255, 0])
    cube([1, 1, 2.16]);
  translate([217, 255, 0])
    cube([1, 1, 2.20]);
  translate([218, 255, 0])
    cube([1, 1, 2.12]);
  translate([219, 255, 0])
    cube([1, 1, 2.16]);
  translate([220, 255, 0])
    cube([1, 1, 2.16]);
  translate([221, 255, 0])
    cube([1, 1, 2.16]);
  translate([222, 255, 0])
    cube([1, 1, 2.12]);
  translate([223, 255, 0])
    cube([1, 1, 2.16]);
  translate([224, 255, 0])
    cube([1, 1, 2.16]);
  translate([225, 255, 0])
    cube([1, 1, 2.12]);
  translate([226, 255, 0])
    cube([1, 1, 2.12]);
  translate([227, 255, 0])
    cube([1, 1, 2.16]);
  translate([228, 255, 0])
    cube([1, 1, 2.16]);
  translate([229, 255, 0])
    cube([1, 1, 2.16]);
  translate([230, 255, 0])
    cube([1, 1, 2.12]);
  translate([231, 255, 0])
    cube([1, 1, 2.12]);
  translate([232, 255, 0])
    cube([1, 1, 2.20]);
  translate([233, 255, 0])
    cube([1, 1, 2.12]);
  translate([234, 255, 0])
    cube([1, 1, 2.12]);
  translate([235, 255, 0])
    cube([1, 1, 2.12]);
  translate([236, 255, 0])
    cube([1, 1, 2.12]);
  translate([237, 255, 0])
    cube([1, 1, 2.12]);
  translate([238, 255, 0])
    cube([1, 1, 2.12]);
  translate([239, 255, 0])
    cube([1, 1, 2.12]);
  translate([240, 255, 0])
    cube([1, 1, 2.12]);
  translate([241, 255, 0])
    cube([1, 1, 2.08]);
  translate([242, 255, 0])
    cube([1, 1, 2.08]);
  translate([243, 255, 0])
    cube([1, 1, 2.12]);
  translate([244, 255, 0])
    cube([1, 1, 2.12]);
  translate([245, 255, 0])
    cube([1, 1, 2.12]);
  translate([246, 255, 0])
    cube([1, 1, 2.08]);
  translate([0, 256, 0])
    cube([1, 1, 2.39]);
  translate([1, 256, 0])
    cube([1, 1, 2.39]);
  translate([2, 256, 0])
    cube([1, 1, 2.39]);
  translate([3, 256, 0])
    cube([1, 1, 2.39]);
  translate([4, 256, 0])
    cube([1, 1, 2.39]);
  translate([5, 256, 0])
    cube([1, 1, 2.35]);
  translate([6, 256, 0])
    cube([1, 1, 2.35]);
  translate([7, 256, 0])
    cube([1, 1, 2.39]);
  translate([8, 256, 0])
    cube([1, 1, 2.35]);
  translate([9, 256, 0])
    cube([1, 1, 2.35]);
  translate([10, 256, 0])
    cube([1, 1, 2.35]);
  translate([11, 256, 0])
    cube([1, 1, 2.35]);
  translate([12, 256, 0])
    cube([1, 1, 2.31]);
  translate([13, 256, 0])
    cube([1, 1, 2.39]);
  translate([14, 256, 0])
    cube([1, 1, 2.35]);
  translate([15, 256, 0])
    cube([1, 1, 2.39]);
  translate([16, 256, 0])
    cube([1, 1, 2.35]);
  translate([17, 256, 0])
    cube([1, 1, 2.31]);
  translate([18, 256, 0])
    cube([1, 1, 2.35]);
  translate([19, 256, 0])
    cube([1, 1, 2.35]);
  translate([20, 256, 0])
    cube([1, 1, 2.31]);
  translate([21, 256, 0])
    cube([1, 1, 2.31]);
  translate([22, 256, 0])
    cube([1, 1, 2.35]);
  translate([23, 256, 0])
    cube([1, 1, 2.35]);
  translate([24, 256, 0])
    cube([1, 1, 2.35]);
  translate([25, 256, 0])
    cube([1, 1, 2.31]);
  translate([26, 256, 0])
    cube([1, 1, 2.31]);
  translate([27, 256, 0])
    cube([1, 1, 2.31]);
  translate([28, 256, 0])
    cube([1, 1, 2.31]);
  translate([29, 256, 0])
    cube([1, 1, 2.31]);
  translate([30, 256, 0])
    cube([1, 1, 2.27]);
  translate([31, 256, 0])
    cube([1, 1, 2.35]);
  translate([32, 256, 0])
    cube([1, 1, 2.31]);
  translate([33, 256, 0])
    cube([1, 1, 2.31]);
  translate([34, 256, 0])
    cube([1, 1, 2.31]);
  translate([35, 256, 0])
    cube([1, 1, 2.31]);
  translate([36, 256, 0])
    cube([1, 1, 2.31]);
  translate([37, 256, 0])
    cube([1, 1, 2.31]);
  translate([38, 256, 0])
    cube([1, 1, 2.31]);
  translate([39, 256, 0])
    cube([1, 1, 2.31]);
  translate([40, 256, 0])
    cube([1, 1, 2.27]);
  translate([41, 256, 0])
    cube([1, 1, 2.27]);
  translate([42, 256, 0])
    cube([1, 1, 2.27]);
  translate([43, 256, 0])
    cube([1, 1, 2.27]);
  translate([44, 256, 0])
    cube([1, 1, 2.27]);
  translate([45, 256, 0])
    cube([1, 1, 2.27]);
  translate([46, 256, 0])
    cube([1, 1, 2.27]);
  translate([47, 256, 0])
    cube([1, 1, 2.27]);
  translate([48, 256, 0])
    cube([1, 1, 2.27]);
  translate([49, 256, 0])
    cube([1, 1, 2.27]);
  translate([50, 256, 0])
    cube([1, 1, 2.27]);
  translate([51, 256, 0])
    cube([1, 1, 2.27]);
  translate([52, 256, 0])
    cube([1, 1, 2.27]);
  translate([53, 256, 0])
    cube([1, 1, 2.27]);
  translate([54, 256, 0])
    cube([1, 1, 2.27]);
  translate([55, 256, 0])
    cube([1, 1, 2.27]);
  translate([56, 256, 0])
    cube([1, 1, 2.24]);
  translate([57, 256, 0])
    cube([1, 1, 7.92]);
  translate([58, 256, 0])
    cube([1, 1, 8.20]);
  translate([59, 256, 0])
    cube([1, 1, 8.04]);
  translate([60, 256, 0])
    cube([1, 1, 7.45]);
  translate([61, 256, 0])
    cube([1, 1, 6.24]);
  translate([62, 256, 0])
    cube([1, 1, 5.06]);
  translate([63, 256, 0])
    cube([1, 1, 3.80]);
  translate([64, 256, 0])
    cube([1, 1, 3.06]);
  translate([65, 256, 0])
    cube([1, 1, 2.75]);
  translate([66, 256, 0])
    cube([1, 1, 2.82]);
  translate([67, 256, 0])
    cube([1, 1, 2.82]);
  translate([68, 256, 0])
    cube([1, 1, 3.02]);
  translate([69, 256, 0])
    cube([1, 1, 3.22]);
  translate([70, 256, 0])
    cube([1, 1, 3.18]);
  translate([71, 256, 0])
    cube([1, 1, 3.53]);
  translate([72, 256, 0])
    cube([1, 1, 3.69]);
  translate([73, 256, 0])
    cube([1, 1, 3.76]);
  translate([74, 256, 0])
    cube([1, 1, 4.04]);
  translate([75, 256, 0])
    cube([1, 1, 4.12]);
  translate([76, 256, 0])
    cube([1, 1, 4.31]);
  translate([77, 256, 0])
    cube([1, 1, 4.43]);
  translate([78, 256, 0])
    cube([1, 1, 4.47]);
  translate([79, 256, 0])
    cube([1, 1, 4.31]);
  translate([80, 256, 0])
    cube([1, 1, 4.39]);
  translate([81, 256, 0])
    cube([1, 1, 4.35]);
  translate([82, 256, 0])
    cube([1, 1, 4.51]);
  translate([83, 256, 0])
    cube([1, 1, 4.35]);
  translate([84, 256, 0])
    cube([1, 1, 4.47]);
  translate([85, 256, 0])
    cube([1, 1, 4.43]);
  translate([86, 256, 0])
    cube([1, 1, 4.04]);
  translate([87, 256, 0])
    cube([1, 1, 3.76]);
  translate([88, 256, 0])
    cube([1, 1, 3.69]);
  translate([89, 256, 0])
    cube([1, 1, 3.61]);
  translate([90, 256, 0])
    cube([1, 1, 3.53]);
  translate([91, 256, 0])
    cube([1, 1, 3.49]);
  translate([92, 256, 0])
    cube([1, 1, 3.57]);
  translate([93, 256, 0])
    cube([1, 1, 3.37]);
  translate([94, 256, 0])
    cube([1, 1, 3.33]);
  translate([95, 256, 0])
    cube([1, 1, 3.49]);
  translate([96, 256, 0])
    cube([1, 1, 3.57]);
  translate([97, 256, 0])
    cube([1, 1, 3.33]);
  translate([98, 256, 0])
    cube([1, 1, 1.57]);
  translate([99, 256, 0])
    cube([1, 1, 1.76]);
  translate([100, 256, 0])
    cube([1, 1, 1.69]);
  translate([101, 256, 0])
    cube([1, 1, 0.71]);
  translate([102, 256, 0])
    cube([1, 1, 3.96]);
  translate([103, 256, 0])
    cube([1, 1, 2.00]);
  translate([104, 256, 0])
    cube([1, 1, 2.20]);
  translate([105, 256, 0])
    cube([1, 1, 2.16]);
  translate([106, 256, 0])
    cube([1, 1, 2.16]);
  translate([107, 256, 0])
    cube([1, 1, 2.16]);
  translate([108, 256, 0])
    cube([1, 1, 2.16]);
  translate([109, 256, 0])
    cube([1, 1, 2.16]);
  translate([110, 256, 0])
    cube([1, 1, 2.16]);
  translate([111, 256, 0])
    cube([1, 1, 2.16]);
  translate([112, 256, 0])
    cube([1, 1, 2.16]);
  translate([113, 256, 0])
    cube([1, 1, 2.16]);
  translate([114, 256, 0])
    cube([1, 1, 2.16]);
  translate([115, 256, 0])
    cube([1, 1, 2.16]);
  translate([116, 256, 0])
    cube([1, 1, 2.16]);
  translate([117, 256, 0])
    cube([1, 1, 2.16]);
  translate([118, 256, 0])
    cube([1, 1, 2.16]);
  translate([119, 256, 0])
    cube([1, 1, 2.16]);
  translate([120, 256, 0])
    cube([1, 1, 2.16]);
  translate([121, 256, 0])
    cube([1, 1, 1.73]);
  translate([122, 256, 0])
    cube([1, 1, 5.53]);
  translate([123, 256, 0])
    cube([1, 1, 5.29]);
  translate([124, 256, 0])
    cube([1, 1, 4.98]);
  translate([125, 256, 0])
    cube([1, 1, 4.86]);
  translate([126, 256, 0])
    cube([1, 1, 4.67]);
  translate([127, 256, 0])
    cube([1, 1, 4.63]);
  translate([128, 256, 0])
    cube([1, 1, 4.51]);
  translate([129, 256, 0])
    cube([1, 1, 4.31]);
  translate([130, 256, 0])
    cube([1, 1, 4.20]);
  translate([131, 256, 0])
    cube([1, 1, 3.84]);
  translate([132, 256, 0])
    cube([1, 1, 3.49]);
  translate([133, 256, 0])
    cube([1, 1, 3.29]);
  translate([134, 256, 0])
    cube([1, 1, 2.78]);
  translate([135, 256, 0])
    cube([1, 1, 2.63]);
  translate([136, 256, 0])
    cube([1, 1, 2.75]);
  translate([137, 256, 0])
    cube([1, 1, 2.71]);
  translate([138, 256, 0])
    cube([1, 1, 2.90]);
  translate([139, 256, 0])
    cube([1, 1, 2.90]);
  translate([140, 256, 0])
    cube([1, 1, 2.98]);
  translate([141, 256, 0])
    cube([1, 1, 3.10]);
  translate([142, 256, 0])
    cube([1, 1, 3.18]);
  translate([143, 256, 0])
    cube([1, 1, 3.33]);
  translate([144, 256, 0])
    cube([1, 1, 3.41]);
  translate([145, 256, 0])
    cube([1, 1, 3.57]);
  translate([146, 256, 0])
    cube([1, 1, 3.88]);
  translate([147, 256, 0])
    cube([1, 1, 4.00]);
  translate([148, 256, 0])
    cube([1, 1, 4.24]);
  translate([149, 256, 0])
    cube([1, 1, 4.51]);
  translate([150, 256, 0])
    cube([1, 1, 4.55]);
  translate([151, 256, 0])
    cube([1, 1, 4.43]);
  translate([152, 256, 0])
    cube([1, 1, 4.94]);
  translate([153, 256, 0])
    cube([1, 1, 4.75]);
  translate([154, 256, 0])
    cube([1, 1, 4.86]);
  translate([155, 256, 0])
    cube([1, 1, 4.78]);
  translate([156, 256, 0])
    cube([1, 1, 4.43]);
  translate([157, 256, 0])
    cube([1, 1, 4.27]);
  translate([158, 256, 0])
    cube([1, 1, 4.16]);
  translate([159, 256, 0])
    cube([1, 1, 4.24]);
  translate([160, 256, 0])
    cube([1, 1, 4.90]);
  translate([161, 256, 0])
    cube([1, 1, 5.73]);
  translate([162, 256, 0])
    cube([1, 1, 6.27]);
  translate([163, 256, 0])
    cube([1, 1, 6.43]);
  translate([164, 256, 0])
    cube([1, 1, 6.55]);
  translate([165, 256, 0])
    cube([1, 1, 1.92]);
  translate([166, 256, 0])
    cube([1, 1, 2.12]);
  translate([167, 256, 0])
    cube([1, 1, 2.12]);
  translate([168, 256, 0])
    cube([1, 1, 2.16]);
  translate([169, 256, 0])
    cube([1, 1, 2.12]);
  translate([170, 256, 0])
    cube([1, 1, 2.12]);
  translate([171, 256, 0])
    cube([1, 1, 2.12]);
  translate([172, 256, 0])
    cube([1, 1, 2.12]);
  translate([173, 256, 0])
    cube([1, 1, 2.12]);
  translate([174, 256, 0])
    cube([1, 1, 2.08]);
  translate([175, 256, 0])
    cube([1, 1, 2.08]);
  translate([176, 256, 0])
    cube([1, 1, 2.16]);
  translate([177, 256, 0])
    cube([1, 1, 2.12]);
  translate([178, 256, 0])
    cube([1, 1, 2.12]);
  translate([179, 256, 0])
    cube([1, 1, 2.12]);
  translate([180, 256, 0])
    cube([1, 1, 2.12]);
  translate([181, 256, 0])
    cube([1, 1, 2.12]);
  translate([182, 256, 0])
    cube([1, 1, 2.12]);
  translate([183, 256, 0])
    cube([1, 1, 2.16]);
  translate([184, 256, 0])
    cube([1, 1, 2.16]);
  translate([185, 256, 0])
    cube([1, 1, 2.16]);
  translate([186, 256, 0])
    cube([1, 1, 2.16]);
  translate([187, 256, 0])
    cube([1, 1, 2.16]);
  translate([188, 256, 0])
    cube([1, 1, 2.12]);
  translate([189, 256, 0])
    cube([1, 1, 2.16]);
  translate([190, 256, 0])
    cube([1, 1, 2.16]);
  translate([191, 256, 0])
    cube([1, 1, 2.16]);
  translate([192, 256, 0])
    cube([1, 1, 2.08]);
  translate([193, 256, 0])
    cube([1, 1, 2.12]);
  translate([194, 256, 0])
    cube([1, 1, 2.16]);
  translate([195, 256, 0])
    cube([1, 1, 2.16]);
  translate([196, 256, 0])
    cube([1, 1, 2.12]);
  translate([197, 256, 0])
    cube([1, 1, 2.16]);
  translate([198, 256, 0])
    cube([1, 1, 2.16]);
  translate([199, 256, 0])
    cube([1, 1, 2.16]);
  translate([200, 256, 0])
    cube([1, 1, 2.16]);
  translate([201, 256, 0])
    cube([1, 1, 2.16]);
  translate([202, 256, 0])
    cube([1, 1, 2.16]);
  translate([203, 256, 0])
    cube([1, 1, 2.16]);
  translate([204, 256, 0])
    cube([1, 1, 2.16]);
  translate([205, 256, 0])
    cube([1, 1, 2.16]);
  translate([206, 256, 0])
    cube([1, 1, 2.16]);
  translate([207, 256, 0])
    cube([1, 1, 2.16]);
  translate([208, 256, 0])
    cube([1, 1, 2.16]);
  translate([209, 256, 0])
    cube([1, 1, 2.16]);
  translate([210, 256, 0])
    cube([1, 1, 2.16]);
  translate([211, 256, 0])
    cube([1, 1, 2.16]);
  translate([212, 256, 0])
    cube([1, 1, 2.16]);
  translate([213, 256, 0])
    cube([1, 1, 2.16]);
  translate([214, 256, 0])
    cube([1, 1, 2.16]);
  translate([215, 256, 0])
    cube([1, 1, 2.16]);
  translate([216, 256, 0])
    cube([1, 1, 2.16]);
  translate([217, 256, 0])
    cube([1, 1, 2.08]);
  translate([218, 256, 0])
    cube([1, 1, 2.16]);
  translate([219, 256, 0])
    cube([1, 1, 2.12]);
  translate([220, 256, 0])
    cube([1, 1, 2.12]);
  translate([221, 256, 0])
    cube([1, 1, 2.16]);
  translate([222, 256, 0])
    cube([1, 1, 2.12]);
  translate([223, 256, 0])
    cube([1, 1, 2.12]);
  translate([224, 256, 0])
    cube([1, 1, 2.16]);
  translate([225, 256, 0])
    cube([1, 1, 2.16]);
  translate([226, 256, 0])
    cube([1, 1, 2.16]);
  translate([227, 256, 0])
    cube([1, 1, 2.16]);
  translate([228, 256, 0])
    cube([1, 1, 2.16]);
  translate([229, 256, 0])
    cube([1, 1, 2.16]);
  translate([230, 256, 0])
    cube([1, 1, 2.20]);
  translate([231, 256, 0])
    cube([1, 1, 2.16]);
  translate([232, 256, 0])
    cube([1, 1, 2.12]);
  translate([233, 256, 0])
    cube([1, 1, 2.16]);
  translate([234, 256, 0])
    cube([1, 1, 2.16]);
  translate([235, 256, 0])
    cube([1, 1, 2.12]);
  translate([236, 256, 0])
    cube([1, 1, 2.08]);
  translate([237, 256, 0])
    cube([1, 1, 2.12]);
  translate([238, 256, 0])
    cube([1, 1, 2.16]);
  translate([239, 256, 0])
    cube([1, 1, 2.16]);
  translate([240, 256, 0])
    cube([1, 1, 2.12]);
  translate([241, 256, 0])
    cube([1, 1, 2.12]);
  translate([242, 256, 0])
    cube([1, 1, 2.12]);
  translate([243, 256, 0])
    cube([1, 1, 2.12]);
  translate([244, 256, 0])
    cube([1, 1, 2.16]);
  translate([245, 256, 0])
    cube([1, 1, 2.16]);
  translate([246, 256, 0])
    cube([1, 1, 2.12]);
  translate([0, 257, 0])
    cube([1, 1, 2.35]);
  translate([1, 257, 0])
    cube([1, 1, 2.35]);
  translate([2, 257, 0])
    cube([1, 1, 2.35]);
  translate([3, 257, 0])
    cube([1, 1, 2.39]);
  translate([4, 257, 0])
    cube([1, 1, 2.39]);
  translate([5, 257, 0])
    cube([1, 1, 2.35]);
  translate([6, 257, 0])
    cube([1, 1, 2.35]);
  translate([7, 257, 0])
    cube([1, 1, 2.39]);
  translate([8, 257, 0])
    cube([1, 1, 2.39]);
  translate([9, 257, 0])
    cube([1, 1, 2.35]);
  translate([10, 257, 0])
    cube([1, 1, 2.35]);
  translate([11, 257, 0])
    cube([1, 1, 2.35]);
  translate([12, 257, 0])
    cube([1, 1, 2.39]);
  translate([13, 257, 0])
    cube([1, 1, 2.35]);
  translate([14, 257, 0])
    cube([1, 1, 2.35]);
  translate([15, 257, 0])
    cube([1, 1, 2.39]);
  translate([16, 257, 0])
    cube([1, 1, 2.43]);
  translate([17, 257, 0])
    cube([1, 1, 2.31]);
  translate([18, 257, 0])
    cube([1, 1, 2.35]);
  translate([19, 257, 0])
    cube([1, 1, 2.35]);
  translate([20, 257, 0])
    cube([1, 1, 2.31]);
  translate([21, 257, 0])
    cube([1, 1, 2.31]);
  translate([22, 257, 0])
    cube([1, 1, 2.35]);
  translate([23, 257, 0])
    cube([1, 1, 2.35]);
  translate([24, 257, 0])
    cube([1, 1, 2.35]);
  translate([25, 257, 0])
    cube([1, 1, 2.31]);
  translate([26, 257, 0])
    cube([1, 1, 2.31]);
  translate([27, 257, 0])
    cube([1, 1, 2.31]);
  translate([28, 257, 0])
    cube([1, 1, 2.31]);
  translate([29, 257, 0])
    cube([1, 1, 2.31]);
  translate([30, 257, 0])
    cube([1, 1, 2.31]);
  translate([31, 257, 0])
    cube([1, 1, 2.27]);
  translate([32, 257, 0])
    cube([1, 1, 2.31]);
  translate([33, 257, 0])
    cube([1, 1, 2.31]);
  translate([34, 257, 0])
    cube([1, 1, 2.31]);
  translate([35, 257, 0])
    cube([1, 1, 2.31]);
  translate([36, 257, 0])
    cube([1, 1, 2.31]);
  translate([37, 257, 0])
    cube([1, 1, 2.31]);
  translate([38, 257, 0])
    cube([1, 1, 2.31]);
  translate([39, 257, 0])
    cube([1, 1, 2.31]);
  translate([40, 257, 0])
    cube([1, 1, 2.27]);
  translate([41, 257, 0])
    cube([1, 1, 2.27]);
  translate([42, 257, 0])
    cube([1, 1, 2.27]);
  translate([43, 257, 0])
    cube([1, 1, 2.27]);
  translate([44, 257, 0])
    cube([1, 1, 2.27]);
  translate([45, 257, 0])
    cube([1, 1, 2.27]);
  translate([46, 257, 0])
    cube([1, 1, 2.27]);
  translate([47, 257, 0])
    cube([1, 1, 2.27]);
  translate([48, 257, 0])
    cube([1, 1, 2.27]);
  translate([49, 257, 0])
    cube([1, 1, 2.27]);
  translate([50, 257, 0])
    cube([1, 1, 2.27]);
  translate([51, 257, 0])
    cube([1, 1, 2.27]);
  translate([52, 257, 0])
    cube([1, 1, 2.27]);
  translate([53, 257, 0])
    cube([1, 1, 2.27]);
  translate([54, 257, 0])
    cube([1, 1, 2.27]);
  translate([55, 257, 0])
    cube([1, 1, 2.27]);
  translate([56, 257, 0])
    cube([1, 1, 2.20]);
  translate([57, 257, 0])
    cube([1, 1, 7.88]);
  translate([58, 257, 0])
    cube([1, 1, 8.16]);
  translate([59, 257, 0])
    cube([1, 1, 8.00]);
  translate([60, 257, 0])
    cube([1, 1, 7.29]);
  translate([61, 257, 0])
    cube([1, 1, 6.27]);
  translate([62, 257, 0])
    cube([1, 1, 5.02]);
  translate([63, 257, 0])
    cube([1, 1, 3.84]);
  translate([64, 257, 0])
    cube([1, 1, 2.98]);
  translate([65, 257, 0])
    cube([1, 1, 2.75]);
  translate([66, 257, 0])
    cube([1, 1, 2.82]);
  translate([67, 257, 0])
    cube([1, 1, 2.86]);
  translate([68, 257, 0])
    cube([1, 1, 3.10]);
  translate([69, 257, 0])
    cube([1, 1, 3.25]);
  translate([70, 257, 0])
    cube([1, 1, 3.22]);
  translate([71, 257, 0])
    cube([1, 1, 3.45]);
  translate([72, 257, 0])
    cube([1, 1, 3.65]);
  translate([73, 257, 0])
    cube([1, 1, 3.80]);
  translate([74, 257, 0])
    cube([1, 1, 4.08]);
  translate([75, 257, 0])
    cube([1, 1, 4.35]);
  translate([76, 257, 0])
    cube([1, 1, 4.43]);
  translate([77, 257, 0])
    cube([1, 1, 4.47]);
  translate([78, 257, 0])
    cube([1, 1, 4.51]);
  translate([79, 257, 0])
    cube([1, 1, 4.35]);
  translate([80, 257, 0])
    cube([1, 1, 4.43]);
  translate([81, 257, 0])
    cube([1, 1, 4.43]);
  translate([82, 257, 0])
    cube([1, 1, 4.71]);
  translate([83, 257, 0])
    cube([1, 1, 4.55]);
  translate([84, 257, 0])
    cube([1, 1, 4.47]);
  translate([85, 257, 0])
    cube([1, 1, 4.27]);
  translate([86, 257, 0])
    cube([1, 1, 4.00]);
  translate([87, 257, 0])
    cube([1, 1, 3.73]);
  translate([88, 257, 0])
    cube([1, 1, 3.73]);
  translate([89, 257, 0])
    cube([1, 1, 3.57]);
  translate([90, 257, 0])
    cube([1, 1, 3.49]);
  translate([91, 257, 0])
    cube([1, 1, 3.37]);
  translate([92, 257, 0])
    cube([1, 1, 3.49]);
  translate([93, 257, 0])
    cube([1, 1, 3.41]);
  translate([94, 257, 0])
    cube([1, 1, 3.41]);
  translate([95, 257, 0])
    cube([1, 1, 3.57]);
  translate([96, 257, 0])
    cube([1, 1, 3.61]);
  translate([97, 257, 0])
    cube([1, 1, 3.73]);
  translate([98, 257, 0])
    cube([1, 1, 3.37]);
  translate([99, 257, 0])
    cube([1, 1, 1.22]);
  translate([100, 257, 0])
    cube([1, 1, 1.61]);
  translate([101, 257, 0])
    cube([1, 1, 3.88]);
  translate([102, 257, 0])
    cube([1, 1, 1.65]);
  translate([103, 257, 0])
    cube([1, 1, 2.39]);
  translate([104, 257, 0])
    cube([1, 1, 2.20]);
  translate([105, 257, 0])
    cube([1, 1, 2.16]);
  translate([106, 257, 0])
    cube([1, 1, 2.16]);
  translate([107, 257, 0])
    cube([1, 1, 2.16]);
  translate([108, 257, 0])
    cube([1, 1, 2.16]);
  translate([109, 257, 0])
    cube([1, 1, 2.16]);
  translate([110, 257, 0])
    cube([1, 1, 2.16]);
  translate([111, 257, 0])
    cube([1, 1, 2.16]);
  translate([112, 257, 0])
    cube([1, 1, 2.16]);
  translate([113, 257, 0])
    cube([1, 1, 2.16]);
  translate([114, 257, 0])
    cube([1, 1, 2.16]);
  translate([115, 257, 0])
    cube([1, 1, 2.16]);
  translate([116, 257, 0])
    cube([1, 1, 2.16]);
  translate([117, 257, 0])
    cube([1, 1, 2.16]);
  translate([118, 257, 0])
    cube([1, 1, 2.16]);
  translate([119, 257, 0])
    cube([1, 1, 2.16]);
  translate([120, 257, 0])
    cube([1, 1, 2.16]);
  translate([121, 257, 0])
    cube([1, 1, 1.69]);
  translate([122, 257, 0])
    cube([1, 1, 2.98]);
  translate([123, 257, 0])
    cube([1, 1, 5.49]);
  translate([124, 257, 0])
    cube([1, 1, 5.10]);
  translate([125, 257, 0])
    cube([1, 1, 4.98]);
  translate([126, 257, 0])
    cube([1, 1, 4.75]);
  translate([127, 257, 0])
    cube([1, 1, 4.71]);
  translate([128, 257, 0])
    cube([1, 1, 4.67]);
  translate([129, 257, 0])
    cube([1, 1, 4.43]);
  translate([130, 257, 0])
    cube([1, 1, 4.31]);
  translate([131, 257, 0])
    cube([1, 1, 4.16]);
  translate([132, 257, 0])
    cube([1, 1, 3.84]);
  translate([133, 257, 0])
    cube([1, 1, 3.45]);
  translate([134, 257, 0])
    cube([1, 1, 3.02]);
  translate([135, 257, 0])
    cube([1, 1, 2.71]);
  translate([136, 257, 0])
    cube([1, 1, 2.67]);
  translate([137, 257, 0])
    cube([1, 1, 2.67]);
  translate([138, 257, 0])
    cube([1, 1, 2.86]);
  translate([139, 257, 0])
    cube([1, 1, 2.90]);
  translate([140, 257, 0])
    cube([1, 1, 3.10]);
  translate([141, 257, 0])
    cube([1, 1, 3.22]);
  translate([142, 257, 0])
    cube([1, 1, 3.22]);
  translate([143, 257, 0])
    cube([1, 1, 3.25]);
  translate([144, 257, 0])
    cube([1, 1, 3.41]);
  translate([145, 257, 0])
    cube([1, 1, 3.61]);
  translate([146, 257, 0])
    cube([1, 1, 3.84]);
  translate([147, 257, 0])
    cube([1, 1, 4.12]);
  translate([148, 257, 0])
    cube([1, 1, 4.35]);
  translate([149, 257, 0])
    cube([1, 1, 4.27]);
  translate([150, 257, 0])
    cube([1, 1, 4.51]);
  translate([151, 257, 0])
    cube([1, 1, 4.63]);
  translate([152, 257, 0])
    cube([1, 1, 4.71]);
  translate([153, 257, 0])
    cube([1, 1, 4.78]);
  translate([154, 257, 0])
    cube([1, 1, 4.78]);
  translate([155, 257, 0])
    cube([1, 1, 4.67]);
  translate([156, 257, 0])
    cube([1, 1, 4.43]);
  translate([157, 257, 0])
    cube([1, 1, 4.27]);
  translate([158, 257, 0])
    cube([1, 1, 4.04]);
  translate([159, 257, 0])
    cube([1, 1, 4.59]);
  translate([160, 257, 0])
    cube([1, 1, 5.06]);
  translate([161, 257, 0])
    cube([1, 1, 5.69]);
  translate([162, 257, 0])
    cube([1, 1, 6.24]);
  translate([163, 257, 0])
    cube([1, 1, 6.39]);
  translate([164, 257, 0])
    cube([1, 1, 6.71]);
  translate([165, 257, 0])
    cube([1, 1, 2.24]);
  translate([166, 257, 0])
    cube([1, 1, 2.12]);
  translate([167, 257, 0])
    cube([1, 1, 2.12]);
  translate([168, 257, 0])
    cube([1, 1, 2.16]);
  translate([169, 257, 0])
    cube([1, 1, 2.12]);
  translate([170, 257, 0])
    cube([1, 1, 2.12]);
  translate([171, 257, 0])
    cube([1, 1, 2.12]);
  translate([172, 257, 0])
    cube([1, 1, 2.12]);
  translate([173, 257, 0])
    cube([1, 1, 2.12]);
  translate([174, 257, 0])
    cube([1, 1, 2.12]);
  translate([175, 257, 0])
    cube([1, 1, 2.12]);
  translate([176, 257, 0])
    cube([1, 1, 2.16]);
  translate([177, 257, 0])
    cube([1, 1, 2.16]);
  translate([178, 257, 0])
    cube([1, 1, 2.16]);
  translate([179, 257, 0])
    cube([1, 1, 2.12]);
  translate([180, 257, 0])
    cube([1, 1, 2.12]);
  translate([181, 257, 0])
    cube([1, 1, 2.12]);
  translate([182, 257, 0])
    cube([1, 1, 2.12]);
  translate([183, 257, 0])
    cube([1, 1, 2.16]);
  translate([184, 257, 0])
    cube([1, 1, 2.16]);
  translate([185, 257, 0])
    cube([1, 1, 2.12]);
  translate([186, 257, 0])
    cube([1, 1, 2.12]);
  translate([187, 257, 0])
    cube([1, 1, 2.16]);
  translate([188, 257, 0])
    cube([1, 1, 2.12]);
  translate([189, 257, 0])
    cube([1, 1, 2.16]);
  translate([190, 257, 0])
    cube([1, 1, 2.16]);
  translate([191, 257, 0])
    cube([1, 1, 2.16]);
  translate([192, 257, 0])
    cube([1, 1, 2.16]);
  translate([193, 257, 0])
    cube([1, 1, 2.12]);
  translate([194, 257, 0])
    cube([1, 1, 2.16]);
  translate([195, 257, 0])
    cube([1, 1, 2.16]);
  translate([196, 257, 0])
    cube([1, 1, 2.12]);
  translate([197, 257, 0])
    cube([1, 1, 2.16]);
  translate([198, 257, 0])
    cube([1, 1, 2.16]);
  translate([199, 257, 0])
    cube([1, 1, 2.16]);
  translate([200, 257, 0])
    cube([1, 1, 2.16]);
  translate([201, 257, 0])
    cube([1, 1, 2.16]);
  translate([202, 257, 0])
    cube([1, 1, 2.16]);
  translate([203, 257, 0])
    cube([1, 1, 2.16]);
  translate([204, 257, 0])
    cube([1, 1, 2.16]);
  translate([205, 257, 0])
    cube([1, 1, 2.16]);
  translate([206, 257, 0])
    cube([1, 1, 2.16]);
  translate([207, 257, 0])
    cube([1, 1, 2.16]);
  translate([208, 257, 0])
    cube([1, 1, 2.16]);
  translate([209, 257, 0])
    cube([1, 1, 2.16]);
  translate([210, 257, 0])
    cube([1, 1, 2.16]);
  translate([211, 257, 0])
    cube([1, 1, 2.16]);
  translate([212, 257, 0])
    cube([1, 1, 2.16]);
  translate([213, 257, 0])
    cube([1, 1, 2.16]);
  translate([214, 257, 0])
    cube([1, 1, 2.16]);
  translate([215, 257, 0])
    cube([1, 1, 2.16]);
  translate([216, 257, 0])
    cube([1, 1, 2.16]);
  translate([217, 257, 0])
    cube([1, 1, 2.16]);
  translate([218, 257, 0])
    cube([1, 1, 2.12]);
  translate([219, 257, 0])
    cube([1, 1, 2.16]);
  translate([220, 257, 0])
    cube([1, 1, 2.12]);
  translate([221, 257, 0])
    cube([1, 1, 2.16]);
  translate([222, 257, 0])
    cube([1, 1, 2.16]);
  translate([223, 257, 0])
    cube([1, 1, 2.16]);
  translate([224, 257, 0])
    cube([1, 1, 2.16]);
  translate([225, 257, 0])
    cube([1, 1, 2.16]);
  translate([226, 257, 0])
    cube([1, 1, 2.16]);
  translate([227, 257, 0])
    cube([1, 1, 2.16]);
  translate([228, 257, 0])
    cube([1, 1, 2.12]);
  translate([229, 257, 0])
    cube([1, 1, 2.12]);
  translate([230, 257, 0])
    cube([1, 1, 2.20]);
  translate([231, 257, 0])
    cube([1, 1, 2.16]);
  translate([232, 257, 0])
    cube([1, 1, 2.20]);
  translate([233, 257, 0])
    cube([1, 1, 2.16]);
  translate([234, 257, 0])
    cube([1, 1, 2.16]);
  translate([235, 257, 0])
    cube([1, 1, 2.12]);
  translate([236, 257, 0])
    cube([1, 1, 2.08]);
  translate([237, 257, 0])
    cube([1, 1, 2.12]);
  translate([238, 257, 0])
    cube([1, 1, 2.16]);
  translate([239, 257, 0])
    cube([1, 1, 2.16]);
  translate([240, 257, 0])
    cube([1, 1, 2.16]);
  translate([241, 257, 0])
    cube([1, 1, 2.12]);
  translate([242, 257, 0])
    cube([1, 1, 2.12]);
  translate([243, 257, 0])
    cube([1, 1, 2.12]);
  translate([244, 257, 0])
    cube([1, 1, 2.16]);
  translate([245, 257, 0])
    cube([1, 1, 2.16]);
  translate([246, 257, 0])
    cube([1, 1, 2.12]);
  translate([0, 258, 0])
    cube([1, 1, 2.39]);
  translate([1, 258, 0])
    cube([1, 1, 2.39]);
  translate([2, 258, 0])
    cube([1, 1, 2.39]);
  translate([3, 258, 0])
    cube([1, 1, 2.39]);
  translate([4, 258, 0])
    cube([1, 1, 2.35]);
  translate([5, 258, 0])
    cube([1, 1, 2.39]);
  translate([6, 258, 0])
    cube([1, 1, 2.39]);
  translate([7, 258, 0])
    cube([1, 1, 2.39]);
  translate([8, 258, 0])
    cube([1, 1, 2.39]);
  translate([9, 258, 0])
    cube([1, 1, 2.35]);
  translate([10, 258, 0])
    cube([1, 1, 2.35]);
  translate([11, 258, 0])
    cube([1, 1, 2.43]);
  translate([12, 258, 0])
    cube([1, 1, 2.35]);
  translate([13, 258, 0])
    cube([1, 1, 2.35]);
  translate([14, 258, 0])
    cube([1, 1, 2.35]);
  translate([15, 258, 0])
    cube([1, 1, 2.39]);
  translate([16, 258, 0])
    cube([1, 1, 2.35]);
  translate([17, 258, 0])
    cube([1, 1, 2.35]);
  translate([18, 258, 0])
    cube([1, 1, 2.35]);
  translate([19, 258, 0])
    cube([1, 1, 2.35]);
  translate([20, 258, 0])
    cube([1, 1, 2.35]);
  translate([21, 258, 0])
    cube([1, 1, 2.35]);
  translate([22, 258, 0])
    cube([1, 1, 2.31]);
  translate([23, 258, 0])
    cube([1, 1, 2.35]);
  translate([24, 258, 0])
    cube([1, 1, 2.39]);
  translate([25, 258, 0])
    cube([1, 1, 2.35]);
  translate([26, 258, 0])
    cube([1, 1, 2.35]);
  translate([27, 258, 0])
    cube([1, 1, 2.35]);
  translate([28, 258, 0])
    cube([1, 1, 2.35]);
  translate([29, 258, 0])
    cube([1, 1, 2.35]);
  translate([30, 258, 0])
    cube([1, 1, 2.35]);
  translate([31, 258, 0])
    cube([1, 1, 2.35]);
  translate([32, 258, 0])
    cube([1, 1, 2.31]);
  translate([33, 258, 0])
    cube([1, 1, 2.31]);
  translate([34, 258, 0])
    cube([1, 1, 2.31]);
  translate([35, 258, 0])
    cube([1, 1, 2.31]);
  translate([36, 258, 0])
    cube([1, 1, 2.31]);
  translate([37, 258, 0])
    cube([1, 1, 2.31]);
  translate([38, 258, 0])
    cube([1, 1, 2.31]);
  translate([39, 258, 0])
    cube([1, 1, 2.35]);
  translate([40, 258, 0])
    cube([1, 1, 2.27]);
  translate([41, 258, 0])
    cube([1, 1, 2.27]);
  translate([42, 258, 0])
    cube([1, 1, 2.31]);
  translate([43, 258, 0])
    cube([1, 1, 2.27]);
  translate([44, 258, 0])
    cube([1, 1, 2.27]);
  translate([45, 258, 0])
    cube([1, 1, 2.27]);
  translate([46, 258, 0])
    cube([1, 1, 2.27]);
  translate([47, 258, 0])
    cube([1, 1, 2.27]);
  translate([48, 258, 0])
    cube([1, 1, 2.27]);
  translate([49, 258, 0])
    cube([1, 1, 2.27]);
  translate([50, 258, 0])
    cube([1, 1, 2.27]);
  translate([51, 258, 0])
    cube([1, 1, 2.27]);
  translate([52, 258, 0])
    cube([1, 1, 2.24]);
  translate([53, 258, 0])
    cube([1, 1, 2.27]);
  translate([54, 258, 0])
    cube([1, 1, 2.27]);
  translate([55, 258, 0])
    cube([1, 1, 2.27]);
  translate([56, 258, 0])
    cube([1, 1, 2.16]);
  translate([57, 258, 0])
    cube([1, 1, 7.92]);
  translate([58, 258, 0])
    cube([1, 1, 8.31]);
  translate([59, 258, 0])
    cube([1, 1, 7.92]);
  translate([60, 258, 0])
    cube([1, 1, 7.29]);
  translate([61, 258, 0])
    cube([1, 1, 6.27]);
  translate([62, 258, 0])
    cube([1, 1, 4.90]);
  translate([63, 258, 0])
    cube([1, 1, 3.84]);
  translate([64, 258, 0])
    cube([1, 1, 2.98]);
  translate([65, 258, 0])
    cube([1, 1, 2.75]);
  translate([66, 258, 0])
    cube([1, 1, 2.82]);
  translate([67, 258, 0])
    cube([1, 1, 2.98]);
  translate([68, 258, 0])
    cube([1, 1, 3.14]);
  translate([69, 258, 0])
    cube([1, 1, 3.25]);
  translate([70, 258, 0])
    cube([1, 1, 3.29]);
  translate([71, 258, 0])
    cube([1, 1, 3.53]);
  translate([72, 258, 0])
    cube([1, 1, 3.69]);
  translate([73, 258, 0])
    cube([1, 1, 3.84]);
  translate([74, 258, 0])
    cube([1, 1, 4.16]);
  translate([75, 258, 0])
    cube([1, 1, 4.39]);
  translate([76, 258, 0])
    cube([1, 1, 4.51]);
  translate([77, 258, 0])
    cube([1, 1, 4.43]);
  translate([78, 258, 0])
    cube([1, 1, 4.51]);
  translate([79, 258, 0])
    cube([1, 1, 4.47]);
  translate([80, 258, 0])
    cube([1, 1, 4.43]);
  translate([81, 258, 0])
    cube([1, 1, 4.43]);
  translate([82, 258, 0])
    cube([1, 1, 4.63]);
  translate([83, 258, 0])
    cube([1, 1, 4.55]);
  translate([84, 258, 0])
    cube([1, 1, 4.43]);
  translate([85, 258, 0])
    cube([1, 1, 4.24]);
  translate([86, 258, 0])
    cube([1, 1, 3.96]);
  translate([87, 258, 0])
    cube([1, 1, 3.69]);
  translate([88, 258, 0])
    cube([1, 1, 3.61]);
  translate([89, 258, 0])
    cube([1, 1, 3.49]);
  translate([90, 258, 0])
    cube([1, 1, 3.45]);
  translate([91, 258, 0])
    cube([1, 1, 3.33]);
  translate([92, 258, 0])
    cube([1, 1, 3.37]);
  translate([93, 258, 0])
    cube([1, 1, 3.37]);
  translate([94, 258, 0])
    cube([1, 1, 3.45]);
  translate([95, 258, 0])
    cube([1, 1, 3.65]);
  translate([96, 258, 0])
    cube([1, 1, 3.65]);
  translate([97, 258, 0])
    cube([1, 1, 3.76]);
  translate([98, 258, 0])
    cube([1, 1, 3.76]);
  translate([99, 258, 0])
    cube([1, 1, 3.22]);
  translate([100, 258, 0])
    cube([1, 1, 0.94]);
  translate([101, 258, 0])
    cube([1, 1, 2.12]);
  translate([102, 258, 0])
    cube([1, 1, 2.20]);
  translate([103, 258, 0])
    cube([1, 1, 2.20]);
  translate([104, 258, 0])
    cube([1, 1, 2.20]);
  translate([105, 258, 0])
    cube([1, 1, 2.16]);
  translate([106, 258, 0])
    cube([1, 1, 2.16]);
  translate([107, 258, 0])
    cube([1, 1, 2.16]);
  translate([108, 258, 0])
    cube([1, 1, 2.16]);
  translate([109, 258, 0])
    cube([1, 1, 2.16]);
  translate([110, 258, 0])
    cube([1, 1, 2.16]);
  translate([111, 258, 0])
    cube([1, 1, 2.16]);
  translate([112, 258, 0])
    cube([1, 1, 2.16]);
  translate([113, 258, 0])
    cube([1, 1, 2.16]);
  translate([114, 258, 0])
    cube([1, 1, 2.16]);
  translate([115, 258, 0])
    cube([1, 1, 2.16]);
  translate([116, 258, 0])
    cube([1, 1, 2.16]);
  translate([117, 258, 0])
    cube([1, 1, 2.16]);
  translate([118, 258, 0])
    cube([1, 1, 2.16]);
  translate([119, 258, 0])
    cube([1, 1, 2.16]);
  translate([120, 258, 0])
    cube([1, 1, 2.16]);
  translate([121, 258, 0])
    cube([1, 1, 2.16]);
  translate([122, 258, 0])
    cube([1, 1, 2.08]);
  translate([123, 258, 0])
    cube([1, 1, 5.69]);
  translate([124, 258, 0])
    cube([1, 1, 5.25]);
  translate([125, 258, 0])
    cube([1, 1, 5.06]);
  translate([126, 258, 0])
    cube([1, 1, 4.90]);
  translate([127, 258, 0])
    cube([1, 1, 4.98]);
  translate([128, 258, 0])
    cube([1, 1, 4.86]);
  translate([129, 258, 0])
    cube([1, 1, 4.63]);
  translate([130, 258, 0])
    cube([1, 1, 4.47]);
  translate([131, 258, 0])
    cube([1, 1, 4.20]);
  translate([132, 258, 0])
    cube([1, 1, 3.96]);
  translate([133, 258, 0])
    cube([1, 1, 3.61]);
  translate([134, 258, 0])
    cube([1, 1, 3.29]);
  translate([135, 258, 0])
    cube([1, 1, 2.75]);
  translate([136, 258, 0])
    cube([1, 1, 2.75]);
  translate([137, 258, 0])
    cube([1, 1, 2.75]);
  translate([138, 258, 0])
    cube([1, 1, 2.90]);
  translate([139, 258, 0])
    cube([1, 1, 3.02]);
  translate([140, 258, 0])
    cube([1, 1, 3.14]);
  translate([141, 258, 0])
    cube([1, 1, 3.25]);
  translate([142, 258, 0])
    cube([1, 1, 3.29]);
  translate([143, 258, 0])
    cube([1, 1, 3.22]);
  translate([144, 258, 0])
    cube([1, 1, 3.45]);
  translate([145, 258, 0])
    cube([1, 1, 3.65]);
  translate([146, 258, 0])
    cube([1, 1, 3.88]);
  translate([147, 258, 0])
    cube([1, 1, 4.08]);
  translate([148, 258, 0])
    cube([1, 1, 4.27]);
  translate([149, 258, 0])
    cube([1, 1, 4.39]);
  translate([150, 258, 0])
    cube([1, 1, 4.51]);
  translate([151, 258, 0])
    cube([1, 1, 4.63]);
  translate([152, 258, 0])
    cube([1, 1, 4.71]);
  translate([153, 258, 0])
    cube([1, 1, 4.75]);
  translate([154, 258, 0])
    cube([1, 1, 4.75]);
  translate([155, 258, 0])
    cube([1, 1, 4.67]);
  translate([156, 258, 0])
    cube([1, 1, 4.39]);
  translate([157, 258, 0])
    cube([1, 1, 4.24]);
  translate([158, 258, 0])
    cube([1, 1, 4.20]);
  translate([159, 258, 0])
    cube([1, 1, 4.59]);
  translate([160, 258, 0])
    cube([1, 1, 5.06]);
  translate([161, 258, 0])
    cube([1, 1, 5.76]);
  translate([162, 258, 0])
    cube([1, 1, 6.24]);
  translate([163, 258, 0])
    cube([1, 1, 6.39]);
  translate([164, 258, 0])
    cube([1, 1, 6.71]);
  translate([165, 258, 0])
    cube([1, 1, 2.04]);
  translate([166, 258, 0])
    cube([1, 1, 2.12]);
  translate([167, 258, 0])
    cube([1, 1, 2.12]);
  translate([168, 258, 0])
    cube([1, 1, 2.12]);
  translate([169, 258, 0])
    cube([1, 1, 2.12]);
  translate([170, 258, 0])
    cube([1, 1, 2.12]);
  translate([171, 258, 0])
    cube([1, 1, 2.12]);
  translate([172, 258, 0])
    cube([1, 1, 2.12]);
  translate([173, 258, 0])
    cube([1, 1, 2.12]);
  translate([174, 258, 0])
    cube([1, 1, 2.12]);
  translate([175, 258, 0])
    cube([1, 1, 2.16]);
  translate([176, 258, 0])
    cube([1, 1, 2.16]);
  translate([177, 258, 0])
    cube([1, 1, 2.12]);
  translate([178, 258, 0])
    cube([1, 1, 2.16]);
  translate([179, 258, 0])
    cube([1, 1, 2.12]);
  translate([180, 258, 0])
    cube([1, 1, 2.16]);
  translate([181, 258, 0])
    cube([1, 1, 2.16]);
  translate([182, 258, 0])
    cube([1, 1, 2.16]);
  translate([183, 258, 0])
    cube([1, 1, 2.16]);
  translate([184, 258, 0])
    cube([1, 1, 2.16]);
  translate([185, 258, 0])
    cube([1, 1, 2.16]);
  translate([186, 258, 0])
    cube([1, 1, 2.16]);
  translate([187, 258, 0])
    cube([1, 1, 2.12]);
  translate([188, 258, 0])
    cube([1, 1, 2.16]);
  translate([189, 258, 0])
    cube([1, 1, 2.16]);
  translate([190, 258, 0])
    cube([1, 1, 2.16]);
  translate([191, 258, 0])
    cube([1, 1, 2.16]);
  translate([192, 258, 0])
    cube([1, 1, 2.16]);
  translate([193, 258, 0])
    cube([1, 1, 2.16]);
  translate([194, 258, 0])
    cube([1, 1, 2.16]);
  translate([195, 258, 0])
    cube([1, 1, 2.16]);
  translate([196, 258, 0])
    cube([1, 1, 2.16]);
  translate([197, 258, 0])
    cube([1, 1, 2.16]);
  translate([198, 258, 0])
    cube([1, 1, 2.16]);
  translate([199, 258, 0])
    cube([1, 1, 2.16]);
  translate([200, 258, 0])
    cube([1, 1, 2.16]);
  translate([201, 258, 0])
    cube([1, 1, 2.16]);
  translate([202, 258, 0])
    cube([1, 1, 2.16]);
  translate([203, 258, 0])
    cube([1, 1, 2.16]);
  translate([204, 258, 0])
    cube([1, 1, 2.16]);
  translate([205, 258, 0])
    cube([1, 1, 2.16]);
  translate([206, 258, 0])
    cube([1, 1, 2.16]);
  translate([207, 258, 0])
    cube([1, 1, 2.16]);
  translate([208, 258, 0])
    cube([1, 1, 2.16]);
  translate([209, 258, 0])
    cube([1, 1, 2.16]);
  translate([210, 258, 0])
    cube([1, 1, 2.16]);
  translate([211, 258, 0])
    cube([1, 1, 2.16]);
  translate([212, 258, 0])
    cube([1, 1, 2.16]);
  translate([213, 258, 0])
    cube([1, 1, 2.16]);
  translate([214, 258, 0])
    cube([1, 1, 2.16]);
  translate([215, 258, 0])
    cube([1, 1, 2.16]);
  translate([216, 258, 0])
    cube([1, 1, 2.16]);
  translate([217, 258, 0])
    cube([1, 1, 2.16]);
  translate([218, 258, 0])
    cube([1, 1, 2.16]);
  translate([219, 258, 0])
    cube([1, 1, 2.16]);
  translate([220, 258, 0])
    cube([1, 1, 2.16]);
  translate([221, 258, 0])
    cube([1, 1, 2.16]);
  translate([222, 258, 0])
    cube([1, 1, 2.16]);
  translate([223, 258, 0])
    cube([1, 1, 2.16]);
  translate([224, 258, 0])
    cube([1, 1, 2.16]);
  translate([225, 258, 0])
    cube([1, 1, 2.16]);
  translate([226, 258, 0])
    cube([1, 1, 2.16]);
  translate([227, 258, 0])
    cube([1, 1, 2.16]);
  translate([228, 258, 0])
    cube([1, 1, 2.16]);
  translate([229, 258, 0])
    cube([1, 1, 2.16]);
  translate([230, 258, 0])
    cube([1, 1, 2.12]);
  translate([231, 258, 0])
    cube([1, 1, 2.12]);
  translate([232, 258, 0])
    cube([1, 1, 2.20]);
  translate([233, 258, 0])
    cube([1, 1, 2.16]);
  translate([234, 258, 0])
    cube([1, 1, 2.16]);
  translate([235, 258, 0])
    cube([1, 1, 2.12]);
  translate([236, 258, 0])
    cube([1, 1, 2.12]);
  translate([237, 258, 0])
    cube([1, 1, 2.12]);
  translate([238, 258, 0])
    cube([1, 1, 2.12]);
  translate([239, 258, 0])
    cube([1, 1, 2.08]);
  translate([240, 258, 0])
    cube([1, 1, 2.12]);
  translate([241, 258, 0])
    cube([1, 1, 2.16]);
  translate([242, 258, 0])
    cube([1, 1, 2.16]);
  translate([243, 258, 0])
    cube([1, 1, 2.16]);
  translate([244, 258, 0])
    cube([1, 1, 2.12]);
  translate([245, 258, 0])
    cube([1, 1, 2.12]);
  translate([246, 258, 0])
    cube([1, 1, 2.16]);
  translate([0, 259, 0])
    cube([1, 1, 2.39]);
  translate([1, 259, 0])
    cube([1, 1, 2.35]);
  translate([2, 259, 0])
    cube([1, 1, 2.35]);
  translate([3, 259, 0])
    cube([1, 1, 2.39]);
  translate([4, 259, 0])
    cube([1, 1, 2.35]);
  translate([5, 259, 0])
    cube([1, 1, 2.39]);
  translate([6, 259, 0])
    cube([1, 1, 2.39]);
  translate([7, 259, 0])
    cube([1, 1, 2.39]);
  translate([8, 259, 0])
    cube([1, 1, 2.39]);
  translate([9, 259, 0])
    cube([1, 1, 2.35]);
  translate([10, 259, 0])
    cube([1, 1, 2.35]);
  translate([11, 259, 0])
    cube([1, 1, 2.35]);
  translate([12, 259, 0])
    cube([1, 1, 2.39]);
  translate([13, 259, 0])
    cube([1, 1, 2.39]);
  translate([14, 259, 0])
    cube([1, 1, 2.39]);
  translate([15, 259, 0])
    cube([1, 1, 2.31]);
  translate([16, 259, 0])
    cube([1, 1, 2.35]);
  translate([17, 259, 0])
    cube([1, 1, 2.35]);
  translate([18, 259, 0])
    cube([1, 1, 2.35]);
  translate([19, 259, 0])
    cube([1, 1, 2.35]);
  translate([20, 259, 0])
    cube([1, 1, 2.35]);
  translate([21, 259, 0])
    cube([1, 1, 2.35]);
  translate([22, 259, 0])
    cube([1, 1, 2.31]);
  translate([23, 259, 0])
    cube([1, 1, 2.35]);
  translate([24, 259, 0])
    cube([1, 1, 2.39]);
  translate([25, 259, 0])
    cube([1, 1, 2.35]);
  translate([26, 259, 0])
    cube([1, 1, 2.35]);
  translate([27, 259, 0])
    cube([1, 1, 2.35]);
  translate([28, 259, 0])
    cube([1, 1, 2.31]);
  translate([29, 259, 0])
    cube([1, 1, 2.31]);
  translate([30, 259, 0])
    cube([1, 1, 2.35]);
  translate([31, 259, 0])
    cube([1, 1, 2.35]);
  translate([32, 259, 0])
    cube([1, 1, 2.31]);
  translate([33, 259, 0])
    cube([1, 1, 2.31]);
  translate([34, 259, 0])
    cube([1, 1, 2.31]);
  translate([35, 259, 0])
    cube([1, 1, 2.31]);
  translate([36, 259, 0])
    cube([1, 1, 2.31]);
  translate([37, 259, 0])
    cube([1, 1, 2.31]);
  translate([38, 259, 0])
    cube([1, 1, 2.31]);
  translate([39, 259, 0])
    cube([1, 1, 2.35]);
  translate([40, 259, 0])
    cube([1, 1, 2.27]);
  translate([41, 259, 0])
    cube([1, 1, 2.27]);
  translate([42, 259, 0])
    cube([1, 1, 2.31]);
  translate([43, 259, 0])
    cube([1, 1, 2.27]);
  translate([44, 259, 0])
    cube([1, 1, 2.27]);
  translate([45, 259, 0])
    cube([1, 1, 2.27]);
  translate([46, 259, 0])
    cube([1, 1, 2.27]);
  translate([47, 259, 0])
    cube([1, 1, 2.27]);
  translate([48, 259, 0])
    cube([1, 1, 2.27]);
  translate([49, 259, 0])
    cube([1, 1, 2.27]);
  translate([50, 259, 0])
    cube([1, 1, 2.27]);
  translate([51, 259, 0])
    cube([1, 1, 2.27]);
  translate([52, 259, 0])
    cube([1, 1, 2.24]);
  translate([53, 259, 0])
    cube([1, 1, 2.27]);
  translate([54, 259, 0])
    cube([1, 1, 2.27]);
  translate([55, 259, 0])
    cube([1, 1, 2.27]);
  translate([56, 259, 0])
    cube([1, 1, 2.35]);
  translate([57, 259, 0])
    cube([1, 1, 7.92]);
  translate([58, 259, 0])
    cube([1, 1, 8.31]);
  translate([59, 259, 0])
    cube([1, 1, 7.92]);
  translate([60, 259, 0])
    cube([1, 1, 7.22]);
  translate([61, 259, 0])
    cube([1, 1, 6.24]);
  translate([62, 259, 0])
    cube([1, 1, 4.90]);
  translate([63, 259, 0])
    cube([1, 1, 3.84]);
  translate([64, 259, 0])
    cube([1, 1, 2.86]);
  translate([65, 259, 0])
    cube([1, 1, 2.75]);
  translate([66, 259, 0])
    cube([1, 1, 2.82]);
  translate([67, 259, 0])
    cube([1, 1, 2.98]);
  translate([68, 259, 0])
    cube([1, 1, 3.02]);
  translate([69, 259, 0])
    cube([1, 1, 3.22]);
  translate([70, 259, 0])
    cube([1, 1, 3.37]);
  translate([71, 259, 0])
    cube([1, 1, 3.57]);
  translate([72, 259, 0])
    cube([1, 1, 3.73]);
  translate([73, 259, 0])
    cube([1, 1, 3.92]);
  translate([74, 259, 0])
    cube([1, 1, 4.20]);
  translate([75, 259, 0])
    cube([1, 1, 4.35]);
  translate([76, 259, 0])
    cube([1, 1, 4.43]);
  translate([77, 259, 0])
    cube([1, 1, 4.47]);
  translate([78, 259, 0])
    cube([1, 1, 4.55]);
  translate([79, 259, 0])
    cube([1, 1, 4.51]);
  translate([80, 259, 0])
    cube([1, 1, 4.47]);
  translate([81, 259, 0])
    cube([1, 1, 4.39]);
  translate([82, 259, 0])
    cube([1, 1, 4.59]);
  translate([83, 259, 0])
    cube([1, 1, 4.43]);
  translate([84, 259, 0])
    cube([1, 1, 4.39]);
  translate([85, 259, 0])
    cube([1, 1, 4.08]);
  translate([86, 259, 0])
    cube([1, 1, 3.84]);
  translate([87, 259, 0])
    cube([1, 1, 3.76]);
  translate([88, 259, 0])
    cube([1, 1, 3.53]);
  translate([89, 259, 0])
    cube([1, 1, 3.49]);
  translate([90, 259, 0])
    cube([1, 1, 3.45]);
  translate([91, 259, 0])
    cube([1, 1, 3.33]);
  translate([92, 259, 0])
    cube([1, 1, 3.37]);
  translate([93, 259, 0])
    cube([1, 1, 3.37]);
  translate([94, 259, 0])
    cube([1, 1, 3.45]);
  translate([95, 259, 0])
    cube([1, 1, 3.65]);
  translate([96, 259, 0])
    cube([1, 1, 3.76]);
  translate([97, 259, 0])
    cube([1, 1, 3.84]);
  translate([98, 259, 0])
    cube([1, 1, 3.96]);
  translate([99, 259, 0])
    cube([1, 1, 3.29]);
  translate([100, 259, 0])
    cube([1, 1, 2.20]);
  translate([101, 259, 0])
    cube([1, 1, 2.31]);
  translate([102, 259, 0])
    cube([1, 1, 2.20]);
  translate([103, 259, 0])
    cube([1, 1, 2.20]);
  translate([104, 259, 0])
    cube([1, 1, 2.20]);
  translate([105, 259, 0])
    cube([1, 1, 2.16]);
  translate([106, 259, 0])
    cube([1, 1, 2.16]);
  translate([107, 259, 0])
    cube([1, 1, 2.16]);
  translate([108, 259, 0])
    cube([1, 1, 2.16]);
  translate([109, 259, 0])
    cube([1, 1, 2.16]);
  translate([110, 259, 0])
    cube([1, 1, 2.16]);
  translate([111, 259, 0])
    cube([1, 1, 2.16]);
  translate([112, 259, 0])
    cube([1, 1, 2.16]);
  translate([113, 259, 0])
    cube([1, 1, 2.16]);
  translate([114, 259, 0])
    cube([1, 1, 2.16]);
  translate([115, 259, 0])
    cube([1, 1, 2.16]);
  translate([116, 259, 0])
    cube([1, 1, 2.16]);
  translate([117, 259, 0])
    cube([1, 1, 2.16]);
  translate([118, 259, 0])
    cube([1, 1, 2.16]);
  translate([119, 259, 0])
    cube([1, 1, 2.16]);
  translate([120, 259, 0])
    cube([1, 1, 2.12]);
  translate([121, 259, 0])
    cube([1, 1, 2.20]);
  translate([122, 259, 0])
    cube([1, 1, 2.16]);
  translate([123, 259, 0])
    cube([1, 1, 4.08]);
  translate([124, 259, 0])
    cube([1, 1, 5.29]);
  translate([125, 259, 0])
    cube([1, 1, 5.10]);
  translate([126, 259, 0])
    cube([1, 1, 5.10]);
  translate([127, 259, 0])
    cube([1, 1, 5.25]);
  translate([128, 259, 0])
    cube([1, 1, 4.98]);
  translate([129, 259, 0])
    cube([1, 1, 4.82]);
  translate([130, 259, 0])
    cube([1, 1, 4.67]);
  translate([131, 259, 0])
    cube([1, 1, 4.31]);
  translate([132, 259, 0])
    cube([1, 1, 4.20]);
  translate([133, 259, 0])
    cube([1, 1, 3.88]);
  translate([134, 259, 0])
    cube([1, 1, 3.45]);
  translate([135, 259, 0])
    cube([1, 1, 2.90]);
  translate([136, 259, 0])
    cube([1, 1, 2.75]);
  translate([137, 259, 0])
    cube([1, 1, 2.82]);
  translate([138, 259, 0])
    cube([1, 1, 2.94]);
  translate([139, 259, 0])
    cube([1, 1, 3.02]);
  translate([140, 259, 0])
    cube([1, 1, 3.18]);
  translate([141, 259, 0])
    cube([1, 1, 3.41]);
  translate([142, 259, 0])
    cube([1, 1, 3.41]);
  translate([143, 259, 0])
    cube([1, 1, 3.53]);
  translate([144, 259, 0])
    cube([1, 1, 3.57]);
  translate([145, 259, 0])
    cube([1, 1, 3.69]);
  translate([146, 259, 0])
    cube([1, 1, 3.88]);
  translate([147, 259, 0])
    cube([1, 1, 4.04]);
  translate([148, 259, 0])
    cube([1, 1, 4.16]);
  translate([149, 259, 0])
    cube([1, 1, 4.43]);
  translate([150, 259, 0])
    cube([1, 1, 4.55]);
  translate([151, 259, 0])
    cube([1, 1, 4.71]);
  translate([152, 259, 0])
    cube([1, 1, 4.75]);
  translate([153, 259, 0])
    cube([1, 1, 4.75]);
  translate([154, 259, 0])
    cube([1, 1, 4.75]);
  translate([155, 259, 0])
    cube([1, 1, 4.63]);
  translate([156, 259, 0])
    cube([1, 1, 4.31]);
  translate([157, 259, 0])
    cube([1, 1, 4.12]);
  translate([158, 259, 0])
    cube([1, 1, 4.20]);
  translate([159, 259, 0])
    cube([1, 1, 4.59]);
  translate([160, 259, 0])
    cube([1, 1, 4.98]);
  translate([161, 259, 0])
    cube([1, 1, 5.73]);
  translate([162, 259, 0])
    cube([1, 1, 6.16]);
  translate([163, 259, 0])
    cube([1, 1, 6.47]);
  translate([164, 259, 0])
    cube([1, 1, 6.20]);
  translate([165, 259, 0])
    cube([1, 1, 2.12]);
  translate([166, 259, 0])
    cube([1, 1, 2.12]);
  translate([167, 259, 0])
    cube([1, 1, 2.12]);
  translate([168, 259, 0])
    cube([1, 1, 2.12]);
  translate([169, 259, 0])
    cube([1, 1, 2.12]);
  translate([170, 259, 0])
    cube([1, 1, 2.12]);
  translate([171, 259, 0])
    cube([1, 1, 2.12]);
  translate([172, 259, 0])
    cube([1, 1, 2.12]);
  translate([173, 259, 0])
    cube([1, 1, 2.12]);
  translate([174, 259, 0])
    cube([1, 1, 2.12]);
  translate([175, 259, 0])
    cube([1, 1, 2.16]);
  translate([176, 259, 0])
    cube([1, 1, 2.16]);
  translate([177, 259, 0])
    cube([1, 1, 2.12]);
  translate([178, 259, 0])
    cube([1, 1, 2.16]);
  translate([179, 259, 0])
    cube([1, 1, 2.12]);
  translate([180, 259, 0])
    cube([1, 1, 2.16]);
  translate([181, 259, 0])
    cube([1, 1, 2.16]);
  translate([182, 259, 0])
    cube([1, 1, 2.16]);
  translate([183, 259, 0])
    cube([1, 1, 2.16]);
  translate([184, 259, 0])
    cube([1, 1, 2.16]);
  translate([185, 259, 0])
    cube([1, 1, 2.16]);
  translate([186, 259, 0])
    cube([1, 1, 2.16]);
  translate([187, 259, 0])
    cube([1, 1, 2.12]);
  translate([188, 259, 0])
    cube([1, 1, 2.16]);
  translate([189, 259, 0])
    cube([1, 1, 2.16]);
  translate([190, 259, 0])
    cube([1, 1, 2.16]);
  translate([191, 259, 0])
    cube([1, 1, 2.16]);
  translate([192, 259, 0])
    cube([1, 1, 2.16]);
  translate([193, 259, 0])
    cube([1, 1, 2.16]);
  translate([194, 259, 0])
    cube([1, 1, 2.16]);
  translate([195, 259, 0])
    cube([1, 1, 2.16]);
  translate([196, 259, 0])
    cube([1, 1, 2.16]);
  translate([197, 259, 0])
    cube([1, 1, 2.16]);
  translate([198, 259, 0])
    cube([1, 1, 2.16]);
  translate([199, 259, 0])
    cube([1, 1, 2.16]);
  translate([200, 259, 0])
    cube([1, 1, 2.16]);
  translate([201, 259, 0])
    cube([1, 1, 2.16]);
  translate([202, 259, 0])
    cube([1, 1, 2.16]);
  translate([203, 259, 0])
    cube([1, 1, 2.16]);
  translate([204, 259, 0])
    cube([1, 1, 2.16]);
  translate([205, 259, 0])
    cube([1, 1, 2.16]);
  translate([206, 259, 0])
    cube([1, 1, 2.16]);
  translate([207, 259, 0])
    cube([1, 1, 2.16]);
  translate([208, 259, 0])
    cube([1, 1, 2.16]);
  translate([209, 259, 0])
    cube([1, 1, 2.16]);
  translate([210, 259, 0])
    cube([1, 1, 2.16]);
  translate([211, 259, 0])
    cube([1, 1, 2.16]);
  translate([212, 259, 0])
    cube([1, 1, 2.16]);
  translate([213, 259, 0])
    cube([1, 1, 2.16]);
  translate([214, 259, 0])
    cube([1, 1, 2.16]);
  translate([215, 259, 0])
    cube([1, 1, 2.16]);
  translate([216, 259, 0])
    cube([1, 1, 2.16]);
  translate([217, 259, 0])
    cube([1, 1, 2.16]);
  translate([218, 259, 0])
    cube([1, 1, 2.16]);
  translate([219, 259, 0])
    cube([1, 1, 2.16]);
  translate([220, 259, 0])
    cube([1, 1, 2.16]);
  translate([221, 259, 0])
    cube([1, 1, 2.16]);
  translate([222, 259, 0])
    cube([1, 1, 2.16]);
  translate([223, 259, 0])
    cube([1, 1, 2.16]);
  translate([224, 259, 0])
    cube([1, 1, 2.16]);
  translate([225, 259, 0])
    cube([1, 1, 2.16]);
  translate([226, 259, 0])
    cube([1, 1, 2.16]);
  translate([227, 259, 0])
    cube([1, 1, 2.16]);
  translate([228, 259, 0])
    cube([1, 1, 2.16]);
  translate([229, 259, 0])
    cube([1, 1, 2.16]);
  translate([230, 259, 0])
    cube([1, 1, 2.16]);
  translate([231, 259, 0])
    cube([1, 1, 2.16]);
  translate([232, 259, 0])
    cube([1, 1, 2.12]);
  translate([233, 259, 0])
    cube([1, 1, 2.12]);
  translate([234, 259, 0])
    cube([1, 1, 2.12]);
  translate([235, 259, 0])
    cube([1, 1, 2.16]);
  translate([236, 259, 0])
    cube([1, 1, 2.16]);
  translate([237, 259, 0])
    cube([1, 1, 2.16]);
  translate([238, 259, 0])
    cube([1, 1, 2.20]);
  translate([239, 259, 0])
    cube([1, 1, 2.16]);
  translate([240, 259, 0])
    cube([1, 1, 2.16]);
  translate([241, 259, 0])
    cube([1, 1, 2.12]);
  translate([242, 259, 0])
    cube([1, 1, 2.12]);
  translate([243, 259, 0])
    cube([1, 1, 2.16]);
  translate([244, 259, 0])
    cube([1, 1, 2.16]);
  translate([245, 259, 0])
    cube([1, 1, 2.16]);
  translate([246, 259, 0])
    cube([1, 1, 2.16]);
  translate([0, 260, 0])
    cube([1, 1, 2.39]);
  translate([1, 260, 0])
    cube([1, 1, 2.39]);
  translate([2, 260, 0])
    cube([1, 1, 2.39]);
  translate([3, 260, 0])
    cube([1, 1, 2.39]);
  translate([4, 260, 0])
    cube([1, 1, 2.39]);
  translate([5, 260, 0])
    cube([1, 1, 2.39]);
  translate([6, 260, 0])
    cube([1, 1, 2.39]);
  translate([7, 260, 0])
    cube([1, 1, 2.39]);
  translate([8, 260, 0])
    cube([1, 1, 2.39]);
  translate([9, 260, 0])
    cube([1, 1, 2.35]);
  translate([10, 260, 0])
    cube([1, 1, 2.35]);
  translate([11, 260, 0])
    cube([1, 1, 2.35]);
  translate([12, 260, 0])
    cube([1, 1, 2.39]);
  translate([13, 260, 0])
    cube([1, 1, 2.39]);
  translate([14, 260, 0])
    cube([1, 1, 2.39]);
  translate([15, 260, 0])
    cube([1, 1, 2.35]);
  translate([16, 260, 0])
    cube([1, 1, 2.35]);
  translate([17, 260, 0])
    cube([1, 1, 2.35]);
  translate([18, 260, 0])
    cube([1, 1, 2.35]);
  translate([19, 260, 0])
    cube([1, 1, 2.35]);
  translate([20, 260, 0])
    cube([1, 1, 2.35]);
  translate([21, 260, 0])
    cube([1, 1, 2.35]);
  translate([22, 260, 0])
    cube([1, 1, 2.35]);
  translate([23, 260, 0])
    cube([1, 1, 2.35]);
  translate([24, 260, 0])
    cube([1, 1, 2.35]);
  translate([25, 260, 0])
    cube([1, 1, 2.35]);
  translate([26, 260, 0])
    cube([1, 1, 2.35]);
  translate([27, 260, 0])
    cube([1, 1, 2.35]);
  translate([28, 260, 0])
    cube([1, 1, 2.35]);
  translate([29, 260, 0])
    cube([1, 1, 2.35]);
  translate([30, 260, 0])
    cube([1, 1, 2.35]);
  translate([31, 260, 0])
    cube([1, 1, 2.35]);
  translate([32, 260, 0])
    cube([1, 1, 2.35]);
  translate([33, 260, 0])
    cube([1, 1, 2.31]);
  translate([34, 260, 0])
    cube([1, 1, 2.31]);
  translate([35, 260, 0])
    cube([1, 1, 2.31]);
  translate([36, 260, 0])
    cube([1, 1, 2.31]);
  translate([37, 260, 0])
    cube([1, 1, 2.31]);
  translate([38, 260, 0])
    cube([1, 1, 2.31]);
  translate([39, 260, 0])
    cube([1, 1, 2.31]);
  translate([40, 260, 0])
    cube([1, 1, 2.27]);
  translate([41, 260, 0])
    cube([1, 1, 2.27]);
  translate([42, 260, 0])
    cube([1, 1, 2.27]);
  translate([43, 260, 0])
    cube([1, 1, 2.31]);
  translate([44, 260, 0])
    cube([1, 1, 2.31]);
  translate([45, 260, 0])
    cube([1, 1, 2.31]);
  translate([46, 260, 0])
    cube([1, 1, 2.27]);
  translate([47, 260, 0])
    cube([1, 1, 2.27]);
  translate([48, 260, 0])
    cube([1, 1, 2.27]);
  translate([49, 260, 0])
    cube([1, 1, 2.27]);
  translate([50, 260, 0])
    cube([1, 1, 2.27]);
  translate([51, 260, 0])
    cube([1, 1, 2.27]);
  translate([52, 260, 0])
    cube([1, 1, 2.24]);
  translate([53, 260, 0])
    cube([1, 1, 2.27]);
  translate([54, 260, 0])
    cube([1, 1, 2.27]);
  translate([55, 260, 0])
    cube([1, 1, 2.27]);
  translate([56, 260, 0])
    cube([1, 1, 2.27]);
  translate([57, 260, 0])
    cube([1, 1, 7.92]);
  translate([58, 260, 0])
    cube([1, 1, 8.24]);
  translate([59, 260, 0])
    cube([1, 1, 7.84]);
  translate([60, 260, 0])
    cube([1, 1, 7.14]);
  translate([61, 260, 0])
    cube([1, 1, 6.16]);
  translate([62, 260, 0])
    cube([1, 1, 4.90]);
  translate([63, 260, 0])
    cube([1, 1, 3.76]);
  translate([64, 260, 0])
    cube([1, 1, 2.86]);
  translate([65, 260, 0])
    cube([1, 1, 2.75]);
  translate([66, 260, 0])
    cube([1, 1, 2.90]);
  translate([67, 260, 0])
    cube([1, 1, 3.06]);
  translate([68, 260, 0])
    cube([1, 1, 3.10]);
  translate([69, 260, 0])
    cube([1, 1, 3.18]);
  translate([70, 260, 0])
    cube([1, 1, 3.53]);
  translate([71, 260, 0])
    cube([1, 1, 3.65]);
  translate([72, 260, 0])
    cube([1, 1, 3.80]);
  translate([73, 260, 0])
    cube([1, 1, 3.92]);
  translate([74, 260, 0])
    cube([1, 1, 4.24]);
  translate([75, 260, 0])
    cube([1, 1, 4.55]);
  translate([76, 260, 0])
    cube([1, 1, 4.59]);
  translate([77, 260, 0])
    cube([1, 1, 4.78]);
  translate([78, 260, 0])
    cube([1, 1, 4.67]);
  translate([79, 260, 0])
    cube([1, 1, 4.47]);
  translate([80, 260, 0])
    cube([1, 1, 4.59]);
  translate([81, 260, 0])
    cube([1, 1, 4.51]);
  translate([82, 260, 0])
    cube([1, 1, 4.63]);
  translate([83, 260, 0])
    cube([1, 1, 4.43]);
  translate([84, 260, 0])
    cube([1, 1, 4.31]);
  translate([85, 260, 0])
    cube([1, 1, 4.00]);
  translate([86, 260, 0])
    cube([1, 1, 3.80]);
  translate([87, 260, 0])
    cube([1, 1, 3.69]);
  translate([88, 260, 0])
    cube([1, 1, 3.61]);
  translate([89, 260, 0])
    cube([1, 1, 3.53]);
  translate([90, 260, 0])
    cube([1, 1, 3.33]);
  translate([91, 260, 0])
    cube([1, 1, 3.41]);
  translate([92, 260, 0])
    cube([1, 1, 3.33]);
  translate([93, 260, 0])
    cube([1, 1, 3.45]);
  translate([94, 260, 0])
    cube([1, 1, 3.45]);
  translate([95, 260, 0])
    cube([1, 1, 3.73]);
  translate([96, 260, 0])
    cube([1, 1, 3.88]);
  translate([97, 260, 0])
    cube([1, 1, 3.92]);
  translate([98, 260, 0])
    cube([1, 1, 4.27]);
  translate([99, 260, 0])
    cube([1, 1, 2.20]);
  translate([100, 260, 0])
    cube([1, 1, 2.16]);
  translate([101, 260, 0])
    cube([1, 1, 2.20]);
  translate([102, 260, 0])
    cube([1, 1, 2.20]);
  translate([103, 260, 0])
    cube([1, 1, 2.20]);
  translate([104, 260, 0])
    cube([1, 1, 2.20]);
  translate([105, 260, 0])
    cube([1, 1, 2.20]);
  translate([106, 260, 0])
    cube([1, 1, 2.16]);
  translate([107, 260, 0])
    cube([1, 1, 2.20]);
  translate([108, 260, 0])
    cube([1, 1, 2.20]);
  translate([109, 260, 0])
    cube([1, 1, 2.20]);
  translate([110, 260, 0])
    cube([1, 1, 2.20]);
  translate([111, 260, 0])
    cube([1, 1, 2.16]);
  translate([112, 260, 0])
    cube([1, 1, 2.16]);
  translate([113, 260, 0])
    cube([1, 1, 2.16]);
  translate([114, 260, 0])
    cube([1, 1, 2.16]);
  translate([115, 260, 0])
    cube([1, 1, 2.16]);
  translate([116, 260, 0])
    cube([1, 1, 2.16]);
  translate([117, 260, 0])
    cube([1, 1, 2.16]);
  translate([118, 260, 0])
    cube([1, 1, 2.16]);
  translate([119, 260, 0])
    cube([1, 1, 2.16]);
  translate([120, 260, 0])
    cube([1, 1, 2.16]);
  translate([121, 260, 0])
    cube([1, 1, 2.16]);
  translate([122, 260, 0])
    cube([1, 1, 2.16]);
  translate([123, 260, 0])
    cube([1, 1, 1.88]);
  translate([124, 260, 0])
    cube([1, 1, 5.41]);
  translate([125, 260, 0])
    cube([1, 1, 5.29]);
  translate([126, 260, 0])
    cube([1, 1, 5.22]);
  translate([127, 260, 0])
    cube([1, 1, 5.37]);
  translate([128, 260, 0])
    cube([1, 1, 5.25]);
  translate([129, 260, 0])
    cube([1, 1, 4.98]);
  translate([130, 260, 0])
    cube([1, 1, 4.67]);
  translate([131, 260, 0])
    cube([1, 1, 4.47]);
  translate([132, 260, 0])
    cube([1, 1, 4.27]);
  translate([133, 260, 0])
    cube([1, 1, 4.35]);
  translate([134, 260, 0])
    cube([1, 1, 3.88]);
  translate([135, 260, 0])
    cube([1, 1, 3.14]);
  translate([136, 260, 0])
    cube([1, 1, 2.75]);
  translate([137, 260, 0])
    cube([1, 1, 2.86]);
  translate([138, 260, 0])
    cube([1, 1, 2.98]);
  translate([139, 260, 0])
    cube([1, 1, 3.10]);
  translate([140, 260, 0])
    cube([1, 1, 3.22]);
  translate([141, 260, 0])
    cube([1, 1, 3.45]);
  translate([142, 260, 0])
    cube([1, 1, 3.49]);
  translate([143, 260, 0])
    cube([1, 1, 3.53]);
  translate([144, 260, 0])
    cube([1, 1, 3.65]);
  translate([145, 260, 0])
    cube([1, 1, 3.61]);
  translate([146, 260, 0])
    cube([1, 1, 3.80]);
  translate([147, 260, 0])
    cube([1, 1, 4.00]);
  translate([148, 260, 0])
    cube([1, 1, 4.04]);
  translate([149, 260, 0])
    cube([1, 1, 4.35]);
  translate([150, 260, 0])
    cube([1, 1, 4.51]);
  translate([151, 260, 0])
    cube([1, 1, 4.63]);
  translate([152, 260, 0])
    cube([1, 1, 4.67]);
  translate([153, 260, 0])
    cube([1, 1, 4.71]);
  translate([154, 260, 0])
    cube([1, 1, 4.71]);
  translate([155, 260, 0])
    cube([1, 1, 4.59]);
  translate([156, 260, 0])
    cube([1, 1, 4.35]);
  translate([157, 260, 0])
    cube([1, 1, 4.20]);
  translate([158, 260, 0])
    cube([1, 1, 4.31]);
  translate([159, 260, 0])
    cube([1, 1, 4.35]);
  translate([160, 260, 0])
    cube([1, 1, 5.18]);
  translate([161, 260, 0])
    cube([1, 1, 5.80]);
  translate([162, 260, 0])
    cube([1, 1, 6.24]);
  translate([163, 260, 0])
    cube([1, 1, 6.35]);
  translate([164, 260, 0])
    cube([1, 1, 3.92]);
  translate([165, 260, 0])
    cube([1, 1, 2.16]);
  translate([166, 260, 0])
    cube([1, 1, 2.12]);
  translate([167, 260, 0])
    cube([1, 1, 2.12]);
  translate([168, 260, 0])
    cube([1, 1, 2.12]);
  translate([169, 260, 0])
    cube([1, 1, 2.12]);
  translate([170, 260, 0])
    cube([1, 1, 2.12]);
  translate([171, 260, 0])
    cube([1, 1, 2.12]);
  translate([172, 260, 0])
    cube([1, 1, 2.12]);
  translate([173, 260, 0])
    cube([1, 1, 2.12]);
  translate([174, 260, 0])
    cube([1, 1, 2.20]);
  translate([175, 260, 0])
    cube([1, 1, 2.12]);
  translate([176, 260, 0])
    cube([1, 1, 2.16]);
  translate([177, 260, 0])
    cube([1, 1, 2.12]);
  translate([178, 260, 0])
    cube([1, 1, 2.16]);
  translate([179, 260, 0])
    cube([1, 1, 2.16]);
  translate([180, 260, 0])
    cube([1, 1, 2.16]);
  translate([181, 260, 0])
    cube([1, 1, 2.16]);
  translate([182, 260, 0])
    cube([1, 1, 2.16]);
  translate([183, 260, 0])
    cube([1, 1, 2.16]);
  translate([184, 260, 0])
    cube([1, 1, 2.16]);
  translate([185, 260, 0])
    cube([1, 1, 2.16]);
  translate([186, 260, 0])
    cube([1, 1, 2.16]);
  translate([187, 260, 0])
    cube([1, 1, 2.16]);
  translate([188, 260, 0])
    cube([1, 1, 2.20]);
  translate([189, 260, 0])
    cube([1, 1, 2.16]);
  translate([190, 260, 0])
    cube([1, 1, 2.16]);
  translate([191, 260, 0])
    cube([1, 1, 2.16]);
  translate([192, 260, 0])
    cube([1, 1, 2.16]);
  translate([193, 260, 0])
    cube([1, 1, 2.16]);
  translate([194, 260, 0])
    cube([1, 1, 2.16]);
  translate([195, 260, 0])
    cube([1, 1, 2.16]);
  translate([196, 260, 0])
    cube([1, 1, 2.16]);
  translate([197, 260, 0])
    cube([1, 1, 2.16]);
  translate([198, 260, 0])
    cube([1, 1, 2.16]);
  translate([199, 260, 0])
    cube([1, 1, 2.16]);
  translate([200, 260, 0])
    cube([1, 1, 2.16]);
  translate([201, 260, 0])
    cube([1, 1, 2.16]);
  translate([202, 260, 0])
    cube([1, 1, 2.16]);
  translate([203, 260, 0])
    cube([1, 1, 2.16]);
  translate([204, 260, 0])
    cube([1, 1, 2.16]);
  translate([205, 260, 0])
    cube([1, 1, 2.16]);
  translate([206, 260, 0])
    cube([1, 1, 2.16]);
  translate([207, 260, 0])
    cube([1, 1, 2.16]);
  translate([208, 260, 0])
    cube([1, 1, 2.16]);
  translate([209, 260, 0])
    cube([1, 1, 2.16]);
  translate([210, 260, 0])
    cube([1, 1, 2.16]);
  translate([211, 260, 0])
    cube([1, 1, 2.16]);
  translate([212, 260, 0])
    cube([1, 1, 2.16]);
  translate([213, 260, 0])
    cube([1, 1, 2.16]);
  translate([214, 260, 0])
    cube([1, 1, 2.16]);
  translate([215, 260, 0])
    cube([1, 1, 2.16]);
  translate([216, 260, 0])
    cube([1, 1, 2.16]);
  translate([217, 260, 0])
    cube([1, 1, 2.16]);
  translate([218, 260, 0])
    cube([1, 1, 2.16]);
  translate([219, 260, 0])
    cube([1, 1, 2.20]);
  translate([220, 260, 0])
    cube([1, 1, 2.16]);
  translate([221, 260, 0])
    cube([1, 1, 2.16]);
  translate([222, 260, 0])
    cube([1, 1, 2.16]);
  translate([223, 260, 0])
    cube([1, 1, 2.16]);
  translate([224, 260, 0])
    cube([1, 1, 2.16]);
  translate([225, 260, 0])
    cube([1, 1, 2.16]);
  translate([226, 260, 0])
    cube([1, 1, 2.16]);
  translate([227, 260, 0])
    cube([1, 1, 2.16]);
  translate([228, 260, 0])
    cube([1, 1, 2.16]);
  translate([229, 260, 0])
    cube([1, 1, 2.16]);
  translate([230, 260, 0])
    cube([1, 1, 2.16]);
  translate([231, 260, 0])
    cube([1, 1, 2.16]);
  translate([232, 260, 0])
    cube([1, 1, 2.16]);
  translate([233, 260, 0])
    cube([1, 1, 2.16]);
  translate([234, 260, 0])
    cube([1, 1, 2.16]);
  translate([235, 260, 0])
    cube([1, 1, 2.16]);
  translate([236, 260, 0])
    cube([1, 1, 2.16]);
  translate([237, 260, 0])
    cube([1, 1, 2.16]);
  translate([238, 260, 0])
    cube([1, 1, 2.16]);
  translate([239, 260, 0])
    cube([1, 1, 2.16]);
  translate([240, 260, 0])
    cube([1, 1, 2.16]);
  translate([241, 260, 0])
    cube([1, 1, 2.16]);
  translate([242, 260, 0])
    cube([1, 1, 2.16]);
  translate([243, 260, 0])
    cube([1, 1, 2.16]);
  translate([244, 260, 0])
    cube([1, 1, 2.16]);
  translate([245, 260, 0])
    cube([1, 1, 2.16]);
  translate([246, 260, 0])
    cube([1, 1, 2.16]);
  translate([0, 261, 0])
    cube([1, 1, 2.39]);
  translate([1, 261, 0])
    cube([1, 1, 2.39]);
  translate([2, 261, 0])
    cube([1, 1, 2.39]);
  translate([3, 261, 0])
    cube([1, 1, 2.39]);
  translate([4, 261, 0])
    cube([1, 1, 2.39]);
  translate([5, 261, 0])
    cube([1, 1, 2.39]);
  translate([6, 261, 0])
    cube([1, 1, 2.39]);
  translate([7, 261, 0])
    cube([1, 1, 2.39]);
  translate([8, 261, 0])
    cube([1, 1, 2.39]);
  translate([9, 261, 0])
    cube([1, 1, 2.39]);
  translate([10, 261, 0])
    cube([1, 1, 2.39]);
  translate([11, 261, 0])
    cube([1, 1, 2.39]);
  translate([12, 261, 0])
    cube([1, 1, 2.39]);
  translate([13, 261, 0])
    cube([1, 1, 2.39]);
  translate([14, 261, 0])
    cube([1, 1, 2.35]);
  translate([15, 261, 0])
    cube([1, 1, 2.35]);
  translate([16, 261, 0])
    cube([1, 1, 2.35]);
  translate([17, 261, 0])
    cube([1, 1, 2.35]);
  translate([18, 261, 0])
    cube([1, 1, 2.35]);
  translate([19, 261, 0])
    cube([1, 1, 2.35]);
  translate([20, 261, 0])
    cube([1, 1, 2.35]);
  translate([21, 261, 0])
    cube([1, 1, 2.35]);
  translate([22, 261, 0])
    cube([1, 1, 2.35]);
  translate([23, 261, 0])
    cube([1, 1, 2.35]);
  translate([24, 261, 0])
    cube([1, 1, 2.35]);
  translate([25, 261, 0])
    cube([1, 1, 2.35]);
  translate([26, 261, 0])
    cube([1, 1, 2.35]);
  translate([27, 261, 0])
    cube([1, 1, 2.35]);
  translate([28, 261, 0])
    cube([1, 1, 2.39]);
  translate([29, 261, 0])
    cube([1, 1, 2.39]);
  translate([30, 261, 0])
    cube([1, 1, 2.35]);
  translate([31, 261, 0])
    cube([1, 1, 2.35]);
  translate([32, 261, 0])
    cube([1, 1, 2.35]);
  translate([33, 261, 0])
    cube([1, 1, 2.31]);
  translate([34, 261, 0])
    cube([1, 1, 2.31]);
  translate([35, 261, 0])
    cube([1, 1, 2.31]);
  translate([36, 261, 0])
    cube([1, 1, 2.31]);
  translate([37, 261, 0])
    cube([1, 1, 2.31]);
  translate([38, 261, 0])
    cube([1, 1, 2.31]);
  translate([39, 261, 0])
    cube([1, 1, 2.31]);
  translate([40, 261, 0])
    cube([1, 1, 2.31]);
  translate([41, 261, 0])
    cube([1, 1, 2.31]);
  translate([42, 261, 0])
    cube([1, 1, 2.31]);
  translate([43, 261, 0])
    cube([1, 1, 2.31]);
  translate([44, 261, 0])
    cube([1, 1, 2.31]);
  translate([45, 261, 0])
    cube([1, 1, 2.31]);
  translate([46, 261, 0])
    cube([1, 1, 2.27]);
  translate([47, 261, 0])
    cube([1, 1, 2.27]);
  translate([48, 261, 0])
    cube([1, 1, 2.27]);
  translate([49, 261, 0])
    cube([1, 1, 2.27]);
  translate([50, 261, 0])
    cube([1, 1, 2.27]);
  translate([51, 261, 0])
    cube([1, 1, 2.27]);
  translate([52, 261, 0])
    cube([1, 1, 2.27]);
  translate([53, 261, 0])
    cube([1, 1, 2.27]);
  translate([54, 261, 0])
    cube([1, 1, 2.27]);
  translate([55, 261, 0])
    cube([1, 1, 2.27]);
  translate([56, 261, 0])
    cube([1, 1, 3.69]);
  translate([57, 261, 0])
    cube([1, 1, 7.88]);
  translate([58, 261, 0])
    cube([1, 1, 8.20]);
  translate([59, 261, 0])
    cube([1, 1, 7.76]);
  translate([60, 261, 0])
    cube([1, 1, 7.02]);
  translate([61, 261, 0])
    cube([1, 1, 6.16]);
  translate([62, 261, 0])
    cube([1, 1, 4.90]);
  translate([63, 261, 0])
    cube([1, 1, 3.61]);
  translate([64, 261, 0])
    cube([1, 1, 2.82]);
  translate([65, 261, 0])
    cube([1, 1, 2.78]);
  translate([66, 261, 0])
    cube([1, 1, 2.94]);
  translate([67, 261, 0])
    cube([1, 1, 3.02]);
  translate([68, 261, 0])
    cube([1, 1, 3.18]);
  translate([69, 261, 0])
    cube([1, 1, 3.29]);
  translate([70, 261, 0])
    cube([1, 1, 3.37]);
  translate([71, 261, 0])
    cube([1, 1, 3.69]);
  translate([72, 261, 0])
    cube([1, 1, 3.84]);
  translate([73, 261, 0])
    cube([1, 1, 3.96]);
  translate([74, 261, 0])
    cube([1, 1, 4.35]);
  translate([75, 261, 0])
    cube([1, 1, 4.55]);
  translate([76, 261, 0])
    cube([1, 1, 4.67]);
  translate([77, 261, 0])
    cube([1, 1, 4.75]);
  translate([78, 261, 0])
    cube([1, 1, 4.63]);
  translate([79, 261, 0])
    cube([1, 1, 4.51]);
  translate([80, 261, 0])
    cube([1, 1, 4.55]);
  translate([81, 261, 0])
    cube([1, 1, 4.51]);
  translate([82, 261, 0])
    cube([1, 1, 4.59]);
  translate([83, 261, 0])
    cube([1, 1, 4.43]);
  translate([84, 261, 0])
    cube([1, 1, 4.20]);
  translate([85, 261, 0])
    cube([1, 1, 3.96]);
  translate([86, 261, 0])
    cube([1, 1, 3.84]);
  translate([87, 261, 0])
    cube([1, 1, 3.80]);
  translate([88, 261, 0])
    cube([1, 1, 3.61]);
  translate([89, 261, 0])
    cube([1, 1, 3.65]);
  translate([90, 261, 0])
    cube([1, 1, 3.57]);
  translate([91, 261, 0])
    cube([1, 1, 3.49]);
  translate([92, 261, 0])
    cube([1, 1, 3.45]);
  translate([93, 261, 0])
    cube([1, 1, 3.45]);
  translate([94, 261, 0])
    cube([1, 1, 3.53]);
  translate([95, 261, 0])
    cube([1, 1, 3.69]);
  translate([96, 261, 0])
    cube([1, 1, 3.92]);
  translate([97, 261, 0])
    cube([1, 1, 4.31]);
  translate([98, 261, 0])
    cube([1, 1, 4.78]);
  translate([99, 261, 0])
    cube([1, 1, 2.20]);
  translate([100, 261, 0])
    cube([1, 1, 2.20]);
  translate([101, 261, 0])
    cube([1, 1, 2.24]);
  translate([102, 261, 0])
    cube([1, 1, 2.20]);
  translate([103, 261, 0])
    cube([1, 1, 2.20]);
  translate([104, 261, 0])
    cube([1, 1, 2.24]);
  translate([105, 261, 0])
    cube([1, 1, 2.20]);
  translate([106, 261, 0])
    cube([1, 1, 2.20]);
  translate([107, 261, 0])
    cube([1, 1, 2.20]);
  translate([108, 261, 0])
    cube([1, 1, 2.20]);
  translate([109, 261, 0])
    cube([1, 1, 2.20]);
  translate([110, 261, 0])
    cube([1, 1, 2.20]);
  translate([111, 261, 0])
    cube([1, 1, 2.16]);
  translate([112, 261, 0])
    cube([1, 1, 2.16]);
  translate([113, 261, 0])
    cube([1, 1, 2.16]);
  translate([114, 261, 0])
    cube([1, 1, 2.16]);
  translate([115, 261, 0])
    cube([1, 1, 2.16]);
  translate([116, 261, 0])
    cube([1, 1, 2.16]);
  translate([117, 261, 0])
    cube([1, 1, 2.16]);
  translate([118, 261, 0])
    cube([1, 1, 2.16]);
  translate([119, 261, 0])
    cube([1, 1, 2.16]);
  translate([120, 261, 0])
    cube([1, 1, 2.16]);
  translate([121, 261, 0])
    cube([1, 1, 2.16]);
  translate([122, 261, 0])
    cube([1, 1, 2.16]);
  translate([123, 261, 0])
    cube([1, 1, 2.43]);
  translate([124, 261, 0])
    cube([1, 1, 4.39]);
  translate([125, 261, 0])
    cube([1, 1, 5.49]);
  translate([126, 261, 0])
    cube([1, 1, 5.25]);
  translate([127, 261, 0])
    cube([1, 1, 5.41]);
  translate([128, 261, 0])
    cube([1, 1, 5.41]);
  translate([129, 261, 0])
    cube([1, 1, 5.37]);
  translate([130, 261, 0])
    cube([1, 1, 4.90]);
  translate([131, 261, 0])
    cube([1, 1, 4.51]);
  translate([132, 261, 0])
    cube([1, 1, 4.63]);
  translate([133, 261, 0])
    cube([1, 1, 4.51]);
  translate([134, 261, 0])
    cube([1, 1, 4.16]);
  translate([135, 261, 0])
    cube([1, 1, 3.49]);
  translate([136, 261, 0])
    cube([1, 1, 2.82]);
  translate([137, 261, 0])
    cube([1, 1, 2.82]);
  translate([138, 261, 0])
    cube([1, 1, 2.98]);
  translate([139, 261, 0])
    cube([1, 1, 3.14]);
  translate([140, 261, 0])
    cube([1, 1, 3.25]);
  translate([141, 261, 0])
    cube([1, 1, 3.57]);
  translate([142, 261, 0])
    cube([1, 1, 3.69]);
  translate([143, 261, 0])
    cube([1, 1, 3.73]);
  translate([144, 261, 0])
    cube([1, 1, 3.69]);
  translate([145, 261, 0])
    cube([1, 1, 3.65]);
  translate([146, 261, 0])
    cube([1, 1, 3.76]);
  translate([147, 261, 0])
    cube([1, 1, 3.96]);
  translate([148, 261, 0])
    cube([1, 1, 4.12]);
  translate([149, 261, 0])
    cube([1, 1, 4.27]);
  translate([150, 261, 0])
    cube([1, 1, 4.47]);
  translate([151, 261, 0])
    cube([1, 1, 4.51]);
  translate([152, 261, 0])
    cube([1, 1, 4.59]);
  translate([153, 261, 0])
    cube([1, 1, 4.63]);
  translate([154, 261, 0])
    cube([1, 1, 4.63]);
  translate([155, 261, 0])
    cube([1, 1, 4.51]);
  translate([156, 261, 0])
    cube([1, 1, 4.24]);
  translate([157, 261, 0])
    cube([1, 1, 4.24]);
  translate([158, 261, 0])
    cube([1, 1, 4.08]);
  translate([159, 261, 0])
    cube([1, 1, 4.39]);
  translate([160, 261, 0])
    cube([1, 1, 5.33]);
  translate([161, 261, 0])
    cube([1, 1, 5.73]);
  translate([162, 261, 0])
    cube([1, 1, 6.24]);
  translate([163, 261, 0])
    cube([1, 1, 6.43]);
  translate([164, 261, 0])
    cube([1, 1, 2.47]);
  translate([165, 261, 0])
    cube([1, 1, 1.96]);
  translate([166, 261, 0])
    cube([1, 1, 2.12]);
  translate([167, 261, 0])
    cube([1, 1, 2.16]);
  translate([168, 261, 0])
    cube([1, 1, 2.12]);
  translate([169, 261, 0])
    cube([1, 1, 2.12]);
  translate([170, 261, 0])
    cube([1, 1, 2.16]);
  translate([171, 261, 0])
    cube([1, 1, 2.12]);
  translate([172, 261, 0])
    cube([1, 1, 2.16]);
  translate([173, 261, 0])
    cube([1, 1, 2.16]);
  translate([174, 261, 0])
    cube([1, 1, 2.12]);
  translate([175, 261, 0])
    cube([1, 1, 2.16]);
  translate([176, 261, 0])
    cube([1, 1, 2.08]);
  translate([177, 261, 0])
    cube([1, 1, 2.16]);
  translate([178, 261, 0])
    cube([1, 1, 2.16]);
  translate([179, 261, 0])
    cube([1, 1, 2.16]);
  translate([180, 261, 0])
    cube([1, 1, 2.16]);
  translate([181, 261, 0])
    cube([1, 1, 2.16]);
  translate([182, 261, 0])
    cube([1, 1, 2.16]);
  translate([183, 261, 0])
    cube([1, 1, 2.16]);
  translate([184, 261, 0])
    cube([1, 1, 2.16]);
  translate([185, 261, 0])
    cube([1, 1, 2.16]);
  translate([186, 261, 0])
    cube([1, 1, 2.16]);
  translate([187, 261, 0])
    cube([1, 1, 2.16]);
  translate([188, 261, 0])
    cube([1, 1, 2.16]);
  translate([189, 261, 0])
    cube([1, 1, 2.16]);
  translate([190, 261, 0])
    cube([1, 1, 2.16]);
  translate([191, 261, 0])
    cube([1, 1, 2.16]);
  translate([192, 261, 0])
    cube([1, 1, 2.16]);
  translate([193, 261, 0])
    cube([1, 1, 2.16]);
  translate([194, 261, 0])
    cube([1, 1, 2.16]);
  translate([195, 261, 0])
    cube([1, 1, 2.16]);
  translate([196, 261, 0])
    cube([1, 1, 2.16]);
  translate([197, 261, 0])
    cube([1, 1, 2.16]);
  translate([198, 261, 0])
    cube([1, 1, 2.16]);
  translate([199, 261, 0])
    cube([1, 1, 2.16]);
  translate([200, 261, 0])
    cube([1, 1, 2.16]);
  translate([201, 261, 0])
    cube([1, 1, 2.16]);
  translate([202, 261, 0])
    cube([1, 1, 2.16]);
  translate([203, 261, 0])
    cube([1, 1, 2.16]);
  translate([204, 261, 0])
    cube([1, 1, 2.16]);
  translate([205, 261, 0])
    cube([1, 1, 2.16]);
  translate([206, 261, 0])
    cube([1, 1, 2.16]);
  translate([207, 261, 0])
    cube([1, 1, 2.16]);
  translate([208, 261, 0])
    cube([1, 1, 2.16]);
  translate([209, 261, 0])
    cube([1, 1, 2.16]);
  translate([210, 261, 0])
    cube([1, 1, 2.16]);
  translate([211, 261, 0])
    cube([1, 1, 2.16]);
  translate([212, 261, 0])
    cube([1, 1, 2.16]);
  translate([213, 261, 0])
    cube([1, 1, 2.16]);
  translate([214, 261, 0])
    cube([1, 1, 2.20]);
  translate([215, 261, 0])
    cube([1, 1, 2.16]);
  translate([216, 261, 0])
    cube([1, 1, 2.16]);
  translate([217, 261, 0])
    cube([1, 1, 2.16]);
  translate([218, 261, 0])
    cube([1, 1, 2.16]);
  translate([219, 261, 0])
    cube([1, 1, 2.16]);
  translate([220, 261, 0])
    cube([1, 1, 2.16]);
  translate([221, 261, 0])
    cube([1, 1, 2.20]);
  translate([222, 261, 0])
    cube([1, 1, 2.16]);
  translate([223, 261, 0])
    cube([1, 1, 2.16]);
  translate([224, 261, 0])
    cube([1, 1, 2.16]);
  translate([225, 261, 0])
    cube([1, 1, 2.16]);
  translate([226, 261, 0])
    cube([1, 1, 2.16]);
  translate([227, 261, 0])
    cube([1, 1, 2.16]);
  translate([228, 261, 0])
    cube([1, 1, 2.16]);
  translate([229, 261, 0])
    cube([1, 1, 2.16]);
  translate([230, 261, 0])
    cube([1, 1, 2.16]);
  translate([231, 261, 0])
    cube([1, 1, 2.12]);
  translate([232, 261, 0])
    cube([1, 1, 2.16]);
  translate([233, 261, 0])
    cube([1, 1, 2.16]);
  translate([234, 261, 0])
    cube([1, 1, 2.16]);
  translate([235, 261, 0])
    cube([1, 1, 2.16]);
  translate([236, 261, 0])
    cube([1, 1, 2.16]);
  translate([237, 261, 0])
    cube([1, 1, 2.16]);
  translate([238, 261, 0])
    cube([1, 1, 2.16]);
  translate([239, 261, 0])
    cube([1, 1, 2.16]);
  translate([240, 261, 0])
    cube([1, 1, 2.16]);
  translate([241, 261, 0])
    cube([1, 1, 2.16]);
  translate([242, 261, 0])
    cube([1, 1, 2.16]);
  translate([243, 261, 0])
    cube([1, 1, 2.16]);
  translate([244, 261, 0])
    cube([1, 1, 2.16]);
  translate([245, 261, 0])
    cube([1, 1, 2.16]);
  translate([246, 261, 0])
    cube([1, 1, 2.16]);
  translate([0, 262, 0])
    cube([1, 1, 2.39]);
  translate([1, 262, 0])
    cube([1, 1, 2.39]);
  translate([2, 262, 0])
    cube([1, 1, 2.39]);
  translate([3, 262, 0])
    cube([1, 1, 2.39]);
  translate([4, 262, 0])
    cube([1, 1, 2.39]);
  translate([5, 262, 0])
    cube([1, 1, 2.39]);
  translate([6, 262, 0])
    cube([1, 1, 2.39]);
  translate([7, 262, 0])
    cube([1, 1, 2.39]);
  translate([8, 262, 0])
    cube([1, 1, 2.39]);
  translate([9, 262, 0])
    cube([1, 1, 2.39]);
  translate([10, 262, 0])
    cube([1, 1, 2.39]);
  translate([11, 262, 0])
    cube([1, 1, 2.39]);
  translate([12, 262, 0])
    cube([1, 1, 2.39]);
  translate([13, 262, 0])
    cube([1, 1, 2.39]);
  translate([14, 262, 0])
    cube([1, 1, 2.35]);
  translate([15, 262, 0])
    cube([1, 1, 2.35]);
  translate([16, 262, 0])
    cube([1, 1, 2.35]);
  translate([17, 262, 0])
    cube([1, 1, 2.35]);
  translate([18, 262, 0])
    cube([1, 1, 2.35]);
  translate([19, 262, 0])
    cube([1, 1, 2.35]);
  translate([20, 262, 0])
    cube([1, 1, 2.35]);
  translate([21, 262, 0])
    cube([1, 1, 2.35]);
  translate([22, 262, 0])
    cube([1, 1, 2.35]);
  translate([23, 262, 0])
    cube([1, 1, 2.35]);
  translate([24, 262, 0])
    cube([1, 1, 2.35]);
  translate([25, 262, 0])
    cube([1, 1, 2.35]);
  translate([26, 262, 0])
    cube([1, 1, 2.35]);
  translate([27, 262, 0])
    cube([1, 1, 2.35]);
  translate([28, 262, 0])
    cube([1, 1, 2.39]);
  translate([29, 262, 0])
    cube([1, 1, 2.39]);
  translate([30, 262, 0])
    cube([1, 1, 2.35]);
  translate([31, 262, 0])
    cube([1, 1, 2.35]);
  translate([32, 262, 0])
    cube([1, 1, 2.35]);
  translate([33, 262, 0])
    cube([1, 1, 2.31]);
  translate([34, 262, 0])
    cube([1, 1, 2.31]);
  translate([35, 262, 0])
    cube([1, 1, 2.31]);
  translate([36, 262, 0])
    cube([1, 1, 2.31]);
  translate([37, 262, 0])
    cube([1, 1, 2.31]);
  translate([38, 262, 0])
    cube([1, 1, 2.31]);
  translate([39, 262, 0])
    cube([1, 1, 2.31]);
  translate([40, 262, 0])
    cube([1, 1, 2.31]);
  translate([41, 262, 0])
    cube([1, 1, 2.31]);
  translate([42, 262, 0])
    cube([1, 1, 2.31]);
  translate([43, 262, 0])
    cube([1, 1, 2.31]);
  translate([44, 262, 0])
    cube([1, 1, 2.31]);
  translate([45, 262, 0])
    cube([1, 1, 2.31]);
  translate([46, 262, 0])
    cube([1, 1, 2.31]);
  translate([47, 262, 0])
    cube([1, 1, 2.31]);
  translate([48, 262, 0])
    cube([1, 1, 2.31]);
  translate([49, 262, 0])
    cube([1, 1, 2.27]);
  translate([50, 262, 0])
    cube([1, 1, 2.27]);
  translate([51, 262, 0])
    cube([1, 1, 2.27]);
  translate([52, 262, 0])
    cube([1, 1, 2.27]);
  translate([53, 262, 0])
    cube([1, 1, 2.27]);
  translate([54, 262, 0])
    cube([1, 1, 2.27]);
  translate([55, 262, 0])
    cube([1, 1, 2.27]);
  translate([56, 262, 0])
    cube([1, 1, 7.29]);
  translate([57, 262, 0])
    cube([1, 1, 7.80]);
  translate([58, 262, 0])
    cube([1, 1, 8.12]);
  translate([59, 262, 0])
    cube([1, 1, 7.69]);
  translate([60, 262, 0])
    cube([1, 1, 7.02]);
  translate([61, 262, 0])
    cube([1, 1, 6.16]);
  translate([62, 262, 0])
    cube([1, 1, 4.78]);
  translate([63, 262, 0])
    cube([1, 1, 3.65]);
  translate([64, 262, 0])
    cube([1, 1, 2.82]);
  translate([65, 262, 0])
    cube([1, 1, 2.82]);
  translate([66, 262, 0])
    cube([1, 1, 2.98]);
  translate([67, 262, 0])
    cube([1, 1, 3.06]);
  translate([68, 262, 0])
    cube([1, 1, 3.25]);
  translate([69, 262, 0])
    cube([1, 1, 3.33]);
  translate([70, 262, 0])
    cube([1, 1, 3.41]);
  translate([71, 262, 0])
    cube([1, 1, 3.61]);
  translate([72, 262, 0])
    cube([1, 1, 3.92]);
  translate([73, 262, 0])
    cube([1, 1, 4.08]);
  translate([74, 262, 0])
    cube([1, 1, 4.47]);
  translate([75, 262, 0])
    cube([1, 1, 4.59]);
  translate([76, 262, 0])
    cube([1, 1, 4.67]);
  translate([77, 262, 0])
    cube([1, 1, 4.71]);
  translate([78, 262, 0])
    cube([1, 1, 4.63]);
  translate([79, 262, 0])
    cube([1, 1, 4.63]);
  translate([80, 262, 0])
    cube([1, 1, 4.67]);
  translate([81, 262, 0])
    cube([1, 1, 4.47]);
  translate([82, 262, 0])
    cube([1, 1, 4.55]);
  translate([83, 262, 0])
    cube([1, 1, 4.43]);
  translate([84, 262, 0])
    cube([1, 1, 4.20]);
  translate([85, 262, 0])
    cube([1, 1, 3.96]);
  translate([86, 262, 0])
    cube([1, 1, 3.88]);
  translate([87, 262, 0])
    cube([1, 1, 3.84]);
  translate([88, 262, 0])
    cube([1, 1, 3.61]);
  translate([89, 262, 0])
    cube([1, 1, 3.76]);
  translate([90, 262, 0])
    cube([1, 1, 3.69]);
  translate([91, 262, 0])
    cube([1, 1, 3.57]);
  translate([92, 262, 0])
    cube([1, 1, 3.45]);
  translate([93, 262, 0])
    cube([1, 1, 3.45]);
  translate([94, 262, 0])
    cube([1, 1, 3.57]);
  translate([95, 262, 0])
    cube([1, 1, 3.76]);
  translate([96, 262, 0])
    cube([1, 1, 4.08]);
  translate([97, 262, 0])
    cube([1, 1, 4.78]);
  translate([98, 262, 0])
    cube([1, 1, 2.31]);
  translate([99, 262, 0])
    cube([1, 1, 2.16]);
  translate([100, 262, 0])
    cube([1, 1, 2.20]);
  translate([101, 262, 0])
    cube([1, 1, 2.24]);
  translate([102, 262, 0])
    cube([1, 1, 2.20]);
  translate([103, 262, 0])
    cube([1, 1, 2.20]);
  translate([104, 262, 0])
    cube([1, 1, 2.27]);
  translate([105, 262, 0])
    cube([1, 1, 2.20]);
  translate([106, 262, 0])
    cube([1, 1, 2.20]);
  translate([107, 262, 0])
    cube([1, 1, 2.20]);
  translate([108, 262, 0])
    cube([1, 1, 2.20]);
  translate([109, 262, 0])
    cube([1, 1, 2.20]);
  translate([110, 262, 0])
    cube([1, 1, 2.20]);
  translate([111, 262, 0])
    cube([1, 1, 2.16]);
  translate([112, 262, 0])
    cube([1, 1, 2.24]);
  translate([113, 262, 0])
    cube([1, 1, 2.16]);
  translate([114, 262, 0])
    cube([1, 1, 2.16]);
  translate([115, 262, 0])
    cube([1, 1, 2.16]);
  translate([116, 262, 0])
    cube([1, 1, 2.16]);
  translate([117, 262, 0])
    cube([1, 1, 2.16]);
  translate([118, 262, 0])
    cube([1, 1, 2.16]);
  translate([119, 262, 0])
    cube([1, 1, 2.16]);
  translate([120, 262, 0])
    cube([1, 1, 2.16]);
  translate([121, 262, 0])
    cube([1, 1, 2.16]);
  translate([122, 262, 0])
    cube([1, 1, 2.16]);
  translate([123, 262, 0])
    cube([1, 1, 1.92]);
  translate([124, 262, 0])
    cube([1, 1, 2.31]);
  translate([125, 262, 0])
    cube([1, 1, 5.29]);
  translate([126, 262, 0])
    cube([1, 1, 5.37]);
  translate([127, 262, 0])
    cube([1, 1, 5.49]);
  translate([128, 262, 0])
    cube([1, 1, 5.57]);
  translate([129, 262, 0])
    cube([1, 1, 5.45]);
  translate([130, 262, 0])
    cube([1, 1, 4.98]);
  translate([131, 262, 0])
    cube([1, 1, 4.63]);
  translate([132, 262, 0])
    cube([1, 1, 4.75]);
  translate([133, 262, 0])
    cube([1, 1, 4.78]);
  translate([134, 262, 0])
    cube([1, 1, 4.51]);
  translate([135, 262, 0])
    cube([1, 1, 3.69]);
  translate([136, 262, 0])
    cube([1, 1, 2.94]);
  translate([137, 262, 0])
    cube([1, 1, 2.90]);
  translate([138, 262, 0])
    cube([1, 1, 3.02]);
  translate([139, 262, 0])
    cube([1, 1, 3.14]);
  translate([140, 262, 0])
    cube([1, 1, 3.29]);
  translate([141, 262, 0])
    cube([1, 1, 3.73]);
  translate([142, 262, 0])
    cube([1, 1, 3.80]);
  translate([143, 262, 0])
    cube([1, 1, 3.84]);
  translate([144, 262, 0])
    cube([1, 1, 3.76]);
  translate([145, 262, 0])
    cube([1, 1, 3.76]);
  translate([146, 262, 0])
    cube([1, 1, 3.88]);
  translate([147, 262, 0])
    cube([1, 1, 4.00]);
  translate([148, 262, 0])
    cube([1, 1, 4.04]);
  translate([149, 262, 0])
    cube([1, 1, 4.31]);
  translate([150, 262, 0])
    cube([1, 1, 4.43]);
  translate([151, 262, 0])
    cube([1, 1, 4.63]);
  translate([152, 262, 0])
    cube([1, 1, 4.51]);
  translate([153, 262, 0])
    cube([1, 1, 4.55]);
  translate([154, 262, 0])
    cube([1, 1, 4.55]);
  translate([155, 262, 0])
    cube([1, 1, 4.43]);
  translate([156, 262, 0])
    cube([1, 1, 4.27]);
  translate([157, 262, 0])
    cube([1, 1, 4.12]);
  translate([158, 262, 0])
    cube([1, 1, 4.20]);
  translate([159, 262, 0])
    cube([1, 1, 4.51]);
  translate([160, 262, 0])
    cube([1, 1, 5.18]);
  translate([161, 262, 0])
    cube([1, 1, 5.73]);
  translate([162, 262, 0])
    cube([1, 1, 6.24]);
  translate([163, 262, 0])
    cube([1, 1, 6.43]);
  translate([164, 262, 0])
    cube([1, 1, 2.20]);
  translate([165, 262, 0])
    cube([1, 1, 2.16]);
  translate([166, 262, 0])
    cube([1, 1, 2.12]);
  translate([167, 262, 0])
    cube([1, 1, 2.16]);
  translate([168, 262, 0])
    cube([1, 1, 2.12]);
  translate([169, 262, 0])
    cube([1, 1, 2.12]);
  translate([170, 262, 0])
    cube([1, 1, 2.16]);
  translate([171, 262, 0])
    cube([1, 1, 2.16]);
  translate([172, 262, 0])
    cube([1, 1, 2.16]);
  translate([173, 262, 0])
    cube([1, 1, 2.16]);
  translate([174, 262, 0])
    cube([1, 1, 2.12]);
  translate([175, 262, 0])
    cube([1, 1, 2.16]);
  translate([176, 262, 0])
    cube([1, 1, 2.20]);
  translate([177, 262, 0])
    cube([1, 1, 2.16]);
  translate([178, 262, 0])
    cube([1, 1, 2.16]);
  translate([179, 262, 0])
    cube([1, 1, 2.16]);
  translate([180, 262, 0])
    cube([1, 1, 2.16]);
  translate([181, 262, 0])
    cube([1, 1, 2.16]);
  translate([182, 262, 0])
    cube([1, 1, 2.16]);
  translate([183, 262, 0])
    cube([1, 1, 2.16]);
  translate([184, 262, 0])
    cube([1, 1, 2.16]);
  translate([185, 262, 0])
    cube([1, 1, 2.16]);
  translate([186, 262, 0])
    cube([1, 1, 2.16]);
  translate([187, 262, 0])
    cube([1, 1, 2.16]);
  translate([188, 262, 0])
    cube([1, 1, 2.16]);
  translate([189, 262, 0])
    cube([1, 1, 2.16]);
  translate([190, 262, 0])
    cube([1, 1, 2.16]);
  translate([191, 262, 0])
    cube([1, 1, 2.16]);
  translate([192, 262, 0])
    cube([1, 1, 2.16]);
  translate([193, 262, 0])
    cube([1, 1, 2.16]);
  translate([194, 262, 0])
    cube([1, 1, 2.16]);
  translate([195, 262, 0])
    cube([1, 1, 2.16]);
  translate([196, 262, 0])
    cube([1, 1, 2.16]);
  translate([197, 262, 0])
    cube([1, 1, 2.16]);
  translate([198, 262, 0])
    cube([1, 1, 2.16]);
  translate([199, 262, 0])
    cube([1, 1, 2.16]);
  translate([200, 262, 0])
    cube([1, 1, 2.16]);
  translate([201, 262, 0])
    cube([1, 1, 2.16]);
  translate([202, 262, 0])
    cube([1, 1, 2.16]);
  translate([203, 262, 0])
    cube([1, 1, 2.16]);
  translate([204, 262, 0])
    cube([1, 1, 2.16]);
  translate([205, 262, 0])
    cube([1, 1, 2.16]);
  translate([206, 262, 0])
    cube([1, 1, 2.16]);
  translate([207, 262, 0])
    cube([1, 1, 2.16]);
  translate([208, 262, 0])
    cube([1, 1, 2.16]);
  translate([209, 262, 0])
    cube([1, 1, 2.16]);
  translate([210, 262, 0])
    cube([1, 1, 2.16]);
  translate([211, 262, 0])
    cube([1, 1, 2.16]);
  translate([212, 262, 0])
    cube([1, 1, 2.16]);
  translate([213, 262, 0])
    cube([1, 1, 2.16]);
  translate([214, 262, 0])
    cube([1, 1, 2.20]);
  translate([215, 262, 0])
    cube([1, 1, 2.16]);
  translate([216, 262, 0])
    cube([1, 1, 2.16]);
  translate([217, 262, 0])
    cube([1, 1, 2.20]);
  translate([218, 262, 0])
    cube([1, 1, 2.20]);
  translate([219, 262, 0])
    cube([1, 1, 2.16]);
  translate([220, 262, 0])
    cube([1, 1, 2.16]);
  translate([221, 262, 0])
    cube([1, 1, 2.20]);
  translate([222, 262, 0])
    cube([1, 1, 2.16]);
  translate([223, 262, 0])
    cube([1, 1, 2.16]);
  translate([224, 262, 0])
    cube([1, 1, 2.16]);
  translate([225, 262, 0])
    cube([1, 1, 2.16]);
  translate([226, 262, 0])
    cube([1, 1, 2.16]);
  translate([227, 262, 0])
    cube([1, 1, 2.16]);
  translate([228, 262, 0])
    cube([1, 1, 2.16]);
  translate([229, 262, 0])
    cube([1, 1, 2.16]);
  translate([230, 262, 0])
    cube([1, 1, 2.20]);
  translate([231, 262, 0])
    cube([1, 1, 2.16]);
  translate([232, 262, 0])
    cube([1, 1, 2.16]);
  translate([233, 262, 0])
    cube([1, 1, 2.16]);
  translate([234, 262, 0])
    cube([1, 1, 2.16]);
  translate([235, 262, 0])
    cube([1, 1, 2.16]);
  translate([236, 262, 0])
    cube([1, 1, 2.16]);
  translate([237, 262, 0])
    cube([1, 1, 2.16]);
  translate([238, 262, 0])
    cube([1, 1, 2.16]);
  translate([239, 262, 0])
    cube([1, 1, 2.16]);
  translate([240, 262, 0])
    cube([1, 1, 2.16]);
  translate([241, 262, 0])
    cube([1, 1, 2.16]);
  translate([242, 262, 0])
    cube([1, 1, 2.16]);
  translate([243, 262, 0])
    cube([1, 1, 2.20]);
  translate([244, 262, 0])
    cube([1, 1, 2.16]);
  translate([245, 262, 0])
    cube([1, 1, 2.16]);
  translate([246, 262, 0])
    cube([1, 1, 2.16]);
  translate([0, 263, 0])
    cube([1, 1, 2.39]);
  translate([1, 263, 0])
    cube([1, 1, 2.39]);
  translate([2, 263, 0])
    cube([1, 1, 2.39]);
  translate([3, 263, 0])
    cube([1, 1, 2.39]);
  translate([4, 263, 0])
    cube([1, 1, 2.39]);
  translate([5, 263, 0])
    cube([1, 1, 2.39]);
  translate([6, 263, 0])
    cube([1, 1, 2.39]);
  translate([7, 263, 0])
    cube([1, 1, 2.39]);
  translate([8, 263, 0])
    cube([1, 1, 2.39]);
  translate([9, 263, 0])
    cube([1, 1, 2.39]);
  translate([10, 263, 0])
    cube([1, 1, 2.39]);
  translate([11, 263, 0])
    cube([1, 1, 2.39]);
  translate([12, 263, 0])
    cube([1, 1, 2.39]);
  translate([13, 263, 0])
    cube([1, 1, 2.39]);
  translate([14, 263, 0])
    cube([1, 1, 2.39]);
  translate([15, 263, 0])
    cube([1, 1, 2.39]);
  translate([16, 263, 0])
    cube([1, 1, 2.35]);
  translate([17, 263, 0])
    cube([1, 1, 2.35]);
  translate([18, 263, 0])
    cube([1, 1, 2.39]);
  translate([19, 263, 0])
    cube([1, 1, 2.35]);
  translate([20, 263, 0])
    cube([1, 1, 2.39]);
  translate([21, 263, 0])
    cube([1, 1, 2.39]);
  translate([22, 263, 0])
    cube([1, 1, 2.35]);
  translate([23, 263, 0])
    cube([1, 1, 2.39]);
  translate([24, 263, 0])
    cube([1, 1, 2.39]);
  translate([25, 263, 0])
    cube([1, 1, 2.35]);
  translate([26, 263, 0])
    cube([1, 1, 2.35]);
  translate([27, 263, 0])
    cube([1, 1, 2.35]);
  translate([28, 263, 0])
    cube([1, 1, 2.35]);
  translate([29, 263, 0])
    cube([1, 1, 2.35]);
  translate([30, 263, 0])
    cube([1, 1, 2.35]);
  translate([31, 263, 0])
    cube([1, 1, 2.35]);
  translate([32, 263, 0])
    cube([1, 1, 2.35]);
  translate([33, 263, 0])
    cube([1, 1, 2.35]);
  translate([34, 263, 0])
    cube([1, 1, 2.35]);
  translate([35, 263, 0])
    cube([1, 1, 2.27]);
  translate([36, 263, 0])
    cube([1, 1, 2.35]);
  translate([37, 263, 0])
    cube([1, 1, 2.35]);
  translate([38, 263, 0])
    cube([1, 1, 2.31]);
  translate([39, 263, 0])
    cube([1, 1, 2.35]);
  translate([40, 263, 0])
    cube([1, 1, 2.35]);
  translate([41, 263, 0])
    cube([1, 1, 2.31]);
  translate([42, 263, 0])
    cube([1, 1, 2.31]);
  translate([43, 263, 0])
    cube([1, 1, 2.31]);
  translate([44, 263, 0])
    cube([1, 1, 2.31]);
  translate([45, 263, 0])
    cube([1, 1, 2.31]);
  translate([46, 263, 0])
    cube([1, 1, 2.31]);
  translate([47, 263, 0])
    cube([1, 1, 2.31]);
  translate([48, 263, 0])
    cube([1, 1, 2.27]);
  translate([49, 263, 0])
    cube([1, 1, 2.27]);
  translate([50, 263, 0])
    cube([1, 1, 2.27]);
  translate([51, 263, 0])
    cube([1, 1, 2.27]);
  translate([52, 263, 0])
    cube([1, 1, 2.27]);
  translate([53, 263, 0])
    cube([1, 1, 2.27]);
  translate([54, 263, 0])
    cube([1, 1, 2.27]);
  translate([55, 263, 0])
    cube([1, 1, 2.27]);
  translate([56, 263, 0])
    cube([1, 1, 7.69]);
  translate([57, 263, 0])
    cube([1, 1, 7.80]);
  translate([58, 263, 0])
    cube([1, 1, 8.20]);
  translate([59, 263, 0])
    cube([1, 1, 7.65]);
  translate([60, 263, 0])
    cube([1, 1, 6.94]);
  translate([61, 263, 0])
    cube([1, 1, 6.04]);
  translate([62, 263, 0])
    cube([1, 1, 4.67]);
  translate([63, 263, 0])
    cube([1, 1, 3.73]);
  translate([64, 263, 0])
    cube([1, 1, 2.78]);
  translate([65, 263, 0])
    cube([1, 1, 2.78]);
  translate([66, 263, 0])
    cube([1, 1, 2.90]);
  translate([67, 263, 0])
    cube([1, 1, 2.94]);
  translate([68, 263, 0])
    cube([1, 1, 3.22]);
  translate([69, 263, 0])
    cube([1, 1, 3.41]);
  translate([70, 263, 0])
    cube([1, 1, 3.57]);
  translate([71, 263, 0])
    cube([1, 1, 3.73]);
  translate([72, 263, 0])
    cube([1, 1, 3.92]);
  translate([73, 263, 0])
    cube([1, 1, 4.12]);
  translate([74, 263, 0])
    cube([1, 1, 4.47]);
  translate([75, 263, 0])
    cube([1, 1, 4.59]);
  translate([76, 263, 0])
    cube([1, 1, 4.71]);
  translate([77, 263, 0])
    cube([1, 1, 4.71]);
  translate([78, 263, 0])
    cube([1, 1, 4.47]);
  translate([79, 263, 0])
    cube([1, 1, 4.47]);
  translate([80, 263, 0])
    cube([1, 1, 4.51]);
  translate([81, 263, 0])
    cube([1, 1, 4.43]);
  translate([82, 263, 0])
    cube([1, 1, 4.47]);
  translate([83, 263, 0])
    cube([1, 1, 4.24]);
  translate([84, 263, 0])
    cube([1, 1, 4.27]);
  translate([85, 263, 0])
    cube([1, 1, 4.04]);
  translate([86, 263, 0])
    cube([1, 1, 3.88]);
  translate([87, 263, 0])
    cube([1, 1, 3.84]);
  translate([88, 263, 0])
    cube([1, 1, 3.73]);
  translate([89, 263, 0])
    cube([1, 1, 3.69]);
  translate([90, 263, 0])
    cube([1, 1, 3.69]);
  translate([91, 263, 0])
    cube([1, 1, 3.57]);
  translate([92, 263, 0])
    cube([1, 1, 3.49]);
  translate([93, 263, 0])
    cube([1, 1, 3.53]);
  translate([94, 263, 0])
    cube([1, 1, 3.69]);
  translate([95, 263, 0])
    cube([1, 1, 3.92]);
  translate([96, 263, 0])
    cube([1, 1, 4.31]);
  translate([97, 263, 0])
    cube([1, 1, 5.22]);
  translate([98, 263, 0])
    cube([1, 1, 2.08]);
  translate([99, 263, 0])
    cube([1, 1, 2.20]);
  translate([100, 263, 0])
    cube([1, 1, 2.24]);
  translate([101, 263, 0])
    cube([1, 1, 2.24]);
  translate([102, 263, 0])
    cube([1, 1, 2.24]);
  translate([103, 263, 0])
    cube([1, 1, 2.20]);
  translate([104, 263, 0])
    cube([1, 1, 2.20]);
  translate([105, 263, 0])
    cube([1, 1, 2.20]);
  translate([106, 263, 0])
    cube([1, 1, 2.20]);
  translate([107, 263, 0])
    cube([1, 1, 2.20]);
  translate([108, 263, 0])
    cube([1, 1, 2.20]);
  translate([109, 263, 0])
    cube([1, 1, 2.20]);
  translate([110, 263, 0])
    cube([1, 1, 2.16]);
  translate([111, 263, 0])
    cube([1, 1, 2.16]);
  translate([112, 263, 0])
    cube([1, 1, 2.16]);
  translate([113, 263, 0])
    cube([1, 1, 2.20]);
  translate([114, 263, 0])
    cube([1, 1, 2.20]);
  translate([115, 263, 0])
    cube([1, 1, 2.20]);
  translate([116, 263, 0])
    cube([1, 1, 2.20]);
  translate([117, 263, 0])
    cube([1, 1, 2.20]);
  translate([118, 263, 0])
    cube([1, 1, 2.16]);
  translate([119, 263, 0])
    cube([1, 1, 2.16]);
  translate([120, 263, 0])
    cube([1, 1, 2.16]);
  translate([121, 263, 0])
    cube([1, 1, 2.16]);
  translate([122, 263, 0])
    cube([1, 1, 2.16]);
  translate([123, 263, 0])
    cube([1, 1, 2.16]);
  translate([124, 263, 0])
    cube([1, 1, 1.92]);
  translate([125, 263, 0])
    cube([1, 1, 5.22]);
  translate([126, 263, 0])
    cube([1, 1, 5.49]);
  translate([127, 263, 0])
    cube([1, 1, 5.65]);
  translate([128, 263, 0])
    cube([1, 1, 5.73]);
  translate([129, 263, 0])
    cube([1, 1, 5.65]);
  translate([130, 263, 0])
    cube([1, 1, 5.10]);
  translate([131, 263, 0])
    cube([1, 1, 4.59]);
  translate([132, 263, 0])
    cube([1, 1, 4.75]);
  translate([133, 263, 0])
    cube([1, 1, 5.10]);
  translate([134, 263, 0])
    cube([1, 1, 4.90]);
  translate([135, 263, 0])
    cube([1, 1, 3.96]);
  translate([136, 263, 0])
    cube([1, 1, 2.90]);
  translate([137, 263, 0])
    cube([1, 1, 2.90]);
  translate([138, 263, 0])
    cube([1, 1, 3.02]);
  translate([139, 263, 0])
    cube([1, 1, 3.18]);
  translate([140, 263, 0])
    cube([1, 1, 3.25]);
  translate([141, 263, 0])
    cube([1, 1, 3.73]);
  translate([142, 263, 0])
    cube([1, 1, 3.88]);
  translate([143, 263, 0])
    cube([1, 1, 3.92]);
  translate([144, 263, 0])
    cube([1, 1, 3.92]);
  translate([145, 263, 0])
    cube([1, 1, 3.80]);
  translate([146, 263, 0])
    cube([1, 1, 3.84]);
  translate([147, 263, 0])
    cube([1, 1, 4.00]);
  translate([148, 263, 0])
    cube([1, 1, 4.08]);
  translate([149, 263, 0])
    cube([1, 1, 4.31]);
  translate([150, 263, 0])
    cube([1, 1, 4.43]);
  translate([151, 263, 0])
    cube([1, 1, 4.47]);
  translate([152, 263, 0])
    cube([1, 1, 4.55]);
  translate([153, 263, 0])
    cube([1, 1, 4.55]);
  translate([154, 263, 0])
    cube([1, 1, 4.59]);
  translate([155, 263, 0])
    cube([1, 1, 4.43]);
  translate([156, 263, 0])
    cube([1, 1, 4.12]);
  translate([157, 263, 0])
    cube([1, 1, 4.16]);
  translate([158, 263, 0])
    cube([1, 1, 4.20]);
  translate([159, 263, 0])
    cube([1, 1, 4.55]);
  translate([160, 263, 0])
    cube([1, 1, 5.06]);
  translate([161, 263, 0])
    cube([1, 1, 5.65]);
  translate([162, 263, 0])
    cube([1, 1, 6.27]);
  translate([163, 263, 0])
    cube([1, 1, 6.39]);
  translate([164, 263, 0])
    cube([1, 1, 2.08]);
  translate([165, 263, 0])
    cube([1, 1, 2.12]);
  translate([166, 263, 0])
    cube([1, 1, 2.12]);
  translate([167, 263, 0])
    cube([1, 1, 2.16]);
  translate([168, 263, 0])
    cube([1, 1, 2.16]);
  translate([169, 263, 0])
    cube([1, 1, 2.16]);
  translate([170, 263, 0])
    cube([1, 1, 2.16]);
  translate([171, 263, 0])
    cube([1, 1, 2.12]);
  translate([172, 263, 0])
    cube([1, 1, 2.16]);
  translate([173, 263, 0])
    cube([1, 1, 2.12]);
  translate([174, 263, 0])
    cube([1, 1, 2.12]);
  translate([175, 263, 0])
    cube([1, 1, 2.16]);
  translate([176, 263, 0])
    cube([1, 1, 2.16]);
  translate([177, 263, 0])
    cube([1, 1, 2.12]);
  translate([178, 263, 0])
    cube([1, 1, 2.16]);
  translate([179, 263, 0])
    cube([1, 1, 2.16]);
  translate([180, 263, 0])
    cube([1, 1, 2.16]);
  translate([181, 263, 0])
    cube([1, 1, 2.16]);
  translate([182, 263, 0])
    cube([1, 1, 2.16]);
  translate([183, 263, 0])
    cube([1, 1, 2.16]);
  translate([184, 263, 0])
    cube([1, 1, 2.16]);
  translate([185, 263, 0])
    cube([1, 1, 2.16]);
  translate([186, 263, 0])
    cube([1, 1, 2.16]);
  translate([187, 263, 0])
    cube([1, 1, 2.16]);
  translate([188, 263, 0])
    cube([1, 1, 2.16]);
  translate([189, 263, 0])
    cube([1, 1, 2.16]);
  translate([190, 263, 0])
    cube([1, 1, 2.20]);
  translate([191, 263, 0])
    cube([1, 1, 2.16]);
  translate([192, 263, 0])
    cube([1, 1, 2.16]);
  translate([193, 263, 0])
    cube([1, 1, 2.16]);
  translate([194, 263, 0])
    cube([1, 1, 2.16]);
  translate([195, 263, 0])
    cube([1, 1, 2.16]);
  translate([196, 263, 0])
    cube([1, 1, 2.16]);
  translate([197, 263, 0])
    cube([1, 1, 2.16]);
  translate([198, 263, 0])
    cube([1, 1, 2.16]);
  translate([199, 263, 0])
    cube([1, 1, 2.16]);
  translate([200, 263, 0])
    cube([1, 1, 2.16]);
  translate([201, 263, 0])
    cube([1, 1, 2.16]);
  translate([202, 263, 0])
    cube([1, 1, 2.16]);
  translate([203, 263, 0])
    cube([1, 1, 2.16]);
  translate([204, 263, 0])
    cube([1, 1, 2.16]);
  translate([205, 263, 0])
    cube([1, 1, 2.16]);
  translate([206, 263, 0])
    cube([1, 1, 2.20]);
  translate([207, 263, 0])
    cube([1, 1, 2.24]);
  translate([208, 263, 0])
    cube([1, 1, 2.20]);
  translate([209, 263, 0])
    cube([1, 1, 2.20]);
  translate([210, 263, 0])
    cube([1, 1, 2.20]);
  translate([211, 263, 0])
    cube([1, 1, 2.20]);
  translate([212, 263, 0])
    cube([1, 1, 2.20]);
  translate([213, 263, 0])
    cube([1, 1, 2.20]);
  translate([214, 263, 0])
    cube([1, 1, 2.20]);
  translate([215, 263, 0])
    cube([1, 1, 2.16]);
  translate([216, 263, 0])
    cube([1, 1, 2.20]);
  translate([217, 263, 0])
    cube([1, 1, 2.16]);
  translate([218, 263, 0])
    cube([1, 1, 2.16]);
  translate([219, 263, 0])
    cube([1, 1, 2.20]);
  translate([220, 263, 0])
    cube([1, 1, 2.20]);
  translate([221, 263, 0])
    cube([1, 1, 2.20]);
  translate([222, 263, 0])
    cube([1, 1, 2.20]);
  translate([223, 263, 0])
    cube([1, 1, 2.20]);
  translate([224, 263, 0])
    cube([1, 1, 2.16]);
  translate([225, 263, 0])
    cube([1, 1, 2.16]);
  translate([226, 263, 0])
    cube([1, 1, 2.16]);
  translate([227, 263, 0])
    cube([1, 1, 2.16]);
  translate([228, 263, 0])
    cube([1, 1, 2.16]);
  translate([229, 263, 0])
    cube([1, 1, 2.20]);
  translate([230, 263, 0])
    cube([1, 1, 2.16]);
  translate([231, 263, 0])
    cube([1, 1, 2.16]);
  translate([232, 263, 0])
    cube([1, 1, 2.16]);
  translate([233, 263, 0])
    cube([1, 1, 2.20]);
  translate([234, 263, 0])
    cube([1, 1, 2.16]);
  translate([235, 263, 0])
    cube([1, 1, 2.16]);
  translate([236, 263, 0])
    cube([1, 1, 2.16]);
  translate([237, 263, 0])
    cube([1, 1, 2.16]);
  translate([238, 263, 0])
    cube([1, 1, 2.16]);
  translate([239, 263, 0])
    cube([1, 1, 2.16]);
  translate([240, 263, 0])
    cube([1, 1, 2.16]);
  translate([241, 263, 0])
    cube([1, 1, 2.16]);
  translate([242, 263, 0])
    cube([1, 1, 2.16]);
  translate([243, 263, 0])
    cube([1, 1, 2.16]);
  translate([244, 263, 0])
    cube([1, 1, 2.16]);
  translate([245, 263, 0])
    cube([1, 1, 2.16]);
  translate([246, 263, 0])
    cube([1, 1, 2.16]);
  translate([0, 264, 0])
    cube([1, 1, 2.35]);
  translate([1, 264, 0])
    cube([1, 1, 2.39]);
  translate([2, 264, 0])
    cube([1, 1, 2.39]);
  translate([3, 264, 0])
    cube([1, 1, 2.39]);
  translate([4, 264, 0])
    cube([1, 1, 2.39]);
  translate([5, 264, 0])
    cube([1, 1, 2.39]);
  translate([6, 264, 0])
    cube([1, 1, 2.39]);
  translate([7, 264, 0])
    cube([1, 1, 2.39]);
  translate([8, 264, 0])
    cube([1, 1, 2.39]);
  translate([9, 264, 0])
    cube([1, 1, 2.39]);
  translate([10, 264, 0])
    cube([1, 1, 2.39]);
  translate([11, 264, 0])
    cube([1, 1, 2.39]);
  translate([12, 264, 0])
    cube([1, 1, 2.39]);
  translate([13, 264, 0])
    cube([1, 1, 2.39]);
  translate([14, 264, 0])
    cube([1, 1, 2.39]);
  translate([15, 264, 0])
    cube([1, 1, 2.39]);
  translate([16, 264, 0])
    cube([1, 1, 2.39]);
  translate([17, 264, 0])
    cube([1, 1, 2.39]);
  translate([18, 264, 0])
    cube([1, 1, 2.39]);
  translate([19, 264, 0])
    cube([1, 1, 2.39]);
  translate([20, 264, 0])
    cube([1, 1, 2.39]);
  translate([21, 264, 0])
    cube([1, 1, 2.39]);
  translate([22, 264, 0])
    cube([1, 1, 2.39]);
  translate([23, 264, 0])
    cube([1, 1, 2.39]);
  translate([24, 264, 0])
    cube([1, 1, 2.35]);
  translate([25, 264, 0])
    cube([1, 1, 2.35]);
  translate([26, 264, 0])
    cube([1, 1, 2.35]);
  translate([27, 264, 0])
    cube([1, 1, 2.35]);
  translate([28, 264, 0])
    cube([1, 1, 2.35]);
  translate([29, 264, 0])
    cube([1, 1, 2.39]);
  translate([30, 264, 0])
    cube([1, 1, 2.35]);
  translate([31, 264, 0])
    cube([1, 1, 2.35]);
  translate([32, 264, 0])
    cube([1, 1, 2.35]);
  translate([33, 264, 0])
    cube([1, 1, 2.35]);
  translate([34, 264, 0])
    cube([1, 1, 2.35]);
  translate([35, 264, 0])
    cube([1, 1, 2.35]);
  translate([36, 264, 0])
    cube([1, 1, 2.35]);
  translate([37, 264, 0])
    cube([1, 1, 2.35]);
  translate([38, 264, 0])
    cube([1, 1, 2.31]);
  translate([39, 264, 0])
    cube([1, 1, 2.35]);
  translate([40, 264, 0])
    cube([1, 1, 2.39]);
  translate([41, 264, 0])
    cube([1, 1, 2.31]);
  translate([42, 264, 0])
    cube([1, 1, 2.31]);
  translate([43, 264, 0])
    cube([1, 1, 2.31]);
  translate([44, 264, 0])
    cube([1, 1, 2.31]);
  translate([45, 264, 0])
    cube([1, 1, 2.31]);
  translate([46, 264, 0])
    cube([1, 1, 2.24]);
  translate([47, 264, 0])
    cube([1, 1, 2.24]);
  translate([48, 264, 0])
    cube([1, 1, 2.27]);
  translate([49, 264, 0])
    cube([1, 1, 2.27]);
  translate([50, 264, 0])
    cube([1, 1, 2.27]);
  translate([51, 264, 0])
    cube([1, 1, 2.27]);
  translate([52, 264, 0])
    cube([1, 1, 2.27]);
  translate([53, 264, 0])
    cube([1, 1, 2.27]);
  translate([54, 264, 0])
    cube([1, 1, 2.27]);
  translate([55, 264, 0])
    cube([1, 1, 2.24]);
  translate([56, 264, 0])
    cube([1, 1, 7.49]);
  translate([57, 264, 0])
    cube([1, 1, 7.76]);
  translate([58, 264, 0])
    cube([1, 1, 8.16]);
  translate([59, 264, 0])
    cube([1, 1, 7.69]);
  translate([60, 264, 0])
    cube([1, 1, 6.94]);
  translate([61, 264, 0])
    cube([1, 1, 5.92]);
  translate([62, 264, 0])
    cube([1, 1, 4.67]);
  translate([63, 264, 0])
    cube([1, 1, 3.57]);
  translate([64, 264, 0])
    cube([1, 1, 2.86]);
  translate([65, 264, 0])
    cube([1, 1, 2.67]);
  translate([66, 264, 0])
    cube([1, 1, 2.94]);
  translate([67, 264, 0])
    cube([1, 1, 2.98]);
  translate([68, 264, 0])
    cube([1, 1, 3.18]);
  translate([69, 264, 0])
    cube([1, 1, 3.37]);
  translate([70, 264, 0])
    cube([1, 1, 3.49]);
  translate([71, 264, 0])
    cube([1, 1, 3.73]);
  translate([72, 264, 0])
    cube([1, 1, 3.88]);
  translate([73, 264, 0])
    cube([1, 1, 4.20]);
  translate([74, 264, 0])
    cube([1, 1, 4.43]);
  translate([75, 264, 0])
    cube([1, 1, 4.59]);
  translate([76, 264, 0])
    cube([1, 1, 4.71]);
  translate([77, 264, 0])
    cube([1, 1, 4.67]);
  translate([78, 264, 0])
    cube([1, 1, 4.55]);
  translate([79, 264, 0])
    cube([1, 1, 4.55]);
  translate([80, 264, 0])
    cube([1, 1, 4.59]);
  translate([81, 264, 0])
    cube([1, 1, 4.43]);
  translate([82, 264, 0])
    cube([1, 1, 4.47]);
  translate([83, 264, 0])
    cube([1, 1, 4.20]);
  translate([84, 264, 0])
    cube([1, 1, 4.04]);
  translate([85, 264, 0])
    cube([1, 1, 4.08]);
  translate([86, 264, 0])
    cube([1, 1, 4.00]);
  translate([87, 264, 0])
    cube([1, 1, 4.00]);
  translate([88, 264, 0])
    cube([1, 1, 3.92]);
  translate([89, 264, 0])
    cube([1, 1, 3.73]);
  translate([90, 264, 0])
    cube([1, 1, 3.61]);
  translate([91, 264, 0])
    cube([1, 1, 3.57]);
  translate([92, 264, 0])
    cube([1, 1, 3.53]);
  translate([93, 264, 0])
    cube([1, 1, 3.69]);
  translate([94, 264, 0])
    cube([1, 1, 3.76]);
  translate([95, 264, 0])
    cube([1, 1, 4.12]);
  translate([96, 264, 0])
    cube([1, 1, 4.43]);
  translate([97, 264, 0])
    cube([1, 1, 2.24]);
  translate([98, 264, 0])
    cube([1, 1, 2.24]);
  translate([99, 264, 0])
    cube([1, 1, 2.24]);
  translate([100, 264, 0])
    cube([1, 1, 2.24]);
  translate([101, 264, 0])
    cube([1, 1, 2.20]);
  translate([102, 264, 0])
    cube([1, 1, 2.24]);
  translate([103, 264, 0])
    cube([1, 1, 2.24]);
  translate([104, 264, 0])
    cube([1, 1, 2.16]);
  translate([105, 264, 0])
    cube([1, 1, 2.16]);
  translate([106, 264, 0])
    cube([1, 1, 2.20]);
  translate([107, 264, 0])
    cube([1, 1, 2.20]);
  translate([108, 264, 0])
    cube([1, 1, 2.16]);
  translate([109, 264, 0])
    cube([1, 1, 2.16]);
  translate([110, 264, 0])
    cube([1, 1, 2.12]);
  translate([111, 264, 0])
    cube([1, 1, 2.20]);
  translate([112, 264, 0])
    cube([1, 1, 2.12]);
  translate([113, 264, 0])
    cube([1, 1, 2.16]);
  translate([114, 264, 0])
    cube([1, 1, 2.16]);
  translate([115, 264, 0])
    cube([1, 1, 2.20]);
  translate([116, 264, 0])
    cube([1, 1, 2.16]);
  translate([117, 264, 0])
    cube([1, 1, 2.20]);
  translate([118, 264, 0])
    cube([1, 1, 2.16]);
  translate([119, 264, 0])
    cube([1, 1, 2.20]);
  translate([120, 264, 0])
    cube([1, 1, 2.20]);
  translate([121, 264, 0])
    cube([1, 1, 2.16]);
  translate([122, 264, 0])
    cube([1, 1, 2.16]);
  translate([123, 264, 0])
    cube([1, 1, 2.16]);
  translate([124, 264, 0])
    cube([1, 1, 1.80]);
  translate([125, 264, 0])
    cube([1, 1, 2.27]);
  translate([126, 264, 0])
    cube([1, 1, 5.65]);
  translate([127, 264, 0])
    cube([1, 1, 5.57]);
  translate([128, 264, 0])
    cube([1, 1, 5.76]);
  translate([129, 264, 0])
    cube([1, 1, 5.69]);
  translate([130, 264, 0])
    cube([1, 1, 5.10]);
  translate([131, 264, 0])
    cube([1, 1, 4.67]);
  translate([132, 264, 0])
    cube([1, 1, 4.98]);
  translate([133, 264, 0])
    cube([1, 1, 5.53]);
  translate([134, 264, 0])
    cube([1, 1, 5.18]);
  translate([135, 264, 0])
    cube([1, 1, 4.16]);
  translate([136, 264, 0])
    cube([1, 1, 3.10]);
  translate([137, 264, 0])
    cube([1, 1, 2.82]);
  translate([138, 264, 0])
    cube([1, 1, 3.02]);
  translate([139, 264, 0])
    cube([1, 1, 3.18]);
  translate([140, 264, 0])
    cube([1, 1, 3.49]);
  translate([141, 264, 0])
    cube([1, 1, 3.69]);
  translate([142, 264, 0])
    cube([1, 1, 3.88]);
  translate([143, 264, 0])
    cube([1, 1, 4.04]);
  translate([144, 264, 0])
    cube([1, 1, 4.04]);
  translate([145, 264, 0])
    cube([1, 1, 3.84]);
  translate([146, 264, 0])
    cube([1, 1, 3.92]);
  translate([147, 264, 0])
    cube([1, 1, 4.00]);
  translate([148, 264, 0])
    cube([1, 1, 4.08]);
  translate([149, 264, 0])
    cube([1, 1, 4.31]);
  translate([150, 264, 0])
    cube([1, 1, 4.39]);
  translate([151, 264, 0])
    cube([1, 1, 4.47]);
  translate([152, 264, 0])
    cube([1, 1, 4.63]);
  translate([153, 264, 0])
    cube([1, 1, 4.59]);
  translate([154, 264, 0])
    cube([1, 1, 4.51]);
  translate([155, 264, 0])
    cube([1, 1, 4.43]);
  translate([156, 264, 0])
    cube([1, 1, 4.35]);
  translate([157, 264, 0])
    cube([1, 1, 4.16]);
  translate([158, 264, 0])
    cube([1, 1, 4.16]);
  translate([159, 264, 0])
    cube([1, 1, 4.51]);
  translate([160, 264, 0])
    cube([1, 1, 5.06]);
  translate([161, 264, 0])
    cube([1, 1, 5.69]);
  translate([162, 264, 0])
    cube([1, 1, 6.31]);
  translate([163, 264, 0])
    cube([1, 1, 6.71]);
  translate([164, 264, 0])
    cube([1, 1, 2.00]);
  translate([165, 264, 0])
    cube([1, 1, 2.12]);
  translate([166, 264, 0])
    cube([1, 1, 2.16]);
  translate([167, 264, 0])
    cube([1, 1, 2.16]);
  translate([168, 264, 0])
    cube([1, 1, 2.16]);
  translate([169, 264, 0])
    cube([1, 1, 2.20]);
  translate([170, 264, 0])
    cube([1, 1, 2.20]);
  translate([171, 264, 0])
    cube([1, 1, 2.16]);
  translate([172, 264, 0])
    cube([1, 1, 2.16]);
  translate([173, 264, 0])
    cube([1, 1, 2.16]);
  translate([174, 264, 0])
    cube([1, 1, 2.16]);
  translate([175, 264, 0])
    cube([1, 1, 2.16]);
  translate([176, 264, 0])
    cube([1, 1, 2.16]);
  translate([177, 264, 0])
    cube([1, 1, 2.16]);
  translate([178, 264, 0])
    cube([1, 1, 2.16]);
  translate([179, 264, 0])
    cube([1, 1, 2.12]);
  translate([180, 264, 0])
    cube([1, 1, 2.12]);
  translate([181, 264, 0])
    cube([1, 1, 2.12]);
  translate([182, 264, 0])
    cube([1, 1, 2.16]);
  translate([183, 264, 0])
    cube([1, 1, 2.20]);
  translate([184, 264, 0])
    cube([1, 1, 2.16]);
  translate([185, 264, 0])
    cube([1, 1, 2.12]);
  translate([186, 264, 0])
    cube([1, 1, 2.12]);
  translate([187, 264, 0])
    cube([1, 1, 2.16]);
  translate([188, 264, 0])
    cube([1, 1, 2.16]);
  translate([189, 264, 0])
    cube([1, 1, 2.16]);
  translate([190, 264, 0])
    cube([1, 1, 2.12]);
  translate([191, 264, 0])
    cube([1, 1, 2.12]);
  translate([192, 264, 0])
    cube([1, 1, 2.20]);
  translate([193, 264, 0])
    cube([1, 1, 2.16]);
  translate([194, 264, 0])
    cube([1, 1, 2.24]);
  translate([195, 264, 0])
    cube([1, 1, 2.20]);
  translate([196, 264, 0])
    cube([1, 1, 2.24]);
  translate([197, 264, 0])
    cube([1, 1, 2.24]);
  translate([198, 264, 0])
    cube([1, 1, 2.12]);
  translate([199, 264, 0])
    cube([1, 1, 2.20]);
  translate([200, 264, 0])
    cube([1, 1, 2.20]);
  translate([201, 264, 0])
    cube([1, 1, 2.16]);
  translate([202, 264, 0])
    cube([1, 1, 2.16]);
  translate([203, 264, 0])
    cube([1, 1, 2.20]);
  translate([204, 264, 0])
    cube([1, 1, 2.20]);
  translate([205, 264, 0])
    cube([1, 1, 2.20]);
  translate([206, 264, 0])
    cube([1, 1, 2.20]);
  translate([207, 264, 0])
    cube([1, 1, 2.20]);
  translate([208, 264, 0])
    cube([1, 1, 2.20]);
  translate([209, 264, 0])
    cube([1, 1, 2.20]);
  translate([210, 264, 0])
    cube([1, 1, 2.20]);
  translate([211, 264, 0])
    cube([1, 1, 2.20]);
  translate([212, 264, 0])
    cube([1, 1, 2.16]);
  translate([213, 264, 0])
    cube([1, 1, 2.16]);
  translate([214, 264, 0])
    cube([1, 1, 2.20]);
  translate([215, 264, 0])
    cube([1, 1, 2.20]);
  translate([216, 264, 0])
    cube([1, 1, 2.20]);
  translate([217, 264, 0])
    cube([1, 1, 2.24]);
  translate([218, 264, 0])
    cube([1, 1, 2.24]);
  translate([219, 264, 0])
    cube([1, 1, 2.20]);
  translate([220, 264, 0])
    cube([1, 1, 2.20]);
  translate([221, 264, 0])
    cube([1, 1, 2.20]);
  translate([222, 264, 0])
    cube([1, 1, 2.20]);
  translate([223, 264, 0])
    cube([1, 1, 2.20]);
  translate([224, 264, 0])
    cube([1, 1, 2.20]);
  translate([225, 264, 0])
    cube([1, 1, 2.16]);
  translate([226, 264, 0])
    cube([1, 1, 2.16]);
  translate([227, 264, 0])
    cube([1, 1, 2.20]);
  translate([228, 264, 0])
    cube([1, 1, 2.16]);
  translate([229, 264, 0])
    cube([1, 1, 2.16]);
  translate([230, 264, 0])
    cube([1, 1, 2.16]);
  translate([231, 264, 0])
    cube([1, 1, 2.20]);
  translate([232, 264, 0])
    cube([1, 1, 2.20]);
  translate([233, 264, 0])
    cube([1, 1, 2.20]);
  translate([234, 264, 0])
    cube([1, 1, 2.20]);
  translate([235, 264, 0])
    cube([1, 1, 2.16]);
  translate([236, 264, 0])
    cube([1, 1, 2.20]);
  translate([237, 264, 0])
    cube([1, 1, 2.20]);
  translate([238, 264, 0])
    cube([1, 1, 2.16]);
  translate([239, 264, 0])
    cube([1, 1, 2.16]);
  translate([240, 264, 0])
    cube([1, 1, 2.16]);
  translate([241, 264, 0])
    cube([1, 1, 2.16]);
  translate([242, 264, 0])
    cube([1, 1, 2.16]);
  translate([243, 264, 0])
    cube([1, 1, 2.16]);
  translate([244, 264, 0])
    cube([1, 1, 2.16]);
  translate([245, 264, 0])
    cube([1, 1, 2.16]);
  translate([246, 264, 0])
    cube([1, 1, 2.16]);
  translate([0, 265, 0])
    cube([1, 1, 2.43]);
  translate([1, 265, 0])
    cube([1, 1, 2.39]);
  translate([2, 265, 0])
    cube([1, 1, 2.39]);
  translate([3, 265, 0])
    cube([1, 1, 2.39]);
  translate([4, 265, 0])
    cube([1, 1, 2.39]);
  translate([5, 265, 0])
    cube([1, 1, 2.39]);
  translate([6, 265, 0])
    cube([1, 1, 2.39]);
  translate([7, 265, 0])
    cube([1, 1, 2.39]);
  translate([8, 265, 0])
    cube([1, 1, 2.39]);
  translate([9, 265, 0])
    cube([1, 1, 2.39]);
  translate([10, 265, 0])
    cube([1, 1, 2.39]);
  translate([11, 265, 0])
    cube([1, 1, 2.39]);
  translate([12, 265, 0])
    cube([1, 1, 2.39]);
  translate([13, 265, 0])
    cube([1, 1, 2.39]);
  translate([14, 265, 0])
    cube([1, 1, 2.39]);
  translate([15, 265, 0])
    cube([1, 1, 2.39]);
  translate([16, 265, 0])
    cube([1, 1, 2.39]);
  translate([17, 265, 0])
    cube([1, 1, 2.39]);
  translate([18, 265, 0])
    cube([1, 1, 2.39]);
  translate([19, 265, 0])
    cube([1, 1, 2.39]);
  translate([20, 265, 0])
    cube([1, 1, 2.39]);
  translate([21, 265, 0])
    cube([1, 1, 2.39]);
  translate([22, 265, 0])
    cube([1, 1, 2.39]);
  translate([23, 265, 0])
    cube([1, 1, 2.39]);
  translate([24, 265, 0])
    cube([1, 1, 2.35]);
  translate([25, 265, 0])
    cube([1, 1, 2.35]);
  translate([26, 265, 0])
    cube([1, 1, 2.35]);
  translate([27, 265, 0])
    cube([1, 1, 2.35]);
  translate([28, 265, 0])
    cube([1, 1, 2.35]);
  translate([29, 265, 0])
    cube([1, 1, 2.39]);
  translate([30, 265, 0])
    cube([1, 1, 2.35]);
  translate([31, 265, 0])
    cube([1, 1, 2.35]);
  translate([32, 265, 0])
    cube([1, 1, 2.35]);
  translate([33, 265, 0])
    cube([1, 1, 2.35]);
  translate([34, 265, 0])
    cube([1, 1, 2.35]);
  translate([35, 265, 0])
    cube([1, 1, 2.35]);
  translate([36, 265, 0])
    cube([1, 1, 2.35]);
  translate([37, 265, 0])
    cube([1, 1, 2.35]);
  translate([38, 265, 0])
    cube([1, 1, 2.31]);
  translate([39, 265, 0])
    cube([1, 1, 2.35]);
  translate([40, 265, 0])
    cube([1, 1, 2.39]);
  translate([41, 265, 0])
    cube([1, 1, 2.31]);
  translate([42, 265, 0])
    cube([1, 1, 2.31]);
  translate([43, 265, 0])
    cube([1, 1, 2.31]);
  translate([44, 265, 0])
    cube([1, 1, 2.31]);
  translate([45, 265, 0])
    cube([1, 1, 2.31]);
  translate([46, 265, 0])
    cube([1, 1, 2.24]);
  translate([47, 265, 0])
    cube([1, 1, 2.24]);
  translate([48, 265, 0])
    cube([1, 1, 2.27]);
  translate([49, 265, 0])
    cube([1, 1, 2.27]);
  translate([50, 265, 0])
    cube([1, 1, 2.27]);
  translate([51, 265, 0])
    cube([1, 1, 2.27]);
  translate([52, 265, 0])
    cube([1, 1, 2.27]);
  translate([53, 265, 0])
    cube([1, 1, 2.27]);
  translate([54, 265, 0])
    cube([1, 1, 2.27]);
  translate([55, 265, 0])
    cube([1, 1, 2.24]);
  translate([56, 265, 0])
    cube([1, 1, 7.57]);
  translate([57, 265, 0])
    cube([1, 1, 7.76]);
  translate([58, 265, 0])
    cube([1, 1, 8.16]);
  translate([59, 265, 0])
    cube([1, 1, 7.57]);
  translate([60, 265, 0])
    cube([1, 1, 6.94]);
  translate([61, 265, 0])
    cube([1, 1, 5.69]);
  translate([62, 265, 0])
    cube([1, 1, 4.59]);
  translate([63, 265, 0])
    cube([1, 1, 3.61]);
  translate([64, 265, 0])
    cube([1, 1, 2.86]);
  translate([65, 265, 0])
    cube([1, 1, 2.90]);
  translate([66, 265, 0])
    cube([1, 1, 2.94]);
  translate([67, 265, 0])
    cube([1, 1, 3.06]);
  translate([68, 265, 0])
    cube([1, 1, 3.25]);
  translate([69, 265, 0])
    cube([1, 1, 3.33]);
  translate([70, 265, 0])
    cube([1, 1, 3.53]);
  translate([71, 265, 0])
    cube([1, 1, 3.80]);
  translate([72, 265, 0])
    cube([1, 1, 4.00]);
  translate([73, 265, 0])
    cube([1, 1, 4.20]);
  translate([74, 265, 0])
    cube([1, 1, 4.43]);
  translate([75, 265, 0])
    cube([1, 1, 4.59]);
  translate([76, 265, 0])
    cube([1, 1, 4.71]);
  translate([77, 265, 0])
    cube([1, 1, 4.67]);
  translate([78, 265, 0])
    cube([1, 1, 4.67]);
  translate([79, 265, 0])
    cube([1, 1, 4.63]);
  translate([80, 265, 0])
    cube([1, 1, 4.71]);
  translate([81, 265, 0])
    cube([1, 1, 4.47]);
  translate([82, 265, 0])
    cube([1, 1, 4.47]);
  translate([83, 265, 0])
    cube([1, 1, 4.20]);
  translate([84, 265, 0])
    cube([1, 1, 4.12]);
  translate([85, 265, 0])
    cube([1, 1, 4.04]);
  translate([86, 265, 0])
    cube([1, 1, 4.00]);
  translate([87, 265, 0])
    cube([1, 1, 4.00]);
  translate([88, 265, 0])
    cube([1, 1, 3.84]);
  translate([89, 265, 0])
    cube([1, 1, 3.73]);
  translate([90, 265, 0])
    cube([1, 1, 3.61]);
  translate([91, 265, 0])
    cube([1, 1, 3.57]);
  translate([92, 265, 0])
    cube([1, 1, 3.61]);
  translate([93, 265, 0])
    cube([1, 1, 3.80]);
  translate([94, 265, 0])
    cube([1, 1, 3.96]);
  translate([95, 265, 0])
    cube([1, 1, 4.24]);
  translate([96, 265, 0])
    cube([1, 1, 5.06]);
  translate([97, 265, 0])
    cube([1, 1, 2.16]);
  translate([98, 265, 0])
    cube([1, 1, 2.16]);
  translate([99, 265, 0])
    cube([1, 1, 2.24]);
  translate([100, 265, 0])
    cube([1, 1, 2.24]);
  translate([101, 265, 0])
    cube([1, 1, 2.20]);
  translate([102, 265, 0])
    cube([1, 1, 2.24]);
  translate([103, 265, 0])
    cube([1, 1, 2.24]);
  translate([104, 265, 0])
    cube([1, 1, 2.24]);
  translate([105, 265, 0])
    cube([1, 1, 2.20]);
  translate([106, 265, 0])
    cube([1, 1, 2.24]);
  translate([107, 265, 0])
    cube([1, 1, 2.24]);
  translate([108, 265, 0])
    cube([1, 1, 2.27]);
  translate([109, 265, 0])
    cube([1, 1, 2.27]);
  translate([110, 265, 0])
    cube([1, 1, 2.24]);
  translate([111, 265, 0])
    cube([1, 1, 2.20]);
  translate([112, 265, 0])
    cube([1, 1, 2.20]);
  translate([113, 265, 0])
    cube([1, 1, 2.24]);
  translate([114, 265, 0])
    cube([1, 1, 2.24]);
  translate([115, 265, 0])
    cube([1, 1, 2.20]);
  translate([116, 265, 0])
    cube([1, 1, 2.16]);
  translate([117, 265, 0])
    cube([1, 1, 2.20]);
  translate([118, 265, 0])
    cube([1, 1, 2.16]);
  translate([119, 265, 0])
    cube([1, 1, 2.20]);
  translate([120, 265, 0])
    cube([1, 1, 2.20]);
  translate([121, 265, 0])
    cube([1, 1, 2.16]);
  translate([122, 265, 0])
    cube([1, 1, 2.16]);
  translate([123, 265, 0])
    cube([1, 1, 2.16]);
  translate([124, 265, 0])
    cube([1, 1, 2.27]);
  translate([125, 265, 0])
    cube([1, 1, 2.16]);
  translate([126, 265, 0])
    cube([1, 1, 5.57]);
  translate([127, 265, 0])
    cube([1, 1, 5.96]);
  translate([128, 265, 0])
    cube([1, 1, 5.92]);
  translate([129, 265, 0])
    cube([1, 1, 5.69]);
  translate([130, 265, 0])
    cube([1, 1, 5.29]);
  translate([131, 265, 0])
    cube([1, 1, 4.67]);
  translate([132, 265, 0])
    cube([1, 1, 5.14]);
  translate([133, 265, 0])
    cube([1, 1, 6.04]);
  translate([134, 265, 0])
    cube([1, 1, 5.37]);
  translate([135, 265, 0])
    cube([1, 1, 4.35]);
  translate([136, 265, 0])
    cube([1, 1, 3.22]);
  translate([137, 265, 0])
    cube([1, 1, 2.90]);
  translate([138, 265, 0])
    cube([1, 1, 3.06]);
  translate([139, 265, 0])
    cube([1, 1, 3.37]);
  translate([140, 265, 0])
    cube([1, 1, 3.53]);
  translate([141, 265, 0])
    cube([1, 1, 3.76]);
  translate([142, 265, 0])
    cube([1, 1, 3.92]);
  translate([143, 265, 0])
    cube([1, 1, 4.16]);
  translate([144, 265, 0])
    cube([1, 1, 4.12]);
  translate([145, 265, 0])
    cube([1, 1, 4.04]);
  translate([146, 265, 0])
    cube([1, 1, 3.96]);
  translate([147, 265, 0])
    cube([1, 1, 4.00]);
  translate([148, 265, 0])
    cube([1, 1, 4.08]);
  translate([149, 265, 0])
    cube([1, 1, 4.31]);
  translate([150, 265, 0])
    cube([1, 1, 4.39]);
  translate([151, 265, 0])
    cube([1, 1, 4.47]);
  translate([152, 265, 0])
    cube([1, 1, 4.63]);
  translate([153, 265, 0])
    cube([1, 1, 4.63]);
  translate([154, 265, 0])
    cube([1, 1, 4.59]);
  translate([155, 265, 0])
    cube([1, 1, 4.43]);
  translate([156, 265, 0])
    cube([1, 1, 4.27]);
  translate([157, 265, 0])
    cube([1, 1, 4.08]);
  translate([158, 265, 0])
    cube([1, 1, 4.16]);
  translate([159, 265, 0])
    cube([1, 1, 4.51]);
  translate([160, 265, 0])
    cube([1, 1, 5.06]);
  translate([161, 265, 0])
    cube([1, 1, 5.65]);
  translate([162, 265, 0])
    cube([1, 1, 6.24]);
  translate([163, 265, 0])
    cube([1, 1, 6.27]);
  translate([164, 265, 0])
    cube([1, 1, 2.04]);
  translate([165, 265, 0])
    cube([1, 1, 2.16]);
  translate([166, 265, 0])
    cube([1, 1, 2.16]);
  translate([167, 265, 0])
    cube([1, 1, 2.16]);
  translate([168, 265, 0])
    cube([1, 1, 2.16]);
  translate([169, 265, 0])
    cube([1, 1, 2.20]);
  translate([170, 265, 0])
    cube([1, 1, 2.20]);
  translate([171, 265, 0])
    cube([1, 1, 2.20]);
  translate([172, 265, 0])
    cube([1, 1, 2.16]);
  translate([173, 265, 0])
    cube([1, 1, 2.16]);
  translate([174, 265, 0])
    cube([1, 1, 2.16]);
  translate([175, 265, 0])
    cube([1, 1, 2.16]);
  translate([176, 265, 0])
    cube([1, 1, 2.16]);
  translate([177, 265, 0])
    cube([1, 1, 2.16]);
  translate([178, 265, 0])
    cube([1, 1, 2.16]);
  translate([179, 265, 0])
    cube([1, 1, 2.20]);
  translate([180, 265, 0])
    cube([1, 1, 2.20]);
  translate([181, 265, 0])
    cube([1, 1, 2.20]);
  translate([182, 265, 0])
    cube([1, 1, 2.20]);
  translate([183, 265, 0])
    cube([1, 1, 2.24]);
  translate([184, 265, 0])
    cube([1, 1, 2.16]);
  translate([185, 265, 0])
    cube([1, 1, 2.20]);
  translate([186, 265, 0])
    cube([1, 1, 2.20]);
  translate([187, 265, 0])
    cube([1, 1, 2.16]);
  translate([188, 265, 0])
    cube([1, 1, 2.16]);
  translate([189, 265, 0])
    cube([1, 1, 2.16]);
  translate([190, 265, 0])
    cube([1, 1, 2.20]);
  translate([191, 265, 0])
    cube([1, 1, 2.20]);
  translate([192, 265, 0])
    cube([1, 1, 2.20]);
  translate([193, 265, 0])
    cube([1, 1, 2.16]);
  translate([194, 265, 0])
    cube([1, 1, 2.24]);
  translate([195, 265, 0])
    cube([1, 1, 2.20]);
  translate([196, 265, 0])
    cube([1, 1, 2.24]);
  translate([197, 265, 0])
    cube([1, 1, 2.24]);
  translate([198, 265, 0])
    cube([1, 1, 2.20]);
  translate([199, 265, 0])
    cube([1, 1, 2.16]);
  translate([200, 265, 0])
    cube([1, 1, 2.20]);
  translate([201, 265, 0])
    cube([1, 1, 2.16]);
  translate([202, 265, 0])
    cube([1, 1, 2.16]);
  translate([203, 265, 0])
    cube([1, 1, 2.20]);
  translate([204, 265, 0])
    cube([1, 1, 2.20]);
  translate([205, 265, 0])
    cube([1, 1, 2.20]);
  translate([206, 265, 0])
    cube([1, 1, 2.20]);
  translate([207, 265, 0])
    cube([1, 1, 2.20]);
  translate([208, 265, 0])
    cube([1, 1, 2.20]);
  translate([209, 265, 0])
    cube([1, 1, 2.20]);
  translate([210, 265, 0])
    cube([1, 1, 2.20]);
  translate([211, 265, 0])
    cube([1, 1, 2.20]);
  translate([212, 265, 0])
    cube([1, 1, 2.24]);
  translate([213, 265, 0])
    cube([1, 1, 2.24]);
  translate([214, 265, 0])
    cube([1, 1, 2.20]);
  translate([215, 265, 0])
    cube([1, 1, 2.20]);
  translate([216, 265, 0])
    cube([1, 1, 2.20]);
  translate([217, 265, 0])
    cube([1, 1, 2.24]);
  translate([218, 265, 0])
    cube([1, 1, 2.24]);
  translate([219, 265, 0])
    cube([1, 1, 2.20]);
  translate([220, 265, 0])
    cube([1, 1, 2.20]);
  translate([221, 265, 0])
    cube([1, 1, 2.20]);
  translate([222, 265, 0])
    cube([1, 1, 2.20]);
  translate([223, 265, 0])
    cube([1, 1, 2.20]);
  translate([224, 265, 0])
    cube([1, 1, 2.20]);
  translate([225, 265, 0])
    cube([1, 1, 2.20]);
  translate([226, 265, 0])
    cube([1, 1, 2.20]);
  translate([227, 265, 0])
    cube([1, 1, 2.20]);
  translate([228, 265, 0])
    cube([1, 1, 2.16]);
  translate([229, 265, 0])
    cube([1, 1, 2.16]);
  translate([230, 265, 0])
    cube([1, 1, 2.16]);
  translate([231, 265, 0])
    cube([1, 1, 2.20]);
  translate([232, 265, 0])
    cube([1, 1, 2.16]);
  translate([233, 265, 0])
    cube([1, 1, 2.20]);
  translate([234, 265, 0])
    cube([1, 1, 2.20]);
  translate([235, 265, 0])
    cube([1, 1, 2.16]);
  translate([236, 265, 0])
    cube([1, 1, 2.20]);
  translate([237, 265, 0])
    cube([1, 1, 2.20]);
  translate([238, 265, 0])
    cube([1, 1, 2.16]);
  translate([239, 265, 0])
    cube([1, 1, 2.16]);
  translate([240, 265, 0])
    cube([1, 1, 2.16]);
  translate([241, 265, 0])
    cube([1, 1, 2.16]);
  translate([242, 265, 0])
    cube([1, 1, 2.16]);
  translate([243, 265, 0])
    cube([1, 1, 2.16]);
  translate([244, 265, 0])
    cube([1, 1, 2.16]);
  translate([245, 265, 0])
    cube([1, 1, 2.16]);
  translate([246, 265, 0])
    cube([1, 1, 2.16]);
  translate([0, 266, 0])
    cube([1, 1, 2.43]);
  translate([1, 266, 0])
    cube([1, 1, 2.39]);
  translate([2, 266, 0])
    cube([1, 1, 2.39]);
  translate([3, 266, 0])
    cube([1, 1, 2.39]);
  translate([4, 266, 0])
    cube([1, 1, 2.39]);
  translate([5, 266, 0])
    cube([1, 1, 2.39]);
  translate([6, 266, 0])
    cube([1, 1, 2.43]);
  translate([7, 266, 0])
    cube([1, 1, 2.43]);
  translate([8, 266, 0])
    cube([1, 1, 2.39]);
  translate([9, 266, 0])
    cube([1, 1, 2.43]);
  translate([10, 266, 0])
    cube([1, 1, 2.43]);
  translate([11, 266, 0])
    cube([1, 1, 2.39]);
  translate([12, 266, 0])
    cube([1, 1, 2.39]);
  translate([13, 266, 0])
    cube([1, 1, 2.39]);
  translate([14, 266, 0])
    cube([1, 1, 2.39]);
  translate([15, 266, 0])
    cube([1, 1, 2.39]);
  translate([16, 266, 0])
    cube([1, 1, 2.43]);
  translate([17, 266, 0])
    cube([1, 1, 2.39]);
  translate([18, 266, 0])
    cube([1, 1, 2.39]);
  translate([19, 266, 0])
    cube([1, 1, 2.39]);
  translate([20, 266, 0])
    cube([1, 1, 2.39]);
  translate([21, 266, 0])
    cube([1, 1, 2.39]);
  translate([22, 266, 0])
    cube([1, 1, 2.39]);
  translate([23, 266, 0])
    cube([1, 1, 2.39]);
  translate([24, 266, 0])
    cube([1, 1, 2.39]);
  translate([25, 266, 0])
    cube([1, 1, 2.39]);
  translate([26, 266, 0])
    cube([1, 1, 2.39]);
  translate([27, 266, 0])
    cube([1, 1, 2.39]);
  translate([28, 266, 0])
    cube([1, 1, 2.35]);
  translate([29, 266, 0])
    cube([1, 1, 2.43]);
  translate([30, 266, 0])
    cube([1, 1, 2.39]);
  translate([31, 266, 0])
    cube([1, 1, 2.39]);
  translate([32, 266, 0])
    cube([1, 1, 2.35]);
  translate([33, 266, 0])
    cube([1, 1, 2.31]);
  translate([34, 266, 0])
    cube([1, 1, 2.43]);
  translate([35, 266, 0])
    cube([1, 1, 2.39]);
  translate([36, 266, 0])
    cube([1, 1, 2.39]);
  translate([37, 266, 0])
    cube([1, 1, 2.39]);
  translate([38, 266, 0])
    cube([1, 1, 2.35]);
  translate([39, 266, 0])
    cube([1, 1, 2.39]);
  translate([40, 266, 0])
    cube([1, 1, 2.35]);
  translate([41, 266, 0])
    cube([1, 1, 2.35]);
  translate([42, 266, 0])
    cube([1, 1, 2.35]);
  translate([43, 266, 0])
    cube([1, 1, 2.27]);
  translate([44, 266, 0])
    cube([1, 1, 2.31]);
  translate([45, 266, 0])
    cube([1, 1, 2.31]);
  translate([46, 266, 0])
    cube([1, 1, 2.31]);
  translate([47, 266, 0])
    cube([1, 1, 2.31]);
  translate([48, 266, 0])
    cube([1, 1, 2.35]);
  translate([49, 266, 0])
    cube([1, 1, 2.27]);
  translate([50, 266, 0])
    cube([1, 1, 2.27]);
  translate([51, 266, 0])
    cube([1, 1, 2.27]);
  translate([52, 266, 0])
    cube([1, 1, 2.27]);
  translate([53, 266, 0])
    cube([1, 1, 2.27]);
  translate([54, 266, 0])
    cube([1, 1, 2.24]);
  translate([55, 266, 0])
    cube([1, 1, 2.16]);
  translate([56, 266, 0])
    cube([1, 1, 7.45]);
  translate([57, 266, 0])
    cube([1, 1, 7.69]);
  translate([58, 266, 0])
    cube([1, 1, 8.16]);
  translate([59, 266, 0])
    cube([1, 1, 7.61]);
  translate([60, 266, 0])
    cube([1, 1, 6.82]);
  translate([61, 266, 0])
    cube([1, 1, 5.80]);
  translate([62, 266, 0])
    cube([1, 1, 4.59]);
  translate([63, 266, 0])
    cube([1, 1, 3.57]);
  translate([64, 266, 0])
    cube([1, 1, 2.86]);
  translate([65, 266, 0])
    cube([1, 1, 2.78]);
  translate([66, 266, 0])
    cube([1, 1, 2.94]);
  translate([67, 266, 0])
    cube([1, 1, 3.02]);
  translate([68, 266, 0])
    cube([1, 1, 3.25]);
  translate([69, 266, 0])
    cube([1, 1, 3.45]);
  translate([70, 266, 0])
    cube([1, 1, 3.53]);
  translate([71, 266, 0])
    cube([1, 1, 3.80]);
  translate([72, 266, 0])
    cube([1, 1, 3.96]);
  translate([73, 266, 0])
    cube([1, 1, 4.20]);
  translate([74, 266, 0])
    cube([1, 1, 4.43]);
  translate([75, 266, 0])
    cube([1, 1, 4.59]);
  translate([76, 266, 0])
    cube([1, 1, 4.55]);
  translate([77, 266, 0])
    cube([1, 1, 4.67]);
  translate([78, 266, 0])
    cube([1, 1, 4.63]);
  translate([79, 266, 0])
    cube([1, 1, 4.63]);
  translate([80, 266, 0])
    cube([1, 1, 4.67]);
  translate([81, 266, 0])
    cube([1, 1, 4.55]);
  translate([82, 266, 0])
    cube([1, 1, 4.35]);
  translate([83, 266, 0])
    cube([1, 1, 4.24]);
  translate([84, 266, 0])
    cube([1, 1, 4.12]);
  translate([85, 266, 0])
    cube([1, 1, 4.16]);
  translate([86, 266, 0])
    cube([1, 1, 4.08]);
  translate([87, 266, 0])
    cube([1, 1, 3.96]);
  translate([88, 266, 0])
    cube([1, 1, 3.84]);
  translate([89, 266, 0])
    cube([1, 1, 3.69]);
  translate([90, 266, 0])
    cube([1, 1, 3.57]);
  translate([91, 266, 0])
    cube([1, 1, 3.57]);
  translate([92, 266, 0])
    cube([1, 1, 3.69]);
  translate([93, 266, 0])
    cube([1, 1, 3.84]);
  translate([94, 266, 0])
    cube([1, 1, 4.08]);
  translate([95, 266, 0])
    cube([1, 1, 4.63]);
  translate([96, 266, 0])
    cube([1, 1, 2.47]);
  translate([97, 266, 0])
    cube([1, 1, 2.20]);
  translate([98, 266, 0])
    cube([1, 1, 2.20]);
  translate([99, 266, 0])
    cube([1, 1, 2.24]);
  translate([100, 266, 0])
    cube([1, 1, 2.24]);
  translate([101, 266, 0])
    cube([1, 1, 2.24]);
  translate([102, 266, 0])
    cube([1, 1, 2.24]);
  translate([103, 266, 0])
    cube([1, 1, 2.24]);
  translate([104, 266, 0])
    cube([1, 1, 2.24]);
  translate([105, 266, 0])
    cube([1, 1, 2.24]);
  translate([106, 266, 0])
    cube([1, 1, 2.24]);
  translate([107, 266, 0])
    cube([1, 1, 2.24]);
  translate([108, 266, 0])
    cube([1, 1, 2.24]);
  translate([109, 266, 0])
    cube([1, 1, 2.24]);
  translate([110, 266, 0])
    cube([1, 1, 2.24]);
  translate([111, 266, 0])
    cube([1, 1, 2.20]);
  translate([112, 266, 0])
    cube([1, 1, 2.24]);
  translate([113, 266, 0])
    cube([1, 1, 2.24]);
  translate([114, 266, 0])
    cube([1, 1, 2.24]);
  translate([115, 266, 0])
    cube([1, 1, 2.20]);
  translate([116, 266, 0])
    cube([1, 1, 2.20]);
  translate([117, 266, 0])
    cube([1, 1, 2.24]);
  translate([118, 266, 0])
    cube([1, 1, 2.20]);
  translate([119, 266, 0])
    cube([1, 1, 2.20]);
  translate([120, 266, 0])
    cube([1, 1, 2.20]);
  translate([121, 266, 0])
    cube([1, 1, 2.20]);
  translate([122, 266, 0])
    cube([1, 1, 2.20]);
  translate([123, 266, 0])
    cube([1, 1, 2.20]);
  translate([124, 266, 0])
    cube([1, 1, 2.16]);
  translate([125, 266, 0])
    cube([1, 1, 2.20]);
  translate([126, 266, 0])
    cube([1, 1, 2.00]);
  translate([127, 266, 0])
    cube([1, 1, 5.76]);
  translate([128, 266, 0])
    cube([1, 1, 5.96]);
  translate([129, 266, 0])
    cube([1, 1, 5.80]);
  translate([130, 266, 0])
    cube([1, 1, 5.45]);
  translate([131, 266, 0])
    cube([1, 1, 4.90]);
  translate([132, 266, 0])
    cube([1, 1, 5.33]);
  translate([133, 266, 0])
    cube([1, 1, 6.24]);
  translate([134, 266, 0])
    cube([1, 1, 5.57]);
  translate([135, 266, 0])
    cube([1, 1, 4.43]);
  translate([136, 266, 0])
    cube([1, 1, 3.25]);
  translate([137, 266, 0])
    cube([1, 1, 2.94]);
  translate([138, 266, 0])
    cube([1, 1, 3.06]);
  translate([139, 266, 0])
    cube([1, 1, 3.37]);
  translate([140, 266, 0])
    cube([1, 1, 3.29]);
  translate([141, 266, 0])
    cube([1, 1, 3.80]);
  translate([142, 266, 0])
    cube([1, 1, 4.04]);
  translate([143, 266, 0])
    cube([1, 1, 4.27]);
  translate([144, 266, 0])
    cube([1, 1, 4.24]);
  translate([145, 266, 0])
    cube([1, 1, 4.12]);
  translate([146, 266, 0])
    cube([1, 1, 4.12]);
  translate([147, 266, 0])
    cube([1, 1, 4.04]);
  translate([148, 266, 0])
    cube([1, 1, 4.12]);
  translate([149, 266, 0])
    cube([1, 1, 4.24]);
  translate([150, 266, 0])
    cube([1, 1, 4.35]);
  translate([151, 266, 0])
    cube([1, 1, 4.43]);
  translate([152, 266, 0])
    cube([1, 1, 4.59]);
  translate([153, 266, 0])
    cube([1, 1, 4.59]);
  translate([154, 266, 0])
    cube([1, 1, 4.51]);
  translate([155, 266, 0])
    cube([1, 1, 4.47]);
  translate([156, 266, 0])
    cube([1, 1, 4.27]);
  translate([157, 266, 0])
    cube([1, 1, 4.24]);
  translate([158, 266, 0])
    cube([1, 1, 4.16]);
  translate([159, 266, 0])
    cube([1, 1, 4.55]);
  translate([160, 266, 0])
    cube([1, 1, 5.06]);
  translate([161, 266, 0])
    cube([1, 1, 5.57]);
  translate([162, 266, 0])
    cube([1, 1, 6.12]);
  translate([163, 266, 0])
    cube([1, 1, 6.08]);
  translate([164, 266, 0])
    cube([1, 1, 2.16]);
  translate([165, 266, 0])
    cube([1, 1, 2.20]);
  translate([166, 266, 0])
    cube([1, 1, 2.16]);
  translate([167, 266, 0])
    cube([1, 1, 2.16]);
  translate([168, 266, 0])
    cube([1, 1, 2.20]);
  translate([169, 266, 0])
    cube([1, 1, 2.16]);
  translate([170, 266, 0])
    cube([1, 1, 2.16]);
  translate([171, 266, 0])
    cube([1, 1, 2.16]);
  translate([172, 266, 0])
    cube([1, 1, 2.16]);
  translate([173, 266, 0])
    cube([1, 1, 2.16]);
  translate([174, 266, 0])
    cube([1, 1, 2.20]);
  translate([175, 266, 0])
    cube([1, 1, 2.16]);
  translate([176, 266, 0])
    cube([1, 1, 2.16]);
  translate([177, 266, 0])
    cube([1, 1, 2.20]);
  translate([178, 266, 0])
    cube([1, 1, 2.24]);
  translate([179, 266, 0])
    cube([1, 1, 2.20]);
  translate([180, 266, 0])
    cube([1, 1, 2.20]);
  translate([181, 266, 0])
    cube([1, 1, 2.20]);
  translate([182, 266, 0])
    cube([1, 1, 2.20]);
  translate([183, 266, 0])
    cube([1, 1, 2.20]);
  translate([184, 266, 0])
    cube([1, 1, 2.20]);
  translate([185, 266, 0])
    cube([1, 1, 2.20]);
  translate([186, 266, 0])
    cube([1, 1, 2.20]);
  translate([187, 266, 0])
    cube([1, 1, 2.20]);
  translate([188, 266, 0])
    cube([1, 1, 2.24]);
  translate([189, 266, 0])
    cube([1, 1, 2.20]);
  translate([190, 266, 0])
    cube([1, 1, 2.20]);
  translate([191, 266, 0])
    cube([1, 1, 2.20]);
  translate([192, 266, 0])
    cube([1, 1, 2.20]);
  translate([193, 266, 0])
    cube([1, 1, 2.20]);
  translate([194, 266, 0])
    cube([1, 1, 2.20]);
  translate([195, 266, 0])
    cube([1, 1, 2.20]);
  translate([196, 266, 0])
    cube([1, 1, 2.20]);
  translate([197, 266, 0])
    cube([1, 1, 2.20]);
  translate([198, 266, 0])
    cube([1, 1, 2.20]);
  translate([199, 266, 0])
    cube([1, 1, 2.20]);
  translate([200, 266, 0])
    cube([1, 1, 2.20]);
  translate([201, 266, 0])
    cube([1, 1, 2.20]);
  translate([202, 266, 0])
    cube([1, 1, 2.20]);
  translate([203, 266, 0])
    cube([1, 1, 2.20]);
  translate([204, 266, 0])
    cube([1, 1, 2.20]);
  translate([205, 266, 0])
    cube([1, 1, 2.20]);
  translate([206, 266, 0])
    cube([1, 1, 2.20]);
  translate([207, 266, 0])
    cube([1, 1, 2.24]);
  translate([208, 266, 0])
    cube([1, 1, 2.24]);
  translate([209, 266, 0])
    cube([1, 1, 2.20]);
  translate([210, 266, 0])
    cube([1, 1, 2.24]);
  translate([211, 266, 0])
    cube([1, 1, 2.24]);
  translate([212, 266, 0])
    cube([1, 1, 2.24]);
  translate([213, 266, 0])
    cube([1, 1, 2.24]);
  translate([214, 266, 0])
    cube([1, 1, 2.20]);
  translate([215, 266, 0])
    cube([1, 1, 2.20]);
  translate([216, 266, 0])
    cube([1, 1, 2.24]);
  translate([217, 266, 0])
    cube([1, 1, 2.20]);
  translate([218, 266, 0])
    cube([1, 1, 2.20]);
  translate([219, 266, 0])
    cube([1, 1, 2.20]);
  translate([220, 266, 0])
    cube([1, 1, 2.20]);
  translate([221, 266, 0])
    cube([1, 1, 2.20]);
  translate([222, 266, 0])
    cube([1, 1, 2.20]);
  translate([223, 266, 0])
    cube([1, 1, 2.20]);
  translate([224, 266, 0])
    cube([1, 1, 2.20]);
  translate([225, 266, 0])
    cube([1, 1, 2.20]);
  translate([226, 266, 0])
    cube([1, 1, 2.20]);
  translate([227, 266, 0])
    cube([1, 1, 2.20]);
  translate([228, 266, 0])
    cube([1, 1, 2.20]);
  translate([229, 266, 0])
    cube([1, 1, 2.20]);
  translate([230, 266, 0])
    cube([1, 1, 2.20]);
  translate([231, 266, 0])
    cube([1, 1, 2.20]);
  translate([232, 266, 0])
    cube([1, 1, 2.20]);
  translate([233, 266, 0])
    cube([1, 1, 2.16]);
  translate([234, 266, 0])
    cube([1, 1, 2.24]);
  translate([235, 266, 0])
    cube([1, 1, 2.20]);
  translate([236, 266, 0])
    cube([1, 1, 2.20]);
  translate([237, 266, 0])
    cube([1, 1, 2.20]);
  translate([238, 266, 0])
    cube([1, 1, 2.20]);
  translate([239, 266, 0])
    cube([1, 1, 2.20]);
  translate([240, 266, 0])
    cube([1, 1, 2.20]);
  translate([241, 266, 0])
    cube([1, 1, 2.20]);
  translate([242, 266, 0])
    cube([1, 1, 2.20]);
  translate([243, 266, 0])
    cube([1, 1, 2.16]);
  translate([244, 266, 0])
    cube([1, 1, 2.16]);
  translate([245, 266, 0])
    cube([1, 1, 2.20]);
  translate([246, 266, 0])
    cube([1, 1, 2.16]);
  translate([0, 267, 0])
    cube([1, 1, 2.43]);
  translate([1, 267, 0])
    cube([1, 1, 2.39]);
  translate([2, 267, 0])
    cube([1, 1, 2.39]);
  translate([3, 267, 0])
    cube([1, 1, 2.39]);
  translate([4, 267, 0])
    cube([1, 1, 2.43]);
  translate([5, 267, 0])
    cube([1, 1, 2.43]);
  translate([6, 267, 0])
    cube([1, 1, 2.43]);
  translate([7, 267, 0])
    cube([1, 1, 2.43]);
  translate([8, 267, 0])
    cube([1, 1, 2.43]);
  translate([9, 267, 0])
    cube([1, 1, 2.43]);
  translate([10, 267, 0])
    cube([1, 1, 2.43]);
  translate([11, 267, 0])
    cube([1, 1, 2.39]);
  translate([12, 267, 0])
    cube([1, 1, 2.39]);
  translate([13, 267, 0])
    cube([1, 1, 2.39]);
  translate([14, 267, 0])
    cube([1, 1, 2.39]);
  translate([15, 267, 0])
    cube([1, 1, 2.39]);
  translate([16, 267, 0])
    cube([1, 1, 2.43]);
  translate([17, 267, 0])
    cube([1, 1, 2.39]);
  translate([18, 267, 0])
    cube([1, 1, 2.39]);
  translate([19, 267, 0])
    cube([1, 1, 2.39]);
  translate([20, 267, 0])
    cube([1, 1, 2.39]);
  translate([21, 267, 0])
    cube([1, 1, 2.39]);
  translate([22, 267, 0])
    cube([1, 1, 2.39]);
  translate([23, 267, 0])
    cube([1, 1, 2.39]);
  translate([24, 267, 0])
    cube([1, 1, 2.39]);
  translate([25, 267, 0])
    cube([1, 1, 2.39]);
  translate([26, 267, 0])
    cube([1, 1, 2.39]);
  translate([27, 267, 0])
    cube([1, 1, 2.39]);
  translate([28, 267, 0])
    cube([1, 1, 2.43]);
  translate([29, 267, 0])
    cube([1, 1, 2.39]);
  translate([30, 267, 0])
    cube([1, 1, 2.39]);
  translate([31, 267, 0])
    cube([1, 1, 2.39]);
  translate([32, 267, 0])
    cube([1, 1, 2.43]);
  translate([33, 267, 0])
    cube([1, 1, 2.39]);
  translate([34, 267, 0])
    cube([1, 1, 2.35]);
  translate([35, 267, 0])
    cube([1, 1, 2.35]);
  translate([36, 267, 0])
    cube([1, 1, 2.39]);
  translate([37, 267, 0])
    cube([1, 1, 2.39]);
  translate([38, 267, 0])
    cube([1, 1, 2.35]);
  translate([39, 267, 0])
    cube([1, 1, 2.39]);
  translate([40, 267, 0])
    cube([1, 1, 2.35]);
  translate([41, 267, 0])
    cube([1, 1, 2.35]);
  translate([42, 267, 0])
    cube([1, 1, 2.35]);
  translate([43, 267, 0])
    cube([1, 1, 2.27]);
  translate([44, 267, 0])
    cube([1, 1, 2.31]);
  translate([45, 267, 0])
    cube([1, 1, 2.31]);
  translate([46, 267, 0])
    cube([1, 1, 2.31]);
  translate([47, 267, 0])
    cube([1, 1, 2.31]);
  translate([48, 267, 0])
    cube([1, 1, 2.35]);
  translate([49, 267, 0])
    cube([1, 1, 2.27]);
  translate([50, 267, 0])
    cube([1, 1, 2.27]);
  translate([51, 267, 0])
    cube([1, 1, 2.27]);
  translate([52, 267, 0])
    cube([1, 1, 2.27]);
  translate([53, 267, 0])
    cube([1, 1, 2.27]);
  translate([54, 267, 0])
    cube([1, 1, 2.24]);
  translate([55, 267, 0])
    cube([1, 1, 2.16]);
  translate([56, 267, 0])
    cube([1, 1, 7.88]);
  translate([57, 267, 0])
    cube([1, 1, 7.61]);
  translate([58, 267, 0])
    cube([1, 1, 8.08]);
  translate([59, 267, 0])
    cube([1, 1, 7.49]);
  translate([60, 267, 0])
    cube([1, 1, 6.67]);
  translate([61, 267, 0])
    cube([1, 1, 5.65]);
  translate([62, 267, 0])
    cube([1, 1, 4.43]);
  translate([63, 267, 0])
    cube([1, 1, 3.41]);
  translate([64, 267, 0])
    cube([1, 1, 2.82]);
  translate([65, 267, 0])
    cube([1, 1, 2.78]);
  translate([66, 267, 0])
    cube([1, 1, 3.06]);
  translate([67, 267, 0])
    cube([1, 1, 3.18]);
  translate([68, 267, 0])
    cube([1, 1, 3.37]);
  translate([69, 267, 0])
    cube([1, 1, 3.53]);
  translate([70, 267, 0])
    cube([1, 1, 3.57]);
  translate([71, 267, 0])
    cube([1, 1, 3.92]);
  translate([72, 267, 0])
    cube([1, 1, 3.96]);
  translate([73, 267, 0])
    cube([1, 1, 4.20]);
  translate([74, 267, 0])
    cube([1, 1, 4.43]);
  translate([75, 267, 0])
    cube([1, 1, 4.75]);
  translate([76, 267, 0])
    cube([1, 1, 4.94]);
  translate([77, 267, 0])
    cube([1, 1, 4.55]);
  translate([78, 267, 0])
    cube([1, 1, 4.63]);
  translate([79, 267, 0])
    cube([1, 1, 4.63]);
  translate([80, 267, 0])
    cube([1, 1, 4.63]);
  translate([81, 267, 0])
    cube([1, 1, 4.47]);
  translate([82, 267, 0])
    cube([1, 1, 4.31]);
  translate([83, 267, 0])
    cube([1, 1, 4.16]);
  translate([84, 267, 0])
    cube([1, 1, 4.20]);
  translate([85, 267, 0])
    cube([1, 1, 4.27]);
  translate([86, 267, 0])
    cube([1, 1, 4.12]);
  translate([87, 267, 0])
    cube([1, 1, 3.88]);
  translate([88, 267, 0])
    cube([1, 1, 3.80]);
  translate([89, 267, 0])
    cube([1, 1, 3.73]);
  translate([90, 267, 0])
    cube([1, 1, 3.65]);
  translate([91, 267, 0])
    cube([1, 1, 3.61]);
  translate([92, 267, 0])
    cube([1, 1, 3.76]);
  translate([93, 267, 0])
    cube([1, 1, 4.04]);
  translate([94, 267, 0])
    cube([1, 1, 4.24]);
  translate([95, 267, 0])
    cube([1, 1, 5.18]);
  translate([96, 267, 0])
    cube([1, 1, 2.27]);
  translate([97, 267, 0])
    cube([1, 1, 2.27]);
  translate([98, 267, 0])
    cube([1, 1, 2.27]);
  translate([99, 267, 0])
    cube([1, 1, 2.24]);
  translate([100, 267, 0])
    cube([1, 1, 2.24]);
  translate([101, 267, 0])
    cube([1, 1, 2.24]);
  translate([102, 267, 0])
    cube([1, 1, 2.24]);
  translate([103, 267, 0])
    cube([1, 1, 2.24]);
  translate([104, 267, 0])
    cube([1, 1, 2.27]);
  translate([105, 267, 0])
    cube([1, 1, 2.24]);
  translate([106, 267, 0])
    cube([1, 1, 2.24]);
  translate([107, 267, 0])
    cube([1, 1, 2.24]);
  translate([108, 267, 0])
    cube([1, 1, 2.24]);
  translate([109, 267, 0])
    cube([1, 1, 2.24]);
  translate([110, 267, 0])
    cube([1, 1, 2.24]);
  translate([111, 267, 0])
    cube([1, 1, 2.20]);
  translate([112, 267, 0])
    cube([1, 1, 2.24]);
  translate([113, 267, 0])
    cube([1, 1, 2.24]);
  translate([114, 267, 0])
    cube([1, 1, 2.24]);
  translate([115, 267, 0])
    cube([1, 1, 2.20]);
  translate([116, 267, 0])
    cube([1, 1, 2.20]);
  translate([117, 267, 0])
    cube([1, 1, 2.24]);
  translate([118, 267, 0])
    cube([1, 1, 2.20]);
  translate([119, 267, 0])
    cube([1, 1, 2.20]);
  translate([120, 267, 0])
    cube([1, 1, 2.20]);
  translate([121, 267, 0])
    cube([1, 1, 2.20]);
  translate([122, 267, 0])
    cube([1, 1, 2.20]);
  translate([123, 267, 0])
    cube([1, 1, 2.20]);
  translate([124, 267, 0])
    cube([1, 1, 2.24]);
  translate([125, 267, 0])
    cube([1, 1, 2.16]);
  translate([126, 267, 0])
    cube([1, 1, 1.88]);
  translate([127, 267, 0])
    cube([1, 1, 5.73]);
  translate([128, 267, 0])
    cube([1, 1, 5.96]);
  translate([129, 267, 0])
    cube([1, 1, 5.92]);
  translate([130, 267, 0])
    cube([1, 1, 5.57]);
  translate([131, 267, 0])
    cube([1, 1, 5.18]);
  translate([132, 267, 0])
    cube([1, 1, 5.53]);
  translate([133, 267, 0])
    cube([1, 1, 6.39]);
  translate([134, 267, 0])
    cube([1, 1, 5.80]);
  translate([135, 267, 0])
    cube([1, 1, 4.59]);
  translate([136, 267, 0])
    cube([1, 1, 3.29]);
  translate([137, 267, 0])
    cube([1, 1, 2.86]);
  translate([138, 267, 0])
    cube([1, 1, 3.14]);
  translate([139, 267, 0])
    cube([1, 1, 3.25]);
  translate([140, 267, 0])
    cube([1, 1, 3.29]);
  translate([141, 267, 0])
    cube([1, 1, 3.80]);
  translate([142, 267, 0])
    cube([1, 1, 3.96]);
  translate([143, 267, 0])
    cube([1, 1, 4.47]);
  translate([144, 267, 0])
    cube([1, 1, 4.39]);
  translate([145, 267, 0])
    cube([1, 1, 4.27]);
  translate([146, 267, 0])
    cube([1, 1, 4.27]);
  translate([147, 267, 0])
    cube([1, 1, 4.24]);
  translate([148, 267, 0])
    cube([1, 1, 4.24]);
  translate([149, 267, 0])
    cube([1, 1, 4.24]);
  translate([150, 267, 0])
    cube([1, 1, 4.24]);
  translate([151, 267, 0])
    cube([1, 1, 4.55]);
  translate([152, 267, 0])
    cube([1, 1, 4.59]);
  translate([153, 267, 0])
    cube([1, 1, 4.67]);
  translate([154, 267, 0])
    cube([1, 1, 4.55]);
  translate([155, 267, 0])
    cube([1, 1, 4.43]);
  translate([156, 267, 0])
    cube([1, 1, 4.31]);
  translate([157, 267, 0])
    cube([1, 1, 4.20]);
  translate([158, 267, 0])
    cube([1, 1, 4.16]);
  translate([159, 267, 0])
    cube([1, 1, 4.55]);
  translate([160, 267, 0])
    cube([1, 1, 5.14]);
  translate([161, 267, 0])
    cube([1, 1, 5.53]);
  translate([162, 267, 0])
    cube([1, 1, 6.08]);
  translate([163, 267, 0])
    cube([1, 1, 6.27]);
  translate([164, 267, 0])
    cube([1, 1, 2.16]);
  translate([165, 267, 0])
    cube([1, 1, 2.20]);
  translate([166, 267, 0])
    cube([1, 1, 2.16]);
  translate([167, 267, 0])
    cube([1, 1, 2.16]);
  translate([168, 267, 0])
    cube([1, 1, 2.20]);
  translate([169, 267, 0])
    cube([1, 1, 2.16]);
  translate([170, 267, 0])
    cube([1, 1, 2.16]);
  translate([171, 267, 0])
    cube([1, 1, 2.16]);
  translate([172, 267, 0])
    cube([1, 1, 2.16]);
  translate([173, 267, 0])
    cube([1, 1, 2.16]);
  translate([174, 267, 0])
    cube([1, 1, 2.20]);
  translate([175, 267, 0])
    cube([1, 1, 2.16]);
  translate([176, 267, 0])
    cube([1, 1, 2.16]);
  translate([177, 267, 0])
    cube([1, 1, 2.12]);
  translate([178, 267, 0])
    cube([1, 1, 2.20]);
  translate([179, 267, 0])
    cube([1, 1, 2.20]);
  translate([180, 267, 0])
    cube([1, 1, 2.20]);
  translate([181, 267, 0])
    cube([1, 1, 2.20]);
  translate([182, 267, 0])
    cube([1, 1, 2.20]);
  translate([183, 267, 0])
    cube([1, 1, 2.20]);
  translate([184, 267, 0])
    cube([1, 1, 2.20]);
  translate([185, 267, 0])
    cube([1, 1, 2.20]);
  translate([186, 267, 0])
    cube([1, 1, 2.20]);
  translate([187, 267, 0])
    cube([1, 1, 2.20]);
  translate([188, 267, 0])
    cube([1, 1, 2.24]);
  translate([189, 267, 0])
    cube([1, 1, 2.20]);
  translate([190, 267, 0])
    cube([1, 1, 2.20]);
  translate([191, 267, 0])
    cube([1, 1, 2.20]);
  translate([192, 267, 0])
    cube([1, 1, 2.20]);
  translate([193, 267, 0])
    cube([1, 1, 2.20]);
  translate([194, 267, 0])
    cube([1, 1, 2.20]);
  translate([195, 267, 0])
    cube([1, 1, 2.27]);
  translate([196, 267, 0])
    cube([1, 1, 2.20]);
  translate([197, 267, 0])
    cube([1, 1, 2.20]);
  translate([198, 267, 0])
    cube([1, 1, 2.20]);
  translate([199, 267, 0])
    cube([1, 1, 2.20]);
  translate([200, 267, 0])
    cube([1, 1, 2.20]);
  translate([201, 267, 0])
    cube([1, 1, 2.20]);
  translate([202, 267, 0])
    cube([1, 1, 2.20]);
  translate([203, 267, 0])
    cube([1, 1, 2.20]);
  translate([204, 267, 0])
    cube([1, 1, 2.20]);
  translate([205, 267, 0])
    cube([1, 1, 2.20]);
  translate([206, 267, 0])
    cube([1, 1, 2.20]);
  translate([207, 267, 0])
    cube([1, 1, 2.24]);
  translate([208, 267, 0])
    cube([1, 1, 2.24]);
  translate([209, 267, 0])
    cube([1, 1, 2.20]);
  translate([210, 267, 0])
    cube([1, 1, 2.24]);
  translate([211, 267, 0])
    cube([1, 1, 2.24]);
  translate([212, 267, 0])
    cube([1, 1, 2.24]);
  translate([213, 267, 0])
    cube([1, 1, 2.24]);
  translate([214, 267, 0])
    cube([1, 1, 2.20]);
  translate([215, 267, 0])
    cube([1, 1, 2.20]);
  translate([216, 267, 0])
    cube([1, 1, 2.24]);
  translate([217, 267, 0])
    cube([1, 1, 2.20]);
  translate([218, 267, 0])
    cube([1, 1, 2.20]);
  translate([219, 267, 0])
    cube([1, 1, 2.20]);
  translate([220, 267, 0])
    cube([1, 1, 2.20]);
  translate([221, 267, 0])
    cube([1, 1, 2.20]);
  translate([222, 267, 0])
    cube([1, 1, 2.20]);
  translate([223, 267, 0])
    cube([1, 1, 2.20]);
  translate([224, 267, 0])
    cube([1, 1, 2.20]);
  translate([225, 267, 0])
    cube([1, 1, 2.20]);
  translate([226, 267, 0])
    cube([1, 1, 2.20]);
  translate([227, 267, 0])
    cube([1, 1, 2.20]);
  translate([228, 267, 0])
    cube([1, 1, 2.20]);
  translate([229, 267, 0])
    cube([1, 1, 2.20]);
  translate([230, 267, 0])
    cube([1, 1, 2.20]);
  translate([231, 267, 0])
    cube([1, 1, 2.20]);
  translate([232, 267, 0])
    cube([1, 1, 2.20]);
  translate([233, 267, 0])
    cube([1, 1, 2.16]);
  translate([234, 267, 0])
    cube([1, 1, 2.24]);
  translate([235, 267, 0])
    cube([1, 1, 2.20]);
  translate([236, 267, 0])
    cube([1, 1, 2.20]);
  translate([237, 267, 0])
    cube([1, 1, 2.20]);
  translate([238, 267, 0])
    cube([1, 1, 2.20]);
  translate([239, 267, 0])
    cube([1, 1, 2.20]);
  translate([240, 267, 0])
    cube([1, 1, 2.20]);
  translate([241, 267, 0])
    cube([1, 1, 2.20]);
  translate([242, 267, 0])
    cube([1, 1, 2.20]);
  translate([243, 267, 0])
    cube([1, 1, 2.16]);
  translate([244, 267, 0])
    cube([1, 1, 2.16]);
  translate([245, 267, 0])
    cube([1, 1, 2.20]);
  translate([246, 267, 0])
    cube([1, 1, 2.16]);
  translate([0, 268, 0])
    cube([1, 1, 2.43]);
  translate([1, 268, 0])
    cube([1, 1, 2.43]);
  translate([2, 268, 0])
    cube([1, 1, 2.43]);
  translate([3, 268, 0])
    cube([1, 1, 2.43]);
  translate([4, 268, 0])
    cube([1, 1, 2.43]);
  translate([5, 268, 0])
    cube([1, 1, 2.43]);
  translate([6, 268, 0])
    cube([1, 1, 2.43]);
  translate([7, 268, 0])
    cube([1, 1, 2.43]);
  translate([8, 268, 0])
    cube([1, 1, 2.43]);
  translate([9, 268, 0])
    cube([1, 1, 2.43]);
  translate([10, 268, 0])
    cube([1, 1, 2.43]);
  translate([11, 268, 0])
    cube([1, 1, 2.39]);
  translate([12, 268, 0])
    cube([1, 1, 2.39]);
  translate([13, 268, 0])
    cube([1, 1, 2.43]);
  translate([14, 268, 0])
    cube([1, 1, 2.43]);
  translate([15, 268, 0])
    cube([1, 1, 2.43]);
  translate([16, 268, 0])
    cube([1, 1, 2.47]);
  translate([17, 268, 0])
    cube([1, 1, 2.39]);
  translate([18, 268, 0])
    cube([1, 1, 2.47]);
  translate([19, 268, 0])
    cube([1, 1, 2.39]);
  translate([20, 268, 0])
    cube([1, 1, 2.39]);
  translate([21, 268, 0])
    cube([1, 1, 2.39]);
  translate([22, 268, 0])
    cube([1, 1, 2.39]);
  translate([23, 268, 0])
    cube([1, 1, 2.39]);
  translate([24, 268, 0])
    cube([1, 1, 2.39]);
  translate([25, 268, 0])
    cube([1, 1, 2.39]);
  translate([26, 268, 0])
    cube([1, 1, 2.39]);
  translate([27, 268, 0])
    cube([1, 1, 2.39]);
  translate([28, 268, 0])
    cube([1, 1, 2.39]);
  translate([29, 268, 0])
    cube([1, 1, 2.39]);
  translate([30, 268, 0])
    cube([1, 1, 2.39]);
  translate([31, 268, 0])
    cube([1, 1, 2.39]);
  translate([32, 268, 0])
    cube([1, 1, 2.39]);
  translate([33, 268, 0])
    cube([1, 1, 2.39]);
  translate([34, 268, 0])
    cube([1, 1, 2.39]);
  translate([35, 268, 0])
    cube([1, 1, 2.39]);
  translate([36, 268, 0])
    cube([1, 1, 2.31]);
  translate([37, 268, 0])
    cube([1, 1, 2.31]);
  translate([38, 268, 0])
    cube([1, 1, 2.39]);
  translate([39, 268, 0])
    cube([1, 1, 2.39]);
  translate([40, 268, 0])
    cube([1, 1, 2.39]);
  translate([41, 268, 0])
    cube([1, 1, 2.35]);
  translate([42, 268, 0])
    cube([1, 1, 2.35]);
  translate([43, 268, 0])
    cube([1, 1, 2.35]);
  translate([44, 268, 0])
    cube([1, 1, 2.31]);
  translate([45, 268, 0])
    cube([1, 1, 2.35]);
  translate([46, 268, 0])
    cube([1, 1, 2.31]);
  translate([47, 268, 0])
    cube([1, 1, 2.31]);
  translate([48, 268, 0])
    cube([1, 1, 2.31]);
  translate([49, 268, 0])
    cube([1, 1, 2.31]);
  translate([50, 268, 0])
    cube([1, 1, 2.31]);
  translate([51, 268, 0])
    cube([1, 1, 2.31]);
  translate([52, 268, 0])
    cube([1, 1, 2.31]);
  translate([53, 268, 0])
    cube([1, 1, 2.31]);
  translate([54, 268, 0])
    cube([1, 1, 2.27]);
  translate([55, 268, 0])
    cube([1, 1, 2.24]);
  translate([56, 268, 0])
    cube([1, 1, 7.22]);
  translate([57, 268, 0])
    cube([1, 1, 7.61]);
  translate([58, 268, 0])
    cube([1, 1, 8.00]);
  translate([59, 268, 0])
    cube([1, 1, 7.57]);
  translate([60, 268, 0])
    cube([1, 1, 6.51]);
  translate([61, 268, 0])
    cube([1, 1, 5.53]);
  translate([62, 268, 0])
    cube([1, 1, 4.43]);
  translate([63, 268, 0])
    cube([1, 1, 3.33]);
  translate([64, 268, 0])
    cube([1, 1, 2.90]);
  translate([65, 268, 0])
    cube([1, 1, 2.78]);
  translate([66, 268, 0])
    cube([1, 1, 2.98]);
  translate([67, 268, 0])
    cube([1, 1, 3.22]);
  translate([68, 268, 0])
    cube([1, 1, 3.29]);
  translate([69, 268, 0])
    cube([1, 1, 3.57]);
  translate([70, 268, 0])
    cube([1, 1, 3.73]);
  translate([71, 268, 0])
    cube([1, 1, 3.84]);
  translate([72, 268, 0])
    cube([1, 1, 4.00]);
  translate([73, 268, 0])
    cube([1, 1, 4.20]);
  translate([74, 268, 0])
    cube([1, 1, 4.39]);
  translate([75, 268, 0])
    cube([1, 1, 4.51]);
  translate([76, 268, 0])
    cube([1, 1, 4.63]);
  translate([77, 268, 0])
    cube([1, 1, 4.63]);
  translate([78, 268, 0])
    cube([1, 1, 4.82]);
  translate([79, 268, 0])
    cube([1, 1, 4.55]);
  translate([80, 268, 0])
    cube([1, 1, 4.59]);
  translate([81, 268, 0])
    cube([1, 1, 4.47]);
  translate([82, 268, 0])
    cube([1, 1, 4.27]);
  translate([83, 268, 0])
    cube([1, 1, 4.16]);
  translate([84, 268, 0])
    cube([1, 1, 4.27]);
  translate([85, 268, 0])
    cube([1, 1, 4.39]);
  translate([86, 268, 0])
    cube([1, 1, 4.20]);
  translate([87, 268, 0])
    cube([1, 1, 3.96]);
  translate([88, 268, 0])
    cube([1, 1, 3.84]);
  translate([89, 268, 0])
    cube([1, 1, 3.69]);
  translate([90, 268, 0])
    cube([1, 1, 3.65]);
  translate([91, 268, 0])
    cube([1, 1, 3.61]);
  translate([92, 268, 0])
    cube([1, 1, 3.96]);
  translate([93, 268, 0])
    cube([1, 1, 4.20]);
  translate([94, 268, 0])
    cube([1, 1, 4.47]);
  translate([95, 268, 0])
    cube([1, 1, 2.12]);
  translate([96, 268, 0])
    cube([1, 1, 2.31]);
  translate([97, 268, 0])
    cube([1, 1, 2.27]);
  translate([98, 268, 0])
    cube([1, 1, 2.27]);
  translate([99, 268, 0])
    cube([1, 1, 2.27]);
  translate([100, 268, 0])
    cube([1, 1, 2.27]);
  translate([101, 268, 0])
    cube([1, 1, 2.24]);
  translate([102, 268, 0])
    cube([1, 1, 2.24]);
  translate([103, 268, 0])
    cube([1, 1, 2.27]);
  translate([104, 268, 0])
    cube([1, 1, 2.27]);
  translate([105, 268, 0])
    cube([1, 1, 2.27]);
  translate([106, 268, 0])
    cube([1, 1, 2.27]);
  translate([107, 268, 0])
    cube([1, 1, 2.24]);
  translate([108, 268, 0])
    cube([1, 1, 2.24]);
  translate([109, 268, 0])
    cube([1, 1, 2.31]);
  translate([110, 268, 0])
    cube([1, 1, 2.24]);
  translate([111, 268, 0])
    cube([1, 1, 2.24]);
  translate([112, 268, 0])
    cube([1, 1, 2.27]);
  translate([113, 268, 0])
    cube([1, 1, 2.24]);
  translate([114, 268, 0])
    cube([1, 1, 2.24]);
  translate([115, 268, 0])
    cube([1, 1, 2.24]);
  translate([116, 268, 0])
    cube([1, 1, 2.27]);
  translate([117, 268, 0])
    cube([1, 1, 2.27]);
  translate([118, 268, 0])
    cube([1, 1, 2.24]);
  translate([119, 268, 0])
    cube([1, 1, 2.24]);
  translate([120, 268, 0])
    cube([1, 1, 2.24]);
  translate([121, 268, 0])
    cube([1, 1, 2.20]);
  translate([122, 268, 0])
    cube([1, 1, 2.20]);
  translate([123, 268, 0])
    cube([1, 1, 2.20]);
  translate([124, 268, 0])
    cube([1, 1, 2.20]);
  translate([125, 268, 0])
    cube([1, 1, 2.24]);
  translate([126, 268, 0])
    cube([1, 1, 2.24]);
  translate([127, 268, 0])
    cube([1, 1, 2.24]);
  translate([128, 268, 0])
    cube([1, 1, 5.88]);
  translate([129, 268, 0])
    cube([1, 1, 5.84]);
  translate([130, 268, 0])
    cube([1, 1, 5.49]);
  translate([131, 268, 0])
    cube([1, 1, 5.25]);
  translate([132, 268, 0])
    cube([1, 1, 5.57]);
  translate([133, 268, 0])
    cube([1, 1, 6.39]);
  translate([134, 268, 0])
    cube([1, 1, 5.88]);
  translate([135, 268, 0])
    cube([1, 1, 4.63]);
  translate([136, 268, 0])
    cube([1, 1, 3.37]);
  translate([137, 268, 0])
    cube([1, 1, 2.86]);
  translate([138, 268, 0])
    cube([1, 1, 3.06]);
  translate([139, 268, 0])
    cube([1, 1, 3.10]);
  translate([140, 268, 0])
    cube([1, 1, 3.33]);
  translate([141, 268, 0])
    cube([1, 1, 3.80]);
  translate([142, 268, 0])
    cube([1, 1, 4.08]);
  translate([143, 268, 0])
    cube([1, 1, 4.35]);
  translate([144, 268, 0])
    cube([1, 1, 4.35]);
  translate([145, 268, 0])
    cube([1, 1, 4.39]);
  translate([146, 268, 0])
    cube([1, 1, 4.31]);
  translate([147, 268, 0])
    cube([1, 1, 4.27]);
  translate([148, 268, 0])
    cube([1, 1, 4.31]);
  translate([149, 268, 0])
    cube([1, 1, 4.24]);
  translate([150, 268, 0])
    cube([1, 1, 4.27]);
  translate([151, 268, 0])
    cube([1, 1, 4.39]);
  translate([152, 268, 0])
    cube([1, 1, 4.59]);
  translate([153, 268, 0])
    cube([1, 1, 4.51]);
  translate([154, 268, 0])
    cube([1, 1, 4.47]);
  translate([155, 268, 0])
    cube([1, 1, 4.51]);
  translate([156, 268, 0])
    cube([1, 1, 4.27]);
  translate([157, 268, 0])
    cube([1, 1, 4.12]);
  translate([158, 268, 0])
    cube([1, 1, 4.20]);
  translate([159, 268, 0])
    cube([1, 1, 4.67]);
  translate([160, 268, 0])
    cube([1, 1, 4.98]);
  translate([161, 268, 0])
    cube([1, 1, 5.57]);
  translate([162, 268, 0])
    cube([1, 1, 6.16]);
  translate([163, 268, 0])
    cube([1, 1, 4.39]);
  translate([164, 268, 0])
    cube([1, 1, 2.20]);
  translate([165, 268, 0])
    cube([1, 1, 2.16]);
  translate([166, 268, 0])
    cube([1, 1, 2.20]);
  translate([167, 268, 0])
    cube([1, 1, 2.20]);
  translate([168, 268, 0])
    cube([1, 1, 2.20]);
  translate([169, 268, 0])
    cube([1, 1, 2.16]);
  translate([170, 268, 0])
    cube([1, 1, 2.16]);
  translate([171, 268, 0])
    cube([1, 1, 2.16]);
  translate([172, 268, 0])
    cube([1, 1, 2.20]);
  translate([173, 268, 0])
    cube([1, 1, 2.16]);
  translate([174, 268, 0])
    cube([1, 1, 2.20]);
  translate([175, 268, 0])
    cube([1, 1, 2.24]);
  translate([176, 268, 0])
    cube([1, 1, 2.20]);
  translate([177, 268, 0])
    cube([1, 1, 2.20]);
  translate([178, 268, 0])
    cube([1, 1, 2.20]);
  translate([179, 268, 0])
    cube([1, 1, 2.20]);
  translate([180, 268, 0])
    cube([1, 1, 2.20]);
  translate([181, 268, 0])
    cube([1, 1, 2.20]);
  translate([182, 268, 0])
    cube([1, 1, 2.20]);
  translate([183, 268, 0])
    cube([1, 1, 2.20]);
  translate([184, 268, 0])
    cube([1, 1, 2.20]);
  translate([185, 268, 0])
    cube([1, 1, 2.16]);
  translate([186, 268, 0])
    cube([1, 1, 2.24]);
  translate([187, 268, 0])
    cube([1, 1, 2.20]);
  translate([188, 268, 0])
    cube([1, 1, 2.20]);
  translate([189, 268, 0])
    cube([1, 1, 2.20]);
  translate([190, 268, 0])
    cube([1, 1, 2.20]);
  translate([191, 268, 0])
    cube([1, 1, 2.20]);
  translate([192, 268, 0])
    cube([1, 1, 2.20]);
  translate([193, 268, 0])
    cube([1, 1, 2.20]);
  translate([194, 268, 0])
    cube([1, 1, 2.20]);
  translate([195, 268, 0])
    cube([1, 1, 2.24]);
  translate([196, 268, 0])
    cube([1, 1, 2.20]);
  translate([197, 268, 0])
    cube([1, 1, 2.20]);
  translate([198, 268, 0])
    cube([1, 1, 2.24]);
  translate([199, 268, 0])
    cube([1, 1, 2.24]);
  translate([200, 268, 0])
    cube([1, 1, 2.24]);
  translate([201, 268, 0])
    cube([1, 1, 2.16]);
  translate([202, 268, 0])
    cube([1, 1, 2.24]);
  translate([203, 268, 0])
    cube([1, 1, 2.20]);
  translate([204, 268, 0])
    cube([1, 1, 2.24]);
  translate([205, 268, 0])
    cube([1, 1, 2.24]);
  translate([206, 268, 0])
    cube([1, 1, 2.20]);
  translate([207, 268, 0])
    cube([1, 1, 2.24]);
  translate([208, 268, 0])
    cube([1, 1, 2.24]);
  translate([209, 268, 0])
    cube([1, 1, 2.24]);
  translate([210, 268, 0])
    cube([1, 1, 2.24]);
  translate([211, 268, 0])
    cube([1, 1, 2.24]);
  translate([212, 268, 0])
    cube([1, 1, 2.24]);
  translate([213, 268, 0])
    cube([1, 1, 2.24]);
  translate([214, 268, 0])
    cube([1, 1, 2.24]);
  translate([215, 268, 0])
    cube([1, 1, 2.24]);
  translate([216, 268, 0])
    cube([1, 1, 2.24]);
  translate([217, 268, 0])
    cube([1, 1, 2.27]);
  translate([218, 268, 0])
    cube([1, 1, 2.20]);
  translate([219, 268, 0])
    cube([1, 1, 2.24]);
  translate([220, 268, 0])
    cube([1, 1, 2.20]);
  translate([221, 268, 0])
    cube([1, 1, 2.20]);
  translate([222, 268, 0])
    cube([1, 1, 2.20]);
  translate([223, 268, 0])
    cube([1, 1, 2.20]);
  translate([224, 268, 0])
    cube([1, 1, 2.24]);
  translate([225, 268, 0])
    cube([1, 1, 2.16]);
  translate([226, 268, 0])
    cube([1, 1, 2.16]);
  translate([227, 268, 0])
    cube([1, 1, 2.16]);
  translate([228, 268, 0])
    cube([1, 1, 2.20]);
  translate([229, 268, 0])
    cube([1, 1, 2.24]);
  translate([230, 268, 0])
    cube([1, 1, 2.24]);
  translate([231, 268, 0])
    cube([1, 1, 2.20]);
  translate([232, 268, 0])
    cube([1, 1, 2.20]);
  translate([233, 268, 0])
    cube([1, 1, 2.20]);
  translate([234, 268, 0])
    cube([1, 1, 2.20]);
  translate([235, 268, 0])
    cube([1, 1, 2.20]);
  translate([236, 268, 0])
    cube([1, 1, 2.20]);
  translate([237, 268, 0])
    cube([1, 1, 2.20]);
  translate([238, 268, 0])
    cube([1, 1, 2.20]);
  translate([239, 268, 0])
    cube([1, 1, 2.20]);
  translate([240, 268, 0])
    cube([1, 1, 2.20]);
  translate([241, 268, 0])
    cube([1, 1, 2.20]);
  translate([242, 268, 0])
    cube([1, 1, 2.20]);
  translate([243, 268, 0])
    cube([1, 1, 2.20]);
  translate([244, 268, 0])
    cube([1, 1, 2.20]);
  translate([245, 268, 0])
    cube([1, 1, 2.20]);
  translate([246, 268, 0])
    cube([1, 1, 2.20]);
  translate([0, 269, 0])
    cube([1, 1, 2.39]);
  translate([1, 269, 0])
    cube([1, 1, 2.43]);
  translate([2, 269, 0])
    cube([1, 1, 2.43]);
  translate([3, 269, 0])
    cube([1, 1, 2.43]);
  translate([4, 269, 0])
    cube([1, 1, 2.43]);
  translate([5, 269, 0])
    cube([1, 1, 2.43]);
  translate([6, 269, 0])
    cube([1, 1, 2.43]);
  translate([7, 269, 0])
    cube([1, 1, 2.43]);
  translate([8, 269, 0])
    cube([1, 1, 2.43]);
  translate([9, 269, 0])
    cube([1, 1, 2.43]);
  translate([10, 269, 0])
    cube([1, 1, 2.43]);
  translate([11, 269, 0])
    cube([1, 1, 2.43]);
  translate([12, 269, 0])
    cube([1, 1, 2.43]);
  translate([13, 269, 0])
    cube([1, 1, 2.43]);
  translate([14, 269, 0])
    cube([1, 1, 2.43]);
  translate([15, 269, 0])
    cube([1, 1, 2.43]);
  translate([16, 269, 0])
    cube([1, 1, 2.43]);
  translate([17, 269, 0])
    cube([1, 1, 2.35]);
  translate([18, 269, 0])
    cube([1, 1, 2.43]);
  translate([19, 269, 0])
    cube([1, 1, 2.39]);
  translate([20, 269, 0])
    cube([1, 1, 2.35]);
  translate([21, 269, 0])
    cube([1, 1, 2.43]);
  translate([22, 269, 0])
    cube([1, 1, 2.35]);
  translate([23, 269, 0])
    cube([1, 1, 2.39]);
  translate([24, 269, 0])
    cube([1, 1, 2.39]);
  translate([25, 269, 0])
    cube([1, 1, 2.39]);
  translate([26, 269, 0])
    cube([1, 1, 2.39]);
  translate([27, 269, 0])
    cube([1, 1, 2.39]);
  translate([28, 269, 0])
    cube([1, 1, 2.39]);
  translate([29, 269, 0])
    cube([1, 1, 2.39]);
  translate([30, 269, 0])
    cube([1, 1, 2.39]);
  translate([31, 269, 0])
    cube([1, 1, 2.39]);
  translate([32, 269, 0])
    cube([1, 1, 2.39]);
  translate([33, 269, 0])
    cube([1, 1, 2.35]);
  translate([34, 269, 0])
    cube([1, 1, 2.39]);
  translate([35, 269, 0])
    cube([1, 1, 2.39]);
  translate([36, 269, 0])
    cube([1, 1, 2.39]);
  translate([37, 269, 0])
    cube([1, 1, 2.39]);
  translate([38, 269, 0])
    cube([1, 1, 2.39]);
  translate([39, 269, 0])
    cube([1, 1, 2.39]);
  translate([40, 269, 0])
    cube([1, 1, 2.31]);
  translate([41, 269, 0])
    cube([1, 1, 2.35]);
  translate([42, 269, 0])
    cube([1, 1, 2.35]);
  translate([43, 269, 0])
    cube([1, 1, 2.35]);
  translate([44, 269, 0])
    cube([1, 1, 2.35]);
  translate([45, 269, 0])
    cube([1, 1, 2.39]);
  translate([46, 269, 0])
    cube([1, 1, 2.31]);
  translate([47, 269, 0])
    cube([1, 1, 2.31]);
  translate([48, 269, 0])
    cube([1, 1, 2.31]);
  translate([49, 269, 0])
    cube([1, 1, 2.31]);
  translate([50, 269, 0])
    cube([1, 1, 2.31]);
  translate([51, 269, 0])
    cube([1, 1, 2.31]);
  translate([52, 269, 0])
    cube([1, 1, 2.31]);
  translate([53, 269, 0])
    cube([1, 1, 2.31]);
  translate([54, 269, 0])
    cube([1, 1, 2.35]);
  translate([55, 269, 0])
    cube([1, 1, 2.20]);
  translate([56, 269, 0])
    cube([1, 1, 7.29]);
  translate([57, 269, 0])
    cube([1, 1, 7.49]);
  translate([58, 269, 0])
    cube([1, 1, 8.00]);
  translate([59, 269, 0])
    cube([1, 1, 7.49]);
  translate([60, 269, 0])
    cube([1, 1, 6.31]);
  translate([61, 269, 0])
    cube([1, 1, 5.29]);
  translate([62, 269, 0])
    cube([1, 1, 4.35]);
  translate([63, 269, 0])
    cube([1, 1, 3.29]);
  translate([64, 269, 0])
    cube([1, 1, 2.86]);
  translate([65, 269, 0])
    cube([1, 1, 2.90]);
  translate([66, 269, 0])
    cube([1, 1, 3.06]);
  translate([67, 269, 0])
    cube([1, 1, 3.18]);
  translate([68, 269, 0])
    cube([1, 1, 3.25]);
  translate([69, 269, 0])
    cube([1, 1, 3.49]);
  translate([70, 269, 0])
    cube([1, 1, 3.73]);
  translate([71, 269, 0])
    cube([1, 1, 3.96]);
  translate([72, 269, 0])
    cube([1, 1, 4.16]);
  translate([73, 269, 0])
    cube([1, 1, 4.27]);
  translate([74, 269, 0])
    cube([1, 1, 4.39]);
  translate([75, 269, 0])
    cube([1, 1, 4.51]);
  translate([76, 269, 0])
    cube([1, 1, 4.55]);
  translate([77, 269, 0])
    cube([1, 1, 4.59]);
  translate([78, 269, 0])
    cube([1, 1, 4.59]);
  translate([79, 269, 0])
    cube([1, 1, 4.67]);
  translate([80, 269, 0])
    cube([1, 1, 4.59]);
  translate([81, 269, 0])
    cube([1, 1, 4.31]);
  translate([82, 269, 0])
    cube([1, 1, 4.35]);
  translate([83, 269, 0])
    cube([1, 1, 4.31]);
  translate([84, 269, 0])
    cube([1, 1, 4.43]);
  translate([85, 269, 0])
    cube([1, 1, 4.47]);
  translate([86, 269, 0])
    cube([1, 1, 4.27]);
  translate([87, 269, 0])
    cube([1, 1, 3.96]);
  translate([88, 269, 0])
    cube([1, 1, 3.84]);
  translate([89, 269, 0])
    cube([1, 1, 3.73]);
  translate([90, 269, 0])
    cube([1, 1, 3.69]);
  translate([91, 269, 0])
    cube([1, 1, 3.80]);
  translate([92, 269, 0])
    cube([1, 1, 4.16]);
  translate([93, 269, 0])
    cube([1, 1, 4.35]);
  translate([94, 269, 0])
    cube([1, 1, 4.90]);
  translate([95, 269, 0])
    cube([1, 1, 2.12]);
  translate([96, 269, 0])
    cube([1, 1, 2.27]);
  translate([97, 269, 0])
    cube([1, 1, 2.27]);
  translate([98, 269, 0])
    cube([1, 1, 2.27]);
  translate([99, 269, 0])
    cube([1, 1, 2.27]);
  translate([100, 269, 0])
    cube([1, 1, 2.27]);
  translate([101, 269, 0])
    cube([1, 1, 2.27]);
  translate([102, 269, 0])
    cube([1, 1, 2.27]);
  translate([103, 269, 0])
    cube([1, 1, 2.27]);
  translate([104, 269, 0])
    cube([1, 1, 2.27]);
  translate([105, 269, 0])
    cube([1, 1, 2.27]);
  translate([106, 269, 0])
    cube([1, 1, 2.27]);
  translate([107, 269, 0])
    cube([1, 1, 2.27]);
  translate([108, 269, 0])
    cube([1, 1, 2.27]);
  translate([109, 269, 0])
    cube([1, 1, 2.27]);
  translate([110, 269, 0])
    cube([1, 1, 2.27]);
  translate([111, 269, 0])
    cube([1, 1, 2.27]);
  translate([112, 269, 0])
    cube([1, 1, 2.24]);
  translate([113, 269, 0])
    cube([1, 1, 2.24]);
  translate([114, 269, 0])
    cube([1, 1, 2.24]);
  translate([115, 269, 0])
    cube([1, 1, 2.24]);
  translate([116, 269, 0])
    cube([1, 1, 2.27]);
  translate([117, 269, 0])
    cube([1, 1, 2.27]);
  translate([118, 269, 0])
    cube([1, 1, 2.27]);
  translate([119, 269, 0])
    cube([1, 1, 2.27]);
  translate([120, 269, 0])
    cube([1, 1, 2.27]);
  translate([121, 269, 0])
    cube([1, 1, 2.24]);
  translate([122, 269, 0])
    cube([1, 1, 2.24]);
  translate([123, 269, 0])
    cube([1, 1, 2.24]);
  translate([124, 269, 0])
    cube([1, 1, 2.20]);
  translate([125, 269, 0])
    cube([1, 1, 2.24]);
  translate([126, 269, 0])
    cube([1, 1, 2.24]);
  translate([127, 269, 0])
    cube([1, 1, 2.20]);
  translate([128, 269, 0])
    cube([1, 1, 6.43]);
  translate([129, 269, 0])
    cube([1, 1, 5.88]);
  translate([130, 269, 0])
    cube([1, 1, 5.49]);
  translate([131, 269, 0])
    cube([1, 1, 5.37]);
  translate([132, 269, 0])
    cube([1, 1, 5.65]);
  translate([133, 269, 0])
    cube([1, 1, 6.43]);
  translate([134, 269, 0])
    cube([1, 1, 5.92]);
  translate([135, 269, 0])
    cube([1, 1, 4.78]);
  translate([136, 269, 0])
    cube([1, 1, 3.37]);
  translate([137, 269, 0])
    cube([1, 1, 2.78]);
  translate([138, 269, 0])
    cube([1, 1, 2.98]);
  translate([139, 269, 0])
    cube([1, 1, 3.10]);
  translate([140, 269, 0])
    cube([1, 1, 3.37]);
  translate([141, 269, 0])
    cube([1, 1, 3.73]);
  translate([142, 269, 0])
    cube([1, 1, 3.84]);
  translate([143, 269, 0])
    cube([1, 1, 4.31]);
  translate([144, 269, 0])
    cube([1, 1, 4.43]);
  translate([145, 269, 0])
    cube([1, 1, 4.43]);
  translate([146, 269, 0])
    cube([1, 1, 4.47]);
  translate([147, 269, 0])
    cube([1, 1, 4.31]);
  translate([148, 269, 0])
    cube([1, 1, 4.24]);
  translate([149, 269, 0])
    cube([1, 1, 4.24]);
  translate([150, 269, 0])
    cube([1, 1, 4.24]);
  translate([151, 269, 0])
    cube([1, 1, 4.35]);
  translate([152, 269, 0])
    cube([1, 1, 4.43]);
  translate([153, 269, 0])
    cube([1, 1, 4.47]);
  translate([154, 269, 0])
    cube([1, 1, 4.51]);
  translate([155, 269, 0])
    cube([1, 1, 4.35]);
  translate([156, 269, 0])
    cube([1, 1, 4.16]);
  translate([157, 269, 0])
    cube([1, 1, 4.12]);
  translate([158, 269, 0])
    cube([1, 1, 4.20]);
  translate([159, 269, 0])
    cube([1, 1, 4.67]);
  translate([160, 269, 0])
    cube([1, 1, 5.22]);
  translate([161, 269, 0])
    cube([1, 1, 5.69]);
  translate([162, 269, 0])
    cube([1, 1, 6.20]);
  translate([163, 269, 0])
    cube([1, 1, 2.04]);
  translate([164, 269, 0])
    cube([1, 1, 2.20]);
  translate([165, 269, 0])
    cube([1, 1, 2.20]);
  translate([166, 269, 0])
    cube([1, 1, 2.20]);
  translate([167, 269, 0])
    cube([1, 1, 2.20]);
  translate([168, 269, 0])
    cube([1, 1, 2.20]);
  translate([169, 269, 0])
    cube([1, 1, 2.16]);
  translate([170, 269, 0])
    cube([1, 1, 2.16]);
  translate([171, 269, 0])
    cube([1, 1, 2.12]);
  translate([172, 269, 0])
    cube([1, 1, 2.16]);
  translate([173, 269, 0])
    cube([1, 1, 2.16]);
  translate([174, 269, 0])
    cube([1, 1, 2.16]);
  translate([175, 269, 0])
    cube([1, 1, 2.16]);
  translate([176, 269, 0])
    cube([1, 1, 2.20]);
  translate([177, 269, 0])
    cube([1, 1, 2.20]);
  translate([178, 269, 0])
    cube([1, 1, 2.20]);
  translate([179, 269, 0])
    cube([1, 1, 2.20]);
  translate([180, 269, 0])
    cube([1, 1, 2.16]);
  translate([181, 269, 0])
    cube([1, 1, 2.20]);
  translate([182, 269, 0])
    cube([1, 1, 2.20]);
  translate([183, 269, 0])
    cube([1, 1, 2.20]);
  translate([184, 269, 0])
    cube([1, 1, 2.20]);
  translate([185, 269, 0])
    cube([1, 1, 2.24]);
  translate([186, 269, 0])
    cube([1, 1, 2.24]);
  translate([187, 269, 0])
    cube([1, 1, 2.20]);
  translate([188, 269, 0])
    cube([1, 1, 2.20]);
  translate([189, 269, 0])
    cube([1, 1, 2.20]);
  translate([190, 269, 0])
    cube([1, 1, 2.20]);
  translate([191, 269, 0])
    cube([1, 1, 2.20]);
  translate([192, 269, 0])
    cube([1, 1, 2.20]);
  translate([193, 269, 0])
    cube([1, 1, 2.20]);
  translate([194, 269, 0])
    cube([1, 1, 2.20]);
  translate([195, 269, 0])
    cube([1, 1, 2.24]);
  translate([196, 269, 0])
    cube([1, 1, 2.20]);
  translate([197, 269, 0])
    cube([1, 1, 2.20]);
  translate([198, 269, 0])
    cube([1, 1, 2.24]);
  translate([199, 269, 0])
    cube([1, 1, 2.24]);
  translate([200, 269, 0])
    cube([1, 1, 2.24]);
  translate([201, 269, 0])
    cube([1, 1, 2.24]);
  translate([202, 269, 0])
    cube([1, 1, 2.24]);
  translate([203, 269, 0])
    cube([1, 1, 2.24]);
  translate([204, 269, 0])
    cube([1, 1, 2.24]);
  translate([205, 269, 0])
    cube([1, 1, 2.24]);
  translate([206, 269, 0])
    cube([1, 1, 2.24]);
  translate([207, 269, 0])
    cube([1, 1, 2.24]);
  translate([208, 269, 0])
    cube([1, 1, 2.24]);
  translate([209, 269, 0])
    cube([1, 1, 2.24]);
  translate([210, 269, 0])
    cube([1, 1, 2.24]);
  translate([211, 269, 0])
    cube([1, 1, 2.24]);
  translate([212, 269, 0])
    cube([1, 1, 2.24]);
  translate([213, 269, 0])
    cube([1, 1, 2.24]);
  translate([214, 269, 0])
    cube([1, 1, 2.27]);
  translate([215, 269, 0])
    cube([1, 1, 2.24]);
  translate([216, 269, 0])
    cube([1, 1, 2.24]);
  translate([217, 269, 0])
    cube([1, 1, 2.24]);
  translate([218, 269, 0])
    cube([1, 1, 2.24]);
  translate([219, 269, 0])
    cube([1, 1, 2.24]);
  translate([220, 269, 0])
    cube([1, 1, 2.24]);
  translate([221, 269, 0])
    cube([1, 1, 2.24]);
  translate([222, 269, 0])
    cube([1, 1, 2.20]);
  translate([223, 269, 0])
    cube([1, 1, 2.20]);
  translate([224, 269, 0])
    cube([1, 1, 2.24]);
  translate([225, 269, 0])
    cube([1, 1, 2.24]);
  translate([226, 269, 0])
    cube([1, 1, 2.24]);
  translate([227, 269, 0])
    cube([1, 1, 2.20]);
  translate([228, 269, 0])
    cube([1, 1, 2.24]);
  translate([229, 269, 0])
    cube([1, 1, 2.27]);
  translate([230, 269, 0])
    cube([1, 1, 2.24]);
  translate([231, 269, 0])
    cube([1, 1, 2.24]);
  translate([232, 269, 0])
    cube([1, 1, 2.20]);
  translate([233, 269, 0])
    cube([1, 1, 2.24]);
  translate([234, 269, 0])
    cube([1, 1, 2.24]);
  translate([235, 269, 0])
    cube([1, 1, 2.24]);
  translate([236, 269, 0])
    cube([1, 1, 2.27]);
  translate([237, 269, 0])
    cube([1, 1, 2.27]);
  translate([238, 269, 0])
    cube([1, 1, 2.20]);
  translate([239, 269, 0])
    cube([1, 1, 2.20]);
  translate([240, 269, 0])
    cube([1, 1, 2.24]);
  translate([241, 269, 0])
    cube([1, 1, 2.24]);
  translate([242, 269, 0])
    cube([1, 1, 2.24]);
  translate([243, 269, 0])
    cube([1, 1, 2.20]);
  translate([244, 269, 0])
    cube([1, 1, 2.24]);
  translate([245, 269, 0])
    cube([1, 1, 2.24]);
  translate([246, 269, 0])
    cube([1, 1, 2.20]);
}
